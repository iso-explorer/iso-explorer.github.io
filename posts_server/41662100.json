post_cb({"41662100": {"CommentCount": "4", "ViewCount": "57", "PostTypeId": "1", "ClosedDate": "2017-01-16T00:53:00.680", "LastEditorUserId": "5771029", "CreationDate": "2017-01-15T14:13:48.243", "LastActivityDate": "2017-01-15T23:53:23.280", "Title": "Operator overload between pointers", "LastEditDate": "2017-01-15T23:53:23.280", "Id": "41662100", "Score": "1", "Body": "<p>How can I overload operator + between two pointers pointing to a new class  object ?\ne.g</p>\n<pre><code>class A{\n\n}\n\nA* operator+(A* p1,A*p2){\n   return A;\n}\n</code></pre>\n<p>I'm using objects only with pointers so I need to use pointers.</p>\n", "Tags": "<c++><pointers><operator-overloading>", "OwnerUserId": "5676234", "AnswerCount": "1"}, "41662321": {"ParentId": "41662100", "CommentCount": "1", "Body": "<blockquote>\n<p id=\"so_41662100_41662321_0\">How can i overload operator + between two pointers?</p>\n</blockquote>\n<p>The standard doesn't allow for both parameters to the <code>operator+</code> to be pointers:</p>\n<blockquote>\n<p id=\"so_41662100_41662321_1\"><code>\u00a7[expr.add]/1</code> For addition, either both operands shall have arithmetic or\n  unscoped enumeration type, or <strong>one operand shall be a pointer</strong> to a\n  completely-defined object type and <strong>the other shall have integral or\n  unscoped enumeration type.</strong></p>\n</blockquote>\n", "OwnerUserId": "1460794", "PostTypeId": "2", "Id": "41662321", "Score": "1", "CreationDate": "2017-01-15T14:38:05.143", "LastActivityDate": "2017-01-15T14:38:05.143"}, "bq_ids": {"n4140": {"so_41662100_41662321_0": {"section_id": 583, "quality": 0.5714285714285714, "length": 4}, "so_41662100_41662321_1": {"section_id": 6138, "quality": 0.9130434782608695, "length": 21}}, "n3337": {"so_41662100_41662321_0": {"section_id": 573, "quality": 0.5714285714285714, "length": 4}, "so_41662100_41662321_1": {"section_id": 5902, "quality": 0.9130434782608695, "length": 21}}, "n4659": {"so_41662100_41662321_0": {"section_id": 606, "quality": 0.5714285714285714, "length": 4}, "so_41662100_41662321_1": {"section_id": 7635, "quality": 0.9130434782608695, "length": 21}}}});