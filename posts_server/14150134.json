post_cb({"14150169": {"ParentId": "14150134", "CommentCount": "0", "Body": "<p>According to the C++ standard, 13.2.1</p>\n<blockquote>\n<p id=\"so_14150134_14150169_0\">Two function declarations of the same name refer to the same function if they are in the same scope and have equivalent parameter declarations.</p>\n</blockquote>\n<p>This means that only the name and parameter types are considered; return type is not.</p>\n<p>This makes sense, because you can invoke a function with a return value, and disregard its return value. If language designers allowed overloads on the return type, compilers would not be able to resolve these overloads in some legitimate contexts.</p>\n", "OwnerUserId": "335858", "PostTypeId": "2", "Id": "14150169", "Score": "4", "CreationDate": "2013-01-04T02:12:10.720", "LastActivityDate": "2013-01-04T02:12:10.720"}, "14150159": {"ParentId": "14150134", "CommentCount": "0", "Body": "<p>You can't overload by return type because:</p>\n<pre><code>int main() {\n   f();  // call to void f\n   f();  // call to int returning one\n   f();  // call to void\n   return 0;\n}\n</code></pre>\n<p>Are all ambiguous.</p>\n<pre><code>float f() { return 0.0f; }\nchar  f() { return 'a';  }\nint   i = f();\n</code></pre>\n<p>is also ambiguous.</p>\n", "OwnerUserId": "390913", "PostTypeId": "2", "Id": "14150159", "Score": "2", "CreationDate": "2013-01-04T02:10:48.210", "LastActivityDate": "2013-01-04T02:10:48.210"}, "14150134": {"CommentCount": "1", "AcceptedAnswerId": "14150169", "CreationDate": "2013-01-04T02:06:52.827", "LastActivityDate": "2013-01-04T02:14:56.150", "PostTypeId": "1", "ViewCount": "57", "FavoriteCount": "0", "Title": "Why can't the compiler figure out the right overload for this function reference?", "Id": "14150134", "Score": "2", "Body": "<p>Why doesn't it choose the right overload? I get the errors:</p>\n<blockquote>\n<p id=\"so_14150134_14150134_0\"><code>main.cpp:4:7: error: new declaration \u2018int f()\u2019</code><br>\n<code>main.cpp:3:6: error: ambiguates old declaration \u2018void f()\u2019</code></br></p>\n</blockquote>\n<pre><code>void f() {}\nint f() { return 0; }\n\nint main() {\n\n    void (&amp;x)() = f;\n\n    x();\n\n}\n</code></pre>\n", "Tags": "<c++>", "OwnerUserId": "1935708", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_14150134_14150169_0": {"section_id": 559, "quality": 1.0, "length": 15}}, "n3337": {"so_14150134_14150169_0": {"section_id": 550, "quality": 1.0, "length": 15}}, "n4659": {"so_14150134_14150169_0": {"section_id": 582, "quality": 1.0, "length": 15}}}, "14150144": {"ParentId": "14150134", "CommentCount": "0", "Body": "<p>You can't overload by return type;  only by parameters.</p>\n", "OwnerUserId": "385478", "PostTypeId": "2", "Id": "14150144", "Score": "1", "CreationDate": "2013-01-04T02:08:04.887", "LastActivityDate": "2013-01-04T02:08:04.887"}});