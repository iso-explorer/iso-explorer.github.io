post_cb({"35375164": {"Id": "35375164", "PostTypeId": "2", "Body": "<p>There are no double conversions getting executed here.</p>\n<p>You have two individual conversions taking place, in two separate places.</p>\n<p>One conversion is in <code>B::operator int()</code>.</p>\n<p>The second conversion is in your <code>main()</code>.</p>\n<p>Let's try to think through this logically:</p>\n<p>Remove main() entirely from your translation unit. Do you see any double conversions?</p>\n<p>No.</p>\n<p>Now, let's create a header file containing the following bits, call it <code>structures.H</code>:</p>\n<pre><code>struct As\n{\n    operator int();\n};\n\nstruct Bs\n{\n    operator int();\n};\n</code></pre>\n<p>Now, create a <code>structures.C</code> file, containing the contents of each one of these operators:</p>\n<pre><code>#include &lt;structures.H&gt;\n\nB::operator int(){ std::cout&lt;&lt;\"operator As::int()\"&lt;&lt;std::endl; return 1; }\nA::operator int(){ std::cout&lt;&lt;\"operator Bs::int()\"&lt;&lt;std::endl; return As(); }\n</code></pre>\n<p>Ok, do you still see any double-conversions here? No.</p>\n<p>Now, create your main.C:</p>\n<pre><code>#include &lt;structures.H&gt;\n\nint main()\n{\n     int i=Bs();\n\n     return 0;\n}\n</code></pre>\n<p>Do you see any double conversions taking place here? No, even though what we have now, with the two translation units, the same exact code you started with.</p>\n", "LastEditorUserId": "3943312", "LastActivityDate": "2016-02-13T02:04:28.723", "Score": "5", "CreationDate": "2016-02-13T01:51:57.473", "ParentId": "35374810", "CommentCount": "3", "OwnerUserId": "3943312", "LastEditDate": "2016-02-13T02:04:28.723"}, "bq_ids": {"n4140": {"so_35374810_35374810_0": {"length": 11, "quality": 1.0, "section_id": 386}}, "n3337": {"so_35374810_35374810_0": {"length": 11, "quality": 1.0, "section_id": 377}}, "n4659": {"so_35374810_35374810_0": {"length": 11, "quality": 1.0, "section_id": 403}}}, "35375256": {"Id": "35375256", "PostTypeId": "2", "Body": "<p><code>int i=Bs();</code> invokes <code>Bs::operator int()</code> implicitly.</p>\n<p><code>return As()</code> invokes <code>As::operator int()</code> implicitly.  </p>\n<p>These are two separate expressions.</p>\n", "LastActivityDate": "2016-02-13T02:06:56.133", "CommentCount": "0", "CreationDate": "2016-02-13T02:06:56.133", "ParentId": "35374810", "Score": "2", "OwnerUserId": "12711"}, "35374810": {"ViewCount": "188", "Body": "<p>According to the working draft N3337 (the most similar draft to the published ISOC++11 standard) the answer is at most one.</p>\n<p><em>N3337</em>:</p>\n<blockquote>\n<p id=\"so_35374810_35374810_0\">At most one user-defined conversion (constructor or conversion\n  function) is implicitly applied to a single value.</p>\n<pre><code>[ Example:\n\nstruct X {\n    operator int();\n};\n\nstruct Y {\n    operator X();\n};\n\nY a;\nint b = a; // error\n           // a.operator X().operator int() not tried\n\nint c = X(a); // OK: a.operator X().operator int()\n\n\u2014end example ]\n</code></pre>\n</blockquote>\n<p>But according to the result of compiling <em>main.cpp</em> with <em>gcc (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4</em> and running <em>a.out</em> with the quoted statements in <em>Ubuntu 14.04.3 LTS</em>, the answer is not at most one.</p>\n<p><em>main.cpp</em>:</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct As\n{\n    operator int(){ std::cout&lt;&lt;\"operator As::int()\"&lt;&lt;std::endl; return 1; }\n};\n\nstruct Bs\n{\n    operator int(){ std::cout&lt;&lt;\"operator Bs::int()\"&lt;&lt;std::endl; return As(); }\n};\n\nint main()\n{\n     int i=Bs();\n\n     return 0;\n}\n</code></pre>\n<p>compiling and running from terminal:</p>\n<pre><code>$ g++ -std=c++11 main.cpp\n$ ./a.out\n</code></pre>\n<p>the result (output):</p>\n<pre><code>operator Bs::int()\noperator As::int()\n</code></pre>\n<p>Did I misunderstand something or is N3337 wrong or does gcc contains a bug?</p>\n", "AcceptedAnswerId": "35375164", "Title": "At most how many user-defined conversion operator can be implicitly applied during an implicit type conversion?", "CreationDate": "2016-02-13T01:01:38.560", "Id": "35374810", "CommentCount": "0", "LastEditDate": "2016-02-13T02:02:31.127", "PostTypeId": "1", "LastEditorUserId": "3943312", "LastActivityDate": "2016-02-13T02:06:56.133", "Score": "2", "OwnerUserId": "5137315", "Tags": "<c++><c++11><language-lawyer><implicit-conversion><g++4.8>", "AnswerCount": "2"}});