post_cb({"47278551": {"Id": "47278551", "PostTypeId": "2", "Body": "<p>Because <a href=\"http://en.cppreference.com/w/cpp/types/nullptr_t\" rel=\"nofollow noreferrer\">std::nullptr_t</a> is not a pointer type itself, but the type of the null pointer literal <code>nullptr</code>.</p>\n<blockquote>\n<p id=\"so_47278515_47278551_0\"><code>std::nullptr_t</code> is the type of the null pointer literal, <code>nullptr</code>. It is a distinct type that is not itself a pointer type or a pointer to member type.</p>\n</blockquote>\n<p>From the standard, <a href=\"http://eel.is/c++draft/support.types.nullptr#1\" rel=\"nofollow noreferrer\">21.2.3 Null pointers [support.types.nullptr]</a></p>\n<blockquote>\n<p id=\"so_47278515_47278551_1\">The type <code>nullptr_\u00adt</code> is a synonym for the type of a <code>nullptr</code> expression, and it has the characteristics described in [basic.fundamental] and [conv.ptr].</p>\n</blockquote>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2017-11-14T05:56:12.227", "Score": "3", "CreationDate": "2017-11-14T05:50:09.463", "ParentId": "47278515", "CommentCount": "0", "OwnerUserId": "3309790", "LastEditDate": "2017-11-14T05:56:12.227"}, "47278515": {"ViewCount": "288", "Body": "<p>I read about <code>std::is_pointer</code> in C++.</p>\n<p>Then I wrote the program and check whether <code>T</code> is a pointer type or not using <code>std::is_pointer</code>.</p>\n<pre><code>#include &lt;iostream&gt;\n\nint main() \n{\n    std::cout&lt;&lt;std::boolalpha;\n    std::cout&lt;&lt;\"char : \" &lt;&lt;std::is_pointer&lt;char&gt;::value&lt;&lt;std::endl; // OK\n    std::cout&lt;&lt;\"char * : \"&lt;&lt;std::is_pointer&lt;char *&gt;::value&lt;&lt;std::endl; // OK\n    std::cout&lt;&lt;\"char ** : \"&lt;&lt;std::is_pointer&lt;char **&gt;::value&lt;&lt;std::endl; // OK\n    std::cout&lt;&lt;\"char *** : \"&lt;&lt;std::is_pointer&lt;char ***&gt;::value&lt;&lt;std::endl; // OK\n    std::cout&lt;&lt;\"std::nullptr_t : \"&lt;&lt;std::is_pointer&lt;std::nullptr_t&gt;::value&lt;&lt;std::endl;  // Not ok, Why false??\n}\n</code></pre>\n<p><strong>Output</strong> : <a href=\"https://wandbox.org/permlink/5EoGQzKPdObB7NcF\" rel=\"nofollow noreferrer\">[Wandbox Demo]</a></p>\n<pre><code>char : false\nchar * : true\nchar ** : true\nchar *** : true\nstd::nullptr_t : false\n</code></pre>\n<p>Why is <code>std::is_pointer&lt;std::nullptr_t&gt;::value</code> equal to <code>false</code>?</p>\n", "AcceptedAnswerId": "47278564", "Title": "Why is \"std::is_pointer<std::nullptr_t>::value\" equal to false?", "CreationDate": "2017-11-14T05:47:19.040", "Id": "47278515", "CommentCount": "0", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2017-11-14T10:46:34.667", "LastEditorUserId": "6935629", "LastActivityDate": "2017-11-14T10:46:34.667", "Score": "6", "OwnerUserId": "6935629", "Tags": "<c++><function><c++11><pointers><nullptr>", "AnswerCount": "4"}, "47278564": {"Id": "47278564", "PostTypeId": "2", "Body": "<p>Because <code>std::nullptr_t</code> is <em>not a pointer type</em>. And <code>is_pointer</code> only evaluates to <code>true</code> for pointer types.</p>\n<p><code>nullptr_t</code> is convertible to a pointer, but it <em>isn't</em> a pointer. Indeed, <code>nullptr_t</code> is not a class type, integral, floating-point, enumerator, or any kind of type other than <code>is_null_pointer</code> type. It has its own unique classification in the categorization of types.</p>\n", "LastActivityDate": "2017-11-14T05:51:32.197", "CommentCount": "6", "CreationDate": "2017-11-14T05:51:32.197", "ParentId": "47278515", "Score": "18", "OwnerUserId": "734069"}, "bq_ids": {"n4140": {"so_47278515_47278557_0": {"length": 33, "quality": 0.8461538461538461, "section_id": 5366}, "so_47278515_47278551_0": {"length": 10, "quality": 0.7142857142857143, "section_id": 91}}, "n3337": {"so_47278515_47278551_0": {"length": 10, "quality": 0.7142857142857143, "section_id": 5162}, "so_47278515_47278557_0": {"length": 33, "quality": 0.8461538461538461, "section_id": 5162}}, "n4659": {"so_47278515_47278551_1": {"length": 8, "quality": 0.7272727272727273, "section_id": 8179}, "so_47278515_47278551_0": {"length": 10, "quality": 0.7142857142857143, "section_id": 6791}, "so_47278515_47278557_0": {"length": 33, "quality": 0.8461538461538461, "section_id": 6791}}}, "47278557": {"Id": "47278557", "PostTypeId": "2", "Body": "<p>Because it's not a pointer type. It's a distinct type that is implicitly convertible to any pointer type.</p>\n<p>As the note in <a href=\"https://timsong-cpp.github.io/cppwp/n4659/lex.nullptr#1\" rel=\"noreferrer\">[lex.nullptr]</a> summarizes:</p>\n<blockquote>\n<p id=\"so_47278515_47278557_0\">The pointer literal is the keyword nullptr. It is a prvalue of type\n  std\u200b::\u200bnullptr_\u00adt. [\u2009Note: std\u200b::\u200bnullptr_\u00adt is a distinct type that\n  is neither a pointer type nor a pointer to member type; rather, a\n  prvalue of this type is a null pointer constant and can be converted\n  to a null pointer value or null member pointer value. See [conv.ptr]\n  and [conv.mem]. \u2009\u2014\u2009end note\u2009]</p>\n</blockquote>\n", "LastEditorUserId": "817643", "LastActivityDate": "2017-11-14T05:57:30.653", "Score": "7", "CreationDate": "2017-11-14T05:50:29.290", "ParentId": "47278515", "CommentCount": "0", "OwnerUserId": "817643", "LastEditDate": "2017-11-14T05:57:30.653"}, "47278607": {"Id": "47278607", "PostTypeId": "2", "Body": "<p>As unintuitive as it sounds, <code>std::nullptr_t</code> is not a pointer type. For instance, <a href=\"https://godbolt.org/g/uUihH8\" rel=\"nofollow noreferrer\">you cannot dereference a <code>std::nullptr_t</code></a>, so it'd be pretty weird if <code>is_pointer_type&lt;nullptr_t&gt;::value</code> was <code>true</code>.</p>\n<p>It is merely convertible to any pointer type.</p>\n", "LastActivityDate": "2017-11-14T05:54:53.550", "CommentCount": "1", "CreationDate": "2017-11-14T05:54:53.550", "ParentId": "47278515", "Score": "4", "OwnerUserId": "251153"}});