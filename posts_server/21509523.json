post_cb({"21509530": {"ParentId": "21509523", "CommentCount": "1", "Body": "<p>Attempting to modify an object that was originally declared <code>const</code> gives you undefined behaviour.</p>\n<blockquote>\n<p id=\"so_21509523_21509530_0\"><em>\u00a77.1.6.1/4 [dcl.type.cv]</em> Except that any class member declared <code>mutable</code> can be modified, any attempt to modify a <code>const</code> object during its lifetime results in undefined behavior.</p>\n</blockquote>\n<p>Chances are, your compiler is replacing all occurences of <code>p</code> in your code with the value <code>20</code>, since you have promised that it will not change. So the line that prints <code>p</code> has changed to:</p>\n<pre><code>std::cout&lt;&lt;\"Value of p: \"&lt;&lt;20&lt;&lt;std::endl;\n</code></pre>\n<p>So it prints <code>20</code> regardless of whether you modified the original object. Of course, since you have undefined behaviour, this kind of reasoning is fruitless and you should not invoke undefined behaviour in your program.</p>\n", "OwnerUserId": "150634", "PostTypeId": "2", "Id": "21509530", "Score": "9", "CreationDate": "2014-02-02T10:34:51.533", "LastActivityDate": "2014-02-02T10:34:51.533"}, "21509523": {"CommentCount": "0", "ViewCount": "104", "CreationDate": "2014-02-02T10:33:19.660", "LastActivityDate": "2014-02-02T10:34:51.533", "Title": "pointer to a const int in c++", "AcceptedAnswerId": "21509530", "PostTypeId": "1", "Id": "21509523", "Score": "5", "Body": "<p>While I was learning about const variables in c++, I tried this :</p>\n<pre><code>#include &lt;iostream&gt;\n\nint main()\n{\n    const int p = 20;\n\n    int* a = const_cast&lt;int*&gt;(&amp;p);\n\n    *a = 10;\n\n    std::cout&lt;&lt;\"Value at a: \"&lt;&lt;(*a)&lt;&lt;std::endl;\n    std::cout&lt;&lt;\"Value of p: \"&lt;&lt;p&lt;&lt;std::endl;\n\n    std::cout&lt;&lt;\"Their addresses : \"&lt;&lt;std::endl;\n    std::cout&lt;&lt;a&lt;&lt;\" \"&lt;&lt;&amp;p&lt;&lt;std::endl;\n    return 0;\n}\n</code></pre>\n<p>and it produces the output:</p>\n<pre><code>Value at a: 10\nValue of p: 20\nTheir addresses : \n0x7fff4646d7d4 0x7fff4646d7d4\n</code></pre>\n<p>Seemingly I assigned the value 10 to the memory address of p, but their values come out different. Why is it so?</p>\n", "Tags": "<c++><pointers>", "OwnerUserId": "2286217", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_21509523_21509530_0": {"section_id": 5433, "quality": 0.8947368421052632, "length": 17}}, "n3337": {"so_21509523_21509530_0": {"section_id": 5228, "quality": 0.8947368421052632, "length": 17}}, "n4659": {"so_21509523_21509530_0": {"section_id": 6861, "quality": 0.8947368421052632, "length": 17}}}});