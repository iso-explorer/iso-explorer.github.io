post_cb({"bq_ids": {"n4140": {"so_29576750_29576804_0": {"length": 39, "quality": 0.975, "section_id": 254}}, "n3337": {"so_29576750_29576804_0": {"length": 39, "quality": 0.975, "section_id": 245}}, "n4659": {"so_29576750_29576804_0": {"length": 39, "quality": 0.975, "section_id": 261}}}, "29576750": {"ViewCount": "573", "Body": "<p>I have a project on linux that builds into static library, which then I want to include in unit test project and in app project. </p>\n<p>In this library I have something like that: \n</p>\n<pre><code>template&lt;class T&gt; class A\n{\npublic: \n    virtual T doStuff() = 0;\n    virtual void doOther(T a) = 0;\nprotected:\n    A() { ... }\n};\n\nclass B : public A&lt;int&gt;\n{\npublic:\n    B() { ... }\n    virtual int doStuff() { ... }\n    virtual void doOther(int a) { ... }\n\n};\n</code></pre>\n<p>I am getting compilation error: <code>undefined reference to A&lt;int&gt;::A()</code> in my lib. \nI'm guessing it has something to do with template generation, and also can I override virtual functions like that?</p>\n", "AcceptedAnswerId": "29576804", "Title": "How to inherit template abstract class with a class with template secification", "CreationDate": "2015-04-11T10:21:32.520", "Id": "29576750", "CommentCount": "3", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2015-04-11T16:34:12.413", "LastEditorUserId": "3002139", "LastActivityDate": "2015-04-11T16:34:12.413", "Score": "0", "OwnerUserId": "1688694", "Tags": "<c++><templates><inheritance><abstract-class>", "AnswerCount": "1"}, "29576804": {"Id": "29576804", "PostTypeId": "2", "Body": "<p>templates are generated during compile time and needs to be implemented in the same translation unit they are prototyped. So, if you are including a declaration of a templated class, you also need to include the definition.</p>\n<p>So, it would be prudent to have both the declaration and definition in the same header file, so that, any module that intends to use it, when compiled can generate the definition as required.</p>\n<p>Refer:</p>\n<p><strong>14.7.2 Explicit instantiation [temp.explicit]</strong></p>\n<blockquote>\n<p id=\"so_29576750_29576804_0\">For a given set of template arguments, if an explicit instantiation of\n  a template appears after a declaration of an explicit specialization\n  for that template, the explicit instantiation has no effect.\n  <strong>Otherwise, for an explicit instantiation definition the definition of\n  a function template, a member function template, or a member function\n  or static data member of a class template shall be present in every\n  translation unit in which it is explicitly instantiated.</strong></p>\n</blockquote>\n", "LastEditorUserId": "977038", "LastActivityDate": "2015-04-11T11:08:46.327", "Score": "0", "CreationDate": "2015-04-11T10:27:10.487", "ParentId": "29576750", "CommentCount": "3", "LastEditDate": "2015-04-11T11:08:46.327", "OwnerUserId": "977038"}});