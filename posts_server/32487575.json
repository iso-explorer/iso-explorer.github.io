post_cb({"32487756": {"ParentId": "32487575", "CommentCount": "0", "Body": "<p>Actually, as a result of <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4371.html\">N4371</a> we have (from N4527, [vector.overview], will be in C++17):</p>\n<blockquote>\n<p id=\"so_32487575_32487756_0\">An incomplete type <code>T</code> may be used when instantiating vector if the allocator satisfies the allocator completeness\n  requirements 17.6.3.5.1. <code>T</code> shall be complete before any member of the resulting specialization of\n  vector is referenced.</p>\n</blockquote>\n<p>Prior to this, <code>vector</code> could not be constructed with an incomplete type (which <code>tree_node</code> is at that point), and that would be undefined behavior. </p>\n", "OwnerUserId": "2069064", "PostTypeId": "2", "Id": "32487756", "Score": "9", "CreationDate": "2015-09-09T19:31:21.630", "LastActivityDate": "2015-09-09T19:31:21.630"}, "32487575": {"CommentCount": "4", "ViewCount": "549", "LastEditDate": "2017-05-23T12:22:50.437", "LastEditorUserId": "-1", "CreationDate": "2015-09-09T19:20:00.437", "LastActivityDate": "2015-09-13T18:40:47.913", "PostTypeId": "1", "FavoriteCount": "1", "Title": "class (or struct) self-reference by template", "Id": "32487575", "OwnerUserId": "86967", "Body": "<p>Is the following legal?</p>\n<pre><code>template&lt; typename T &gt;\nstruct tree_node\n   {\n   T t;\n   std::vector&lt;tree_node&gt; children;\n   };\n</code></pre>\n<p>A comment to <a href=\"https://stackoverflow.com/a/15473485/86967\">this post</a> seems to suggest that it is not.</p>\n<hr>\n<p>EDIT: This doesn't strike me as an \"undefined behavior\" type of scenario.  The intended semantics are unambiguous.  If it is an invalid usage of an incomplete type then it should be a compile-time error.</p>\n<p><a href=\"https://ideone.com/JPO782\" rel=\"nofollow noreferrer\">In my tests</a> this seems to work fine (I have used both <a href=\"https://en.wikipedia.org/wiki/GNU_Compiler_Collection\" rel=\"nofollow noreferrer\">GCC</a> and <a href=\"https://en.wikipedia.org/wiki/Clang\" rel=\"nofollow noreferrer\">Clang</a> -- both with <code>-Wall -Werror -std=c++11</code>).</p>\n<p>Is there something in the language definition (prior to C++17) that directly or indirectly specifies this as undefined behavior, or is it just <em>under-specified</em>?</p>\n<hr>\n<p>Keep in mind that this is very similar, structurally, to something like the following:</p>\n<pre><code>typedef int T;\nstruct tree_node;\n\nstruct tree_node\n   {\n   T t;\n   tree_node * children;\n   }\n</code></pre>\n</hr></hr>", "Tags": "<c++><class><language-lawyer><self-reference>", "Score": "8", "AnswerCount": "1"}, "bq_ids": {"n4659": {"so_32487575_32487756_0": {"section_id": 1018, "quality": 0.9473684210526315, "length": 18}}}});