post_cb({"34329221": {"ParentId": "34329002", "CommentCount": "1", "Body": "<p>This is a known bug in Clang, bug reports <a href=\"https://llvm.org/bugs/show_bug.cgi?id=23253\" rel=\"nofollow\">23253</a>, 23254 and 13403 are all reports of the issue. Ironically, this question is actually a duplicate of <a href=\"https://stackoverflow.com/questions/29681449/program-being-compiled-differently-in-3-major-c-compilers-which-one-is-right\">Program being compiled differently in 3 major C++ compilers. Which one is right?</a>.</p>\n", "OwnerUserId": "5689922", "PostTypeId": "2", "Id": "34329221", "Score": "3", "CreationDate": "2015-12-17T07:47:19.213", "LastActivityDate": "2015-12-17T07:47:19.213"}, "34329155": {"ParentId": "34329002", "CommentCount": "1", "Body": "<p>According to the standard 12.1/p2 Constructors [class.ctor] (<strong>Emphasis Mine</strong>):</p>\n<blockquote>\n<p id=\"so_34329002_34329155_0\">A constructor is used to initialize objects of its class type.\n  <strong>Because constructors do not have names, they are never found during name lookup;</strong> however an explicit type conversion using the\n  functional notation (5.2.3) will cause a constructor to be called to\n  initialize an object. [ Note: For initialization of objects of class\n  type see 12.6. \u2014 end note ]</p>\n</blockquote>\n<p>Thus, you can't call a constructor directly, because constructors do not have names and they are never found during name lookup.</p>\n<p>Consequently, GCC is conforming while CLANG and VC++ are not.</p>\n", "OwnerUserId": "2352671", "PostTypeId": "2", "Id": "34329155", "Score": "3", "CreationDate": "2015-12-17T07:43:16.360", "LastActivityDate": "2015-12-17T07:43:16.360"}, "bq_ids": {"n4140": {"so_34329002_34329155_0": {"section_id": 367, "quality": 0.85, "length": 34}}, "n3337": {"so_34329002_34329155_0": {"section_id": 356, "quality": 0.85, "length": 34}}, "n4659": {"so_34329002_34329155_0": {"section_id": 379, "quality": 0.85, "length": 34}}}, "34329002": {"CommentCount": "4", "AcceptedAnswerId": "34329221", "PostTypeId": "1", "ClosedDate": "2015-12-17T07:48:57.703", "LastEditorUserId": "2659313", "CreationDate": "2015-12-17T07:33:45.800", "LastActivityDate": "2015-12-17T07:47:19.213", "LastEditDate": "2015-12-17T07:38:53.133", "ViewCount": "82", "FavoriteCount": "1", "Title": "Calling non static function or constructor using \"class::func()\" from outside", "Id": "34329002", "Score": "3", "Body": "<p>I saw this snippet on Meeting C++ (@meetingcpp)</p>\n<p>Following code compiles fine on <a href=\"https://goo.gl/QDCoaQ\" rel=\"nofollow\">clang</a> and MSVC (Can try <a href=\"http://webcompiler.cloudapp.net/\" rel=\"nofollow\">here</a>) but fails on <a href=\"https://goo.gl/bDI5gA\" rel=\"nofollow\">gcc</a> and icc.</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nstruct B {};\nstruct C {\n    C() { cout &lt;&lt; \"C()\\n\"; }\n    C(B *) { cout &lt;&lt; \"C(B *)\\n\"; }\n};\n\nB *p = nullptr;\n\nint main() {\n    C::C(p);\n    return 0;\n}\n</code></pre>\n<p>Is this a known bug in Clang and MSVC or there are any chances this code may be legal?</p>\n<p>Type of <code>p</code> is <code>B *</code>, but <code>C::C</code> should not compile?</p>\n", "Tags": "<c++><gcc><clang><language-lawyer><c++14>", "OwnerUserId": "2659313", "AnswerCount": "2"}});