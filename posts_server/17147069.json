post_cb({"17147070": {"ParentId": "17147069", "PostTypeId": "2", "CommentCount": "9", "Body": "<p>Because in the same paragraph, it is also mentioned that <code>this</code> is a <code>prvalue</code> (\"pure rvalue\"). </p>\n<p>Examples mentioned in the standard for pure rvalue are the result of calling a function which does not return a reference, or literals like <code>1</code>, <code>true</code> or <code>3.5f</code>. The <code>this</code>-pointer is not a variable, it's more like a literal that expands to the <em>address of the object for which the function is called</em> ([class.this]). And like e.g. literal <code>true</code> has type <code>bool</code> and <em>not</em> <code>bool const</code>, <code>this</code> is of type <code>X*</code> and <em>not</em> <code>X*const</code>.</p>\n", "OwnerUserId": "76722", "LastEditorUserId": "76722", "LastEditDate": "2014-04-23T07:20:31.860", "Id": "17147070", "Score": "45", "CreationDate": "2013-06-17T12:04:55.827", "LastActivityDate": "2014-04-23T07:20:31.860"}, "17147069": {"CommentCount": "3", "AcceptedAnswerId": "17147070", "PostTypeId": "1", "LastEditorUserId": "76722", "CreationDate": "2013-06-17T12:04:55.827", "LastActivityDate": "2014-04-23T07:20:31.860", "LastEditDate": "2013-06-20T06:40:11.790", "ViewCount": "644", "FavoriteCount": "4", "Title": "If `this` is not const, why can't I modify it?", "Id": "17147069", "Score": "25", "Body": "<p>In <em>The <code>this</code> pointer</em> [class.this], the C++ standard states:</p>\n<blockquote>\n<p id=\"so_17147069_17147069_0\">The type of <code>this</code> in a member function of\n  a class <strong><code>X</code></strong> is <strong><code>X*</code></strong>.</p>\n</blockquote>\n<p>i.e. <code>this</code> is not <code>const</code>. But why is it then that </p>\n<pre><code>struct M {\n    M() { this = new M; }\n};\n</code></pre>\n<p>gives</p>\n<pre><code>error: invalid lvalue in assignment  &lt;-- gcc\n'=' : left operand must be l-value   &lt;-- VC++\n'=' : left operand must be l-value   &lt;-- clang++\n'=' : left operand must be l-value   &lt;-- ICC\n(source: some online compiler frontends)\n</code></pre>\n<p>In other words, <code>this</code> is not <code>const</code>, but it really is!</p>\n", "Tags": "<c++><this-pointer>", "OwnerUserId": "76722", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_17147069_17147069_0": {"section_id": 568, "quality": 0.8, "length": 4}}, "n3337": {"so_17147069_17147069_0": {"section_id": 106, "quality": 0.8, "length": 4}}, "n4659": {"so_17147069_17147069_0": {"section_id": 204, "quality": 0.8, "length": 4}}}});