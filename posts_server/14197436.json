post_cb({"bq_ids": {"n4140": {"so_14197436_14197544_0": {"length": 9, "quality": 1.0, "section_id": 65}}, "n3337": {"so_14197436_14197544_0": {"length": 9, "quality": 1.0, "section_id": 60}}, "n4659": {"so_14197436_14197544_0": {"length": 9, "quality": 1.0, "section_id": 67}}}, "14197436": {"ViewCount": "1496", "Body": "<p>When compiling the following source code with gcc there are no errors / warnings:</p>\n<pre><code>template&lt; typename T = int &gt; T func( );\ntemplate&lt; typename T = int &gt; T func( );\n</code></pre>\n<p>When I compile the same source code with clang++, I got the following error:</p>\n<pre><code>redeftempparam.cc:2:24: error: template parameter redefines default argument\ntemplate&lt; typename T = int &gt; T func( );\n                       ^\nredeftempparam.cc:1:24: note: previous default template argument defined here\ntemplate&lt; typename T = int &gt; T func( );\n                       ^\n1 error generated.\n</code></pre>\n<p>Command to compile</p>\n<pre><code>[clang++|g++] -Wall -Werror -std=c++11 redeftempparam.cc\n</code></pre>\n<p>(Version information: gcc 4.7.2, clang version 3.3 (trunk 171722))</p>\n<p>My question:</p>\n<p>Is this type of redefinition allowed?  If not: can you please point me to the appropriate point in the C++ standard?</p>\n", "AcceptedAnswerId": "14197544", "Title": "C++11: template parameter redefines default argument", "CreationDate": "2013-01-07T13:56:43.227", "Id": "14197436", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2013-02-18T20:19:22.283", "LastEditorUserId": "1774667", "LastActivityDate": "2015-06-13T20:30:43.027", "Score": "6", "OwnerUserId": "1247301", "Tags": "<c++><templates><c++11><default-value>", "AnswerCount": "1"}, "14197544": {"Id": "14197544", "PostTypeId": "2", "Body": "<p>\u00a714.1.12: </p>\n<blockquote>\n<p id=\"so_14197436_14197544_0\">A template-parameter shall not be given default arguments by two different declarations in the same scope.</p>\n<p id=\"so_14197436_14197544_1\">[Example:</p>\n<pre><code>template&lt;class T = int&gt; class X;\ntemplate&lt;class T = int&gt; class X { /\u2217... \u2217/ }; // error\n</code></pre>\n<p id=\"so_14197436_14197544_2\">\u2014 end example ]</p>\n</blockquote>\n", "LastEditorUserId": "241631", "LastActivityDate": "2015-06-13T20:30:43.027", "Score": "8", "CreationDate": "2013-01-07T14:04:15.280", "ParentId": "14197436", "CommentCount": "1", "OwnerUserId": "752976", "LastEditDate": "2015-06-13T20:30:43.027"}});