post_cb({"3672577": {"ParentId": "3672563", "CommentCount": "6", "Body": "<p>Because is C, 'x' is actually an int, while in C++ it's a char.</p>\n<p>C++ tries is tighten up strong typing that was a bit lax in C.</p>\n", "OwnerUserId": "12725", "PostTypeId": "2", "Id": "3672577", "Score": "5", "CreationDate": "2010-09-08T23:04:18.353", "LastActivityDate": "2010-09-08T23:04:18.353"}, "3672563": {"CommentCount": "5", "AcceptedAnswerId": "3672617", "PostTypeId": "1", "ClosedDate": "2010-09-08T23:30:27.410", "LastEditorUserId": "-1", "CreationDate": "2010-09-08T23:01:46.003", "LastActivityDate": "2010-09-08T23:15:27.000", "LastEditDate": "2017-05-23T11:58:59.790", "ViewCount": "1904", "FavoriteCount": "2", "Title": "C and C++ difference in sizeof('x')", "Id": "3672563", "Score": "7", "Body": "<blockquote>\n<p id=\"so_3672563_3672563_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/433895/why-are-c-character-literals-ints-instead-of-chars\">Why are C character literals ints instead of chars?</a> </br></p>\n</blockquote>\n<p>Why when using C does <code>sizeof('x')</code> return 4 but <code>sizeof('x')</code> in C++ returns 1?</p>\n<p>C++ normally strives to be nothing more than a superset of C so why do the two results diverge? </p>\n<p><strong>Edit</strong>\nJust some further clarification. This seems like a deliberate move on the part of the standards committee and I assume changing the size of 'x' would not have been done without a good reason. I am interested in what the reason is.</p>\n", "Tags": "<c++><c>", "OwnerUserId": "232918", "AnswerCount": "3"}, "3672594": {"ParentId": "3672563", "CommentCount": "3", "Body": "<p>C++ is not a superset of C. Particularly if you use the \"current\" versions - a compiler in C++0x mode will choke on C99 code. </p>\n", "OwnerUserId": "115738", "PostTypeId": "2", "Id": "3672594", "Score": "7", "CreationDate": "2010-09-08T23:07:49.780", "LastActivityDate": "2010-09-08T23:07:49.780"}, "bq_ids": {"n4140": {"so_3672563_3672617_2": {"section_id": 3161, "quality": 0.5555555555555556, "length": 5}}, "n3337": {"so_3672563_3672617_2": {"section_id": 3034, "quality": 0.5555555555555556, "length": 5}}, "n4659": {"so_3672563_3672617_2": {"section_id": 3923, "quality": 0.5555555555555556, "length": 5}}}, "3672617": {"ParentId": "3672563", "CommentCount": "3", "Body": "<p>To quote the C++ standard ISO 14882:2003, annex C.1.1 clause 2.13.2</p>\n<blockquote>\n<p id=\"so_3672563_3672617_0\"><strong>Change</strong>: Type of character literal is changed from int to char</p>\n<p id=\"so_3672563_3672617_1\"><strong>Rationale</strong>: This is needed for improved overloaded function argument type matching. For example:</p>\n<pre><code>int function( int i );\nint function( char c );\nfunction( \u2019x\u2019 );\n</code></pre>\n<p id=\"so_3672563_3672617_2\">It is preferable that this call match the second version of function rather than the first</p>\n</blockquote>\n<p>(annex C describes the incompatibilities between C and C++)</p>\n", "OwnerUserId": "273767", "PostTypeId": "2", "Id": "3672617", "Score": "16", "CreationDate": "2010-09-08T23:13:02.857", "LastActivityDate": "2010-09-08T23:13:02.857"}});