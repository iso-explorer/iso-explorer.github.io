post_cb({"bq_ids": {"n4140": {"so_31825064_31825767_0": {"length": 9, "quality": 0.9, "section_id": 1394}}, "n3337": {"so_31825064_31825767_0": {"length": 9, "quality": 0.9, "section_id": 1388}}, "n4659": {"so_31825064_31825767_0": {"length": 9, "quality": 0.9, "section_id": 1512}}}, "31825767": {"Id": "31825767", "PostTypeId": "2", "Body": "<p>I can't find anything in the standard (N3337) that puts any specific requirements on the parameter types for a comparator passed to sorting-related algorithms. All I can find that kind of hints at why you're having this issue is this: </p>\n<blockquote>\n<p id=\"so_31825064_31825767_0\">25.4.2: It is assumed that comp will not apply any non-constant function through the dereferenced\n  iterator.</p>\n</blockquote>\n<p>It is somewhat indirect, but since it is 'assumed' that your comparator won't apply any non-const function to what's given to you by the algorithm, I guess it's valid that the algorithm pass const objects to it; this is likely the source of your problem.</p>\n", "LastActivityDate": "2015-08-05T07:14:06.717", "CommentCount": "0", "CreationDate": "2015-08-05T07:14:06.717", "ParentId": "31825064", "Score": "1", "OwnerUserId": "3624960"}, "31825064": {"ViewCount": "66", "Body": "<pre><code>#include &lt;stack&gt;\n#include &lt;list&gt;\n#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#include &lt;numeric&gt;\n\nusing namespace std;\n\nvoid biggies(vector&lt;string&gt;&amp; str,vector&lt;string&gt;::size_type sz)\n{\n    sort(str.begin(),str.end());\n    auto end_unique=unique(str.begin(), str.end());\n    str.erase(end_unique,str.end());\n\n//When I remove the \"const\" in the parameter list, the code can't compile \n    stable_sort(str.begin(), str.end(), [](const string&amp;a,const string&amp;b){return a.size()&lt;b.size();});\n\n    auto wc=find_if(str.begin(), str.end(), [sz](string&amp; a){return a.size()&gt;=sz;});\n    for_each(wc, str.end(), [](string&amp; s){cout&lt;&lt;s&lt;&lt;endl;});\n\n}\n\nint main()\n{\n    vector&lt;string&gt;vec{\"11\",\"22\",\"1\",\"1111\",\"2222\",\"2\",\"111\",\"222\"};\n    biggies(vec, 2);\n}\n</code></pre>\n<p>I test the code in Xcode 6.4 and Visual Studio 2015 and it turns out that both cannot compile without the \"const\" in the parameter list. I wonder why the lack of \"const\" would disrupt the compilation? I'll be very thankful with your answers.</p>\n", "AcceptedAnswerId": "31825767", "Title": "Can't compile lambda without \"const\" in the parameter list", "CreationDate": "2015-08-05T06:37:04.070", "Id": "31825064", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2015-08-05T07:14:06.717", "Score": "2", "OwnerUserId": "5192457", "Tags": "<c++><lambda>", "AnswerCount": "1"}});