post_cb({"bq_ids": {"n4140": {"so_34448254_34448254_0": {"length": 14, "quality": 1.0, "section_id": 6185}, "so_34448254_34448254_1": {"length": 14, "quality": 0.9333333333333333, "section_id": 6185}, "so_34448254_34448254_3": {"length": 26, "quality": 1.0, "section_id": 6187}}, "n3337": {"so_34448254_34448254_1": {"length": 13, "quality": 0.8666666666666667, "section_id": 5946}, "so_34448254_34448254_3": {"length": 15, "quality": 0.5769230769230769, "section_id": 5947}}, "n4659": {"so_34448254_34448254_0": {"length": 11, "quality": 0.7857142857142857, "section_id": 7687}, "so_34448254_34448254_1": {"length": 14, "quality": 0.9333333333333333, "section_id": 7687}, "so_34448254_34448254_3": {"length": 18, "quality": 0.6923076923076923, "section_id": 7690}}}, "34448254": {"ViewCount": "95", "Body": "<p>The definition of a <em>core constant expression</em> depends on the concept of a <em>constant expression</em> as can be seen in bullet points (2.7.1) and (2.9.1) of N4140.</p>\n<p>\u00a75.19/2:  </p>\n<blockquote>\n<p id=\"so_34448254_34448254_0\">A conditional-expression <code>e</code> is a <strong>core constant expression</strong> unless the\n  evaluation of <code>e</code>, following the rules of the abstract machine (1.9),\n  would evaluate one of the following expressions:</p>\n</blockquote>\n<p>...</p>\n<blockquote>\n<p id=\"so_34448254_34448254_1\">(2.7.1) \u2014 a non-volatile glvalue of integral or enumeration type that\n  refers to a non-volatile const object with a preceding initialization,\n  initialized with a <strong>constant expression</strong></p>\n</blockquote>\n<p>...</p>\n<blockquote>\n<p id=\"so_34448254_34448254_2\">(2.9.1) \u2014 it is initialized with a <strong>constant expression</strong> or  </p>\n</blockquote>\n<p>And the definition of a <em>constant expression</em> depends on the concept of a <em>core constant expression</em>, as can be seen in \u00a75.19/4 of N4140:</p>\n<blockquote>\n<p id=\"so_34448254_34448254_3\">A <strong><em>constant expression</em></strong> is either a glvalue <strong>core constant\n  expression</strong> whose value refers to an object with static storage\n  duration or to a function, or a prvalue <strong>core constant expression</strong>\n  whose value is an object where, for that object and its subobjects:<br>\n  ...</br></p>\n</blockquote>\n<p>This seems to defy the basic principles of mathematical logic.</p>\n", "AcceptedAnswerId": "34450605", "Title": "`core constant expression` vs `constant expression`", "CreationDate": "2015-12-24T06:22:50.653", "Id": "34448254", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2015-12-24T09:40:48.240", "Score": "1", "OwnerUserId": "411165", "Tags": "<c++><language-lawyer><c++14><constant-expression>", "AnswerCount": "1"}, "34450605": {"Id": "34450605", "PostTypeId": "2", "Body": "<p>The definitions are mutually recursive, but not actually circular.</p>\n", "LastActivityDate": "2015-12-24T09:40:48.240", "CommentCount": "0", "CreationDate": "2015-12-24T09:40:48.240", "ParentId": "34448254", "Score": "1", "OwnerUserId": "212870"}});