post_cb({"bq_ids": {"n4140": {"so_41531492_41531492_2": {"section_id": 6509, "quality": 0.9411764705882353, "length": 16}, "so_41531492_41531492_1": {"section_id": 6509, "quality": 0.5882352941176471, "length": 10}, "so_41531492_41531492_3": {"section_id": 6519, "quality": 0.9285714285714286, "length": 26}}, "n3337": {"so_41531492_41531492_2": {"section_id": 6264, "quality": 0.9411764705882353, "length": 16}, "so_41531492_41531492_1": {"section_id": 6264, "quality": 0.5882352941176471, "length": 10}, "so_41531492_41531492_3": {"section_id": 6274, "quality": 0.9285714285714286, "length": 26}}, "n4659": {"so_41531492_41531492_2": {"section_id": 7991, "quality": 0.9411764705882353, "length": 16}, "so_41531492_41531492_1": {"section_id": 7991, "quality": 0.5882352941176471, "length": 10}, "so_41531492_41531492_3": {"section_id": 8001, "quality": 0.8928571428571429, "length": 25}}}, "41531492": {"CommentCount": "0", "ViewCount": "26", "CreationDate": "2017-01-08T10:03:12.290", "LastActivityDate": "2017-01-08T13:49:00.173", "Title": "codecvt do_in do_out and return value of partial", "PostTypeId": "1", "Id": "41531492", "Score": "0", "Body": "<p>C++14 standard states:</p>\n<blockquote>\n<p id=\"so_41531492_41531492_0\">22.4.1.4.2 codecvt virtual functions [locale.codecvt.virtuals]</p>\n<p id=\"so_41531492_41531492_1\">result do_out(stateT&amp; state, const internT* from, const internT* from_end, const internT*&amp; from_next, externT* to, externT* to_end, externT*&amp; to_next) const;</p>\n<p id=\"so_41531492_41531492_2\">result do_in(stateT&amp; state, const externT* from, const externT* from_end, const externT*&amp; from_next, internT* to, internT* to_end, internT*&amp; to_next) const; </p>\n<p id=\"so_41531492_41531492_3\">5 Returns: An enumeration value, as summarized in Table 83. A return value of partial, if (from_next==from_end), indicates that either the destination sequence has not absorbed all the available destination elements, or that additional source elements are needed before another destination element can be produced.</p>\n</blockquote>\n<p>So if <code>result::partial</code> could mean either not enough source characters or not enough output space how exactly I am supposed to decide what to do in the next call to <code>do_in</code>/<code>do_out</code> when I get <code>result::partial</code> return code:</p>\n<ol>\n<li>Provide more source characters (in the \"from\" - \"from_end\"\nrange).</li>\n<li>Provide more space in the output buffer (in the \"to\" -\n\"to_end\" range).</li>\n<li>Both of the above or something else entirely?</li>\n</ol>\n", "Tags": "<c++>", "OwnerUserId": "1997715", "AnswerCount": "0"}});