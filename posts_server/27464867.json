post_cb({"bq_ids": {"n4140": {"so_27464867_27464881_1": {"length": 13, "quality": 1.0, "section_id": 7210}, "so_27464867_27464881_0": {"length": 5, "quality": 1.0, "section_id": 6076}, "so_27464867_27464885_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 6076}}, "n3337": {"so_27464867_27464881_1": {"length": 13, "quality": 1.0, "section_id": 6954}, "so_27464867_27464885_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 5844}, "so_27464867_27464881_0": {"length": 5, "quality": 1.0, "section_id": 5844}}, "n4659": {"so_27464867_27464881_1": {"length": 13, "quality": 1.0, "section_id": 8719}, "so_27464867_27464885_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 7572}, "so_27464867_27464881_0": {"length": 5, "quality": 1.0, "section_id": 7572}}}, "27464885": {"Id": "27464885", "PostTypeId": "2", "Body": "<p>Reference: <a href=\"http://en.cppreference.com/w/cpp/language/sizeof\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/language/sizeof</a></p>\n<blockquote>\n<p id=\"so_27464867_27464885_0\">sizeof(char), sizeof(signed char), and sizeof(unsigned char) always\n  return 1.</p>\n</blockquote>\n", "LastEditorUserId": "3002139", "LastActivityDate": "2014-12-14T00:03:29.940", "Score": "7", "CreationDate": "2014-12-13T23:48:50.847", "ParentId": "27464867", "CommentCount": "0", "OwnerUserId": "4138759", "LastEditDate": "2014-12-14T00:03:29.940"}, "27464881": {"Id": "27464881", "PostTypeId": "2", "Body": "<p>Yes.</p>\n<p>[expr.sizeof]/1:</p>\n<blockquote>\n<p id=\"so_27464867_27464881_0\"><code>sizeof(char)</code>, <code>sizeof(signed char)</code> and <code>sizeof(unsigned char)</code> are <code>1</code>.</p>\n</blockquote>\n<p>Also, [basic.fundamental]/1:</p>\n<blockquote>\n<p id=\"so_27464867_27464881_1\">A <code>char</code>, a <code>signed char</code>, and an <code>unsigned char</code> occupy the same amount of storage and have the same alignment requirements</p>\n</blockquote>\n", "LastEditorUserId": "3959454", "LastActivityDate": "2014-12-13T23:54:13.807", "Score": "6", "CreationDate": "2014-12-13T23:48:27.843", "ParentId": "27464867", "CommentCount": "1", "OwnerUserId": "3959454", "LastEditDate": "2014-12-13T23:54:13.807"}, "27464867": {"ViewCount": "234", "Body": "<p>I think title is self-explanatory, but for better format. </p>\n<p>Is <code>sizeof(unsigned char)</code> also guaranteed to be 1?</p>\n<hr>\n<p>I don't believe this question to be a duplicate because:</p>\n<ul>\n<li>C is different from C++ (tag excerpt: <code>...It was originally designed as an extension to C, and keeps a similar syntax, but is now a completely different language...</code>).</li>\n<li><code>char</code> can be either signed or unsigned. There's no reason to assume that <code>sizeof(unsigned char)</code> == <code>sizeof(char)</code> unless you get assured by the standard, hence the question.</li>\n<li>Even if you confuse C with C++, answers do not overlap.</li>\n</ul>\n</hr>", "AcceptedAnswerId": "27464881", "Title": "Is sizeof(unsigned char) also guaranteed to be 1?", "CreationDate": "2014-12-13T23:46:27.150", "LastActivityDate": "2017-02-09T16:45:16.443", "CommentCount": "17", "LastEditDate": "2017-02-09T16:45:16.443", "PostTypeId": "1", "Tags": "<c++><sizeof>", "Id": "27464867", "AnswerCount": "2", "Score": "0", "OwnerUserId": "205955", "ClosedDate": "2017-01-27T18:07:29.783", "LastEditorUserId": "5987"}});