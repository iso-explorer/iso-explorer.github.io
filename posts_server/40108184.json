post_cb({"40108415": {"ParentId": "40108184", "LastEditDate": "2017-05-23T12:06:47.173", "CommentCount": "10", "CreationDate": "2016-10-18T12:34:44.357", "OwnerUserId": "2069064", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "40108415", "Score": "4", "Body": "<p>The sentence is defining the term <em>subobject</em> as being one of: a <em>member subobject</em>, a <em>base class subobject</em>, or an array element. </p>\n<p>Your snippet has nothing to do with subobjects. <code>r</code> is a reference, not an object. Moreover, it doesn't even refer to an object, it simply aliases the first byte of <code>i</code>.</p>\n<p>From [intro.object]:</p>\n<blockquote>\n<p id=\"so_40108184_40108415_0\">An <em>object</em> is created by a definition (3.1), by a <em>new-expression</em> (5.3.4), when implicitly changing the active member of a union (9.3), or when a temporary object is created (4.4, 12.2).</p>\n</blockquote>\n<p><code>i</code> is an object created by a definition. As <code>int</code> is not a class or array type, it has no subobjects. The object representation, the underlying array of <code>unsigned char</code> that constitutes the storage of <code>i</code>, is not an object - it's not created in any of those contexts described above. The wording of the definition <em>object representation</em> is the subject of <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#1701\" rel=\"nofollow noreferrer\">core issue 1701</a> (h/t <a href=\"https://stackoverflow.com/questions/40108184/complete-object-or-subobject/40108415?noredirect=1#comment67496478_40108415\">T.C.</a>).</p>\n", "LastActivityDate": "2016-10-18T15:41:33.250"}, "40108184": {"CommentCount": "0", "ViewCount": "155", "PostTypeId": "1", "LastEditorUserId": "6724807", "CreationDate": "2016-10-18T12:23:56.073", "LastActivityDate": "2016-10-18T15:44:46.277", "Title": "Complete object or subobject?", "AcceptedAnswerId": "40108415", "LastEditDate": "2016-10-18T15:44:46.277", "Id": "40108184", "Score": "2", "Body": "<p>The C++14 Standard says:</p>\n<blockquote>\n<p id=\"so_40108184_40108184_0\">A subobject can be a member subobject, a base class subobject, or an array element. An object that is not subobject of any other object is called a complete object. (\u00a71.8(2))</p>\n</blockquote>\n<p>It is not obvious to me whether the 'can be' is meant as an implicit 'if and only if'. To provide an example, in the snippet below, is r a reference to a complete object or to a subobject?</p>\n<pre><code>#include &lt;iostream&gt;\nint main(){\n  int i=2;\n  unsigned char &amp; r=reinterpret_cast&lt;unsigned char&amp;&gt;(i);\n  std::cout&lt;&lt;(int)r&lt;&lt;\"\\n\";  \n}\n</code></pre>\n<p>As r refers to an unsigned char in the object representation , r should refer to an object:</p>\n<blockquote>\n<p id=\"so_40108184_40108184_1\">The object representation of an object of type T is the sequence of N unsigned char objects taken up by the object of type T, ... (\u00a73.9(4))</p>\n</blockquote>\n<hr>\n<p>edits: Could you please be very clear about what the first byte of i is:\n1) no object at all, \n2) a complete object, \n3) a subobject</p>\n<p>There are only these three possibilities.</p>\n</hr>", "Tags": "<c++><c++14><language-lawyer>", "OwnerUserId": "6724807", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_40108184_40108184_1": {"section_id": 7202, "quality": 0.7692307692307693, "length": 10}, "so_40108184_40108184_0": {"section_id": 5791, "quality": 0.7647058823529411, "length": 13}}, "n3337": {"so_40108184_40108184_1": {"section_id": 6946, "quality": 0.7692307692307693, "length": 10}, "so_40108184_40108184_0": {"section_id": 5564, "quality": 0.7647058823529411, "length": 13}}, "n4659": {"so_40108184_40108415_0": {"section_id": 7247, "quality": 0.8125, "length": 13}, "so_40108184_40108184_1": {"section_id": 8711, "quality": 0.7692307692307693, "length": 10}, "so_40108184_40108184_0": {"section_id": 7248, "quality": 0.7647058823529411, "length": 13}}}});