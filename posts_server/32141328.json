post_cb({"bq_ids": {"n4140": {"so_32141328_32141669_0": {"length": 12, "quality": 1.0, "section_id": 7041}}, "n3337": {"so_32141328_32141669_0": {"length": 12, "quality": 1.0, "section_id": 6786}}, "n4659": {"so_32141328_32141669_0": {"length": 12, "quality": 1.0, "section_id": 8538}}}, "32141669": {"Id": "32141669", "PostTypeId": "2", "Body": "<p>The program compiles and runs fine because it doesn't actually violate any rules. The key rule here is, in [basic.def.odr]:</p>\n<blockquote>\n<p id=\"so_32141328_32141669_0\">Every program shall contain exactly one definition of every non-inline function or variable <strong>that is odr-used</strong>\n  in that program; no diagnostic required.</p>\n</blockquote>\n<p>In your program, <code>b::as</code> is not <em>odr-used</em> yet. However, as soon as you use it somewhere (maybe you take its address, or try to access <code>as.v</code>, etc), then you violate this condition because you didn't provide a definition for <code>as</code>.</p>\n", "LastActivityDate": "2015-08-21T13:33:43.197", "CommentCount": "3", "CreationDate": "2015-08-21T13:33:43.197", "ParentId": "32141328", "Score": "2", "OwnerUserId": "2069064"}, "32141641": {"Id": "32141641", "PostTypeId": "2", "Body": "<ol>\n<li><p>It wil not ever cause a error until you use it (<code>b::as</code>) in your code. Then, linker will not able to find it's definition and cause a unresolved reference error:</p>\n<blockquote>\n<p id=\"so_32141328_32141641_0\">undefined reference to b::as</p>\n</blockquote></li>\n<li><p>If you will try to initialize a non-static class member by static one, here is the same behaviour:</p>\n<ol>\n<li>If you define your static member here is no error.</li>\n<li><p>If you don't do that, there would be a unresolved reference error.</p>\n<pre><code>class b {\nprivate:\n    static x as;\n    int a = b::as;\npublic:\n   b():a(8){};\n};\nx b::as; // this is now correct but if you comment this, you should can't initialize `b::a` with `b::as` then because it will cause a unresolved reference error.\n</code></pre></li>\n</ol></li>\n</ol>\n", "LastActivityDate": "2015-08-21T13:32:25.493", "CommentCount": "0", "CreationDate": "2015-08-21T13:32:25.493", "ParentId": "32141328", "Score": "1", "OwnerUserId": "1750757"}, "32141328": {"ViewCount": "54", "Body": "<p>Why the code is not causing compile error?     </p>\n<pre><code> #include&lt;iostream&gt;\n class x{\n  private:\n   int v;\n  public:\n   x():v(7){};\n };\n\nclass b{\n private:\n  static x as;\n  int a;\n public:\n  b():a(8){};\n};\n//x b::as;\n\nint main(){\n  b g;\n  return 0;\n }\n</code></pre>\n<p>Even after commenting the particular line <code>x b::as</code> code works which I think it should as I haven't define/initiate my static object which is necessary. Why is it so?</p>\n<p>And what if I initiate non-static object using static object like <code>static x asd; x bv=asd;</code> ?</p>\n", "Title": "Static object declaration only causing no error", "CreationDate": "2015-08-21T13:17:53.887", "LastActivityDate": "2015-08-21T13:33:43.197", "CommentCount": "6", "LastEditDate": "2015-08-21T13:22:23.977", "PostTypeId": "1", "LastEditorUserId": "1750757", "Id": "32141328", "Score": "1", "OwnerUserId": "4947553", "Tags": "<c++><c++11><c++14>", "AnswerCount": "2"}});