post_cb({"bq_ids": {"n4140": {"so_20873932_20873970_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 5768}}, "n3337": {"so_20873932_20873970_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 5541}}, "n4659": {"so_20873932_20873970_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 7225}}}, "20873932": {"ViewCount": "1251", "Body": "<p>Why do we get different results for the two follow statements:</p>\n<pre><code>int x = 5;\nx = x * x++;\n</code></pre>\n<p>the output is 26; whereas the next example returns 30, though they are same?!</p>\n<pre><code>int x = 5;\nx *= x++;\n</code></pre>\n<p>Thank you</p>\n", "Title": "Assignment by product (multiplication assignment) with increment or decrement in C++?", "CreationDate": "2014-01-01T22:25:38.373", "LastActivityDate": "2014-01-01T22:31:11.413", "CommentCount": "7", "PostTypeId": "1", "ClosedDate": "2014-01-15T15:53:21.887", "Id": "20873932", "Score": "-1", "OwnerUserId": "2696230", "Tags": "<c++><operators><variable-assignment><increment><multiplication>", "AnswerCount": "2"}, "20873970": {"Id": "20873970", "PostTypeId": "2", "Body": "<p>These both exhibit undefined behaviour in both C++03 and C++11. In C++11 terminology, you can't have two unsequenced modifications of the same scalar or a modification and a value computation using the same scalar, otherwise you have undefined behaviour.</p>\n<pre><code>x = x * x++;\n</code></pre>\n<p>In this case, incrementing <code>x</code> (a modification) is unsequenced with the other two value computation of <code>x</code>.</p>\n<pre><code>x *= x++;\n</code></pre>\n<p>In this case, incrementing <code>x</code> is unsequenced with the value computation of <code>x</code> on the left.</p>\n<p>For the meaning of undefined behaviour, see C++11 \u00a71.3.24:</p>\n<blockquote>\n<p id=\"so_20873932_20873970_0\"><strong>undefined behavior</strong><br>\n  behavior for which this International Standard imposes no requirements</br></p>\n</blockquote>\n", "LastActivityDate": "2014-01-01T22:31:11.413", "CommentCount": "4", "CreationDate": "2014-01-01T22:31:11.413", "ParentId": "20873932", "Score": "4", "OwnerUserId": "150634"}, "20873958": {"Id": "20873958", "PostTypeId": "2", "Body": "<p>Assigning a ++'d value to the original value is undefined behavior. So it makes sense that assigning a ++'d then multiplied value is also undefined.</p>\n", "LastActivityDate": "2014-01-01T22:29:18.180", "CommentCount": "0", "CreationDate": "2014-01-01T22:29:18.180", "ParentId": "20873932", "Score": "0", "OwnerUserId": "2159051"}});