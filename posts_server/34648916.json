post_cb({"34649035": {"ParentId": "34648916", "CommentCount": "2", "Body": "<p>The standard says (\u00a727.7.3.8):</p>\n<blockquote>\n<pre><code>namespace std {\n  template &lt;class charT, class traits&gt;\n  basic_ostream&lt;charT,traits&gt;&amp; ends(basic_ostream&lt;charT,traits&gt;&amp; os);\n}\n</code></pre>\n<p id=\"so_34648916_34649035_0\"><em>Effects:</em> Inserts a null character into the output sequence: calls <code>os.put(charT())</code>.</p>\n</blockquote>\n<p><a href=\"http://en.cppreference.com/w/cpp/io/manip/ends\" rel=\"nofollow\">cppreference</a> is a good reference for these sorts of things:</p>\n<blockquote>\n<p id=\"so_34648916_34649035_1\">Unlike <a href=\"http://en.cppreference.com/w/cpp/io/manip/endl\" rel=\"nofollow\"><code>std::endl</code></a>, this manipulator does not flush the stream.</p>\n</blockquote>\n", "OwnerUserId": "246886", "PostTypeId": "2", "Id": "34649035", "Score": "2", "CreationDate": "2016-01-07T06:54:49.977", "LastActivityDate": "2016-01-07T06:54:49.977"}, "34649021": {"ParentId": "34648916", "CommentCount": "0", "Body": "<h3>An excerpt from C++ 2011 27.7.3.8</h3>\n<blockquote>\n<pre><code>namespace std {\n  template &lt;class charT, class traits&gt;\n    basic_ostream&lt;charT,traits&gt;&amp; endl(basic_ostream&lt;charT,traits&gt;&amp; os);\n}\n</code></pre>\n<p id=\"so_34648916_34649021_0\">Effects: Calls <code>os.put(os.widen(\u2019\\n\u2019))</code>, then <code>os.flush()</code>. Returns: <code>os</code>.</p>\n<pre><code>namespace std {\n  template &lt;class charT, class traits&gt;\n  basic_ostream&lt;charT,traits&gt;&amp; ends(basic_ostream&lt;charT,traits&gt;&amp; os);\n}\n</code></pre>\n<p id=\"so_34648916_34649021_1\">Effects: Inserts a null character into the output sequence: calls <code>os.put(charT())</code>. Returns: <code>os</code>.</p>\n</blockquote>\n<p>The standard is very clear that <code>std::endl</code> flushes the stream, and that <code>std::ends</code> does not.</p>\n", "OwnerUserId": "47453", "PostTypeId": "2", "Id": "34649021", "Score": "5", "CreationDate": "2016-01-07T06:53:57.440", "LastActivityDate": "2016-01-07T06:53:57.440"}, "34648916": {"CommentCount": "6", "ViewCount": "37", "PostTypeId": "1", "LastEditorUserId": "47453", "CreationDate": "2016-01-07T06:47:04.480", "LastActivityDate": "2016-01-07T06:54:49.977", "Title": "Ends flushes the buffer or not", "AcceptedAnswerId": "34649021", "LastEditDate": "2016-01-07T06:49:13.813", "Id": "34648916", "Score": "2", "Body": "<p>Currently I'm self-learning C++.  <br> The C++ primer says:</br></p>\n<pre><code>cout &lt;&lt; \"hi!\" &lt;&lt; ends; //writes hi and a null, then flushes the buffer\n</code></pre>\n<p>However The C++ standard library second edition says:</p>\n<pre><code>ends: Outputs '\\0'\n</code></pre>\n<p>And the references on cplusplus also doesn't mention flush the buffer.<br>\nSo which one should I follow?</br></p>\n", "Tags": "<c++><io>", "OwnerUserId": "5405040", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_34648916_34649035_0": {"section_id": 2318, "quality": 0.8888888888888888, "length": 8}, "so_34648916_34649021_1": {"section_id": 2318, "quality": 0.8, "length": 8}}, "n3337": {"so_34648916_34649035_0": {"section_id": 2306, "quality": 0.8888888888888888, "length": 8}, "so_34648916_34649021_1": {"section_id": 2306, "quality": 0.8, "length": 8}}, "n4659": {"so_34648916_34649035_0": {"section_id": 2592, "quality": 0.8888888888888888, "length": 8}, "so_34648916_34649021_1": {"section_id": 2592, "quality": 0.8, "length": 8}}}});