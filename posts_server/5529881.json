post_cb({"5529959": {"ParentId": "5529881", "PostTypeId": "2", "CommentCount": "7", "CreationDate": "2011-04-03T13:49:36.510", "Score": "6", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T10:33:11.340", "Id": "5529959", "OwnerUserId": "34509", "Body": "<p><code>v</code> is an lvalue in the return statement (named rvalue references are lvalues, for safety reasons), but the return type of <code>move</code> is an rvalue reference (<code>T</code> is <code>int&amp;</code>, but you remove the reference, so you form the type <code>int &amp;&amp;</code> in the return type). </p>\n<p>You need to <code>static_cast</code> the <code>v</code> to <code>remove_reference&lt;T&gt;::type &amp;&amp;</code> first to create an <em>unnamed</em> rvalue reference, when you want to return it. </p>\n<p>I'm not sure what your goal is. Either you want to use <code>std::move</code> (like you say in your title), or you want to learn how it would be implemented (like the code you show indicates). It doesn't make sense to try to learn how <code>std::move</code> works without knowing the basic C++ rules. I recommend you to have a look in our <a href=\"https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list\">C++ Books List</a>. After you have a good grasp about C++, you can learn how <code>std::move</code> works. </p>\n", "LastActivityDate": "2011-04-03T13:59:51.973"}, "5529970": {"ParentId": "5529881", "CommentCount": "0", "CreationDate": "2011-04-03T13:51:49.043", "OwnerUserId": "636019", "PostTypeId": "2", "Id": "5529970", "Score": "4", "Body": "<p>This is straight out of the C++0x draft standard (\u00a720.2.3/6):</p>\n<blockquote>\n<p id=\"so_5529881_5529970_0\"><code>template &lt;class T&gt; typename remove_reference&lt;T&gt;::type&amp;&amp; move(T&amp;&amp; t) noexcept;</code></p>\n<p id=\"so_5529881_5529970_1\"><strong>Returns</strong>: <code>static_cast&lt;typename remove_reference&lt;T&gt;::type&amp;&amp;&gt;(t)</code>.</p>\n</blockquote>\n<p>Consequently, if you change your <code>move</code> implementation to the following, it works just fine:</p>\n<pre><code>template&lt;class T&gt;\ntypename std::remove_reference&lt;T&gt;::type&amp;&amp; move(T&amp;&amp; v)\n{\n    return static_cast&lt;typename std::remove_reference&lt;T&gt;::type&amp;&amp;&gt;(v);\n}\n</code></pre>\n", "LastActivityDate": "2011-04-03T13:51:49.043"}, "5529881": {"CommentCount": "3", "AcceptedAnswerId": "5529970", "PostTypeId": "1", "LastEditorUserId": "34509", "CreationDate": "2011-04-03T13:32:25.400", "LastActivityDate": "2011-10-02T10:32:58.863", "LastEditDate": "2011-10-02T10:32:58.863", "ViewCount": "2320", "FavoriteCount": "0", "Title": "move semantics std::move how use it", "Id": "5529881", "Score": "3", "Body": "<pre><code>#include &lt;type_traits&gt;\n\ntemplate&lt;class T&gt;\ntypename std::remove_reference&lt;T&gt;::type&amp;&amp; move(T&amp;&amp; v)\n{\n    return v;\n}\n\nvoid main()\n{\n    int a;\n    move(a);\n}\n</code></pre>\n<p>Why doesn't this code compile?</p>\n<blockquote>\n<p id=\"so_5529881_5529881_0\">error C2440: 'return'\u00a0: impossible to convert 'int' in 'int &amp;&amp;'</p>\n</blockquote>\n", "Tags": "<c++><visual-c++><c++11><rvalue-reference><move-semantics>", "OwnerUserId": "619570", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_5529881_5529970_0": {"section_id": 3947, "quality": 0.6666666666666666, "length": 4}}, "n3337": {"so_5529881_5529970_0": {"section_id": 3806, "quality": 1.0, "length": 6}}, "n4659": {"so_5529881_5529970_0": {"section_id": 4834, "quality": 0.6666666666666666, "length": 4}}}});