post_cb({"35422969": {"ParentId": "35422885", "CommentCount": "7", "Body": "<p>I'm not sure about \"slang\" but a pure abstract class in C++ has a definite meaning.</p>\n<p>A pure abstract base class in C++ has <strong>only</strong> abstract member functions (meaning they are all declared <code>virtual &lt;return_type&gt; &lt;func_name&gt;() = 0</code>) and no data or concrete member functions .</p>\n<p>A polymorphic base class here is a much looser term in comparison.</p>\n", "OwnerUserId": "1249278", "PostTypeId": "2", "Id": "35422969", "Score": "1", "CreationDate": "2016-02-16T03:08:23.167", "LastActivityDate": "2016-02-16T03:08:23.167"}, "35423114": {"ParentId": "35422885", "CommentCount": "0", "Body": "<p>The standard mentions <em>polymorphic class</em> specifically, for example, in <strong>10.3.1</strong>:</p>\n<blockquote>\n<p id=\"so_35422885_35423114_0\">Virtual functions support dynamic binding and object-oriented\n  programming. A class that declares or inherits a virtual function is\n  called a <em>polymorphic class</em>.</p>\n</blockquote>\n<p>It also talks about <em>abstract classes</em> and <em>pure virtual functions</em>, like in <strong>10.4.2</strong>:</p>\n<blockquote>\n<p id=\"so_35422885_35423114_1\">An <em>abstract class</em> is a class that can be used only as a base class of\n  some other class; no objects of an abstract class can be created\n  except as subobjects of a class derived from it. A class is abstract\n  if it has at least one <em>pure virtual function</em>.</p>\n</blockquote>\n<p>There is no <em>specific</em> mention of a <em>pure abstract class</em> (or <em>pure virtual class</em>), only pure virtual functions.</p>\n<p>N.B: This is based off the draft standard, n3376.</p>\n", "OwnerUserId": "1085573", "PostTypeId": "2", "Id": "35423114", "Score": "4", "CreationDate": "2016-02-16T03:24:44.937", "LastActivityDate": "2016-02-16T03:24:44.937"}, "35422885": {"CommentCount": "2", "ViewCount": "228", "PostTypeId": "1", "LastEditorUserId": "2486888", "CreationDate": "2016-02-16T03:00:10.977", "LastActivityDate": "2016-02-16T03:24:44.937", "Title": "Is \"polymorphic base class\" a part of C++ standard?", "AcceptedAnswerId": "35423114", "LastEditDate": "2016-02-16T03:11:32.060", "Id": "35422885", "Score": "0", "Body": "<p>For a bass class that has a virtual function usually call \"a polymorphic base class\". In this case <code>Car</code> class</p>\n<pre><code>class Car\n{\n virtual void drive(){std::cout &lt;&lt; \"drive right\";}\n};\n\nclass EuropeCar: public Car\n{\n void drive(){std::cout &lt;&lt; \"drive left\";}\n}\n</code></pre>\n<p>Is <code>polymorphic base class</code> a general slang such as <code>pure abstract class</code> or a part of C++ standard?</p>\n", "Tags": "<c++>", "OwnerUserId": "1268258", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_35422885_35423114_0": {"section_id": 7002, "quality": 0.9333333333333333, "length": 14}, "so_35422885_35423114_1": {"section_id": 7019, "quality": 0.96, "length": 24}, "so_35422885_35423041_0": {"section_id": 7002, "quality": 0.875, "length": 7}}, "n3337": {"so_35422885_35423114_0": {"section_id": 6748, "quality": 0.9333333333333333, "length": 14}, "so_35422885_35423114_1": {"section_id": 6765, "quality": 0.96, "length": 24}, "so_35422885_35423041_0": {"section_id": 6748, "quality": 0.875, "length": 7}}, "n4659": {"so_35422885_35423114_0": {"section_id": 8499, "quality": 0.9333333333333333, "length": 14}, "so_35422885_35423114_1": {"section_id": 8516, "quality": 0.96, "length": 24}, "so_35422885_35423041_0": {"section_id": 8499, "quality": 0.875, "length": 7}}}, "35423041": {"ParentId": "35422885", "CommentCount": "0", "Body": "<p>The C++14 standard does define the term \"polymorphic class\" (10.3/1):</p>\n<blockquote>\n<p id=\"so_35422885_35423041_0\">A class that declares or\n  inherits a virtual function is called a <em>polymorphic class</em>.</p>\n</blockquote>\n<p>But it doesn't use the term \"polymorphic base class\".</p>\n", "OwnerUserId": "951890", "PostTypeId": "2", "Id": "35423041", "Score": "2", "CreationDate": "2016-02-16T03:16:25.990", "LastActivityDate": "2016-02-16T03:16:25.990"}});