post_cb({"30597081": {"ParentId": "30596984", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Specific implementations are free to not set them (\"local\" variables) to anything, or to set them to any value they want, including zero. The standard doesn't mandate they they be set to a non-zero value, after all :-)</p>\n<p>The standard merely states that their value, if not explicitly set, is undefined. Hence it's not something a good programmer would rely upon. This is covered in <code>C++11 8.5 Initializers [dcl.init] /11</code> (my emphasis):</p>\n<blockquote>\n<p id=\"so_30596984_30597081_0\">If no initializer is specified for an object, the object is default-initialized; <strong><em>if no initialization is performed, an object with automatic</em></strong> or dynamic <strong><em>storage duration has indeterminate value.</em></strong></p>\n</blockquote>\n<p>So, in answer to your closing question, <code>is it guaranteed to see 0 as output on every modern implementation of C++ always?</code>, the answer is no, plain and simple.</p>\n<p>As an aside, you may well find that the three \"separate\" environments you tested on, <code>CodeBlocks</code>, <code>DevC++</code> and <code>ideone</code>, are all using the <em>same</em> compiler under the covers, so it would hardly be an exhaustive test in that case.</p>\n", "OwnerUserId": "14860", "LastEditorUserId": "14860", "LastEditDate": "2015-11-10T06:11:38.507", "Id": "30597081", "Score": "3", "CreationDate": "2015-06-02T13:08:50.090", "LastActivityDate": "2015-11-10T06:11:38.507"}, "30596984": {"CommentCount": "2", "ViewCount": "175", "CreationDate": "2015-06-02T13:05:13.643", "LastActivityDate": "2015-11-10T06:11:38.507", "Title": "Is it true that modern C++ compilers automatically initializes local variables to 0?", "AcceptedAnswerId": "30597081", "PostTypeId": "1", "Id": "30596984", "Score": "1", "Body": "<p>I know that local variables in C &amp; C++ aren't automatically initialized &amp; if no initial value is given to them they have garbage values. I also know that global &amp; static variables are by default initialized to zero. Use of uninitialized variable results in undefined behavior in C++.</p>\n<p>But recently I tried following simple C++ program on various implementations of C++ &amp; all gives me 0 as output.</p>\n<pre><code>#include &lt;iostream&gt;\nint main()\n{\n    int u;\n    std::cout&lt;&lt;u&lt;&lt;'\\n';\n}\n</code></pre>\n<p>Output:</p>\n<p>CodeBlocks 13.12 IDE: 0</p>\n<p>Orwell Dev C++ 5.8.3: 0</p>\n<p>Ideone.com: 0 (visit this: <a href=\"http://ideone.com/zWrgwo\" rel=\"nofollow\">http://ideone.com/zWrgwo</a>)</p>\n<p>Is it true that modern compilers automatically initializes local variables to 0? or such type of program still represents undefined behavior ? Is it guaranteed to see 0 as output on every modern implementation of C++ always?</p>\n", "Tags": "<c++><variables><variable-initialization>", "OwnerUserId": "3777958", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_30596984_30597081_0": {"section_id": 3291, "quality": 0.8571428571428571, "length": 12}}, "n3337": {"so_30596984_30597081_0": {"section_id": 3161, "quality": 1.0, "length": 14}}, "n4659": {"so_30596984_30597081_0": {"section_id": 4053, "quality": 0.8571428571428571, "length": 12}}}, "30597539": {"ParentId": "30596984", "CommentCount": "2", "Body": "<p>Recent Windows versions (and maybe other OS too) initialize all uninitialized memory to 0 when a program is starting.</p>\n<p>Therefore all \"uninitialized\" variables will appear as 0.</p>\n<p>However this depends on the OS, not on the compiler. When running such a program under Windows 9x (which did not have this feature) the variables have random values.</p>\n<p>Variables on the stack will contain random values as soon as the stack has been used:</p>\n<pre><code>void test()\n{\n    int a;\n    std::cout &lt;&lt; a;\n}\n\nint main()\n{\n    someLargeFunction();\n    test();\n}\n</code></pre>\n<p>The value of the variable \"a\" is now depending on the function \"someLargeFunction\"!</p>\n", "OwnerUserId": "2705055", "PostTypeId": "2", "Id": "30597539", "Score": "0", "CreationDate": "2015-06-02T13:28:29.610", "LastActivityDate": "2015-06-02T13:28:29.610"}, "30597024": {"ParentId": "30596984", "CommentCount": "0", "Body": "<p>No it is not true. Initialising variables to zero would incur an unnecessary performance cost. Non-static variables are not initialised to zero.</p>\n<p>The behaviour of using an uninitialised variable in C++ is undefined.</p>\n<p>You might find that a debug configuration zero-initialises variables. I find that particularly pernicious and always ensure that any compiler options doing that are switched off.</p>\n", "OwnerUserId": "2380830", "PostTypeId": "2", "Id": "30597024", "Score": "3", "CreationDate": "2015-06-02T13:06:51.227", "LastActivityDate": "2015-06-02T13:06:51.227"}});