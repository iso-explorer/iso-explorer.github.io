post_cb({"33632332": {"ParentId": "27716871", "CommentCount": "0", "Body": "<p>Currently subject of <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#1252\" rel=\"nofollow\"><strong>CWG #1252</strong></a>: </p>\n<blockquote>\n<p id=\"so_27716871_33632332_0\">The Standard does not allow overloading of member functions that\n  differ only in their return type (cf <code>enable_if</code>).</p>\n</blockquote>\n<p>The wording you quoted is presumably going to be amended, since there is no reason whatsoever to disallow overloading of member function templates based on SFINAE in the return type; I'd regard the standard as defective and the implementations as correct.</p>\n", "OwnerUserId": "3647361", "PostTypeId": "2", "Id": "33632332", "Score": "0", "CreationDate": "2015-11-10T14:29:18.660", "LastActivityDate": "2015-11-10T14:29:18.660"}, "27716871": {"CommentCount": "5", "ViewCount": "93", "PostTypeId": "1", "LastEditorUserId": "2684539", "CreationDate": "2014-12-31T06:03:29.880", "LastActivityDate": "2015-11-10T14:29:18.660", "Title": "Template member function overloading issue", "OwnerDisplayName": "user2953119", "LastEditDate": "2014-12-31T08:51:35.103", "Id": "27716871", "Score": "4", "Body": "<p>The Standard at <code>N4296::13.1/2.2 [over.load]</code> says:</p>\n<blockquote>\n<p id=\"so_27716871_27716871_0\">Likewise, member function template declarations with the same name,\n  the same parameter-type-list, and the same template parameter lists\n  cannot be overloaded if any of them is a static member function\n  template declaration.</p>\n</blockquote>\n<p>So, I thought that the following program would be ill-formed:</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct A\n{\n    template &lt;typename T&gt;\n    static void foo(){ }\n\n    template &lt;typename T&gt;\n    static int foo(){ return 0; }\n};\n\nint main(){ }\n</code></pre>\n<p><strong><a href=\"http://coliru.stacked-crooked.com/a/dff9a898926c3cf5\" rel=\"nofollow\">DEMO</a></strong></p>\n<p>In contrast, the program</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct A\n{\n    static void foo(){ }\n\n    static int foo(){ return 0; }\n};\n\nint main(){ }\n</code></pre>\n<p>is ill-formed</p>\n<p><strong><a href=\"http://coliru.stacked-crooked.com/a/01a51d7ed1f3d284\" rel=\"nofollow\">DEMO</a></strong></p>\n<p>Is the first example a bug?</p>\n", "Tags": "<c++><templates><language-lawyer><method-overloading>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_27716871_27716871_0": {"section_id": 557, "quality": 1.0, "length": 21}}, "n3337": {"so_27716871_27716871_0": {"section_id": 548, "quality": 1.0, "length": 21}}, "n4659": {"so_27716871_27716871_0": {"section_id": 580, "quality": 1.0, "length": 21}}}});