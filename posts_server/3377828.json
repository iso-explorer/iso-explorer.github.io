post_cb({"27220738": {"ParentId": "3377828", "CommentCount": "0", "Body": "<pre><code>#include &lt;functional&gt;\ntemplate &lt; typename ... A &gt;\nvoid f (A ... a) {\n  g (std::bind(h, a...));\n}\n</code></pre>\n", "OwnerUserId": "1306670", "PostTypeId": "2", "Id": "27220738", "Score": "0", "CreationDate": "2014-12-01T02:15:19.200", "LastActivityDate": "2014-12-01T02:15:19.200"}, "3377828": {"CommentCount": "0", "AcceptedAnswerId": "3378709", "PostTypeId": "1", "LastEditorUserId": "177222", "CreationDate": "2010-07-31T11:14:24.677", "LastActivityDate": "2014-12-01T02:15:19.200", "LastEditDate": "2010-07-31T11:37:21.587", "ViewCount": "4004", "FavoriteCount": "2", "Title": "Variadic templates for lambda expressions", "Id": "3377828", "Score": "10", "Body": "<p>What's the correct way to do this with g++:</p>\n<pre><code>template &lt; typename F &gt;\nvoid g (F f);\n\ntemplate &lt; typename ... A &gt;\nvoid h (A ... a);\n\ntemplate &lt; typename ... A &gt;\nvoid f (A ... a) {\n  g ([&amp;a] () { h (a...); }); // g++-4.6: error: parameter packs not expanded with \u00bb...\u00ab\n}\n</code></pre>\n", "Tags": "<c++><templates><g++><c++11>", "OwnerUserId": "407423", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_3377828_3378709_0": {"section_id": 83, "quality": 0.5714285714285714, "length": 4}}, "n3337": {"so_3377828_3378709_0": {"section_id": 5751, "quality": 0.7142857142857143, "length": 5}}, "n4659": {"so_3377828_3378709_0": {"section_id": 86, "quality": 0.5714285714285714, "length": 4}}}, "3378709": {"ParentId": "3377828", "CommentCount": "3", "Body": "<p>I think you need to expand the pack <code>a</code> in the capture list as well, like this:</p>\n<pre><code>template &lt; typename ... A &gt;\nvoid f (A ... a) {\n  g ([&amp;, a...] () { h (a...); }); \n}\n</code></pre>\n<p>Here is the relevant text from the C++0x Final Committee Draft, section 5.1.2.23:</p>\n<blockquote>\n<p id=\"so_3377828_3378709_0\">A capture followed by an ellipsis is a\n  pack expansion (14.5.3). [ Example:</p>\n<pre><code>template&lt;class... Args&gt; void f(Args... args) {\n    auto lm = [&amp;, args...] { return g(args...); }; lm();\n}\n</code></pre>\n<p id=\"so_3377828_3378709_1\">\u2014 end example ]</p>\n</blockquote>\n", "OwnerUserId": "4928", "PostTypeId": "2", "Id": "3378709", "Score": "16", "CreationDate": "2010-07-31T15:26:15.527", "LastActivityDate": "2010-07-31T15:26:15.527"}});