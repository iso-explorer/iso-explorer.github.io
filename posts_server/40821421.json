post_cb({"bq_ids": {"n4140": {"so_40821421_40821454_0": {"length": 36, "quality": 0.8780487804878049, "section_id": 3919}}, "n3337": {"so_40821421_40821454_0": {"length": 36, "quality": 0.8780487804878049, "section_id": 3779}}, "n4659": {"so_40821421_40821454_0": {"length": 39, "quality": 0.9512195121951219, "section_id": 4805}}}, "40821421": {"ViewCount": "62", "Body": "<p>When are static local variables initialized?\nIf an exception is thrown in a constructor, is the object considered constructed? Will the destructor  be called? </p>\n<p>consider fallowing code :</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;exception&gt;\n\nint x = 0;\n\nclass A {\npublic:\n  A() {\n    std::cout &lt;&lt; 'a';\n    if (x++ == 0) {\n      throw std::exception();\n    }\n  }\n  ~A() { std::cout &lt;&lt; 'A'; }\n};\n\nclass B {\npublic:\n  B() { std::cout &lt;&lt; 'b'; }\n  ~B() { std::cout &lt;&lt; 'B'; }\n  A a;\n};\n\nvoid foo() { static B b; }\n\nint main() {\n  try {\n    foo();\n  }\n  catch (std::exception &amp;) {\n    std::cout &lt;&lt; 'c';\n    foo();\n  }\n}\n</code></pre>\n<p><strong>output : acabBA</strong></p>\n<p>The first time foo() is called, b is attempted initialized. Its constructor is called, which first constructs all member variables. This means A::A() is called, printing a. A::A() then throws an exception, the constructor is aborted, and neither b or B::a are actually considered constructed.</p>\n<p>why b was not initialized the first time ?</p>\n", "AcceptedAnswerId": "40821454", "Title": "What happens if an exception occur before than static local variables are initialized?", "CreationDate": "2016-11-26T18:04:52.813", "Id": "40821421", "CommentCount": "0", "LastEditDate": "2016-11-27T16:06:13.943", "PostTypeId": "1", "LastEditorUserId": "5905343", "LastActivityDate": "2016-11-27T16:06:13.943", "Score": "1", "OwnerUserId": "5905343", "Tags": "<c++><c++11><exception><static-initialization>", "AnswerCount": "1"}, "40821454": {"Id": "40821454", "PostTypeId": "2", "Body": "<p>The initialization of a block-scope variable with static storage duration is attempted every time control passes over the variable definition until it succeeds.</p>\n<p>From [stmt.dcl]/4:</p>\n<blockquote>\n<p id=\"so_40821421_40821454_0\">Dynamic initialization of a block-scope variable with static storage duration (3.7.1) or thread storage\n  duration (3.7.2) is performed the first time control passes through its declaration; such a variable is considered\n  initialized upon the completion of its initialization. <strong>If the initialization exits by throwing an exception, the\n  initialization is not complete, so it will be tried again the next time control enters the declaration.</strong></p>\n</blockquote>\n<p>The construction of an object of type <code>B</code> can of course not complete if the construction of any of its members throws an exception.</p>\n", "LastActivityDate": "2016-11-26T18:07:28.643", "CommentCount": "4", "CreationDate": "2016-11-26T18:07:28.643", "ParentId": "40821421", "Score": "3", "OwnerUserId": "596781"}});