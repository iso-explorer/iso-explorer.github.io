post_cb({"17320787": {"ParentId": "17320769", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>Since digits are always consecutive in a standard character set, you can write:</p>\n<pre><code>int number = 5;\nint character = number + '0';\n\n/* Here, character == '5' */\n</code></pre>\n<p>See, for instance, C11 standard.</p>\n<blockquote>\n<h3>n1570, \u00a7 5.2.1 Character sets</h3>\n<p id=\"so_17320769_17320787_0\">The 10 decimal <em>digits</em>: <code>0 1 2 3 4 5 6 7 8 9</code></p>\n<p id=\"so_17320769_17320787_1\">[...]</p>\n<p id=\"so_17320769_17320787_2\">In both the source and execution basic character sets, the value of each character after 0 in the above list of decimal digits shall be one greater than the value of the previous. </p>\n</blockquote>\n<p>The same applies in C++.</p>\n<blockquote>\n<h3>n3337, \u00a7 2.3 Character sets</h3>\n<p id=\"so_17320769_17320787_3\">In both the source and execution basic character sets, the value of each character after 0 in the above list of decimal digits shall be one greater than the value of the previous.</p>\n</blockquote>\n", "OwnerUserId": "1126268", "LastEditorUserId": "1126268", "LastEditDate": "2013-06-26T13:08:41.580", "Id": "17320787", "Score": "13", "CreationDate": "2013-06-26T13:01:59.997", "LastActivityDate": "2013-06-26T13:08:41.580"}, "17320792": {"ParentId": "17320769", "CommentCount": "5", "Body": "<p>Here's an option</p>\n<pre><code>char c;\nint x;\n//...\nswitch ( x )\n{\n   case 1:\n      c = '1';\n      break;\n   //and so on\n}\n</code></pre>\n<p>And another:</p>\n<pre><code>std::map&lt;int, char&gt; mapping;\nmapping[1] = '1';\n//...\n\nchar c = mapping[4];\n</code></pre>\n", "OwnerUserId": "673730", "PostTypeId": "2", "Id": "17320792", "Score": "1", "CreationDate": "2013-06-26T13:02:09.297", "LastActivityDate": "2013-06-26T13:02:09.297"}, "17320816": {"ParentId": "17320769", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>I'm not sure I understand what you mean by \"without using ASCII table\", but</p>\n<pre><code>int i = 5;\nchar c = i + '0';\n</code></pre>\n<p>will do what you want.  The character codes for <code>'0'</code> through <code>'9'</code> are guaranteed to be consecutive and in the proper order.</p>\n", "OwnerUserId": "388520", "LastEditorUserId": "388520", "LastEditDate": "2013-06-26T13:08:32.387", "Id": "17320816", "Score": "1", "CreationDate": "2013-06-26T13:02:45.183", "LastActivityDate": "2013-06-26T13:08:32.387"}, "17320769": {"CommentCount": "1", "AcceptedAnswerId": "17320787", "ClosedDate": "2013-06-26T15:16:13.333", "CreationDate": "2013-06-26T13:01:10.387", "LastActivityDate": "2013-06-26T13:26:25.577", "PostTypeId": "1", "ViewCount": "1019", "FavoriteCount": "0", "Title": "convert int to char without using ASCII", "Id": "17320769", "Score": "1", "Body": "<p>How can i convert an int below 10 to a char for example :<br>\n5 -&gt; '5'<br>\n<strong>(convert int to char without using ASCII table)</strong></br></br></p>\n", "Tags": "<c++><c>", "OwnerUserId": "1092647", "AnswerCount": "4"}, "17321342": {"ParentId": "17320769", "CommentCount": "1", "Body": "<p>If it is number 0-9 it is good to use:</p>\n<pre><code>int i = 5;\nchar ch = i + '0';\n</code></pre>\n<p>But probably the best option is to use itoa()</p>\n<pre><code>int i = 124;\nchar buffer[33];\nitoa(i, buffer, 10);    //10 mean decimal.\n</code></pre>\n", "OwnerUserId": "1237747", "PostTypeId": "2", "Id": "17321342", "Score": "3", "CreationDate": "2013-06-26T13:26:25.577", "LastActivityDate": "2013-06-26T13:26:25.577"}, "bq_ids": {"n4140": {"so_17320769_17320787_2": {"section_id": 5316, "quality": 1.0, "length": 19}, "so_17320769_17320787_3": {"section_id": 5316, "quality": 1.0, "length": 19}}, "n3337": {"so_17320769_17320787_2": {"section_id": 5113, "quality": 1.0, "length": 19}, "so_17320769_17320787_3": {"section_id": 5113, "quality": 1.0, "length": 19}}, "n4659": {"so_17320769_17320787_2": {"section_id": 6740, "quality": 1.0, "length": 19}, "so_17320769_17320787_3": {"section_id": 6740, "quality": 1.0, "length": 19}}}});