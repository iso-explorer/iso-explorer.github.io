post_cb({"bq_ids": {"n4140": {"so_27988870_27989236_1": {"length": 13, "quality": 0.9285714285714286, "section_id": 6233}, "so_27988870_27989233_0": {"length": 4, "quality": 0.6666666666666666, "section_id": 5768}}, "n3337": {"so_27988870_27989236_1": {"length": 13, "quality": 0.9285714285714286, "section_id": 5993}, "so_27988870_27989233_0": {"length": 4, "quality": 0.6666666666666666, "section_id": 5541}}, "n4659": {"so_27988870_27989236_1": {"length": 13, "quality": 0.9285714285714286, "section_id": 7737}, "so_27988870_27989233_0": {"length": 4, "quality": 0.6666666666666666, "section_id": 7225}}}, "27989233": {"Id": "27989233", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_27988870_27989233_0\">Are they a simple class or a class template?</p>\n</blockquote>\n<p>They are actually <code>static constexpr</code> declarations nested in the <a href=\"http://en.cppreference.com/w/cpp/io/ios_base\" rel=\"nofollow noreferrer\"><code>std::ios_base</code></a> class (as from <a href=\"http://en.cppreference.com/w/cpp/io/ios_base/iostate\" rel=\"nofollow noreferrer\"><em>the reference documentation</em></a>):</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/d8v7x.png\"/></p>\n<blockquote>\n<p id=\"so_27988870_27989233_1\">How are they implemented? Which one is there parent class(if any)?</p>\n</blockquote>\n<p>As mentioned there, it's compiler implementation specific. Usually these are simple values without usage of a <em>parent class</em>.</p>\n", "LastActivityDate": "2015-01-16T17:13:57.823", "CommentCount": "1", "CreationDate": "2015-01-16T17:13:57.823", "ParentId": "27988870", "Score": "3", "OwnerUserId": "1413395"}, "27989124": {"Id": "27989124", "PostTypeId": "2", "Body": "<p>They are not \"member functions\", they are just some constants.</p>\n<p>As you can find in standard library headers, <code>goodbit</code> is a constant with type <code>iostate</code>, and <code>ate</code> is a constant with type <code>openmode</code>.</p>\n<p>i.e. libc++ defines them in header \"ios\":</p>\n<pre><code>typedef unsigned int iostate;\nstatic const iostate goodbit = 0x0;\n...\ntypedef unsigned int openmode;\nstatic const openmode ate    = 0x02;\n</code></pre>\n", "LastActivityDate": "2015-01-16T17:08:06.870", "CommentCount": "0", "CreationDate": "2015-01-16T17:08:06.870", "ParentId": "27988870", "Score": "1", "OwnerUserId": "1580875"}, "27988870": {"ViewCount": "74", "Body": "<p>I know that <code>ios_base</code> has a declaration of states for streams like<br>\n<code>ios_base::goodbit</code>(error state)<br>\n<code>ios_base::ate</code>(file open mode state)<br>\nand many more.<br>\nWhat I'm interested in knowing is the definition of these member functions of <code>ios_base</code><br>\nAre they a simple <strong>class</strong> or a <strong>class template</strong>?  How are they implemented? Which one is there parent class(if any)?</br></br></br></br></br></p>\n", "AcceptedAnswerId": "27989233", "Title": "Definition of different States of Streams (C++)", "CreationDate": "2015-01-16T16:53:35.990", "Id": "27988870", "CommentCount": "2", "PostTypeId": "1", "LastActivityDate": "2015-01-16T17:32:14.933", "Score": "2", "OwnerUserId": "4279071", "Tags": "<c++><class><iostream><definition><template-classes>", "AnswerCount": "3"}, "27989236": {"Id": "27989236", "PostTypeId": "2", "Body": "<p>Technically speaking they are <a href=\"http://en.cppreference.com/w/cpp/concept/BitmaskType\" rel=\"nofollow\"><code>BitmaskType</code></a> <code>constexpr</code>. Defined in <a href=\"http://en.cppreference.com/w/cpp/io/ios_base\" rel=\"nofollow\"><code>ios_base</code></a> namespace.</p>\n<p><code>Bitmask type</code> is defined in <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4296.pdf\" rel=\"nofollow\">standard</a> (this is c++14 working draft).</p>\n<blockquote>\n<p id=\"so_27988870_27989236_0\"><strong>17.5.2.1.3 Bitmask types [bitmask.types]</strong></p>\n<p id=\"so_27988870_27989236_1\"><em>[...]</em> Each bitmask type can be implemented\n  as an enumerated type that overloads certain operators, as an integer type, or as a bitset (20.5).</p>\n</blockquote>\n<p>This means, even though there is a <a href=\"http://en.cppreference.com/w/cpp/utility/bitset\" rel=\"nofollow\"><code>bitset</code></a> compilers still have some freedom how to implement it.</p>\n<p>The precise definition of the members you ask about is defined in <code>27.5.3.1 Types [ios.types]</code>, and relevant points basically say they are bitmask types.</p>\n", "LastEditorUserId": "1133179", "LastActivityDate": "2015-01-16T17:32:14.933", "Score": "1", "CreationDate": "2015-01-16T17:14:13.923", "ParentId": "27988870", "CommentCount": "0", "OwnerUserId": "1133179", "LastEditDate": "2015-01-16T17:32:14.933"}});