post_cb({"12254644": {"CommentCount": "4", "ViewCount": "80", "PostTypeId": "1", "LastEditorUserId": "1365066", "CreationDate": "2012-09-03T22:22:36.723", "LastActivityDate": "2012-09-03T22:29:34.850", "Title": "switch with some code written before labels, is it okay?", "LastEditDate": "2012-09-03T22:24:29.547", "Id": "12254644", "Score": "4", "Body": "<p>I'm wondering if all compilers would silently ignore code before labels in a switch statement, as VS2005 one does.</p>\n<p>Here's what I'm after:</p>\n<pre><code>#define CASE break; case\n</code></pre>\n<p>So,</p>\n<pre><code>switch (i) {\n  CASE 0:  print(\"0\");\n  CASE 1:  print(\"1\");\n}\n</code></pre>\n<p>would turn into</p>\n<pre><code>switch (i) {\n  break;\n  case 0:  print(\"0\");  break;\n  case 1:  print(\"1\");\n}\n</code></pre>\n<p>From the standard it seems clear that the first \"break\" (and any other code there if it existed) wouldn't be executed. The standard doesn't deny existence of such code, but I can't be sure about actual compilers.</p>\n", "Tags": "<c++><switch-statement>", "OwnerUserId": "1365066", "AnswerCount": "2"}, "12254665": {"ParentId": "12254644", "LastEditDate": "2012-09-03T22:29:34.850", "CommentCount": "0", "CreationDate": "2012-09-03T22:26:35.177", "OwnerUserId": "463074", "LastEditorUserId": "463074", "PostTypeId": "2", "Id": "12254665", "Score": "4", "Body": "<p>Yes, this is implied by \u00a76.4.2\u00b65 (specifically the ignoring part):</p>\n<blockquote>\n<p id=\"so_12254644_12254665_0\">When the switch statement is executed, its condition is evaluated and compared with each case constant. If\n  one of the case constants is equal to the value of the condition, control is passed to the statement following\n  the matched case label. If no case constant matches the condition, and if there is a default label, control\n  passes to the statement labeled by the default label. If no case matches and if there is no default then\n  none of the statements in the switch is executed.</p>\n</blockquote>\n<p>I don't think your macro is a good idea, however.</p>\n", "LastActivityDate": "2012-09-03T22:29:34.850"}, "12254679": {"ParentId": "12254644", "CommentCount": "0", "Body": "<p>Personally, I would be \"unable\" to write such code, as all warnings are turned into errors, and an unreachable code warning is likely... and in fact, a quick test on clang++ outputs such a warning.</p>\n", "OwnerUserId": "826751", "PostTypeId": "2", "Id": "12254679", "Score": "1", "CreationDate": "2012-09-03T22:28:38.687", "LastActivityDate": "2012-09-03T22:28:38.687"}, "bq_ids": {"n4140": {"so_12254644_12254665_0": {"section_id": 3893, "quality": 1.0, "length": 46}}, "n3337": {"so_12254644_12254665_0": {"section_id": 3753, "quality": 1.0, "length": 46}}, "n4659": {"so_12254644_12254665_0": {"section_id": 4779, "quality": 1.0, "length": 46}}}});