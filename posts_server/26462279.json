post_cb({"bq_ids": {"n4140": {"so_26462279_26462780_0": {"length": 40, "quality": 0.8163265306122449, "section_id": 7034}}, "n3337": {"so_26462279_26462780_0": {"length": 40, "quality": 0.8163265306122449, "section_id": 6780}}, "n4659": {"so_26462279_26462780_0": {"length": 40, "quality": 0.8163265306122449, "section_id": 8531}}}, "26462780": {"Id": "26462780", "PostTypeId": "2", "Body": "<p>The standard specifies \u00a73.1/2</p>\n<blockquote>\n<p id=\"so_26462279_26462780_0\"><strong>A declaration is a definition</strong> unless it declares a function without specifying the function\u2019s body (8.4), it\n  contains the extern specifier (7.1.1) or a linkage-specification25 (7.5) and neither an initializer nor a functionbody,\n  it declares a static data member in a class definition (9.2, 9.4), it is a class name declaration (9.1), it is\n  an opaque-enum-declaration (7.2), it is a template-parameter (14.1), it is a parameter-declaration (8.3.5) in a\n  function declarator that is not the declarator of a function-definition, or it is a typedef declaration (7.1.3),\n  an alias-declaration (7.1.3), a using-declaration (7.3.3), a static_assert-declaration (Clause 7), an attributedeclaration\n  (Clause 7), an empty-declaration (Clause 7), or a using-directive (7.3.4).</p>\n</blockquote>\n<p>thus you have a structure definition as you correctly noted, but it is also a declaration so the case</p>\n<blockquote>\n<p id=\"so_26462279_26462780_1\">pack has no effect on definitions</p>\n</blockquote>\n<p>applies, but not for the declaration. In fact MSVC and gcc/clang correctly pack the above with 1</p>\n<pre><code>struct mystruct_not_packed\n{\n    char a1;\n    char a2;\n    int a3;\n};\n\n#pragma pack(push,1)\nstruct mystruct\n{\n    char a1;\n    char a2;\n    int a3;\n};\n\nmystruct_not_packed object; // This doesn't apply\n#pragma pack(pop)\n\nint main(int argc, char *argv[])\n{\n    std::cout &lt;&lt; sizeof(mystruct) &lt;&lt; std::endl; // 6\n    std::cout &lt;&lt; sizeof(mystruct_not_packed) &lt;&lt; std::endl; // 8\n    std::cout &lt;&lt; sizeof(object) &lt;&lt; std::endl; // 8\n}\n</code></pre>\n<p><em>(tested with MSVC2013U4)</em></p>\n<p><kbd><a href=\"http://ideone.com/pKgjPJ\" rel=\"nofollow\">Example with gcc</a></kbd></p>\n", "LastEditorUserId": "1938163", "LastActivityDate": "2014-10-20T09:58:44.930", "Score": "1", "CreationDate": "2014-10-20T09:51:00.097", "ParentId": "26462279", "CommentCount": "0", "OwnerUserId": "1938163", "LastEditDate": "2014-10-20T09:58:44.930"}, "26462279": {"ViewCount": "55", "Body": "<p>Until today I used this following technique to pack structures:</p>\n<pre><code>#pragma pack(push,1)\nstruct mystruct\n{\n     char a1;\n     char a2;\n     int a3;\n}\n#pragma pack(pop)\n\nmystruct mydata()\n{ \n   mystruct ms;\n   ms.a1='a';\n   ms.a2='b';\n   ms.a3=12;\n   return ms;\n }\n</code></pre>\n<p>and assumed that ms packed as 1, but today somebody told me that in the above definition, ms is packed as 4, since pack has no effect on definition, but on declaration. <a href=\"http://msdn.microsoft.com/en-us/library/aa273913%28v=vs.60%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/aa273913%28v=vs.60%29.aspx</a></p>\n<p>Can somebody clarify if what I did was correct or not?</p>\n", "Title": "How to use pack in vs and gcc", "CreationDate": "2014-10-20T09:23:08.960", "LastActivityDate": "2014-10-20T11:10:39.270", "CommentCount": "4", "PostTypeId": "1", "Id": "26462279", "Score": "2", "OwnerUserId": "654019", "Tags": "<c++><structure><packing>", "AnswerCount": "2"}, "26462801": {"Id": "26462801", "PostTypeId": "2", "Body": "<p>The phrase <em>\"the pragma has no effect on definitions\"</em> means that if you write</p>\n<pre><code>struct mystruct\n{\n    char a1;\n    char a2;\n    int a3;\n};\n\n#pragma pack(push,1)\nmystruct ms;\n#pragma pack(pop)\n</code></pre>\n<p>It will not affect packing of <code>ms</code>.</p>\n<p>But in your example <code>ms</code> will be packed at 1, that's the whole point of <code>pragma pack</code>.</p>\n<p><a href=\"http://coliru.stacked-crooked.com/a/7438c2e41d903d10\" rel=\"nofollow\">Demo</a></p>\n<p>(MSVC 2013 outputs <code>8 6</code> on that code as well as clang and gcc on coliru)</p>\n", "LastEditorUserId": "3959454", "LastActivityDate": "2014-10-20T11:10:39.270", "Score": "0", "CreationDate": "2014-10-20T09:52:09.030", "ParentId": "26462279", "CommentCount": "5", "OwnerUserId": "3959454", "LastEditDate": "2014-10-20T11:10:39.270"}});