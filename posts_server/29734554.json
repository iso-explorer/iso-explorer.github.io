post_cb({"29734680": {"ParentId": "29734554", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>Only the first statement is correct. And you also have another guarantee: multi-dimensional arrays in C++ (notice that C and C++ are two different languages) allocate contiguous memory blocks</p>\n<blockquote>\n<p id=\"so_29734554_29734680_0\">[dcl.array] An object of array type contains a <strong>contiguously</strong> allocated\n  non-empty set of N subobjects of type T.</p>\n</blockquote>\n<p>so the following holds:</p>\n<pre><code>int array[5][5][5];\nint array2[125];\n\nstd::cout &lt;&lt; (sizeof(array) == sizeof(array2)); // Yes\n</code></pre>\n<p>Indices are an abstraction over a different access-pattern.</p>\n<p>The second is not correct (<code>int*</code> is a different type than <code>int</code>). And even in memory-space terms it is generally not guaranteed that an array of 125 integer elements will occupy the same space as an array of 125 integer pointers.</p>\n<p>Ditto for the third one.</p>\n<p>As a sidenote: arrays are often manipulated through pointers and there's an entire topic called \"<em>pointers arithmetic</em>\" which goes hand-in-hand with arrays, not to mention <a href=\"https://stackoverflow.com/a/1461449/1938163\">arrays decaying into pointers</a> but <strong>arrays are not pointers</strong>.</p>\n", "OwnerUserId": "1938163", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:06:34.647", "Id": "29734680", "Score": "0", "CreationDate": "2015-04-19T19:21:34.500", "LastActivityDate": "2015-04-19T19:28:11.497"}, "29734587": {"ParentId": "29734554", "CommentCount": "2", "Body": "<p>This array has 125 elements of type <code>int</code>, it doesn't contain anything besides these integers.</p>\n", "OwnerUserId": "1141471", "PostTypeId": "2", "Id": "29734587", "Score": "0", "CreationDate": "2015-04-19T19:14:45.670", "LastActivityDate": "2015-04-19T19:14:45.670"}, "29734619": {"ParentId": "29734554", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_29734554_29734619_0\">firstly, i think there are 125 int type elements.</p>\n</blockquote>\n<p>That's right. It's an array of 5 arrays of 5 arrays of 5 <code>int</code>s, which means there's a total of 125 <code>int</code>s.</p>\n<blockquote>\n<p id=\"so_29734554_29734619_1\">secondly, is it correct that above 'test' array has 125 *int type elements?</p>\n</blockquote>\n<p><code>*int</code> is not a valid type - presumably you mean <code>int*</code>. Either way, the answer is no. There are no pointers here. </p>\n<blockquote>\n<p id=\"so_29734554_29734619_2\">thirdly, is it correct that the 'test' array has 5 **int type elements?</p>\n</blockquote>\n<p>Again, <code>**int</code> is probably meant to be <code>int**</code>, but the answer is no. No pointers in this declaration.</p>\n<p>Presumably you're asking this because you have some idea that \"arrays are pointers\" or \"arrays are just pointers under the hood\" - this idea is wrong. When you ask for an <code>int[5][5][5]</code>, you get exactly that - a 3-dimensional array consisting of a total of 125 <code>int</code> objects.</p>\n", "OwnerUserId": "150634", "PostTypeId": "2", "Id": "29734619", "Score": "7", "CreationDate": "2015-04-19T19:16:33.003", "LastActivityDate": "2015-04-19T19:16:33.003"}, "29734647": {"ParentId": "29734554", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Let consider declaration</p>\n<pre><code>int test[5][5][5];\n</code></pre>\n<p>step by step.</p>\n<p>At first consider declaration like</p>\n<pre><code>int test[5];\n</code></pre>\n<p>test has 5 elements of type <code>int</code>.</p>\n<p>Now consider</p>\n<pre><code>int test[5][5];\n</code></pre>\n<p>It declares an array of 5 elements of the preceding type <code>int[5]</code>.  So as each element of the array in turn an array and contains 5 elements then the total number of elements of type int contained in test is equal to 5 * 5 that is 25.</p>\n<p>Now let's return to declaration</p>\n<pre><code>int test[5][5][5];\n</code></pre>\n<p>It defines an array elements of which has type <code>int[5][5]</code>. Each element contains 25 objects of type <code>int</code>. The array has 5 such elements. So in total it contains 5 * 25 objects of type <code>int</code> that is 125 such objects.</p>\n<p>So array </p>\n<pre><code>int test[5][5][5];\n</code></pre>\n<p>has 5 elements of type <code>int[5][5]</code></p>\n<p>array</p>\n<pre><code>int test[5][5];\n</code></pre>\n<p>has 5 elements of type <code>int[5]</code></p>\n<p>and array </p>\n<pre><code>int test[5];\n</code></pre>\n<p>has 5 elements of type <code>int</code>.</p>\n<p>In C++ a multidimensional array is an array elements of which are in turn arrays (not pointers).</p>\n", "OwnerUserId": "2877241", "LastEditorUserId": "2877241", "LastEditDate": "2015-04-19T19:24:48.073", "Id": "29734647", "Score": "0", "CreationDate": "2015-04-19T19:18:55.040", "LastActivityDate": "2015-04-19T19:24:48.073"}, "29734554": {"CommentCount": "2", "ViewCount": "192", "PostTypeId": "1", "LastEditorUserId": "2069064", "CreationDate": "2015-04-19T19:12:07.027", "LastActivityDate": "2015-04-19T19:28:11.497", "Title": "Multi-dimensional arrays in C", "AcceptedAnswerId": "29734619", "LastEditDate": "2015-04-19T19:21:53.463", "Id": "29734554", "Score": "2", "Body": "<p>I was kind of a Java-holic. I wanted to learn more about arrays in C. Is there such an array: </p>\n<pre><code>int test[5][5][5]\n</code></pre>\n<p>I want to know how many integer elements it has. I had three questions:</p>\n<ol>\n<li>I think there are 125 <code>int</code> type elements. Is that correct?</li>\n<li>Is it correct that <code>test</code> has 125 <code>*int</code> type elements?</li>\n<li>Is it correct that <code>test</code> has 5 <code>**int</code> type elements?</li>\n</ol>\n", "Tags": "<c++><c><arrays><pointers>", "OwnerUserId": "4527638", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_29734554_29734680_0": {"section_id": 3228, "quality": 0.9090909090909091, "length": 10}}, "n3337": {"so_29734554_29734680_0": {"section_id": 3101, "quality": 0.9090909090909091, "length": 10}}, "n4659": {"so_29734554_29734680_0": {"section_id": 3985, "quality": 0.9090909090909091, "length": 10}}}});