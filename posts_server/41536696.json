post_cb({"41540102": {"ParentId": "41536696", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>namespace std is not implied.</p>\n<p>On my Ubuntu, I can go to directory </p>\n<pre><code>/usr/include/c++/5, \n</code></pre>\n<p>and perform</p>\n<pre><code>grep --color -nH -e namespace *\n</code></pre>\n<p>More than 200 occurrences are found.  A quick scan suggest half are declaration, and half are comments (at end of the block), as in these last 2 files:</p>\n<pre><code>utility:77:namespace std _GLIBCXX_VISIBILITY(default)\nutility:268:} // namespace\nvalarray:44:namespace std _GLIBCXX_VISIBILITY(default)\nvalarray:87:} // namespace\nvalarray:92:namespace std _GLIBCXX_VISIBILITY(default)\nvalarray:585:} // namespace\nvalarray:594:namespace std _GLIBCXX_VISIBILITY(default)\nvalarray:1233:} // namespace\n</code></pre>\n<p>There are about 10 (sub)directories in this directory.  One I have visited several times is 'bits'</p>\n<pre><code>/usr/include/c++/5/bits\n</code></pre>\n<p>This directory also has about 200 uses of the namespace std, and a few other namespaces (i.e. not std).  </p>\n<p>So in two grep efforts, I have perhaps found about 200 contributions to the std namespace.  namespace std is clearly not implied.</p>\n<hr>\n<blockquote>\n<p id=\"so_41536696_41540102_0\">I want to find a source in official documentation and standards where\n  this issue is addressed.</p>\n</blockquote>\n<p>good luck with that. </p>\n<p>I suspect somewhere at sometime the language authors agreed (in some manner) that this namespace name would be 'std' instead of something else ... might there be a letter or perhaps meeting minutes about the issue? </p>\n</hr>", "OwnerUserId": "2785528", "LastEditorUserId": "2785528", "LastEditDate": "2017-01-09T02:28:30.140", "Id": "41540102", "Score": "0", "CreationDate": "2017-01-09T02:19:42.617", "LastActivityDate": "2017-01-09T02:28:30.140"}, "41536696": {"CommentCount": "4", "ViewCount": "105", "ClosedDate": "2017-01-09T14:43:57.827", "CreationDate": "2017-01-08T19:12:04.750", "LastActivityDate": "2017-01-09T02:28:30.140", "Title": "How/where C++ namespace std is defined (link to documentation/standard)", "PostTypeId": "1", "Id": "41536696", "Score": "-9", "Body": "<p>This question seems to have been asked many times before but the answers just poo-poo or pee-pee around the issue. I want to find a source in official documentation and standards where this issue is addressed. Apparently, \"std\" is implied by the files included with #include. Does it mean that there is no explicit \"namespace std {...}\" anywhere and \"std\" is like a keyword? I want to know the official definition of this keyword. I want to know how and what is included in \"std\", everything that is not covered by the definition of a regular namespace with explicit \"namespace name\"</p>\n", "Tags": "<c++><c++14>", "OwnerUserId": "7185883", "AnswerCount": "5"}, "41538928": {"ParentId": "41536696", "CommentCount": "0", "Body": "<p>The whole std namespace is not defined in one particular source/header file.</p>\n<p>Namespaces are open so that means you can add to them.</p>\n<p>Each header file in the standard c++ library adds its particular stuff to the <code>std</code> namespace.</p>\n<p>for example:</p>\n<pre><code>#include &lt;vector&gt; will add the vector's related bits. \n</code></pre>\n", "OwnerUserId": "2874856", "PostTypeId": "2", "Id": "41538928", "Score": "0", "CreationDate": "2017-01-08T23:12:45.563", "LastActivityDate": "2017-01-08T23:12:45.563"}, "41536809": {"ParentId": "41536696", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_41536696_41536809_0\"><strong>[contents]/2</strong> All library entities except macros, <code>operator new</code> and <code>operator delete</code> are defined within the namespace <code>std</code> or namespaces nested within namespace <code>std</code>...</p>\n</blockquote>\n", "OwnerUserId": "1670129", "PostTypeId": "2", "Id": "41536809", "Score": "3", "CreationDate": "2017-01-08T19:23:25.227", "LastActivityDate": "2017-01-08T19:23:25.227"}, "41538810": {"ParentId": "41536696", "CommentCount": "0", "Body": "<p>std works just as every other namespace else:</p>\n<pre><code>namespace mynamespace {\n    struct test {};\n}\nmynamespace::test\n</code></pre>\n<p>when you use Visual Studio there are defines:</p>\n<pre><code>_STD_BEGIN // equal to namespace mynamespace {\nstruct IAmInNameSpaceStd {};\n_STD_END // equal to }\n</code></pre>\n<p>you will find something like that, in every header file that belongs to STL.</p>\n<p>On VS 2013 the defines are written in file yvals.h 523-524:</p>\n<pre><code>#define _STD_BEGIN  namespace std {\n#define _STD_END        }\n</code></pre>\n<p>If you open for example iostream you find now either:</p>\n<pre><code>_STD_BEGIN\n</code></pre>\n<p>or</p>\n<pre><code>namespace std {\n</code></pre>\n<p>or with another compiler something else. But in one way or another, it is written there. No magick involved.</p>\n", "OwnerUserId": "4981172", "PostTypeId": "2", "Id": "41538810", "Score": "0", "CreationDate": "2017-01-08T22:58:47.307", "LastActivityDate": "2017-01-08T22:58:47.307"}, "41537346": {"ParentId": "41536696", "CommentCount": "0", "Body": "<p>No, it's not implied by <code>#include</code> in any way. Why would you think so?</p>\n<p>I've just opened <code>iostream</code> file in my MinGW-w64 (GCC) setup and was easily able to find</p>\n<pre><code>namespace std\n</code></pre>\n<p>line.</p>\n<p>I assume most (if not all) compilers explicitly define this namespace too.</p>\n", "OwnerUserId": "2752075", "PostTypeId": "2", "Id": "41537346", "Score": "2", "CreationDate": "2017-01-08T20:12:04.763", "LastActivityDate": "2017-01-08T20:12:04.763"}, "bq_ids": {"n4140": {"so_41536696_41536809_0": {"section_id": 6254, "quality": 0.9473684210526315, "length": 18}}, "n3337": {"so_41536696_41536809_0": {"section_id": 6014, "quality": 0.9473684210526315, "length": 18}}, "n4659": {"so_41536696_41536809_0": {"section_id": 7758, "quality": 0.8947368421052632, "length": 17}}}});