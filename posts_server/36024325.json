post_cb({"36024383": {"CommentCount": "14", "Body": "<p>The status quo according to the standard is that there's no object there.</p>\n<p><a href=\"http://eel.is/c++draft/intro.object#1\">[intro.object]/1</a>:</p>\n<blockquote>\n<p id=\"so_36024325_36024383_0\">An object is created by a <em>definition</em> ([basic.def]), by a\n  <em>new-expression</em> ([expr.new]) or by the implementation\n  ([class.temporary]) when needed.</p>\n</blockquote>\n<p>See also the discussion in <a href=\"http://wg21.link/p0137\">P0137</a>, which would make the above quote the definition of <em>object</em>:</p>\n<blockquote>\n<p id=\"so_36024325_36024383_1\"><em>Drafting note: this maintains the status quo that <code>malloc</code> alone is\n  not sufficient to create an object.</em></p>\n</blockquote>\n<p><code>(int *)p</code> is none of these.</p>\n", "CreationDate": "2016-03-15T23:49:12.967", "ParentId": "36024325", "Id": "36024383", "LastActivityDate": "2016-03-15T23:49:12.967", "PostTypeId": "2", "Score": "7", "OwnerUserId": "2756719"}, "36024325": {"FavoriteCount": "1", "ViewCount": "157", "Id": "36024325", "AcceptedAnswerId": "36024383", "Score": "6", "Title": "At what point does memory allocated by malloc get a type?", "LastEditorUserId": "-1", "CommentCount": "8", "Body": "<p><a href=\"https://stackoverflow.com/q/36021322/471164\">This question</a> asks what is the dynamic type of the object allocated by <code>malloc</code> and according to the top answer:</p>\n<blockquote>\n<p id=\"so_36024325_36024325_0\">The return value of <code>malloc</code> is a block of uninitialized storage. No object has been constructed within that storage. And therefore it has no dynamic type.</p>\n</blockquote>\n<p>This brings another question: at what point does it make sense to say that the storage returned by <code>malloc</code> gets a type. For example:</p>\n<pre><code>void *p = malloc(sizeof(int));\nint *pi = (int*)p;\n</code></pre>\n<p>can we say that <code>pi</code> above points to an object of dynamic type <code>int</code> despite the fact that it is uninitialized?</p>\n", "Tags": "<c++><memory-management><malloc><language-lawyer>", "CreationDate": "2016-03-15T23:42:10.867", "LastEditDate": "2017-05-23T12:24:59.273", "LastActivityDate": "2016-03-16T10:45:47.113", "PostTypeId": "1", "AnswerCount": "2", "OwnerUserId": "471164"}, "36033385": {"CommentCount": "0", "Body": "<p>The answer is: when an object is created in the storage that malloc() allocates.</p>\n<p>Note: malloc() is defined in the C standard and referenced in the C++ standard. Interactions with the C++ standard are intended for compatibility, not as a primary source.</p>\n<p>What malloc() returns is a pointer to a unique region of storage (or NULL). It does not allocate or return an object. An object may be created in that storage by various means, and it is the object that has a type, not the storage.</p>\n<p>The sample code given in the question creates a typed pointer, but has no effect on the storage.</p>\n", "CreationDate": "2016-03-16T10:45:47.113", "ParentId": "36024325", "Id": "36033385", "LastActivityDate": "2016-03-16T10:45:47.113", "PostTypeId": "2", "Score": "2", "OwnerUserId": "1105562"}, "bq_ids": {"n4140": {"so_36024325_36024383_0": {"length": 7, "quality": 0.7, "section_id": 5790}}, "n3337": {"so_36024325_36024383_0": {"length": 7, "quality": 0.7, "section_id": 5563}}}});