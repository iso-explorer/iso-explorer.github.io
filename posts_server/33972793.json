post_cb({"bq_ids": {"n4140": {"so_33972793_33972870_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 7104}}, "n3337": {"so_33972793_33972870_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 6848}}, "n4659": {"so_33972793_33972870_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 8605}}}, "33972793": {"ViewCount": "49", "Body": "<p>Consider the simple code :</p>\n<pre><code>template&lt;int N&gt; struct foo{};\n\nnamespace N\n{\n    const int a=1;\n    void bar(foo&lt;1&gt;&amp; x){}\n}\n\nint main()\n{\n    bar(foo&lt;N::a&gt;());\n    return 0;\n}\n</code></pre>\n<p>Shouldn't the code work? why it isn't working I wonder. Thanks</p>\n", "AcceptedAnswerId": "33972870", "Title": "Doesn't ADL considers namespaces associated with template argument?", "CreationDate": "2015-11-28T15:03:43.457", "Id": "33972793", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2015-11-28T15:30:19.203", "Score": "0", "OwnerUserId": "4882052", "Tags": "<c++><argument-dependent-lookup>", "AnswerCount": "1"}, "33972870": {"Id": "33972870", "PostTypeId": "2", "Body": "<p>[basic.lookup.argdep]/2:</p>\n<blockquote>\n<p id=\"so_33972793_33972870_0\">[ Note: Non-type template arguments do not contribute to the set of associated namespaces.\u2014end note ]</p>\n</blockquote>\n<p>For the code linked in the comments, a typedef in a namespace isn't sufficient either, but for other reasons. The lookup is based on the resolved type, not on the namespace containing the <code>typedef</code> itself (or, equivalently, <code>using</code>).</p>\n<p>For example, if you had code like:</p>\n<pre><code>namespace A { \n    class T {};\n}\n\nnamespace B { \n    typedef A::T TT;\n}\n</code></pre>\n<p>Using <code>B::TT</code> as an argument would add <code>namespace A</code> to the lookup, but would not add <code>namespace B</code> to the lookup.</p>\n", "LastEditorUserId": "179910", "LastActivityDate": "2015-11-28T15:30:19.203", "Score": "4", "CreationDate": "2015-11-28T15:11:04.860", "ParentId": "33972793", "CommentCount": "4", "LastEditDate": "2015-11-28T15:30:19.203", "OwnerUserId": "179910"}});