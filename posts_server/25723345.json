post_cb({"25723454": {"ParentId": "25723345", "CommentCount": "8", "CreationDate": "2014-09-08T11:40:40.843", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "25723454", "Score": "6", "Body": "<p>This is legal. \u00a712.7 [class.cdtor]/p4:</p>\n<blockquote>\n<p id=\"so_25723345_25723454_0\">Member functions, including virtual functions (10.3), can be called\n  during construction or destruction (12.6.2). When a virtual function\n  is called directly or indirectly from a constructor or from a\n  destructor, including during the construction or destruction of the\n  class\u2019s non-static data members, and the object to which the call\n  applies is the object (call it <code>x</code>) under construction or destruction,\n  the function called is the final overrider in the constructor\u2019s or\n  destructor\u2019s class and not one overriding it in a more-derived class.\n  If the virtual function call uses an explicit class member access\n  (5.2.5) and the object expression refers to the complete object of <code>x</code>\n  or one of that object\u2019s base class subobjects but not <code>x</code> or one of\n  its base class subobjects, the behavior is undefined.</p>\n</blockquote>\n<p>The UB case doesn't apply here.</p>\n", "LastActivityDate": "2014-09-08T11:40:40.843"}, "25723345": {"CommentCount": "0", "ViewCount": "151", "CreationDate": "2014-09-08T11:35:17.737", "LastActivityDate": "2014-09-08T11:42:12.603", "Title": "Calling virtual function from member constructor", "AcceptedAnswerId": "25723454", "PostTypeId": "1", "Id": "25723345", "Score": "5", "Body": "<p>I'm curious as to the behaviour of the following:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nstruct A;\nstruct B {\n    std::string b;\n    B(A&amp; a);\n};\nstruct A {\n    B member;\n    virtual std::string f() { return \"Hello, World!\"; }\n    A() : member(*this) {}\n};\nB::B(A&amp; a) : b(a.f()) {}\nint main() {\n    std::cout &lt;&lt; A().member.b;\n}\n</code></pre>\n<p>Is this <em>required</em> to print the expected result? Or is it undefined behaviour?</p>\n", "Tags": "<c++>", "OwnerUserId": "298661", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_25723345_25723454_0": {"section_id": 447, "quality": 0.9594594594594594, "length": 71}}, "n3337": {"so_25723345_25723454_0": {"section_id": 438, "quality": 0.9594594594594594, "length": 71}}, "n4659": {"so_25723345_25723454_0": {"section_id": 469, "quality": 0.9594594594594594, "length": 71}}}});