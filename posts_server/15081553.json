post_cb({"15081562": {"ParentId": "15081553", "CommentCount": "0", "CreationDate": "2013-02-26T04:49:10.760", "OwnerUserId": "614644", "PostTypeId": "2", "Id": "15081562", "Score": "1", "Body": "<p>main should not be inside of a class at all.</p>\n", "LastActivityDate": "2013-02-26T04:49:10.760"}, "15081563": {"ParentId": "15081553", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2013-02-26T04:49:11.320", "Score": "1", "LastEditorUserId": "1865077", "LastEditDate": "2013-02-26T04:59:03.887", "Id": "15081563", "OwnerUserId": "1865077", "Body": "<p>No, <code>main</code> cannot be inside a class. (Just to make it clear, you can have functions called <code>main</code> in a class, but they won't be the entry point of your program.)</p>\n<p>(C++ Standard n3337, section 3.6.1)</p>\n<blockquote>\n<p id=\"so_15081553_15081563_0\">A program shall contain a <strong>global</strong> function called <code>main</code>, which is the\n  designated start of the program.</p>\n</blockquote>\n", "LastActivityDate": "2013-02-26T04:59:03.887"}, "15081628": {"ParentId": "15081553", "PostTypeId": "2", "CommentCount": "3", "CreationDate": "2013-02-26T04:55:38.347", "Score": "1", "LastEditorUserId": "1680957", "LastEditDate": "2013-02-26T07:05:18.743", "Id": "15081628", "OwnerUserId": "1680957", "Body": "<p>a <code>main</code> <em>can</em> be inside of a class. But its not the same as the entry point <code>main</code>, which must be global!</p>\n<p>Here is an example:</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass C2 {\n   public:\n     void foo() {\n        cout &lt;&lt; \"Foo!\";\n    }\n};\n\nclass C1 {\n   public:\n     void main() { // not the same as the entry-point `main`\n       cout &lt;&lt; \"What?\";\n       b.foo();\n     }\n  private: \n     B b;\n};\n\n\n\nint main() //actual entry point `main`\n{\n   A a;\n   a.main();\n   return 0;\n}\n</code></pre>\n<p>Note however, your code is seriously flawed, for one - the member functions <em>must</em> have a return type.(<code>void</code> if you're not returning anything). Secondly, <code>foo</code> is an object function, which means it can only be invoked with an object of type <code>C2</code>. </p>\n", "LastActivityDate": "2013-02-26T07:05:18.743"}, "15081553": {"CommentCount": "0", "ViewCount": "105", "ClosedDate": "2013-02-26T06:21:54.917", "CreationDate": "2013-02-26T04:48:08.223", "LastActivityDate": "2013-02-26T07:05:18.743", "Title": "Can C++ main be inside a class and call a derived class?", "PostTypeId": "1", "Id": "15081553", "Score": "-1", "Body": "<p>I'm new to using class/objects. I'm trying to write something like this:</p>\n<pre><code>class C1{\n\n    main ()\n    {\n         C2::foo();\n    }\n};\n\nclass C2:public C1\n{\npublic:\n    foo()\n    {\n    }\n};\n</code></pre>\n<p>It compiler complains C2 is not a class or namespace when C2::foo() is called.  If I move class C2 definition in front, then C1 is not defined.  What can be done here?</p>\n", "Tags": "<c++>", "OwnerUserId": "2109787", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_15081553_15081563_0": {"section_id": 7145, "quality": 1.0, "length": 7}, "so_15081553_15081619_0": {"section_id": 7147, "quality": 0.7894736842105263, "length": 15}}, "n3337": {"so_15081553_15081563_0": {"section_id": 6889, "quality": 1.0, "length": 7}, "so_15081553_15081619_0": {"section_id": 6891, "quality": 0.7894736842105263, "length": 15}}, "n4659": {"so_15081553_15081563_0": {"section_id": 8646, "quality": 0.7142857142857143, "length": 5}, "so_15081553_15081619_0": {"section_id": 8648, "quality": 0.7368421052631579, "length": 14}}}, "15081619": {"ParentId": "15081553", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2013-02-26T04:54:40.063", "Score": "2", "LastEditorUserId": "179910", "LastEditDate": "2013-02-26T05:06:02.823", "Id": "15081619", "OwnerUserId": "179910", "Body": "<p>You can create a class with a member function named <code>main</code>, but it will <em>not</em> be <em>the</em> <code>main</code> that gets invoked to start your program -- that needs to be a global function (outside any class or namespace). But yes, a member function named <code>main</code> is perfectly fine (\u00a73.6.1/3):</p>\n<blockquote>\n<p id=\"so_15081553_15081619_0\">The name <code>main</code> is not otherwise reserved. [<em>Example</em>: member functions, classes, and enumerations can be called <code>main</code>, as can entities in other namespaces. -- <em>end example</em>]</p>\n</blockquote>\n<p>As far as how to arrange your code, you typically end up with something like this:</p>\n<pre><code>class C1 { \n    int main();\n};\n\nclass C2 : public C1 { \npublic:\n    int foo();\n    // or perhaps: static int foo();\n};\n\nint C1::main() {\n    C2::foo(); // given `C2::static int foo();`\n    // otherwise: C2 c; c.foo();\n}\n</code></pre>\n", "LastActivityDate": "2013-02-26T05:06:02.823"}});