post_cb({"11372154": {"Id": "11372154", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_11372115_11372154_0\">...the value is unchanged if it can be represented in the destination type (and bit-field width); otherwise, the value is implementation-defined. (\u00a74.7/3).</p>\n</blockquote>\n<p>Since <code>char</code> must be able to accommodate values up to at least 127, the result in this case must be 50.</p>\n", "LastActivityDate": "2012-07-07T04:01:33.037", "CommentCount": "5", "CreationDate": "2012-07-07T04:01:33.037", "ParentId": "11372115", "Score": "5", "OwnerUserId": "179910"}, "bq_ids": {"n4140": {"so_11372115_11372154_0": {"length": 10, "quality": 0.8333333333333334, "section_id": 32}}, "n3337": {"so_11372115_11372154_0": {"length": 10, "quality": 0.8333333333333334, "section_id": 29}}, "n4659": {"so_11372115_11372154_0": {"length": 8, "quality": 0.6666666666666666, "section_id": 32}}}, "11372115": {"ViewCount": "162", "Body": "<p>In a big-endian machine, if I have a <code>long</code> variable and cast it to a <code>char</code>, does the language specification guarantees I will get the least significant bits after the cast?</p>\n<p>In other words:</p>\n<pre><code>long a = 50;\nchar b = (char)a;\nassert(b == 50); /* Is it true? */\n</code></pre>\n<p>I know this is true for little-endian machines, but what about big-endian?</p>\n", "AcceptedAnswerId": "11372154", "Title": "Integer casting in big-endian", "CreationDate": "2012-07-07T03:54:38.220", "Id": "11372115", "CommentCount": "1", "FavoriteCount": "2", "PostTypeId": "1", "LastActivityDate": "2012-07-07T04:01:33.037", "Score": "1", "OwnerUserId": "578749", "Tags": "<c++>", "AnswerCount": "2"}, "11372131": {"Id": "11372131", "PostTypeId": "2", "Body": "<p>Yes. A lot of code would otherwise break.</p>\n", "LastActivityDate": "2012-07-07T03:58:22.400", "CommentCount": "0", "CreationDate": "2012-07-07T03:58:22.400", "ParentId": "11372115", "Score": "1", "OwnerUserId": "2666"}});