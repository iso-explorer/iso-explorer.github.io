post_cb({"bq_ids": {"n4140": {"so_22026587_22026701_0": {"length": 7, "quality": 1.0, "section_id": 411}}, "n3337": {"so_22026587_22026701_0": {"length": 7, "quality": 1.0, "section_id": 402}}, "n4659": {"so_22026587_22026701_0": {"length": 7, "quality": 1.0, "section_id": 429}}}, "22026587": {"ViewCount": "100", "Body": "<p>If I override the destructor of my class, is it possible to made some check in it if that instance should be killed or sent to a pool? I want to make simple to reuse the obj, the user only needs to free it (or leave for compiler) and the destructor would check if that's reusable.</p>\n<pre><code>ReusableClass::~ReusableClass() {\n  if (x == 1) {\n    // abort destructor, send to pool\n  }\n}\n</code></pre>\n", "AcceptedAnswerId": "22026701", "Title": "Is it possible to not destruct obj while destructor is running?", "CreationDate": "2014-02-25T21:26:39.457", "Id": "22026587", "CommentCount": "4", "PostTypeId": "1", "LastActivityDate": "2014-02-25T21:35:19.643", "Score": "4", "OwnerUserId": "2536875", "Tags": "<c++>", "AnswerCount": "2"}, "22026744": {"Id": "22026744", "PostTypeId": "2", "Body": "<p>Of course not - you would have no <em>reference</em> to the object either - how could you recycle the object then?</p>\n<p>So solve that problem and you'll have the solution. Use a smart pointer and store the reference wherever you actually need it, perhaps in a map or owned by another object (this is now looking more like a Java solution, for instance), or manually delete it (this is less smart) when ready.</p>\n", "LastActivityDate": "2014-02-25T21:35:19.643", "CommentCount": "0", "CreationDate": "2014-02-25T21:35:19.643", "ParentId": "22026587", "Score": "0", "OwnerUserId": "1339987"}, "22026701": {"Id": "22026701", "PostTypeId": "2", "Body": "<p>Once the destructor of an object started running the object is considered dead: 12.4 [class.dtor] paragraph 14:</p>\n<blockquote>\n<p id=\"so_22026587_22026701_0\">Once a destructor is invoked for an object, the object no longer exists; ...</p>\n</blockquote>\n", "LastActivityDate": "2014-02-25T21:32:26.087", "CommentCount": "0", "CreationDate": "2014-02-25T21:32:26.087", "ParentId": "22026587", "Score": "4", "OwnerUserId": "1120273"}});