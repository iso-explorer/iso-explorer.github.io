post_cb({"24061767": {"CommentCount": "7", "CreationDate": "2014-06-05T13:37:57.683", "PostTypeId": "1", "AcceptedAnswerId": "24061876", "LastEditorUserId": "241631", "LastActivityDate": "2015-10-28T02:48:57.767", "LastEditDate": "2015-10-28T02:48:57.767", "ViewCount": "4785", "FavoriteCount": "0", "Title": "Is unique_ptr guaranteed to store nullptr after move?", "Id": "24061767", "Score": "65", "Body": "<p>Is <code>unique_ptr</code> guaranteed to store <code>nullptr</code> after move?</p>\n<pre><code>std::unique_ptr&lt;int&gt; p1{new int{23}};\nstd::unique_ptr&lt;int&gt; p2{std::move(p1)};\nassert(!p1); // is this always true?\n</code></pre>\n", "Tags": "<c++><c++11><move-semantics><unique-ptr>", "OwnerUserId": "609063", "AnswerCount": "2"}, "24061876": {"ParentId": "24061767", "CommentCount": "0", "Body": "<p>Yes, you can compare it to <code>nullptr</code> after the <code>move</code> and it is guaranteed to compare equal.</p>\n<p>From <em>\u00a720.8.1/4 [unique.ptr]</em></p>\n<blockquote>\n<p id=\"so_24061767_24061876_0\">Additionally, <code>u</code> can, upon request, transfer ownership to another unique pointer <code>u2</code>. Upon completion of such a transfer, the following postconditions hold:<br/>\n  \u2014 <code>u2.p</code> is equal to the pre-transfer <code>u.p</code>,<br/>\n  \u2014 <strong><code>u.p</code> is equal to <code>nullptr</code></strong>, and<br/>\n  ...</p>\n</blockquote>\n<p>(the member <code>p</code> is described earlier as \u2014 <em>a unique pointer is an object <code>u</code> that stores a pointer to a second object <code>p</code></em>)</p>\n", "OwnerUserId": "241631", "PostTypeId": "2", "Id": "24061876", "Score": "60", "CreationDate": "2014-06-05T13:42:36.873", "LastActivityDate": "2014-06-05T13:42:36.873"}, "bq_ids": {"n4140": {"so_24061767_24061876_0": {"section_id": 4279, "quality": 0.9047619047619048, "length": 19}, "so_24061767_24061911_0": {"section_id": 4279, "quality": 0.85, "length": 17}}, "n3337": {"so_24061767_24061876_0": {"section_id": 4120, "quality": 0.9047619047619048, "length": 19}, "so_24061767_24061911_0": {"section_id": 4120, "quality": 0.85, "length": 17}}, "n4659": {"so_24061767_24061876_0": {"section_id": 5535, "quality": 0.9047619047619048, "length": 19}, "so_24061767_24061911_0": {"section_id": 5535, "quality": 0.85, "length": 17}}}, "24061911": {"ParentId": "24061767", "CommentCount": "0", "Body": "<p>Yes. From C++2011 Standard Section <em>20.7.1/4</em>:</p>\n<blockquote>\n<p id=\"so_24061767_24061911_0\">Additionally, u can, upon request, transfer ownership to another unique pointer u2. Upon completion of\n  such a transfer, the following postconditions hold [...] [the source unique_ptr] is equal to nullptr...</p>\n</blockquote>\n", "OwnerUserId": "1312406", "PostTypeId": "2", "Id": "24061911", "Score": "8", "CreationDate": "2014-06-05T13:44:19.480", "LastActivityDate": "2014-06-05T13:44:19.480"}});