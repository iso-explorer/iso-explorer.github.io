post_cb({"27670808": {"CommentCount": "0", "CreationDate": "2014-12-27T19:39:18.900", "PostTypeId": "1", "AcceptedAnswerId": "27671113", "LastEditorUserId": "-1", "LastActivityDate": "2014-12-28T00:35:32.177", "LastEditDate": "2014-12-28T00:35:32.177", "ViewCount": "765", "FavoriteCount": "1", "Title": "\"Thou shalt not throw\" and noexcept", "Id": "27670808", "Score": "17", "Body": "<p>The C++ standard sometimes uses the phrase \"shall not throw exceptions\", for instance in 17.6.3.4 when enumerating the <code>Hash</code> requirements. Does this imply that a standard-conforming implementation <strong>must</strong> mark the call operator of <code>std::hash</code> as <code>noexcept</code> or does this just implies that throwing from within a hash functor incurs in undefined or implementation-defined behaviour?</p>\n<p>I checked that both libstdc++ and libc++ mark <code>std::hash</code>'s call operator as <code>noexcept</code>, but I would like to understand if this is a required behaviour or not.</p>\n", "Tags": "<c++><exception><c++11><language-lawyer>", "OwnerUserId": "453925", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_27670808_27671113_0": {"section_id": 6359, "quality": 0.8333333333333334, "length": 20}}, "n3337": {"so_27670808_27671113_0": {"section_id": 6116, "quality": 0.8333333333333334, "length": 20}}, "n4659": {"so_27670808_27671113_0": {"section_id": 7869, "quality": 0.5416666666666666, "length": 13}}}, "27671113": {"ParentId": "27670808", "CommentCount": "6", "Body": "<p>\"<em>Requires:</em> Thou shalt not throw\" means exactly what you guessed:  If you throw, you will get undefined behavior.</p>\n<p>Furthermore 17.6.5.12 [res.on.exception.handling]/p1 lets implementors add a <em>noexcept-specfication</em>:</p>\n<blockquote>\n<p id=\"so_27670808_27671113_0\">Any of the functions defined in the C++ standard library can report a\n  failure by throwing an exception of a type described in its Throws:\n  paragraph. An implementation may strengthen the exception\n  specification for a non-virtual function by adding a non-throwing\n  noexcept-specification.</p>\n</blockquote>\n<p>libstdc++ and libc++ mark <code>std::hash</code>'s call operator as <code>noexcept</code> as a conforming extension.  They are allowed, but not required to do this.</p>\n", "OwnerUserId": "576911", "PostTypeId": "2", "Id": "27671113", "Score": "19", "CreationDate": "2014-12-27T20:20:53.243", "LastActivityDate": "2014-12-27T20:20:53.243"}});