post_cb({"47120833": {"ParentId": "47120674", "CommentCount": "7", "Body": "<p>The call to <code>f.field.set</code> violates [class.mfct.non-static]p2:</p>\n<blockquote>\n<p id=\"so_47120674_47120833_0\">If a non-static member function of a class <code>X</code> is called for an object that is not of type <code>X</code>, or of a type derived from <code>X</code>, the behavior is undefined.</p>\n</blockquote>\n<p>You're calling a member function <code>set</code> of a class <code>Field</code> when you do not have an object of type <code>Field</code>.</p>\n", "OwnerUserId": "743382", "PostTypeId": "2", "Id": "47120833", "Score": "3", "CreationDate": "2017-11-05T11:05:06.893", "LastActivityDate": "2017-11-05T11:05:06.893"}, "47120937": {"ParentId": "47120674", "CommentCount": "1", "Body": "<p>This program has undefined behavior because you may not call a non-static member function of an object that is not currently alive.  C++14 [basic.life]/6:</p>\n<blockquote>\n<p id=\"so_47120674_47120937_0\">Similarly, before the lifetime of an object has started but after the storage which the object will occupy has been allocated or, after the lifetime of an object has ended and before the storage which the object occupied is reused or released, any glvalue that refers to the original object may be used but only in limited ways....  The program has undefined behavior if:</p>\n<ul>\n<li><p id=\"so_47120674_47120937_1\">...</p></li>\n<li><p id=\"so_47120674_47120937_2\">the glvalue is used to access a non-static data member or call a non-static member function of the object</p></li>\n<li><p id=\"so_47120674_47120937_3\">...</p></li>\n</ul>\n</blockquote>\n", "OwnerUserId": "459640", "PostTypeId": "2", "Id": "47120937", "Score": "3", "CreationDate": "2017-11-05T11:18:00.147", "LastActivityDate": "2017-11-05T11:18:00.147"}, "47120674": {"CommentCount": "19", "ViewCount": "48", "CreationDate": "2017-11-05T10:48:51.557", "LastActivityDate": "2017-11-05T11:18:00.147", "Title": "Is using reinterpret_cast (in a non-active-member) to cast to the active member of an union UB?", "AcceptedAnswerId": "47120833", "PostTypeId": "1", "Id": "47120674", "Score": "0", "Body": "<p>Look at this snippet:</p>\n<pre><code>#include &lt;new&gt;\n\nstruct Storage {\n    int value;\n\n    Storage() : value(0) { }\n};\n\nstruct Field {\n    void set(int v) {\n        reinterpret_cast&lt;Storage *&gt;(this)-&gt;value = v;\n    }\n};\n\nunion Foo {\n    Storage storage;\n    Field field;\n\n    Foo() {\n        new(&amp;storage) Storage;\n    }\n};\n\nint main() {\n    Foo f;\n    f.field.set(1);\n}\n</code></pre>\n<p>In <code>main</code>, <code>f</code> has the active member <code>storage</code>. Then, on a different member (<code>field</code>), there is a function call (<code>set</code>), which casts <code>this</code> into the type of the active member.</p>\n<p>Does this code have UB?</p>\n", "Tags": "<c++>", "OwnerUserId": "8157187", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_47120674_47120937_2": {"section_id": 7194, "quality": 1.0, "length": 10}, "so_47120674_47120833_0": {"section_id": 5890, "quality": 1.0, "length": 11}, "so_47120674_47120937_0": {"section_id": 7194, "quality": 0.9705882352941176, "length": 33}}, "n3337": {"so_47120674_47120937_2": {"section_id": 6938, "quality": 1.0, "length": 10}, "so_47120674_47120833_0": {"section_id": 5661, "quality": 1.0, "length": 11}, "so_47120674_47120937_0": {"section_id": 6938, "quality": 0.9705882352941176, "length": 33}}, "n4659": {"so_47120674_47120937_2": {"section_id": 8702, "quality": 0.9, "length": 9}, "so_47120674_47120833_0": {"section_id": 7373, "quality": 1.0, "length": 11}, "so_47120674_47120937_0": {"section_id": 8703, "quality": 0.9705882352941176, "length": 33}}}});