post_cb({"29322688": {"CommentCount": "4", "AcceptedAnswerId": "29322713", "ClosedDate": "2015-03-28T21:29:55.893", "CreationDate": "2015-03-28T21:12:52.570", "LastActivityDate": "2015-03-28T21:21:02.077", "PostTypeId": "1", "ViewCount": "734", "Title": "Does reference variable occupy memory?", "Id": "29322688", "Score": "1", "Body": "<p>I have read that <strong>reference variable shares the same memory address</strong> with the original variable but also takes up some space on the stack.\nAnd as reference has the same memory address as the original variable, it is also known as alias.</p>\n<p>So, my question is <strong>how memory allocations are done for reference variables</strong> ?</p>\n", "Tags": "<c++>", "OwnerUserId": "2994173", "AnswerCount": "2"}, "29322741": {"ParentId": "29322688", "CommentCount": "0", "CreationDate": "2015-03-28T21:17:55.263", "OwnerUserId": "3282056", "PostTypeId": "2", "Id": "29322741", "Score": "1", "Body": "<p>If the passed variable is located in memory, then a reference to that variable is usually a pointer, which could be kept in register or stored in memory. If the passed variable is located in a register due to compiler optimization, then a reference to that variable will use the same register.</p>\n", "LastActivityDate": "2015-03-28T21:17:55.263"}, "29322713": {"ParentId": "29322688", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2015-03-28T21:15:37.570", "Score": "5", "LastEditorUserId": "3233393", "LastEditDate": "2015-03-28T21:21:02.077", "Id": "29322713", "OwnerUserId": "252000", "Body": "<p>8.3.2 References \u00a74</p>\n<blockquote>\n<p id=\"so_29322688_29322713_0\">It is unspecified whether or not a reference requires storage</p>\n</blockquote>\n<p>That being said, if a reference needs storage, it typically needs as much storage as a pointer:</p>\n<pre><code>struct P\n{\n    int* p;\n};\n\nstruct R\n{\n    int&amp; r;\n};\n\nstatic_assert(sizeof(P) == sizeof(R), \"sizeof(P) == sizeof(R)\");\n</code></pre>\n", "LastActivityDate": "2015-03-28T21:21:02.077"}, "bq_ids": {"n4140": {"so_29322688_29322713_0": {"section_id": 3221, "quality": 1.0, "length": 5}}, "n3337": {"so_29322688_29322713_0": {"section_id": 3095, "quality": 1.0, "length": 5}}, "n4659": {"so_29322688_29322713_0": {"section_id": 3978, "quality": 1.0, "length": 5}}}});