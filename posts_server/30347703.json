post_cb({"30347759": {"CommentCount": "0", "Body": "<p>It says that the order is entirely unspecified.</p>\n<p>The sequencing rules are far too complex to reproduce here, and it's hard to prove a negative, but a non-normative note conveniently summarises it for us:</p>\n<blockquote>\n<p id=\"so_30347703_30347759_0\"><code>[C++11: 5.2.2/4]:</code> When a function is called, each parameter (8.3.5) shall be initialized (8.5, 12.8, 12.1) with its corresponding argument. <em>[ Note:</em> Such initializations are indeterminately sequenced with respect to each other (1.9) <em>\u2014 end note ]</em> <em>[..]</em></p>\n</blockquote>\n<p>(Identical text in C++14.)</p>\n", "CreationDate": "2015-05-20T11:01:17.053", "ParentId": "30347703", "Id": "30347759", "LastActivityDate": "2015-05-20T11:01:17.053", "PostTypeId": "2", "Score": "2", "OwnerUserId": "560648"}, "30347703": {"LastActivityDate": "2015-05-20T11:01:17.053", "ViewCount": "139", "Id": "30347703", "AcceptedAnswerId": "30347759", "Score": "2", "Title": "C++ execution order when passing function arguments", "CommentCount": "1", "Body": "<p>A container class with the following interface:</p>\n<pre><code>template &lt;typename T&gt; class DynArray {\n  /// Returns the number of elements in the array.\n  inline size_t GetCount();\n  /// Releases the internal memory from the \\class DynArray\n  /// and returns it. The memory must be deallocated manually.\n  inline T* Release();\n}\n</code></pre>\n<p>In a function call like</p>\n<pre><code>SomeFunction(arr.GetCount(), arr.Release())\n</code></pre>\n<p>I would have expected <code>arr.GetCount()</code> to be called before <code>arr.Release()</code>, but the reverse seems to actually happen causing the first parameter to be passed a value of <code>0</code> instead of the actual array size. I'm using Visual Studio 2012.</p>\n<p>Does the C++ standard say anything specific about order of execution when evaluating function parameters?</p>\n", "Tags": "<c++><function><expression><iso>", "CreationDate": "2015-05-20T10:59:07.507", "ClosedDate": "2015-05-20T11:02:04.420", "PostTypeId": "1", "AnswerCount": "1", "OwnerUserId": "791713"}, "bq_ids": {"n4140": {"so_30347703_30347759_0": {"length": 16, "quality": 0.6666666666666666, "section_id": 5991}}, "n3337": {"so_30347703_30347759_0": {"length": 16, "quality": 0.6666666666666666, "section_id": 5759}}}});