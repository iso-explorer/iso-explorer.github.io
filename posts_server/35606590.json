post_cb({"35606637": {"ParentId": "35606590", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>The <code>+</code> Plus symbol can act as a Unary Operator. It usually has no effect, but the consequence is that it gets removed before the number is resolved. For example:</p>\n<pre><code>int x[+30];\n</code></pre>\n<p>Is converted to</p>\n<pre><code>int x[operator+(30)];\n</code></pre>\n<p>Which then becomes</p>\n<pre><code>int x[30];\n</code></pre>\n<p>Thus, this expression</p>\n<pre><code>x[+1] = 0;\n</code></pre>\n<p>Would simply resolve as </p>\n<pre><code>x[1] = 0;\n</code></pre>\n<p>It wouldn't resolve as *(x++1), especially since that's not valid syntax in c++.</p>\n", "OwnerUserId": "5241642", "LastEditorUserId": "5241642", "LastEditDate": "2016-02-24T15:53:45.673", "Id": "35606637", "Score": "7", "CreationDate": "2016-02-24T15:48:21.107", "LastActivityDate": "2016-02-24T15:53:45.673"}, "35606629": {"ParentId": "35606590", "PostTypeId": "2", "CommentCount": "4", "Body": "<p><code>x[n]</code> means <code>*((x)+(n))</code> (note the blackets) and <code>x[+1]</code> means <code>*((x)+(+1))</code>. This is valid.</p>\n<p><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf\" rel=\"nofollow\">N3337</a> 5.2.1 Subscripting</p>\n<blockquote>\n<p id=\"so_35606590_35606629_0\">The expression E1[E2] is identical (by definition) to *((E1)+(E2))</p>\n</blockquote>\n", "OwnerUserId": "4062354", "LastEditorUserId": "2883245", "LastEditDate": "2016-02-24T20:46:03.177", "Id": "35606629", "Score": "10", "CreationDate": "2016-02-24T15:48:02.987", "LastActivityDate": "2016-02-24T20:46:03.177"}, "bq_ids": {"n4140": {"so_35606590_35606629_0": {"section_id": 5986, "quality": 0.8333333333333334, "length": 5}}, "n3337": {"so_35606590_35606629_0": {"section_id": 5754, "quality": 0.8333333333333334, "length": 5}}, "n4659": {"so_35606590_35606629_0": {"section_id": 7486, "quality": 0.8333333333333334, "length": 5}}}, "35606590": {"CommentCount": "5", "ViewCount": "248", "CreationDate": "2016-02-24T15:46:20.030", "LastActivityDate": "2016-02-24T20:46:03.177", "Title": "C++: int x[+30] is a valid declaration?", "AcceptedAnswerId": "35606629", "PostTypeId": "1", "Id": "35606590", "Score": "5", "Body": "<p>I have been studying arrays these days. I have come across a declaration of an array and initialization of its element in this manner :</p>\n<pre><code>int x[+30];\nx[+1]=0;\n</code></pre>\n<p>This is confusing me a little. I have the concept in mind that when we write:</p>\n<pre><code>x[n]=0;\n</code></pre>\n<p>Then it means:</p>\n<pre><code>*(x+n)=0;\n</code></pre>\n<p>Then writing <code>x[+1]</code> would mean <code>*(x++1)</code> and this seems invalid. Please correct me for the mistake I am making in understanding this concept.</p>\n", "Tags": "<c++><arrays><pointers><initialization><operators>", "OwnerUserId": "5863494", "AnswerCount": "2"}});