post_cb({"6932435": {"ParentId": "6932243", "CommentCount": "6", "Body": "<p>The C++03 standard has this bit in a note for 12.6.2/7 \"Initializaing bases and members\":</p>\n<blockquote>\n<p id=\"so_6932243_6932435_0\">[Note: because the mem-initializer are evaluated in the scope of the constructor, the this pointer can be used in the expression-list of a mem-initializer to refer to the object being initialized. ]</p>\n</blockquote>\n<p>I think the warning is issued becuase the object being referred to by the <code>this</code> pointer isn't fully initialized so there's some potential danger. As long as your base doesn't actually <em>use</em> the uninitialized parts of the object until after they're initialized, you should be fine.</p>\n<p>As the MSDN docs for the warning (<a href=\"http://msdn.microsoft.com/en-us/library/3c594ae3.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/3c594ae3.aspx</a>) mention:</p>\n<blockquote>\n<p id=\"so_6932243_6932435_1\">In effect, you've passed a pointer to an unconstructed object to another constructor. If those other constructors access any members or call member functions on this, the result will be undefined.</p>\n</blockquote>\n", "OwnerUserId": "12711", "PostTypeId": "2", "Id": "6932435", "Score": "1", "CreationDate": "2011-08-03T19:54:08.410", "LastActivityDate": "2011-08-03T19:54:08.410"}, "6932243": {"CommentCount": "3", "AcceptedAnswerId": "6932435", "PostTypeId": "1", "LastEditorUserId": "560648", "CreationDate": "2011-08-03T19:37:04.183", "LastActivityDate": "2011-08-03T20:34:07.343", "LastEditDate": "2011-08-03T20:10:58.927", "ViewCount": "1001", "FavoriteCount": "1", "Title": "Compiler warning when creating custom std stream implementation", "Id": "6932243", "Score": "3", "Body": "<p>I have a Visual Studio 2008 C++ application where I've created a custom streambuf and stream implementation. I've used an approach given by <a href=\"http://www.angelikalanger.com/Articles/C++Report/IOStreamsDerivation/IOStreamsDerivation.html\" rel=\"nofollow\">Angelika Langer</a> for creating the stream detailed below:</p>\n<pre><code>class MyOutputStream_3 : private MyStreamBuf, public ostream {\npublic:\n    MyOutputStream_3() : ostream((MyStreamBuf*) this), ios(0) {};\n    virtual ~MyOutputStream_3() { sync(); }\n    // ...\n}; \n</code></pre>\n<p>But, Visual Studio gives me a <a href=\"http://msdn.microsoft.com/en-us/library/3c594ae3%28v=VS.90%29.aspx\" rel=\"nofollow\">warning</a>:</p>\n<pre><code>warning C4355: 'this' : used in base member initializer list\n</code></pre>\n<p>The code works fine, but I'm worried the compiler is informing me that what I've done either could break under some circumstances or may be non-portable.</p>\n<p>Is this something I can ignore in this instance or what should I do to fix my issue?</p>\n", "Tags": "<c++><stream><compiler-warnings>", "OwnerUserId": "57185", "AnswerCount": "3"}, "6932936": {"ParentId": "6932243", "CommentCount": "0", "Body": "<p>Incidentally, this only happens when you explicitly use <code>this</code> in the mem-initializer list. Passing the address of a member variable that has not yet been constructed does not raise C4355.</p>\n<p>Take a look at <code>fstream</code>'s constructor if you need proof.</p>\n", "OwnerUserId": "6210", "PostTypeId": "2", "Id": "6932936", "Score": "0", "CreationDate": "2011-08-03T20:34:07.343", "LastActivityDate": "2011-08-03T20:34:07.343"}, "bq_ids": {"n4140": {"so_6932243_6932435_0": {"section_id": 440, "quality": 0.8571428571428571, "length": 12}}, "n3337": {"so_6932243_6932435_0": {"section_id": 431, "quality": 0.8571428571428571, "length": 12}}, "n4659": {"so_6932243_6932435_0": {"section_id": 460, "quality": 0.8571428571428571, "length": 12}}}, "6932311": {"ParentId": "6932243", "CommentCount": "0", "Body": "<p>It's warning you about the use of <code>this</code> in the initializer list because technically, <code>this</code> doesn't exist yet because the constructor hasn't finished executing yet (nor have the constructors of any member objects) and passing it to a function could cause problems when they try to use that object (which contains objects whose constructors haven't been called).</p>\n<p>The code should work if you're just storing the pointer for use later. But when you come back to this code and forget that you're not supposed to use that pointer, you might make a mistake and not be able to explain why your program is crashing.</p>\n<p>Here is the Microsoft page for that warning: <a href=\"http://msdn.microsoft.com/en-us/library/3c594ae3.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/3c594ae3.aspx</a></p>\n", "OwnerUserId": "726361", "PostTypeId": "2", "Id": "6932311", "Score": "2", "CreationDate": "2011-08-03T19:42:06.513", "LastActivityDate": "2011-08-03T19:42:06.513"}});