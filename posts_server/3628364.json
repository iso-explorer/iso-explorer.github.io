post_cb({"3628364": {"CommentCount": "2", "AcceptedAnswerId": "3628564", "PostTypeId": "1", "LastEditorUserId": "151292", "CreationDate": "2010-09-02T14:58:32.403", "LastActivityDate": "2010-09-03T18:55:02.840", "LastEditDate": "2010-09-02T15:22:14.583", "ViewCount": "6429", "FavoriteCount": "1", "Title": "Count of parameters in a parameter pack? Is there a C++0x std lib function for this?", "Id": "3628364", "Score": "10", "Body": "<p>I was just wondering if there was anything in the C++0x std lib already available to count the number of parameters in a parameter pack?  I'd like to get rid of the field_count in the code below.  I know I can build my own counter, but it just seems like this would be an obvious thing to include in the C++0x std lib, and I wanted to be sure it wasn't already there :)  Home-grown counter implementations are most welcome too.</p>\n<pre><code>template&lt;const int field_count, typename... Args&gt; struct Entity {\n    const tuple&lt;Args...&gt; data;\n    const array&lt;const char*, field_count&gt; source_names;\n\n    Entity() : data() {\n    }\n};\n</code></pre>\n", "Tags": "<c++><templates><c++11><std><variadic>", "OwnerUserId": "376331", "AnswerCount": "2"}, "3628564": {"ParentId": "3628364", "CommentCount": "8", "Body": "<p>Yes, you can use <code>sizeof...</code>.  From the C++0x FCD (\u00a75.3.3/5):</p>\n<blockquote>\n<p id=\"so_3628364_3628564_0\">The identi\ufb01er in a <code>sizeof...</code> expression shall name a parameter pack.  The <code>sizeof...</code> operator yields the number of arguments provided for the parameter pack identifier.  The parameter pack is expanded (14.5.3) by the <code>sizeof...</code> operator.  [<em>Example:</em></p>\n<pre><code>template&lt;class... Types&gt;\nstruct count {\n    static const std::size_t value = sizeof...(Types);\n};\n</code></pre>\n<p id=\"so_3628364_3628564_1\">\u2014<em>end example</em> ]</p>\n</blockquote>\n", "OwnerUserId": "151292", "PostTypeId": "2", "Id": "3628564", "Score": "25", "CreationDate": "2010-09-02T15:19:43.603", "LastActivityDate": "2010-09-02T15:19:43.603"}, "3628406": {"ParentId": "3628364", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Here's <a href=\"http://www.generic-programming.org/~dgregor/cpp/variadic-templates.pdf\" rel=\"nofollow noreferrer\">a link</a> that may help you. Sample source from link:</p>\n<pre><code>template&lt;typename... Args&gt; struct count;\n\ntemplate&lt;&gt;\nstruct count&lt;&gt; {\n    static const int value = 0;\n};\n\ntemplate&lt;typename T, typename... Args&gt;\nstruct count&lt;T, Args...&gt; {\n    static const int value = 1 + count&lt;Args...&gt;::value;\n};\n</code></pre>\n", "OwnerUserId": "66692", "LastEditorUserId": "66692", "LastEditDate": "2010-09-03T18:55:02.840", "Id": "3628406", "Score": "3", "CreationDate": "2010-09-02T15:03:19.047", "LastActivityDate": "2010-09-03T18:55:02.840"}, "bq_ids": {"n4140": {"so_3628364_3628564_0": {"section_id": 6080, "quality": 0.6, "length": 15}}, "n3337": {"so_3628364_3628564_0": {"section_id": 5848, "quality": 0.6, "length": 15}}, "n4659": {"so_3628364_3628564_0": {"section_id": 7576, "quality": 0.6, "length": 15}}}});