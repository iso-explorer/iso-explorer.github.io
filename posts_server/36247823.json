post_cb({"bq_ids": {"n4140": {"so_36247823_36247823_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 3199}}, "n3337": {"so_36247823_36247823_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 3073}}, "n4659": {"so_36247823_36247823_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 3960}}}, "36247823": {"ViewCount": "158", "Body": "<p>I have following code:</p>\n<pre><code>  template&lt;int FORMAT&gt;\n  int double_to_bulk(double value,\n                       char* buf,\n                       double max_num,\n                       int* state = NULL)\n  {\n     if (isnan(value))\n     {\n        //Something to do\n        return 1;\n     }\n     //Something more to do\n  }\n</code></pre>\n<p>And strange compilation error:</p>\n<blockquote>\n<p id=\"so_36247823_36247823_0\">myfile.h: In function \u2018int double_to_bulk(double, char*, double,\n  int*)\u2019: </p>\n<p id=\"so_36247823_36247823_1\">myfile.h:351: error: there are no arguments to \u2018isnan\u2019 that\n  depend on a template parameter, so a declaration of \u2018isnan\u2019 must be\n  available </p>\n<p id=\"so_36247823_36247823_2\">myfile.h:351: error: (if you use \u2018-fpermissive\u2019, G++ will\n  accept your code, but allowing the use of an undeclared name is\n  deprecated)</p>\n</blockquote>\n<p>But I really don't want to use <code>-fpermissive</code></p>\n<p>I use <code>gcc 4.1.2</code>, quite old, but nothing to do with it. Why is it problem to use <code>isnan</code> in template function?</p>\n", "AcceptedAnswerId": "36247857", "Title": "Using isnan in template function", "CreationDate": "2016-03-27T13:24:06.867", "Id": "36247823", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2016-03-27T13:32:43.483", "Score": "-1", "OwnerUserId": "1927794", "Tags": "<c++><templates><macros><gcc4>", "AnswerCount": "2"}, "36247906": {"Id": "36247906", "PostTypeId": "2", "Body": "<p>Adding the line <code>#include&lt;cmath&gt;</code> should fix the problem.</p>\n<p>If any arguments did dependent on a template parameter (e.g. if one of the arguments had a template-parameter type), the compiler will only check for existence of <code>isnan</code> when you instantiate the template, which would probably cause an error anyway, just later, or potentially not at all if you never use the template.</p>\n<p>DO NOT use <code>-fpermisive</code>, it would probably just delay the error to link time</p>\n", "LastActivityDate": "2016-03-27T13:32:43.483", "CommentCount": "0", "CreationDate": "2016-03-27T13:32:43.483", "ParentId": "36247823", "Score": "0", "OwnerUserId": "5277173"}, "36247857": {"Id": "36247857", "PostTypeId": "2", "Body": "<p>It looks like you don't have an available definition for <code>isnan</code>. Have you included in your source the appropriate header file where <code>isnan</code> is defined? Nothing at all here seems to depend on your template parameter.</p>\n", "LastActivityDate": "2016-03-27T13:27:07.620", "CommentCount": "1", "CreationDate": "2016-03-27T13:27:07.620", "ParentId": "36247823", "Score": "1", "OwnerUserId": "2098932"}});