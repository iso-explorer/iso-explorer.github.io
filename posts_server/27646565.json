post_cb({"27646928": {"ParentId": "27646565", "CommentCount": "0", "Body": "<p>In reference to standard c++</p>\n<pre><code>yes it will be default constructor.\nconstructor with no arguments will be treated as default constructor.\n</code></pre>\n", "OwnerUserId": "4341060", "PostTypeId": "2", "Id": "27646928", "Score": "0", "CreationDate": "2014-12-25T11:48:59.657", "LastActivityDate": "2014-12-25T11:48:59.657"}, "27646980": {"ParentId": "27646565", "CommentCount": "0", "Body": "<p>It can be said that a default constructor is a constructor with no parameters or all parameters have default arguments. For more info, please look at <a href=\"http://en.cppreference.com/w/cpp/language/default_constructor\" rel=\"nofollow\">here</a> and <a href=\"http://en.wikipedia.org/wiki/Default_constructor\" rel=\"nofollow\">here</a> . Both of them is acceptable as a default argument. In addition to that, a default constructor can be explicitly or implicitly defined. If you do not explicitly define one, compiler generates an implicit default constructor for you. There is an exception for C++11 (please see my comment for the answer of @ForEver), which is a new ans usable feature instead of private (copy) constructors for some patterns I think.</p>\n<p>I do not know a term like \"Empty Constructor\", because C++ compilers do not interested in what you have done inside the constructor. They only (implicitly) define and/or execute it. So you are free to do whatever you want (of course without causing a crash and etc.) inside the constructor.</p>\n", "OwnerUserId": "359810", "PostTypeId": "2", "Id": "27646980", "Score": "0", "CreationDate": "2014-12-25T11:57:51.663", "LastActivityDate": "2014-12-25T11:57:51.663"}, "27646565": {"CommentCount": "0", "ViewCount": "102", "PostTypeId": "1", "CreationDate": "2014-12-25T10:56:30.730", "LastActivityDate": "2014-12-25T12:55:43.153", "Title": "Empty and Default costructor are same or different?", "AcceptedAnswerId": "27647126", "LastEditorDisplayName": "user3920237", "LastEditDate": "2014-12-25T10:58:35.113", "Id": "27646565", "Score": "0", "Body": "<p>The constructor with  no arguments is declared. Can it be treated as a default constructor? and if the constructor with no arguments has no statements inside will it be a default or empty constructor?</p>\n", "Tags": "<c++>", "OwnerUserId": "4379933", "AnswerCount": "6"}, "27647074": {"ParentId": "27646565", "CommentCount": "0", "Body": "<p>When an object is created without any parameters, it calls default constructor. Generally it is a constructor without argument, but not always.</p>\n<pre><code>class FOO \n{\n    int i;  \npublic:   \n    FOO(int iVal = 10) \n    {\n        i = iVal;   \n    }\n};\n</code></pre>\n<p>In above case the constructor with default parameter is a default constructor.</p>\n<p>Empty Constructor is nothing. May be you are trying to ensure that no member variables are initialized.</p>\n", "OwnerUserId": "4393636", "PostTypeId": "2", "Id": "27647074", "Score": "0", "CreationDate": "2014-12-25T12:11:26.293", "LastActivityDate": "2014-12-25T12:11:26.293"}, "27647126": {"ParentId": "27646565", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>You should distinguish between terms <em>default constructor</em> and <em>explicitly defaulted constructor</em>. According to the C++ Standard (12.1 Constructors)</p>\n<blockquote>\n<p id=\"so_27646565_27647126_0\">4 A default constructor for a class X is a constructor of class X that\n  can be called without an argument.</p>\n</blockquote>\n<p>From this definition for example it follows that in general case default constructor may have parameters. Moreover the same constructor can be a default constructor and non-default constructor.</p>\n<p>Consider the following example</p>\n<p>Let's assume that you defined a class with a constructor with one parameter</p>\n<pre><code>struct A\n{\n    A( int );\n};\n</code></pre>\n<p>Till now it is not a default construtor. You may not write for example</p>\n<pre><code>A a1;\n</code></pre>\n<p>the compiler will issue an error. But you may write</p>\n<pre><code>A a1( 10 );\n</code></pre>\n<p>Then after this definition of a1 there is definition of the constructor with a default argument</p>\n<pre><code>A::A( int = 0 ) {}\n</code></pre>\n<p>Now the constructor has become a default constructor and you may write</p>\n<pre><code>A a2;\n</code></pre>\n<p>The whole example will look like</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct A\n{\n    A( int );\n};\n\n//A a1; - compilation error\nA a1( 10 );\n\nA::A( int = 0 ) {}\n\nA a2; // O'k\n\nint main() \n{\n\n    return 0;\n}\n</code></pre>\n<p>The explicitly defaulted constructor is a constructor that defined with keyword <strong>default</strong>. Explicitly defaulted constructor may not have default arguments.\nHere is an example of a default constructor that is explicitly defaulted</p>\n<pre><code>struct A\n{\n    A() = default;\n};\n</code></pre>\n<p>So a default constructor that was defaulted may not have parameters.</p>\n<p>As for this your question</p>\n<blockquote>\n<p id=\"so_27646565_27647126_1\">if the constructor with no arguments has no statements inside will it\n  be a default or empty constructor?</p>\n</blockquote>\n<p>then there is no such a term as empty constructor in the C++ Standard. However the defaulted default constructor looks the same way as a user defined default constructor with an empty body. From the C++ Standard (12.1 Constructors, paragraph #5)</p>\n<blockquote>\n<p id=\"so_27646565_27647126_2\">The implicitly-defined default constructor performs the set of\n  initializations of the class that would be performed by a user-written\n  default constructor for that class with no ctor-initializer (12.6.2)\n  and an empty compound-statement.</p>\n</blockquote>\n<p>Take into account that there is a great difference between implicitly defined by the compiler and explicitly user-defined with empty body copy constructors. I described it\n<a href=\"http://cpp.forum24.ru/?1-1-20-00000021-000-0-0-1388485669\" rel=\"nofollow\">here</a> Though it is written in Russian but I think you can translate in English using browser  or web (for example google) service translate.</p>\n", "OwnerUserId": "2877241", "LastEditorUserId": "2877241", "LastEditDate": "2014-12-25T12:55:43.153", "Id": "27647126", "Score": "0", "CreationDate": "2014-12-25T12:19:36.347", "LastActivityDate": "2014-12-25T12:55:43.153"}, "27646596": {"ParentId": "27646565", "CommentCount": "0", "Body": "<p>Yes because a default constructor is one that can be called without arguments.</p>\n", "Id": "27646596", "PostTypeId": "2", "OwnerDisplayName": "user3522371", "Score": "3", "CreationDate": "2014-12-25T10:59:19.377", "LastActivityDate": "2014-12-25T10:59:19.377"}, "27646586": {"ParentId": "27646565", "CommentCount": "3", "Body": "<p>From C++11 standard N3376 12.1/5</p>\n<blockquote>\n<p id=\"so_27646565_27646586_0\">A default constructor for a class X is a constructor of class X that\n  can be called without an argument. If there is no user-declared\n  constructor for class X, a constructor having no parameters is\n  implicitly declared as defaulted (8.4)</p>\n</blockquote>\n<p>So constructor without arguments (declared, or not declared) is default constructor.</p>\n", "OwnerUserId": "1498580", "PostTypeId": "2", "Id": "27646586", "Score": "3", "CreationDate": "2014-12-25T10:58:53.790", "LastActivityDate": "2014-12-25T10:58:53.790"}, "bq_ids": {"n4140": {"so_27646565_27647126_2": {"section_id": 370, "quality": 0.8888888888888888, "length": 16}, "so_27646565_27647126_0": {"section_id": 369, "quality": 0.875, "length": 7}, "so_27646565_27646586_0": {"section_id": 369, "quality": 0.9444444444444444, "length": 17}}, "n3337": {"so_27646565_27647126_2": {"section_id": 360, "quality": 0.8888888888888888, "length": 16}, "so_27646565_27647126_0": {"section_id": 359, "quality": 0.875, "length": 7}, "so_27646565_27646586_0": {"section_id": 359, "quality": 0.9444444444444444, "length": 17}}, "n4659": {"so_27646565_27647126_2": {"section_id": 384, "quality": 0.8888888888888888, "length": 16}, "so_27646565_27646586_0": {"section_id": 381, "quality": 0.8333333333333334, "length": 15}, "so_27646565_27647126_0": {"section_id": 4058, "quality": 0.75, "length": 6}}}});