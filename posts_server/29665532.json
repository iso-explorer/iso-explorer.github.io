post_cb({"bq_ids": {"n4140": {"so_29665532_29665567_0": {"length": 14, "quality": 1.0, "section_id": 3252}}, "n3337": {"so_29665532_29665567_0": {"length": 14, "quality": 1.0, "section_id": 3124}}, "n4659": {"so_29665532_29665567_0": {"length": 14, "quality": 1.0, "section_id": 4010}}}, "29665532": {"ViewCount": "43", "Body": "<p>I have a class object with the following default constructor:</p>\n<pre><code>Point( double x = 0, double y = 0 );\n</code></pre>\n<p>If I create:</p>\n<pre><code>Point myPoint();\n</code></pre>\n<p>I'll get a point with <code>(0, 0)</code>.  If I create:</p>\n<pre><code>Point mySecondPoint(14);\n</code></pre>\n<p>I'll get a point with <code>(14, 0)</code>.</p>\n<p>But why is:</p>\n<pre><code>Point myThirdPoint(, 10)   //invalid\n</code></pre>\n<p>not giving me a point of <code>(0, 10)</code>.  How should I code for a possibility of having the 2nd parameter, but not the first?</p>\n", "AcceptedAnswerId": "29665683", "Title": "Missing the First Constructor Parameter", "CreationDate": "2015-04-16T04:47:02.423", "Id": "29665532", "CommentCount": "1", "LastEditDate": "2015-04-16T04:48:22.453", "PostTypeId": "1", "LastEditorUserId": "2659313", "LastActivityDate": "2015-04-16T06:38:52.737", "Score": "1", "OwnerUserId": "1852285", "Tags": "<c++><parameters><constructor>", "AnswerCount": "3"}, "29665562": {"Id": "29665562", "PostTypeId": "2", "Body": "<p>Because C++ has some strict syntactic rules. Your example is simply incorrect from this point of view. When declaring default parameters, follow this rule: the default parameters that you'd want to change least frequently should be the rightmost default parameters, since C++ mandates specifying all parameters prior to the one you want to change its value from default.</p>\n", "LastActivityDate": "2015-04-16T04:49:37.793", "Score": "0", "CreationDate": "2015-04-16T04:49:37.793", "ParentId": "29665532", "CommentCount": "0", "OwnerUserId": "3093378"}, "29665683": {"Id": "29665683", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_29665532_29665683_0\">Point myThirdPoint(, 10)   //invalid</p>\n</blockquote>\n<p>As others have stated this syntax is not supported by C++.</p>\n<blockquote>\n<p id=\"so_29665532_29665683_1\">How should I code for a possibility of having the 2nd parameter, but not the first?</p>\n</blockquote>\n<p>First you should consider if this is really what <em>should be done</em>. I don't know if there are more elegant ways to achieve this but you could introduce new types and rely upon overloading. <strong>Caveat</strong>, I'm not suggesting you should actually go this route rather just showing for illustration.</p>\n<pre><code>struct X\n{\n    X(double v = 0.0) : mValue(v) {}\n    operator double() const { return mValue; }\n\nprivate:\n    double mValue;\n};\n\nstruct Y\n{\n    Y(double v = 0.0) : mValue(v) {}\n    operator double() const { return mValue; }\n\nprivate:\n    double mValue;\n};\n\nclass Point\n{\npublic:\n    Point() : mX(0.0), mY(0.0) {}\n    Point(X x) : mX(x), mY(0.0) {}\n    Point(Y y) : mX(0.0), mY(y) {}\n    Point(X x, Y y) : mX(x), mY(y) {}\n\nprivate:\n    double mX;\n    double mY;\n};\n\nint main()\n{\n    Point p1;\n    Point p2(X(1));\n    Point p3(Y(2));\n    Point p4(X(3), Y(4));\n\n    return 0;\n}\n</code></pre>\n", "LastActivityDate": "2015-04-16T05:01:08.397", "Score": "0", "CreationDate": "2015-04-16T05:01:08.397", "ParentId": "29665532", "CommentCount": "2", "OwnerUserId": "4505712"}, "29665567": {"Id": "29665567", "PostTypeId": "2", "Body": "<p>Unlike a few other languages, <code>C++</code> mandates to supply all default arguments prior to the supplied arguments.</p>\n<p>From <strong>8.3.6 Default arguments</strong> [dcl.fct.default]</p>\n<blockquote>\n<p id=\"so_29665532_29665567_0\">If an initializer-clause is specified in a parameter-declaration this\n  initializer-clause is used as a default argument. Default arguments\n  will be used in calls where <strong>trailing</strong> arguments are missing.</p>\n</blockquote>\n<p>So if a function has 5 arguments out of which 3 are default:</p>\n<ol>\n<li>Default 3 must be last 3 arguments</li>\n<li>You can call function with first 2 arguments, first 3 arguments, first 4 arguments or all 5 arguments.</li>\n</ol>\n<hr>\n<blockquote>\n<p id=\"so_29665532_29665567_1\">How should I code for a possibility of having the 2nd parameter, but\n  not the first?</p>\n</blockquote>\n<p>In my views your constructor interfaces are not very good. In this case I would prefer only two constructors, default without any argument and one with two arguments. If you want to give just one argument, you must specify the default of other by yourself.</p>\n<p>i.e.</p>\n<pre><code>Point();\nPoint(double x, double y);\n</code></pre>\n<p>Or you should use some function to create a new Point</p>\n<pre><code>Point CreateWithY(double y)\n{\n  return Point(0.0, y);\n}\n</code></pre>\n<p>and use it as</p>\n<pre><code>Point p = CreateWithY(42.0); // Creates (0.0, 42.0)\n</code></pre>\n<hr>\n<p>Not part of the answer but:</p>\n<pre><code>Point myPoint();\n</code></pre>\n<p>declares a <strong>function</strong> myPoint which accepts no parameters and return an object of type <code>Point</code>. What you intend to use is possibly:</p>\n<pre><code>Point myPoint;\n</code></pre>\n</hr></hr>", "LastEditorUserId": "2659313", "LastActivityDate": "2015-04-16T06:38:52.737", "Score": "1", "CreationDate": "2015-04-16T04:49:45.477", "ParentId": "29665532", "CommentCount": "0", "LastEditDate": "2015-04-16T06:38:52.737", "OwnerUserId": "2659313"}});