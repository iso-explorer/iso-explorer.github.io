post_cb({"17768718": {"CommentCount": "0", "AcceptedAnswerId": "17769015", "PostTypeId": "1", "LastEditorUserId": "922184", "CreationDate": "2013-07-21T03:17:14.903", "LastActivityDate": "2016-08-15T22:34:53.590", "LastEditDate": "2013-07-21T04:34:15.187", "ViewCount": "254", "FavoriteCount": "0", "Title": "Why is there a distinct \"inter-thread happens before\" relation defined in ISO/IEC 14882:2011?", "Id": "17768718", "Score": "2", "Body": "<p>\u00a7 1.10.11 of ISO/IEC 14882:2011 (C++ 11) defines the \"inter-thread happens before\" relation between evaluations, whose only difference from the \"happens before\" relation in \u00a7 1.10.12 is that A happens before B if A is sequenced before B but that is not sufficient for A inter-thread happens before B. Why is \"inter-thread happens before\" important enough to warrant a separate definition?</p>\n<p>A note in \u00a7 1.10.11 suggests that \"inter-thread happens before\" doesn't allow evaluations whose only relation is \"sequenced before\" in part</p>\n<blockquote>\n<p id=\"so_17768718_17768718_0\">to permit \u201cinter-thread happens before\u201d to be transitively closed</p>\n</blockquote>\n<p>What does that mean? I know what a transitive closure is, and I know what it means for a set to be closed over some operation, but I've never heard of \"transitively closed\" and both Google and context are failing me.</p>\n", "Tags": "<c++><multithreading><c++11><memory-model>", "OwnerUserId": "636917", "AnswerCount": "2"}, "17769015": {"ParentId": "17768718", "CommentCount": "2", "Body": "<p>\"Inter-thread happens before\" is defined purely for exposition. Note how \"happens before\" is defined as \"sequenced before or inter-thread happens before\", and the notion of \"inter-thread happens before\" is not used for anything else. \"Sequenced before\" describes evaluations happening on the same thread, \"inter-thread happens before\" applies to evaluations happening on different threads; \"happens before\" combines the two.</p>\n", "OwnerUserId": "1670129", "PostTypeId": "2", "Id": "17769015", "Score": "5", "CreationDate": "2013-07-21T04:22:55.940", "LastActivityDate": "2013-07-21T04:22:55.940"}, "38964035": {"ParentId": "17768718", "CommentCount": "0", "Body": "<p>The \"transitively closed\" remark simply means that the relation is transitive: if A inter-thread happens before B and B inter-thread happens before C, then A inter-thread happens before C. </p>\n<p>That property doesn't hold if \"sequenced before\" alone qualifies as \"inter-thread happens before\" because of the first exclusion (of sequences ending in \"dependency-ordered before\" followed by \"sequenced before\").</p>\n<p>This also means that \"happens before\" is not transitive; if A happens before B and B happens before C, it doesn't necessarily follow that A happens before C.</p>\n", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "38964035", "Score": "0", "CreationDate": "2016-08-15T22:34:53.590", "LastActivityDate": "2016-08-15T22:34:53.590"}, "bq_ids": {"n4140": {"so_17768718_17768718_0": {"section_id": 5824, "quality": 1.0, "length": 6}}, "n3337": {"so_17768718_17768718_0": {"section_id": 5595, "quality": 1.0, "length": 6}}, "n4659": {"so_17768718_17768718_0": {"section_id": 7285, "quality": 1.0, "length": 6}}}});