post_cb({"bq_ids": {"n4140": {"so_39353607_39353607_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 2753}, "so_39353607_39353607_5": {"length": 7, "quality": 0.875, "section_id": 2751}, "so_39353607_39353607_3": {"length": 4, "quality": 0.6666666666666666, "section_id": 2727}, "so_39353607_39353607_7": {"length": 6, "quality": 0.8571428571428571, "section_id": 2760}, "so_39353607_39353674_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 2753}, "so_39353607_39353674_1": {"length": 7, "quality": 0.875, "section_id": 2754}, "so_39353607_39353607_6": {"length": 6, "quality": 0.8571428571428571, "section_id": 2760}}, "n3337": {"so_39353607_39353607_5": {"length": 7, "quality": 0.875, "section_id": 2712}, "so_39353607_39353607_3": {"length": 4, "quality": 0.6666666666666666, "section_id": 2688}, "so_39353607_39353607_7": {"length": 6, "quality": 0.8571428571428571, "section_id": 2721}, "so_39353607_39353607_6": {"length": 6, "quality": 0.8571428571428571, "section_id": 2721}, "so_39353607_39353674_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 2714}, "so_39353607_39353607_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 2714}, "so_39353607_39353674_1": {"length": 7, "quality": 0.875, "section_id": 2715}}, "n4659": {"so_39353607_39353607_5": {"length": 7, "quality": 0.875, "section_id": 3489}, "so_39353607_39353607_3": {"length": 4, "quality": 0.6666666666666666, "section_id": 3466}, "so_39353607_39353607_6": {"length": 6, "quality": 0.8571428571428571, "section_id": 3498}, "so_39353607_39353674_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 3491}, "so_39353607_39353607_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 3491}, "so_39353607_39353674_1": {"length": 6, "quality": 0.75, "section_id": 3492}}}, "39353674": {"Id": "39353674", "PostTypeId": "2", "Body": "<p>Your code has undefined behaviour, because you are violating a precondition ([thread.mutex.requirements.mutex]):</p>\n<blockquote>\n<p id=\"so_39353607_39353674_0\">The expression <code>m.lock()</code> shall be well-formed and have the following semantics:</p>\n<p id=\"so_39353607_39353674_1\"><em>Requires:</em> If <code>m</code> is of type <code>std::mutex</code> [...], the calling thread does not own the mutex.</p>\n</blockquote>\n", "LastActivityDate": "2016-09-06T16:23:16.390", "CommentCount": "12", "CreationDate": "2016-09-06T16:23:16.390", "ParentId": "39353607", "Score": "5", "OwnerUserId": "596781"}, "39353937": {"Id": "39353937", "PostTypeId": "2", "Body": "<p>That exception was removed from <code>std::mutex</code> by <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-defects.html#2309\" rel=\"nofollow\">Library Issue #2309</a>, so perhaps g++ 5.4 is just up-to-date.</p>\n", "LastActivityDate": "2016-09-06T16:38:41.790", "CommentCount": "1", "CreationDate": "2016-09-06T16:38:41.790", "ParentId": "39353607", "Score": "0", "OwnerUserId": "597607"}, "39353607": {"ViewCount": "88", "Body": "<p>Why does the following code result in a deadlock in g++ 5.4.0?</p>\n<pre><code>#include &lt;mutex&gt;\n\nint main()\n{\n    std::mutex m;\n    m.lock();\n    m.lock();\n}\n</code></pre>\n<p>As far as I know, this code should result in an exception according to the Standard:</p>\n<blockquote>\n<p id=\"so_39353607_39353607_0\">30.4.1.2 Mutex types [thread.mutex.requirements.mutex]</p>\n<p id=\"so_39353607_39353607_1\">6 The expression m.lock() shall be well-formed and have the following\n  semantics:</p>\n<p id=\"so_39353607_39353607_2\">[...]</p>\n<p id=\"so_39353607_39353607_3\">12 Throws: system_error when an exception is required (30.2.2).</p>\n<p id=\"so_39353607_39353607_4\">13 Error conditions:</p>\n<p id=\"so_39353607_39353607_5\">(13.1) \u2014 operation_not_permitted \u2014 if the thread does not have the\n  privilege to perform the operation.</p>\n<p id=\"so_39353607_39353607_6\">(13.2) \u2014 resource_deadlock_would_occur \u2014 if the implementation detects\n  that a deadlock would occur.</p>\n<p id=\"so_39353607_39353607_7\">(13.3) \u2014 <strong>device_or_resource_busy \u2014 if the mutex is already locked and\n  blocking is not possible</strong>.</p>\n</blockquote>\n<p>What's wrong then? Is it a bug in the library?</p>\n", "AcceptedAnswerId": "39353674", "Title": "Recursive lock() call in g++", "CreationDate": "2016-09-06T16:19:44.693", "Id": "39353607", "CommentCount": "3", "LastEditDate": "2016-09-06T16:22:54.780", "PostTypeId": "1", "LastEditorUserId": "1608835", "LastActivityDate": "2016-09-06T16:38:41.790", "Score": "2", "OwnerUserId": "1608835", "Tags": "<c++><multithreading><c++11><gcc><c++14>", "AnswerCount": "2"}});