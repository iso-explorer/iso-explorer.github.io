post_cb({"bq_ids": {"n4140": {"so_49050524_49050725_1": {"length": 4, "quality": 1.0, "section_id": 3286}, "so_49050524_49050727_0": {"length": 6, "quality": 0.5454545454545454, "section_id": 369}, "so_49050524_49050725_3": {"length": 11, "quality": 1.0, "section_id": 3286}, "so_49050524_49050725_0": {"length": 11, "quality": 1.0, "section_id": 5431}}, "n3337": {"so_49050524_49050725_1": {"length": 4, "quality": 1.0, "section_id": 3156}, "so_49050524_49050727_0": {"length": 6, "quality": 0.5454545454545454, "section_id": 359}, "so_49050524_49050725_3": {"length": 11, "quality": 1.0, "section_id": 3156}, "so_49050524_49050725_0": {"length": 11, "quality": 1.0, "section_id": 5226}}, "n4659": {"so_49050524_49050727_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 4048}, "so_49050524_49050725_3": {"length": 7, "quality": 0.6363636363636364, "section_id": 382}, "so_49050524_49050725_0": {"length": 11, "quality": 1.0, "section_id": 6859}}}, "49050725": {"Id": "49050725", "PostTypeId": "2", "Body": "<p>I have a C++14 draft which says, at 7.1.6.1 [dcl.type.cv]:</p>\n<blockquote>\n<p id=\"so_49050524_49050725_0\">As described in 8.5, the definition of an object or subobject of\n  const-qualified type must specify an initializer or be subject to\n  default-initialization</p>\n</blockquote>\n<p>8.5 [dcl.init] says (clause 7):</p>\n<blockquote>\n<p id=\"so_49050524_49050725_1\">To default-initialize an object of type T means:</p>\n</blockquote>\n<p>[for a non class, non array type]:</p>\n<blockquote>\n<p id=\"so_49050524_49050725_2\">... no initialization is performed</p>\n</blockquote>\n<p>And immediately follows with:</p>\n<blockquote>\n<p id=\"so_49050524_49050725_3\">If a program calls for the default initialization of an object of a const-qualified type T, T shall be a class type\n  with a user-provided default constructor.</p>\n</blockquote>\n<p>Therefore a <code>const</code> built-in must have an initializer, since otherwise it would be default-initialized and that is not allowed.</p>\n", "LastEditorUserId": "388661", "LastActivityDate": "2018-03-01T18:26:50.303", "Score": "9", "CreationDate": "2018-03-01T13:27:49.113", "ParentId": "49050524", "CommentCount": "5", "OwnerUserId": "388661", "LastEditDate": "2018-03-01T18:26:50.303"}, "49050524": {"ViewCount": "113", "Body": "<p>I have been looking for this in N4713 for more than two hours to no avail.</p>\n", "AcceptedAnswerId": "49050725", "Title": "Where in the C++ Standard does it say that the definition of a const built-in type variable must be initialized?", "CreationDate": "2018-03-01T13:15:38.637", "Id": "49050524", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2018-03-01T18:26:50.303", "Score": "4", "OwnerUserId": "1162978", "Tags": "<c++><language-lawyer>", "AnswerCount": "2"}, "49050727": {"Id": "49050727", "PostTypeId": "2", "Body": "<p>It's worded in quite an indirect way in N4713 [dcl.init] 11.6/7:</p>\n<blockquote>\n<p id=\"so_49050524_49050727_0\">If a program calls for the default-initialization of an object of a const-qualified type <code>T</code>, <code>T</code> shall be a const-default-\n  constructible class type or array thereof.</p>\n</blockquote>\n<p>Not providing an initialiser causes an object to be default-initialised. As such, if it's <code>const</code> qualified and of a built-in type, it violates the \"shall\" rule above.</p>\n", "LastActivityDate": "2018-03-01T13:27:57.320", "Score": "4", "CreationDate": "2018-03-01T13:27:57.320", "ParentId": "49050524", "CommentCount": "0", "OwnerUserId": "1782465"}});