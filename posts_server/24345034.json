post_cb({"bq_ids": {"n4140": {"so_24345034_24345067_1": {"length": 62, "quality": 0.9393939393939394, "section_id": 5881}, "so_24345034_24345067_3": {"length": 19, "quality": 0.95, "section_id": 5883}, "so_24345034_24345067_2": {"length": 42, "quality": 0.9333333333333333, "section_id": 5882}, "so_24345034_24345169_1": {"length": 63, "quality": 0.9692307692307692, "section_id": 5881}}, "n3337": {"so_24345034_24345067_1": {"length": 62, "quality": 0.9393939393939394, "section_id": 5652}, "so_24345034_24345067_3": {"length": 19, "quality": 0.95, "section_id": 5654}, "so_24345034_24345067_2": {"length": 42, "quality": 0.9333333333333333, "section_id": 5653}, "so_24345034_24345169_1": {"length": 63, "quality": 0.9692307692307692, "section_id": 5652}}, "n4659": {"so_24345034_24345067_1": {"length": 62, "quality": 0.9393939393939394, "section_id": 7364}, "so_24345034_24345067_3": {"length": 17, "quality": 0.85, "section_id": 7366}, "so_24345034_24345067_2": {"length": 41, "quality": 0.9111111111111111, "section_id": 7365}, "so_24345034_24345169_1": {"length": 63, "quality": 0.9692307692307692, "section_id": 7364}}}, "24345169": {"Id": "24345169", "PostTypeId": "2", "Body": "<p>The line</p>\n<pre><code>int A::foo(){ return 0; }\n</code></pre>\n<p>defines the member function <code>foo</code> of <code>A</code>. It is not legal to define it under the definition of class <code>B</code>. <code>A::foo()</code> can only be defined in the body of the definition of <code>A</code> or in the namespace in which <code>A</code> is defined.</p>\n<p>Here's the relevant documentation from the standard:</p>\n<blockquote>\n<p id=\"so_24345034_24345169_0\">9.3 Member functions [class.mfct]</p>\n<p id=\"so_24345034_24345169_1\">A member function may be defined (8.4) in its class definition, in which case it is an inline member function (7.1.2), or it may be defined outside of its class definition if it has already been declared but not defined in its class definition. A member function definition that appears outside of the class definition shall appear in a namespace scope enclosing the class definition. Except for member function definitions that appear outside of a class definition, and except for explicit specializations of member functions of class templates and member function templates (14.7) appearing outside of the class definition, a member function shall not be redeclared.</p>\n</blockquote>\n<p>The error message</p>\n<pre>\n//error: non-friend class member 'foo' cannot have a qualified name\n</pre>\n<p>is produced by the compiler in the hope that you probably wanted to use:</p>\n<pre><code>class B\n{\npublic:\n    friend int A::foo();\n};\n</code></pre>\n", "LastActivityDate": "2014-06-21T19:34:05.123", "CommentCount": "0", "CreationDate": "2014-06-21T19:34:05.123", "ParentId": "24345034", "Score": "2", "OwnerUserId": "434551"}, "24345067": {"Id": "24345067", "PostTypeId": "2", "Body": "<pre><code>int A::foo(){ return 0; };\n</code></pre>\n<blockquote>\n<p id=\"so_24345034_24345067_0\">Why does this error caused?</p>\n</blockquote>\n<p>Because this doesn't mean anything in C++. This is not valid construction. Related to this is </p>\n<p>C++ Standard n3337 <strong>\u00a7</strong> 9.3 paragraph <strong>Member functions</strong></p>\n<blockquote>\n<p id=\"so_24345034_24345067_1\">2)\n  A member function may be defined (8.4) in its class definition, in\n  which case it is an inline member func- tion (7.1.2), or it may be\n  defined outside of its class definition if it has already been\n  declared but not defined in its class definition. A member function\n  definition that appears outside of the class definition shall appear\n  in a namespace scope enclosing the class definition. Except for member\n  function definitions that appear outside of a class definition, and\n  except for explicit specializations of member functions of class\n  templates and member function templates (14.7) appearing outside of\n  the class definition, a member function shall not be redeclared. </p>\n<p id=\"so_24345034_24345067_2\">3)\n  An\n  inline member function (whether static or non-static) may also be\n  defined outside of its class definition provided either its\n  declaration in the class definition or its definition outside of the\n  class definition declares the function as inline. [ Note: Member\n  functions of a class in namespace scope have external linkage. Member\n  functions of a local class (9.8) have no linkage. See 3.5. \u2014 end note\n  ]</p>\n<p id=\"so_24345034_24345067_3\">4) There shall be at most one definition of a non-inline member\n  function in a program; no diagnostic is required. There may be more\n  than one inline member function definition in a program. See 3.2 and\n  7.1.2.</p>\n</blockquote>\n<p>You should ask yourself what is this supposed to be? What do you want to achieve? If your intent is to override it you can do it this way:</p>\n<pre><code>class A\n{\npublic:\n    virtual int foo() { return 3;}\n};\n\nclass B : public A\n{\npublic:\n    int foo() override { return 0; }\n};\n</code></pre>\n<p>If you want to use A::foo inside B then make A::foo static </p>\n<pre><code>class A\n{\npublic:\n    static int foo() { return 3;}\n};\n\nclass B\n{\npublic:\n    int bar()\n    {\n        int u = A::foo();\n        return u + 8 - 2;\n    }\n};\n</code></pre>\n<p>or instantiate A member in B:</p>\n<pre><code>class A\n{\npublic:\n    int foo() { return 3;}\n};\n\nclass B\n{\n    A a;\npublic:\n    int bar()\n    {\n        int u = a.foo();\n        return u + 8 - 2;\n    }\n};\n</code></pre>\n", "LastEditorUserId": "1141471", "LastActivityDate": "2014-06-21T19:44:54.883", "Score": "3", "CreationDate": "2014-06-21T19:21:50.857", "ParentId": "24345034", "CommentCount": "0", "OwnerUserId": "1141471", "LastEditDate": "2014-06-21T19:44:54.883"}, "24345034": {"ViewCount": "3087", "Body": "<p>I've written the following code:</p>\n<pre><code>class A\n{\npublic:\n    int foo();\n};\n\nclass B\n{\npublic:\n    int A::foo(){ return 0; }; //error: non-friend class member 'foo' cannot have a qualified name\n};\n\nint main(){ }\n</code></pre>\n<p>Why does this error caused? Can you get the reference from the Standard denied that construction explicitly?</p>\n", "AcceptedAnswerId": "24345067", "Title": "Qualified class member", "CreationDate": "2014-06-21T19:18:37.073", "Id": "24345034", "CommentCount": "4", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "LastActivityDate": "2014-06-21T19:44:54.883", "Score": "1", "Tags": "<c++><class><language-lawyer>", "AnswerCount": "2"}});