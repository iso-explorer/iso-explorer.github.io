post_cb({"33605688": {"ParentId": "33605632", "CommentCount": "5", "CreationDate": "2015-11-09T09:08:27.183", "OwnerUserId": "991000", "PostTypeId": "2", "Id": "33605688", "Score": "0", "Body": "<p>Since it is C++, don't use c-style casts, try:</p>\n<pre><code> static_cast&lt;float&gt;(std::abs(...))\n</code></pre>\n", "LastActivityDate": "2015-11-09T09:08:27.183"}, "33606398": {"ParentId": "33605632", "CommentCount": "2", "CreationDate": "2015-11-09T09:50:59.937", "OwnerUserId": "743382", "PostTypeId": "2", "Id": "33606398", "Score": "8", "Body": "<p>You've commented that the use of <code>1.3</code> gives an error with your compiler. That means you've found a compiler bug. The standard is quite clear that this is not a narrowing conversion, so it should be allowed.</p>\n<p>Quoting N4140 (roughly C++14):</p>\n<blockquote>\n<p id=\"so_33605632_33606398_0\"><strong>8.5.4 List-initialization [dcl.init.list]</strong></p>\n<p id=\"so_33605632_33606398_1\">7 A <em>narrowing conversion</em> is an implicit conversion</p>\n<p id=\"so_33605632_33606398_2\">[...]</p>\n<p id=\"so_33605632_33606398_3\">-- (7.2) from <code>long double</code> to <code>double</code> or <code>float</code>, or from <code>double</code> to <code>float</code>, <strong>except where the source is a constant expression and the actual value after conversion is within the range of values that can be represented</strong>\n  (even if it cannot be represented exactly), or</p>\n<p id=\"so_33605632_33606398_4\">[...]</p>\n</blockquote>\n<p>Your <code>1.3</code> is a constant expression well within the range of <code>float</code>.</p>\n<p>I recommend reporting this to Microsoft, assuming it isn't a known issue already. Unfortunately, simply upgrading your Visual Studio won't fix this. I can reproduce the problem in VS2015.</p>\n", "LastActivityDate": "2015-11-09T09:50:59.937"}, "42736808": {"ParentId": "33605632", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2017-03-11T15:13:45.130", "Score": "0", "LastEditorUserId": "4284627", "LastEditDate": "2017-03-11T19:45:08.133", "Id": "42736808", "OwnerUserId": "7695214", "Body": "<p>This is maybe a bug or something. Use this instead:</p>\n<pre><code>float f;\nf=1.3;\n</code></pre>\n", "LastActivityDate": "2017-03-11T19:45:08.133"}, "bq_ids": {"n4140": {"so_33605632_33606398_3": {"section_id": 3329, "quality": 1.0, "length": 24}}, "n3337": {"so_33605632_33606398_3": {"section_id": 3199, "quality": 1.0, "length": 24}}, "n4659": {"so_33605632_33606398_3": {"section_id": 4095, "quality": 1.0, "length": 24}}}, "33605632": {"CommentCount": "15", "ViewCount": "3911", "PostTypeId": "1", "LastEditorUserId": "4523099", "CreationDate": "2015-11-09T09:05:20.047", "LastActivityDate": "2017-06-14T12:14:03.540", "Title": "Error 83 error C2398: conversion from 'double' to 'float' requires a narrowing conversion", "AcceptedAnswerId": "33606398", "LastEditDate": "2017-06-14T12:14:03.540", "Id": "33605632", "Score": "5", "Body": "<p>I have found many posts about this error but I could find how to overcome it.\nThis is the code where the error is triggered:</p>\n<pre><code>void main(){\n    float f{1.3};\n}\n</code></pre>\n<p>Why in the initialize-list no casting happened like any other variable? For example, this works smoothly:</p>\n<pre><code>float f = 1.3;\n</code></pre>\n", "Tags": "<c++><c++11><casting><floating-point><compiler-bug>", "OwnerUserId": "4523099", "AnswerCount": "3"}});