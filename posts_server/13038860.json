post_cb({"13038902": {"PostTypeId": "2", "ParentId": "13038860", "Body": "<p>the definition of new[] states that it requires an unsigned integer also typedefed to <code>size_t</code>. So that <em>should</em> never compile. </p>\n<p>See here <a href=\"http://en.cppreference.com/w/cpp/types/size_t\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/types/size_t</a> (which is an unsigned int).</p>\n", "CreationDate": "2012-10-23T20:41:02.467", "Score": "2", "LastEditDate": "2012-10-23T20:47:53.557", "CommentCount": "0", "Id": "13038902", "OwnerUserId": "1680957", "LastEditorUserId": "1680957", "LastActivityDate": "2012-10-23T20:47:53.557"}, "13038972": {"PostTypeId": "2", "ParentId": "13038860", "Body": "<p>The program is incorrect if the size is negative 5.3.4p6 from the C++03 standard:</p>\n<blockquote>\n<p id=\"so_13038860_13038972_0\">Every constant-expression in a direct-new-declarator shall be an integral constant expression (5.19) and evaluate to a <strong>strictly positive value</strong>. The expression in a direct-new-declarator shall have integral or enumeration type (3.9.1) with a <strong>non-negative value</strong>.</p>\n</blockquote>\n<p>The above quote covers <code>new T[a][b];</code>, where <code>b</code> is the <em>constant-expression</em> according to the grammar and <code>a</code> is the <em>expression</em> (only the first dimension).</p>\n", "CreationDate": "2012-10-23T20:47:15.537", "Score": "7", "LastEditDate": "2012-10-23T21:37:59.323", "CommentCount": "23", "Id": "13038972", "OwnerUserId": "36565", "LastEditorUserId": "36565", "LastActivityDate": "2012-10-23T21:37:59.323"}, "13038860": {"AcceptedAnswerId": "13038972", "OwnerUserId": "1608835", "LastActivityDate": "2012-10-23T21:37:59.323", "CreationDate": "2012-10-23T20:37:37.580", "Score": "5", "CommentCount": "0", "Title": "operator new with negative size", "AnswerCount": "3", "PostTypeId": "1", "Tags": "<c++>", "Body": "<p>In C++11 if we try to allocate array with negative size using global operator new, it will throw std::bad_array_new_length, but what about C++98 / C++03? Is it UB or will throw std::bad_alloc?</p>\n<pre><code>int main()\n{\n   int* ptr = new int[-1];\n}\n</code></pre>\n", "Id": "13038860", "ViewCount": "1719"}, "13038879": {"PostTypeId": "2", "ParentId": "13038860", "Body": "<p>You get this for <code>int a[-1]</code>:</p>\n<pre><code>prog.cpp: In function \u2018int main()\u2019:\nprog.cpp:4: error: size of array \u2018b\u2019 is negative\n</code></pre>\n<p>And this for <code>int* a = new int[-1]</code> (runtime error):</p>\n<pre><code>terminate called after throwing an instance of 'std::bad_alloc'\n  what():  std::bad_alloc\n</code></pre>\n", "CreationDate": "2012-10-23T20:39:13.300", "Score": "0", "CommentCount": "12", "Id": "13038879", "OwnerUserId": "1225541", "LastActivityDate": "2012-10-23T20:39:13.300"}, "bq_ids": {"n3337": {"so_13038860_13038972_0": {"quality": 0.6190476190476191, "length": 13, "section_id": 5855}}}});