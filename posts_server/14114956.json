post_cb({"14115071": {"ParentId": "14114956", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>Your <code>friend class B;</code> declaration <em>does</em> serve as a forward declaration, but such declaration is not found by name lookup until a matching declaration is provided.</p>\n<p><em>[class.friend]/11</em>:</p>\n<blockquote>\n<p id=\"so_14114956_14115071_0\">If a friend declaration appears in a local class (9.8) and the name specified is an unqualified name, a prior declaration is looked up without considering scopes that are outside the innermost enclosing non-class scope. For a friend function declaration, if there is no prior declaration, the program is ill-formed. For a friend class declaration, if there is no prior declaration, the class that is specified belongs to the innermost enclosing\n  non-class scope, but if it is subsequently referenced, its name is not found by name lookup until a matching declaration is provided in the innermost enclosing nonclass scope.</p>\n</blockquote>\n", "OwnerUserId": "927034", "LastEditorUserId": "927034", "LastEditDate": "2013-01-01T23:11:56.080", "Id": "14115071", "Score": "5", "CreationDate": "2013-01-01T23:05:51.703", "LastActivityDate": "2013-01-01T23:11:56.080"}, "14114956": {"CommentCount": "0", "AcceptedAnswerId": "14115071", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2013-01-01T22:49:44.080", "LastActivityDate": "2013-01-01T23:11:56.080", "LastEditDate": "2017-05-23T12:08:16.473", "ViewCount": "2087", "FavoriteCount": "1", "Title": "friend declaration not forward declaring", "Id": "14114956", "Score": "7", "Body": "<p>My understanding was that a <code>friend</code> declaration could also serve as a forward declaration for a class if the <code>class</code> specifier was used, as in this example:</p>\n<pre><code>class A\n{\n    friend class B;\n    B* b;\n};\n\nclass B {};\n\nint main() {}\n</code></pre>\n<p>However, g++ (4.6.3 and 4.7.0) gives me the following error (g++-4.7 should have support for <a href=\"http://gcc.gnu.org/projects/cxx0x.html\" rel=\"nofollow noreferrer\">extended friend declarations</a>), which is expected without a forward declaration:</p>\n<blockquote>\n<p id=\"so_14114956_14114956_0\">main.cpp:6:2: error: \u2018B\u2019 does not name a type</p>\n</blockquote>\n<p>In an attempt to confirm my expectations that the <code>friend class B;</code> should serve as a forward declaration, I found <a href=\"https://stackoverflow.com/a/9890827/507606\">this answer</a> and <a href=\"https://stackoverflow.com/a/657113/507606\">this answer</a>, but neither was conclusive (or I couldn't conclude much from them at least) so I attempted to consult the c++11 standard and found this example:</p>\n<pre><code>class X2 {\n    friend Ct; // OK: class C is a friend\n    friend D; // error: no type-name D in scope\n    friend class D; // OK: elaborated-type-speci\ufb01er declares new class\n}\n</code></pre>\n<p>Based on my reading of the the third declaration, my <code>friend class B</code> should be an <em>elaborated-type-specifier declaring a new class</em>.  </p>\n<p>I am just starting to understand official standard wording, so I must be missing something. What am I misunderstanding?</p>\n", "Tags": "<c++><c++11>", "OwnerUserId": "507606", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_14114956_14115077_0": {"section_id": 6694, "quality": 0.9666666666666667, "length": 29}, "so_14114956_14115071_0": {"section_id": 6694, "quality": 0.9649122807017544, "length": 55}}, "n3337": {"so_14114956_14115077_0": {"section_id": 6449, "quality": 0.9666666666666667, "length": 29}, "so_14114956_14115071_0": {"section_id": 6449, "quality": 0.9649122807017544, "length": 55}}, "n4659": {"so_14114956_14114956_0": {"section_id": 180, "quality": 0.8, "length": 4}, "so_14114956_14115077_0": {"section_id": 8169, "quality": 0.9666666666666667, "length": 29}, "so_14114956_14115071_0": {"section_id": 8169, "quality": 0.9649122807017544, "length": 55}}}, "14115077": {"ParentId": "14114956", "CommentCount": "0", "Body": "<p>Take a look at 11.3 paragraph 11:</p>\n<blockquote>\n<p id=\"so_14114956_14115077_0\">For a friend class declaration, if there is no prior declaration, the class that is specified belongs to the innermost enclosing non-class scope, but if it is subsequently referenced, its name is not found by name lookup until a matching declaration is provided in the innermost enclosing nonclass scope.</p>\n<p id=\"so_14114956_14115077_1\">Example:</p>\n</blockquote>\n<pre><code>class X;\nvoid a();\nvoid f() {\n  class Y;\n  extern void b();\n  class A {\n  friend class X;  // OK, but X is a local class, not ::X\n  friend class Y;  // OK\n  friend class Z;  // OK, introduces local class Z.\n  friend void a(); // error, ::a is not considered\n  friend void b(); // OK\n  friend void c(); // error\n  };\n  X *px;           // OK, but ::X is found\n  Z *pz;           // error, no Z is found\n}\n</code></pre>\n", "OwnerUserId": "459640", "PostTypeId": "2", "Id": "14115077", "Score": "6", "CreationDate": "2013-01-01T23:06:40.410", "LastActivityDate": "2013-01-01T23:06:40.410"}});