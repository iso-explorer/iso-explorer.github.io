post_cb({"41953503": {"Id": "41953503", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_41953456_41953503_0\">So I dont understand the syntax of that line- why can't I write just Singleton::m_instance = 0;? </p>\n</blockquote>\n<p>The syntax here is the definition of the <a href=\"http://en.cppreference.com/w/cpp/language/static\" rel=\"nofollow noreferrer\">static member</a>, which need to be defined out of the class definition. That's why if you remove it you'll get the undefined link error.</p>\n<blockquote id=\"so_41953456_41953503_1\">\n<pre><code>class X { static int n; }; // declaration (uses 'static')\nint X::n = 1;              // definition (does not use 'static')\n</code></pre>\n</blockquote>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2017-01-31T09:14:14.450", "Score": "0", "CreationDate": "2017-01-31T09:08:56.403", "ParentId": "41953456", "CommentCount": "0", "LastEditDate": "2017-01-31T09:14:14.450", "OwnerUserId": "3309790"}, "bq_ids": {"n4140": {"so_41953456_41953794_1": {"length": 48, "quality": 0.9411764705882353, "section_id": 5907}}, "n3337": {"so_41953456_41953794_1": {"length": 48, "quality": 0.9411764705882353, "section_id": 5679}}, "n4659": {"so_41953456_41953794_1": {"length": 46, "quality": 0.9019607843137255, "section_id": 7389}}}, "41953794": {"Id": "41953794", "PostTypeId": "2", "Body": "<p>This is specified in C++ standard</p>\n<blockquote>\n<p id=\"so_41953456_41953794_0\">9.4.2 Static data members</p>\n<p id=\"so_41953456_41953794_1\">2 The declaration of a static data member in its class definition is\n  not a definition and may be of an incomplete type other than\n  cv-qualified void. The definition for a static data member shall\n  appear in a namespace scope enclosing the member\u2019s class definition.\n  In the definition at namespace scope, the name of the static data\n  member shall be qualified by its class name using the :: operator. The\n  initializer expression in the definition of a static data member is in\n  the scope of its class</p>\n</blockquote>\n<p>So the declaration in the class scope is not considered a definition, that is why you get the linker error.</p>\n", "LastActivityDate": "2017-01-31T09:24:05.133", "Score": "0", "CreationDate": "2017-01-31T09:24:05.133", "ParentId": "41953456", "CommentCount": "0", "OwnerUserId": "407644"}, "41953585": {"Id": "41953585", "PostTypeId": "2", "Body": "<p>You have to initialize the static variable:</p>\n<pre><code>Singleton* Singleton::m_instance = 0;\n</code></pre>\n<p>We can only call static class members on the class and not on an object of the class. And that is possible, even if no instance exist. That's why every static member instance must be initialize, usually in the cpp file.</p>\n<p>And because of the static variable is initialized outside the class scope, we have to call the variable by the full name (e.g. Singleton::m_instance).</p>\n", "LastEditorUserId": "7343388", "LastActivityDate": "2017-01-31T09:18:11.250", "Score": "2", "CreationDate": "2017-01-31T09:13:06.133", "ParentId": "41953456", "CommentCount": "0", "LastEditDate": "2017-01-31T09:18:11.250", "OwnerUserId": "7343388"}, "41953456": {"ViewCount": "58", "Body": "<p>I'm trying to understand the meaning of the error I get.</p>\n<p>this is a singleton implementation:</p>\n<pre><code>class Singleton\n{\n    private:\n        Singleton():m_value(0){};\n        static Singleton * m_instance;\n        int m_value;\n\n    public:\n        static Singleton * GetInstance()\n            {\n                if(!m_instance)\n                {\n                    m_instance = new Singleton;\n                }\n\n                return m_instance;\n            }\n        void SetValue(int x){m_value = x;}\n        int GetValue(){return m_value;}\n\n        ~Singleton()\n        {\n            if(m_instance)\n                delete m_instance;\n        }\n    };\n\n\n\nSingleton* Singleton::m_instance = 0;\n\n\nvoid main()\n{\n    Singleton * s1 = Singleton::GetInstance();\n}\n</code></pre>\n<p>The code colpiles and run sucessfuly.</p>\n<p>When I remove the line <code>Singleton* Singleton::m_instance = 0;</code>, I get the error:</p>\n<pre><code> error LNK2001: unresolved external symbol \"private: static class Singleton * Singleton::m_instance\"\n</code></pre>\n<p>I guess the meaning of that line is to set the static variable <code>m_instance</code> to 0.</p>\n<p>So I dont understand the syntax of that line- why can't I write just <code>Singleton::m_instance = 0;</code>?  and also why do I get linkage error when removing that line?</p>\n", "Title": "Singleton- linkage error", "CreationDate": "2017-01-31T09:05:48.530", "LastActivityDate": "2017-01-31T09:24:05.133", "CommentCount": "1", "PostTypeId": "1", "Id": "41953456", "Score": "2", "OwnerUserId": "1673206", "Tags": "<c++><singleton>", "AnswerCount": "3"}});