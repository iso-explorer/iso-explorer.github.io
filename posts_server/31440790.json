post_cb({"31440790": {"CommentCount": "1", "ViewCount": "1005", "PostTypeId": "1", "LastEditorUserId": "600591", "CreationDate": "2015-07-15T20:49:48.110", "LastActivityDate": "2016-03-17T14:39:27.097", "Title": "What exactly is an id-expression?", "FavoriteCount": "3", "LastEditDate": "2015-07-15T20:52:44.703", "Id": "31440790", "Score": "14", "Body": "<p>I'm having a problem clearly understanding exactly what an <code>id-expression</code> is. I'll start off by following what I found in the most recent working draft of the C++ standard starting off with:</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/FDJZw.jpg\"/></p>\n<p>Venturing to the definition of an <code>identifier</code>:</p>\n<blockquote>\n<p id=\"so_31440790_31440790_0\">An identifier is an arbitrarily long sequence of letters and digits.</p>\n</blockquote>\n<p>So it seems like any arbitrary long sequence of letters and digits can be an <code>id-expression</code>, but wait:</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/crTxW.jpg\"/></p>\n<p>So the <code>identifier</code> must be declared first in order for it to be an <code>id-expression</code>? Well lets head over to clause 7:</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/pBQFx.jpg\"/></p>\n<p>Continuing...</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/5SpbN.jpg\"/></p>\n<p>Continuing again...</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/UJQd5.jpg\"/></p>\n<p>We arrive here:</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/oRp79.jpg\"/></p>\n<p>I interpret this to mean an <code>id-expression</code> requires an <code>identifier</code> to be declared which requires an <code>id-expression</code>. This seems like a circular definition. Can someone tell me where I went wrong?</p>\n<p>Anyway, my interpretation is that the identifier must be declared first in order for it to be considered an <code>id-expression</code>, but isn't that really just a <code>name</code>? The standard states that:</p>\n<blockquote>\n<p id=\"so_31440790_31440790_1\">Every name that denotes an entity is introduced by a declaration.</p>\n</blockquote>\n<p>So why not just call it a <code>name-expression</code> instead?</p>\n", "Tags": "<c++><language-lawyer>", "OwnerUserId": "1346994", "AnswerCount": "2"}, "31440967": {"ParentId": "31440790", "CommentCount": "6", "Body": "<p>To answer your title:</p>\n<p><strong>An <em>id-expression</em> is either an <em>unqualified-id</em> or a <em>qualified-id</em>.</strong> Seriously.</p>\n<p>To answer the unrelated spiel in your post body:</p>\n<p>Who cares what it's called? \"Name\" seems pretty vague, anyway. Grammars are deliberately non-vague. Productions also tend to be named after the productions they <em>directly</em> encapsulate, not paying attention to what may be recursively encapsulated. Otherwise it would be a horrid complex mess with names that make no sense at first glance.</p>\n", "OwnerUserId": "560648", "PostTypeId": "2", "Id": "31440967", "Score": "-2", "CreationDate": "2015-07-15T20:59:17.350", "LastActivityDate": "2015-07-15T20:59:17.350"}, "36060509": {"ParentId": "31440790", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>You're misinterpreting <a href=\"http://eel.is/c++draft/expr.prim.general#8\" rel=\"nofollow\">[expr.prim.general]/8</a>:</p>\n<blockquote>\n<p id=\"so_31440790_36060509_0\">An <em>identifier</em> is an <em>id-expression</em> provided it has been suitably declared (Clause 7).</p>\n</blockquote>\n<p>The phrase's intention is to disallow the usage of undeclared identifiers in expressions. I.e. this paragraph talks about <strong><em>id-expression</em>s occurring as <em>primary-expression</em>s</strong>, not <em>id-expression</em>s occurring in declarators. I agree that the phrase is misleading and should be fixed. I filed a core issue.</p>\n<blockquote>\n<p id=\"so_31440790_36060509_1\">So why not just call it a <em>name-expression</em> instead?</p>\n</blockquote>\n<p>Historical reasons; the subtle distinction between identifiers and names was made after the very fundamental grammatical constructs (<em>id-expression</em>, <em>unqualified-id</em>, etc.) were named, and from there onwards, renaming those wasn't an option. </p>\n", "OwnerUserId": "3647361", "LastEditorUserId": "3647361", "LastEditDate": "2016-03-17T14:39:27.097", "Id": "36060509", "Score": "1", "CreationDate": "2016-03-17T12:24:57.780", "LastActivityDate": "2016-03-17T14:39:27.097"}, "bq_ids": {"n4140": {"so_31440790_31440790_0": {"section_id": 5333, "quality": 1.0, "length": 6}, "so_31440790_31440790_1": {"section_id": 7028, "quality": 0.8333333333333334, "length": 5}, "so_31440790_36060509_0": {"section_id": 5954, "quality": 1.0, "length": 7}}, "n3337": {"so_31440790_31440790_0": {"section_id": 5130, "quality": 1.0, "length": 6}, "so_31440790_31440790_1": {"section_id": 6774, "quality": 0.8333333333333334, "length": 5}, "so_31440790_36060509_0": {"section_id": 5724, "quality": 1.0, "length": 7}}, "n4659": {"so_31440790_31440790_0": {"section_id": 6754, "quality": 1.0, "length": 6}, "so_31440790_31440790_1": {"section_id": 8525, "quality": 0.8333333333333334, "length": 5}, "so_31440790_36060509_0": {"section_id": 7441, "quality": 1.0, "length": 7}}}});