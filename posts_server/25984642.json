post_cb({"25984647": {"Id": "25984647", "PostTypeId": "2", "Body": "<pre><code>float c = a/b ;\n</code></pre>\n<p><code>a</code> and <code>b</code> are integers, so it is integer division.</p>\n<p>From the C++ standard:</p>\n<blockquote>\n<p id=\"so_25984642_25984647_0\"><strong>5.6 Multiplicative operators [expr.mul]</strong></p>\n<p id=\"so_25984642_25984647_1\">For integral operands the / operator yields the algebraic quotient with any fractional part discarded.</p>\n</blockquote>\n<p>Instaed, try this:</p>\n<pre><code>float c = a / static_cast&lt;float&gt;(b);\n</code></pre>\n<p>(As <strong>@TrevorHickey</strong> suggested, <code>static_cast&lt;float&gt;</code> is better than old-style <code>(float)</code> cast.)</p>\n", "LastEditorUserId": "3246555", "LastActivityDate": "2014-09-23T00:02:05.490", "Score": "2", "CreationDate": "2014-09-22T23:35:19.923", "ParentId": "25984642", "CommentCount": "4", "OwnerUserId": "3246555", "LastEditDate": "2014-09-23T00:02:05.490"}, "25984670": {"Id": "25984670", "PostTypeId": "2", "Body": "<p>The division is evaluated first, and because it is two integer operands, it evaluates to an integer... which then only get assigned to a float.</p>\n<p>This is due to a <a href=\"http://msdn.microsoft.com/en-us/library/09ka8bxx.aspx\" rel=\"nofollow\">predefined set of rules</a> that decreases in type complexity. To force the result to be of a particular type (at least), at least one of the operands needs to be of that type. (via a <code>static_cast&lt; &gt;</code> )</p>\n<p>Thus:</p>\n<pre><code>float c = a / static_cast&lt;float&gt;(b);\n</code></pre>\n", "LastEditorUserId": "174650", "LastActivityDate": "2014-09-23T22:43:18.700", "Score": "3", "CreationDate": "2014-09-22T23:37:18.440", "ParentId": "25984642", "CommentCount": "0", "OwnerUserId": "174650", "LastEditDate": "2014-09-23T22:43:18.700"}, "25984665": {"Id": "25984665", "PostTypeId": "2", "Body": "<p>HINT: the result from integer division is integer. The result of the division is then assigned to a float. That is a/b results in an int. Cast that however you want, but you aren't gonna get 0.75 out of it. </p>\n", "LastActivityDate": "2014-09-22T23:37:07.973", "CommentCount": "0", "CreationDate": "2014-09-22T23:37:07.973", "ParentId": "25984642", "Score": "0", "OwnerUserId": "107744"}, "25984642": {"ViewCount": "61", "Body": "<p>I am doing something like this</p>\n<pre><code>int a = 3;\nint b = 4;\nfloat c = a/b ; //This returns 0 while its suppose to return 0.75\n</code></pre>\n<p>I wanted to know <strong>why</strong> the above code doesn't work ? I realize that 3 is an int and 4 is an int too. However the result is a float which is being assigned to float. However I am getting a 0 here. Any suggestions on what I might be doing wrong ?</p>\n", "AcceptedAnswerId": "25984647", "Title": "Getting an int instead of a float", "CreationDate": "2014-09-22T23:34:37.187", "Id": "25984642", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2014-09-23T22:43:18.700", "Score": "0", "OwnerUserId": "990502", "Tags": "<c++><casting>", "AnswerCount": "5"}, "bq_ids": {"n4140": {"so_25984642_25984647_1": {"length": 9, "quality": 0.9, "section_id": 6137}}, "n3337": {"so_25984642_25984647_1": {"length": 9, "quality": 0.9, "section_id": 5901}}, "n4659": {"so_25984642_25984647_1": {"length": 9, "quality": 0.9, "section_id": 7634}}}, "25984709": {"Id": "25984709", "PostTypeId": "2", "Body": "<p>If you are working in C++, you should use the static_cast method over the implicit cast.\nThis will ensure that the type can be safely cast at compile time.  </p>\n<pre><code>float c = a/static_cast&lt;float&gt;(b);\n</code></pre>\n", "LastActivityDate": "2014-09-22T23:41:19.263", "CommentCount": "0", "CreationDate": "2014-09-22T23:41:19.263", "ParentId": "25984642", "Score": "0", "OwnerUserId": "908939"}, "25984656": {"Id": "25984656", "PostTypeId": "2", "Body": "<p>You cant divide two ints and receive a float. You either have to cast to a float or have the types as a float.</p>\n<pre><code>float a = 3;\nfloat b = 4;\nfloat c = a/b; \n</code></pre>\n<p>or</p>\n<pre><code>float c = (float)a/(float)b; \n</code></pre>\n", "LastActivityDate": "2014-09-22T23:36:12.577", "CommentCount": "0", "CreationDate": "2014-09-22T23:36:12.577", "ParentId": "25984642", "Score": "2", "OwnerUserId": "4027338"}});