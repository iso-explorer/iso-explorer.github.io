post_cb({"bq_ids": {"n4140": {"so_18449296_18449385_2": {"length": 9, "quality": 0.5625, "section_id": 6304}}, "n3337": {"so_18449296_18449385_2": {"length": 9, "quality": 0.5625, "section_id": 6061}}, "n4659": {"so_18449296_18449385_2": {"length": 9, "quality": 0.5625, "section_id": 7814}}}, "18449296": {"ViewCount": "3392", "Body": "<p>I am having a piece of code as </p>\n<pre><code>    typedef unsigned char   _uint8;\n    typedef unsigned short  _uint16;\n    typedef unsigned int    _uint32;\n    typedef float           _float32;\n\n    typedef char            _int8;\n    typedef short           _int16;\n    typedef int             _int32;\n</code></pre>\n<p>I'm getting error at the lines that are in the last three lines</p>\n<p>The error message is </p>\n<p>error C2632: 'char' followed by 'char' is illegal<br>\nerror C2632: 'short' followed by 'short' is illegal</br></p>\n<p>error C2632: 'int' followed by 'int' is illegal</p>\n", "Title": "Unexpected Error C2632: 'char' followed by 'char' is illegal", "CreationDate": "2013-08-26T17:07:30.447", "LastActivityDate": "2013-08-26T18:34:12.383", "CommentCount": "3", "PostTypeId": "1", "Id": "18449296", "Score": "3", "OwnerUserId": "1000160", "Tags": "<visual-c++><compiler-errors>", "AnswerCount": "2"}, "18449385": {"Id": "18449385", "PostTypeId": "2", "Body": "<p>In C and C++, it is illegal (invokes undefined behavior) to define your own identifiers which start with an underscore.  Only the compiler and standard library are allowed to use names that begin with an underscore.  It appears that these particular names (<code>_int8</code>, etc) have already been defined as macros or intrinsic types.</p>\n<p>You must choose different names.</p>\n<h2>Citation</h2>\n<p>From n1570 \u00a77.1.3,</p>\n<blockquote>\n<p id=\"so_18449296_18449385_0\">All identifiers that begin with an underscore are always reserved for use as identifiers with file scope in both the ordinary and tag name spaces.</p>\n<p id=\"so_18449296_18449385_1\">...</p>\n<p id=\"so_18449296_18449385_2\">If the program declares or defines an identifier in a context in which it is reserved (other than as allowed by 7.1.4), or defines a reserved identifier as a macro name, the behavior is undefined.</p>\n</blockquote>\n<p>Therefore, by attempting to define the type <code>_int8</code>, your program invokes undefined behavior.  \"Undefined behavior\" is a technical term, and it means that the compiler makes <strong>no guarantees:</strong> maybe you will get an error message, maybe it will work as you expect, or maybe something else will happen entirely.  Maybe there will be no error message, but your program won't work correctly.</p>\n<h2>Example</h2>\n<p>Try compiling the following code in Visual Studio...</p>\n<pre><code>int main()\n{\n    _int8 x = 1;\n    return 0;\n}\n</code></pre>\n<p>It compiles... which means that <code>_int8</code> is already in use by the compiler to define a type.  It appears to be an <strong>undocumented</strong> type, since an MSDN search turns up nothing.  But you're not allowed to define your own <code>_int8</code> anyway.</p>\n", "LastEditorUserId": "82294", "LastActivityDate": "2013-08-26T18:34:12.383", "Score": "3", "CreationDate": "2013-08-26T17:13:07.330", "ParentId": "18449296", "CommentCount": "5", "LastEditDate": "2013-08-26T18:34:12.383", "OwnerUserId": "82294"}, "18449372": {"Id": "18449372", "PostTypeId": "2", "Body": "<p>Those types have already been created via <code>typedef</code> (maybe) or <code>#define</code> (more likely) before your code tries to do it; taking a look at the preprocessor output (if that's possible with Visual-C++) may help you track down why that is.</p>\n", "LastActivityDate": "2013-08-26T17:12:22.557", "Score": "1", "CreationDate": "2013-08-26T17:12:22.557", "ParentId": "18449296", "CommentCount": "0", "OwnerUserId": "116908"}});