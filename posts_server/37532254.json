post_cb({"37532323": {"ParentId": "37532254", "PostTypeId": "2", "CommentCount": "5", "CreationDate": "2016-05-30T19:12:18.090", "Score": "2", "LastEditorUserId": "3246555", "LastEditDate": "2016-05-30T19:22:40.197", "Id": "37532323", "OwnerUserId": "3246555", "Body": "<p>According to the standard (<code>N4140</code>):</p>\n<blockquote>\n<p id=\"so_37532254_37532323_0\"><strong>8.3.6 Default arguments</strong><br>...<br>\n<sup>10</sup> A virtual function call (10.3) uses the default arguments in the declaration of the virtual function determined\n  by the static type of the pointer or reference denoting the object. An overriding function in a derived class\n  does not acquire default arguments from the function it overrides. [\u00a0<em>Example:</em></br></br></p>\n<pre><code>struct A {\n    virtual void f(int a = 7);\n};\nstruct B : public A {\n    void f(int a);\n};\nvoid m() {\n    B* pb = new B;\n    A* pa = pb;\n    pa-&gt;f(); // OK, calls pa-&gt;B::f(7)\n    pb-&gt;f(); // error: wrong number of arguments for B::f()\n}\n</code></pre>\n<p id=\"so_37532254_37532323_1\">\u2014end example ]</p>\n</blockquote>\n", "LastActivityDate": "2016-05-30T19:22:40.197"}, "37532347": {"ParentId": "37532254", "PostTypeId": "2", "CommentCount": "5", "CreationDate": "2016-05-30T19:14:04.347", "Score": "1", "LastEditorUserId": "2079303", "LastEditDate": "2016-05-30T19:23:42.773", "Id": "37532347", "OwnerUserId": "2079303", "Body": "<p>The function is called through a pointer to <code>Figura</code>. The default value for the argument is <em>clearly</em> 10.</p>\n<p>Because the function is virtual, the most derived version of the function is used, based on the dynamic type of the pointed object, which is <code>Skakac</code>. The default arguments of the dynamic type are not used as the standard, already quoted by AlexD, states.</p>\n<p>P.S.</p>\n<blockquote>\n<p id=\"so_37532254_37532347_0\">it calls second function pomak(not the virtual one)</p>\n</blockquote>\n<p><code>Skakac::pomak</code> is also virtual.</p>\n<blockquote>\n<p id=\"so_37532254_37532347_1\">How can i fix it?</p>\n</blockquote>\n<p>If by \"fix it\" you mean \"How can I override the default argument\", then I recommend using overloading instead of default arguments:</p>\n<pre><code>class Figura {\n    // ...\n    virtual void pomak() {\n        pomak(10, 1);\n    }\n    virtual void pomak(int dx, int dy) {\n        // ...\n    }\n};\nclass Skakac: public Figura {\n    // ...\n    void pomak() {\n        pomak(2, -1);\n    }\n    void pomak(int dx, int dy) {\n        // ...\n    }\n};\n</code></pre>\n", "LastActivityDate": "2016-05-30T19:23:42.773"}, "bq_ids": {"n4140": {"so_37532254_37532323_0": {"section_id": 3261, "quality": 0.8387096774193549, "length": 26}}, "n3337": {"so_37532254_37532323_0": {"section_id": 3133, "quality": 0.8387096774193549, "length": 26}}, "n4659": {"so_37532254_37532323_0": {"section_id": 4019, "quality": 0.8387096774193549, "length": 26}}}, "37532254": {"CommentCount": "2", "ViewCount": "62", "ClosedDate": "2016-05-30T19:15:53.933", "CreationDate": "2016-05-30T19:07:15.303", "LastActivityDate": "2016-05-30T19:23:42.773", "Title": "Why does this work like this?", "PostTypeId": "1", "Id": "37532254", "Score": "0", "Body": "<p>I truly don't understand why this works like this.</p>\n<pre><code>#include&lt;iostream&gt;\n\nusing namespace std;\nclass Figura{\npublic:\nint x;\nint y;\nvirtual void pomak(int dx=10,int dy=1)\n    {\n\n        x+=dx;\n        y+=dy;\n        cout&lt;&lt;\"Figura\"&lt;&lt;endl;\n\n\n    }\n};\nclass Skakac:public Figura{\npublic:\nvoid pomak(int dx=2,int dy=-1)\n    {\n        cout&lt;&lt;dx&lt;&lt;endl;\n        x+=dx;\n        y+=dy;\n        cout&lt;&lt;\"Skakac\"&lt;&lt;endl;\n\n\n    }\n};\n\nint main()\n{\n    Skakac S;\n    S.x=0;\n    S.y=0;\n    Figura* x=&amp;S;\n    cout&lt;&lt;x-&gt;x&lt;&lt;\" \"&lt;&lt;x-&gt;y&lt;&lt;endl;\n    x-&gt;pomak();\n    cout&lt;&lt;S.x&lt;&lt;\" \"&lt;&lt;S.y&lt;&lt;endl;\n\n\n\n\n }\n</code></pre>\n<p>When i call function pomak() it couts dx as 10, although it calls second function pomak(not the virtual one) and i clearly stated that dx = 2. </p>\n", "Tags": "<c++><pointers><virtual-functions>", "OwnerUserId": "6304819", "AnswerCount": "2"}});