post_cb({"16775585": {"Id": "16775585", "PostTypeId": "2", "Body": "<pre><code> const Date date2 = new Date(31, 12, 2012);\n</code></pre>\n<p>This line results in an error because <code>date2</code> has the type <code>Date</code> but the result of the right-hand side has the type <code>Date*</code>.  This is because of the way <code>new</code> works.</p>\n<p>Per Paragraph 5.3.4/2 of the C++11 Standard:</p>\n<blockquote>\n<p id=\"so_16775039_16775585_0\">Entities created by a new-expression have dynamic storage duration (3.7.4). [ -- ] If the entity is a non-array object, the new-expression returns a pointer to the object created. If it is an array, the new-expression returns a pointer to the initial element of the array.</p>\n</blockquote>\n<p>So now we know that <code>new</code> allocates memory for its operand on the heap and returns a stack-allocated pointer to it. You might of had a misconception that <code>new</code> creates an object (like in Java, JavaScript or C#) but this is not the case in C++. For the above line to work you would have to make <code>date2</code> a pointer:</p>\n<pre><code>const Date *date2 = new Date(31, 12, 2012);\n</code></pre>\n<p>However, the normal way of creating an object is to simply do the following (in your case):</p>\n<pre><code>const Date date2(31, 12, 2012);\n</code></pre>\n", "LastActivityDate": "2013-05-27T14:45:06.973", "CommentCount": "0", "CreationDate": "2013-05-27T14:45:06.973", "ParentId": "16775039", "Score": "0", "OwnerUserId": "701092"}, "16775076": {"Id": "16775076", "PostTypeId": "2", "Body": "<p>Well, using <code>new</code> returns a pointer that you try to assign to a non-pointer const variable.</p>\n", "LastActivityDate": "2013-05-27T14:11:09.800", "CommentCount": "0", "CreationDate": "2013-05-27T14:11:09.800", "ParentId": "16775039", "Score": "1", "OwnerUserId": "1594913"}, "16775039": {"ViewCount": "156", "Body": "<p>I am getting error on line 30 (const Date date2 = new Date(31, 12, 2012);)</p>\n<p>Error message is : \nconversion from \u2018Date*\u2019 to non-scalar type \u2018const Date\u2019 requested</p>\n<p>Below is my source code:  </p>\n<pre><code>class Date\n{\nprivate :\n    int day ;\n    int month ;\n    int year ;\npublic :\n    Date(){\n        day = 1;\n        month = 1;\n        year = 2000;\n    }\n    Date(int d, int m, int y) : day(d), month(m), year(y){\n    }\n    int getDay () const { return day ;}\n    int getMonth () const { return month ;}\n    int getYear () const { return year ;}\n};\n\nint main ()\n{\n    const Date date ;\n    const Date date2 = new Date(31, 12, 2012);\n\n    cout &lt;&lt;\"The month is \"&lt;&lt; date.getMonth()&lt;&lt; endl ;\n    cout &lt;&lt; \" The month is \"&lt;&lt;date2.getMonth()&lt;&lt; endl ;\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "16775073", "Title": "C++ defining const in constructor", "CreationDate": "2013-05-27T14:09:15.253", "Id": "16775039", "CommentCount": "1", "LastEditDate": "2013-05-27T14:51:15.073", "PostTypeId": "1", "LastEditorUserId": "1896646", "LastActivityDate": "2013-05-27T14:51:15.073", "Score": "0", "OwnerUserId": "2386317", "Tags": "<c++><constructor><const>", "AnswerCount": "5"}, "16775533": {"Id": "16775533", "PostTypeId": "2", "Body": "<p><em>Problem is in your code:</em></p>\n<p><strong>1.const Date date2 = new Date(31, 12, 2012);</strong></p>\n<p>Here you are dynamically allocating memory for object <code>Date</code>.Operator <code>new</code> will return pointer so that you need to take in to the pointer type of object example</p>\n<p><code>const Date *date2 = new Date(31, 12, 2012);</code></p>\n<p><strong>2.cout &lt;&lt; \" The month is \" &lt;&lt; date2.getMonth()&lt;&lt; endl ;</strong></p>\n<p>If you modify the code as per point 1 then above line has to be changed as \nSo if <code>date2</code> is pointer then you need to call function as :</p>\n<p><code>cout &lt;&lt;\"The month is\"&lt;&lt;date2-&gt;getMonth()&lt;&lt;endl ;</code></p>\n<p><strong>3.If you want to use your code then you just remove <code>new</code> from below line:</strong></p>\n<pre><code>const Date date2 = Date(31, 12, 2012);\n</code></pre>\n<p><strong>You need to modify your code as :</strong></p>\n<pre><code>int main ()\n{\n    const Date date ;\n    const Date *date2 = new Date(31, 12, 2012);\n    cout &lt;&lt; \" The month is \" &lt;&lt; date.getMonth() &lt;&lt; endl ;\n    cout &lt;&lt; \" The month is \" &lt;&lt; date2-&gt;getMonth() &lt;&lt; endl ;\n    return 0;\n}\n</code></pre>\n<p><strong>or</strong> </p>\n<pre><code>int main ()\n{\n    const Date date ;\n    const Date date2 = Date(31, 12, 2012);\n    cout &lt;&lt; \" The month is \" &lt;&lt; date.getMonth() &lt;&lt; endl ;\n    cout &lt;&lt; \" The month is \" &lt;&lt; date2.getMonth() &lt;&lt; endl ;\n    return 0;\n}\n</code></pre>\n", "LastActivityDate": "2013-05-27T14:42:06.480", "CommentCount": "0", "CreationDate": "2013-05-27T14:42:06.480", "ParentId": "16775039", "Score": "1", "OwnerUserId": "1896646"}, "bq_ids": {"n4140": {"so_16775039_16775585_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 6082}}, "n3337": {"so_16775039_16775585_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 5850}}, "n4659": {"so_16775039_16775585_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 7578}}}, "16775073": {"Id": "16775073", "PostTypeId": "2", "Body": "<p>You need to do this:</p>\n<pre><code>const Date date2(31, 12, 2012);\n</code></pre>\n<p>In your code, <code>const Date date2</code> is a <code>Date</code> whereas <code>new Date(31, 12, 2012);</code> returns a pointer to a <code>Date</code> (which leaks, incidentally).</p>\n", "LastActivityDate": "2013-05-27T14:10:56.887", "CommentCount": "0", "CreationDate": "2013-05-27T14:10:56.887", "ParentId": "16775039", "Score": "6", "OwnerUserId": "21886"}, "16775135": {"Id": "16775135", "PostTypeId": "2", "Body": "<p><code>operator new</code> returns a pointer, if you really need a pointer, you should use</p>\n<pre><code>const Date* date2 = new Date(31,12,2012);\n</code></pre>\n<p>instead.\nAnd don't forget to <code>delete date2</code>.</p>\n<p>Or you can do either:</p>\n<pre><code>const Date date2(31,12,2012);\n</code></pre>\n<p>or</p>\n<pre><code>const Date date2 = Date(31,12,2012);\n</code></pre>\n", "LastActivityDate": "2013-05-27T14:14:55.227", "CommentCount": "0", "CreationDate": "2013-05-27T14:14:55.227", "ParentId": "16775039", "Score": "0", "OwnerUserId": "890991"}});