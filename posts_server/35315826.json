post_cb({"bq_ids": {"n4140": {"so_35315826_35316261_0": {"length": 18, "quality": 0.9, "section_id": 382}}, "n3337": {"so_35315826_35316261_0": {"length": 18, "quality": 0.9, "section_id": 373}}, "n4659": {"so_35315826_35316261_0": {"length": 17, "quality": 0.85, "section_id": 397}}}, "35315826": {"ViewCount": "476", "Body": "<p>Updating the question <a href=\"https://stackoverflow.com/questions/35315472/why-this-two-rvalue-references-examples-have-different-behavior\">Why this two rvalue references examples have different behavior?</a>:</p>\n<p>Source code:</p>\n<pre><code>int a = 0;\nauto &amp;&amp; b = a++;\n++a;\ncout &lt;&lt; a &lt;&lt; b &lt;&lt; endl;\n</code></pre>\n<p>prints <code>20</code></p>\n<p>Is it undefined behavior (UB) to use <code>b</code> after the <code>a++</code> call? Maybe we cannot use <code>b</code> because it refers to a temporary?</p>\n", "AcceptedAnswerId": "35316062", "Title": "Can I use rvalue reference to temporary? Is it undefined behavior or not?", "CreationDate": "2016-02-10T12:52:09.073", "Id": "35315826", "CommentCount": "5", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2017-05-23T11:52:50.163", "LastEditorUserId": "-1", "LastActivityDate": "2016-02-10T18:57:32.770", "Score": "9", "OwnerUserId": "1555823", "Tags": "<c++><c++11><language-lawyer><undefined-behavior><rvalue-reference>", "AnswerCount": "3"}, "35316261": {"Id": "35316261", "PostTypeId": "2", "Body": "<p>Taking a reference to a temporary extends its lifetime to the end of lifetime of that reference.</p>\n<p>ISO/IEC 14882 \u00a7 12.2/5:</p>\n<blockquote>\n<p id=\"so_35315826_35316261_0\">The second context is when a reference is bound to a temporary. The temporary to which the reference is\n  bound or the temporary that is the complete object of a subobject to which the reference is bound persists\n  for the lifetime of the reference <em>[\u2026]</em></p>\n</blockquote>\n", "LastActivityDate": "2016-02-10T13:12:37.103", "CommentCount": "0", "CreationDate": "2016-02-10T13:12:37.103", "ParentId": "35315826", "Score": "3", "OwnerUserId": "201725"}, "35316062": {"Id": "35316062", "PostTypeId": "2", "Body": "<p>No it is not undefined behavior (UB). It's fine - you can modify the contents of the temporary here (so long as the reference is valid for the lifetime of the temporary, in this case the bind to the rvalue reference extends that lifetime of the rvalue to the lifetime of the reference).</p>\n<p>A more general question is; is it UB to modify a temporary through the rvalue reference? No it is not UB. Move semantics, where the \"moved-to\" object \"steals\" the \"moved-from\" object's contents, relies on this to be well defined.</p>\n", "LastEditorUserId": "3747990", "LastActivityDate": "2016-02-10T18:57:32.770", "Score": "5", "CreationDate": "2016-02-10T13:02:21.150", "ParentId": "35315826", "CommentCount": "3", "OwnerUserId": "3747990", "LastEditDate": "2016-02-10T18:57:32.770"}, "35316045": {"Id": "35316045", "PostTypeId": "2", "Body": "<p>The code is fine. <code>b</code> refers to a lifetime-extended object that is the result of the expression <code>a++</code>, which is a different object from <code>a</code>. (Binding a temporary object to a reference extends the lifetime of the object to that of the reference.) You can use and modify both objects.</p>\n", "LastActivityDate": "2016-02-10T13:01:33.717", "CommentCount": "0", "CreationDate": "2016-02-10T13:01:33.717", "ParentId": "35315826", "Score": "12", "OwnerUserId": "596781"}});