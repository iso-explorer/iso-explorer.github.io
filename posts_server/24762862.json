post_cb({"bq_ids": {"n4140": {"so_24762862_24766972_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 5895}}, "n3337": {"so_24762862_24766972_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 5666}}, "n4659": {"so_24762862_24766972_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 7378}}}, "24766972": {"Id": "24766972", "PostTypeId": "2", "Body": "<p>The OpenMP standard defines data-sharing attribute rules for <strong>variables</strong> referenced in your code. Anyhow, according to the C++ standard draft (n3242 9.3.2) <code>this</code> is not a variable but a <strong>prvalue expression</strong> (emphasis mine):</p>\n<blockquote>\n<p id=\"so_24762862_24766972_0\">In the body of a non-static (9.3) member function, <strong>the keyword this is\n  a prvalue expression</strong> whose value is the address of the object for\n  which the function is called. The type of this in a member function of\n  a class X is X*. If the member function is declared const, the type of\n  this is const X*, if the member function is declared volatile, the\n  type of this is volatile X*, and if the member function is declared\n  const volatile, the type of this is const volatile X*.</p>\n</blockquote>\n", "LastActivityDate": "2014-07-15T19:51:22.507", "CommentCount": "0", "CreationDate": "2014-07-15T19:51:22.507", "ParentId": "24762862", "Score": "2", "OwnerUserId": "771663"}, "24762862": {"ViewCount": "105", "Body": "<p>Is <code>this</code> pointer always shared in OpenMP?</p>\n<p>Compiler does not complain about following code, despite <code>default(none)</code>:</p>\n<pre><code>#pragma omp parallel for default(none), shared(n)\nfor ( SInt i = 0; i &lt; n; ++i )\n{\n    f( i, this );  // f is some function.\n}\n</code></pre>\n", "AcceptedAnswerId": "24766972", "Title": "OpenMP and C++: this pointer", "CreationDate": "2014-07-15T15:58:20.150", "Id": "24762862", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2014-07-15T19:51:22.507", "Score": "2", "OwnerUserId": "2052436", "Tags": "<c++><openmp>", "AnswerCount": "1"}});