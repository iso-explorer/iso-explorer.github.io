post_cb({"2123751": {"ParentId": "2123699", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Use the <code>--verbose</code> option:</p>\n<pre><code>[...]\n#include \"...\" search starts here:\n#include &lt;...&gt; search starts here:\n /usr/lib/gcc/i686-pc-linux-gnu/4.4.2/../../../../include/c++/4.4.2\n /usr/lib/gcc/i686-pc-linux-gnu/4.4.2/../../../../include/c++/4.4.2/i686-pc-linux-gnu\n /usr/lib/gcc/i686-pc-linux-gnu/4.4.2/../../../../include/c++/4.4.2/backward\n /usr/local/include\n /usr/lib/gcc/i686-pc-linux-gnu/4.4.2/include\n /usr/lib/gcc/i686-pc-linux-gnu/4.4.2/include-fixed\n /usr/include\nEnd of search list.\n[...]\n</code></pre>\n<p>You can use the <code>-I</code> option to add search directories, as explained here: <a href=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.3/gcc/Directory-Options.html#Directory-Options\" rel=\"noreferrer\">http://gcc.gnu.org/onlinedocs/gcc-4.4.3/gcc/Directory-Options.html#Directory-Options</a></p>\n<p>You can also use environment variables to change this permanently: <a href=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.3/gcc/Environment-Variables.html#Environment-Variables\" rel=\"noreferrer\">http://gcc.gnu.org/onlinedocs/gcc-4.4.3/gcc/Environment-Variables.html#Environment-Variables</a><br>\nIn your case, you could use <code>CPLUS_INCLUDE_PATH</code>.</br></p>\n", "OwnerUserId": "88851", "LastEditorUserId": "88851", "LastEditDate": "2010-01-23T16:18:12.893", "Id": "2123751", "Score": "17", "CreationDate": "2010-01-23T16:09:16.633", "LastActivityDate": "2010-01-23T16:18:12.893"}, "15549979": {"ParentId": "2123699", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>In order to use a new library, only specifying the header file is not enough. You may also need to specify the related library defined in the header file by using -l[library name] and -L[library path] you want to be linked in your gcc commend. </p>\n<p>For the difference between header file and library, please check this post: <a href=\"https://stackoverflow.com/questions/6407975/what-are-header-files-and-library-files\">What are Header Files and Library Files?</a></p>\n", "OwnerUserId": "1775264", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:25:47.460", "Id": "15549979", "Score": "0", "CreationDate": "2013-03-21T14:14:53.790", "LastActivityDate": "2013-03-21T14:14:53.790"}, "2123904": {"CommentCount": "0", "CreationDate": "2010-01-23T17:00:55.707", "LastEditorUserId": "-1", "LastActivityDate": "2010-01-23T17:04:03.063", "ParentId": "2123699", "LastEditDate": "2017-05-23T12:25:47.460", "LastEditorDisplayName": "anon", "PostTypeId": "2", "Id": "2123904", "Score": "3", "Body": "<p>The <a href=\"http://www.open-std.org/jtc1/sc22/wg21/\" rel=\"nofollow noreferrer\">C++ Standard</a> says in 16.2/2</p>\n<blockquote>\n<p id=\"so_2123699_2123904_0\">A preprocessing directive of the form \n  <code>#include &lt;h-char-sequence&gt;</code>\n  new-line searches a sequence of implementation-defined places for a\n  header identified uniquely by the specified sequence between the &lt; and &gt; delimiters</p>\n</blockquote>\n<p>The <em>implementation-defined</em> means that where and headers are searched and how headers location should be specified is specific to particular compiler. In fact, it is possible implementations may not use a one header in one file convention, but some fancy packaging systems, for instance all a library is supposed to ship headers in .zip  archive location of such archive is given to compiler, then compiler takes care of extracting headers from it, etc.</p>\n<p>What it means is that you are supposed to check documentation of compiler you are using for details about how to specify so called <em>include directories</em>, location of headers.</p>\n<p>In case of GCC compiler, use -I option - see <a href=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.3/gcc/Directory-Options.html#Directory-Options\" rel=\"nofollow noreferrer\">Options for Directory Search</a> in the manual for details. You can also use <a href=\"http://gcc.gnu.org/onlinedocs/gcc-4.4.3/gcc/Environment-Variables.html#Environment-Variables\" rel=\"nofollow noreferrer\">C_INCLUDE_PATH or CPLUS_INCLUDE_PATH</a> environment variables.</p>\n<p>Related question is <a href=\"https://stackoverflow.com/questions/558803/how-to-add-a-default-include-path-for-gcc-in-linux/\">How to add a default include path for gcc in linux?</a></p>\n", "OwnerUserId": "151641"}, "2123729": {"ParentId": "2123699", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>To tell g++ where to look (apart from its defaults), you use the -I flag:</p>\n<pre><code>g++ -I/foo/bar xyz.cpp\n</code></pre>\n<p>tells it to look in the /foo/bar directory and construct paths from there. You can use multiple -I flags to specify multiple start points for the compiler to start looking.</p>\n<p>On my rather old Windows system, Xerces is installed in /xerces, so I set up an include flag:</p>\n<pre><code>-I/xerces/include\n</code></pre>\n<p>Which allows me to say things like:</p>\n<pre><code>#include \"sax2/SAX2XMLReader.hpp\"\n</code></pre>\n<p>to include the file:</p>\n<pre><code>/xerces/include/sax2/SAX2XMLReader.hpp\n</code></pre>\n", "Id": "2123729", "LastEditDate": "2010-01-23T16:23:27.213", "OwnerDisplayName": "anon", "Score": "1", "CreationDate": "2010-01-23T16:00:20.417", "LastActivityDate": "2010-01-23T16:23:27.213", "LastEditorDisplayName": "anon"}, "2123825": {"CommentCount": "3", "CreationDate": "2010-01-23T16:34:02.693", "LastEditorUserId": "-1", "LastActivityDate": "2010-01-23T16:50:14.630", "ParentId": "2123699", "LastEditDate": "2017-05-23T12:09:35.470", "LastEditorDisplayName": "user113476", "PostTypeId": "2", "Id": "2123825", "Score": "0", "Body": "<p>The two forms of the #include directive are summarized fairly well by <a href=\"http://msdn.microsoft.com/en-us/library/36k2cdd4(VS.80).aspx\" rel=\"nofollow noreferrer\">MSDN</a>:</p>\n<ul>\n<li>Quoted Form:</li>\n</ul>\n<blockquote>\n<blockquote>\n<p id=\"so_2123699_2123825_1\">This form instructs the preprocessor to look for include files in the same directory of the file that contains the #include statement, and then in the directories of any files that include (#include) that file. The preprocessor then searches along the path specified by the /I compiler option, then along paths specified by the INCLUDE environment variable.</p>\n</blockquote>\n</blockquote>\n<ul>\n<li>Angle-Bracket Form:</li>\n</ul>\n<blockquote>\n<blockquote>\n<p id=\"so_2123699_2123825_3\">This form instructs the preprocessor to search for include files first along the path specified by the /I compiler option, then, when compiling from the command line, along the path specified by the INCLUDE environment variable.</p>\n</blockquote>\n</blockquote>\n<p>Also see this (duplicate/similar) question (for G++/GCC):</p>\n<p><a href=\"https://stackoverflow.com/questions/179213/c-include-semantics\">C++ #include semantics</a></p>\n", "OwnerDisplayName": "user113476"}, "2123699": {"CommentCount": "0", "AcceptedAnswerId": "2123751", "CreationDate": "2010-01-23T15:51:51.130", "LastActivityDate": "2013-03-21T14:14:53.790", "PostTypeId": "1", "ViewCount": "6059", "FavoriteCount": "5", "Title": "Where does my C++ compiler look to resolve my #includes?", "Id": "2123699", "Score": "11", "Body": "<p>this is a really basic question.  I've been learning C++ and thus far I have only used the standard library.  I have been including things like <code>&lt;iostream&gt;</code> and  with no problems.  Now I want to use Apache Xerces, so I've installed it on my machine (a Debian system) and am following a tutorial which says I need to include:</p>\n<pre><code>#include &lt;xercesc/sax2/SAX2XMLReader.hpp&gt;\n</code></pre>\n<p>but g++ says \"error: xercesc/sax2/SAX2XMLReader.hpp: No such file or directory\".  Where is it looking?  Do I need to give it more information?</p>\n<p>Thanks.</p>\n", "Tags": "<c++>", "OwnerUserId": "257446", "AnswerCount": "6"}, "bq_ids": {"n4140": {"so_2123699_2123904_0": {"section_id": 504, "quality": 0.7647058823529411, "length": 13}}, "n3337": {"so_2123699_2123904_0": {"section_id": 495, "quality": 0.7647058823529411, "length": 13}}, "n4659": {"so_2123699_2123904_0": {"section_id": 525, "quality": 0.7647058823529411, "length": 13}}}, "2123716": {"ParentId": "2123699", "CommentCount": "0", "CreationDate": "2010-01-23T15:56:28.197", "OwnerUserId": "204046", "PostTypeId": "2", "Id": "2123716", "Score": "4", "Body": "<p>Gcc usually starts looking for include files in /usr/include. If you have include files in other directories, you can add a -I option to the command line to tell the compiler to look there also.</p>\n<p>You might have to install the development package for Xerces to get the #include files.</p>\n", "LastActivityDate": "2010-01-23T15:56:28.197"}});