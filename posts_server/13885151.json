post_cb({"13885151": {"ViewCount": "152", "Body": "<p>If I have this class</p>\n<pre><code>class TextBox : public Widget {\npublic:\n    void addKeyPressHandler(std::function&lt;void (std::string)&gt;);\nprivate:\n    std::function&lt;void (std::string)&gt; keyPressHandler;\n};\n</code></pre>\n<p>How do I know if the keyPressHandler has been set or not?  Can I initialize it to NULL and then test against that?</p>\n", "AcceptedAnswerId": "13885224", "Title": "How does function wrapper initialization work in C++11?", "CreationDate": "2012-12-14T19:33:07.350", "Id": "13885151", "CommentCount": "1", "LastEditDate": "2012-12-14T21:00:30.523", "PostTypeId": "1", "LastEditorUserId": "636019", "LastActivityDate": "2012-12-14T21:00:30.523", "Score": "2", "OwnerUserId": "256062", "Tags": "<c++><c++11><std-function>", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_13885151_13885237_1": {"length": 5, "quality": 1.0, "section_id": 2613}, "so_13885151_13885237_2": {"length": 4, "quality": 0.8, "section_id": 4679}}, "n3337": {"so_13885151_13885237_1": {"length": 5, "quality": 1.0, "section_id": 2576}, "so_13885151_13885237_2": {"length": 4, "quality": 0.8, "section_id": 4488}}, "n4659": {"so_13885151_13885237_1": {"length": 5, "quality": 1.0, "section_id": 788}, "so_13885151_13885237_2": {"length": 4, "quality": 0.8, "section_id": 823}}}, "13885324": {"Id": "13885324", "PostTypeId": "2", "Body": "<p>You can either test it in a boolean context (as the other answers state)</p>\n<pre><code>if (keyPressHandler)\n    ...\n</code></pre>\n<p>or you can compare it against <code>nullptr</code></p>\n<pre><code>if (keyPressHandler != nullptr)\n    ...\n</code></pre>\n<p>Of course looking up the documentation for yourself would have been quicker than asking a question and waiting for an answer.  It's pretty obvious from the documentation Sean Cline linked to, which documents that <code>operator bool()</code> \"checks if a valid target is contained\"</p>\n", "LastActivityDate": "2012-12-14T19:49:06.360", "CommentCount": "0", "CreationDate": "2012-12-14T19:49:06.360", "ParentId": "13885151", "Score": "1", "OwnerUserId": "981959"}, "13885224": {"Id": "13885224", "PostTypeId": "2", "Body": "<p><a href=\"http://en.cppreference.com/w/cpp/utility/functional/function\" rel=\"nofollow\"><code>std::function</code></a> allows you to test whether it holds a callable target via its <code>operator bool()</code>.</p>\n<p>For example:</p>\n<pre><code>if (keyPressHandler)\n{\n    keyPressHandler(someString);\n}\nelse\n    // TODO: Consider queuing events here if you don't want to miss keystrokes.\n}\n</code></pre>\n<p>...will call the function only if it has a valid target. Meaning it has been assigned a function pointer, or anything else callable since it was initialized.</p>\n", "LastEditorUserId": "1020072", "LastActivityDate": "2012-12-14T19:48:04.700", "Score": "3", "CreationDate": "2012-12-14T19:40:16.083", "ParentId": "13885151", "CommentCount": "1", "OwnerUserId": "1020072", "LastEditDate": "2012-12-14T19:48:04.700"}, "13885237": {"Id": "13885237", "PostTypeId": "2", "Body": "<p>You can use the <code>operator bool</code> member function</p>\n<blockquote>\n<p id=\"so_13885151_13885237_0\">20.8.11.2.3 function capacity [func.wrap.func.cap]</p>\n<p id=\"so_13885151_13885237_1\"><code>explicit operator bool() const noexcept;</code></p>\n<p id=\"so_13885151_13885237_2\">Returns: true if *this has a target, otherwise\n  false.</p>\n</blockquote>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;functional&gt;\nint\nmain ()\n{\n        std::function&lt;void()&gt; f;\n\n        std::cout &lt;&lt; (bool) f &lt;&lt; std::endl;\n\n        f = [](){};\n        std::cout &lt;&lt; (bool) f &lt;&lt; std::endl;\n}\n</code></pre>\n", "LastActivityDate": "2012-12-14T19:41:29.533", "CommentCount": "0", "CreationDate": "2012-12-14T19:41:29.533", "ParentId": "13885151", "Score": "4", "OwnerUserId": "390807"}});