post_cb({"30737575": {"CommentCount": "6", "ViewCount": "91", "PostTypeId": "1", "LastEditorUserId": "2786156", "CreationDate": "2015-06-09T16:18:19.830", "LastActivityDate": "2015-06-09T16:36:33.780", "Title": "Function returning another function", "AcceptedAnswerId": "30737832", "LastEditDate": "2015-06-09T16:26:27.050", "Id": "30737575", "Score": "1", "Body": "<p>The question may be sounded quite silly, but why can't we do so? I mean, a declarator like the following:</p>\n<pre><code>void (foo())();\n</code></pre>\n<p>I've read the section 8.3.5 of the current C++ standard and didn't find how it implies from what said there.</p>\n<p>Here is what the standard said about that:</p>\n<blockquote>\n<p id=\"so_30737575_30737575_0\">In a declaration T D where D has the form</p>\n</blockquote>\n<pre><code>D1 ( parameter-declaration-clause ) cv-qualifier-seqopt\nref-qualifieropt exception-specificationopt attribute-specifier-seqopt\n</code></pre>\n<blockquote>\n<p id=\"so_30737575_30737575_1\">and the type of the contained declarator-id in the declaration T D1 is\n  \u201cderived-declarator-type-list T\u201d, the type of the declarator-id in D\n  is \u201cderived-declarator-type-list function of\n  (parameter-declaration-clause ) cv-qualifierseqopt ref-qualifieropt\n  returning T\u201d.</p>\n</blockquote>\n<p>So, formally, from that definition implies that my declration is a valid function declration. <code>T D1</code>, in my case has the form <code>void foo()</code> which is a perfectly valid declration. What did I miss?</p>\n", "Tags": "<c++><declaration><language-lawyer>", "OwnerUserId": "2786156", "AnswerCount": "2"}, "30737832": {"ParentId": "30737575", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_30737575_30737832_0\">I've read the section 8.3.5 of the current C++ standard</p>\n</blockquote>\n<p>Obviously not very carefully. \u00a78.3.5 [dcl.fct]/p8:</p>\n<blockquote>\n<p id=\"so_30737575_30737832_1\">Functions shall not have a return type of type array or function,\n  although they may have a return type of type pointer or reference to\n  such things.</p>\n</blockquote>\n", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "30737832", "Score": "7", "CreationDate": "2015-06-09T16:30:51.083", "LastActivityDate": "2015-06-09T16:30:51.083"}, "bq_ids": {"n4140": {"so_30737575_30737832_1": {"section_id": 3244, "quality": 1.0, "length": 18}, "so_30737575_30737575_1": {"section_id": 3238, "quality": 0.8461538461538461, "length": 11}}, "n3337": {"so_30737575_30737832_1": {"section_id": 3117, "quality": 1.0, "length": 18}, "so_30737575_30737575_1": {"section_id": 3111, "quality": 0.8461538461538461, "length": 11}}, "n4659": {"so_30737575_30737832_1": {"section_id": 4002, "quality": 1.0, "length": 18}, "so_30737575_30737575_1": {"section_id": 3993, "quality": 0.6923076923076923, "length": 9}}}, "30737952": {"ParentId": "30737575", "CommentCount": "2", "Body": "<p>I think it's because you can't create a temporary object of a function. However if you're planning to do something like this try returning a pointer to a function. Try this:</p>\n<pre><code>int (*fun())();\n</code></pre>\n<p>Pointer values can be returned by a function. You can't return a function because there is no function type.</p>\n", "OwnerUserId": "4969140", "PostTypeId": "2", "Id": "30737952", "Score": "1", "CreationDate": "2015-06-09T16:36:33.780", "LastActivityDate": "2015-06-09T16:36:33.780"}});