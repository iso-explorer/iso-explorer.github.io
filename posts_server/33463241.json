post_cb({"bq_ids": {"n4140": {"so_33463241_33463287_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 5881}}, "n3337": {"so_33463241_33463287_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 5652}}, "n4659": {"so_33463241_33463287_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 7364}}}, "33463293": {"Id": "33463293", "PostTypeId": "2", "Body": "<p>If you state the body of a function inside a class, it is equivalent to defining that function outside the class and prefixing it with the inline keyword, but whether or not it will be inlined is ultimately up to the compiler.</p>\n", "LastEditorUserId": "4411577", "LastActivityDate": "2015-11-01T14:46:22.967", "Score": "0", "CreationDate": "2015-11-01T14:34:28.320", "ParentId": "33463241", "CommentCount": "0", "OwnerUserId": "4411577", "LastEditDate": "2015-11-01T14:46:22.967"}, "33463241": {"ViewCount": "41", "Body": "<p>Is it true that if a function body is defined inside a class, the compiler will mark it inline? (even if not marked by the writer)</p>\n<p>example:</p>\n<pre><code>class F {\npublic:\n    void func() {\n    std::cout &lt;&lt; \"is this inline?\\n\";\n    }\n};\n</code></pre>\n", "AcceptedAnswerId": "33463287", "Title": "Inline functions in a class", "CreationDate": "2015-11-01T14:29:39.370", "Id": "33463241", "CommentCount": "2", "PostTypeId": "1", "ClosedDate": "2015-11-01T14:35:16.037", "LastActivityDate": "2015-11-01T14:46:22.967", "Score": "0", "OwnerUserId": "4266765", "Tags": "<c++><class><inline>", "AnswerCount": "2"}, "33463287": {"Id": "33463287", "PostTypeId": "2", "Body": "<p>Yes.</p>\n<blockquote>\n<p id=\"so_33463241_33463287_0\"><code>[C++14: 9.3/2]:</code> <strong>A member function may be defined (8.4) in its class definition, in which case it is an inline member function</strong> (7.1.2), or it may be defined outside of its class definition if it has already been declared but not defined in its class definition. <em>[..]</em></p>\n</blockquote>\n<p>However, whether this has any observable effects beyond the associated linkage requirements is only as predictable as the <code>inline</code> keyword ever is.</p>\n<p>The reason for this rule is so that it is legal to include the class definition \u2014 member functions and all \u2014 via a header into multiple translation units. You would have <em>multiple reference</em> linker errors otherwise.</p>\n", "LastActivityDate": "2015-11-01T14:33:37.953", "CommentCount": "0", "CreationDate": "2015-11-01T14:33:37.953", "ParentId": "33463241", "Score": "4", "OwnerUserId": "560648"}});