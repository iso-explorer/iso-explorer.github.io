post_cb({"bq_ids": {"n4140": {"so_44309451_44309451_0": {"length": 9, "quality": 0.6, "section_id": 5811}}, "n3337": {"so_44309451_44309451_0": {"length": 9, "quality": 0.6, "section_id": 5584}}}, "44309451": {"ViewCount": "157", "Body": "<p>consider the following example program:</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nstruct t\n{\n    ~t() {cout &lt;&lt; \"destroyed\\n\"; }\n};\nint main()\n{\n    cout &lt;&lt; \"test\\n\";\n    t(), cout &lt;&lt; \"doing stuff\\n\";\n    cout &lt;&lt; \"end\\n\";\n}\n</code></pre>\n<p>The output I get with GCC 4.9.2 is:</p>\n<pre><code>test \ndoing stuff \ndestroyed \nend\n</code></pre>\n<p>cpp.sh link: <a href=\"http://cpp.sh/3cvm\" rel=\"nofollow noreferrer\">http://cpp.sh/3cvm</a></p>\n<p>However according to cppreference about the comma operator: </p>\n<blockquote>\n<p id=\"so_44309451_44309451_0\">In a comma expression E1, E2, the expression E1 is evaluated, its result is discarded, and its side effects are completed before evaluation of the expression E2 begins</p>\n</blockquote>\n<p>I'd expect <code>~t()</code> to be called before <code>cout &lt;&lt; \"doing stuff\"</code></p>\n<p>Is this a standard behavior? If so, where is it defined in the standard?</p>\n", "AcceptedAnswerId": "44309505", "Title": "Destructor call in a comma-separated expression", "CreationDate": "2017-06-01T13:52:16.383", "Id": "44309451", "CommentCount": "0", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2017-06-04T10:25:37.970", "LastEditorUserId": "963864", "LastActivityDate": "2017-06-04T10:25:37.970", "Score": "7", "OwnerUserId": "2294936", "Tags": "<c++><language-lawyer><object-lifetime><temporary-objects><comma-operator>", "AnswerCount": "2"}, "44309874": {"PostTypeId": "2", "Body": "<p>The cppreference wording here is unfortunate.</p>\n<p>As with any temporary, this one will last until the end of the <em>full-expression</em> in which it appears.</p>\n<p>By \"side effects\" it is talking about the <em>construction</em> of the temporary.</p>\n", "LastActivityDate": "2017-06-01T14:11:03.083", "Id": "44309874", "CommentCount": "5", "CreationDate": "2017-06-01T14:11:03.083", "ParentId": "44309451", "Score": "6", "OwnerUserId": "560648"}, "44309505": {"PostTypeId": "2", "Body": "<p>\"Its result is discarded\" means that the subexpression's <em>value</em> (here of type <code>t</code>) is ignored.</p>\n<p>Its lifetime, however, is unaffected: as any all temporaries, it is destructed at the end of the full-expression (i.e. the semicolon here).</p>\n", "LastActivityDate": "2017-06-01T13:55:06.113", "Id": "44309505", "CommentCount": "0", "CreationDate": "2017-06-01T13:55:06.113", "ParentId": "44309451", "Score": "12", "OwnerUserId": "3233393"}});