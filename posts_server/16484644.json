post_cb({"16484644": {"ViewCount": "1135", "Body": "<p>I cannot find information about a behavior of sizeof (at least in gcc 4.6+). The following code works and produces the \"expected\" result (4, 1, 8), but I'm wondering why. I checked several questions but none show an example like this one.</p>\n<pre><code>#include&lt;iostream&gt;\n\nint f1(int) {\n  return 0;\n}\n\nchar f2(char) {\n  return 0;\n}\n\ndouble f3() {\n  return 0;\n}\n\nint main() {\n  std::cout &lt;&lt; sizeof(f1(0)) &lt;&lt; std::endl;\n  std::cout &lt;&lt; sizeof(f2('0')) &lt;&lt; std::endl;\n  std::cout &lt;&lt; sizeof(f3()) &lt;&lt; std::endl;\n\n  return 0;\n}\n</code></pre>\n<p>An answer would be much appreciated.\nThanks.</p>\n", "AcceptedAnswerId": "16484685", "Title": "Why is sizeof working for return types", "CreationDate": "2013-05-10T14:31:00.870", "Id": "16484644", "CommentCount": "0", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2013-05-10T14:38:12.503", "LastEditorUserId": "1438628", "LastActivityDate": "2013-05-10T16:25:22.623", "Score": "1", "OwnerUserId": "1919074", "Tags": "<c++><sizeof>", "AnswerCount": "4"}, "16485311": {"Id": "16485311", "PostTypeId": "2", "Body": "<p><a href=\"http://cs.nyu.edu/courses/spring13/CSCI-GA.2110-001/downloads/C++%20Standard%202003.pdf\" rel=\"nofollow\">ISO/IEC 14882</a> on C++ says (section 5.3.3 - page 79):\nsays</p>\n<blockquote>\n<p id=\"so_16484644_16485311_0\">\"The size operator shall not be applied to an expression that has\n  function or incomplete type,...\"</p>\n</blockquote>\n<p>Also notice the compilation warning with the -pedantic option enabled...</p>\n<pre><code>warning: invalid application of 'sizeof' to a function type\n</code></pre>\n", "LastEditorUserId": "1625987", "LastActivityDate": "2013-05-10T15:10:37.893", "Score": "1", "CreationDate": "2013-05-10T15:04:47.817", "ParentId": "16484644", "CommentCount": "0", "OwnerUserId": "1625987", "LastEditDate": "2013-05-10T15:10:37.893"}, "16484736": {"Id": "16484736", "PostTypeId": "2", "Body": "<p>What is happening in the functions</p>\n<pre><code>int f1(int) {\n  return int(0);\n}\n\nchar f1(char) {\n  return char(0);\n}\n\ndouble f1() {\n  return double(0);\n}\n</code></pre>\n<p>What is happening later.</p>\n<pre><code>std::cout &lt;&lt; sizeof(int(0)) &lt;&lt; std::endl;\nstd::cout &lt;&lt; sizeof(char('0')) &lt;&lt; std::endl;\nstd::cout &lt;&lt; sizeof(double(0)) &lt;&lt; std::endl;\n</code></pre>\n<p>Because you are printing the <code>sizeof</code> the <code>value</code> of what is <strong>returned</strong> from the function</p>\n", "LastEditorUserId": "15168", "LastActivityDate": "2013-05-10T16:25:22.623", "Score": "2", "CreationDate": "2013-05-10T14:35:37.673", "ParentId": "16484644", "CommentCount": "1", "OwnerUserId": "6271971", "LastEditDate": "2013-05-10T16:25:22.623"}, "bq_ids": {"n4140": {"so_16484644_16485311_0": {"length": 6, "quality": 0.75, "section_id": 6076}}, "n3337": {"so_16484644_16485311_0": {"length": 6, "quality": 0.75, "section_id": 5844}}, "n4659": {"so_16484644_16485311_0": {"length": 6, "quality": 0.75, "section_id": 7572}}}, "16484883": {"Id": "16484883", "PostTypeId": "2", "Body": "<p>f1 returns an integer which takes 4 bytes.<br>\nf2 returns a character which takes 1 byte.<br>\nf3 returns a double which takes 8 bytes. </br></br></p>\n<p>So all sizeof() does is return the size of its argument.</p>\n", "LastActivityDate": "2013-05-10T14:43:11.790", "CommentCount": "0", "CreationDate": "2013-05-10T14:43:11.790", "ParentId": "16484644", "Score": "0", "OwnerUserId": "2151893"}, "16484685": {"Id": "16484685", "PostTypeId": "2", "Body": "<p>The <code>sizeof</code> operator can take a type or an expression as an argument and returns the size of its argument.  You're using expressions, so it returns the size of those expressions.  The expression is not evaluated at run-time \u2014 so the functions are never invoked.  But the correct (overloaded) function is used to determine the size of the result.</p>\n<p>In a (now-deleted) comment, <a href=\"https://stackoverflow.com/users/1919074/user1919074\">user1919074</a> said:</p>\n<blockquote>\n<p id=\"so_16484644_16484685_0\"><code>sizeof(f1)</code> would not work</p>\n</blockquote>\n<p><em>Brain fart</em></p>\n<p><s>\nIn C, <code>sizeof(f1)</code> would work since it would return the size of a pointer to function. </s></p>\n<p>The <code>sizeof()</code> operator can't be applied direct to a function name.  It has special rules, and when applied to an array, the normal 'decay' to a pointer doesn't occur.  Similarly, the change of a function name to a function pointer doesn't occur with <code>sizeof()</code>.  (Of course, you have to poke GCC hard with <code>-pedantic</code> to get it to give the warning/error; otherwise, it returns 1 as the size of the function.)</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2013-05-10T14:57:09.537", "Score": "4", "CreationDate": "2013-05-10T14:33:40.843", "ParentId": "16484644", "CommentCount": "5", "OwnerUserId": "15168", "LastEditDate": "2017-05-23T12:29:22.930"}});