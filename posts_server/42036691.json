post_cb({"bq_ids": {"n4140": {"so_42036691_42036691_1": {"length": 6, "quality": 1.0, "section_id": 742}, "so_42036691_42036893_0": {"length": 5, "quality": 1.0, "section_id": 824}, "so_42036691_42036893_1": {"length": 7, "quality": 0.875, "section_id": 798}}, "n3337": {"so_42036691_42036893_1": {"length": 7, "quality": 0.875, "section_id": 787}, "so_42036691_42036893_0": {"length": 5, "quality": 1.0, "section_id": 813}, "so_42036691_42036691_1": {"length": 6, "quality": 1.0, "section_id": 731}}, "n4659": {"so_42036691_42036893_1": {"length": 7, "quality": 0.875, "section_id": 856}, "so_42036691_42036893_0": {"length": 5, "quality": 1.0, "section_id": 883}, "so_42036691_42036691_1": {"length": 6, "quality": 1.0, "section_id": 800}}}, "42036893": {"Id": "42036893", "PostTypeId": "2", "Body": "<p>The standard states that for sequence containers separately. e.g.</p>\n<p>For <a href=\"http://eel.is/c++draft/forwardlist.overview#1\" rel=\"nofollow noreferrer\">forward_\u00adlist</a>:</p>\n<blockquote>\n<p id=\"so_42036691_42036893_0\">A <code>forward_\u00adlist</code> is a container that supports forward iterators and ...</p>\n</blockquote>\n<p>For <a href=\"http://eel.is/c++draft/deque.overview#1\" rel=\"nofollow noreferrer\">deque</a>:</p>\n<blockquote>\n<p id=\"so_42036691_42036893_1\">A <code>deque</code> is a sequence container that supports random access iterators ([<a href=\"http://eel.is/c++draft/random.access.iterators\" rel=\"nofollow noreferrer\">random.access.iterators</a>]).</p>\n</blockquote>\n<p>You can expect that the iterator category for sequence containers are at least forward iterator category.</p>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2017-02-04T13:45:24.117", "Score": "2", "CreationDate": "2017-02-04T05:37:10.247", "ParentId": "42036691", "CommentCount": "4", "OwnerUserId": "3309790", "LastEditDate": "2017-02-04T13:45:24.117"}, "42036691": {"ViewCount": "73", "Body": "<p>As I read through <em>The C++ Programming Language</em>, I found this paragraph saying</p>\n<blockquote>\n<p id=\"so_42036691_42036691_0\">The iterator passed to <em>inserter()</em> must be an iterator into the container. For a sequence container, that implies that it must be <strong>a bidirectional iterator</strong> (so that you can insert before it). For example, you can\u2019t use <em>inserter()</em> to make an iterator to insert into a <em>forward_list</em>...</p>\n</blockquote>\n<p>So I started to find the relative parts of the standard that would verify this statement. However, I was left with this paragraph (23.2.6 [associative.reqmts] paragraph 6) relating to only <strong>associative container</strong>:</p>\n<blockquote>\n<p id=\"so_42036691_42036691_1\">iterator of an associative container is of the bidirectional iterator category...</p>\n</blockquote>\n<p>Where can I find the iterator types of <strong>sequence containers</strong> in the standard?</p>\n", "AcceptedAnswerId": "42036893", "Title": "What's the iterator types of sequence containers?", "CreationDate": "2017-02-04T05:04:56.490", "Id": "42036691", "CommentCount": "2", "LastEditDate": "2017-02-04T13:45:19.960", "PostTypeId": "1", "LastEditorUserId": "3309790", "LastActivityDate": "2017-02-04T13:45:24.117", "Score": "2", "OwnerUserId": "5645940", "Tags": "<c++><iterator><language-lawyer>", "AnswerCount": "1"}});