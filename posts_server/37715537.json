post_cb({"bq_ids": {"n4140": {"so_37715537_37715537_0": {"length": 16, "quality": 0.7272727272727273, "section_id": 6259}, "so_37715537_37715537_1": {"length": 7, "quality": 0.7777777777777778, "section_id": 6704}, "so_37715537_37715594_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 6259}, "so_37715537_37715681_0": {"length": 9, "quality": 0.75, "section_id": 6259}}, "n3337": {"so_37715537_37715537_0": {"length": 16, "quality": 0.7272727272727273, "section_id": 6019}, "so_37715537_37715537_1": {"length": 7, "quality": 0.7777777777777778, "section_id": 6459}, "so_37715537_37715594_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 6019}, "so_37715537_37715681_0": {"length": 9, "quality": 0.75, "section_id": 6019}}, "n4659": {"so_37715537_37715537_0": {"length": 13, "quality": 0.5909090909090909, "section_id": 7763}, "so_37715537_37715537_1": {"length": 6, "quality": 0.6666666666666666, "section_id": 3233}, "so_37715537_37715594_0": {"length": 5, "quality": 0.5555555555555556, "section_id": 7763}, "so_37715537_37715681_0": {"length": 8, "quality": 0.6666666666666666, "section_id": 7763}}}, "37715681": {"Id": "37715681", "PostTypeId": "2", "Body": "<p>The key part of you quote is:</p>\n<blockquote>\n<p id=\"so_37715537_37715681_0\">...the contents of each header cname shall be the same as that of the corresponding header name.h, as specified in the C standard library ([intro.refs]) or the C Unicode TR...</p>\n</blockquote>\n<p>It's ambiguous in several regards:</p>\n<ul>\n<li><p>What constitutes \"content\"?  Is it all the textual file content, or the set of declarations and definitions therein, or only those potentially visible to a particular language (assuming a C program doesn't define <code>__cplusplus</code>)?</p></li>\n<li><p>Is \"as specified\" a requirement on the content of cname, or the content of name.h?  If the requirement relates to cname (my interpretation), then there's no restriction there related to name.h content.</p></li>\n</ul>\n<p>With such ambiguity, I don't think there's a definitive answer to your question, but nor can I see a reason to care....</p>\n", "LastActivityDate": "2016-06-09T01:58:04.837", "CommentCount": "0", "CreationDate": "2016-06-09T01:58:04.837", "ParentId": "37715537", "Score": "1", "OwnerUserId": "410767"}, "37715594": {"Id": "37715594", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_37715537_37715594_0\"><strong>Except as noted in Clauses</strong> [language.support] through [thread] and Annex [depr] [...] <strong>as if</strong> by inclusion.</p>\n</blockquote>\n<ol>\n<li>I don't see how \"as if by inclusion\" could be read as meaning \"by actual inclusion.\"</li>\n<li>\u00a718.2 is part of [language.support], so it's included in the range \"[language.support] through [thread]\", so it falls under the \"Except as noted\" clause anyway.</li>\n</ol>\n", "LastActivityDate": "2016-06-09T01:41:50.240", "CommentCount": "0", "CreationDate": "2016-06-09T01:41:50.240", "ParentId": "37715537", "Score": "0", "OwnerUserId": "179910"}, "37715537": {"ViewCount": "63", "Body": "<p>The standard says in section 17.6.1.2 paragraph 4 that:</p>\n<blockquote>\n<p id=\"so_37715537_37715537_0\">Except as noted in Clauses [language.support] through [thread] and\n  Annex [depr], the contents of each header <em>cname</em> shall be the same as\n  that of the corresponding header <em>name.h</em>, as specified in the C\n  standard library ([intro.refs]) or the C Unicode TR, as appropriate,\n  as if by inclusion.</p>\n</blockquote>\n<p>Then in section 18.2 but paragraph 2:</p>\n<blockquote>\n<p id=\"so_37715537_37715537_1\">The contents are the same as the Standard C library header <code>&lt;stddef.h&gt;</code>,\n  with the following changes:</p>\n</blockquote>\n<p>I read this to mean that <code>&lt;cstddef&gt;</code> must include <code>&lt;stddef.h&gt;</code> unmodified. But GCC has this in their header file:</p>\n<p><code>/usr/lib/gcc/$TRIPLET/5.3.1/include/stddef.h</code></p>\n<pre><code>#if defined (_STDDEF_H) || defined (__need_NULL)                                                              \n#undef NULL     /* in case &lt;stdio.h&gt; has defined it. */                                                       \n#ifdef __GNUG__                                                                                               \n#define NULL __null                                                                                           \n#else   /* G++ */                                                                                             \n#ifndef __cplusplus                                                                                           \n#define NULL ((void *)0)                                                                                      \n#else   /* C++ */                                                                                             \n#define NULL 0                                                                                                \n#endif  /* C++ */                                                                                             \n#endif  /* G++ */                                                                                             \n#endif  /* NULL not defined and &lt;stddef.h&gt; or need NULL. */                                                  \n#undef  __need_NULL\n</code></pre>\n<p>Is this legal by the standard?</p>\n", "Title": "Can GCC modify C headers for C++ features?", "CreationDate": "2016-06-09T01:34:00.367", "LastActivityDate": "2016-06-09T01:58:04.837", "CommentCount": "2", "LastEditDate": "2016-06-09T01:37:03.640", "PostTypeId": "1", "LastEditorUserId": "835629", "Id": "37715537", "Score": "0", "OwnerUserId": "6443091", "Tags": "<c++><language-lawyer>", "AnswerCount": "2"}});