post_cb({"14422594": {"ParentId": "14422527", "PostTypeId": "2", "CommentCount": "2", "Body": "<p><strong>C++11 7.1.1 Storage class specifiers:</strong><br>\n\u00a75     </br></p>\n<blockquote>\n<p id=\"so_14422527_14422594_0\">The static specifier can be applied only to names of variables and functions and to anonymous unions (9.5).\n  There can be no static function declarations within a block, nor any static function parameters. <strong>A static\n  specifier used in the declaration of a variable declares the variable to have static storage duration</strong> (3.7.1),\n  unless accompanied by the thread_local specifier, which declares the variable to have thread storage\n  duration (3.7.2). A static specifier can be used in declarations of class members; 9.4 describes its effect.\n  For the linkage of a name declared with a static specifier, see 3.5.</p>\n</blockquote>\n<p>So what are you declaring in the code example?        </p>\n<pre><code>static const int* array[100];\n</code></pre>\n<p>Obviously, you are declaring the variable <code>array</code> So the <code>static</code> applies to <code>array</code>.<br>\nDo not confuse <em>storage class specifier</em> with <em>cv-qualifiers</em> the former applies to the variable being declared while the latter applies to the <em>type</em>.</br></p>\n", "OwnerUserId": "452307", "LastEditorUserId": "452307", "LastEditDate": "2013-01-20T07:41:14.330", "Id": "14422594", "Score": "4", "CreationDate": "2013-01-20T07:35:24.327", "LastActivityDate": "2013-01-20T07:41:14.330"}, "14422573": {"ParentId": "14422527", "CommentCount": "5", "Body": "<p><code>static</code>, <code>extern</code> and <code>register</code> apply to the variable you declare, to <code>array</code> in this example.</p>\n<p>So, you get a static array of 100 pointers to constant integers.</p>\n", "OwnerUserId": "968261", "PostTypeId": "2", "Id": "14422573", "Score": "2", "CreationDate": "2013-01-20T07:30:10.637", "LastActivityDate": "2013-01-20T07:30:10.637"}, "14422527": {"CommentCount": "3", "ViewCount": "610", "CreationDate": "2013-01-20T07:22:50.923", "LastActivityDate": "2013-01-20T07:41:14.330", "Title": "static const arrays", "AcceptedAnswerId": "14422573", "PostTypeId": "1", "Id": "14422527", "Score": "4", "Body": "<p>If I read this in a class as a data member, is the <code>static</code> referring to the entire expression (the array itself) or the elements of the array?</p>\n<p><code>static const int* array[100];</code></p>\n<p>Is the array, <code>array</code>, static, or does the array contain 100 <code>static const int pointers</code> ?</p>\n<p>I'm assuming the former, but the way the word <code>const</code> changes meaning makes me wonder if <code>static</code> also changes meaning based on where in the expression it exists. In the above, the pointer <code>array</code> is not <code>const</code> yet the elements of the array <em>are</em> <code>const</code>, so I wonder if the pointer of the array is <code>static</code>.</p>\n", "Tags": "<c++>", "OwnerUserId": "3758484", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_14422527_14422594_0": {"section_id": 5395, "quality": 0.9310344827586207, "length": 54}}, "n3337": {"so_14422527_14422594_0": {"section_id": 5189, "quality": 0.9310344827586207, "length": 54}}, "n4659": {"so_14422527_14422594_0": {"section_id": 6820, "quality": 0.9310344827586207, "length": 54}}}});