post_cb({"45115745": {"ParentId": "45025808", "CommentCount": "0", "CreationDate": "2017-07-15T07:35:58.377", "OwnerUserId": "4832499", "PostTypeId": "2", "Id": "45115745", "Score": "0", "Body": "<p><code>f(bool)</code> is well formed, <code>f(false)</code> is a core constant expression.</p>\n<p>Its <code>f()</code> that is ill-formed, all argument values, in this case the empty set, results in calling <code>f(true)</code> which in turn throws.</p>\n", "LastActivityDate": "2017-07-15T07:35:58.377"}, "45025808": {"CommentCount": "9", "ViewCount": "106", "PostTypeId": "1", "LastEditorUserId": "5645940", "CreationDate": "2017-07-11T05:05:16.900", "LastActivityDate": "2017-07-15T07:35:58.377", "Title": "Why is this constexpr function ill-formed?", "AcceptedAnswerId": "45115745", "LastEditDate": "2017-07-11T05:20:29.727", "Id": "45025808", "Score": "1", "Body": "<p>According to 10.1.5 [dcl.constexpr] paragraph 5 (<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf\" rel=\"nofollow noreferrer\">N4659</a>),</p>\n<blockquote>\n<p id=\"so_45025808_45025808_0\">For a constexpr function or constexpr constructor that is neither defaulted nor a template, <strong>if no argument values exist</strong> such that an invocation of the function or constructor could be an evaluated subexpression of a core constant expression (8.20), or, for a constructor, a constant initializer for some object (6.6.2), the\n  program is ill-formed, no diagnostic required. [ Example:</p>\n<pre><code>constexpr int f(bool b)\n    { return b ? throw 0 : 0; }         // OK\nconstexpr int f() { return f(true); }   // ill-formed, no diagnostic required\n\n...\n</code></pre>\n<p id=\"so_45025808_45025808_1\">\u2014end example ]</p>\n</blockquote>\n<p>I'm not sure why the above program is ill-formed. I can certainly see that <code>f(true)</code> is not a part of a core constant expression. <strong>However, the argument value <code>false</code> exists such that <code>f(false)</code> is a part of a core constant expression.</strong> What's the problem?</p>\n", "Tags": "<c++><c++11><language-lawyer>", "OwnerUserId": "5645940", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_45025808_45025808_0": {"section_id": 5421, "quality": 0.6060606060606061, "length": 20}}, "n4659": {"so_45025808_45025808_0": {"section_id": 6843, "quality": 0.8787878787878788, "length": 29}}}});