post_cb({"37182947": {"ParentId": "37182808", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2016-05-12T09:36:04.470", "Score": "4", "LastEditorUserId": "3919155", "LastEditDate": "2016-05-12T11:02:36.630", "Id": "37182947", "OwnerUserId": "3435400", "Body": "<p><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4296.pdf\" rel=\"nofollow\">N4296</a>, 10.3\u00a72 (<a href=\"http://eel.is/c++draft/class.virtual#2\" rel=\"nofollow\">draft version</a>):</p>\n<blockquote>\n<p id=\"so_37182808_37182947_0\">If a virtual member function vf is declared in a class Base and in a\n  class Derived, derived directly or indirectly from Base, a member\n  function vf with the same name, parameter-type-list (8.3.5),\n  cv-qualification, and ref-qualifier (or absence of same) as Base::vf\n  is declared, then Derived::vf is also virtual <strong>(whether or not it is so\n  declared)</strong> and it overrides Base::vf.</p>\n</blockquote>\n<p>Emphasis by me.</p>\n<p>A virtual function remains virtual in all derived classes, regardless if it is declared as <code>virtual</code> in the derived classes.</p>\n", "LastActivityDate": "2016-05-12T11:02:36.630"}, "37182808": {"CommentCount": "1", "ViewCount": "129", "ClosedDate": "2016-05-12T15:35:22.703", "CreationDate": "2016-05-12T09:30:27.457", "LastActivityDate": "2016-05-12T11:02:36.630", "Title": "virtual function in parent of parent class", "PostTypeId": "1", "Id": "37182808", "Score": "5", "Body": "<p>The following code is late binding test() method but shouldn't it bind early? because test() method is not virtual in class B(but in class A), and we are using pointer of class B. </p>\n<pre><code>class A{\n    public:\n        virtual void test(){\n            cout&lt;&lt;\"test a\";\n        }\n};\nclass B : public A{\n    public:\n        void test(){\n            cout&lt;&lt;\"Test b\";\n        }\n};\nclass C: public B{\n    public:\n        void test(){\n            cout&lt;&lt;\"test c\";\n        }\n};\nint main(){\n    B *bp;\n    C objc;\n    bp = &amp;objc;\n    bp-&gt;test();  // test c\n}\n</code></pre>\n", "Tags": "<c++><virtual-functions><late-binding>", "OwnerUserId": "978045", "AnswerCount": "2"}, "37182924": {"ParentId": "37182808", "CommentCount": "0", "CreationDate": "2016-05-12T09:35:15.187", "OwnerUserId": "1594913", "PostTypeId": "2", "Id": "37182924", "Score": "5", "Body": "<p>Once a function has been declared <code>virtual</code> in a class, it's always virtual in the classes that inherit from that class, <strong>whether you use the <code>virtual</code> keyword or not</strong>.</p>\n<p>So in your class <code>C</code>, the <code>test()</code> function is actually overriding <code>B</code> and <code>A</code>'s own <code>test()</code> functions.</p>\n", "LastActivityDate": "2016-05-12T09:35:15.187"}, "bq_ids": {"n4140": {"so_37182808_37182947_0": {"section_id": 7003, "quality": 0.9375, "length": 30}}, "n3337": {"so_37182808_37182947_0": {"section_id": 6749, "quality": 0.9375, "length": 30}}, "n4659": {"so_37182808_37182947_0": {"section_id": 8500, "quality": 0.9375, "length": 30}}}});