post_cb({"bq_ids": {"n4140": {"so_12742725_12742843_1": {"length": 19, "quality": 0.8636363636363636, "section_id": 548}}, "n3337": {"so_12742725_12742843_1": {"length": 19, "quality": 0.8636363636363636, "section_id": 539}}, "n4659": {"so_12742725_12742843_1": {"length": 19, "quality": 0.8636363636363636, "section_id": 569}}}, "12742725": {"ViewCount": "227", "Body": "<p>In short, I am wanting to make a function that embeds the visual styles manifest and links to <code>ComCtl32.lib</code>, version 6 if available. Here is basically what I am hoping to do:</p>\n<pre><code>void InitVivify() {\n    // Embed visual style XML manifest\n    #pragma comment(linker,                           \\\n        \"\\\"/manifestdependency:type='Win32'\"          \\\n        \"   name='Microsoft.Windows.Common-Controls'\" \\\n        \"   version='6.0.0.0'\"                        \\\n        \"   processorArchitecture='*'\"                \\\n        \"   publicKeyToken='6595b64144ccf1df'\"        \\\n        \"   language='*'\\\"\"                           \\\n    )\n\n    // Link common controls library\n    #pragma comment(lib, \"ComCtl32.lib\")\n\n    // Initialize controls used\n    INITCOMMONCONTROLSEX InitCtrlEx;\n    InitCtrlEx.dwSize = sizeof(INITCOMMONCONTROLSEX);\n    InitCtrlEx.dwICC = ICC_LISTVIEW_CLASSES | ICC_TAB_CLASSES | ICC_USEREX_CLASSES;\n    InitCommonControlsEx(&amp;InitCtrlEx);\n}\n</code></pre>\n<p>I realize this probably isn't good practice, but is it valid? </p>\n", "AcceptedAnswerId": "12742843", "Title": "Can/Should C++ #pragma Preprocessors Reside In Functions", "CreationDate": "2012-10-05T08:50:16.013", "Id": "12742725", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2012-10-05T08:56:12.310", "Score": "0", "OwnerUserId": "1641463", "Tags": "<c++><winapi><linker><pragma><common-controls>", "AnswerCount": "1"}, "12742843": {"Id": "12742843", "PostTypeId": "2", "Body": "<p>Pragma directives are pre-processor directives.<br>\nThey cause the implementation to behave in a implementation defined way.<br>\nSo it is valid but not encouraged.    </br></br></p>\n<p>C++11 Standard:     </p>\n<p><strong>16.6 Pragma directive [cpp.pragma]</strong> </p>\n<blockquote>\n<p id=\"so_12742725_12742843_0\">1 A preprocessing directive of the form</p>\n<pre><code># pragma pp-tokensopt new-line\n</code></pre>\n<p id=\"so_12742725_12742843_1\">causes the implementation to behave in an implementation-defined manner. The behavior might cause translation to fail or cause the translator or the resulting program to behave in a non-conforming manner. Any pragma that is not recognized by the implementation is ignored.</p>\n</blockquote>\n", "LastActivityDate": "2012-10-05T08:56:12.310", "CommentCount": "1", "CreationDate": "2012-10-05T08:56:12.310", "ParentId": "12742725", "Score": "4", "OwnerUserId": "452307"}});