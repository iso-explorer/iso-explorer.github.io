post_cb({"30030658": {"ViewCount": "124", "Body": "<p>Is there any differece between the following implementations?</p>\n<pre><code>class Foo\n{\n     int bar(int x) const\n     { return x * 2; }\n};\n\n\nclass Foo\n{\n     inline int bar(int x) const\n     { return x * 2; }\n};\n</code></pre>\n", "AcceptedAnswerId": "30030832", "Title": "Inline class method in the header file", "CreationDate": "2015-05-04T12:51:40.957", "Id": "30030658", "CommentCount": "4", "PostTypeId": "1", "LastActivityDate": "2015-05-04T13:05:26.297", "Score": "1", "OwnerUserId": "1395740", "Tags": "<c++><optimization><inline>", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_30030658_30030946_0": {"length": 31, "quality": 0.9393939393939394, "section_id": 5403}, "so_30030658_30030832_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 5881}, "so_30030658_30030832_1": {"length": 27, "quality": 1.0, "section_id": 5882}}, "n3337": {"so_30030658_30030946_0": {"length": 31, "quality": 0.9393939393939394, "section_id": 5198}, "so_30030658_30030832_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 5652}, "so_30030658_30030832_1": {"length": 27, "quality": 1.0, "section_id": 5653}}, "n4659": {"so_30030658_30030946_0": {"length": 23, "quality": 0.696969696969697, "section_id": 6852}, "so_30030658_30030832_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 7364}, "so_30030658_30030832_1": {"length": 27, "quality": 1.0, "section_id": 7365}}}, "30030832": {"Id": "30030832", "PostTypeId": "2", "Body": "<p>According to the C++ Standard (9.3 Member functions)</p>\n<blockquote>\n<p id=\"so_30030658_30030832_0\">2 <strong>A member function may be defined (8.4) in its class definition, in\n  which case it is an inline member function</strong> (7.1.2), or it may be\n  defined outside of its class definition if it has already been\n  declared but not defined in its class definition.</p>\n</blockquote>\n<p>And</p>\n<blockquote>\n<p id=\"so_30030658_30030832_1\">3 An inline member function (whether static or non-static) may also be\n  defined outside of its class definition provided either its\n  declaration in the class definition or its definition outside of the\n  class definition declares the function as inline.</p>\n</blockquote>\n", "LastActivityDate": "2015-05-04T13:00:02.857", "CommentCount": "0", "CreationDate": "2015-05-04T13:00:02.857", "ParentId": "30030658", "Score": "1", "OwnerUserId": "2877241"}, "30030789": {"Id": "30030789", "PostTypeId": "2", "Body": "<p>When the function is marked as <code>inline</code>, it tells the compiler to put the code of the function to the place where the function has been called from. You can have implicit and explicit inlines - member functions of classes are inlined implicitly, so you don't need to type it and in your case there is no difference.</p>\n", "LastActivityDate": "2015-05-04T12:57:48.053", "CommentCount": "0", "CreationDate": "2015-05-04T12:57:48.053", "ParentId": "30030658", "Score": "0", "OwnerUserId": "3945015"}, "30030946": {"Id": "30030946", "PostTypeId": "2", "Body": "<p>7.1.2 Function specifiers</p>\n<blockquote>\n<p id=\"so_30030658_30030946_0\">3 A function defined within a class definition is an inline function.\n  The inline specifier shall not appear on a block scope function\n  declaration. 94 (<strong>The inline keyword has no effect on the linkage of a function.</strong>) If the inline specifier is used in a friend\n  declaration, that declaration shall be a definition or the function\n  shall have previously been declared inline.</p>\n</blockquote>\n<p>So, no. There is no difference.</p>\n", "LastActivityDate": "2015-05-04T13:05:26.297", "CommentCount": "0", "CreationDate": "2015-05-04T13:05:26.297", "ParentId": "30030658", "Score": "0", "OwnerUserId": "2169277"}});