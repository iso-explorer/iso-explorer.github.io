post_cb({"bq_ids": {"n4140": {"so_21978188_21978207_0": {"length": 12, "quality": 1.0, "section_id": 3913}}, "n3337": {"so_21978188_21978207_0": {"length": 12, "quality": 1.0, "section_id": 3773}}, "n4659": {"so_21978188_21978207_0": {"length": 9, "quality": 0.75, "section_id": 4799}}}, "21978188": {"ViewCount": "6749", "Body": "<p>I am learning <em>C++</em> and I copied this code from a textbook, while compiling the code, an error appears at the end. The error says:</p>\n<blockquote>\n<p id=\"so_21978188_21978188_0\">Control Reaches end of non-void function</p>\n</blockquote>\n<p>and its located at the end of the code:</p>\n<pre><code>#include \"ComplexNumber.hpp\"\n#include &lt;cmath&gt;\n\nComplexNumber::ComplexNumber()\n{\nmRealPart = 0.0;\nmImaginaryPart = 0.0;\n}\n\nComplexNumber::ComplexNumber(double x, double y)\n{\nmRealPart = x;\nmImaginaryPart = y;\n}\n\ndouble ComplexNumber::CalculateModulus() const\n{\nreturn sqrt(mRealPart*mRealPart+\n            mImaginaryPart*mImaginaryPart);\n}\ndouble ComplexNumber::CalculateArgument() const\n{\nreturn atan2(mImaginaryPart, mRealPart);\n}\n\nComplexNumber ComplexNumber::CalculatePower(double n) const\n{\ndouble modulus = CalculateModulus();\ndouble argument = CalculateArgument();\ndouble mod_of_result = pow(modulus, n);\ndouble arg_of_result = argument*n;\ndouble real_part = mod_of_result*cos(arg_of_result);\ndouble imag_part = mod_of_result*sin(arg_of_result);\nComplexNumber z(real_part, imag_part);\nreturn z;\n}\n\nComplexNumber&amp; ComplexNumber::operator=(const ComplexNumber&amp; z)\n{\nmRealPart = z.mRealPart;\nmImaginaryPart = z.mImaginaryPart;\nreturn *this;\n}\n\nComplexNumber ComplexNumber::operator-() const\n{\nComplexNumber w;\nw.mRealPart = -mRealPart;\nw.mImaginaryPart = -mImaginaryPart;\nreturn w;\n}\n\nComplexNumber ComplexNumber::operator+(const ComplexNumber&amp; z) const\n{\nComplexNumber w;\nw.mRealPart = mRealPart + z.mRealPart;\nw.mImaginaryPart = mImaginaryPart + z.mImaginaryPart;\nreturn w;\n}\n\nstd::ostream&amp; operator&lt;&lt;(std::ostream&amp; output,\n                     const ComplexNumber&amp; z)\n{\noutput &lt;&lt; \"(\" &lt;&lt; z.mRealPart &lt;&lt; \" \";\nif (z.mImaginaryPart &gt;= 0.0)\n{\n    output &lt;&lt; \" + \" &lt;&lt; z.mImaginaryPart &lt;&lt; \"i)\";\n}\nelse\n{\n    output &lt;&lt; \"- \" &lt;&lt; -z.mImaginaryPart &lt;&lt; \"i)\";\n}\n} //--------&gt;&gt;&gt;&gt;**\"Control Reaches end of non-void function\"**\n</code></pre>\n", "AcceptedAnswerId": "21978207", "Title": "Error: control Reaches end of non void function", "CreationDate": "2014-02-24T03:04:08.993", "Id": "21978188", "CommentCount": "4", "LastEditDate": "2014-02-24T11:53:37.167", "PostTypeId": "1", "LastEditorUserId": "973680", "LastActivityDate": "2014-02-24T11:53:37.167", "Score": "3", "OwnerUserId": "2971368", "Tags": "<c++><compiler-errors><return><numerical-methods>", "AnswerCount": "3"}, "21978215": {"Id": "21978215", "PostTypeId": "2", "Body": "<p>The function claims to return something:</p>\n<pre><code>std::ostream&amp; operator&lt;&lt;(std::ostream&amp; output, const ComplexNumber&amp; z)\n^^^^^^^^^^^^^\n</code></pre>\n<p>but there is no <code>return</code> statement at the end. You should add one:</p>\n<pre><code>return output;\n</code></pre>\n", "LastActivityDate": "2014-02-24T03:07:46.203", "Score": "1", "CreationDate": "2014-02-24T03:07:46.203", "ParentId": "21978188", "CommentCount": "0", "OwnerUserId": "204847"}, "21978218": {"Id": "21978218", "PostTypeId": "2", "Body": "<p>This function</p>\n<pre><code>std::ostream&amp; operator&lt;&lt;(std::ostream&amp; output,\n                     const ComplexNumber&amp; z)\n{\noutput &lt;&lt; \"(\" &lt;&lt; z.mRealPart &lt;&lt; \" \";\nif (z.mImaginaryPart &gt;= 0.0)\n{\n    output &lt;&lt; \" + \" &lt;&lt; z.mImaginaryPart &lt;&lt; \"i)\";\n}\nelse\n{\n    output &lt;&lt; \"- \" &lt;&lt; -z.mImaginaryPart &lt;&lt; \"i)\";\n}\n} \n</code></pre>\n<p>has return type <code>std::ostream &amp;</code> However it returns nothing. I think there is a typo There should be</p>\n<pre><code>std::ostream&amp; operator&lt;&lt;(std::ostream&amp; output,\n                     const ComplexNumber&amp; z)\n{\noutput &lt;&lt; \"(\" &lt;&lt; z.mRealPart &lt;&lt; \" \";\nif (z.mImaginaryPart &gt;= 0.0)\n{\n    output &lt;&lt; \" + \" &lt;&lt; z.mImaginaryPart &lt;&lt; \"i)\";\n}\nelse\n{\n    output &lt;&lt; \"- \" &lt;&lt; -z.mImaginaryPart &lt;&lt; \"i)\";\n}\n\nreturn output;\n} \n</code></pre>\n", "LastEditorUserId": "2877241", "LastActivityDate": "2014-02-24T03:17:06.207", "Score": "0", "CreationDate": "2014-02-24T03:07:51.277", "ParentId": "21978188", "CommentCount": "0", "LastEditDate": "2014-02-24T03:17:06.207", "OwnerUserId": "2877241"}, "21978207": {"Id": "21978207", "PostTypeId": "2", "Body": "<p>Well <code>operator&lt;&lt;</code> is defined to return <code>std::ostream&amp;</code>:</p>\n<pre><code>std::ostream&amp; operator&lt;&lt;(std::ostream&amp; output, const ComplexNumber&amp; z)\n^^^^^^^^^^^^^\n</code></pre>\n<p>but you have no return statements, this is <a href=\"https://en.wikipedia.org/wiki/Undefined_behavior\" rel=\"nofollow\">undefined behavior</a> and means you can not rely on the behavior of the program, the results are unpredictable. It looks like you should have:</p>\n<pre><code>return output ;\n</code></pre>\n<p>at the end of the function. We can see this is undefined behavior from the draft C++ standard section <code>6.6.3</code> The return statement paragraph 2 which says:</p>\n<blockquote>\n<p id=\"so_21978188_21978207_0\">[...] Flowing off the end of a function is equivalent to a return with no value; this results in undefined behavior in a value-returning function. [...]</p>\n</blockquote>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2014-02-24T03:12:38.060", "Score": "1", "CreationDate": "2014-02-24T03:06:29.940", "ParentId": "21978188", "CommentCount": "0", "LastEditDate": "2014-02-24T03:12:38.060", "OwnerUserId": "1708801"}});