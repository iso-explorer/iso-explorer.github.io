post_cb({"19066059": {"ParentId": "19065836", "CommentCount": "2", "Body": "<p>I can't see any mystery here. The code analyser is likely checking your code against the MISRA standard, not the C++ 98 standard.</p>\n<p>MISRA is a set of C/C++ coding standards for the automotive environment, which imposes further restrictions on what is supposedly legal/permitted by the language standard. </p>\n<p>You ARE overriding with a pure virtual function a non pure virtual function, and apparently this is ok with the compiler but not with the MISRA rules.</p>\n<p>That is to say, your program will compile and execute fine, and will be compliant with the language standard, but it might not be accepted by a customer that requires code review and compliance with the MISRA standard.</p>\n", "OwnerUserId": "1823720", "PostTypeId": "2", "Id": "19066059", "Score": "5", "CreationDate": "2013-09-28T10:45:42.317", "LastActivityDate": "2013-09-28T10:45:42.317"}, "19065836": {"CommentCount": "7", "AcceptedAnswerId": "19066059", "PostTypeId": "1", "LastEditorUserId": "426305", "CreationDate": "2013-09-28T10:20:56.420", "LastActivityDate": "2013-09-28T10:50:29.897", "LastEditDate": "2013-09-28T10:50:29.897", "ViewCount": "396", "FavoriteCount": "2", "Title": "Pure virtual function overridding virtual function", "Id": "19065836", "Score": "9", "Body": "<p>Suppose following code is given.</p>\n<pre><code>class A\n{\npublic:\n   virtual void someMethod()\n   {\n      std::cout &lt;&lt; \"class A\" &lt;&lt; std::endl;\n   }\n};\n\nclass B : public A\n{\npublic:\n   ...\n   virtual void someMethod() = 0;\n   ...\n};\n</code></pre>\n<p>Class <code>B</code> overrides <code>someMethod</code> virtual method with <strong>pure</strong>-virtual method.\nThe purpose of doing this might be extension of existing class which is not allowed to modify in our case class <code>A</code>, but still having an abstract class <code>B</code> which has to be base class for some further classes.</p>\n<p>According to <strong>MISRA-C++ Rule 10-3-3</strong> : Code analyzer gives a warning : <em>Pure virtual function overrides a non pure virtual function .</em></p>\n<p>But I cannot find much details about the warning. What is the side effect of the above mentioned code ? What is the bad practice here ? </p>\n<hr>\n<p><strong>UPDATE</strong> : the standard is MISRA-C++ (C++98)</p>\n</hr>", "Tags": "<c++><inheritance><polymorphism><c++98><misra>", "OwnerUserId": "426305", "AnswerCount": "2"}, "19065961": {"ParentId": "19065836", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>I'd say your code is valid as per standard:</p>\n<p>\u00a7 10.4</p>\n<blockquote>\n<p id=\"so_19065836_19065961_0\">5 [ Note: An abstract class can be derived from a class that is not abstract, <strong>and a pure virtual function may override a virtual function which is not pure</strong>. \u2014end note ]</p>\n</blockquote>\n", "OwnerUserId": "951757", "LastEditorUserId": "951757", "LastEditDate": "2013-09-28T10:43:35.723", "Id": "19065961", "Score": "3", "CreationDate": "2013-09-28T10:33:52.830", "LastActivityDate": "2013-09-28T10:43:35.723"}, "bq_ids": {"n4140": {"so_19065836_19065961_0": {"section_id": 7022, "quality": 0.8235294117647058, "length": 14}}, "n3337": {"so_19065836_19065961_0": {"section_id": 6768, "quality": 0.8235294117647058, "length": 14}}, "n4659": {"so_19065836_19065961_0": {"section_id": 8519, "quality": 0.8235294117647058, "length": 14}}}});