post_cb({"39038867": {"CommentCount": "7", "AcceptedAnswerId": "39074984", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2016-08-19T12:16:33.177", "LastActivityDate": "2017-11-15T18:02:32.890", "LastEditDate": "2017-05-23T10:33:44.093", "ViewCount": "510", "FavoriteCount": "1", "Title": "String concatenation for include path", "Id": "39038867", "Score": "11", "Body": "<p>Is there a way to concatenate 2 strings literals to form an include path?</p>\n<p>Code stub:</p>\n<pre><code>#define INCLUDE_DIR \"/include\"\n#include INCLUDE_DIR \"/dummy.h\"\n</code></pre>\n<p>Looking at <a href=\"https://stackoverflow.com/questions/20524491/preprocessor-concatenation-for-include-path\">this question</a>, the answers point in a different direction (compiler command line). It is mentioned <a href=\"https://stackoverflow.com/a/20524959/2436175\">here</a> that it is seemingly not possible, but I wonder if the topic has been dug enough.</p>\n<p>(I do have an use case in which this is relevant, please focus your answers/comments on this question only.)</p>\n", "Tags": "<c++><c><include><c-preprocessor>", "OwnerUserId": "2436175", "AnswerCount": "3"}, "39039356": {"ParentId": "39038867", "PostTypeId": "2", "CommentCount": "7", "Body": "<p>I'm not sure that this is exactly what you want but anyway.</p>\n<pre><code>#define DECORATE(x)             &lt;x&gt;\n#define MAKE_PATH(root, file)   DECORATE(root file)\n\n#define SYS_DIR(file)           MAKE_PATH(sys/, file)\n#define ARPA_DIR(file)          MAKE_PATH(arpa/, file)\n\n\n#include SYS_DIR(types.h)\n#include SYS_DIR(socket.h)\n#include ARPA_DIR(inet.h)\n</code></pre>\n<p>Note, that generated filenames contain extra space - <code>&lt;sys/ types.h&gt;</code>, so it may not be a cross-compiler solution. But at least for me it works on Linux host on GCC 4.8 / 4.9.</p>\n<p>P.S. It would be nice if someone could check this snippet with another compilers, e.g. MSVC.</p>\n", "OwnerUserId": "2878070", "LastEditorUserId": "2878070", "LastEditDate": "2016-08-19T13:57:29.153", "Id": "39039356", "Score": "0", "CreationDate": "2016-08-19T12:43:22.177", "LastActivityDate": "2016-08-19T13:57:29.153"}, "39074984": {"ParentId": "39038867", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>It really seems this is not possible. I will report here the relevant section from <a href=\"https://stackoverflow.com/questions/20524491/preprocessor-concatenation-for-include-path/20524959#20524959\">Eric Postpischil's answer</a> (he doesn't seem to be active anymore).</p>\n<blockquote>\n<p id=\"so_39038867_39074984_0\">The compiler will do macro replacement on an <code>#include</code> line (per C\n  2011 [N1570] 6.10.2 4), but the semantics are not fully defined and\n  cannot be used to concatenate file path components without additional\n  assistance from the C implementation. So about all this allows you to\n  do is some simple substitution that provides a complete path, such as:</p>\n<pre><code>#define MyPath \"../../path/to/my/file.h\"\n#include MyPath\n</code></pre>\n</blockquote>\n<p><a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf#page=182\" rel=\"nofollow noreferrer\">Link to documentation</a>. In particular this section doesn't leave much hope for portable solutions:</p>\n<blockquote>\n<p id=\"so_39038867_39074984_1\">The  method  by  which  a  sequence  of  preprocessing  tokens between\n  a <code>&lt;</code> and a <code>&gt;</code> preprocessing token pair or a pair of <code>\"</code> characters\n  is combined into a single header name preprocessing token is\n  implementation-defined.</p>\n</blockquote>\n<hr/>\n<p>For completeness, maybe something can be tried using <a href=\"https://stackoverflow.com/a/27830271/2436175\">https://stackoverflow.com/a/27830271/2436175</a>. I'll investigate that when I have a moment...</p>\n", "OwnerUserId": "2436175", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T10:33:44.093", "Id": "39074984", "Score": "0", "CreationDate": "2016-08-22T08:47:20.997", "LastActivityDate": "2016-08-24T08:21:39.860"}, "bq_ids": {"n4140": {"so_39038867_39074984_1": {"section_id": 506, "quality": 0.8947368421052632, "length": 17}}, "n3337": {"so_39038867_39074984_1": {"section_id": 497, "quality": 0.8947368421052632, "length": 17}}, "n4659": {"so_39038867_39074984_1": {"section_id": 527, "quality": 0.8947368421052632, "length": 17}}}, "47314344": {"ParentId": "39038867", "CommentCount": "1", "Body": "<p>Simply avoid the space and the concatenation (##) and use the &lt; &gt; it makes all simplier:</p>\n<pre><code>#include &lt;QtCore/QtGlobal&gt;\n\n#define QT_VERSION_PREFIX QT_VERSION_MAJOR.QT_VERSION_MINOR.QT_VERSION_PATCH\n\n#define _CONCATE(a, c) &lt;a/QT_VERSION_PREFIX/a/private/c&gt;\n#include _CONCATE(QtWidgets, qwidgettextcontrol_p.h)\n</code></pre>\n", "OwnerUserId": "8946992", "PostTypeId": "2", "Id": "47314344", "Score": "0", "CreationDate": "2017-11-15T18:02:32.890", "LastActivityDate": "2017-11-15T18:02:32.890"}});