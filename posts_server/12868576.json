post_cb({"12868591": {"ParentId": "12868576", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>The program is ill-formed for the reason you stated. The compiler is not required a diagnostics, but I don't see a point in discussing reasons for a crash in an ill-formed program.</p>\n<p><em>Still, let's do it:</em></p>\n<p>The first example probably doesn't crash because <code>FooBar</code>'s behavior doesn't affect the run of <code>main</code>. The method is called, it does something, and that's it.</p>\n<p>In the second example, you attempt to return a <code>Foo</code>. <code>FooBar</code> returns the version of <code>Foo</code> defined in <code>2.cpp</code>. <code>main</code> appears in <code>1.cpp</code> so it expects the version of <code>Foo</code> defined in <code>1.cpp</code>, which is a completely different version - different members, sizes. You most likely get a corruption on the destructor. (just a guess)</p>\n<h3>EDIT: this does break the one definition rule:</h3>\n<h3>3.2 One definition rule [basic.def.odr]</h3>\n<blockquote>\n<p id=\"so_12868576_12868591_0\">6) There can be more than one definition of a class type [...] in a program provided that each definition\n  appears in a different translation unit, and provided the definitions satisfy the following requirements. [...]</p>\n<ul>\n<li>each definition of D shall consist of the same sequence of tokens;</li>\n</ul>\n<p id=\"so_12868576_12868591_1\">[...]</p>\n</blockquote>\n", "OwnerUserId": "673730", "LastEditorUserId": "673730", "LastEditDate": "2012-10-13T00:20:14.753", "Id": "12868591", "Score": "1", "CreationDate": "2012-10-12T23:51:24.667", "LastActivityDate": "2012-10-13T00:20:14.753"}, "12868739": {"ParentId": "12868576", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Here is how compiler/linker work:</p>\n<ol>\n<li><p>Compiler translates cpp file having the headers that are provided. It generates an .obj file. In your case the o.bj file will have references to data-struct <code>Foo</code>. And there will be no any other details.</p></li>\n<li><p>Linker links .obj files together. It compares only the string names. In your obj files your have the same <code>Foo</code>. Names match. For the linker this is the same thing.</p></li>\n<li><p>After that you start your program. Most likely it will crash. To be more specific it will show undefined behavior. It can enter infinite loop, show strange messages, etc.</p></li>\n</ol>\n<p>It is your responsibility to provide identical headers or definitions in the cpp files into translations of every cpp file. Existing software tools cannot check this for you. This is how it works.</p>\n", "OwnerUserId": "1459996", "LastEditorUserId": "1459996", "LastEditDate": "2012-10-13T00:17:38.727", "Id": "12868739", "Score": "0", "CreationDate": "2012-10-13T00:12:16.183", "LastActivityDate": "2012-10-13T00:17:38.727"}, "bq_ids": {"n4140": {"so_12868576_12868591_0": {"section_id": 7043, "quality": 1.0, "length": 20}}, "n3337": {"so_12868576_12868591_0": {"section_id": 6788, "quality": 1.0, "length": 20}}, "n4659": {"so_12868576_12868591_0": {"section_id": 8540, "quality": 1.0, "length": 20}}}, "12868576": {"CommentCount": "0", "ViewCount": "394", "CreationDate": "2012-10-12T23:49:13.820", "LastActivityDate": "2012-10-13T00:20:14.753", "Title": "Class defined in different translation units", "AcceptedAnswerId": "12868591", "PostTypeId": "1", "Id": "12868576", "Score": "0", "Body": "<p>As I have understood, a class can be defined in multiple translation units aslong they're identical. With that in mind, consider the following examples:</p>\n<pre><code> //1.cpp\n\nclass Foo{\n public:\n  int i;\n};\n\n\nvoid FooBar();\n\nvoid BarFoo(){\n  Foo f;\n}\n\n\nint main(){\n FooBar();\n BarFoo();\n}\n\n//2.cpp\n\nclass Foo{\n public:\n  std::string s;\n};\n\nvoid FooBar(){\n  Foo f;\n}\n</code></pre>\n<p>This compiles and I don't get a crash.</p>\n<p>If I do the following changes:</p>\n<pre><code>//1.cpp\n Foo FooBar();\n//2.cpp\n Foo FooBar(){\n   Foo f;\n   return f;\n }\n</code></pre>\n<p>I get a crash. Why does one result in a crash and the other doesn't. Also, am I not violating ODR in the first example? If I am, why does it compile ok?</p>\n", "Tags": "<c++>", "OwnerUserId": "1047423", "AnswerCount": "2"}});