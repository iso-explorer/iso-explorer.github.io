post_cb({"17780494": {"ParentId": "17780420", "CommentCount": "0", "Body": "<p>Quoting from <a href=\"http://en.wikipedia.org/wiki/Copy_constructor\" rel=\"nofollow\">this</a> Wikipedia article(emphasis mine):</p>\n<blockquote>\n<p id=\"so_17780420_17780494_0\">The following are <strong>invalid copy constructors</strong> (Reason - <strong>copy_from_me is\n  not passed as reference</strong>) :</p>\n<p id=\"so_17780420_17780494_1\">X(X copy_from_me);<br/>\n  X(const X copy_from_me);</p>\n<p id=\"so_17780420_17780494_2\">because the call to those constructors would require a copy as well,\n  which would result in an <strong>infinitely recursive call</strong>.</p>\n</blockquote>\n", "OwnerUserId": "1619294", "PostTypeId": "2", "Id": "17780494", "Score": "3", "CreationDate": "2013-07-22T05:27:26.750", "LastActivityDate": "2013-07-22T05:27:26.750"}, "17780467": {"ParentId": "17780420", "PostTypeId": "2", "CommentCount": "7", "Body": "<p>Have you actually tried to compile this code?</p>\n<pre><code>Error   1   error C2652: 'Foo' : illegal copy constructor: first parameter must not be a 'Foo'  main.cpp    5   1   NativeConsoleSketchbook\n</code></pre>\n<h3>C++11 standard, 12.8.6:</h3>\n<blockquote>\n<p id=\"so_17780420_17780467_0\">A declaration of a constructor for a class X is ill-formed if its first parameter is of type (optionally cv-qualified)\n  X and either there are no other parameters or else all other parameters have default arguments.</p>\n</blockquote>\n", "OwnerUserId": "453803", "LastEditorUserId": "453803", "LastEditDate": "2013-07-22T05:31:40.930", "Id": "17780467", "Score": "11", "CreationDate": "2013-07-22T05:24:51.360", "LastActivityDate": "2013-07-22T05:31:40.930"}, "17780503": {"ParentId": "17780420", "PostTypeId": "2", "CommentCount": "0", "Body": "<p><code>Foo(Foo x)</code> will never be called since the code will try to interpret it as a copy constructor and fail at it (compile error).</p>\n<p>Non-type methods (such as constructors, destructors etc.) should follow the syntax for each case.</p>\n", "OwnerUserId": "840678", "LastEditorUserId": "840678", "LastEditDate": "2014-05-19T20:14:25.657", "Id": "17780503", "Score": "2", "CreationDate": "2013-07-22T05:28:26.707", "LastActivityDate": "2014-05-19T20:14:25.657"}, "bq_ids": {"n4140": {"so_17780420_17780467_0": {"section_id": 455, "quality": 1.0, "length": 21}}, "n3337": {"so_17780420_17780467_0": {"section_id": 446, "quality": 1.0, "length": 21}}, "n4659": {"so_17780420_17780467_0": {"section_id": 478, "quality": 1.0, "length": 21}}}, "17780420": {"CommentCount": "5", "AcceptedAnswerId": "17780467", "CreationDate": "2013-07-22T05:20:02.183", "LastActivityDate": "2014-05-19T20:14:25.657", "PostTypeId": "1", "ViewCount": "207", "FavoriteCount": "0", "Title": "Will Foo(Foo x){ } ever be called in C++?", "Id": "17780420", "Score": "1", "Body": "<p>I have an query regarding C++ syntax/construct : in what scenario can the following Foo(Foo x){} be called?\nI understand that it wont be called for initialization like, as they will call copy constructor  </p>\n<pre><code>Foo a;\nFoo x = a;\nor \nFoo x(a);\n</code></pre>\n<p>Not for the conversion of type as the argument passed to it is of same type as class</p>\n<p>Can't think of scenario on which Foo(Foo x){} be called, or it will be always a dead code.</p>\n<pre><code>class Foo { \n  public :\n    Foo(Foo x){  // notice it is not not a Copy constructor!!, i intented it to make like ordinary ctor taking same class object\n    }\n    Foo(int x) : m_data(x){}\nprivate :\n  int m_data;\n};\n</code></pre>\n", "Tags": "<c++>", "OwnerUserId": "690639", "AnswerCount": "3"}});