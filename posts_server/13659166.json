post_cb({"13659189": {"ParentId": "13659166", "CommentCount": "1", "Body": "<p>There is a limit on how long a <code>std::string</code> may be. <code>std::length_error</code> is thrown when that length is exceeded. The actual limit depends on your compiler's implementation of the Standard Template Library.</p>\n<p>From the C++ standard (19.2.4):</p>\n<blockquote>\n<p id=\"so_13659166_13659189_0\">The class <code>length_error</code> defines the type of objects thrown as\n  exceptions to report an attempt to produce an object whose length\n  exceeds its maximum allowable size.</p>\n</blockquote>\n<p>You can check the maximum allowable string size by reading the value of <code>string::max_size</code>.</p>\n", "OwnerUserId": "17027", "PostTypeId": "2", "Id": "13659189", "Score": "0", "CreationDate": "2012-12-01T11:53:27.070", "LastActivityDate": "2012-12-01T11:53:27.070"}, "13659166": {"CommentCount": "4", "ViewCount": "58", "PostTypeId": "1", "LastEditorUserId": "1323785", "CreationDate": "2012-12-01T11:50:34.177", "LastActivityDate": "2012-12-01T13:03:07.963", "Title": "Strange spontaneous run crash", "AcceptedAnswerId": "13659189", "LastEditDate": "2012-12-01T13:03:07.963", "Id": "13659166", "Score": "-1", "Body": "<p>I'm getting some strange errors and crashes from my project atm.</p>\n<p>It started out with crashes where I got this message:</p>\n<pre><code>terminate called after throwing an instance of 'std::length_error'\n  what():  basic_string::_S_create\n</code></pre>\n<p>So I started adding some <strong>cerr &lt;&lt; \"1\"</strong> etc to try and find at what line it crashed.</p>\n<p>Now I've found the crash-line, allthough it doesn't print out the same error code. In fact, it doesn't say anything, just crash.</p>\n<p>The line that causes the crash is this:</p>\n<pre><code>Item* tempItem = new Item(name, id2, desc);\n</code></pre>\n<p>Item.h constructor looks like this:</p>\n<pre><code>Item(std::string name_, int itemId_, std::string description_ = \"\") \n: name(name_), itemId(itemId_), description(description_){}\n</code></pre>\n<p>and the variables I'm sending in looks like this:</p>\n<pre><code>string name = \"Frying pan\";\nint id2 = 1;\nstring desc = \"It's all rusty\";\n</code></pre>\n<p>any ideas? (If you need more code just tell me what you need and I'll edit it in)</p>\n<p><strong>EDIT</strong>\nsome updated info:</p>\n<pre><code>name.max_size() = 1073741820\nname.length() = 9\n\ndesc.max_size() = 1073741820\ndesc.length() = 14\n</code></pre>\n<p><strong>EDIT2</strong>\nI've now tried creating the Item-objects with hard coding the variable values right before construction as such:</p>\n<pre><code>name = \"itemName\";\ndesc = \"itemDesc\";\nid2 = 2;\n</code></pre>\n<p>and it STILL crashes right at the line:</p>\n<pre><code>Item* tempItem = new Item(name, id2, desc);\n</code></pre>\n", "Tags": "<c++><debugging><crash>", "OwnerUserId": "1323785", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_13659166_13659189_0": {"section_id": 2541, "quality": 0.9473684210526315, "length": 18}}, "n3337": {"so_13659166_13659189_0": {"section_id": 2506, "quality": 0.9473684210526315, "length": 18}}, "n4659": {"so_13659166_13659189_0": {"section_id": 3277, "quality": 0.9473684210526315, "length": 18}}}});