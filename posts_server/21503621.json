post_cb({"bq_ids": {"n4140": {"so_21503621_21503621_0": {"length": 6, "quality": 0.5454545454545454, "section_id": 5485}}, "n4659": {"so_21503621_21503621_0": {"length": 6, "quality": 0.5454545454545454, "section_id": 6920}}}, "21503621": {"ViewCount": "341", "LastEditDate": "2014-02-01T21:07:59.133", "AcceptedAnswerId": "21503686", "Title": "Error in \"The C++ Programming Language\" Section \"23.4.7 Friends\"", "CreationDate": "2014-02-01T21:01:36.840", "LastActivityDate": "2014-02-01T21:08:08.667", "CommentCount": "0", "Body": "<p>I have been trying to get the following code work from the book \"The C++ Programming Language (4th Edition)\" section \"23.4.7 Friends\" but could not succeed.</p>\n<pre><code>template&lt;typename T&gt; class Matrix;\n\ntemplate&lt;typename T&gt;\nclass Vector {\n    T v[4];\npublic:\n    friend Vector operator*&lt;&gt;(const Matrix&lt;T&gt;&amp;, const Vector&amp;); /* line 7 */\n    // ...\n};\n\ntemplate&lt;typename T&gt;\nclass Matrix {\n    Vector&lt;T&gt; v[4];\npublic:\n    friend Vector&lt;T&gt; operator*&lt;&gt;(const Matrix&amp;, const Vector&lt;T&gt;&amp;); /* line 14 */\n    // ...\n};\n\ntemplate&lt;typename T&gt;\nVector&lt;T&gt; operator*(const Matrix&lt;T&gt;&amp; m, const Vector&lt;T&gt;&amp; v)\n{\n    Vector&lt;T&gt; r;\n    // ... m.v[i] and v.v[i] for direct access to elements ...\n    return r;\n}\n</code></pre>\n<p>Here is a sample usage for the above API:</p>\n<pre><code>int main() {\n    Matrix&lt;int&gt; lhs;\n    Vector&lt;int&gt; rhs;\n    Vector&lt;int&gt; r = lhs * rhs;\n\n    return 0;\n}\n</code></pre>\n<p>g++ with version:</p>\n<pre><code>g++ (Ubuntu 4.4.3-4ubuntu5) 4.4.3\n</code></pre>\n<p>gave the following output:</p>\n<pre><code>test.cpp:7: error: declaration of \u2018operator*\u2019 as non-function\ntest.cpp:7: error: expected \u2018;\u2019 before \u2018&lt;\u2019 token\ntest.cpp:14: error: declaration of \u2018operator*\u2019 as non-function\ntest.cpp:14: error: expected \u2018;\u2019 before \u2018&lt;\u2019 token\n</code></pre>\n<p>and clang with version:</p>\n<pre><code>Apple LLVM version 5.0 (clang-500.2.79) (based on LLVM 3.3svn)\nTarget: x86_64-apple-darwin13.0.0\nThread model: posix\n</code></pre>\n<p>gave the following output:</p>\n<pre><code>test2.cpp:7:19: error: friends can only be classes or functions\n    friend Vector operator*&lt;&gt;(const Matrix&lt;T&gt;&amp;, const Vector&amp;);\n                  ^\ntest2.cpp:7:28: error: expected ';' at end of declaration list\n    friend Vector operator*&lt;&gt;(const Matrix&lt;T&gt;&amp;, const Vector&amp;);\n                           ^\n                       ;\ntest2.cpp:14:22: error: friends can only be classes or functions\n    friend Vector&lt;T&gt; operator*&lt;&gt;(const Matrix&amp;, const Vector&lt;T&gt;&amp;);\n                     ^\ntest2.cpp:14:31: error: expected ';' at end of declaration list\n    friend Vector&lt;T&gt; operator*&lt;&gt;(const Matrix&amp;, const Vector&lt;T&gt;&amp;);\n                              ^\n                              ;\n4 errors generated.\n</code></pre>\n<p>The book says:</p>\n<blockquote>\n<p id=\"so_21503621_21503621_0\">The &lt;&gt; after the name of the firend function is needed to make clear\n  that the friend is a template function.</p>\n</blockquote>\n<p>I could not spot the problem in the code, can you?</p>\n", "PostTypeId": "1", "LastEditorUserId": "92318", "Id": "21503621", "Score": "0", "OwnerUserId": "92318", "Tags": "<c++><templates><operator-overloading><friend>", "AnswerCount": "1"}, "21503686": {"Id": "21503686", "PostTypeId": "2", "Body": "<p>Yes, it's a bug in the book.</p>\n<p>The function template must already be visible at that point, otherwise <a href=\"http://coliru.stacked-crooked.com/a/3e3a0d3169e113a4\" rel=\"nofollow\">it cannot be instantiated to produce the overload you're trying to befriend</a>.</p>\n<p>So, moving the operator definitions above that of <code>Vector</code> (which in itself requires that we provide a forward declaration) <a href=\"http://coliru.stacked-crooked.com/a/adca861130b8ba7d\" rel=\"nofollow\">solves the problem</a>.</p>\n", "Score": "2", "LastActivityDate": "2014-02-01T21:08:08.667", "CreationDate": "2014-02-01T21:08:08.667", "ParentId": "21503621", "CommentCount": "0", "OwnerUserId": "560648"}});