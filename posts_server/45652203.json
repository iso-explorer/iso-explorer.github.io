post_cb({"45652215": {"ParentId": "45652203", "CommentCount": "5", "Body": "<p>In C++, you are allowed to redeclare a variable in a nested scope. Within that scope, the redeclared variable takes precedence.</p>\n<p>See  [basic.scope.hiding] for a standard reference: </p>\n<blockquote>\n<p id=\"so_45652203_45652215_0\">A name can be hidden by an explicit declaration of that same name in a nested declarative region or derived\n  class </p>\n</blockquote>\n", "OwnerUserId": "27678", "PostTypeId": "2", "Id": "45652215", "Score": "5", "CreationDate": "2017-08-12T15:56:24.213", "LastActivityDate": "2017-08-12T15:56:24.213"}, "45652221": {"ParentId": "45652203", "CommentCount": "6", "Body": "<p>These are two seperate variable because they are declared in a different scope. The scope of a variable is the 'area' of code in which it's visible.</p>\n<p>The outer <code>s</code> is overwritten with <code>s</code> in inner body.</p>\n", "OwnerUserId": "8254699", "PostTypeId": "2", "Id": "45652221", "Score": "1", "CreationDate": "2017-08-12T15:56:53.213", "LastActivityDate": "2017-08-12T15:56:53.213"}, "bq_ids": {"n4140": {"so_45652203_45652215_0": {"section_id": 7078, "quality": 1.0, "length": 12}}, "n3337": {"so_45652203_45652215_0": {"section_id": 6822, "quality": 1.0, "length": 12}}, "n4659": {"so_45652203_45652215_0": {"section_id": 8579, "quality": 1.0, "length": 12}}}, "45652203": {"CommentCount": "1", "ViewCount": "41", "PostTypeId": "1", "LastEditorUserId": "8455374", "CreationDate": "2017-08-12T15:55:45.613", "LastActivityDate": "2017-08-12T15:56:53.213", "Title": "Why does my C++ code compile even with doubly declared variable?", "AcceptedAnswerId": "45652215", "LastEditDate": "2017-08-12T15:56:52.977", "Id": "45652203", "Score": "1", "Body": "<p>I am trying to learn C++ from the book Accelerated C++. At the end of Chapter 1 there is an exercise that tripped me. Essentially, I am wondering why the following code compiles and runs perfectly:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nint main() {\n   {\n        const std::string s  = \"a string\";\n        std::cout &lt;&lt; s &lt;&lt; std::endl;\n        {\n            std::cout &lt;&lt; s &lt;&lt; std::endl;\n            const std::string s = \"another string\";\n            std::cout &lt;&lt; s &lt;&lt; std::endl;\n        };\n    }\n    return 0;\n}\n</code></pre>\n<p>It seems to me that I am doubly declaring the string s, and from my understanding this is illegal. Could you help me understand this better? Thanks. The output this produces is:</p>\n<pre><code>a string\na string\nanother string\n</code></pre>\n", "Tags": "<c++>", "OwnerUserId": "8455374", "AnswerCount": "2"}});