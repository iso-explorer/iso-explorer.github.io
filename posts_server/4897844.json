post_cb({"6935286": {"ParentId": "4897844", "CommentCount": "3", "Body": "<p><a href=\"http://msdn.microsoft.com/en-us/library/tf4dy80a.aspx\">http://msdn.microsoft.com/en-us/library/tf4dy80a.aspx</a></p>\n<p>\"In Visual C++4.2, the Standard C++ header files contained a typedef that equated bool with int. In Visual C++ 5.0 and later, bool is implemented as a built-in type with a size of 1 byte. That means that for Visual C++ 4.2, a call of sizeof(bool) yields 4, while in Visual C++ 5.0 and later, the same call yields 1. This can cause memory corruption problems if you have defined structure members of type bool in Visual C++ 4.2 and are mixing object files (OBJ) and/or DLLs built with the 4.2 and 5.0 or later compilers.\"</p>\n", "OwnerUserId": "190293", "PostTypeId": "2", "Id": "6935286", "Score": "14", "CreationDate": "2011-08-04T01:50:49.123", "LastActivityDate": "2011-08-04T01:50:49.123"}, "4897858": {"ParentId": "4897844", "CommentCount": "3", "Body": "<p>It's implementation defined. Only <code>sizeof(char)</code> is <code>1</code> by the standard.</p>\n", "OwnerUserId": "300805", "PostTypeId": "2", "Id": "4897858", "Score": "11", "CreationDate": "2011-02-04T12:16:49.663", "LastActivityDate": "2011-02-04T12:16:49.663"}, "4897844": {"CommentCount": "0", "AcceptedAnswerId": "4897859", "PostTypeId": "1", "LastEditorUserId": "1350209", "CreationDate": "2011-02-04T12:15:30.123", "LastActivityDate": "2013-05-09T22:12:02.903", "LastEditDate": "2013-05-09T22:12:02.903", "ViewCount": "34900", "FavoriteCount": "10", "Title": "Is sizeof(bool) defined?", "Id": "4897844", "Score": "79", "Body": "<p>I can't find an answer in the standard documentation. Is <code>sizeof(bool)</code> always 1-byte, or is it implementation defined?</p>\n", "Tags": "<c++><sizeof><boolean>", "OwnerUserId": "547231", "AnswerCount": "4"}, "4897887": {"ParentId": "4897844", "CommentCount": "0", "Body": "<p>See 5.3.3 paragraph 1 :</p>\n<blockquote>\n<p id=\"so_4897844_4897887_0\">[Note: in particular, sizeof(bool) and\n  sizeof(wchar_t) are\n  implementation-defined.69) ]</p>\n</blockquote>\n", "OwnerUserId": "476681", "PostTypeId": "2", "Id": "4897887", "Score": "3", "CreationDate": "2011-02-04T12:19:45.527", "LastActivityDate": "2011-02-04T12:19:45.527"}, "4897859": {"ParentId": "4897844", "CommentCount": "6", "Body": "<p>Yes, it's implementation defined, and the standard puts notable emphasis on making that clear.</p>\n<p>\u00a75.3.3/1, abridged:</p>\n<blockquote>\n<p id=\"so_4897844_4897859_0\"><code>sizeof(char)</code>, <code>sizeof(signed char)</code> and <code>sizeof(unsigned char)</code> are 1; the result of <code>sizeof</code> applied to any other fundamental type is implementation-defined. [Note: in particular, <code>sizeof(bool)</code> and <code>sizeof(wchar_t)</code> are implementation-defined.<sup>69)</sup>]</p>\n</blockquote>\n<p>Footnote 69):</p>\n<blockquote>\n<p id=\"so_4897844_4897859_1\"><code>sizeof(bool)</code> is not required to be 1.</p>\n</blockquote>\n", "OwnerUserId": "87234", "PostTypeId": "2", "Id": "4897859", "Score": "123", "CreationDate": "2011-02-04T12:16:52.913", "LastActivityDate": "2011-02-04T12:16:52.913"}, "bq_ids": {"n4140": {"so_4897844_4897859_0": {"section_id": 6076, "quality": 0.8235294117647058, "length": 14}}, "n3337": {"so_4897844_4897859_0": {"section_id": 5844, "quality": 0.8235294117647058, "length": 14}}, "n4659": {"so_4897844_4897859_0": {"section_id": 7572, "quality": 0.8235294117647058, "length": 14}}}});