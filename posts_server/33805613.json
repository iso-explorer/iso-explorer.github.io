post_cb({"33805810": {"ParentId": "33805613", "CommentCount": "1", "Body": "<p>The only thing I can find in the standard that calls out what they should refers to comes from [iterator.traits]</p>\n<blockquote>\n<p id=\"so_33805613_33805810_0\">[...]In addition, the types</p>\n<pre><code>iterator_traits&lt;Iterator&gt;::reference\niterator_traits&lt;Iterator&gt;::pointer\n</code></pre>\n<p id=\"so_33805613_33805810_1\">shall be defined as the iterator\u2019s reference and pointer types, that is, for an iterator object <code>a</code>, the same type as the type of <code>*a</code> and <code>a-&gt;</code>, respectively.</p>\n</blockquote>\n", "OwnerUserId": "4342498", "PostTypeId": "2", "Id": "33805810", "Score": "2", "CreationDate": "2015-11-19T13:51:34.363", "LastActivityDate": "2015-11-19T13:51:34.363"}, "33805613": {"CommentCount": "0", "ViewCount": "57", "CreationDate": "2015-11-19T13:42:29.837", "LastActivityDate": "2015-11-19T13:51:34.363", "Title": "How to define pointer for a custom input iterator", "AcceptedAnswerId": "33805810", "PostTypeId": "1", "Id": "33805613", "Score": "2", "Body": "<p>I am writing a custom input iterator that adapts an underlying sequence and yields transformed values (I know about <a href=\"http://www.boost.org/doc/libs/release/libs/iterator/doc/transform_iterator.html\" rel=\"nofollow\"><code>boost::transform_iterator</code></a>, but this is special). </p>\n<p>I am unsure how to define <code>pointer</code>-type for this iterator. Since the iterator generates values on the fly, <code>reference</code> is defined as an alias for <code>value_type</code> (which is allowed for input iterators, <code>reference</code> must merely be convertible to <code>value_type</code>). My intuition is that it would still just be <code>value_type *</code>, and I can't really think of anything else that would make sense.</p>\n<p>However, I haven't found any information about the context in which <code>pointer</code> is expected to be used, and hence don't know what requirements are placed on it, and the documentation of <code>boost::transform_iterator</code> (which usually offers useful advice) is silent on this issue.</p>\n<p>So my question is, is it generally safe to just define <code>pointer</code> as <code>value_type *</code>? If not, what are the alternatives?</p>\n", "Tags": "<c++><pointers><iterator>", "OwnerUserId": "160206", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_33805613_33805810_1": {"section_id": 5583, "quality": 1.0, "length": 11}}, "n3337": {"so_33805613_33805810_1": {"section_id": 5365, "quality": 1.0, "length": 11}}, "n4659": {"so_33805613_33805810_1": {"section_id": 7030, "quality": 1.0, "length": 11}}}});