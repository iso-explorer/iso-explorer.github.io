post_cb({"40569809": {"ParentId": "40563390", "PostTypeId": "2", "CommentCount": "0", "Body": "<p><a href=\"https://doc.qt.io/qt-5/qstring.html#details\" rel=\"nofollow noreferrer\"><code>QString</code></a> has unicode support. So, there is nothing wrong with having<sup>*</sup>:</p>\n<pre><code>QString m = \"\u0633\u0644\u0627\u0645 \u0639\u0644\u06cc\u06a9\u0645\";\n</code></pre>\n<p>Most modern compilers use UTF-8 to encode this <em>ordinary string literal</em> (You can enforce this in C++11 by using <code>u8\"\u0633\u0644\u0627\u0645 \u0639\u0644\u064a\u0643\u0645\"</code>, see <a href=\"http://en.cppreference.com/w/cpp/language/string_literal\" rel=\"nofollow noreferrer\">here</a>). The string literal has the type of an array of <code>char</code>s. When <code>QString</code> <a href=\"https://doc.qt.io/qt-5/qstring.html#initializing-a-string\" rel=\"nofollow noreferrer\">is initialized from a <code>const char*</code></a>, it expects data to be encoded in UTF-8. And everything works as expected.</p>\n<p>All input controls and text drawing methods in Qt can take such a string and display it without any problems. See <a href=\"https://doc.qt.io/qt-5/internationalization.html#languages-and-writing-systems\" rel=\"nofollow noreferrer\">here</a> for a list of supported languages.</p>\n<p>As for the problem you are having writing this string to a file, You just need to set the encoding of data you are writing to a codec that can encode these international characters (such as UTF-8).</p>\n<p>From the <a href=\"https://doc.qt.io/qt-5/qtextstream.html#operator-lt-lt-12\" rel=\"nofollow noreferrer\">docs</a>, When using <code>QTextStream::operator&lt;&lt;(const QString&amp; string)</code>, The string is encoded using the <strong>assigned codec</strong> before it is written to the stream.</p>\n<p>The problem you have is that you are using the <code>operator&lt;&lt;</code> before assigning. You should <code>setCodec</code> <strong>before</strong> writing. your code should look something like this:</p>\n<pre><code>void stWrite(QString Filename,QString stringtext){\n    QFile mFile(Filename);\n\n    if(!mFile.open(QIODevice::WriteOnly | QIODevice::Append |QIODevice::Text))\n    {\n        QMessageBox message_file_Write;\n        message_file_Write.warning(0,\"Open Error\"\n                                   ,\"could not to open file for Writing\");\n        return;\n    }\n    QTextStream out(&amp;mFile);\n    out.setCodec(\"UTF-8\");\n    out &lt;&lt; stringtext &lt;&lt; endl;\n\n    mFile.flush();\n    mFile.close();\n}\n</code></pre>\n<hr>\n<p><sup>*</sup> In <a href=\"http://en.cppreference.com/w/cpp/language/translation_phases\" rel=\"nofollow noreferrer\">translation phase 1</a>, Any source file character not in the <em>basic character set</em> is replaced by the <em>universal-character-name</em> that designates the character,The <em>basic character set</em> is defined as follows:</p>\n<blockquote>\n<p id=\"so_40563390_40569809_0\">N4140 \u00a72.3 [lex.charset]/1</p>\n<p id=\"so_40563390_40569809_1\">The basic source character set consists of 96 characters: the space\n  character, the control characters representing horizontal tab, vertical tab, form feed, and new-line, plus the following 91 graphical characters:</p>\n<p id=\"so_40563390_40569809_2\">a b c d e f g h i j k l m n o p q r s t u v w x y z</p>\n<p id=\"so_40563390_40569809_3\">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p>\n<p id=\"so_40563390_40569809_4\">0 1 2 3 4 5 6 7 8 9</p>\n<p id=\"so_40563390_40569809_5\">_ { } [ ] # ( ) &lt; &gt; % : ; . ? * + - / ^ &amp; | ~ ! = , \\ \" \u2019</p>\n</blockquote>\n<p>This means that a string like:</p>\n<pre><code>QString m = \"\u0633\u0644\u0627\u0645 \u0639\u0644\u064a\u0643\u0645\";\n</code></pre>\n<p>Will be translated to something like:</p>\n<pre><code>QString m = \"\\u0633\\u0644\\u0627\\u0645\\u0020\\u0639\\u0644\\u064a\\u0643\\u0645\";\n</code></pre>\n<p>Assuming that the source file is encoded in an encoding that supports storing such characters such as UTF-8.</p>\n</hr>", "OwnerUserId": "2666212", "LastEditorUserId": "2666212", "LastEditDate": "2017-01-03T20:47:27.873", "Id": "40569809", "Score": "1", "CreationDate": "2016-11-13T02:07:36.183", "LastActivityDate": "2017-01-03T20:47:27.873"}, "40563390": {"CommentCount": "10", "AcceptedAnswerId": "40569809", "PostTypeId": "1", "LastEditorUserId": "2666212", "CreationDate": "2016-11-12T13:34:41.253", "LastActivityDate": "2017-01-03T20:47:27.873", "LastEditDate": "2016-11-13T18:22:02.720", "ViewCount": "135", "FavoriteCount": "2", "Title": "How can I use languages (like arabic or chinese) in a QString?", "Id": "40563390", "Score": "2", "Body": "<p>How can I use languages (like arabic or chinese) in a <code>QString</code>?</p>\n<p>I am creating a <code>QString</code>:</p>\n<pre><code>QString m = \"\u0633\u0644\u0627\u0645 \u0639\u0644\u06cc\u06a9\u0645\";\n</code></pre>\n<p>and then I am saving it into a file using:</p>\n<pre><code>void stWrite(QString Filename,QString stringtext){\n    QFile mFile(Filename);\n\n    if(!mFile.open(QIODevice::WriteOnly | QIODevice::Append |QIODevice::Text))\n    {\n        QMessageBox message_file_Write;\n        message_file_Write.warning(0,\"Open Error\"\n                                   ,\"could not to open file for Writing\");\n        return;\n    }\n    QTextStream out(&amp;mFile);\n    out &lt;&lt; stringtext&lt;&lt;endl;\n    out.setCodec(\"UTF-8\");\n\n    mFile.flush();\n    mFile.close();\n}\n</code></pre>\n<p>But, when I open the result file I see:</p>\n<pre><code>???? ????\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/DpASy.png\" rel=\"nofollow noreferrer\"><img alt=\"see img\" src=\"https://i.stack.imgur.com/DpASy.png\"/></a></p>\n<p>What is going wrong? How can I get my characters to be saved correctly in the file?</p>\n", "Tags": "<c++><c><qt><qstring>", "OwnerUserId": "7123492", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_40563390_40569809_1": {"section_id": 5314, "quality": 0.9130434782608695, "length": 21}}, "n3337": {"so_40563390_40569809_1": {"section_id": 5111, "quality": 0.9130434782608695, "length": 21}}, "n4659": {"so_40563390_40569809_1": {"section_id": 6738, "quality": 0.8695652173913043, "length": 20}}}});