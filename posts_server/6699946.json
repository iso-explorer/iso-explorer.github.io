post_cb({"6703063": {"ParentId": "6699946", "CommentCount": "3", "Body": "<p>In my understanding, if a friend function is defined in a class without other\ncorresponding declarations, the friend name can be looked-up only through ADL.\n<br>\u00a77.3.1.2/3 says:</br></p>\n<blockquote>\n<p id=\"so_6699946_6703063_0\">The name of the friend is not found by simple name lookup until a\n  matching declaration is provided in that namespace scope</p>\n</blockquote>\n<p>The code will be able to be compiled by adding corresponding\nfunction declaration\n<br><code>double dot(Vec&lt;2&gt;, Vec&lt;2&gt;);</code>\nlike\n<a href=\"http://ideone.com/wKE6A\" rel=\"noreferrer\">here</a>.</br></p>\n", "OwnerUserId": "547710", "PostTypeId": "2", "Id": "6703063", "Score": "5", "CreationDate": "2011-07-15T05:32:32.477", "LastActivityDate": "2011-07-15T05:32:32.477"}, "6699946": {"CommentCount": "0", "CreationDate": "2011-07-14T21:08:31.933", "PostTypeId": "1", "AcceptedAnswerId": "6703063", "LastEditorUserId": "560648", "LastActivityDate": "2011-07-15T07:20:45.307", "LastEditDate": "2011-07-14T21:33:05.077", "ViewCount": "2719", "FavoriteCount": "1", "Title": "Unresolved overloaded function type when using a template friend function", "Id": "6699946", "Score": "3", "Body": "<p>I have a problem where I'm trying to stuff a friend function of a class template into a <code>boost::function</code>:</p>\n<pre><code>#include &lt;boost/function.hpp&gt;\n\ntemplate &lt;int N&gt;\nstruct Vec{\n   friend\n   double dot(Vec, Vec){}\n};\n\ntemplate class Vec&lt;2&gt;; //Force multiple instantiations\ntemplate class Vec&lt;3&gt;;\n\nint main()\n{\n    boost::function&lt;double  (Vec&lt;2&gt;, Vec&lt;2&gt;)&gt; func = dot;\n    double (*func1)(Vec&lt;2&gt;, Vec&lt;2&gt;) = dot;\n}\n</code></pre>\n<p>Neither of the two lines in <code>main</code> will compile. For the first one, GCC complains:</p>\n<pre><code>error: conversion from '&lt;unresolved overloaded function type&gt;' to non-scalar type 'boost::function&lt;double(Vec&lt;2&gt;, Vec&lt;2&gt;)&gt;' requested\n</code></pre>\n<p>The error for the second line seems even more confusing to me:</p>\n<pre><code>error: no matches converting function 'dot' to type 'double (*)(struct Vec&lt;2&gt;, struct Vec&lt;2&gt;)'\ntesttmpl.C:6:15: error: candidates are: double dot(Vec&lt;2&gt;, Vec&lt;2&gt;)\ntesttmpl.C:6:15: error:                 double dot(Vec&lt;3&gt;, Vec&lt;3&gt;)\n</code></pre>\n<p>I'm kind of stymied since I don't see why <code>double dot(Vec&lt;2&gt;, Vec&lt;2&gt;)</code> doesn't match.</p>\n<p>Any ideas as to what is happening here?</p>\n", "Tags": "<c++><boost><boost-function>", "OwnerUserId": "426625", "AnswerCount": "2"}, "6700082": {"ParentId": "6699946", "CommentCount": "3", "Body": "<p>This will work:</p>\n<pre><code>template &lt;int N&gt; struct Vec;\n\ntemplate &lt;int K&gt; double dot(Vec&lt;K&gt;, Vec&lt;K&gt;) { return 0; }\n\ntemplate &lt;int N&gt;\nstruct Vec\n{\n  friend double dot&lt;&gt;(Vec&lt;N&gt;, Vec&lt;N&gt;);\n};\n</code></pre>\n<p>GCC 4.6.1 actually gave a very helpful warning:</p>\n<pre class=\"lang-none prettyprint-override\"><code>warning: friend declaration \u2018double dot(Vec&lt;N&gt;, Vec&lt;N&gt;)\u2019 declares a non-template function [-Wnon-template-friend]\nnote: (if this is not what you intended, make sure the function template has already been declared and add &lt;&gt; after the function name here)\n</code></pre>\n", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "6700082", "Score": "0", "CreationDate": "2011-07-14T21:21:39.640", "LastActivityDate": "2011-07-14T21:21:39.640"}, "bq_ids": {"n4140": {"so_6699946_6703063_0": {"section_id": 6694, "quality": 0.7692307692307693, "length": 10}}, "n3337": {"so_6699946_6703063_0": {"section_id": 5271, "quality": 0.7692307692307693, "length": 10}}, "n4659": {"so_6699946_6703063_0": {"section_id": 8169, "quality": 0.7692307692307693, "length": 10}}}});