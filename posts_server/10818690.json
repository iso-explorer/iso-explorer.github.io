post_cb({"10818809": {"ParentId": "10818690", "CommentCount": "3", "Body": "<p><code>operator&gt;&gt;(istraem&amp;, char*)</code> will <em>always</em> write the nul byte.</p>\n<p>C++2003, 27.6.1.2.3/7 (emphasis added):</p>\n<blockquote>\n<p id=\"so_10818690_10818809_0\">Characters are extracted and stored until any of the following occurs:</p>\n<ul>\n<li>n-1 characters are stored;</li>\n<li>end of file occurs on the input sequence;</li>\n<li>ct.is(ct.space,c) is true for the next available input character c, where ct is\n  use_facet &gt;(in.getloc()).</li>\n</ul>\n<p id=\"so_10818690_10818809_1\"><strong><code>Operator&gt;&gt;</code> then stores a null byte</strong> (charT()) in the next position, which may be the first position if no\n  characters were extracted. operator&gt;&gt; then calls width(0). </p>\n</blockquote>\n<p>You can get nearly the behavior you want</p>\n<ul>\n<li>allocate a 65-byte array and call <code>setw(65)</code>, or</li>\n<li>call <code>std::cin.read(input, 64)</code>.</li>\n</ul>\n<p>Note that the two solutions are not identical. Using <code>std::cin &gt;&gt; input</code> treats whitespace differently than <code>std::cin.read()</code> does.</p>\n", "OwnerUserId": "8747", "PostTypeId": "2", "Id": "10818809", "Score": "3", "CreationDate": "2012-05-30T14:54:49.630", "LastActivityDate": "2012-05-30T14:54:49.630"}, "10818690": {"CommentCount": "4", "ViewCount": "261", "PostTypeId": "1", "LastEditorUserId": "281545", "CreationDate": "2012-05-30T14:47:41.330", "LastActivityDate": "2012-05-30T15:34:41.923", "Title": "std::setw() inserts a \\0 at the end of my array", "AcceptedAnswerId": "10818809", "LastEditDate": "2012-05-30T15:34:41.923", "Id": "10818690", "Score": "0", "Body": "<pre><code>input = new char[64]();\nstd::cout &lt;&lt; \"wait for cin\" &lt;&lt; std::endl;\nwhile (std::cin &gt;&gt; std::setw(64) &gt;&gt; input)\n{\n    std::cout &lt;&lt; \"input : \" &lt;&lt; input &lt;&lt; std::endl;\n    ...\n</code></pre>\n<p>Well I assure you <code>setw()</code> copies 63 characters to the <code>char * input</code> instead of 64 and I see the 64rth character displayed on the next while(cin) iteration. Can this behavior be overridden ? I want all my 64 chars and NO <code>nul</code> in my array.</p>\n", "Tags": "<c++><std><setw>", "OwnerUserId": "281545", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_10818690_10818809_1": {"section_id": 2200, "quality": 0.9444444444444444, "length": 17}, "so_10818690_10818809_0": {"section_id": 2199, "quality": 1.0, "length": 6}}, "n3337": {"so_10818690_10818809_1": {"section_id": 2188, "quality": 0.9444444444444444, "length": 17}, "so_10818690_10818809_0": {"section_id": 2187, "quality": 1.0, "length": 6}}, "n4659": {"so_10818690_10818809_1": {"section_id": 2473, "quality": 0.9444444444444444, "length": 17}, "so_10818690_10818809_0": {"section_id": 2472, "quality": 1.0, "length": 6}}}});