post_cb({"17003335": {"ViewCount": "98", "Body": "<p>Does the C++ standard guarantee that when one pushes back a new element into a deque, none of the pre-existing elements will be relocated to a new memory address?</p>\n", "AcceptedAnswerId": "17003379", "Title": "Relocation on assignment when using a std::deque", "CreationDate": "2013-06-08T20:02:09.803", "Id": "17003335", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2013-06-08T20:40:10.597", "Score": "2", "OwnerUserId": "232918", "Tags": "<c++><stl><deque>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_17003335_17003379_0": {"length": 21, "quality": 0.875, "section_id": 817}}, "n3337": {"so_17003335_17003379_0": {"length": 21, "quality": 0.875, "section_id": 806}}, "n4659": {"so_17003335_17003379_0": {"length": 21, "quality": 0.875, "section_id": 876}}}, "17003379": {"Id": "17003379", "PostTypeId": "2", "Body": "<p>Yes, the standard provides such a guarantee:</p>\n<blockquote>\n<h2>23.3.3.4 deque modi\ufb01ers [lib.deque.modi\ufb01ers]</h2>\n<pre><code>iterator insert(const_iterator position, const T&amp; x);\n\niterator insert(const_iterator position, T&amp;&amp; x);\niterator insert(const_iterator position, size_type n, const T&amp; x);\ntemplate &lt;class InputIterator&gt;\niterator insert(const_iterator position,\nInputIterator first, InputIterator last);\niterator insert(const_iterator position, initializer_list&lt;T&gt;);\ntemplate &lt;class... Args&gt; void emplace_front(Args&amp;&amp;... args);\ntemplate &lt;class... Args&gt; void emplace_back(Args&amp;&amp;... args);\ntemplate &lt;class... Args&gt; iterator emplace(const_iterator position, Args&amp;&amp;... args);\nvoid push_front(const T&amp; x);\nvoid push_front(T&amp;&amp; x);\nvoid push_back(const T&amp; x);\nvoid push_back(T&amp;&amp; x);\n</code></pre>\n<p id=\"so_17003335_17003379_0\">1. Effects: An insert in the middle of the deque invalidates all the iterators and references to elements of the deque.\n  <strong>An insert at either end of the deque</strong> invalidates all the iterators to the deque, but <strong>has no effect on the validity of references to\n  elements of the deque.</strong></p>\n</blockquote>\n<p>Absence of effect on references in fact mean that elements will not be relocated. </p>\n<p><sub>According to the C++11 working draft N3242=11-0012</sub></p>\n", "LastEditorUserId": "232918", "LastActivityDate": "2013-06-08T20:40:10.597", "Score": "3", "CreationDate": "2013-06-08T20:08:56.250", "ParentId": "17003335", "CommentCount": "0", "OwnerUserId": "774651", "LastEditDate": "2013-06-08T20:40:10.597"}});