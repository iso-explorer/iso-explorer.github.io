post_cb({"31353610": {"ViewCount": "29", "Body": "<p>Quick query regarding universal references:</p>\n<p>Let's say i have this code</p>\n<pre><code>int q = 10;\nauto &amp;&amp; wtf = &amp;q;\n</code></pre>\n<p>This one compiles fine, but i have no idea what's happening behind the hood. It's taking a reference to an address? isn't that the pointer's job?</p>\n<p>I was trying to deduce that <code>auto&amp;&amp;</code>'s type will be and i did it by:</p>\n<pre><code>int &amp; test = &amp;q //error\nint &amp;&amp; test = &amp;q //error too\n</code></pre>\n<p>So what does it become? I need clarification on what's happening and what's the purpose of taking <code>&amp;</code> from a universal reference? I am doing this because i am trying to understand std::bind since it can take address or pointers(which is the address of the being pointed aka pointer's value).</p>\n", "AcceptedAnswerId": "31354103", "Title": "Universal reference deduction if the argument is address", "CreationDate": "2015-07-11T05:00:28.103", "Id": "31353610", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2015-07-11T07:17:50.490", "Score": "0", "OwnerUserId": "2910144", "Tags": "<c++>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_31353610_31354103_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 7230}}, "n3337": {"so_31353610_31354103_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 6974}}}, "31354103": {"PostTypeId": "2", "Body": "<p>When you write <code>&amp;q</code> you create a temporary value.</p>\n<blockquote>\n<p id=\"so_31353610_31354103_0\">An rvalue [...] is an xvalue, a temporary object (12.2) or subobject thereof, or a value that is not associated with an object.\n  [\u00a7 3.10]</p>\n</blockquote>\n<p>Those are best bound to rvalue references, so</p>\n<pre><code>auto &amp;&amp; wtf = &amp;q;\n</code></pre>\n<p>becomes an rvalue reference (<code>&amp;&amp;</code> and <code>&amp;&amp;</code> stays <code>&amp;&amp;</code>) to the type of <code>&amp;q</code>. This isn't <code>int</code>, it's <code>int *</code>. That's why your manual attempt failed.</p>\n<p>If you would instead bind to a lvalue, like a local variable, then you get a lvalue reference:</p>\n<pre><code>int * qptr = &amp;q;\nauto &amp;&amp; wtf2 = qptr;\n// auto becomes (int *)&amp;\n// &amp; combined with &amp;&amp; becomes &amp;\n</code></pre>\n<p>The whole thing can new seen <a href=\"http://ideone.com/zSuYMr\" rel=\"nofollow\">in action here.</a></p>\n", "LastActivityDate": "2015-07-11T07:17:50.490", "LastEditorUserId": "1116364", "Id": "31354103", "CommentCount": "0", "CreationDate": "2015-07-11T06:20:00.247", "ParentId": "31353610", "Score": "1", "OwnerUserId": "1116364", "LastEditDate": "2015-07-11T07:17:50.490"}});