post_cb({"24747829": {"Tags": "<c++><osx><ubuntu><g++>", "ViewCount": "589", "AnswerCount": "2", "CreationDate": "2014-07-14T23:49:42.530", "FavoriteCount": "1", "Title": "g++ is not producing an error when it should, e.g. \"error: variable length array of non-POD element type\"", "CommentCount": "5", "AcceptedAnswerId": "24748113", "Score": "2", "OwnerUserId": "2180366", "Id": "24747829", "LastActivityDate": "2014-07-15T00:27:48.460", "Body": "<p>In my C++ program at some point I do:</p>\n<pre><code>std::cin &gt;&gt; my_int;\nmy_class my_array[my_int];\n</code></pre>\n<p>When I compile it with <code>g++</code> on OSX, I get:</p>\n<blockquote>\n<p id=\"so_24747829_24747829_0\">error: variable length array of non-POD element type</p>\n</blockquote>\n<p>as expected. However, when I compile it on Ubuntu, I do not get any errors. In both scenarios I compile with no options.</p>\n<p>For reference, <code>g++ --version</code> on OSX outputs:</p>\n<pre><code>Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include/c++/4.2.1\nApple LLVM version 5.1 (clang-503.0.40) (based on LLVM 3.4svn)\nTarget: x86_64-apple-darwin13.3.0\nThread model: posix\n</code></pre>\n<p>while on Ubuntu it outputs:</p>\n<pre><code>g++ (Ubuntu 4.4.3-4ubuntu5.1) 4.4.3\nCopyright (C) 2009 Free Software Foundation, Inc.\n</code></pre>\n<p>Any ideas on why I do not get the error?</p>\n<p>P.S.: I tried <code>apt-get update</code> and <code>apt-get install g++</code> but for some reason I get as a response that I have the latest version, which if I am not mistaken is 4.9.0, which I do not have...</p>\n", "PostTypeId": "1"}, "24747998": {"ParentId": "24747829", "Score": "0", "CreationDate": "2014-07-15T00:10:05.017", "Id": "24747998", "OwnerUserId": "344638", "LastActivityDate": "2014-07-15T00:10:05.017", "Body": "<p>GCC supports some non-standard extensions, one of which is variable length arrays of <em>certain</em> non-POD types.</p>\n<p>Clang on the other hand, strives to be much more standards compliant.</p>\n<p>From the <a href=\"http://clang.llvm.org/compatibility.html#vla\" rel=\"nofollow\">Clang compatibility FAQ</a>:</p>\n<blockquote>\n<p id=\"so_24747829_24747998_0\">GCC and C99 allow an array's size to be determined at run time. This\n  extension is not permitted in standard C++. However, Clang supports\n  such variable length arrays in very limited circumstances for\n  compatibility with GNU C and C99 programs:</p>\n<ul>\n<li>The element type of a variable length array must be a POD (\"plain old data\") type, which means that it cannot have any user-declared\n  constructors or destructors, any base classes, or any members of\n  non-POD type. All C types are POD types.</li>\n<li>Variable length arrays cannot be used as the type of a non-type template parameter.</li>\n</ul>\n</blockquote>\n<p>As @Brian pointed out, you're using Clang on your OSX machine (no surprise, Apple created LLVM) and GCC on your Ubuntu box.</p>\n", "PostTypeId": "2", "CommentCount": "1"}, "24748113": {"ParentId": "24747829", "Score": "3", "CreationDate": "2014-07-15T00:22:37.810", "LastActivityDate": "2014-07-15T00:27:48.460", "LastEditDate": "2014-07-15T00:27:48.460", "OwnerUserId": "827263", "LastEditorUserId": "827263", "Body": "<p>Any conforming ISO C++ compiler is required to issue a diagnostic for that error. More precisely, it's required to issue at least one diagnostic message for any program that violates certain rules given in the ISO standard.</p>\n<p><code>g++</code> is not a fully conforming C++ compiler by default.</p>\n<p>To make it (attempt to) conform to the C++ standard, use the <code>-pedantic</code> option, preferably along with an option to specify an edition of the C++ standard.</p>\n<p>For example, when I compile something similar to your program, g++ does not give any warnings by default -- but when I compile it with</p>\n<pre><code>g++ -pedantic\n</code></pre>\n<p>or</p>\n<pre><code>g++ -std=c++11 -pedantic`\n</code></pre>\n<p>I get:</p>\n<pre><code>c.cpp: In function \u2018int main()\u2019:\nc.cpp:5:24: warning: ISO C++ forbids variable length array \u2018my_array\u2019 [-Wvla]\n</code></pre>\n<p>For more information on g++'s conformance to the C++ standard(s), see the manual; type <code>info g++</code> and read the <a href=\"https://gcc.gnu.org/onlinedocs/gcc-4.9.0/gcc/Standards.html\" rel=\"nofollow\">\"Standards\"</a> and <a href=\"https://gcc.gnu.org/onlinedocs/gcc-4.9.0/gcc/C_002b_002b-Extensions.html\" rel=\"nofollow\">\"C++ Extensions\"</a> sections (links are to an online version of the manual).</p>\n", "Id": "24748113", "PostTypeId": "2", "CommentCount": "0"}, "bq_ids": {"n4659": {"so_24747829_24747829_0": {"length": 4, "section_id": 4038, "quality": 0.5714285714285714}}}});