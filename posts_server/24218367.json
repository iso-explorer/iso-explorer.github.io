post_cb({"24218367": {"CommentCount": "3", "ViewCount": "135", "PostTypeId": "1", "ClosedDate": "2014-06-15T11:35:44.037", "LastEditorUserId": "1159741", "CreationDate": "2014-06-14T09:07:38.167", "LastActivityDate": "2014-06-14T10:01:36.693", "Title": "C++ program crashes when counter is used inside loop", "AcceptedAnswerId": "24218394", "LastEditDate": "2014-06-14T10:01:36.693", "Id": "24218367", "Score": "0", "Body": "<p>I am working on a very small program to find the divisors of an integer in C++.\nMy main method pretty much cins an int to a var and calls the factor method with the int as the argument.\nHere's the code:</p>\n<pre><code>void factor(int num)\n{\n    for(int x = 0; x &lt; ((num + 2) / 2); x++)\n    {\n        if((num % x) == 0)\n        {\n            cout &lt;&lt; x &lt;&lt; \" \";\n        }\n    }\n}\n</code></pre>\n<p>The program always crashes inside factor().\nIf I use this code, it runs fine:</p>\n<pre><code>void factor(int num)\n{\n    for(int x = 0; x &lt; ((num + 2) / 2); x++)\n    {\n        {\n            cout &lt;&lt; x &lt;&lt; \" \";\n        }\n    }\n}\n</code></pre>\n<p>So the problem is somewhere in the <code>if((num % x) == 0)</code>. When I change that line to <code>if((num % 2) == 0)</code> or <code>if((num % 5) == 0)</code>, it produces the right results (I'm using 32 as the test input).</p>\n<p>I learned C++ a few years ago and forgot most of it, after running into this issue I copied the code word for word off of my previous solution to this problem (which worked). But the program still crashes whenever I try to access the loop counter.</p>\n<p>I'm using Code::Blocks 13.12 with GCC \"4.9.0 20140604 (prerelease)\" on Arch Linux 64-bit.</p>\n", "Tags": "<c++><math><for-loop><divide-by-zero><dividebyzeroexception>", "OwnerUserId": "1159741", "AnswerCount": "4"}, "24218429": {"ParentId": "24218367", "CommentCount": "0", "Body": "<p>In the very first cycle of the for x has the value 0. num % x would require a division by 0 which is a mathematical non-sense and that is where is crashes.</p>\n<p>You want to see all the divisors of the number (they divide the number and 0 is left to carry over). You should start the for cycle at 2. (1 is already a given - you could print him out directly, but you going to only half the number, so I suspect you are not interested in 1 and the number itself).</p>\n", "OwnerUserId": "865471", "PostTypeId": "2", "Id": "24218429", "Score": "0", "CreationDate": "2014-06-14T09:15:35.907", "LastActivityDate": "2014-06-14T09:15:35.907"}, "24218465": {"ParentId": "24218367", "CommentCount": "0", "Body": "<p>Try to start the loop from <code>x = 1</code>. </p>\n<p>Starting from 0 does not make any sense, if you want to compute the factors of a number.\nThe <code>%</code> operator computes the remainder of the divison <code>num/x</code>. A division by 0 does not make any sense, so the behavior of the operation is undefined. This means it can crash with one compiler/machine and can produce some sort of result on another compiler/machine.</p>\n", "OwnerUserId": "3737146", "PostTypeId": "2", "Id": "24218465", "Score": "0", "CreationDate": "2014-06-14T09:20:50.920", "LastActivityDate": "2014-06-14T09:20:50.920"}, "24218391": {"ParentId": "24218367", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>How can you do <code>num%x</code> when x is 0? Due to use of x when it is 0, program crashes.</p>\n<p>This would cause a runtime error which I suppose would be <code>SIGFPE</code>.</p>\n", "Id": "24218391", "LastEditDate": "2014-06-14T09:17:15.980", "OwnerDisplayName": "user2734982", "Score": "2", "CreationDate": "2014-06-14T09:11:08.857", "LastActivityDate": "2014-06-14T09:17:15.980", "LastEditorDisplayName": "user2734982"}, "24218394": {"ParentId": "24218367", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>The problem is that you have an <a href=\"http://en.wikipedia.org/wiki/Division_by_zero\" rel=\"nofollow\"><em>division-by-zero</em></a> in your first snippet, something which is <em>undefined-behavior</em> according to the standard (n3337):</p>\n<blockquote>\n<p id=\"so_24218367_24218394_0\"><code>5.6p4</code> <strong>Multiplicative operators</strong> <code>[expr.mul]</code></p>\n<blockquote>\n<p id=\"so_24218367_24218394_2\">The binary <code>/</code> operator yields the quotient, and the binary <code>%</code> operator yeilds the remainder from the division of the first expression by the second. If the second operand of <code>/</code> or <code>%</code> is zero the behavior is undefined.</p>\n</blockquote>\n</blockquote>\n<hr>\n<p>Since the program cannot calculate the value of such expression it will crash.</p>\n<pre><code>if((num % x) == 0)  // num % 0 on first iteration, application will crash, or order pizza\n{\n  cout &lt;&lt; x &lt;&lt; \" \";\n}\n</code></pre>\n</hr>", "OwnerUserId": "1090079", "LastEditorUserId": "1090079", "LastEditDate": "2014-06-14T09:25:24.110", "Id": "24218394", "Score": "7", "CreationDate": "2014-06-14T09:11:25.717", "LastActivityDate": "2014-06-14T09:25:24.110"}, "bq_ids": {"n4140": {"so_24218367_24218394_1": {"section_id": 6137, "quality": 0.5555555555555556, "length": 10}, "so_24218367_24218394_2": {"section_id": 6137, "quality": 0.5555555555555556, "length": 10}}, "n3337": {"so_24218367_24218394_1": {"section_id": 5901, "quality": 0.5555555555555556, "length": 10}, "so_24218367_24218394_2": {"section_id": 5901, "quality": 0.5555555555555556, "length": 10}}, "n4659": {"so_24218367_24218394_1": {"section_id": 7634, "quality": 0.5555555555555556, "length": 10}, "so_24218367_24218394_2": {"section_id": 7634, "quality": 0.5555555555555556, "length": 10}}}});