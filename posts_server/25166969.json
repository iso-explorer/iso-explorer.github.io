post_cb({"25167071": {"ParentId": "25166969", "CommentCount": "0", "CreationDate": "2014-08-06T18:02:07.210", "OwnerUserId": "241631", "PostTypeId": "2", "Id": "25167071", "Score": "3", "Body": "<p>Maybe, maybe not. It's not a question of whether the compiler is smart enough, but what other special member functions you have remembered, or forgotten, to define. The exact conditions when a move constructor will be implicitly defined by the compiler are listed under <em>\u00a712.8/9 [class.copy]</em></p>\n<blockquote>\n<p id=\"so_25166969_25167071_0\">If the definition of a class <code>X</code> does not explicitly declare a move constructor, one will be implicitly declared as defaulted if and only if<br/>\n  \u2014 <code>X</code> does not have a user-declared copy constructor,<br/>\n  \u2014 <code>X</code> does not have a user-declared copy assignment operator,<br/>\n  \u2014 <code>X</code> does not have a user-declared move assignment operator, and<br/>\n  \u2014 <code>X</code> does not have a user-declared destructor.<br/></p>\n</blockquote>\n<p>Similarly, the conditions for implicit generation of a move assignment operator are listed under <em>\u00a712.8/20</em></p>\n<blockquote>\n<p id=\"so_25166969_25167071_1\">If the definition of a class <code>X</code> does not explicitly declare a move assignment operator, one will be implicitly declared as defaulted if and only if<br/>\n  \u2014 <code>X</code> does not have a user-declared copy constructor,<br/>\n  \u2014 <code>X</code> does not have a user-declared move constructor,<br/>\n  \u2014 <code>X</code> does not have a user-declared copy assignment operator, and<br/>\n  \u2014 <code>X</code> does not have a user-declared destructor.<br/></p>\n</blockquote>\n", "LastActivityDate": "2014-08-06T18:02:07.210"}, "25166969": {"CommentCount": "0", "ViewCount": "63", "PostTypeId": "1", "ClosedDate": "2014-08-06T18:29:24.877", "LastEditorUserId": "241631", "CreationDate": "2014-08-06T17:55:30.510", "LastActivityDate": "2014-08-06T18:02:27.293", "Title": "If Move semantics(Move constructor and Move assignment operator) are not defined does compiler optimize by default?", "AcceptedAnswerId": "25167071", "LastEditDate": "2014-08-06T18:02:27.293", "Id": "25166969", "Score": "0", "Body": "<p>While defining class if we forget to write Move constructor and Move assignment operator does compiler is smart enough to optimize and add automatically.</p>\n", "Tags": "<c++><c++11><compiler-construction><compiler-optimization><move-semantics>", "OwnerUserId": "2248845", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_25166969_25167071_0": {"section_id": 458, "quality": 1.0, "length": 33}, "so_25166969_25167071_1": {"section_id": 469, "quality": 1.0, "length": 33}}, "n3337": {"so_25166969_25167071_0": {"section_id": 449, "quality": 1.0, "length": 33}, "so_25166969_25167071_1": {"section_id": 460, "quality": 1.0, "length": 33}}, "n4659": {"so_25166969_25167071_0": {"section_id": 481, "quality": 1.0, "length": 33}, "so_25166969_25167071_1": {"section_id": 492, "quality": 1.0, "length": 33}}}});