post_cb({"12530408": {"ViewCount": "247", "Body": "<blockquote>\n<p id=\"so_12530408_12530408_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/7424647/can-a-string-literal-be-subscripted-in-a-constant-expression\">Can a string literal be subscripted in a constant expression?</a> </br></p>\n</blockquote>\n<p>If I subscript a string literal, is the result a compile-time constant? In other words, is the following code valid?</p>\n<pre><code>constexpr char x = \"a\"[0];\n</code></pre>\n<p>GCC 4.7 says it is, but what does the standard have to say on this matter?</p>\n<p>For the curious: I can't just write <code>'a'</code>, because the string literal is the result of the stringizing operator. Some compilers do have a charizing operator, but it's only an extension.</p>\n", "AcceptedAnswerId": "12530499", "Title": "Subscripting string literals in compile-time constants", "CreationDate": "2012-09-21T12:13:49.320", "LastActivityDate": "2012-09-21T12:28:46.427", "CommentCount": "0", "LastEditDate": "2017-05-23T12:04:38.217", "PostTypeId": "1", "Tags": "<c++><c++11><language-lawyer><constexpr>", "Id": "12530408", "AnswerCount": "1", "Score": "2", "OwnerUserId": "784668", "ClosedDate": "2012-09-21T12:34:00.680", "LastEditorUserId": "-1"}, "bq_ids": {"n4140": {"so_12530408_12530499_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 6185}}, "n3337": {"so_12530408_12530499_0": {"length": 7, "quality": 1.0, "section_id": 5946}}, "n4659": {"so_12530408_12530499_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 7690}}}, "12530499": {"Id": "12530499", "PostTypeId": "2", "Body": "<p>I think you're looking at 5.19 [expr.const]:</p>\n<blockquote>\n<p id=\"so_12530408_12530499_0\">2 - A conditional-expression is a core constant expression unless it involves one of the following [...]</p>\n<ul>\n<li>an lvalue-to-rvalue conversion (4.1) unless it is applied to\n  <ul>\n<li>a non-volatile glvalue of integral or enumeration type that refers to a non-volatile const object with\n  a preceding initialization, initialized with a constant expression [ Note: a string literal (2.14.5)\n  corresponds to an array of such objects. \u2014end note ] [...]</li>\n</ul></li>\n</ul>\n</blockquote>\n<p>So the result of a string literal subscript operation may be converted to an rvalue in a core constant expression.</p>\n<p>This is useful when defining constexpr operators for user-defined literals and user-defined string literals, although the variadic form can be more workable in some cases.</p>\n", "LastEditorUserId": "567292", "LastActivityDate": "2012-09-21T12:28:46.427", "Score": "3", "CreationDate": "2012-09-21T12:19:27.873", "ParentId": "12530408", "CommentCount": "0", "OwnerUserId": "567292", "LastEditDate": "2012-09-21T12:28:46.427"}});