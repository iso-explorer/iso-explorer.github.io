post_cb({"21081332": {"ParentId": "21081275", "CommentCount": "0", "Body": "<p>From:\n<a href=\"http://www.cplusplus.com/reference/cmath/atan2/\" rel=\"nofollow\">http://www.cplusplus.com/reference/cmath/atan2/</a></p>\n<p>Return Value\nPrincipal arc tangent of y/x, in the interval [-pi,+pi] radians.</p>\n<p>So, if <code>std:arg()</code> gives the <code>atan2</code> response, as its supposed to, you should get what you hope for on any compliant system.</p>\n", "OwnerUserId": "3015815", "PostTypeId": "2", "Id": "21081332", "Score": "0", "CreationDate": "2014-01-12T22:51:42.110", "LastActivityDate": "2014-01-12T22:51:42.110"}, "21081323": {"ParentId": "21081275", "CommentCount": "1", "Body": "<p>The specification of <code>std::arg()</code> doesn't really provide much detail (26.4.7 [complex.value.ops] paragraph 4):</p>\n<blockquote>\n<pre><code>template&lt;class T&gt; T arg(const complex&lt;T&gt;&amp; x);\n</code></pre>\n<p id=\"so_21081275_21081323_0\">Returns: The phase angle of <code>x</code>, or <code>atan2(imag(x), real(x))</code>.</p>\n</blockquote>\n<p>The definition of <code>atan2()</code> is in the C standard (7.12.4.4) which specifies in paragraph 4:</p>\n<blockquote>\n<p id=\"so_21081275_21081323_1\">The <code>atan2</code> functions return arctan <code>y/x</code> in the interval [\u2212\u03c0 , +\u03c0 ] radians.</p>\n</blockquote>\n", "OwnerUserId": "1120273", "PostTypeId": "2", "Id": "21081323", "Score": "2", "CreationDate": "2014-01-12T22:50:17.140", "LastActivityDate": "2014-01-12T22:50:17.140"}, "21081275": {"CommentCount": "0", "ViewCount": "469", "CreationDate": "2014-01-12T22:46:12.683", "LastActivityDate": "2014-01-12T22:51:42.110", "Title": "What is the range of the function std::arg()?", "AcceptedAnswerId": "21081323", "PostTypeId": "1", "Id": "21081275", "Score": "1", "Body": "<p>I am using the <code>&lt;complex&gt;</code> C++ header, and need to know the range of the <code>std::arg</code> function which returns the phase angle of a complex number. Ie, is it [-pi, pi], [0, 2*pi], or something else? Is there a guarantee about the range in the standard?</p>\n<p>AFAICT, <code>std::arg</code> basically just wraps <code>atan2</code>, which I think guarantees the range is [-pi, pi]. Is this true of all compliant implementations of C++?</p>\n", "Tags": "<c++>", "OwnerUserId": "1072468", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_21081275_21081323_0": {"section_id": 3441, "quality": 0.6666666666666666, "length": 4}}, "n3337": {"so_21081275_21081323_0": {"section_id": 3310, "quality": 0.6666666666666666, "length": 4}}, "n4659": {"so_21081275_21081323_0": {"section_id": 4204, "quality": 0.6666666666666666, "length": 4}}}});