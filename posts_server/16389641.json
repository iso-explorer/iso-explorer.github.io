post_cb({"16389766": {"ParentId": "16389641", "CommentCount": "0", "Body": "<p>It means nothing changes! const means the thing is invariant</p>\n<p>i.e</p>\n<p><code>const Class</code> -  Cannot have fun with thwereply</p>\n<p><code>func() const;</code> That object cannot play with itself</p>\n", "OwnerUserId": "892256", "PostTypeId": "2", "Id": "16389766", "Score": "0", "CreationDate": "2013-05-05T22:28:37.027", "LastActivityDate": "2013-05-05T22:28:37.027"}, "16389641": {"CommentCount": "1", "AcceptedAnswerId": "16389650", "ClosedDate": "2013-05-06T03:09:06.443", "CreationDate": "2013-05-05T22:10:03.543", "LastActivityDate": "2013-05-05T22:28:37.027", "PostTypeId": "1", "ViewCount": "50", "Title": "Constant class and function", "Id": "16389641", "Score": "-2", "Body": "<p>I need to write a new method. The following code is given:</p>\n<pre><code>const Class * func() const;\n</code></pre>\n<p>But what does it mean when both the class and the function are declared constant?</p>\n", "Tags": "<c++><const>", "OwnerUserId": "1170330", "AnswerCount": "4"}, "16389651": {"ParentId": "16389641", "PostTypeId": "2", "CommentCount": "0", "Body": "<pre><code>const Class * ...\n</code></pre>\n<p>This means <code>func</code> will return a <code>const pointer</code> to <code>Class</code></p>\n<pre><code>Class c;\nClass* p = c.func()        // Not allowed.\nconst Class* p = c.func()  // OK.\np-&gt;mem = 2;                // Not allowed. p is a const pointer.\n</code></pre>\n<h2>----------------------------------------------------------------------------------------------</h2>\n<pre><code>func() const;\n       ^^^^\n</code></pre>\n<p>means <code>func</code> will not modify <code>this</code> or in other words does not affect the state of the class (<em>doesn't modify any member variables.</em>).</p>\n<pre><code>void Class::func(int&amp; i) const {\n   this-&gt;mem = i;  // is not allowed here since func() is const (unless 'mem' is mutable)\n   i = this-&gt;mem;  // This is OK.\n}\n</code></pre>\n", "OwnerUserId": "6271971", "LastEditorUserId": "6271971", "LastEditDate": "2013-05-05T22:24:24.493", "Id": "16389651", "Score": "2", "CreationDate": "2013-05-05T22:12:10.477", "LastActivityDate": "2013-05-05T22:24:24.493"}, "16389650": {"ParentId": "16389641", "CommentCount": "0", "Body": "<pre><code>const Class * func() const;\n</code></pre>\n<p>The <code>const Class*</code> is the return type. It says that this function returns a pointer to a <code>const Class</code>. So whoever calls this function will receive a pointer, but they can't modify the object it points at.</p>\n<p>The <code>const</code> at the end of the declaration says that this member function does not modify the state of the object it is being called on. That is, it doesn't modify the object that <code>this</code> points at. In fact, if you try to modify any data member (that is not <code>mutable</code>) in <code>func</code>, the compiler will tell you off.</p>\n", "OwnerUserId": "150634", "PostTypeId": "2", "Id": "16389650", "Score": "3", "CreationDate": "2013-05-05T22:11:59.507", "LastActivityDate": "2013-05-05T22:11:59.507"}, "bq_ids": {"n4140": {"so_16389641_16389649_0": {"section_id": 5892, "quality": 1.0, "length": 6}}, "n3337": {"so_16389641_16389649_0": {"section_id": 5663, "quality": 1.0, "length": 6}}, "n4659": {"so_16389641_16389649_0": {"section_id": 7375, "quality": 1.0, "length": 6}}}, "16389649": {"ParentId": "16389641", "PostTypeId": "2", "CommentCount": "0", "Body": "<pre><code>const Class * func() const;\n^^^^^                ^^^^^\n  1                    2\n</code></pre>\n<ul>\n<li><p>The first <code>const</code> means the return type is <code>const Class*</code>.</p></li>\n<li><p>The second one means, the method <code>func</code> will not change its class members.</p></li>\n</ul>\n<p>\u00a0</p>\n<p>Per paragraph <code>\u00a79.4/1</code>:</p>\n<pre><code>struct X {\n   void g() const;\n};\n</code></pre>\n<blockquote>\n<p id=\"so_16389641_16389649_0\">If the member function is declared <em><code>const</code></em>, the type of <em><code>this</code></em> is <em><code>const X*</code></em></p>\n</blockquote>\n<p>So, you can not modify members of <code>X</code>.</p>\n", "OwnerUserId": "952747", "LastEditorUserId": "952747", "LastEditDate": "2013-05-05T22:21:35.233", "Id": "16389649", "Score": "2", "CreationDate": "2013-05-05T22:11:54.863", "LastActivityDate": "2013-05-05T22:21:35.233"}});