post_cb({"bq_ids": {"n4140": {"so_28640600_28640829_0": {"length": 18, "quality": 0.72, "section_id": 714}, "so_28640600_28640829_1": {"length": 9, "quality": 0.9, "section_id": 714}}, "n3337": {"so_28640600_28640829_0": {"length": 18, "quality": 0.72, "section_id": 703}, "so_28640600_28640829_1": {"length": 9, "quality": 0.9, "section_id": 703}}, "n4659": {"so_28640600_28640829_0": {"length": 18, "quality": 0.72, "section_id": 744}, "so_28640600_28640829_1": {"length": 8, "quality": 0.8, "section_id": 744}}}, "28640829": {"Id": "28640829", "PostTypeId": "2", "Body": "<p>It's not actually a bug in the implementaton, though it is arguably one in the standard:</p>\n<blockquote>\n<p id=\"so_28640600_28640829_0\">23.2.1 General container requirements <em>[container.requirements.general]</em>\n  13 Table 98 lists operations that are provided for some types of containers but not others. Those containers for which the listed operations are provided shall implement the semantics described in Table 98 unless otherwise stated.</p>\n</blockquote>\n<p>The table contains:</p>\n<blockquote>\n<p id=\"so_28640600_28640829_1\"><code>a &lt; b</code><br>\n  convertible to <code>bool</code><br>\n<code>lexicographical_compare(a.begin(),a.end(),b.begin(),b.end())</code><br>\n  pre: &lt; is defined for values of T. &lt; is a total ordering relationship.<br>\n  linear</br></br></br></br></p>\n</blockquote>\n<p>While later sections specify that <code>std::set</code> provides comparison-operators, it unfortunately does not change the definition from the one given above.</p>\n<p>As an aside, <code>std::lexicographical_compare</code> is not actually using <code>std::less</code>, but using <code>&lt;</code> directly. Not that that is in any way significant.</p>\n", "LastEditorUserId": "3204551", "LastActivityDate": "2015-02-21T01:09:10.720", "Score": "3", "CreationDate": "2015-02-21T01:03:30.693", "ParentId": "28640600", "CommentCount": "0", "OwnerUserId": "3204551", "LastEditDate": "2015-02-21T01:09:10.720"}, "28640600": {"ViewCount": "123", "Body": "<p>cannot delete my own question, so overwrite it instead...</p>\n", "Title": "std::set<K, C>::operator<(const std::set<K, C>&) is not using C() but std::less()", "CreationDate": "2015-02-21T00:34:37.677", "LastActivityDate": "2016-05-27T15:35:07.673", "CommentCount": "13", "LastEditDate": "2016-05-27T15:35:07.673", "PostTypeId": "1", "LastEditorDisplayName": "user4590120", "OwnerDisplayName": "user4590120", "Id": "28640600", "Score": "6", "Tags": "<c++><set>", "AnswerCount": "1"}});