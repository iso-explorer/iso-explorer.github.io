post_cb({"22782364": {"PostTypeId": "2", "Body": "<p>yes this is the standard behavior.</p>\n<p>When you pass something by refernce - you are actually just assigning one more name to the variable.</p>\n<p>Like - </p>\n<p>When you call func2(int&amp; a) using func(a) from main you are assigning a new name to variable 'a' defined in main. The main variable 'a' is known by the name 'a' in func2. Basically fun2::a and main::a refer to the same variables.</p>\n<p>Also, when you do \nint &amp; b=a; in func2 you are making a new name for func2::a  - &gt;func2::b. Thus the variable remains the same only new names are added.</p>\n", "LastActivityDate": "2014-04-01T09:53:55.470", "Id": "22782364", "CommentCount": "1", "CreationDate": "2014-04-01T09:53:55.470", "ParentId": "22781946", "Score": "0", "OwnerUserId": "2161003"}, "bq_ids": {"n4140": {"so_22781946_22782369_0": {"length": 12, "quality": 0.7058823529411765, "section_id": 3317}}, "n3337": {"so_22781946_22782369_0": {"length": 12, "quality": 0.7058823529411765, "section_id": 3187}}}, "22782369": {"PostTypeId": "2", "Body": "<p>From the latest public standard draft, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf\" rel=\"nofollow\">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf</a>:</p>\n<blockquote>\n<p id=\"so_22781946_22782369_0\">8.5.3 References [dcl.init.ref] \n  1 A variable declared to be a T&amp; or T&amp;&amp;, that is, \u201creference to type T\u201d (8.3.2), shall be initialized by an object, or function, of type T or by an object that can be\n  converted into a T. [ Example:  </p>\n</blockquote>\n<pre><code>int g(int);  \nvoid f() {   \n    int i;   \n    int&amp; r = i; // r refers to i  \n    r = 1; // the value of i becomes 1 \n    int* p = &amp;r; //p points to i \n    int&amp; rr = r; // rr refers to what r refers to, that is, to i\n[...]\n</code></pre>\n<p>So while the sentence may leave one uncertain (the part relevant here is probably that a reference \"can be converted into a T\"), the example (the last line is relevant here) is unambiguous.</p>\n", "LastActivityDate": "2014-04-01T09:54:06.720", "Id": "22782369", "CommentCount": "2", "CreationDate": "2014-04-01T09:54:06.720", "ParentId": "22781946", "Score": "1", "OwnerUserId": "3150802"}, "22781946": {"ViewCount": "68", "Body": "<p>I somehow start to try to understand C++ and get confused with \"undefined\", \"unspecified\".</p>\n<p>References are widely documented, but I didn't find the the answer to my \"specific\" question. </p>\n<p>What about a reference of a value passed by reference?</p>\n<p>I have tested this with the following code:</p>\n<pre><code>#include &lt;iostream&gt;\n\nint func(int&amp; a)\n{\n    int b=a;\n    ++b;\n    std::cout &lt;&lt; \"[func] b: \" &lt;&lt; b &lt;&lt; std::endl;\n    return b;\n}\n\nint func2(int&amp; a)\n{\n    int&amp; b=a;\n    ++b;\n    std::cout &lt;&lt; \"[func2] b: \" &lt;&lt; b &lt;&lt; std::endl;\n    return b;\n}\n\nint main()\n{\n    int a=1;\n    std::cout &lt;&lt; \"a: \" &lt;&lt; a &lt;&lt; std::endl;\n    func(a);\n    std::cout &lt;&lt; \"a after func: \" &lt;&lt; a &lt;&lt; std::endl;\n    func2(a);\n    std::cout &lt;&lt; \"a after func2: \" &lt;&lt; a &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>\n<p>and got the output:</p>\n<pre><code>a: 1\n[func] b: 2\na after func: 1\n[func2] b: 2\na after func2: 2\n</code></pre>\n<p>It seems to do what I expect, but is this the behavior mandated by the standard?</p>\n", "AcceptedAnswerId": "22782369", "Title": "Reference of value passed by reference", "CreationDate": "2014-04-01T09:36:19.557", "Id": "22781946", "CommentCount": "1", "LastEditDate": "2014-04-01T10:03:52.093", "PostTypeId": "1", "LastEditorUserId": "105672", "LastActivityDate": "2014-04-01T10:16:22.570", "Score": "0", "OwnerUserId": "3484387", "Tags": "<c++><pass-by-reference>", "AnswerCount": "3"}, "22782898": {"PostTypeId": "2", "Body": "<p>You could find good answers from the below links <br>\n<a href=\"http://www.stroustrup.com/bs_faq2.html#undefined\" rel=\"nofollow noreferrer\">http://www.stroustrup.com/bs_faq2.html#undefined</a>\n<br>\n<a href=\"https://stackoverflow.com/questions/2397984/undefined-unspecified-and-implementation-defined-behavior\">Undefined, unspecified and implementation-defined behavior</a></br></br></p>\n", "LastActivityDate": "2014-04-01T10:16:22.570", "LastEditorUserId": "-1", "Id": "22782898", "CommentCount": "1", "CreationDate": "2014-04-01T10:16:22.570", "ParentId": "22781946", "Score": "0", "OwnerUserId": "2118784", "LastEditDate": "2017-05-23T11:57:07.140"}});