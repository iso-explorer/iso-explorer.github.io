post_cb({"23647804": {"Id": "23647804", "PostTypeId": "2", "Body": "<p>we use <strong>declarations</strong> to <strong>declare variable names and types</strong> as well as <strong>to define memory for them</strong>. Most of the time these two actions occur at the same time, that is, <strong>most declarations are definitions</strong> (In case of variables and not functions). Hence the error. However this may not always be a case.</p>\n", "LastActivityDate": "2014-05-14T07:07:30.920", "CommentCount": "0", "CreationDate": "2014-05-14T07:07:30.920", "ParentId": "23646847", "Score": "0", "OwnerUserId": "2883201"}, "23646901": {"Id": "23646901", "PostTypeId": "2", "Body": "<p>They are each syntactically valid declarations, however the two together violate of the <a href=\"http://en.wikipedia.org/wiki/One_Definition_Rule\">one definition rule</a>. The compiler detects and reports this violation. (They are both declarations and definitions.)</p>\n", "LastActivityDate": "2014-05-14T06:12:37.440", "CommentCount": "8", "CreationDate": "2014-05-14T06:12:37.440", "ParentId": "23646847", "Score": "9", "OwnerUserId": "721269"}, "bq_ids": {"n4140": {"so_23646847_23646922_0": {"length": 26, "quality": 0.8387096774193549, "section_id": 7034}}, "n3337": {"so_23646847_23646922_0": {"length": 26, "quality": 0.8387096774193549, "section_id": 6780}}, "n4659": {"so_23646847_23646922_0": {"length": 26, "quality": 0.8387096774193549, "section_id": 8531}}}, "23646922": {"Id": "23646922", "PostTypeId": "2", "Body": "<p>From the standard</p>\n<pre><code>A declaration is a definition unless it declares a function without specifying the function\u2019s body\n</code></pre>\n<p><code>a</code> is not a method, so <code>int a</code> means a declaration and definition. And if you define a name more than once in a single translation unit, you are violating <a href=\"http://en.wikipedia.org/wiki/One_Definition_Rule\" rel=\"nofollow\">One definition Rule</a>, hence the error.</p>\n<p><strong>EDIT</strong></p>\n<p>For clarification, I am posting the whole paragraph:</p>\n<blockquote>\n<p id=\"so_23646847_23646922_0\">A declaration is a definition unless it declares a function without\n  specifying the function\u2019s body   (8.4), it contains the extern\n  specifier (7.1.1) or a linkage-specification (27) (7.5) and neither an\n  initializer nor a function-body, it declares a static data member in a\n  class definition (9.4), it is a  class name declaration (9.1), or it\n  is a typedef declaration (7.1.3),a using-declaration (7.3.3), or a \n  using-directive(7.3.4).</p>\n</blockquote>\n", "LastEditorUserId": "661519", "LastActivityDate": "2014-05-14T12:25:53.297", "Score": "6", "CreationDate": "2014-05-14T06:13:46.860", "ParentId": "23646847", "CommentCount": "5", "OwnerUserId": "1390091", "LastEditDate": "2014-05-14T12:25:53.297"}, "23647403": {"Id": "23647403", "PostTypeId": "2", "Body": "<p>It is same as two persons having same name. the compiler confuses which one to refer. So, it is not allowed in same scope. Having two variables with same name is confusing for the compiler.</p>\n", "LastActivityDate": "2014-05-14T06:42:49.403", "CommentCount": "1", "CreationDate": "2014-05-14T06:42:49.403", "ParentId": "23646847", "Score": "0", "OwnerUserId": "2228983"}, "23646847": {"ViewCount": "305", "Body": "<p>As specified into the standard <code>int a</code> belongs to the simple <code>declaration</code>. Actually</p>\n<pre><code>simple-declaration:\n    decl-specifier-seq_opt init-declarator-list_opt ; //\n    attribute-specifier-seq decl-specifier-seq_opt init-declarator-list ;\ntype-specifier:\n    trailing-type-specifier //\n    class-specifier\n    enum-specifier\ntrailing-type-specifier:\n    simple-type-specifier //\n    elaborated-type-specifier\n    typename-specifier\n    cv-qualifier\nsimple-type-specifier:\n    nested-name-specifieropt type-name\n    nested-name-specifier template simple-template-id\n    char\n    char16_t\n    char32_t\n    wchar_t\n    bool\n    short\n    int //\n    long\n    signed\n    unsigned\n    float\n    double\n    void\n    auto\n    decltype-specifier\n</code></pre>\n<p>Hence <code>int a</code> is a simple declaration. But if we redeclare <code>a</code> into the same scope as the following:</p>\n<pre><code>int a;\nint a;\n</code></pre>\n<p>We have </p>\n<pre><code>test.cpp:4:5: error: redefinition of \u2018int a\u2019\ntest.cpp:3:5: error: \u2018int a\u2019 previously declared here\n</code></pre>\n<p>So what exactly <code>int a</code> is? </p>\n", "Title": "What does int a mean", "CreationDate": "2014-05-14T06:09:08.577", "LastActivityDate": "2014-05-14T12:25:53.297", "CommentCount": "6", "PostTypeId": "1", "OwnerDisplayName": "user2889159", "ClosedDate": "2014-05-14T07:23:15.887", "Id": "23646847", "Score": "1", "Tags": "<c++><declaration><definition>", "AnswerCount": "4"}});