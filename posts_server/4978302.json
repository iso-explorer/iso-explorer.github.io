post_cb({"bq_ids": {"n4140": {"so_4978302_4979440_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 5873}}, "n3337": {"so_4978302_4979440_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 5644}}, "n4659": {"so_4978302_4979440_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 7356}}}, "4979440": {"Id": "4979440", "PostTypeId": "2", "Body": "<p>From <code>n3225</code>, <strong>9.2 [class.mem]</strong> <em>note 15</em></p>\n<blockquote>\n<p id=\"so_4978302_4979440_0\">Nonstatic data members of a (non-union) class with the same access control (Clause 11) are allocated so that later members have higher addresses within a class object. The order of allocation of non-static data members with different access control is unspecified (11).</p>\n</blockquote>\n<p>This means that given the following declaration:</p>\n<pre><code>class Foo {\npublic:  int a;\nprivate: int b;\npublic:  int c;\nprivate: int d;\n};\n</code></pre>\n<p>Only the following assertions are enforced by the standard:</p>\n<pre><code>Foo foo;\n\nassert(&amp;foo.a &lt; &amp;foo.c);\nassert(&amp;foo.b &lt; &amp;foo.d);\n</code></pre>\n<p>@Nawaz's citation can be interpreted as giving 4 blocks that can be freely intermixed, but this is not the case. The declaration of <code>Foo</code> is perfectly equivalent to:</p>\n<pre><code>class Foo' {\npublic:  int a,c;\nprivate: int b,d;\n};\n</code></pre>\n<p>Indeed the compiler completely ignores (for this purpose) whether a specifier appeared once or multiple times, and specifying it each time is spurious and at best slows the compilation down because of the extra parsing. For a human reader, it might be clearer... but this is highly subjective.</p>\n", "LastActivityDate": "2011-02-12T17:24:26.850", "CommentCount": "0", "CreationDate": "2011-02-12T17:24:26.850", "ParentId": "4978302", "Score": "3", "OwnerUserId": "147192"}, "4978346": {"Id": "4978346", "PostTypeId": "2", "Body": "<p>Apart from the accessibility of members outside or to the derived classes, access specifiers might affect the object layout.</p>\n<p>Quoting from my <a href=\"https://stackoverflow.com/questions/4842434/is-memory-layout-for-a-class-successive/4842474#4842474\">other answer</a>:</p>\n<p>Usually, memory address for data members increases in the order they're defined in the class . But <strong>this order may be disrupted at any place where the access-specifiers (<code>private</code>, <code>protected</code>, <code>public</code>) are encountered</strong>. This has been discussed in great detail in <a href=\"http://rads.stackoverflow.com/amzn/click/0201834545\" rel=\"nofollow noreferrer\">Inside the C++ Object Model</a> by <strong>Lippman</strong>.</p>\n<p>An excerpt from <a href=\"http://www.gotw.ca/publications/mill14.htm\" rel=\"nofollow noreferrer\">C/C++ Users Journal</a>,</p>\n<blockquote>\n<p id=\"so_4978302_4978346_0\">The compiler isn't allowed to do this\n  rearrangement itself, though. The\n  standard requires that all data that's\n  in the <strong>same</strong> public:, protected:, or\n  private: must be laid out in that\n  order by the compiler. <strong>If you\n  intersperse your data with access\n  specifiers, though, the compiler is\n  allowed to rearrange the\n  access-specifier-delimited blocks of\n  data to improve the layout</strong>, <em>which is\n  why some people like putting an access\n  specifier in front of every data\n  member</em>.</p>\n</blockquote>\n<p>Interesting, isn't it?</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2011-02-22T16:23:31.350", "Score": "6", "CreationDate": "2011-02-12T13:38:50.623", "ParentId": "4978302", "CommentCount": "20", "OwnerUserId": "415784", "LastEditDate": "2017-05-23T12:24:35.900"}, "4978302": {"ViewCount": "331", "Body": "<p>Besides the normal explenation of being visible or not to derived classes, is their any other difference?</p>\n<p>If you make it more visible, is it taking more or less memory, does it slow thing down or...?</p>\n", "AcceptedAnswerId": "4978346", "Title": "Besides accessibility, what else access-specifiers effects?", "CreationDate": "2011-02-12T13:31:06.827", "LastActivityDate": "2011-02-22T16:24:37.543", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2011-02-22T16:24:37.543", "OwnerDisplayName": "Steijn", "LastEditorUserId": "415784", "Id": "4978302", "Score": "7", "Tags": "<c++><inheritance><private><public><protected>", "AnswerCount": "2"}});