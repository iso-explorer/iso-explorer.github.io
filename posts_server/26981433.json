post_cb({"bq_ids": {"n4140": {"so_26981433_26981594_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 3913}}, "n3337": {"so_26981433_26981594_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 3773}}, "n4659": {"so_26981433_26981594_0": {"length": 9, "quality": 0.6923076923076923, "section_id": 4799}}}, "26981526": {"Id": "26981526", "PostTypeId": "2", "Body": "<p><strong>Your first function does not return anything:</strong></p>\n<pre><code>string CJpsURI::getURIwithSipIpPort()\n{\n    stringstream ss;\n    ss &lt;&lt; \"sip:\" &lt;&lt; m_ipAddr &lt;&lt; \":\" &lt;&lt; m_portAddr;\n    string out = ss.str(); // This does not get returned!\n}\n</code></pre>\n<p><strong>Try this:</strong></p>\n<pre><code>string CJpsURI::getURIwithSipIpPort()\n{\n    stringstream ss;\n    ss &lt;&lt; \"sip:\" &lt;&lt; m_ipAddr &lt;&lt; \":\" &lt;&lt; m_portAddr;\n    return ss.str(); // Now it returns something!\n}\n</code></pre>\n", "LastActivityDate": "2014-11-17T20:37:54.140", "CommentCount": "1", "CreationDate": "2014-11-17T20:37:54.140", "ParentId": "26981433", "Score": "1", "OwnerUserId": "3807729"}, "26981775": {"Id": "26981775", "PostTypeId": "2", "Body": "<p>You have two problems:</p>\n<ol>\n<li>As <a href=\"https://stackoverflow.com/users/3920237/remyabel\">remyabel</a> and <a href=\"https://stackoverflow.com/users/3807729/galik\">Galik</a> pointed out: Your function does not return. So I would Concur with <a href=\"https://stackoverflow.com/users/3807729/galik\">Galik</a> that you need to adapt your function to:</li>\n</ol>\n<p><code>string CJpsURI::getURIwithSipIpPort()</code><br>\n<code>{</code><br>\n\u2003<code>stringstream ss;</code><br>\n\u2003<code>ss &lt;&lt; \"sip:\" &lt;&lt; m_ipAddr &lt;&lt; \":\" &lt;&lt; m_portAddr;</code><br>\n\u2003<code>return ss.str();</code><br>\n<code>}</code></br></br></br></br></br></p>\n<ol start=\"2\">\n<li><p>A <code>char*</code> points to an array of <code>char</code>s. Here you want the array found inside the string returned by <code>getURIwithSipIpPort</code>. <strong>But that memory will be released as soon as this line ends!</strong> There is nothing hanging on to it. So what you really need to do is:</p>\n<p>string s{localIp.getURIwithSipIpPort()};</p></li>\n</ol>\n", "LastEditorUserId": "-1", "LastActivityDate": "2014-11-17T20:58:22.257", "Score": "3", "CreationDate": "2014-11-17T20:52:49.730", "ParentId": "26981433", "CommentCount": "2", "OwnerUserId": "2642059", "LastEditDate": "2017-05-23T11:49:27.577"}, "26981594": {"Id": "26981594", "PostTypeId": "2", "Body": "<p>The C++ standard says:</p>\n<blockquote>\n<p id=\"so_26981433_26981594_0\">\u00a7 6.7/2 <em>[..]</em> Flowing off the end of a function is equivalent to a\n  return with no value; this results in undefined behavior in a\n  value-returning function.</p>\n</blockquote>\n<p>The second problematic statement is:</p>\n<pre><code>char *s = localIp.getURIwithSipIpPort().c_str();\n</code></pre>\n<p>First, the conversion from <code>const char*</code> to <code>char*</code> is deprecated. Use <code>const char*</code>. Second, <strong>don't do this</strong> in the first place. If you want to prolong the lifetime of a temporary, use a const reference.</p>\n<pre><code>const std::string&amp; s = localIp.getURIwithSipIpPort().c_str();\n</code></pre>\n", "OwnerDisplayName": "user3920237", "LastActivityDate": "2014-11-17T20:42:29.620", "Score": "2", "CreationDate": "2014-11-17T20:42:29.620", "ParentId": "26981433", "CommentCount": "0"}, "26981433": {"ViewCount": "168", "Body": "<p>I have an issue using stringstreams</p>\n<p>When I run this code the first printf is fine but at some point it gets contaminated and prints out a shorter string. </p>\n<pre><code>string CJpsURI::getURIwithSipIpPort()\n{\n    stringstream ss;\n    ss &lt;&lt; \"sip:\" &lt;&lt; m_ipAddr &lt;&lt; \":\" &lt;&lt; m_portAddr;\n    string out = ss.str();\n}\n\nmain() {\n\n    CJpsURI localIp();\n    localIp.setIpPort(\"192.168.88.1\", 5060);\n\n    char *s = localIp.getURIwithSipIpPort().c_str();\n\n    printf(\"This is the sip port: %s\", s);  // this may be ok  -- sip:192.168.88.1:5060\n    // do some stuff\n    printf(\"This is the sip port: %s\", s);  // wrong; -- sip:192.168.8/030/004\n\n}\n</code></pre>\n<p>It almost appears that the *s is pointing to the out string on the stack which gets destroyed.  But that should not be happening since I am returning out and not a reference to out.</p>\n<p>But this seems to work.</p>\n<pre><code>string CJpsURI::getURIwithSipIpPort()\n{\n    string out = (boost::format(\"sip:%1%:%2%\") % m_ipAddr % m_portAddr).str();\n    return out;\n}\n\nmain() {\n\n    CJpsURI localIp();\n    localIp.setIpPort(\"192.168.1.1\", 5060);\n\n    char *s = localIp.getURIwithSipIpPort().c_str();\n\n    printf(\"This is the sip port: %s\", s);  // this may be ok\n    // do some stuff\n    printf(\"This is the sip port: %s\", s);  // this will be ok too;\n\n}\n</code></pre>\n<p>Any ideas would be appreciated</p>\n", "Title": "Issue with stringstream data getting corrupt.", "CreationDate": "2014-11-17T20:32:00.590", "LastActivityDate": "2014-11-17T20:58:22.257", "CommentCount": "4", "PostTypeId": "1", "Id": "26981433", "Score": "0", "OwnerUserId": "846566", "Tags": "<c++><string><stringstream>", "AnswerCount": "3"}});