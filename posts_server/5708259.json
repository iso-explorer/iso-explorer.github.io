post_cb({"5708403": {"Id": "5708403", "PostTypeId": "2", "Body": "<p>The problem is that there's no new-line character in the end of your code. C++ Standard \u00a72.1/2 says:</p>\n<blockquote>\n<p id=\"so_5708259_5708403_0\">&lt;...&gt;If a source file that is not\n  empty does not end in a new-line\n  character, or ends in a new-line\n  character immediately preceded by a\n  backslash character, the behavior is\n  undefined.</p>\n</blockquote>\n", "LastActivityDate": "2011-04-18T20:18:59.007", "CommentCount": "3", "CreationDate": "2011-04-18T20:18:59.007", "ParentId": "5708259", "Score": "10", "OwnerUserId": "123111"}, "5708259": {"ViewCount": "5248", "Body": "<p>With this code:</p>\n<pre><code>#include &lt;iostream&gt;\n\n\nint main(int argc, char *argv[])\n{\n\n  return 0;\n}\n\n\n/** run2: A macro to call a function. */\n#define run2( function, ctype, dim ) \\\nif ( operation == #function ) \\\n{ \\\n  if ( componentType == #ctype &amp;&amp; Dimension == dim ) \\\n  { \\\n    typedef itk::Image&lt; ctype, dim &gt; ImageType; \\\n    function&lt; ImageType &gt;( inputFileName, outputFileName, radius, algorithm, useCompression ); \\\n    supported = true; \\\n  } \\\n}\n</code></pre>\n<p>I get a warning: backslash-newline at end of file</p>\n<p>Any idea how to make it go away?</p>\n<p>David</p>\n", "AcceptedAnswerId": "5708403", "Title": "Backslash newline at end of file warning", "CreationDate": "2011-04-18T20:06:12.470", "Id": "5708259", "CommentCount": "7", "FavoriteCount": "0", "PostTypeId": "1", "LastActivityDate": "2014-10-01T12:04:22.660", "Score": "5", "OwnerUserId": "284529", "Tags": "<c++>", "AnswerCount": "6"}, "5708444": {"Id": "5708444", "PostTypeId": "2", "Body": "<p>At a guess, what you're missing is a new-line following the final closing brace. It's reasonable for the compiler to warn about that (the C and C++ standards say it gives undefined behavior), but the text of the message is misleading about the source of the problem.</p>\n", "LastActivityDate": "2011-04-18T20:22:40.070", "CommentCount": "0", "CreationDate": "2011-04-18T20:22:40.070", "ParentId": "5708259", "Score": "0", "OwnerUserId": "179910"}, "5708370": {"Id": "5708370", "PostTypeId": "2", "Body": "<p>The following code generates the same warning under g++ 4.3.4 and g++ 4.5.1:</p>\n<pre><code>int main() {}\n#define X \\\nY\n</code></pre>\n<p>I must say I don't understand why. But you can get rid of the warning by adding an empty line at the end of the file.</p>\n<p>Incidentally, this compiles without a warning, even without an empty last line:</p>\n<pre><code>int main() {}\n#define X Y\n</code></pre>\n<p>So it looks like a pre-processor bug to me.</p>\n<p><strong>Edited to add:</strong> OK, not a bug as such. See my other answer for a more considered view.</p>\n", "LastEditorUserId": "428857", "LastActivityDate": "2011-04-18T20:37:08.540", "Score": "1", "CreationDate": "2011-04-18T20:15:52.263", "ParentId": "5708259", "CommentCount": "0", "OwnerUserId": "428857", "LastEditDate": "2011-04-18T20:37:08.540"}, "26127812": {"Id": "26127812", "PostTypeId": "2", "Body": "<p>Having your file(<em>translation unit</em>) not end in a newline is <a href=\"http://en.wikipedia.org/wiki/Undefined_behavior\" rel=\"nofollow\">undefined behavior</a> which means the behavior of your program becomes unpredictable. Although in C++11 this changes and the pre-processor will behave as if a new-line was there.</p>\n<p>It is interesting to note why this is an issue, we can from the draft pre C++11 standard that including a file via <code>include</code> has the following effect from section <code>16.2</code> <em>Source file inclusion</em> which says:</p>\n<blockquote>\n<p id=\"so_5708259_26127812_0\">A preprocessing directive of the form</p>\n<pre><code> # include \" q-char-sequence\" new-line\n</code></pre>\n<p id=\"so_5708259_26127812_1\">causes the replacement of that directive by the entire contents of the\n  source file identified by the specifie sequence between the \"\n  delimiters.</p>\n</blockquote>\n<p>so if the included files does not end in a newline how should we deal with the combined last line of the included file and the subsequent line in the source code? There are several obvious issues, for example if the last line in the included file ends:</p>\n<ul>\n<li>in a comment</li>\n<li>in a continuation</li>\n<li>in a macro definition</li>\n</ul>\n<p>it will alter the way the source file using the include will be interpreted which is not a desirable feature. This is also covered in the <a href=\"http://c0x.coding-guidelines.com/5.1.1.2.pdf\" rel=\"nofollow\">The New C Standard</a>(<em>C also has the same rule</em>) and it says:</p>\n<blockquote>\n<p id=\"so_5708259_26127812_2\">What should the behavior be if the last line of an included file did\n  not end in a new-line? Should the characters at the start of the line\n  following the\n  #include directive be considered to be part of any preceding preprocessing token (from the last line of the included file)? Or\n  perhaps source files should be treated as containing an implicit new-line at their end.\n  This requirement simplifies the situation by rendering the behavior\n  undefined</p>\n</blockquote>\n<p>For completeness sake, pre C++11 the draft standard section <code>2.1</code> <em>Phases of translation</em> says (<em>emphasis mine going forward</em>):</p>\n<blockquote>\n<p id=\"so_5708259_26127812_3\">[...]If a source file that is not empty <strong>does not end in a new-line\n  character</strong>, or ends in a new-line character immediately preceded by a\n  backslash character, the <strong>behavior is undefined</strong>.</p>\n</blockquote>\n<p>and the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf\" rel=\"nofollow\">C++11 draft standard</a> says:</p>\n<blockquote>\n<p id=\"so_5708259_26127812_4\">[...]A source file that is not empty and that does not end in a\n  new-line character, or that ends in a new-line character immediately\n  preceded by a backslash character before any such splicing takes\n  place, <strong>shall be processed as if an additional new-line character were\n  appended to the file.</strong></p>\n</blockquote>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2014-10-01T12:04:22.660", "Score": "2", "CreationDate": "2014-09-30T18:38:37.653", "ParentId": "5708259", "CommentCount": "1", "OwnerUserId": "1708801", "LastEditDate": "2014-10-01T12:04:22.660"}, "5708465": {"Id": "5708465", "PostTypeId": "2", "Body": "<p>May be the last line in your file doesn't terminate with a newline? The final newline at the end of a file is required but there are editors that just for the fun of being annoying don't write it (IIRC visual studio).</p>\n", "LastActivityDate": "2011-04-18T20:24:32.763", "CommentCount": "0", "CreationDate": "2011-04-18T20:24:32.763", "ParentId": "5708259", "Score": "0", "OwnerUserId": "320726"}, "bq_ids": {"n4140": {"so_5708259_26127812_3": {"length": 16, "quality": 1.0, "section_id": 5313}, "so_5708259_26127812_1": {"length": 11, "quality": 0.9166666666666666, "section_id": 505}, "so_5708259_5708581_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 5313}, "so_5708259_5708403_0": {"length": 16, "quality": 1.0, "section_id": 5313}, "so_5708259_26127812_4": {"length": 26, "quality": 1.0, "section_id": 5313}}, "n3337": {"so_5708259_26127812_3": {"length": 16, "quality": 1.0, "section_id": 5110}, "so_5708259_26127812_1": {"length": 11, "quality": 0.9166666666666666, "section_id": 496}, "so_5708259_5708581_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 5110}, "so_5708259_5708403_0": {"length": 16, "quality": 1.0, "section_id": 5110}, "so_5708259_26127812_4": {"length": 26, "quality": 1.0, "section_id": 5110}}, "n4659": {"so_5708259_26127812_3": {"length": 16, "quality": 1.0, "section_id": 6737}, "so_5708259_26127812_1": {"length": 11, "quality": 0.9166666666666666, "section_id": 526}, "so_5708259_5708581_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 6737}, "so_5708259_5708403_0": {"length": 16, "quality": 1.0, "section_id": 6737}, "so_5708259_26127812_4": {"length": 26, "quality": 1.0, "section_id": 6737}}}, "5708581": {"Id": "5708581", "PostTypeId": "2", "Body": "<p>As Kirill V. Lyadvinsky pointed out, the current standard insists on a newline at the end of every source file. Fortunately, the behaviour on non-conforming input is undefined, so compilers are free to ignore this silly rule. Mostly they do. But the standard leaves the pre-processor free to reject such cases, and you seem to have stumbled on such a case. Surely g++ doesn't reject it out of pique? So it must be (not a bug, because the standard allows it, but) unintended behaviour.  </p>\n<p>The good news is that C++11 gets it right:</p>\n<blockquote>\n<p id=\"so_5708259_5708581_0\"><strong>2.2 Phases of translation</strong><br>\n  A source file that is not empty and\n  that does not end in a new-line\n  character, or that ends in a new-line\n  character immediately preceded by a\n  backslash character before any such\n  splicing takes place, shall be\n  processed as if an additional new-line\n  character were appended to the file.</br></p>\n</blockquote>\n<p>So your code will compile in the near future.</p>\n", "LastActivityDate": "2011-04-18T20:36:05.263", "CommentCount": "0", "CreationDate": "2011-04-18T20:36:05.263", "ParentId": "5708259", "Score": "0", "OwnerUserId": "428857"}});