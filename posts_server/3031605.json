post_cb({"5435269": {"ParentId": "3031605", "CommentCount": "0", "Body": "<p>You can make this work if all your union types are pointers, by using a void pointer as the first element of the union. All pointers can be converted to a void pointer, so your union can be initialized with an arbitrary pointer type. For the given example, you get:</p>\n<pre><code>struct Data\n{\n   int x;\n   union\n   {\n      const void* unused;\n      const Data* data;\n      struct {int x; int y; }*; //Not sure this works written like this\n      const char* asChar;\n      const int*  asInt;\n   };\n};\n\nstatic Data d1;\nstatic Data d2 = {2, &amp;d1};\nstatic Data d3 = {1, \"Hello, world!\"};\n</code></pre>\n<p>The other possibility is to do this in C instead. In C you can specify which part of the union is initialized. Using your original struct (and giving your structure the name asStruct):</p>\n<pre><code>static Data d1;\nstatic Data d2 = {2, &amp;d1};\nstatic Data d3 = {3, {.asStruct = {0,0}}\n</code></pre>\n", "OwnerUserId": "178003", "PostTypeId": "2", "Id": "5435269", "Score": "1", "CreationDate": "2011-03-25T16:29:36.997", "LastActivityDate": "2011-03-25T16:29:36.997"}, "3031623": {"ParentId": "3031605", "CommentCount": "2", "Body": "<p>Change it to:</p>\n<pre><code>struct Data\n{\n   int x;\n   union\n   {\n      const Data* data;\n      char ch;\n   };\n};\n\nstatic Data d1;\nstatic Data d = {1, &amp;d1};\n</code></pre>\n", "OwnerUserId": "253056", "PostTypeId": "2", "Id": "3031623", "Score": "1", "CreationDate": "2010-06-13T08:48:04.437", "LastActivityDate": "2010-06-13T08:48:04.437"}, "3031696": {"ParentId": "3031605", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2010-06-13T09:19:56.600", "OwnerUserId": "49942", "CommunityOwnedDate": "2010-06-13T09:19:56.600", "Id": "3031696", "Score": "5", "Body": "<p>Can you do it by defining overloaded constructors? Untested code ahead:</p>\n<pre><code>struct Data \n{ \n    int x; \n    union \n    { \n        const Data* data; \n        struct {int a; int b; } z; \n    } y;\n\n    Data()\n    {\n        x = 0;\n        y.data = 0;\n        y.z.a = 0;\n        y.z.b = 0;\n    }\n\n    Data(int x_, Data* data_)\n    {\n        x = x_;\n        y.data = data_;\n    }\n\n    Data(int x_, int a_, int b_)\n    {\n        x = x_;\n        y.z.a = a_;\n        y.z.b = b_;\n    }\n}; \n\nstatic Data d1; \nstatic Data d(1, &amp;d1); \nstatic Data d2(1, 1, 2); \n</code></pre>\n", "LastActivityDate": "2010-06-13T09:19:56.600"}, "3031653": {"ParentId": "3031605", "CommentCount": "1", "Body": "<p>ISO C++03 8.5.1[dcl.init.aggr]/15:</p>\n<blockquote>\n<p id=\"so_3031605_3031653_0\">When a union is initialized with a brace-enclosed initializer, the braces <strong>shall only contain an initializer for the first member of the union</strong>. [Example:</p>\n<pre><code>union u { int a; char* b; };\nu a = { 1 };\nu b = a;\nu c = 1; // error\nu d = { 0, \"asdf\" }; // error\nu e = { \"asdf\" }; // error\n</code></pre>\n<p id=\"so_3031605_3031653_1\">\u2014end example] </p>\n</blockquote>\n<p>So, generally speaking, it can't be done.</p>\n", "OwnerUserId": "111335", "PostTypeId": "2", "Id": "3031653", "Score": "24", "CreationDate": "2010-06-13T09:03:03.657", "LastActivityDate": "2010-06-13T09:03:03.657"}, "3031605": {"CommentCount": "0", "ViewCount": "6655", "PostTypeId": "1", "LastEditorUserId": "718379", "CreationDate": "2010-06-13T08:42:04.000", "LastActivityDate": "2012-10-08T15:39:04.760", "Title": "Statically initialize anonymous union in C++", "AcceptedAnswerId": "3031696", "LastEditDate": "2012-10-08T15:39:04.760", "Id": "3031605", "Score": "13", "Body": "<p>I am trying to statically initialize the following structure in Visual Studio 2010:</p>\n<pre><code>struct Data\n{\n   int x;\n   union\n   {\n      const Data* data;\n      struct {int x; int y; };\n   };\n};\n</code></pre>\n<p>The following is fails with <code>error C2440: 'initializing' : cannot convert from 'Data *' to 'char'</code>.</p>\n<pre><code>static Data d1;\nstatic Data d = {1, &amp;d1};\nstatic Data d2 = {1, {1, 2}};\n</code></pre>\n<p>I have found references to some ways this can be initialized properly but none of them work in VS2010. Any ideas?</p>\n", "Tags": "<c++><visual-c++><initialization><unions>", "OwnerUserId": "275449", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_3031605_3031653_0": {"section_id": 3312, "quality": 0.8333333333333334, "length": 10}}, "n3337": {"so_3031605_3031653_0": {"section_id": 3182, "quality": 0.8333333333333334, "length": 10}}, "n4659": {"so_3031605_3031653_0": {"section_id": 4078, "quality": 0.8333333333333334, "length": 10}}}});