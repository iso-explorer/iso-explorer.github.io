post_cb({"35574197": {"Id": "35574197", "PostTypeId": "2", "Body": "<p>No, it does not make any guarantees about how references are implemented. The C++ language only defines the semantics of references, not their implementation.</p>\n", "LastActivityDate": "2016-02-23T09:55:26.393", "CommentCount": "0", "CreationDate": "2016-02-23T09:55:26.393", "ParentId": "35574143", "Score": "4", "OwnerUserId": "91757"}, "bq_ids": {"n4140": {"so_35574143_35574270_0": {"length": 5, "quality": 1.0, "section_id": 3221}}, "n3337": {"so_35574143_35574270_0": {"length": 5, "quality": 1.0, "section_id": 3095}}, "n4659": {"so_35574143_35574270_0": {"length": 5, "quality": 1.0, "section_id": 3978}}}, "35574270": {"Id": "35574270", "PostTypeId": "2", "Body": "<p>If you mean that a reference requires the compiler to allocate storage for a pointer, then that's unspecified.</p>\n<blockquote>\n<h3>\u00a7 8.3.2/4</h3>\n<p id=\"so_35574143_35574270_0\">It is unspecified whether or not a reference requires storage.</p>\n</blockquote>\n<p><strong>EDIT:</strong> To record Martin Bonner's comment as a  useful, practical note,</p>\n<blockquote>\n<p id=\"so_35574143_35574270_1\">[F]or debugging purposes it can be quite useful to know what is going on \"under the hood\". (E.g. to answer questions like \"why hasn't this gone completely off the rails?\"). In practise, compilers all implement references as pointers (unless they can optimize the reference completely away).</p>\n</blockquote>\n", "LastEditorUserId": "602372", "LastActivityDate": "2016-02-24T14:04:49.877", "Score": "10", "CreationDate": "2016-02-23T09:58:28.073", "ParentId": "35574143", "CommentCount": "1", "OwnerUserId": "602372", "LastEditDate": "2016-02-24T14:04:49.877"}, "35574213": {"Id": "35574213", "PostTypeId": "2", "Body": "<p>The standard doesn't say how a reference is implemented, just how it works.</p>\n<p>It also doesn't say anything about stack frames, that's another implementation detail.</p>\n", "LastActivityDate": "2016-02-23T09:56:06.713", "CommentCount": "0", "CreationDate": "2016-02-23T09:56:06.713", "ParentId": "35574143", "Score": "4", "OwnerUserId": "597607"}, "35574143": {"ViewCount": "195", "Body": "<p>Looking at references in C++ I noticed that all implementations I looked at used a pointer internally.</p>\n<p>Does the C++ Standard guarantee that a reference will use a pointer internally or would it be ok for an implementation to use a more \"efficient\" solution? (I would currently not see how it could be done \"better\" because when a new stack frame is created there's not really a bulletproof way to know easily at what offset from the stack base pointer the variable that is being referenced is at because the stack is quite dynamic)</p>\n<p>Note: I do understand the difference between a pointer and a reference in C++ (This question has nothing to do with that)</p>\n", "AcceptedAnswerId": "35574270", "Title": "Are C++ references guaranteed to use pointers \"internally\"?", "CreationDate": "2016-02-23T09:53:19.143", "Id": "35574143", "CommentCount": "10", "PostTypeId": "1", "LastActivityDate": "2016-02-24T14:04:49.877", "Score": "5", "OwnerUserId": "1001563", "Tags": "<c++><c++14>", "AnswerCount": "3"}});