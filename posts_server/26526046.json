post_cb({"26526046": {"CommentCount": "0", "ViewCount": "37", "CreationDate": "2014-10-23T10:22:53.587", "LastActivityDate": "2014-10-23T10:35:05.947", "Title": "What happens if you specify an allocator where the value_types are different?", "AcceptedAnswerId": "26526106", "PostTypeId": "1", "Id": "26526046", "Score": "2", "Body": "<p>Say I declare <code>std::vector&lt;std::string, std::allocator&lt;char&gt;&gt;</code>. What's the worse that can happen? I ran it and didn't seem to run into any memory errors. </p>\n", "Tags": "<c++>", "OwnerUserId": "4173463", "AnswerCount": "2"}, "26526106": {"ParentId": "26526046", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>It results in undefined behavior. For allocator-aware containers like <code>vector</code> the standard specifies in Table 99:</p>\n<blockquote>\n<p id=\"so_26526046_26526106_0\"><em>Requires:</em> <code>allocator_type::value_type</code> is the same as <code>X::value_type</code>.</p>\n</blockquote>\n<p><sub>(Note that the same row also specifies that <code>allocator_type</code> <strong>must be</strong> a typedef for the template argument of the container-specialization)</sub><br><br>\nAnd acccording to [res.on.functions]/2:</br></br></p>\n<blockquote>\n<p id=\"so_26526046_26526106_1\">In particular, the effects are undefined in the following cases: <br>[\u2026] <br>\u2014\n  for types used as template arguments when instantiating a template\n  component, if the operations on the type do not implement the\n  semantics of the applicable Requirements subclause (17.6.3.5, 23.2,\n  24.2, 26.2).</br></br></p>\n</blockquote>\n", "OwnerUserId": "3647361", "LastEditorUserId": "3647361", "LastEditDate": "2014-10-23T10:35:05.947", "Id": "26526106", "Score": "2", "CreationDate": "2014-10-23T10:26:30.083", "LastActivityDate": "2014-10-23T10:35:05.947"}, "26526073": {"ParentId": "26526046", "CommentCount": "1", "Body": "<p>I guess the compiler optimized it implicitly but the worst case would be undefined behavior</p>\n", "OwnerUserId": "4138741", "PostTypeId": "2", "Id": "26526073", "Score": "-2", "CreationDate": "2014-10-23T10:24:33.397", "LastActivityDate": "2014-10-23T10:24:33.397"}, "bq_ids": {"n4140": {"so_26526046_26526106_1": {"section_id": 6324, "quality": 0.782608695652174, "length": 18}}, "n3337": {"so_26526046_26526106_1": {"section_id": 6081, "quality": 0.782608695652174, "length": 18}}, "n4659": {"so_26526046_26526106_1": {"section_id": 7834, "quality": 0.782608695652174, "length": 18}}}});