post_cb({"bq_ids": {"n4140": {"so_25987133_25987392_1": {"length": 18, "quality": 0.9473684210526315, "section_id": 7230}, "so_25987133_25987392_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 3232}}, "n3337": {"so_25987133_25987392_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 3105}, "so_25987133_25987392_1": {"length": 18, "quality": 0.9473684210526315, "section_id": 6974}}, "n4659": {"so_25987133_25987392_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 3989}, "so_25987133_25987392_1": {"length": 12, "quality": 0.631578947368421, "section_id": 8741}}}, "25987133": {"ViewCount": "6387", "Body": "<p>I need to create two references to an array which could be refer to the same array. I tried the following:</p>\n<pre><code>extern int (&amp;a)[];\nextern int (&amp;b)[];\n\nint main()\n{\n    b = a; // error: array type 'int []' is not assignable\n}\n</code></pre>\n<p>Is there a way to do that in c++?</p>\n", "AcceptedAnswerId": "25987392", "Title": "array type is not assignable", "CreationDate": "2014-09-23T04:52:53.640", "Id": "25987133", "CommentCount": "6", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "LastActivityDate": "2014-09-24T05:26:46.717", "Score": "2", "Tags": "<c++><arrays>", "AnswerCount": "1"}, "25987392": {"Id": "25987392", "PostTypeId": "2", "Body": "<p>Two things: first <a href=\"http://en.cppreference.com/w/cpp/language/array\" rel=\"nofollow\">arrays</a> cannot appear on the left hand of an assignment operator. cppreference probably takes its text directly from the standard, particularly:</p>\n<p>\u00a7 8.3.4</p>\n<blockquote>\n<p id=\"so_25987133_25987392_0\"><sup>5</sup> Objects of array types cannot be modified, see 3.10.</p>\n</blockquote>\n<p>Also, like cppreference says, arrays are lvalues:</p>\n<p>\u00a7 3.10</p>\n<blockquote>\n<p id=\"so_25987133_25987392_1\"><sup>1</sup> Expressions are categorized according to the taxonomy in\n  Figure 1. \u2014 An lvalue (so called, historically, because lvalues could\n  appear on the left-hand side of an assignment expression) designates a\n  function or an object.</p>\n</blockquote>\n<p>Although, the standard explicitly says that objects of array types cannot be modified, therefore concluding that arrays (which are objects) cannot appear on the left hand side of the assignment operator.</p>\n<p>Secondly, while the compiler may not complain if you do this:</p>\n<pre><code>int a = 50, c = 42;\nint&amp; b = a;\nb = c;\nb = 80;\nstd::cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; c; // 80 42\n</code></pre>\n<p>you will see that <code>c</code> remains unchanged. Please refer to the <a href=\"http://www.parashift.com/c++-faq/index.html\" rel=\"nofollow\">parashift C++-faq</a>.</p>\n<p><a href=\"http://www.parashift.com/c++-faq/reseating-refs.html\" rel=\"nofollow\">[8.5] How can you reseat a reference to make it refer to a different object?</a></p>\n<blockquote>\n<p id=\"so_25987133_25987392_2\">No way.</p>\n<p id=\"so_25987133_25987392_3\">You can't separate the reference from the referent.</p>\n<p id=\"so_25987133_25987392_4\">Unlike a pointer, once a reference is bound to an object, it can <em>not</em>\n  be \"reseated\" to another object. The reference itself isn't an object\n  (it has no identity; taking the address of a reference gives you the\n  address of the referent; remember: the reference <em>is</em> its referent).</p>\n</blockquote>\n", "LastEditorDisplayName": "user3920237", "OwnerDisplayName": "user3920237", "LastActivityDate": "2014-09-24T05:26:46.717", "Score": "4", "CreationDate": "2014-09-23T05:18:39.510", "ParentId": "25987133", "CommentCount": "2", "LastEditDate": "2014-09-24T05:26:46.717"}});