post_cb({"bq_ids": {"n4140": {"so_4225176_4225183_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 529}}, "n3337": {"so_4225176_4225183_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 520}}, "n4659": {"so_4225176_4225183_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 550}}}, "4227255": {"Id": "4227255", "PostTypeId": "2", "Body": "<p>icecrime is correct, but something important to point out in the definition is that the tokens need to be valid preprocessing tokens. Examples:</p>\n<pre><code>#define CONCAT(a,b) a ## b\nCONCAT(ClassyClass, &lt;int&gt;); // bad, &lt;int&gt; is not a valid preprocessing token\nCONCAT(Symbol, __LINE__); // valid as both are valid tokens\n</code></pre>\n", "LastActivityDate": "2010-11-19T16:44:24.827", "CommentCount": "2", "CreationDate": "2010-11-19T16:44:24.827", "ParentId": "4225176", "Score": "4", "OwnerUserId": "365086"}, "4225183": {"Id": "4225183", "PostTypeId": "2", "Body": "<p>The <code>##</code> in a macro is concatenation. Here, <code>MAKE_TYPE(test)</code> will expand to : <code>typedef int testId</code>.</p>\n<p>From 16.3.3 (The ## operator) :</p>\n<blockquote>\n<p id=\"so_4225176_4225183_0\">For both object-like and function-like\n  macro invocations, before the\n  replacement list is reexamined for\n  more macro names to replace, each\n  instance of a ## preprocessing token\n  in the replacement list (not from an\n  argument) is deleted and the preceding\n  preprocessing token is concatenated\n  with the following preprocessing token</p>\n</blockquote>\n", "LastEditorUserId": "451980", "LastActivityDate": "2010-11-19T13:03:46.457", "Score": "22", "CreationDate": "2010-11-19T12:54:36.840", "ParentId": "4225176", "CommentCount": "1", "OwnerUserId": "451980", "LastEditDate": "2010-11-19T13:03:46.457"}, "4225176": {"ViewCount": "1287", "Body": "<p>In the below code, what does the <code>##</code> do?</p>\n<pre><code> #define MAKE_TYPE(myname) \\\n typedef int myname ## Id; \\\n</code></pre>\n", "Title": "What does a double hash (##) in a macro mean?", "CreationDate": "2010-11-19T12:53:35.270", "LastActivityDate": "2015-02-17T15:58:33.040", "CommentCount": "1", "LastEditDate": "2015-02-17T15:58:33.040", "PostTypeId": "1", "LastEditorUserId": "1711796", "Id": "4225176", "Score": "12", "OwnerUserId": "485069", "Tags": "<c++><c>", "AnswerCount": "2"}});