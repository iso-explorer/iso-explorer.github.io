post_cb({"9474827": {"Id": "9474827", "PostTypeId": "2", "Body": "<p>No, the only way to avoid them is to use inline declaration directly in header file like in</p>\n<pre><code>class MyClass\n{\n  void my_method() { implementation };\n  ...\n}\n</code></pre>\n", "LastActivityDate": "2012-02-28T00:56:01.513", "CommentCount": "0", "CreationDate": "2012-02-28T00:56:01.513", "ParentId": "9474800", "Score": "0", "OwnerUserId": "121747"}, "bq_ids": {"n4140": {"so_9474800_9474816_0": {"length": 17, "quality": 1.0, "section_id": 5884}}, "n3337": {"so_9474800_9474816_0": {"length": 17, "quality": 1.0, "section_id": 5655}}, "n4659": {"so_9474800_9474816_0": {"length": 17, "quality": 1.0, "section_id": 7367}}}, "9474800": {"ViewCount": "77", "Body": "<p>Is there any way in which to simplify the explicit statement of the class when implementing methods in the cpp file that was previously contracted in the h file?</p>\n<p>Something like...</p>\n<pre><code>MyClass:: {\nvoid my_method() { implementation };\nvoid my_other() { implementation };\n}\n</code></pre>\n", "Title": "Is there anyway to avoid repetitive class instantiations for all methods in the cpp file?", "CreationDate": "2012-02-28T00:53:00.210", "LastActivityDate": "2012-03-01T02:45:20.067", "CommentCount": "0", "LastEditDate": "2012-03-01T02:45:20.067", "PostTypeId": "1", "LastEditorUserId": "1181783", "Id": "9474800", "Score": "1", "OwnerUserId": "1233617", "Tags": "<c++><class><declaration><explicit>", "AnswerCount": "3"}, "9474856": {"Id": "9474856", "PostTypeId": "2", "Body": "<p>There isn't, but a good IDE will offer some Refactoring facilities to ease the typing. For Visual Studio, <a href=\"http://wholetomato.com\" rel=\"nofollow\">VisualAssist</a> is a good plugin (not affiliated in any way).</p>\n<p>You could optionally create your own macro, something like:</p>\n<pre><code>// This is very ungly, probably best avoided\n#define lessTyping(method) MyClass::##method()\n\nlessTyping(my_method)\n{\n}\n</code></pre>\n<p>But it would really hurt readbility.</p>\n", "LastActivityDate": "2012-02-28T00:59:25.320", "CommentCount": "0", "CreationDate": "2012-02-28T00:59:25.320", "ParentId": "9474800", "Score": "1", "OwnerUserId": "1181783"}, "9474816": {"Id": "9474816", "PostTypeId": "2", "Body": "<p>No.</p>\n<p>C++11 standard <code>\u00a79.3 [class.mfct] p5</code>:</p>\n<blockquote>\n<p id=\"so_9474800_9474816_0\">If the definition of a member function is lexically outside its class definition, the member function name shall be qualified by its class name using the <code>::</code> operator.</p>\n</blockquote>\n", "LastActivityDate": "2012-02-28T00:55:00.213", "CommentCount": "5", "CreationDate": "2012-02-28T00:55:00.213", "ParentId": "9474800", "Score": "0", "OwnerUserId": "500104"}});