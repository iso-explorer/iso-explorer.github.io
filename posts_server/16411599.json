post_cb({"16411599": {"ViewCount": "2163", "Body": "<p>I am implementing a service in Windows.  VisualStudio 2012 has the following function typedef:</p>\n<pre><code>typedef VOID WINAPI SERVICE_MAIN_FUNCTIONW (\n    DWORD dwNumServicesArgs,\n    LPWSTR *lpServiceArgVectors\n);\n</code></pre>\n<p>There is also a function pointer typedef:</p>\n<pre><code>typedef VOID (WINAPI *LPSERVICE_MAIN_FUNCTIONW)(\n    DWORD   dwNumServicesArgs,\n    LPWSTR  *lpServiceArgVectors\n);\n</code></pre>\n<p>How do I define a function with this function signature, using the typedef?</p>\n", "AcceptedAnswerId": "16411664", "Title": "Defining a function using a function typedef in C++", "CreationDate": "2013-05-07T05:10:01.203", "Id": "16411599", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2017-02-27T13:10:27.693", "Score": "4", "OwnerUserId": "2105930", "Tags": "<c++><visual-studio-2012><typedef>", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_16411599_16411743_0": {"length": 9, "quality": 0.9, "section_id": 3246}}, "n3337": {"so_16411599_16411743_0": {"length": 9, "quality": 0.9, "section_id": 3119}}, "n4659": {"so_16411599_16411743_0": {"length": 9, "quality": 0.9, "section_id": 4004}}}, "42486652": {"Id": "42486652", "PostTypeId": "2", "Body": "<p>With C++11, you can use the the fact that lambdas with empty capture lists are convertible to function pointers to declare and define a function that matches a function typedef in one expression, e.g:</p>\n<pre><code>using my_function_t = void(*)(int,int);\n\nmy_function_t add_function = [](int x, int y) { return x + y; };\n</code></pre>\n", "LastActivityDate": "2017-02-27T13:10:27.693", "Score": "0", "CreationDate": "2017-02-27T13:10:27.693", "ParentId": "16411599", "CommentCount": "0", "OwnerUserId": "938694"}, "16411743": {"Id": "16411743", "PostTypeId": "2", "Body": "<p>Quoting the current C++ Standard (C++11):</p>\n<p>[dcl.fct]/10</p>\n<blockquote>\n<p id=\"so_16411599_16411743_0\">A typedef of function type may be used to declare a function but shall not be used to define a function (8.4).\n  [Example:</p>\n<pre><code>typedef void F();\nF fv;             // OK: equivalent to void fv();\nF fv { }          // ill-formed\nvoid fv() { }     // OK: definition of fv\n</code></pre>\n<p id=\"so_16411599_16411743_1\">\u2014end example ]</p>\n</blockquote>\n<p>That is, you can declare but not define the function using that <code>typedef</code>. You have to specify the signature explicitly, see Alex Farber's answer.</p>\n<hr>\n<p>To some extent, you can use the <code>typedef</code> to \"define\" the function, but it involves some template magic. It's a just-for-fun example to show that you can actually use it to define a function.</p>\n<pre><code>// extra definitions for SSCCE\n  typedef unsigned int DWORD;\n  typedef wchar_t* LPWSTR;\n  #define VOID void\n  #define WINAPI\n\n// function ptr\ntypedef VOID (WINAPI *LPSERVICE_MAIN_FUNCTIONW)(\n    DWORD   dwNumServicesArgs,\n    LPWSTR  *lpServiceArgVectors\n);\n\n// function typedef\ntypedef VOID WINAPI SERVICE_MAIN_FUNCTIONW (\n    DWORD dwNumServicesArgs,\n    LPWSTR *lpServiceArgVectors\n);\n\n\ntemplate &lt; typename... TT &gt;\nstruct disassemble_funcptr\n{};\ntemplate &lt; typename Ret, typename... Args &gt;\nstruct disassemble_funcptr &lt; Ret(Args...) &gt;\n{\n    typedef Ret return_type;\n\n    static Ret Func(Args...)\n    {\n        /* your code here */\n    }\n};\n\n// using the typedef SERVICE_MAIN_FUNCTIONW to define the function\nLPSERVICE_MAIN_FUNCTIONW my_func_ptr =\n  &amp; disassemble_funcptr &lt; SERVICE_MAIN_FUNCTIONW &gt; :: Func;\n\nint main()\n{\n    LPWSTR str = nullptr;\n    my_func_ptr(42, &amp;str);\n}\n</code></pre>\n</hr>", "LastEditorUserId": "420683", "LastActivityDate": "2013-05-07T05:45:51.123", "Score": "6", "CreationDate": "2013-05-07T05:22:25.680", "ParentId": "16411599", "CommentCount": "0", "LastEditDate": "2013-05-07T05:45:51.123", "OwnerUserId": "420683"}, "16411664": {"Id": "16411664", "PostTypeId": "2", "Body": "<p>You don't need (and cannot) use typedef in a function definition. To make a service  main function, just write:</p>\n<pre><code>VOID WINAPI SvcMain( DWORD dwNumServicesArgs, LPWSTR *lpServiceArgVectors )\n{\n    // ...\n}\n</code></pre>\n<p><code>LPSERVICE_MAIN_FUNCTIONW</code> is used internally by Windows to call every service start point. Generally, you need function pointer <code>typedef</code> to call, and not to define a function.</p>\n", "LastActivityDate": "2013-05-07T05:15:48.587", "Score": "1", "CreationDate": "2013-05-07T05:15:48.587", "ParentId": "16411599", "CommentCount": "0", "OwnerUserId": "279313"}, "16411646": {"Id": "16411646", "PostTypeId": "2", "Body": "<p>A function cannot be <em>defined</em> <strike>(or declared)</strike> using a <code>typedef</code>. It has to be defined in the conventional way. e.g.</p>\n<pre><code>void foo (type1 t1, type2 t2) // t1 and t2 are objects which can be ... \n{                             // ... visible only in conventional way\n  ...\n}\n</code></pre>\n<p>Function pointer typedef can declare function pointer, which can be assigned with the function's address:</p>\n<pre><code>typedef void (*PF)(type1, type2);\nPF pf = &amp;foo;\n</code></pre>\n", "LastEditorUserId": "514235", "LastActivityDate": "2013-05-07T05:46:23.360", "Score": "1", "CreationDate": "2013-05-07T05:13:48.457", "ParentId": "16411599", "CommentCount": "4", "LastEditDate": "2013-05-07T05:46:23.360", "OwnerUserId": "514235"}});