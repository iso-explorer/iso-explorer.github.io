post_cb({"bq_ids": {"n4140": {"so_16499683_16499784_0": {"length": 24, "quality": 0.7741935483870968, "section_id": 6046}}, "n3337": {"so_16499683_16499784_0": {"length": 29, "quality": 0.9354838709677419, "section_id": 5814}}, "n4659": {"so_16499683_16499784_0": {"length": 23, "quality": 0.7419354838709677, "section_id": 7545}}}, "16499784": {"Id": "16499784", "PostTypeId": "2", "Body": "<p>It is well-defined. As per ISO/IEC 14882:2011 [expr.reinterpret.cast]\u00a77 (emphasis mine):</p>\n<blockquote>\n<p id=\"so_16499683_16499784_0\">An object pointer can be explicitly converted to an object pointer of\n  a different type. When a prvalue v of type \u201cpointer to T1\u201d is\n  converted to the type \u201cpointer to <em>cv</em> T2\u201d, the result is <strong>static_cast&lt;cv\n  T2*&gt;(static_cast&lt;<em>cv</em> void*&gt;(v))</strong> if both T1 and T2 are standard-layout\n  types (3.9) and the alignment requirements of T2 are no stricter than\n  those of T1, <strong>or if either type is void.</strong></p>\n</blockquote>\n", "LastEditorUserId": "1782465", "LastActivityDate": "2013-05-12T19:56:17.780", "Score": "3", "CreationDate": "2013-05-11T17:19:45.687", "ParentId": "16499683", "CommentCount": "2", "OwnerUserId": "1782465", "LastEditDate": "2013-05-12T19:56:17.780"}, "16499683": {"ViewCount": "259", "Body": "<p>Simply: If i <code>static_cast</code> a type <code>X*</code> to <code>void*</code>, is it always safe to <code>reinterpret_cast</code> it back to X*?</p>\n<p>I am unable to produce any case where this fails for example:</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct a\n{\n    int* m_array;\n};\n\nint main()\n{\n    bool fail = false;\n\n    for(int i = 0; ++i &lt; 5000;)\n    {\n        a* pA = new a;\n        pA-&gt;m_array = new int [i+1]; // A new size of data everytime\n        pA-&gt;m_array[i] = 10;\n\n        void* pvA = static_cast&lt;void*&gt;(pA);\n        pA = reinterpret_cast&lt;a*&gt;(pvA);\n\n        if(pA-&gt;m_array[i] != 10)\n        {\n            fail = true;\n            break;\n        }\n\n        delete []pA-&gt;m_array;\n        delete pA;\n    }\n\n        if(fail)\n            std::cout&lt;&lt;\"FAILED!!\";\n        else\n            std::cout&lt;&lt;\"Never failed :/\";\n}\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/view?id=afb09f0c08b672521eb2aa99a04cca24-7063104e283ed82d51a6fde7370c6e59\" rel=\"nofollow\">Link to compiled example</a></p>\n<p>Gives the result \"Never failed :/\" in both debug and release mode with vs 2012. However this is most likely undefined behavior. Right?</p>\n", "AcceptedAnswerId": "16499784", "Title": "Is it unsafe to mix static and reinterpret cast when casting to and back from void*?", "CreationDate": "2013-05-11T17:10:36.253", "Id": "16499683", "CommentCount": "6", "PostTypeId": "1", "LastActivityDate": "2013-05-12T19:56:17.780", "Score": "2", "OwnerUserId": "1339333", "Tags": "<c++><casting><reinterpret-cast>", "AnswerCount": "1"}});