post_cb({"42958577": {"ParentId": "42957970", "CommentCount": "1", "Body": "<p>You are correct when you assume that  everything that's in the standard library is contained in the <code>std</code> namespace, <em>with a few exceptions</em>, as per 17.6.1.1/\u00a73 in the standard:</p>\n<blockquote>\n<p id=\"so_42957970_42958577_0\">All library entities except macros, <strong>operator new</strong> and <strong>operator delete</strong> are defined within the namespace <strong>std</strong> or namespaces nested within namespace <strong>std</strong>. It is unspecified whether names declared in a specific namespace are declared directly in that namespace or in an inline namespace inside that namespace.</p>\n</blockquote>\n<p>Then, when you say \"the libraries\", there's only one library here, the \"standard library\". <code>iostream</code> is a header of this library. But that doesn't mean everything from a header is in a specific namespace. </p>\n<p>For example, <code>cin</code> and <code>cout</code> are directly in the <code>std</code> namespace, but are included with the <code>&lt;iostream&gt;</code> header.</p>\n", "OwnerUserId": "1594913", "PostTypeId": "2", "Id": "42958577", "Score": "1", "CreationDate": "2017-03-22T17:20:04.863", "LastActivityDate": "2017-03-22T17:20:04.863"}, "42957970": {"CommentCount": "4", "ViewCount": "56", "PostTypeId": "1", "LastEditorUserId": "6011446", "CreationDate": "2017-03-22T16:50:18.690", "LastActivityDate": "2017-03-23T04:38:44.990", "Title": "Hierarchy of namespaces, headers and objects", "LastEditDate": "2017-03-23T04:38:44.990", "Id": "42957970", "Score": "0", "Body": "<p>From what I understand, the namespace std contains all of C++ standard libraries, and one of the standard libraries is the iostream and it has the objects cout and cin. </p>\n<pre><code>std namespace \n       |\n   iostream\n       |\n   cout, cin\n</code></pre>\n<p>Is the above structure correct? Or is it different?</p>\n", "Tags": "<c++>", "OwnerUserId": "6011446", "AnswerCount": "2"}, "42958524": {"ParentId": "42957970", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_42957970_42958524_0\">From what I understand, the namespace std contains all of C++ standard\n  libraries, and one of the standard libraries is the iostream and it\n  has the functions cout and cin.</p>\n</blockquote>\n<p>Not quite.</p>\n<ul>\n<li>Although almost all of the standard library is in namespace <code>std</code>, we also have the C components outside of <code>std</code> when using the old header form (<code>&lt;stdio.h&gt;</code> instead of <code>&lt;cstdio&gt;</code>), and the <code>assert</code> macro, which is not scoped.</li>\n<li><code>std::cin</code> and <code>std::cout</code> are not functions but objects.</li>\n<li><code>&lt;iostream&gt;</code> is just the name of a header which contains <em>parts</em> of what the C++ ISO standard officially names \"Input/output library\" (<code>std::iostream</code> is a rarely used <code>typedef</code> for the <code>std::basic_iostream&lt;char&gt;</code> class).</li>\n<li>Certain components of the library can be pulled in by different <code>#include</code>s. For example, <code>std::initializer_list</code> becomes available through <code>&lt;initializer_list&gt;</code> or through includes like <code>&lt;vector&gt;</code>.</li>\n</ul>\n<p>Without going into too much detail, header files and scoping are two <strong>orthogonal</strong> concepts in C++. In other words, they exist in parallel to each other. There is no useful hierarchy among/between them.</p>\n", "OwnerUserId": "3313064", "PostTypeId": "2", "Id": "42958524", "Score": "1", "CreationDate": "2017-03-22T17:17:57.787", "LastActivityDate": "2017-03-22T17:17:57.787"}, "bq_ids": {"n4140": {"so_42957970_42958577_0": {"section_id": 6254, "quality": 1.0, "length": 31}}, "n3337": {"so_42957970_42958577_0": {"section_id": 6014, "quality": 1.0, "length": 31}}, "n4659": {"so_42957970_42958577_0": {"section_id": 7758, "quality": 0.967741935483871, "length": 30}}}});