post_cb({"bq_ids": {"n4140": {"so_5510576_5510808_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 5487}}, "n3337": {"so_5510576_5510808_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 5273}}, "n4659": {"so_5510576_5510808_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 6922}}}, "5510808": {"Id": "5510808", "PostTypeId": "2", "Body": "<p>This is from the standard :</p>\n<blockquote>\n<p id=\"so_5510576_5510808_0\"><strong>3.4.6 Using-directives and namespace aliases</strong><br>\n  [basic.lookup.udir]<br>\n  When looking up a namespace-name in a using-directive or\n  namespace-alias-definition, only namespace\n  names are considered.</br></br></p>\n</blockquote>\n<p>Therefore, you can use the keyword <code>using</code> to import variable, types and functions into the current namespace.</p>\n<hr>\n<p><em>EDIT</em></p>\n<p>You can import anything you like into the current namespace, but you should care for namespace polution, therefore try not to use <code>using</code> in headers, but only in the source files.</p>\n<p>Ideally, you shouldn't be using this keyword. I use it sometimes when I have deeply nested namespaces.</p>\n</hr>", "LastEditorUserId": "476681", "LastActivityDate": "2011-04-01T09:23:24.683", "Score": "1", "CreationDate": "2011-04-01T08:25:53.993", "ParentId": "5510576", "CommentCount": "5", "OwnerUserId": "476681", "LastEditDate": "2011-04-01T09:23:24.683"}, "5510576": {"ViewCount": "119", "Body": "<p>I knew the technique of <code>using std::swap</code> to enable via ADL the use of user defined <code>swap</code> functions, but I was not aware that this should be applied also to some other functions. For example I was writing abusively <code>std::abs</code> in template code wheras I should have used something like:</p>\n<pre><code>template &lt;class Int&gt; void f(Int i) {\n    using std::abs;\n    Int j = abs(i);\n    // ...\n}\n</code></pre>\n<p>What standard function can you think of which should be used this way? </p>\n<p>On a side note: g++ puts <code>abs</code> in the global namespace when including <code>cstdlib</code> (in fact <code>ctsdlib</code> includes <code>stdlib.h</code> (which defines the <em>function</em> <code>abs</code>) and does a <code>#undef abs</code>...), what does the standard says?</p>\n", "Title": "candidate standard functions for 'using'", "CreationDate": "2011-04-01T07:58:03.313", "LastActivityDate": "2011-04-01T09:23:24.683", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "Id": "5510576", "Score": "3", "OwnerUserId": "234232", "Tags": "<c++><generics><idioms>", "AnswerCount": "1"}});