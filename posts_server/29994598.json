post_cb({"29994621": {"ParentId": "29994598", "CommentCount": "0", "Body": "<p>This is the integer division issue: if <code>a==5</code> and <code>b==10</code>, then <code>a/b==0</code>.</p>\n<p>See the standard, <strong>Multiplicative operators [expr.mul]</strong></p>\n<blockquote>\n<p id=\"so_29994598_29994621_0\">For\n  integral operands the / operator yields the algebraic quotient with any fractional part discarded</p>\n</blockquote>\n", "OwnerUserId": "3246555", "PostTypeId": "2", "Id": "29994621", "Score": "2", "CreationDate": "2015-05-01T20:26:54.213", "LastActivityDate": "2015-05-01T20:26:54.213"}, "29994598": {"CommentCount": "6", "ViewCount": "63", "ClosedDate": "2015-05-01T20:35:47.630", "CreationDate": "2015-05-01T20:25:29.457", "LastActivityDate": "2015-05-01T20:32:35.720", "Title": "Arithmetic expression is 0 instead of 1", "PostTypeId": "1", "Id": "29994598", "Score": "-2", "Body": "<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main() {\n  int a,b,c;\n  cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n  cout &lt;&lt; a/b*c;\n  return 0;\n}\n</code></pre>\n<p>For a=5 b=10 c=2 the output gives 0 which is obviously wrong.\nAs far as I understood &lt;&lt; / * are binary operators / and * \"bond\" stronger than &lt;&lt; and for / and * it is calculated from the left to right so first 5 is devided by 10, then the result (0.5) is multiplicated with 2 which is 1 and that is delivered by &lt;&lt; to cout. </p>\n<p>So can anyone give me an explanation for that result (0)?</p>\n", "Tags": "<c++>", "OwnerUserId": "4854501", "AnswerCount": "3"}, "29994630": {"ParentId": "29994598", "CommentCount": "0", "Body": "<p>No its not wrong </p>\n<p>Since all variables are integers.</p>\n<p>5/10 is 0 in the integer world and that multiplied with 2 is still 0</p>\n<p>9/10 is also 0 but 11/10 is 1</p>\n<p>if you want something useful from this declare the variables as double instead or IOW:</p>\n<pre><code>int main() {\n  double a,b,c;\n  cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n  cout &lt;&lt; a/b*c;\n  return 0;\n}\n</code></pre>\n", "OwnerUserId": "45685", "PostTypeId": "2", "Id": "29994630", "Score": "0", "CreationDate": "2015-05-01T20:27:28.797", "LastActivityDate": "2015-05-01T20:27:28.797"}, "bq_ids": {"n4140": {"so_29994598_29994621_0": {"section_id": 6137, "quality": 0.9, "length": 9}}, "n3337": {"so_29994598_29994621_0": {"section_id": 5901, "quality": 0.9, "length": 9}}, "n4659": {"so_29994598_29994621_0": {"section_id": 7634, "quality": 0.9, "length": 9}}}, "29994691": {"ParentId": "29994598", "CommentCount": "0", "Body": "<p>This is the result of integer rounding. When integer division is performed any fractional remainder is simply cut off. So <code>2 / 3 == 0</code>. </p>\n<p>To keep the results as accurate convert use doubles or convert the variables to doubles in the expression. So something like this </p>\n<pre><code>static_cast&lt;int&gt;(static_cast&lt;double&gt;(a) / static_cast&lt;double&gt;(b) * static_cast&lt;double&gt;(c))\n</code></pre>\n<p>will result in the correct value.</p>\n", "OwnerUserId": "4821282", "PostTypeId": "2", "Id": "29994691", "Score": "1", "CreationDate": "2015-05-01T20:32:35.720", "LastActivityDate": "2015-05-01T20:32:35.720"}});