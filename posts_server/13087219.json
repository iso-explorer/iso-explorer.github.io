post_cb({"bq_ids": {"n4140": {"so_13087219_13087285_1": {"length": 26, "quality": 1.0, "section_id": 5360}}, "n3337": {"so_13087219_13087285_1": {"length": 26, "quality": 1.0, "section_id": 5156}}, "n4659": {"so_13087219_13087285_1": {"length": 20, "quality": 0.7692307692307693, "section_id": 6785}}}, "13087264": {"Id": "13087264", "PostTypeId": "2", "Body": "<p>The literal prefixes are a part of the core language, much like the suffixes:</p>\n<pre><code>'a'    // type: char\nL'a'   // type: wchar_t\n\n\"a\"    // type: char[2]\nL\"a\"   // type: wchar_t[2]\nU\"a\"   // type: char32_t[2]\n\n1      // type: int\n1U     // type: unsigned int\n\n0.5    // type: double\n0.5f   // type: float\n0.5L   // type: long double\n</code></pre>\n<p>Note that <code>wchar_t</code> has <em>nothing</em> to do with Unicode. Here is an <a href=\"https://stackoverflow.com/questions/6300804/wchars-encodings-standards-and-portability\">extended rant of mine</a> on the topic.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2012-10-26T12:51:07.673", "Score": "52", "CreationDate": "2012-10-26T12:51:07.673", "ParentId": "13087219", "CommentCount": "2", "OwnerUserId": "596781", "LastEditDate": "2017-05-23T12:10:19.517"}, "13087285": {"Id": "13087285", "PostTypeId": "2", "Body": "<p>It's called an <strong>encoding prefix</strong>:</p>\n<h3>2.14.5 String literals [lex.string]</h3>\n<blockquote>\n<p id=\"so_13087219_13087285_0\"><code>string-literal</code>:<br/>\n     | <code>encoding-prefix</code><sub><code>opt</code></sub>\" <code>s-char-sequenceopt</code>\"<br/>\n     | <code>encoding-prefix</code><sub><code>opt</code></sub>R <code>raw-string</code><br/>\n<code>encoding-prefix</code>:<br/>\n       |  <code>u8</code><br/>\n       |  <code>u</code><br/>\n       |  <code>U</code><br/>\n       |  <code>L</code><br/></p>\n</blockquote>\n<p>and marks a wide string literal:</p>\n<blockquote>\n<p id=\"so_13087219_13087285_1\">11) A string literal that begins with <code>L</code>, such as <code>L\"asdf\"</code>, is a wide\n  string literal. A wide string literal has type \u201carray of <code>n</code> <code>const\n  wchar_t</code>\u201d, where n is the size of the string as defined below; it has\n  static storage duration and is initialized with the given characters.</p>\n</blockquote>\n", "LastActivityDate": "2012-10-26T12:52:47.930", "CommentCount": "0", "CreationDate": "2012-10-26T12:52:47.930", "ParentId": "13087219", "Score": "16", "OwnerUserId": "673730"}, "25023150": {"Id": "25023150", "PostTypeId": "2", "Body": "<p>The meaning of L here is wide character: <code>wchar_t</code>. String with L is coded in 16bit rather than 8bit, take an example:</p>\n<pre><code>\"A\"    = 41\nL\"A\"   = 00 41\n</code></pre>\n", "LastEditorUserId": "4095830", "LastActivityDate": "2015-04-01T14:13:26.090", "Score": "5", "CreationDate": "2014-07-29T19:09:36.333", "ParentId": "13087219", "CommentCount": "0", "OwnerUserId": "3165938", "LastEditDate": "2015-04-01T14:13:26.090"}, "13087219": {"ViewCount": "17110", "Body": "<p>I understand what it does: specifies a string literal as a <code>const wchar_t *</code> (wide character string) instead of <code>const char *</code> (plain old characters), but how is it actually defined?</p>\n<p>Is it a macro of some sort? Is it an operator for GCC compilers? What <em>is</em> it?</p>\n", "AcceptedAnswerId": "13087264", "Title": "What exactly is the L prefix in C++?", "CreationDate": "2012-10-26T12:48:46.267", "Id": "13087219", "CommentCount": "0", "FavoriteCount": "7", "PostTypeId": "1", "LastEditDate": "2012-10-26T12:52:07.443", "LastEditorUserId": "28169", "LastActivityDate": "2015-04-01T14:13:26.090", "Score": "28", "OwnerUserId": "965369", "Tags": "<c++><string><widestring>", "AnswerCount": "3"}});