post_cb({"28498080": {"CommentCount": "6", "AcceptedAnswerId": "28498182", "ClosedDate": "2015-02-13T12:28:28.750", "CreationDate": "2015-02-13T11:00:06.103", "LastActivityDate": "2015-02-13T11:22:14.160", "PostTypeId": "1", "ViewCount": "126", "Title": "What type of variable that contain lambda", "Id": "28498080", "Score": "4", "Body": "<p>Can you explain which type of <code>L</code> in this context.\nIn other words what type I can use instead <code>auto</code> keyword?</p>\n<pre><code>int main(){\n int x=0;\n auto L = [x] (int y)-&gt;bool{\n   return x&gt;y;\n };\n  return 0; \n}\n</code></pre>\n", "Tags": "<c++><c++11><lambda>", "OwnerUserId": "1864033", "AnswerCount": "2"}, "28498488": {"ParentId": "28498080", "CommentCount": "0", "Body": "<p>You can use <code>std::function</code> instead of `auto, but you may not want to.</p>\n<p><a href=\"http://accu.org/index.php/journals/1859\" rel=\"nofollow\">This article</a> explains in more detail:</p>\n<blockquote>\n<p id=\"so_28498080_28498488_0\">The basic principle behind auto is that the compiler knows the type \u2026\n  but you either can\u2019t describe it or don\u2019t want to. There is one\n  primary use-case where you cannot name the type \u2013 with lambdas.</p>\n</blockquote>\n<p>The article then notes how you can use a std::function instead, but with a run-time penalty.</p>\n", "OwnerUserId": "1055118", "PostTypeId": "2", "Id": "28498488", "Score": "1", "CreationDate": "2015-02-13T11:22:14.160", "LastActivityDate": "2015-02-13T11:22:14.160"}, "28498182": {"ParentId": "28498080", "CommentCount": "0", "Body": "<p>There is nothing in C++11 which you could use instead of <code>auto</code> in this context that would mean the exact same type. That's because the type of each lambda expression is a unique, unnamed type. Quoting C++11 5.1.2/3:</p>\n<blockquote>\n<p id=\"so_28498080_28498182_0\">The type of the <em>lambda-expression</em> (which is also the type of the closure object) is a unique, unnamed non-union\n  class type \u2014 called the <em>closure type</em> \u2014 whose properties are described below. ...</p>\n</blockquote>\n", "OwnerUserId": "1782465", "PostTypeId": "2", "Id": "28498182", "Score": "6", "CreationDate": "2015-02-13T11:04:42.840", "LastActivityDate": "2015-02-13T11:04:42.840"}, "bq_ids": {"n4140": {"so_28498080_28498182_0": {"section_id": 5962, "quality": 0.8947368421052632, "length": 17}}, "n3337": {"so_28498080_28498182_0": {"section_id": 5731, "quality": 0.8947368421052632, "length": 17}}, "n4659": {"so_28498080_28498182_0": {"section_id": 7451, "quality": 0.8947368421052632, "length": 17}}}});