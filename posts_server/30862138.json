post_cb({"30862784": {"Id": "30862784", "PostTypeId": "2", "Body": "<p>In <strong>C++11, 30.3.1.3, thread destructor</strong> the standard says</p>\n<blockquote>\n<p id=\"so_30862138_30862784_0\">If joinable() then terminate(), otherwise no e\ufb00ects. [Note: Either implicitly detaching or joining a joinable() thread in its destructor could result in di\ufb03cult to debug correctness (for detach) or performance (for join) bugs encountered only when an exception is raised. Thus the programmer must ensure that the destructor is never executed while the thread is still joinable. \u2014end note]</p>\n</blockquote>\n<p>Thus your program <code>terminate</code>s once the thread destructor is called because the scope ends and the <code>catch</code> logic is never executed.</p>\n<p>If you want your program to catch the exception out of the thread's scope but throw while the thread is still joinable, you'll need to catch it in the scope of the thread itself, <a href=\"http://en.cppreference.com/w/cpp/thread/thread/join\" rel=\"nofollow\">join</a> or <a href=\"http://en.cppreference.com/w/cpp/thread/thread/detach\" rel=\"nofollow\">detach</a> the thread and rethrow whatever has been catched.</p>\n<pre><code>try \n{\n  std::thread t(foo);\n  try\n  {\n    std::cerr &lt;&lt; \"THROWING\" &lt;&lt; std::endl;\n    throw std::logic_error(\"something went wrong\");\n  }\n  catch (...) // catch everything\n  {\n    t.join(); // join thread\n    throw; // rethrow\n  }\n  t.join();\n}\ncatch (std::logic_error &amp; e) \n{\n  std::cerr &lt;&lt; \"GOTCHA: \" &lt;&lt; e.what() &lt;&lt; std::endl;\n}\n</code></pre>\n", "LastActivityDate": "2015-06-16T08:47:18.470", "CommentCount": "0", "CreationDate": "2015-06-16T08:47:18.470", "ParentId": "30862138", "Score": "2", "OwnerUserId": "951423"}, "bq_ids": {"n4140": {"so_30862138_30862784_0": {"length": 32, "quality": 0.8, "section_id": 2717}}, "n3337": {"so_30862138_30862784_0": {"length": 32, "quality": 0.8, "section_id": 2678}}, "n4659": {"so_30862138_30862784_0": {"length": 32, "quality": 0.8, "section_id": 3457}}}, "30862437": {"Id": "30862437", "PostTypeId": "2", "Body": "<p>You forgot to join the thread :</p>\n<pre><code>try {\n  thread t(do_work);\n  t.join();                                    // &lt;&lt;&lt; add this\n  std::cerr &lt;&lt; \"THROWING\" &lt;&lt; std::endl;\n  throw logic_error(\"something went wrong\");\n} catch (logic_error e) {\n  std::cerr &lt;&lt; \"GOTCHA\" &lt;&lt; std::endl;\n}\n</code></pre>\n<p>A <a href=\"http://en.cppreference.com/w/cpp/thread/thread/~thread\">joinable thread that goes out of scope, causes <code>terminate</code> to be called</a>. So, you need to call either <a href=\"http://en.cppreference.com/w/cpp/thread/thread/join\"><code>join</code></a> or <a href=\"http://en.cppreference.com/w/cpp/thread/thread/detach\"><code>detach</code></a> before it goes out of scope.</p>\n", "LastEditorUserId": "822669", "LastActivityDate": "2015-06-16T08:34:15.017", "Score": "5", "CreationDate": "2015-06-16T08:30:23.007", "ParentId": "30862138", "CommentCount": "0", "OwnerUserId": "822669", "LastEditDate": "2015-06-16T08:34:15.017"}, "30862138": {"ViewCount": "210", "Body": "<p>The catch handler is not run. But why?</p>\n<p>If the <code>thread t</code> is started before the <code>try</code> block, the catch handler runs.</p>\n<p>If the catch block's type does not match the type thrown, the program exits explaining that the thread terminated with an uncaught exception, suggesting that the exception is handled, yet the catch block isn't run.</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n\nusing namespace std;\n\nvoid do_work() {}\n\nint main() {\n  std::cerr &lt;&lt; \"RUNNING\" &lt;&lt; std::endl;\n  try {\n    thread t(do_work);\n    std::cerr &lt;&lt; \"THROWING\" &lt;&lt; std::endl;\n    throw logic_error(\"something went wrong\");\n  } catch (logic_error e) {\n    std::cerr &lt;&lt; \"GOTCHA\" &lt;&lt; std::endl;\n  }\n\n  return 0;\n}\n</code></pre>\n<p>Compile command:</p>\n<pre><code>c++ -std=c++14 -pthread -pedantic -Wall -Wextra -O0 scratch.cpp -o scratch\n</code></pre>\n", "AcceptedAnswerId": "30862437", "Title": "Why does this code catch block not execute?", "CreationDate": "2015-06-16T08:13:43.180", "Id": "30862138", "CommentCount": "5", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2015-06-16T08:24:18.220", "LastEditorUserId": "108800", "LastActivityDate": "2015-06-16T08:47:18.470", "Score": "7", "OwnerUserId": "108800", "Tags": "<c++><multithreading><error-handling><try-catch>", "AnswerCount": "2"}});