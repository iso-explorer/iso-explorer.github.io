post_cb({"4351203": {"ParentId": "4351132", "CommentCount": "1", "Body": "<p>Most derived type means the class of a complete object of a class type (1.8 of the C++ standard (intro.object)). So an empty class that is instantiated must have a unique address, which implies that <code>sizeof(empty class)&gt;0</code>. However, this also means that you can have a base class of zero size (also in 1.8 of the C++ standard).</p>\n<p>So if you have to instantiate an empty class, it cannot have a size of zero. If it is a base class subobject, then it can have zero size.</p>\n", "OwnerUserId": "6210", "PostTypeId": "2", "Id": "4351203", "Score": "1", "CreationDate": "2010-12-04T00:40:11.030", "LastActivityDate": "2010-12-04T00:40:11.030"}, "4351168": {"ParentId": "4351132", "PostTypeId": "2", "CommentCount": "11", "Body": "<p>It's unspecified (except that it must be greater than 0). It's not implementation defined, either (so it doesn't need to be documented).</p>\n<p>I'm not sure why an implementation would use any size other than 1 for an empty class (assuming by \"empty class\" we're talking about a class that doesn't even derive from another class), but I suppose it could.</p>\n<hr>\n<p>To address Chubsdad's question about what determines that this is unspecified behavior (as opposed to implementation defined):</p>\n<p>The standard defines \"unspecified behavior\" as:</p>\n<blockquote>\n<p id=\"so_4351132_4351168_0\">behavior, for a well-formed program construct and correct data, that depends on the implementation. The\n  implementation is not required to document which behavior occurs.</p>\n</blockquote>\n<p>It defines \"implementation-defined behavior\" as:</p>\n<blockquote>\n<p id=\"so_4351132_4351168_1\">behavior, for a well-formed program construct and correct data, that depends on the implementation and\n  that each implementation shall document</p>\n</blockquote>\n<p>So the only difference between the two is that implementation-defined behavior must be documented.  The standard will say when behavior must be documented (usually by saying that a behavior is implementation-defined)</p>\n<p>Unfortunately, the standard doesn't always directly state that a behavior is unspecified (or undefined). So, some analysis is in order:</p>\n<p>Since the standard says:</p>\n<ul>\n<li>that <code>sizeof</code> must evaluate to a greater-than-zero result for an empty class, </li>\n<li>doesn't say what that value must be (other than greater-than-zero)</li>\n<li>doesn't say that the value must be documented (or that it's implementation-defined)</li>\n</ul>\n<p>by a process of elimination, the sizeof an empty class is unspecified.</p>\n<p>The possible problem with this analysis (and with much analysis of something as complex as the C++ standard) is that there's the possibility that there's some other corner of the standard that I've missed that might require the sizeof an empty class be some specific value. And that requirement might be by inference (or would it be deduction?) from some other rules; it might not be stated outright. It's not always easy to track down all the areas of the standard that might apply to a particular issue.</p>\n<p>If that's the case, then someone will hopefully note that and shoot my argument down.</p>\n</hr>", "OwnerUserId": "12711", "LastEditorUserId": "12711", "LastEditDate": "2010-12-04T01:09:07.783", "Id": "4351168", "Score": "4", "CreationDate": "2010-12-04T00:33:58.020", "LastActivityDate": "2010-12-04T01:09:07.783"}, "4351132": {"CommentCount": "0", "ViewCount": "120", "PostTypeId": "1", "LastEditorUserId": "3204551", "CreationDate": "2010-12-04T00:25:23.180", "LastActivityDate": "2015-07-03T16:58:15.083", "Title": "Neither of undefined, implementation defined, unspecifed behavior", "FavoriteCount": "1", "LastEditDate": "2015-07-03T16:58:15.083", "Id": "4351132", "Score": "2", "Body": "<p>C++03</p>\n<blockquote>\n<p id=\"so_4351132_4351132_0\">$5.3.3/2 - \"The size of a most derived\n  class shall be greater than zero\n  (1.8).\"</p>\n<p id=\"so_4351132_4351132_1\">$1.8/4 - \"Unless it is a bit-field\n  (9.6), a most derived object shall\n  have a non-zero size and shall occupy\n  one or more bytes of storage.\"</p>\n</blockquote>\n<p>My question then is:</p>\n<p>Is the size of an empty class unspecified, implemention defined? Is it supposed to be documented by the compiler documentation? Those two quotes leave it so open ended as far as my understanding is correct.</p>\n", "Tags": "<c++><unspecified-behavior>", "OwnerUserId": "418110", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_4351132_4351132_0": {"section_id": 6077, "quality": 0.7777777777777778, "length": 7}, "so_4351132_4351132_1": {"section_id": 5794, "quality": 0.8571428571428571, "length": 12}, "so_4351132_4351168_0": {"section_id": 5768, "quality": 0.9230769230769231, "length": 12}, "so_4351132_4351168_1": {"section_id": 5768, "quality": 1.0, "length": 10}}, "n3337": {"so_4351132_4351132_0": {"section_id": 5845, "quality": 0.7777777777777778, "length": 7}, "so_4351132_4351132_1": {"section_id": 5567, "quality": 0.8571428571428571, "length": 12}, "so_4351132_4351168_0": {"section_id": 5541, "quality": 0.9230769230769231, "length": 12}, "so_4351132_4351168_1": {"section_id": 5541, "quality": 1.0, "length": 10}}, "n4659": {"so_4351132_4351132_0": {"section_id": 7573, "quality": 0.7777777777777778, "length": 7}, "so_4351132_4351132_1": {"section_id": 7253, "quality": 0.8571428571428571, "length": 12}, "so_4351132_4351168_0": {"section_id": 7225, "quality": 0.9230769230769231, "length": 12}, "so_4351132_4351168_1": {"section_id": 7225, "quality": 1.0, "length": 10}}}});