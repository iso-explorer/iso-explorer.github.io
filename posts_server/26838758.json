post_cb({"26838758": {"CommentCount": "0", "ViewCount": "369", "PostTypeId": "1", "LastEditorUserId": "447156", "CreationDate": "2014-11-10T07:27:26.233", "LastActivityDate": "2014-11-10T07:54:45.570", "Title": "Implicit enum values in C++", "AcceptedAnswerId": "26838788", "LastEditDate": "2014-11-10T07:35:54.203", "Id": "26838758", "Score": "1", "Body": "<p>I am working on porting some interop code from the DWM Api in C++ to C#. The <a href=\"http://msdn.microsoft.com/en-gb/library/windows/desktop/aa969530%28v=vs.85%29.aspx\" rel=\"nofollow\">DWMWINDOWATTRIBUTE</a> enum only explicitly defines, one value, and I want to know if the remaining values (commented) are correct?</p>\n<pre><code>typedef enum _DWMWINDOWATTRIBUTE { \n  DWMWA_NCRENDERING_ENABLED          =  1,\n  DWMWA_NCRENDERING_POLICY,          // 2\n  DWMWA_TRANSITIONS_FORCEDISABLED,   // 3\n  DWMWA_ALLOW_NCPAINT,               // 4\n  DWMWA_CAPTION_BUTTON_BOUNDS,       // 5\n  DWMWA_NONCLIENT_RTL_LAYOUT,        // 6\n  DWMWA_FORCE_ICONIC_REPRESENTATION, // 7\n  DWMWA_FLIP3D_POLICY,               // 8\n  DWMWA_EXTENDED_FRAME_BOUNDS,       // 9\n  DWMWA_HAS_ICONIC_BITMAP,           // 10\n  DWMWA_DISALLOW_PEEK,               // 11\n  DWMWA_EXCLUDED_FROM_PEEK,          // 12\n  DWMWA_CLOAK,                       // 13\n  DWMWA_CLOAKED,                     // 14\n  DWMWA_FREEZE_REPRESENTATION,       // 15\n  DWMWA_LAST                         // 16\n} DWMWINDOWATTRIBUTE;\n</code></pre>\n", "Tags": "<c++><enums>", "OwnerUserId": "1033686", "AnswerCount": "3"}, "26838788": {"ParentId": "26838758", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Yes, in the C++03 and C++11 standards, <strong>7.2 Enumeration declarations [dcl.enum]</strong>:</p>\n<blockquote>\n<p id=\"so_26838758_26838788_0\">...An enumerator-definition without an initializer gives the enumerator the value obtained by increasing the value of the previous enumerator by one.</p>\n</blockquote>\n<p>Also note that, in the absence of an initializer, the first enum value is <code>0</code>. From the same section:</p>\n<blockquote>\n<p id=\"so_26838758_26838788_1\">If the first enumerator has no initializer, the value of the corresponding constant is zero.</p>\n</blockquote>\n", "OwnerUserId": "661519", "LastEditorUserId": "661519", "LastEditDate": "2014-11-10T07:54:45.570", "Id": "26838788", "Score": "4", "CreationDate": "2014-11-10T07:29:29.080", "LastActivityDate": "2014-11-10T07:54:45.570"}, "26838855": {"ParentId": "26838758", "CommentCount": "0", "Body": "<p>Yes enum values are incremented automatically. In C# you can also use the same syntax</p>\n<p>public enum _DWMWINDOWATTRIBUTE {  DWMWA_NCRENDERING_ENABLED =  1,...}</p>\n", "OwnerUserId": "1635371", "PostTypeId": "2", "Id": "26838855", "Score": "1", "CreationDate": "2014-11-10T07:34:17.993", "LastActivityDate": "2014-11-10T07:34:17.993"}, "26839076": {"ParentId": "26838758", "CommentCount": "0", "Body": "<p>Yes that is correct, if you provide a value for the first entry then all the next entries are obtained by increasing the value of the prev enum by 1.</p>\n<p>In this case, since you gave the first enum entry a value the next entries are 2,3,4,... respectively.</p>\n<p>If you don't provide it, then it starts with a 0 (by default)</p>\n", "OwnerUserId": "3500696", "PostTypeId": "2", "Id": "26839076", "Score": "1", "CreationDate": "2014-11-10T07:50:28.320", "LastActivityDate": "2014-11-10T07:50:28.320"}, "bq_ids": {"n4140": {"so_26838758_26838788_0": {"section_id": 5461, "quality": 1.0, "length": 11}, "so_26838758_26838788_1": {"section_id": 5461, "quality": 1.0, "length": 7}}, "n3337": {"so_26838758_26838788_0": {"section_id": 5248, "quality": 1.0, "length": 11}, "so_26838758_26838788_1": {"section_id": 5248, "quality": 1.0, "length": 7}}, "n4659": {"so_26838758_26838788_0": {"section_id": 6895, "quality": 1.0, "length": 11}, "so_26838758_26838788_1": {"section_id": 6895, "quality": 1.0, "length": 7}}}});