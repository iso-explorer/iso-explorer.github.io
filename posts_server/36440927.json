post_cb({"bq_ids": {"n4140": {"so_36440927_36440966_1": {"length": 33, "quality": 0.9166666666666666, "section_id": 5907}, "so_36440927_36440966_0": {"length": 9, "quality": 0.75, "section_id": 5907}}, "n3337": {"so_36440927_36440966_1": {"length": 33, "quality": 0.9166666666666666, "section_id": 5679}, "so_36440927_36440966_0": {"length": 9, "quality": 0.75, "section_id": 5679}}, "n4659": {"so_36440927_36440966_1": {"length": 34, "quality": 0.9444444444444444, "section_id": 7389}, "so_36440927_36440966_0": {"length": 9, "quality": 0.75, "section_id": 7389}}}, "36440966": {"Id": "36440966", "PostTypeId": "2", "Body": "<p>Because the initializer expression is in the scope of struct <code>foobar</code>, so <code>foobar::foo()</code> will be called here.</p>\n<p>From the standard, <code>$9.4.2/2 Static data members [class.static.data]</code>:</p>\n<blockquote>\n<p id=\"so_36440927_36440966_0\">The initializer expression in the\n  definition of a static data member is in the scope of its class (3.3.7). Example:</p>\n<pre><code>class process {\nstatic process* run_chain;\nstatic process* running;\n};\nprocess* process::running = get_main();\nprocess* process::run_chain = running;\n</code></pre>\n<p id=\"so_36440927_36440966_1\">The static data member <code>run_chain</code> of class <code>process</code> is defined in global\n  scope; the notation <code>process::run_chain</code> specifies that the member\n  <code>run_chain</code> is a member of class <code>process</code> and in the scope of class\n  <code>process</code>. In the static data member definition, the initializer\n  expression refers to the static data member <code>running</code> of class <code>process</code>.\n  \u2014end example ]</p>\n</blockquote>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2016-04-06T03:36:21.080", "Score": "3", "CreationDate": "2016-04-06T03:31:18.990", "ParentId": "36440927", "CommentCount": "1", "LastEditDate": "2016-04-06T03:36:21.080", "OwnerUserId": "3309790"}, "36440927": {"ViewCount": "33", "Body": "<p>What should be the output of the following program?</p>\n<pre><code>#include&lt;iostream&gt;\n\nint foo()\n{\n  return 10;\n}\n\nstruct foobar\n{\n  static int x;\n  static int foo()\n  {\n    return 11;\n  }\n};\n\nint foobar::x = foo();\n\nint main()\n{\n  std::cout&lt;&lt;foobar::x&lt;&lt;endl;\n}\n</code></pre>\n<p>I have run the program but got answer <code>11</code>, but I think the correct answer should be <code>10</code>. I don't know why <code>foo()</code> in <code>int foobar::x = foo();</code> should be static function, please help me understand this. Further examples on uses of static function would be preferred!</p>\n", "Title": "In static member variable initializer why is static member function (not the global one) called?", "CreationDate": "2016-04-06T03:26:03.917", "LastActivityDate": "2016-04-06T03:55:34.773", "CommentCount": "0", "LastEditDate": "2016-04-06T03:55:34.773", "PostTypeId": "1", "LastEditorUserId": "3309790", "Id": "36440927", "Score": "1", "OwnerUserId": "4164526", "Tags": "<c++><static><language-lawyer><static-methods>", "AnswerCount": "1"}});