post_cb({"31217053": {"CommentCount": "0", "ViewCount": "195", "PostTypeId": "1", "ClosedDate": "2015-07-04T06:41:16.633", "LastEditorUserId": "3049655", "CreationDate": "2015-07-04T04:56:54.033", "LastActivityDate": "2015-07-04T05:23:44.750", "Title": "Why is `int >> 32` not always zero?", "AcceptedAnswerId": "31217061", "LastEditDate": "2015-07-04T05:03:57.603", "Id": "31217053", "Score": "3", "Body": "<p>Can someone explain me why right 32 bitwise shift of some 4 byte integer number may return not zero in C/C++ ? Why does it depend on <code>-O</code> option of the compiler?</p>\n<p>For example this code gives 45 with <code>-O0</code> and 0 with <code>-O3</code> options in gcc 4.8.3: </p>\n<pre><code>unsigned int x = 45; // 4 bytes\nx = x &gt;&gt; 32;\nprintf(\"%u\\n\", x);\n</code></pre>\n<p>Why it is like this?  </p>\n", "Tags": "<c++><c><bit-manipulation><shift>", "OwnerUserId": "4714199", "AnswerCount": "1"}, "31217061": {"ParentId": "31217053", "PostTypeId": "2", "CommentCount": "2", "CreationDate": "2015-07-04T04:58:23.907", "Score": "22", "LastEditorUserId": "1084944", "LastEditDate": "2015-07-04T05:23:44.750", "Id": "31217061", "OwnerUserId": "1084944", "Body": "<p>Because it is undefined behavior: <code>[expr.shift]</code> says</p>\n<blockquote>\n<p id=\"so_31217053_31217061_0\">The behavior is undefined if the right operand is negative, or greater than or equal to the length in bits of the promoted left operand.</p>\n</blockquote>\n<p>As for the <em>specific</em> undefined behavior, I imagine it is as follows:</p>\n<ul>\n<li>With <code>-O0</code>, it compiled to actually perform a right shift in machine code, and on some machines (e.g. I believe x86 is such), shift functions only look at the low 5 bits of the shift amount when shifting a 32-bit word; shifting by 32 is the same as shifting by 0.</li>\n<li>With <code>-O3</code>, the compiler computed the constant itself, and just put <code>0</code> into the program rather than having it do a calculation.</li>\n</ul>\n<p>You can check the assembly output to see if my prediction is right.</p>\n", "LastActivityDate": "2015-07-04T05:23:44.750"}, "bq_ids": {"n4140": {"so_31217053_31217061_0": {"section_id": 6146, "quality": 0.9285714285714286, "length": 13}}, "n3337": {"so_31217053_31217061_0": {"section_id": 5909, "quality": 0.9285714285714286, "length": 13}}, "n4659": {"so_31217053_31217061_0": {"section_id": 7642, "quality": 0.9285714285714286, "length": 13}}}});