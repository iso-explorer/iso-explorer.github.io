post_cb({"36424750": {"ParentId": "36424140", "CommentCount": "0", "Body": "<p>Elaborated class name just means <code>class</code> (or <code>struct</code>) keyword + actual name of the class.</p>\n<p>Use it like this:</p>\n<pre><code>friend class Klass;\n</code></pre>\n", "OwnerUserId": "1477669", "PostTypeId": "2", "Id": "36424750", "Score": "1", "CreationDate": "2016-04-05T11:11:20.413", "LastActivityDate": "2016-04-05T11:11:20.413"}, "36424140": {"CommentCount": "3", "ViewCount": "87", "ClosedDate": "2016-04-05T16:41:07.663", "CreationDate": "2016-04-05T10:42:53.713", "LastActivityDate": "2016-04-05T11:31:43.167", "PostTypeId": "1", "FavoriteCount": "0", "Title": "How can we have friend declaration \"friend elaborated-class-name ;\" as example in c++?", "Id": "36424140", "Score": "-1", "Body": "<p>I am confused in elaborated class name. I would be extremely grateful if described as example.\nSyntax: friend elaborated-class-name ;  </p>\n", "Tags": "<c++><declaration><keyword><friend>", "OwnerUserId": "5765713", "AnswerCount": "3"}, "36424958": {"ParentId": "36424140", "CommentCount": "0", "Body": "<p>From n4140:</p>\n<p>[class.friend]/3 :</p>\n<blockquote>\n<p id=\"so_36424140_36424958_0\">A friend declaration that does not declare a function shall have one of the following forms:<br>\n  friend elaborated-type-specifier ;<br>\n  friend simple-type-specifier ;<br>\n  friend typename-specifier ;  </br></br></br></p>\n</blockquote>\n<p>then you have an example:</p>\n<pre><code>class C;\ntypedef C Ct;\nclass X1 {\n  friend C; // OK: class C is a friend\n};\nclass X2 {\n  friend Ct; // OK: class C is a friend\n  friend D; // error: no type-name D in scope\n  friend class D; // OK: elaborated-type-specifier declares new class\n};\n</code></pre>\n<p>So: <code>friend class D;</code> is an example of elaborated-type-specifier. While <code>friend D;</code> is not and is called simple-type-specifier - which is new since C++11.</p>\n", "OwnerUserId": "471160", "PostTypeId": "2", "Id": "36424958", "Score": "1", "CreationDate": "2016-04-05T11:21:12.723", "LastActivityDate": "2016-04-05T11:21:12.723"}, "36425175": {"ParentId": "36424140", "CommentCount": "0", "Body": "<p>Here is a demonstrative program</p>\n<pre><code>#include &lt;iostream&gt;\n\nnamespace usr\n{\n    int B = 20;\n\n    class A\n    {\n    public:\n        A( int x = 0 ) : x( x ) {}\n        friend class B;  // using of elaborated type specifier\n    private:\n        int x;\n    };\n\n    class B\n    {\n    public:        \n        std::ostream &amp; out( const A &amp;a, std::ostream &amp;os = std::cout ) const\n        {\n            return os &lt;&lt; a.x;\n        }\n    };\n}\n\nint main()\n{\n    class usr::B b;  // using of elaborated type specifier\n    b.out( usr::A( 10 ) ) &lt;&lt; ' ' &lt;&lt; usr::B &lt;&lt; std::endl;    \n}    \n</code></pre>\n<p>Its output is</p>\n<pre><code>10 20\n</code></pre>\n", "OwnerUserId": "2877241", "PostTypeId": "2", "Id": "36425175", "Score": "0", "CreationDate": "2016-04-05T11:31:43.167", "LastActivityDate": "2016-04-05T11:31:43.167"}, "bq_ids": {"n4140": {"so_36424140_36424958_0": {"section_id": 6686, "quality": 0.8, "length": 12}}, "n3337": {"so_36424140_36424958_0": {"section_id": 6441, "quality": 0.8, "length": 12}}, "n4659": {"so_36424140_36424958_0": {"section_id": 8161, "quality": 0.8, "length": 12}}}});