post_cb({"5487849": {"CommentCount": "2", "ViewCount": "488", "PostTypeId": "1", "LastEditorUserId": "51425", "CreationDate": "2011-03-30T14:40:44.710", "LastActivityDate": "2011-03-31T06:44:48.157", "Title": "Shall a C++ class function end with a }; or only a }?", "AcceptedAnswerId": "5488100", "LastEditDate": "2011-03-31T06:44:48.157", "Id": "5487849", "Score": "5", "Body": "<p>A basic questions about C++ syntax.</p>\n<p>Shall a c++ function end with a ; or does it not matter?</p>\n<p>Or what is the difference between those two examples?</p>\n<p>With a ending ;</p>\n<pre><code>void Test :: print()\n{\n  ...\n};\n</code></pre>\n<p>Without ;</p>\n<pre><code>void Test :: print()\n{\n  ...\n}\n</code></pre>\n<p>I have seen C++ code both with and without, \nbut I don't get the difference.</p>\n<p>/Thanks</p>\n<hr>\n<p><strong>Update</strong>: </p>\n<p>In this case the ; should be avoided since it is not doing anything useful and may even become a problem in the future.</p>\n</hr>", "Tags": "<c++><syntax>", "OwnerUserId": "51425", "AnswerCount": "3"}, "5488100": {"ParentId": "5487849", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Outside of a class body (where a function definition may optionally be followed by a single <code>;</code>), a function definition is terminated by the end of a <em>compound-statement</em> - that is the closing <code>}</code>. At namespace scope, the next token after the closing brace of a <em>function-definition</em> must form part of the next declaration.</p>\n<p>In C++03, there is no such thing as an <em>empty-declaration</em> so placing a <code>;</code> is illegal, although accepted by many implementations. (Although the syntax of a C++03 <em>simple-declaration</em> appears to allow a missing <em>decl-specifier-seq</em> and a missing <em>init-declarator-list</em>, leaving just a <code>;</code>, there is a semantic rule forbidding both optional parts to be left out expressed in 7 [dcl.dcl] / 3 of the standard.)</p>\n<blockquote>\n<p id=\"so_5487849_5488100_0\">In a simple-declaration, the optional <em>init-declarator-list</em> can be omitted only when declaring a class (clause 9) or enumeration (7.2), that is, when the <em>decl-specifier-seq</em> contains either a <em>class-specifier</em>, an <em>elaborated-type-specifier</em> with a <em>class-key</em> (9.1), or an <em>enum-specifier</em>.</p>\n</blockquote>\n<p>C++0x introduces an <em>empty-declaration</em> (which is a declaration with no effect), so you can have as many rogue <code>;</code> at namespace scope as you like although there is no good reason to do so.</p>\n", "OwnerUserId": "19563", "LastEditorUserId": "19563", "LastEditDate": "2011-03-30T15:18:04.813", "Id": "5488100", "Score": "10", "CreationDate": "2011-03-30T15:01:27.493", "LastActivityDate": "2011-03-30T15:18:04.813"}, "5487881": {"ParentId": "5487849", "CommentCount": "1", "Body": "<p>You are indeed adding empty declarations to your file when you put in spurious semicolons. It does not matter much, as @Space_C0wb0y pointed out.</p>\n<p>BTW, the heading does not fit your question.</p>\n", "OwnerUserId": "2621917", "PostTypeId": "2", "Id": "5487881", "Score": "2", "CreationDate": "2011-03-30T14:43:52.027", "LastActivityDate": "2011-03-30T14:43:52.027"}, "bq_ids": {"n4140": {"so_5487849_5488100_0": {"section_id": 5381, "quality": 0.9444444444444444, "length": 17}}, "n3337": {"so_5487849_5488100_0": {"section_id": 5175, "quality": 0.9444444444444444, "length": 17}}, "n4659": {"so_5487849_5488100_0": {"section_id": 6805, "quality": 0.9444444444444444, "length": 17}}}, "5487976": {"ParentId": "5487849", "CommentCount": "0", "Body": "<p>No. The sign ; should not be the end of the function.\nPerhaps you've seen sign at the end declaration class</p>\n", "OwnerUserId": "672654", "PostTypeId": "2", "Id": "5487976", "Score": "2", "CreationDate": "2011-03-30T14:51:28.053", "LastActivityDate": "2011-03-30T14:51:28.053"}});