post_cb({"bq_ids": {"n4140": {"so_18829274_18829776_0": {"length": 14, "quality": 1.0, "section_id": 3244}}, "n3337": {"so_18829274_18829776_0": {"length": 14, "quality": 1.0, "section_id": 3117}}, "n4659": {"so_18829274_18829776_0": {"length": 10, "quality": 0.7142857142857143, "section_id": 6103}}}, "18829776": {"Id": "18829776", "PostTypeId": "2", "Body": "<p>Your assumption is wrong, the program is ill-formed. See C++11 standard 8.3.5/8:</p>\n<blockquote>\n<p id=\"so_18829274_18829776_0\">If the type of a parameter includes a type of the form \u201cpointer to array of unknown bound of T\u201d or \u201creference\n  to array of unknown bound of T,\u201d the program is ill-formed.</p>\n</blockquote>\n<p>clang allows this as a compiler extension. g++, for example, will not accept it.</p>\n<p>You can however use templates to deduce the size of the passed array:</p>\n<pre><code>template &lt;std::size_t N&gt;\nvoid by_reference(int (&amp;)[N])\n{\n    // whatever\n}\n</code></pre>\n", "LastEditorUserId": "1056003", "LastActivityDate": "2013-09-16T14:02:07.167", "Score": "6", "CreationDate": "2013-09-16T13:53:03.470", "ParentId": "18829274", "CommentCount": "5", "OwnerUserId": "1056003", "LastEditDate": "2013-09-16T14:02:07.167"}, "18829274": {"ViewCount": "908", "Body": "<p>Consider a valid code:</p>\n<pre><code>template&lt;size_t size&gt;\nvoid by_numbered_reference(int (&amp;array)[size]);\n</code></pre>\n<p>This function accepts an array as an argument and compiler can deduce the size of it using template argument deduction.</p>\n<p>Now it is valid (tested on Apple clang version 3.0) to define such function:</p>\n<pre><code>void by_reference(int (&amp;array)[], int size);\n</code></pre>\n<p>Which (should) accept a reference to an unknown size array as an argument. Noting that <code>int[]</code> and <code>int[n]</code> are distinct types and generally are incompatible.</p>\n<p>The only way which I found how to invoke this function is:</p>\n<pre><code>int * array;\nby_reference(reinterpret_cast&lt;int(&amp;)[]&gt;(*array), array_size);\n</code></pre>\n<ol>\n<li>Why does the language accept a reference to an unknown size array as a valid function argument, while there is no straightforward way to define such variable?</li>\n<li>Are there any known use cases where this syntax is required?</li>\n<li>Why <code>void by_reference(int (*&amp;array), int size)</code> should <strong>not</strong> be used instead?</li>\n</ol>\n", "AcceptedAnswerId": "18829776", "Title": "How to call a function with a reference to an unknown size array?", "CreationDate": "2013-09-16T13:29:22.687", "Id": "18829274", "CommentCount": "7", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2013-09-16T13:44:02.507", "LastEditorUserId": "1902095", "LastActivityDate": "2013-09-16T14:02:07.167", "Score": "8", "OwnerUserId": "1902095", "Tags": "<c++><arrays><syntax>", "AnswerCount": "1"}});