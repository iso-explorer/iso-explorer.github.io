post_cb({"10030098": {"CommentCount": "2", "ViewCount": "146", "CreationDate": "2012-04-05T14:02:30.540", "LastActivityDate": "2012-04-06T02:15:45.157", "Title": "C/C++ code 2nd = sign in operation", "PostTypeId": "1", "Id": "10030098", "Score": "0", "Body": "<p>I'm not sure if this is C or C++ code, but I don't think it matters.</p>\n<p>in this code:</p>\n<pre><code>x -= (t = u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x)))));\n</code></pre>\n<p>what does the t = u mean?  It's not assigning t to u is it? Because it wouldn't make sense then since it's actually getting set to something else in the previous line:</p>\n<pre><code>t = exp(a1*log(x)+b1*log(1.-x) + afac);\nu = err/t;\nx -= (t = u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x)))));\nif (x &lt;= 0.) x = 0.5*(x + t);\nif (x &gt;= 1.) x = 0.5*(x + t + 1.);\n</code></pre>\n", "Tags": "<c++><c>", "OwnerUserId": "1267501", "AnswerCount": "7"}, "10030224": {"ParentId": "10030098", "CommentCount": "0", "Body": "<p>The statement could be divided into two sub-statements, and for readibility, it probably should.</p>\n<pre><code>t = u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x))));\nx -= t;\n</code></pre>\n<p>Essentially, the author assigned a sub-section of the entire formula to an intermediate variable (t) for later use.</p>\n", "OwnerUserId": "229939", "PostTypeId": "2", "Id": "10030224", "Score": "0", "CreationDate": "2012-04-05T14:09:37.557", "LastActivityDate": "2012-04-05T14:09:37.557"}, "10030193": {"ParentId": "10030098", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>Quite simply:</p>\n<pre><code>x -= (t = u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x)))));\n|     |   \\_____________________________________/|\n|     |        Calculate this monstrosity        |\n|     \\_________________________________________/|\n|                   Assign it to t               |\n\\________________________________________________/\n                  Subtract that from x\n</code></pre>\n<p>In C (and C-like languages) the \"result\" of an assignment can be used for other things. So, for example:</p>\n<pre><code>x = (a = a - 1);   // decrements a and assigns that to x as well\nx += (a = 1 - a);  // toggles a between 1 and 0 and adds to x (x increases\n                   //   every second time).\n</code></pre>\n<p>The relevant bit of the C standard is <code>C11, 6.5.16 Assignment operators, paras 2 and 3</code>:</p>\n<blockquote>\n<p id=\"so_10030098_10030193_0\">2/ An assignment operator shall have a modifiable lvalue as its left operand.</p>\n<p id=\"so_10030098_10030193_1\">3/ An assignment operator stores a value in the object designated by the left operand. An assignment expression has the value of the left operand after the assignment, but is not an lvalue. The type of an assignment expression is the type of the left operand unless the left operand has qualified type, in which case it is the unqualified version of the type of the left operand. The side effect of updating the stored value of the left operand is sequenced after the value computations of the left and right operands. The evaluations of the operands are unsequenced.</p>\n</blockquote>\n", "OwnerUserId": "14860", "LastEditorUserId": "14860", "LastEditDate": "2012-04-06T02:15:45.157", "Id": "10030193", "Score": "7", "CreationDate": "2012-04-05T14:07:58.360", "LastActivityDate": "2012-04-06T02:15:45.157"}, "10030177": {"ParentId": "10030098", "CommentCount": "0", "Body": "<p>Using <code>=</code> will indeed assign a value, and will return the value you are assigning. In your case, <code>t</code> is being assigned the result of <code>u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x)))</code>.</p>\n", "OwnerUserId": "1070659", "PostTypeId": "2", "Id": "10030177", "Score": "0", "CreationDate": "2012-04-05T14:07:18.393", "LastActivityDate": "2012-04-05T14:07:18.393"}, "10030140": {"ParentId": "10030098", "CommentCount": "1", "Body": "<blockquote>\n<p id=\"so_10030098_10030140_0\">what does the t = u mean? </p>\n</blockquote>\n<p>It is part of a larger sub-expression,</p>\n<pre><code>t = u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x))))\n</code></pre>\n<blockquote>\n<p id=\"so_10030098_10030140_1\">It's not assigning t to u is it?</p>\n</blockquote>\n<p>No, it is assigning the value of that complicated expression to <code>t</code>. The result of that assignment is then used in the complete expression:</p>\n<pre><code>x -= (t = &lt;stuff&gt; );\n</code></pre>\n<p>Conceptually, this is the same as:</p>\n<pre><code>t = &lt;stuff&gt;\nx = x - t\n</code></pre>\n<blockquote>\n<p id=\"so_10030098_10030140_2\">Because it wouldn't make sense then since it's actually getting set to something else in the previous line</p>\n</blockquote>\n<p>Frankly, the whole set of statements doesn't make sense to me. Regardless, <code>t</code> is set in line one, used in line 2, and set again in line 3.</p>\n", "OwnerUserId": "8747", "PostTypeId": "2", "Id": "10030140", "Score": "8", "CreationDate": "2012-04-05T14:05:12.467", "LastActivityDate": "2012-04-05T14:05:12.467"}, "10030191": {"ParentId": "10030098", "CommentCount": "0", "Body": "<p>The overall calculation : <code>u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x))))</code> is assigned to <code>t</code> and what ever value of <code>t</code> is there ,this is performed.</p>\n<pre><code>x=x-t\n</code></pre>\n", "OwnerUserId": "134713", "PostTypeId": "2", "Id": "10030191", "Score": "0", "CreationDate": "2012-04-05T14:07:46.747", "LastActivityDate": "2012-04-05T14:07:46.747"}, "10030226": {"ParentId": "10030098", "CommentCount": "0", "Body": "<p>In your code:</p>\n<pre><code>  x -= (t = u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x)))));\n</code></pre>\n<p>Let me assume</p>\n<pre><code>  A=(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x))));\n</code></pre>\n<p>Then that code will become</p>\n<pre><code>  x -= (t = u/A);\n</code></pre>\n<p>Then it can read as:</p>\n<pre><code>  t = u/A;\n  x -= t;\n</code></pre>\n<p>If you have any questions,just feel free to ask.</p>\n", "OwnerUserId": "768183", "PostTypeId": "2", "Id": "10030226", "Score": "1", "CreationDate": "2012-04-05T14:09:43.350", "LastActivityDate": "2012-04-05T14:09:43.350"}, "10030118": {"ParentId": "10030098", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>In both C and C++ an assignment returns a value, the value of the left hand side.</p>\n<pre><code>a = 1 + (b = 4);\n</code></pre>\n<p>is equivalent to: </p>\n<pre><code>b = 4;\na = 1 + b;\n</code></pre>\n<p>So:</p>\n<pre><code>x -= (t = u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x)))));\n</code></pre>\n<p>is the same as:</p>\n<pre><code>t = u/(1.-0.5*MIN(1.,u*(a1/x - b1/(1.-x))));\nx -= t;\n</code></pre>\n", "OwnerUserId": "233522", "LastEditorUserId": "14860", "LastEditDate": "2012-04-06T02:13:18.467", "Id": "10030118", "Score": "2", "CreationDate": "2012-04-05T14:03:48.363", "LastActivityDate": "2012-04-06T02:13:18.467"}, "bq_ids": {"n4140": {"so_10030098_10030193_0": {"section_id": 6173, "quality": 0.75, "length": 6}}, "n3337": {"so_10030098_10030193_0": {"section_id": 5934, "quality": 0.75, "length": 6}}, "n4659": {"so_10030098_10030193_0": {"section_id": 7675, "quality": 0.75, "length": 6}}}});