post_cb({"36645467": {"ParentId": "36644566", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>I think Microsoft is correct here. Quoting the working C++ standard draft <a href=\"http://eel.is/c++draft/namespace.udir#6\" rel=\"nofollow\">$7.3.4.6</a>, it says</p>\n<blockquote>\n<p id=\"so_36644566_36645467_0\">If name lookup finds a declaration for a name in two different\n  namespaces, and the declarations do not declare the same entity and do\n  not declare functions, the use of the name is ill-formed....</p>\n</blockquote>\n<p>Then it gives an example similar to yours, like this:</p>\n<blockquote id=\"so_36644566_36645467_1\">\n<pre><code>namespace A {\n  class X { };\n  extern \"C\"   int g();\n  extern \"C++\" int h();\n}\nnamespace B {\n  void X(int);\n  extern \"C\"   int g();\n  extern \"C++\" int h(int);\n}\nusing namespace A;\nusing namespace B;\n\nvoid f() {\n  X(1);             // error: name X found in two namespaces\n  g();              // OK: name g refers to the same entity\n  h();              // OK: overload resolution selects A::h\n}\n</code></pre>\n</blockquote>\n<p>Though, both gcc and clang accept the code. I think they are wrong here.</p>\n<p>Go back to the quoted paragraph and note the line \"<em>...do not declare the same entity and do not declare functions...</em>\". </p>\n<p>In your code, the name <code>n2</code> in the namespace <code>n1</code> is a function template and not a function. \nBecause, a function template is not a function. See <a href=\"http://eel.is/c++draft/dcl.fct#15\" rel=\"nofollow\">$8.3.5.15</a> (emphasis mine):</p>\n<blockquote>\n<p id=\"so_36644566_36645467_2\">A non-template function is a function that is not a function template\n  specialization. [ Note: <strong>A function template is not a function.</strong>  \u2014 end\n  note ]</p>\n</blockquote>\n<p>To resolve your problem, qualify <code>n2</code> with a global namespace... like this</p>\n<pre><code>namespace n1\n{\n    template &lt;class T&gt;\n    void n2();\n\n    template &lt;class T&gt;\n    void n2(T);\n}\n\nnamespace n2 /* line 12 */\n{\n    class c {};\n}\n\nusing namespace n1;\n\nnamespace n3\n{\n    void foo(::n2::c);\n}\n\nvoid n3::foo(::n2::c) /* line 24 */\n{\n\n}\n</code></pre>\n", "OwnerUserId": "1621391", "LastEditorUserId": "2756409", "LastEditDate": "2016-04-15T13:19:52.563", "Id": "36645467", "Score": "2", "CreationDate": "2016-04-15T11:06:10.087", "LastActivityDate": "2016-04-15T13:19:52.563"}, "36644566": {"CommentCount": "2", "ViewCount": "158", "CreationDate": "2016-04-15T10:23:51.533", "LastActivityDate": "2016-04-15T13:19:52.563", "Title": "Visual C++ compiler giving wrong line reference for ambiguous symbol", "AcceptedAnswerId": "36645467", "PostTypeId": "1", "Id": "36644566", "Score": "4", "Body": "<p>The code is the following:</p>\n<pre><code>namespace n1\n{\n    template &lt;class T&gt;\n    void n2();\n\n    template &lt;class T&gt;\n    void n2(T);\n}\n\nnamespace n2 /* line 12 */\n{\n    class c {};\n}\n\nusing namespace n1;\n\nnamespace n3\n{\n    void foo(n2::c);\n}\n\nvoid n3::foo(n2::c) /* line 24 */\n{\n\n}\n</code></pre>\n<p>When trying to compile it using the latest version of Visual C++ I get the following error:</p>\n<pre><code>1&gt;test.cpp(24): error C2872: 'n2': ambiguous symbol\n1&gt;test.cpp(12): note: could be 'n2'\n1&gt;test.cpp(24): note: or       'n2'\n</code></pre>\n<p>Lines 12 and 24 are marked in the previous code piece with comments. </p>\n<p>What is going on here? If I remove the definition of foo and declare a variable of type n2::c outside a function argument list it compiles just fine, I suppose that because the compiler figures out I'm refering to the class and not to any of the template functions. Also if instead I remove the second definition of the two n2 template functions inside the namespace n1 then the compiler gives me an error message, but referencing the correct lines: line 12 and the line where n2 is defined as a function (instead of line 24). Is this a compiler bug?</p>\n", "Tags": "<c++><visual-studio-2015>", "OwnerUserId": "6208613", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_36644566_36645467_0": {"section_id": 5514, "quality": 1.0, "length": 17}, "so_36644566_36645467_2": {"section_id": 126, "quality": 0.75, "length": 9}}, "n3337": {"so_36644566_36645467_0": {"section_id": 5300, "quality": 1.0, "length": 17}, "so_36644566_36645467_2": {"section_id": 120, "quality": 0.75, "length": 9}}, "n4659": {"so_36644566_36645467_0": {"section_id": 6949, "quality": 1.0, "length": 17}, "so_36644566_36645467_2": {"section_id": 131, "quality": 0.75, "length": 9}}}});