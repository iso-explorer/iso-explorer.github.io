post_cb({"15598721": {"Id": "15598721", "PostTypeId": "2", "Body": "<p>Because the C standard guarantees that the characters <code>0, 1, 2, 3, 4, 5, 6, 7, 8, 9</code> are always in this order regarding their numerical character code. So, if you subtract the char code of <code>'0'</code> from another digit, it will give its position relative to <code>0</code>, which is its value...</p>\n<p>From the C standard, Section 5.2.1 Character sets:</p>\n<blockquote>\n<p id=\"so_15598698_15598721_0\">In both the source and execution basic character sets, the\n  value of each character after 0 in the above list of decimal digits shall be one greater than\n  the value of the previous</p>\n</blockquote>\n", "LastEditorDisplayName": "user529758", "OwnerDisplayName": "user529758", "LastActivityDate": "2013-03-24T13:12:19.923", "Score": "18", "CreationDate": "2013-03-24T12:56:53.077", "ParentId": "15598698", "CommentCount": "3", "LastEditDate": "2013-03-24T13:12:19.923"}, "15598714": {"Id": "15598714", "PostTypeId": "2", "Body": "<p>Because, the literals are arranged in sequence.</p>\n<p>So if <code>0</code> was 48, <code>1</code> will be 49, <code>2</code> will be 50 etc.. in ASCII, then <code>x</code> would contain, ascii value of <code>'9'</code> minus the ascii value of <code>'0'</code> which means, ascii value of <code>'9'</code> would be 57 and hence, <code>x</code> would contain <code>57 - 48 = 9</code>. </p>\n<p>Also, <code>char</code> is an integral type.</p>\n", "LastEditorUserId": "1680957", "LastActivityDate": "2013-03-24T13:02:33.733", "Score": "5", "CreationDate": "2013-03-24T12:56:12.617", "ParentId": "15598698", "CommentCount": "2", "LastEditDate": "2013-03-24T13:02:33.733", "OwnerUserId": "1680957"}, "15598720": {"Id": "15598720", "PostTypeId": "2", "Body": "<p>the code ascii of numeric chars are ordered in the order <code>'0' '1' '2' '3' '4' '5' '6' '7' '8' '9'</code> as indicated in the <a href=\"http://www.asciitable.com/\" rel=\"nofollow\">ascii table</a></p>\n<p>so if we make difference beween asii of <code>'9'</code> and ascii of <code>'0'</code> we will get <code>9</code></p>\n", "LastEditorUserId": "1003575", "LastActivityDate": "2013-03-24T13:05:08.940", "Score": "2", "CreationDate": "2013-03-24T12:56:41.647", "ParentId": "15598698", "CommentCount": "0", "LastEditDate": "2013-03-24T13:05:08.940", "OwnerUserId": "1003575"}, "15598730": {"Id": "15598730", "PostTypeId": "2", "Body": "<p>Look at the <a href=\"http://www.asciitable.com/\" rel=\"nofollow\">ASCII TABLE</a>:</p>\n<pre><code>'9' in ASCII =  57 //in Decimal\n\n'0' in ASCII =  48 //in Decimal\n</code></pre>\n<h1><strong>57 - 48 = 9</strong></h1>\n", "LastActivityDate": "2013-03-24T12:57:29.183", "Score": "2", "CreationDate": "2013-03-24T12:57:29.183", "ParentId": "15598698", "CommentCount": "4", "OwnerUserId": "1031955"}, "bq_ids": {"n4140": {"so_15598698_15598759_0": {"length": 21, "quality": 1.0, "section_id": 5343}, "so_15598698_15598759_5": {"length": 19, "quality": 1.0, "section_id": 5316}, "so_15598698_15598721_0": {"length": 19, "quality": 1.0, "section_id": 5316}, "so_15598698_15598759_3": {"length": 4, "quality": 0.8, "section_id": 500}}, "n3337": {"so_15598698_15598759_0": {"length": 17, "quality": 0.8095238095238095, "section_id": 5140}, "so_15598698_15598759_3": {"length": 4, "quality": 0.8, "section_id": 491}, "so_15598698_15598721_0": {"length": 19, "quality": 1.0, "section_id": 5113}, "so_15598698_15598759_5": {"length": 19, "quality": 1.0, "section_id": 5113}}, "n4659": {"so_15598698_15598759_0": {"length": 21, "quality": 1.0, "section_id": 6765}, "so_15598698_15598759_3": {"length": 4, "quality": 0.8, "section_id": 521}, "so_15598698_15598721_0": {"length": 19, "quality": 1.0, "section_id": 6740}, "so_15598698_15598759_5": {"length": 19, "quality": 1.0, "section_id": 6740}}}, "15598759": {"Id": "15598759", "PostTypeId": "2", "Body": "<p><code>char</code> is an integer type, just like <code>int</code> and family. An object of type <code>char</code> has some numerical value. The mapping between characters that you type in a character literal (like <code>'0'</code>) and the value that the <code>char</code> object has is determined by the encoding of that character in the <em>execution character set</em>:</p>\n<ul>\n<li><p>C++11 \u00a72.14.3:</p>\n<blockquote>\n<p id=\"so_15598698_15598759_0\">An ordinary character literal that contains a single <em>c-char</em> representable in the execution character set has type <code>char</code>, with value equal to the numerical value of the encoding of the <em>c-char</em> in the execution character set.</p>\n</blockquote></li>\n<li><p>C99 \u00a76.4.4.4:</p>\n<blockquote>\n<p id=\"so_15598698_15598759_1\">An integer character constant is a sequence of one or more multibyte characters enclosed in single-quotes, as in <code>'x'</code>.</p>\n<p id=\"so_15598698_15598759_2\">[...]</p>\n<p id=\"so_15598698_15598759_3\">An integer character constant has type <code>int</code>.</p>\n</blockquote>\n<p>Note that the <code>int</code> can be converted to a <code>char</code>.</p></li>\n</ul>\n<p>The choice of execution character set is up to the implementation. More often than not, the choice is ASCII compatible, so the tables posted in other answers have the appropriate values. However, the character set does not <em>need</em> to be ASCII compatible. There are some restrictions, though. One of them is as follows (C++11 \u00a72.3, C99 \u00a75.2.1):</p>\n<blockquote>\n<pre><code>a b c d e f g h i j k l m n o p q r s t u v w x y z\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n0 1 2 3 4 5 6 7 8 9\n_ { } [ ] # ( ) &lt; &gt; % : ; . ? * + - / ^ &amp; | ~ ! = , \\ \" \u2019\n</code></pre>\n<p id=\"so_15598698_15598759_4\">[...]</p>\n<p id=\"so_15598698_15598759_5\">In both the source and execution basic character sets, the value of each character after 0 in the above list of decimal digits shall be one greater than the value of the previous.</p>\n</blockquote>\n<p>This means that whatever value the character <code>'0'</code> has, the character <code>'1'</code> has value one more than <code>'0'</code>, and character <code>'2'</code> has value one more than that, and so on. The numeric characters have consecutive values. You can summarise the mapping like so:</p>\n<pre class=\"lang-none prettyprint-override\"><code>Character:            0    1    2    3    4    5    6    7    8    9\nCorresponding value:  X    X+1  X+2  X+3  X+4  X+5  X+6  X+7  X+8  X+9\n</code></pre>\n<p>All of the digit characters have values offset from the value of <code>'0'</code>.</p>\n<p>That means, if you have a character, let's say <code>'9'</code> and subtract <code>'0'</code> from it, you get the \"distance\" between the value of <code>'9'</code> and the value of <code>'0'</code> in the execution character set. Since they are consecutive, the distance will be 9.</p>\n", "LastEditorUserId": "150634", "LastActivityDate": "2013-03-24T13:18:08.583", "Score": "21", "CreationDate": "2013-03-24T13:00:02.660", "ParentId": "15598698", "CommentCount": "2", "LastEditDate": "2013-03-24T13:18:08.583", "OwnerUserId": "150634"}, "15598723": {"Id": "15598723", "PostTypeId": "2", "Body": "<p>In the ASCII-table the Digits are aligned sequentially, starting with the lowest code for <code>0</code>. If you subtract a higher number from <code>0</code>, you create the difference of the two ASCII-values.\nSo, <code>9</code> has value <code>57</code> and <code>0</code> has <code>48</code>, so if you subtract 48 from 57 you get 9.\nJust have a look at the ASCII-table.  </p>\n<p>Look <a href=\"http://www.asciitable.com/\" rel=\"nofollow\">here</a>.</p>\n", "LastEditorUserId": "2000082", "LastActivityDate": "2013-03-24T13:07:49.293", "Score": "2", "CreationDate": "2013-03-24T12:56:56.427", "ParentId": "15598698", "CommentCount": "0", "LastEditDate": "2013-03-24T13:07:49.293", "OwnerUserId": "2000082"}, "15598711": {"Id": "15598711", "PostTypeId": "2", "Body": "<p>Because the char are all represented by a number and '0' is the first of them all.</p>\n<p><strong>On the table below you see that:</strong></p>\n<pre><code>'0' =&gt; 48\n'1' =&gt; 49\n\n\n'9' =&gt; 57.\n</code></pre>\n<p><strong>As a result:</strong> (<code>'9'</code> - <code>'0'</code>) = (57 \u2212 48) = 9</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/u4GBZ.gif\">\n<em>Source: <a href=\"http://www.asciitable.com\" rel=\"noreferrer\">http://www.asciitable.com</a></em></img></p>\n", "LastEditorUserId": "1697109", "LastActivityDate": "2013-03-24T13:03:24.900", "Score": "24", "CreationDate": "2013-03-24T12:55:59.417", "ParentId": "15598698", "CommentCount": "10", "LastEditDate": "2013-03-24T13:03:24.900", "OwnerUserId": "1697109"}, "15598698": {"ViewCount": "11796", "Body": "<p>Can someone explain why this works?</p>\n<pre><code>char c = '9';\nint x = (int)(c - '0');\n</code></pre>\n<p>Why does subtracting '0' from an ascii code of a char result the number that that char is representing? </p>\n", "AcceptedAnswerId": "15598711", "Title": "Why does subtracting '0' in C result in the number that the char is representing?", "CreationDate": "2013-03-24T12:54:43.787", "Id": "15598698", "CommentCount": "1", "FavoriteCount": "4", "PostTypeId": "1", "LastEditDate": "2016-07-09T05:38:31.657", "LastEditorUserId": "2411320", "LastActivityDate": "2016-07-09T05:38:31.657", "Score": "14", "OwnerUserId": "2204498", "Tags": "<c++><c>", "AnswerCount": "8"}, "15598803": {"Id": "15598803", "PostTypeId": "2", "Body": "<p>First, try:</p>\n<pre><code>cout &lt;&lt; (int)'0' &lt;&lt; endl;\n</code></pre>\n<p>now try:</p>\n<pre><code>cout &lt;&lt; (int)'9' &lt;&lt; endl;\n</code></pre>\n<p>the charictors represent numbers in text form, but have a different value in when taken as a number.\nWindows uses a Number to decide which charictor to print. So the number 0x30 represents the charictor 0 in the windows OS. The number 0x39 represents the charictor 9. After all, all a computer can recognize is numbers, it does'nt know what a \"char\" is.</p>\n<p>Unfortunatly <code>(int)('f' - '0')</code> does not equal 15, though.</p>\n<p>This gives you the various charictors and the number windows uses to represent them.\n<a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx</a></p>\n<p>If you need to find that for another OS, you can search: <code>Virtual Key Codes &lt;OSname&gt;</code> in Google. to see what other OS's have as their codes.</p>\n", "LastActivityDate": "2013-03-24T13:04:03.013", "Score": "0", "CreationDate": "2013-03-24T13:04:03.013", "ParentId": "15598698", "CommentCount": "1", "OwnerUserId": "2043902"}});