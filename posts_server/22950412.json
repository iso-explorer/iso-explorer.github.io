post_cb({"bq_ids": {"n4140": {"so_22950412_22950466_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 1921}}, "n3337": {"so_22950412_22950466_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 1910}}, "n4659": {"so_22950412_22950466_0": {"length": 14, "quality": 0.7777777777777778, "section_id": 2192}}}, "22950466": {"Id": "22950466", "PostTypeId": "2", "Body": "<p>C++ says:</p>\n<blockquote>\n<p id=\"so_22950412_22950466_0\"><code>[C++11: 27.4.1/3]:</code> Mixing operations on corresponding wide- and narrow-character streams follows the same semantics as mixing such operations on <code>FILE</code>s, as specified in Amendment 1 of the ISO C standard.</p>\n</blockquote>\n<p>And <a href=\"http://www.unix.org/version2/whatsnew/login_mse.html\" rel=\"noreferrer\">the referenced document</a> says:</p>\n<blockquote>\n<p id=\"so_22950412_22950466_1\">The definition of a stream was changed to include the concept of an orientation for both text and binary streams. After a stream is associated with a file, but before any operations are performed on the stream, the stream is without orientation. If a wide-character input or output function is applied to a stream without orientation, the stream becomes wide-oriented. Likewise, if a byte input or output operation is applied to a stream with orientation, the stream becomes byte-oriented. Thereafter, only the <code>fwide()</code> or <code>freopen()</code> functions can alter the orientation of a stream.</p>\n<p id=\"so_22950412_22950466_2\"><strong>Byte input/output functions shall not be applied to a wide-oriented stream and wide-character input/output functions shall not be applied to a byte-oriented stream.</strong></p>\n</blockquote>\n<p>By my interpretation this means, in short, <strong>do not mix <code>std::cout</code> and <code>std::wcout</code></strong>.</p>\n", "LastActivityDate": "2014-04-09T00:02:00.527", "CommentCount": "0", "CreationDate": "2014-04-09T00:02:00.527", "ParentId": "22950412", "Score": "8", "OwnerUserId": "560648"}, "22950412": {"ViewCount": "1206", "Body": "<p>can't get \"wcout\" to print unicode string in multiple code pages, together with leaving \"cout\" to work</p>\n<p>please help me get these 3 lines to work together.</p>\n<pre><code>std::wcout&lt;&lt;\"abc \"&lt;&lt;L'\\u240d'&lt;&lt;\" defg \"&lt;&lt;L'\u05d0'&lt;&lt;\" hijk\"&lt;&lt;std::endl;\nstd::cout&lt;&lt;\"hello world from cout! \\n\";\nstd::wcout&lt;&lt;\"hello world from wcout! \\n\";\n</code></pre>\n<p>output:</p>\n<pre><code>abc hello world from cout!\n</code></pre>\n<p>i tried:</p>\n<pre><code>#include &lt;io.h&gt; \n#include &lt;fcntl.h&gt;\n_setmode(_fileno(stdout), _O_U8TEXT);\n</code></pre>\n<p>problem:\n\"cout\" failed</p>\n<p>tried:</p>\n<pre><code>std::locale mylocale(\"\");\nstd::wcout.imbue(mylocale);\n</code></pre>\n<p>and:</p>\n<pre><code>SetConsoleOutputCP(1251);\n</code></pre>\n<p>and</p>\n<pre><code>setlocale(LC_ALL, \"\");\n</code></pre>\n<p>and</p>\n<pre><code>SetConsoleCP(CP_UTF8)\n</code></pre>\n<p>Nothing worked</p>\n", "Title": "c++ can't get \"wcout\" to print unicode, and leave \"cout\" working", "CreationDate": "2014-04-08T23:54:49.993", "LastActivityDate": "2014-04-09T00:02:00.527", "CommentCount": "5", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2014-04-08T23:57:16.910", "LastEditorUserId": "3204551", "Id": "22950412", "Score": "3", "OwnerUserId": "1438233", "Tags": "<c++><windows><unicode><utf-8><cout>", "AnswerCount": "1"}});