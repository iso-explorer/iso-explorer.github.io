post_cb({"2252363": {"Id": "2252363", "PostTypeId": "2", "Body": "<p>From the standard:</p>\n<blockquote>\n<p id=\"so_2252314_2252363_0\">15.2.4: The memory for the temporary copy of the exception being thrown is\n  allocated in an unspecified way,\n  except as noted in 3.7.3.1.</p>\n</blockquote>\n<p>And 3.7.3.1 says:</p>\n<blockquote>\n<p id=\"so_2252314_2252363_1\">3.7.3.1: All objects which neither have dynamic\n  storage duration nor are local have\n  static storage duration. The storage\n  for these objects shall last for the\n  duration of the program (3.6.2,\n  3.6.3).</p>\n</blockquote>\n", "LastActivityDate": "2010-02-12T14:20:59.243", "CommentCount": "0", "CreationDate": "2010-02-12T14:20:59.243", "ParentId": "2252314", "Score": "5", "OwnerUserId": "59844"}, "2252356": {"Id": "2252356", "PostTypeId": "2", "Body": "<p>Exceptions are always thrown by value so no problem even if allocated on stack</p>\n", "LastActivityDate": "2010-02-12T14:20:19.757", "CommentCount": "0", "CreationDate": "2010-02-12T14:20:19.757", "ParentId": "2252314", "Score": "0", "OwnerUserId": "240857"}, "bq_ids": {"n4140": {"so_2252314_2252363_1": {"length": 12, "quality": 0.5714285714285714, "section_id": 7164}}, "n3337": {"so_2252314_2252363_1": {"length": 12, "quality": 0.5714285714285714, "section_id": 6908}}, "n4659": {"so_2252314_2252363_1": {"length": 12, "quality": 0.5714285714285714, "section_id": 8672}}}, "2252338": {"Id": "2252338", "PostTypeId": "2", "Body": "<p>The answer is \"in a mysterious area managed by the compiler\" - seriously, the standard doesn't specify where they must be stored.</p>\n", "OwnerDisplayName": "anon", "LastActivityDate": "2010-02-12T14:18:32.553", "Score": "3", "CreationDate": "2010-02-12T14:18:32.553", "ParentId": "2252314", "CommentCount": "0"}, "2252492": {"Id": "2252492", "PostTypeId": "2", "Body": "<p>Is kitchen quoted from the standard, it is unspecified. Most implementations allocate them from heap, as they need to survive the stack unwinding process, which may remove stack frames (when throwing outside a function) or create new ones (calling destructors etc). GCC uses built-in function <code>__cxa_allocate_exception</code> for allocating the memory.</p>\n", "LastActivityDate": "2010-02-12T14:38:03.987", "CommentCount": "0", "CreationDate": "2010-02-12T14:38:03.987", "ParentId": "2252314", "Score": "1", "OwnerUserId": "238233"}, "2252314": {"ViewCount": "110", "Body": "<p>I could not find the information where are exception class instances created during exception handling ? In which memory area (stack, heap, static storage, etc.) ? I assume it is not on the stack because of stack-unwinding ...</p>\n", "AcceptedAnswerId": "2252363", "Title": "In which memory area are exception classes instances created?", "CreationDate": "2010-02-12T14:15:06.507", "Id": "2252314", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2010-02-12T14:38:03.987", "Score": "7", "OwnerUserId": "137261", "Tags": "<c++><exception>", "AnswerCount": "4"}});