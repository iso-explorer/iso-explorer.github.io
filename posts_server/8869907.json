post_cb({"8870002": {"ParentId": "8869907", "PostTypeId": "2", "CommentCount": "0", "Body": "<p><strong>C++03 Standard $11.8/1: [class.access.nest]</strong> </p>\n<p><strong>The members of a nested class have no special access to members of an enclosing class</strong>, nor to classes or functions that have granted friendship to an enclosing class; the usual access rules (clause 11) shall be obeyed. <strong>The members of an enclosing class have no special access to members of a nested class; the usual access rules (clause 11) shall be obeyed.</strong></p>\n<p>But this is a defect:    </p>\n<p><strong><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#45\" rel=\"nofollow\">45. Access to nested classes</a></strong></p>\n<p>In C++11, this has been corrected: in C++11 nested classes do have access to private members of the enclosing class (though the enclosing class still doesn't have access to private members of the nested classes).</p>\n<p><strong>C++11 Standard 11.7 Nested classes:</strong> says   </p>\n<blockquote>\n<p id=\"so_8869907_8870002_0\">A nested class is a member and as such has the same access rights as any other member. The members of an enclosing class have no special access to members of a nested class; the usual access rules (Clause 11)\n  shall be obeyed. [</p>\n</blockquote>\n<pre><code>class E {\n  int x;\n  class B { };\n  class I {\n    B b; // OK:E::I can accessE::B\n    int y;\n    void f(E* p, int i) {\n      p-&gt;x = i; // OK:E::I can accessE::x\n    }\n  };\n  int g(I* p) {\n    return p-&gt;y; // error:I::y is private\n  }\n};\n\u2014end example]\n</code></pre>\n<p>The example is similar to the one you have in question and it clearly shows its valid behavior.</p>\n", "OwnerUserId": "452307", "LastEditorUserId": "1156377", "LastEditDate": "2015-08-22T12:17:13.063", "Id": "8870002", "Score": "8", "CreationDate": "2012-01-15T13:31:38.310", "LastActivityDate": "2015-08-22T12:17:13.063"}, "8869944": {"ParentId": "8869907", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>According to that document XL C/C++ V8.0 does not support C++11, see the \"Language standards compliance\" section.</p>\n<blockquote>\n<p id=\"so_8869907_8869944_0\">The compiler supports the following programming language specifications for C and C++:</p>\n<ul>\n<li>ISO/IEC 9899:1999 (C99)</li>\n<li>ISO/IEC 9899:1990 (referred to as C89)</li>\n<li>ISO/IEC 14882:2003 (referred to as Standard C++)</li>\n<li>ISO/IEC 14882:1998, the first official specification of the language\n  (referred to as C++98)</li>\n</ul>\n</blockquote>\n<p>The current standard says (ISO/IEC 14882:2011 11.7):</p>\n<blockquote>\n<p id=\"so_8869907_8869944_1\"><strong>A nested class is a member and as such has the same access rights as any other member.</strong> The members of an enclosing class have no special access to members of a nested class; the usual access rules (Clause 11) shall be obeyed.</p>\n</blockquote>\n<p>In the previous language standard whether this access either wasn't allowed, or at the least it was unclear whether it should be allowed, depending on your interpretation.</p>\n", "OwnerUserId": "19563", "LastEditorUserId": "19563", "LastEditDate": "2012-01-15T13:57:37.370", "Id": "8869944", "Score": "4", "CreationDate": "2012-01-15T13:24:38.047", "LastActivityDate": "2012-01-15T13:57:37.370"}, "8869907": {"CommentCount": "0", "ViewCount": "2681", "CreationDate": "2012-01-15T13:18:55.173", "LastActivityDate": "2015-08-22T12:17:13.063", "Title": "Access to private member data of outer class in inner class", "AcceptedAnswerId": "8869944", "PostTypeId": "1", "Id": "8869907", "Score": "7", "Body": "<p>There is this code:</p>\n<pre><code>#include &lt;iostream&gt;\n\nclass Outer{\n    int a; // private data member of class Outer\npublic:\n    Outer(): a(55){}\n    class Inner{\n    public:\n        void fun(Outer ob){\n            std::cout &lt;&lt; ob.a &lt;&lt; std::endl;\n        }\n    };\n};\n\nint main() {\n\n    Outer::Inner object;\n    object.fun(Outer()); // prints 55\n    //std::cout &lt;&lt; (Outer().a) &lt;&lt; std::endl; error: 'int Outer::a' is private\n\n    return 0;\n} \n</code></pre>\n<p>Why Inner class has access to private member data 'a' of class Outer? Following this article <a href=\"http://publib.boulder.ibm.com/infocenter/lnxpcomp/v8v101/index.jsp?topic=/com.ibm.xlcpp8l.doc/language/ref/cplr061.htm\" rel=\"noreferrer\">XL C/C++ V8.0 for Linux</a>, it should not compile, however it compiles on g++ 4.4.0.</p>\n", "Tags": "<c++><nested-class>", "OwnerUserId": "738811", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_8869907_8870002_0": {"section_id": 6700, "quality": 0.9583333333333334, "length": 23}, "so_8869907_8869944_1": {"section_id": 6700, "quality": 0.9583333333333334, "length": 23}}, "n3337": {"so_8869907_8870002_0": {"section_id": 6455, "quality": 0.9583333333333334, "length": 23}, "so_8869907_8869944_1": {"section_id": 6455, "quality": 0.9583333333333334, "length": 23}}, "n4659": {"so_8869907_8870002_0": {"section_id": 8174, "quality": 0.9583333333333334, "length": 23}, "so_8869907_8869944_1": {"section_id": 8174, "quality": 0.9583333333333334, "length": 23}}}});