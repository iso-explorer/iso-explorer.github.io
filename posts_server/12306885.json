post_cb({"12306885": {"CommentCount": "11", "ViewCount": "108", "CreationDate": "2012-09-06T19:17:24.217", "LastActivityDate": "2012-09-06T19:26:15.700", "Title": "Additional comma in the end of aggregates in C++98 / C++03", "PostTypeId": "1", "Id": "12306885", "Score": "0", "Body": "<p>Why i can't use additional comma in the end of the initializer-list of aggregates in C++98 / C++03?</p>\n<p><strong>ISO/IEC 14882:2003</strong></p>\n<blockquote>\n<p id=\"so_12306885_12306885_0\">8.5 Initializers [dcl.init]</p>\n<p id=\"so_12306885_12306885_1\">= initializer-clause ( expression-list ) initializer-clause: assignment-expression { initializer-list ,opt } { } initializer-list:\n  initializer-clause initializer-list , initializer-clause</p>\n</blockquote>\n<p>There are additional comma after initializer-list with opt specifier, right? Why i can't use it?</p>\n", "Tags": "<c++>", "OwnerUserId": "1608835", "AnswerCount": "1"}, "12307010": {"ParentId": "12306885", "CommentCount": "1", "Body": "<p>The standard is pretty clear here: the trailing comma <em>is</em> allowed (a similar feature exists for declarations of constants within enums). The fact that you can't use it is a matter of the quality of implementation that you're using.</p>\n", "Id": "12307010", "PostTypeId": "2", "OwnerDisplayName": "user283145", "Score": "2", "CreationDate": "2012-09-06T19:26:15.700", "LastActivityDate": "2012-09-06T19:26:15.700"}, "bq_ids": {"n4140": {"so_12306885_12306885_1": {"section_id": 3280, "quality": 0.6, "length": 6}}, "n3337": {"so_12306885_12306885_1": {"section_id": 3151, "quality": 0.6, "length": 6}}, "n4659": {"so_12306885_12306885_1": {"section_id": 4042, "quality": 0.6, "length": 6}}}});