post_cb({"13870489": {"ViewCount": "2616", "Body": "<p>I always thought it was but many IDEs and syntax highlighting tools do not highlight ASM in C, but they always do with C++. Is inline assembly part of the C standard (ANSII or ISO) or not?</p>\n", "AcceptedAnswerId": "13870521", "Title": "Is inline asm part of the ANSI C standard?", "CreationDate": "2012-12-13T23:39:36.860", "Id": "13870489", "CommentCount": "3", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2012-12-14T02:28:16.293", "LastEditorUserId": "574251", "LastActivityDate": "2012-12-14T02:28:16.293", "Score": "7", "OwnerUserId": "1871160", "Tags": "<c++><c><inline-assembly>", "AnswerCount": "3"}, "13870506": {"Id": "13870506", "PostTypeId": "2", "Body": "<p>No - inline asm is a common extension, but non-standard (and quite often implemented differently by different vendors).</p>\n", "LastActivityDate": "2012-12-13T23:41:25.593", "Score": "2", "CreationDate": "2012-12-13T23:41:25.593", "ParentId": "13870489", "CommentCount": "0", "OwnerUserId": "12711"}, "bq_ids": {"n4140": {"so_13870489_13870707_2": {"length": 6, "quality": 0.75, "section_id": 5516}, "so_13870489_13870521_5": {"length": 11, "quality": 0.6875, "section_id": 5516}}, "n3337": {"so_13870489_13870707_2": {"length": 6, "quality": 0.75, "section_id": 5302}, "so_13870489_13870521_5": {"length": 11, "quality": 0.6875, "section_id": 5302}}, "n4659": {"so_13870489_13870707_2": {"length": 6, "quality": 0.75, "section_id": 6951}, "so_13870489_13870521_5": {"length": 11, "quality": 0.6875, "section_id": 6951}}}, "13870521": {"Id": "13870521", "PostTypeId": "2", "Body": "<p>It's not in the ISO C standard (n1570 draft of C2011) as such, but mentioned in annex J (common extensions):</p>\n<blockquote>\n<p id=\"so_13870489_13870521_0\"><strong>J.5.10 The asm keyword</strong></p>\n<p id=\"so_13870489_13870521_1\">1 The asm keyword may be used to insert assembly language directly into the translator output (6.8). The most common implementation is via a statement of the form:</p>\n<pre><code>asm ( character-string-literal );\n</code></pre>\n</blockquote>\n<p>Annex J is informative, not normative, so an implementation need not provide inline assembly, and if it does it's not prescribed in which form. But it's a widespread extension, though not portable since compilers do indeed implement it differently.</p>\n<p>In the C++ standard (n3376 draft of the C++11 standard), it is mentioned in the body of the standard</p>\n<blockquote>\n<p id=\"so_13870489_13870521_2\"><strong>7.4 The asm declaration</strong> [dcl.asm]</p>\n<p id=\"so_13870489_13870521_3\">1 An asm declaration has the form</p>\n<p id=\"so_13870489_13870521_4\"><em>asm-definition:</em></p>\n<pre><code>asm ( string-literal ) ;\n</code></pre>\n<p id=\"so_13870489_13870521_5\">The asm declaration is conditionally-supported; its meaning is implementation-defined. [ Note: Typically\n  it is used to pass information through the implementation to an assembler. \u2014 end note ]</p>\n</blockquote>\n<p>but also not mandatory, and with implementation-defined interpretation.</p>\n", "LastEditorUserId": "1011995", "LastActivityDate": "2012-12-14T00:13:14.980", "Score": "15", "CreationDate": "2012-12-13T23:42:33.153", "ParentId": "13870489", "CommentCount": "1", "LastEditDate": "2012-12-14T00:13:14.980", "OwnerUserId": "1011995"}, "13870707": {"Id": "13870707", "PostTypeId": "2", "Body": "<p>Contrary to popular belief, <code>asm</code> <em>is</em> in the C++ standard proper, but support for it is conditional. \u00a77.4/1:</p>\n<blockquote>\n<p id=\"so_13870489_13870707_0\">An asm declaration has the form</p>\n<p id=\"so_13870489_13870707_1\"><em>asm-definition</em>:</p>\n<pre><code>asm ( string-literal ) ;\n</code></pre>\n<p id=\"so_13870489_13870707_2\">The asm declaration is conditionally-supported; its meaning is implementation-\n      defined.</p>\n</blockquote>\n<p>That said, the \"conditionally supported\" means you can't depend on a particular compiler supporting this at all. Microsoft (for one obvious example) uses an <code>_asm</code> keyword instead, but with a completely different syntax (the assembly language is enclosed in braces instead of a string literal).</p>\n", "LastActivityDate": "2012-12-14T00:01:52.250", "Score": "4", "CreationDate": "2012-12-14T00:01:52.250", "ParentId": "13870489", "CommentCount": "0", "OwnerUserId": "179910"}});