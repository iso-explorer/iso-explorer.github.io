post_cb({"bq_ids": {"n4140": {"so_27689942_27689942_0": {"section_id": 6185, "quality": 1.0, "length": 7}}, "n3337": {"so_27689942_27689942_0": {"section_id": 5946, "quality": 1.0, "length": 7}}, "n4659": {"so_27689942_27689942_0": {"section_id": 7687, "quality": 1.0, "length": 7}}}, "27689942": {"CommentCount": "5", "ViewCount": "142", "PostTypeId": "1", "LastEditorUserId": "1708801", "CreationDate": "2014-12-29T13:35:32.463", "LastActivityDate": "2015-01-09T19:13:45.187", "Title": "What do the words \"undefined\" mean in bullet point \u00a75.19/2.3 in N4140?", "AcceptedAnswerId": "27690257", "LastEditDate": "2014-12-29T17:41:10.493", "Id": "27689942", "Score": "4", "Body": "<p>From <a href=\"https://github.com/cplusplus/draft/blob/master/papers/n4140.pdf\" rel=\"nofollow\">N4140</a> \u00a75.19/2.3 (emphasis mine)</p>\n<blockquote>\n<p id=\"so_27689942_27689942_0\">\u2014 an invocation of an <strong>undefined</strong> constexpr function or an\n  <strong>undefined</strong> constexpr constructor;</p>\n</blockquote>\n<p>From \u00a77.1.5/2 constexpr functions and constructors are implicitly inlined, that is, if a constexpr function is not defined in a TU the code will just not compile.</p>\n", "Tags": "<c++><language-lawyer><c++14><constexpr><constant-expression>", "OwnerUserId": "1042389", "AnswerCount": "1"}, "27690257": {"ParentId": "27689942", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>This bullet was added by <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3383.html#699\" rel=\"nofollow\">defect report 699</a> and it requires that a constexpr function or constructor must be defined before use. The defect report added the following example to <code>7.1.5</code> to demonstrate the rule:</p>\n<pre><code>constexpr int square(int x);       //OK, declaration\nconstexpr struct pixel {           // error: pixel is a type\n    int x;\n    int y;\n    constexpr pixel(int);            // OK, declaration\n};\nconstexpr pixel::pixel(int a)\n    : x(square(a)), y(square(a)) { } //OK, definition\nconstexpr pixel small(2);          // error: square not defined, so small(2)\n                                     // not constant (5.19 [expr.const]), so constexpr not satisfied\nconstexpr int square(int x) {      // OK, definition\n    return x * x;\n}\nconstexpr pixel large(4);          // OK, square defined\n</code></pre>\n<p>Note, the wording from this report changed with <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3383.html#1365\" rel=\"nofollow\">defect report 1365</a> to the wording currently in the draft standard.</p>\n", "OwnerUserId": "1708801", "LastEditorUserId": "1708801", "LastEditDate": "2015-01-09T19:13:45.187", "Id": "27690257", "Score": "7", "CreationDate": "2014-12-29T13:55:14.093", "LastActivityDate": "2015-01-09T19:13:45.187"}});