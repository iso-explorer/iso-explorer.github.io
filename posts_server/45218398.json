post_cb({"bq_ids": {"n4140": {"so_45218398_45218608_0": {"length": 45, "quality": 1.0, "section_id": 748}}, "n3337": {"so_45218398_45218608_0": {"length": 45, "quality": 1.0, "section_id": 737}}, "n4659": {"so_45218398_45218608_0": {"length": 45, "quality": 1.0, "section_id": 807}}}, "45218398": {"ViewCount": "146", "Body": "<p>Is <code>std::map</code> copy assignment (in style <code>map1 = map2;</code>) required to copy  comparator of <code>map2</code> to <code>map1</code>?</p>\n<p>I have tested that actual implementations do that. I am more interested about where in C++ standard it is specified.</p>\n", "AcceptedAnswerId": "45218608", "Title": "Does std::map assign its comparator?", "CreationDate": "2017-07-20T14:58:12.293", "Id": "45218398", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2017-07-20T15:07:42.340", "LastEditorUserId": "4342498", "LastActivityDate": "2017-07-20T15:07:42.340", "Score": "9", "OwnerUserId": "528720", "Tags": "<c++><dictionary><language-lawyer><assignment-operator>", "AnswerCount": "2"}, "45218608": {"Id": "45218608", "PostTypeId": "2", "Body": "<p>If we look at [associative.reqmts]/12 we have</p>\n<blockquote>\n<p id=\"so_45218398_45218608_0\">When an associative container is constructed by passing a comparison object the container shall not store a pointer or reference to the passed object, even if that object is passed by reference. When an associative container is copied, either through a copy constructor or an assignment operator, <strong>the target container shall then use the comparison object from the container being copied</strong>, as if that comparison object had been passed to the target container in its constructor.</p>\n</blockquote>\n<p><sup>emphasis mine</sup></p>\n<p>So, in your example, <code>map1</code> will get a copy of <code>map2</code>'s comparator.</p>\n", "LastActivityDate": "2017-07-20T15:06:22.547", "CommentCount": "0", "CreationDate": "2017-07-20T15:06:22.547", "ParentId": "45218398", "Score": "11", "OwnerUserId": "4342498"}, "45218612": {"Id": "45218612", "PostTypeId": "2", "Body": "<p>From <a href=\"http://www.cplusplus.com/reference/map/map/map/\" rel=\"nofollow noreferrer\">cplusplus.com</a> you can see that under copy-constructor (3) says</p>\n<p>(3)  <code>map (const map&amp; x);</code></p>\n<blockquote>\n<p id=\"so_45218398_45218612_0\">The container keeps an internal copy of alloc and <strong>comp</strong>, which are used\n  to allocate storage and to sort the elements throughout its lifetime.\n  The copy constructor (3) creates a container that keeps and uses\n  copies of x's allocator and comparison object.</p>\n</blockquote>\n", "LastActivityDate": "2017-07-20T15:06:32.290", "CommentCount": "3", "CreationDate": "2017-07-20T15:06:32.290", "ParentId": "45218398", "Score": "-2", "OwnerUserId": "1417063"}});