post_cb({"bq_ids": {"n4140": {"so_26120395_26120507_0": {"length": 7, "quality": 1.0, "section_id": 3290}, "so_26120395_26120507_1": {"length": 4, "quality": 0.8, "section_id": 3290}, "so_26120395_26120507_3": {"length": 15, "quality": 0.7142857142857143, "section_id": 3290}}, "n3337": {"so_26120395_26120507_0": {"length": 7, "quality": 1.0, "section_id": 3160}, "so_26120395_26120507_1": {"length": 4, "quality": 0.8, "section_id": 3160}, "so_26120395_26120507_3": {"length": 15, "quality": 0.7142857142857143, "section_id": 3160}}, "n4659": {"so_26120395_26120507_0": {"length": 7, "quality": 1.0, "section_id": 4052}, "so_26120395_26120507_1": {"length": 4, "quality": 0.8, "section_id": 4052}, "so_26120395_26120507_3": {"length": 15, "quality": 0.7142857142857143, "section_id": 4052}}}, "26120395": {"ViewCount": "65", "Body": "<p>Why does the following code not work? I get error C2059 'constant'. Using Visual C++ 2008.</p>\n<pre><code>class C {\npublic:\n    C(int arg) {}\n};\n\nclass B {\npublic:\n    C c(1); //error C2059\n    B() {}\n};\n</code></pre>\n<p>I can't define a default constructor. Also I can't declare a pointer to C and then \"new it\" in B's constructor.</p>\n", "AcceptedAnswerId": "26120507", "Title": "Creating a class instance as a member of another class", "CreationDate": "2014-09-30T12:03:45.170", "Id": "26120395", "CommentCount": "6", "LastEditDate": "2014-09-30T12:29:24.243", "PostTypeId": "1", "LastEditorUserId": "560648", "LastActivityDate": "2014-09-30T12:30:40.960", "Score": "-1", "OwnerUserId": "3982556", "Tags": "<c++><visual-c++>", "AnswerCount": "2"}, "26120509": {"Id": "26120509", "PostTypeId": "2", "Body": "<p>The usual way to do what I think you're trying to do is with a <a href=\"http://en.cppreference.com/w/cpp/language/initializer_list\" rel=\"nofollow\">member initialiser list</a>:</p>\n<pre><code>class B {\npublic:\n    C c;\n    B() : c(1) {}\n};\n</code></pre>\n", "LastEditorUserId": "560648", "LastActivityDate": "2014-09-30T12:28:59.227", "Score": "1", "CreationDate": "2014-09-30T12:09:39.427", "ParentId": "26120395", "CommentCount": "0", "OwnerUserId": "418066", "LastEditDate": "2014-09-30T12:28:59.227"}, "26120507": {"Id": "26120507", "PostTypeId": "2", "Body": "<p><code>C c()</code> is being interpreted as a function declaration, and the int literal <code>1</code> by itself makes the syntax invalid. Consider using braces instead (C++11) or direct initialization:</p>\n<pre><code>C c{1};\n</code></pre>\n<p>or:</p>\n<pre><code>B() : c(1) {}\n</code></pre>\n<p>\u00a7 8.5</p>\n<blockquote>\n<p id=\"so_26120395_26120507_0\">11 An object whose initializer is an empty set of parentheses, i.e.,\n  <code>()</code>, shall be value-initialized. </p>\n<p id=\"so_26120395_26120507_1\">[ Note: Since <code>()</code> is not permitted\n  by the syntax for <em>initializer</em>, </p>\n<p id=\"so_26120395_26120507_2\"><code>X a();</code> </p>\n<p id=\"so_26120395_26120507_3\">is not the declaration of an\n  object of class <code>X</code>, but the declaration of a function taking no\n  argument and returning an X. The form <code>()</code> is permitted in certain\n  other initialization contexts (5.3.4, 5.2.3, 12.6.2). \u2014 end note ]</p>\n</blockquote>\n", "LastEditorDisplayName": "user3920237", "OwnerDisplayName": "user3920237", "LastActivityDate": "2014-09-30T12:30:40.960", "Score": "2", "CreationDate": "2014-09-30T12:09:29.690", "ParentId": "26120395", "CommentCount": "1", "LastEditDate": "2014-09-30T12:30:40.960"}});