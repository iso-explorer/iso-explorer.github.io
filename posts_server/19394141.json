post_cb({"19394141": {"CommentCount": "6", "AcceptedAnswerId": "19394188", "PostTypeId": "1", "LastEditorUserId": "1009479", "CreationDate": "2013-10-16T02:10:31.927", "LastActivityDate": "2013-10-16T02:22:44.070", "LastEditDate": "2013-10-16T02:22:44.070", "ViewCount": "773", "FavoriteCount": "2", "Title": "Why does this code with '1234' compile in C++?", "Id": "19394141", "Score": "17", "Body": "<p>Why does this compile:</p>\n<pre><code>char ch = '1234'; //no error\n</code></pre>\n<p>But not anything more than 4 <code>char</code>s :</p>\n<pre><code>char ch = '12345'; //error: Too many chars in constant\n</code></pre>\n<p>(Yes I know <code>' '</code> is used for one <code>char</code> and <code>\" \"</code> is for strings; I was just experimenting)</p>\n<p>Does this have anything to do with the fact that <code>char</code>s are represented using ASCII numbers?</p>\n", "Tags": "<c++><char>", "OwnerUserId": "2533949", "AnswerCount": "2"}, "19394168": {"ParentId": "19394141", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>C++ has something called \"multicharacter literals\". <code>'1234'</code> is an example of one. They have type <code>int</code>, and it is implementation-defined what value they have and how many characters they can contain.</p>\n<p>It's nothing <em>directly</em> to do with the fact that characters are represented as integers, but chances are good that in your implementation the value of <code>'1234'</code> is defined to be either:</p>\n<pre><code>'1' + 256 * '2' + 256 * 256 * '3' + 256 * 256 * 256 * '4'\n</code></pre>\n<p>or:</p>\n<pre><code>'4' + 256 * '3' + 256 * 256 * '2' + 256 * 256 * 256 * '1'\n</code></pre>\n", "OwnerUserId": "13005", "LastEditorUserId": "13005", "LastEditDate": "2013-10-16T02:18:34.737", "Id": "19394168", "Score": "16", "CreationDate": "2013-10-16T02:12:57.233", "LastActivityDate": "2013-10-16T02:18:34.737"}, "19394188": {"ParentId": "19394141", "CommentCount": "4", "Body": "<p>It's a multicharacter literal, and has a type of <code>int</code>.</p>\n<blockquote>\n<h3>C++11 \u00a72.13.2 Character literals</h3>\n<p id=\"so_19394141_19394188_0\">A character literal is one or more characters enclosed in single quotes, as in <code>\u2019x\u2019</code>, optionally preceded by the letter <code>L</code>, as in <code>L\u2019x\u2019</code>. A character literal that does not begin with <code>L</code> is an ordinary character literal, also referred to as a narrow-character literal. An ordinary character literal that contains a single c-char has type char, with value equal to the numerical value of the encoding of the c-char in the execution character set. <strong>An ordinary character literal that contains more than one c-char is a multicharacter literal. A multicharacter literal has type <code>int</code> and implementation-defined value.</strong></p>\n</blockquote>\n", "OwnerUserId": "1009479", "PostTypeId": "2", "Id": "19394188", "Score": "15", "CreationDate": "2013-10-16T02:15:27.617", "LastActivityDate": "2013-10-16T02:15:27.617"}, "bq_ids": {"n4140": {"so_19394141_19394188_0": {"section_id": 5343, "quality": 0.9454545454545454, "length": 52}}, "n3337": {"so_19394141_19394188_0": {"section_id": 5140, "quality": 0.9454545454545454, "length": 52}}, "n4659": {"so_19394141_19394188_0": {"section_id": 6765, "quality": 0.6909090909090909, "length": 38}}}});