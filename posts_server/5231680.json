post_cb({"5231750": {"ParentId": "5231680", "CommentCount": "0", "Body": "<p>The one definition rule doesn't apply to <code>typedef</code>s. A <code>typedef</code> (on its own) doesn't define a new variable, function, class type, enumeration type or template. You are explicitly allowed to redefine a previous <em>typedef-name</em> to refer to the type that it already refers to.</p>\n<p>7.1.3 [dcl.typedef]:</p>\n<blockquote>\n<p id=\"so_5231680_5231750_0\">In a given non-class scope, a <code>typedef</code> specifier can be used to redefine the name of any type declared in that scope to refer to the type to which it already refers.</p>\n</blockquote>\n", "OwnerUserId": "19563", "PostTypeId": "2", "Id": "5231750", "Score": "2", "CreationDate": "2011-03-08T11:21:20.510", "LastActivityDate": "2011-03-08T11:21:20.510"}, "5231680": {"CommentCount": "0", "ViewCount": "1749", "CreationDate": "2011-03-08T11:14:53.333", "LastActivityDate": "2011-03-08T11:21:20.510", "Title": "shared pointer forward declaration", "AcceptedAnswerId": "5231750", "PostTypeId": "1", "Id": "5231680", "Score": "0", "Body": "<p>I have an interface <code>Interface</code>.\nI also have a .h file <code>InterfaceFwd.h</code> which looks something like</p>\n<pre><code>#ifndef Blah\n#define Blah\n#include &lt;boost/shared_ptr.hpp&gt;\nclass Interface;\ntypedef boost::shared_ptr&lt;Interface&gt; InterfacePtr;\n#endif\n</code></pre>\n<p>I also have Interface.h</p>\n<pre><code>#ifndef SomeOtherBlah\n#define SomeOtherBlah\nclass Interface\n{\n   virtual ~Interface()\n   { \n   }\n   ... \n};\ntypedef boost::shared_ptr&lt;Interface&gt; InterfacePtr;\n#endif\n</code></pre>\n<p>Do I need to worry that if both files are included there will be duplicate declaration of InterfacePtr? On my compiler this compiles fine, but does the standard One-Definition Rule allow multiple identical typedef-declarations? Also, do you think I should include <code>InterfaceFwd.h</code> into <code>Interface.h</code> instead of redeclaring <code>InterfacePtr</code> or it's fine as it is?</p>\n<p>Thanks in advance</p>\n", "Tags": "<c++><typedef><forward-declaration><shared-ptr>", "OwnerUserId": "469935", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_5231680_5231750_0": {"section_id": 5409, "quality": 1.0, "length": 15}}, "n3337": {"so_5231680_5231750_0": {"section_id": 5204, "quality": 1.0, "length": 15}}, "n4659": {"so_5231680_5231750_0": {"section_id": 6831, "quality": 1.0, "length": 15}}}});