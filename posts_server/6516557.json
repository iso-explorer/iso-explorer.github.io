post_cb({"6516557": {"CreationDate": "2011-06-29T06:30:25.807", "ViewCount": "97", "Score": "2", "Id": "6516557", "Title": "Is it well defined to declare an object of the class before its static variable in global space?", "CommentCount": "1", "Body": "<p>Following is a simple case of counting objects:</p>\n<pre><code>struct A\n{\n  static int count;\n  A () { ++ count; }\n};\n</code></pre>\n<p>Now, its object and <code>static</code> member are declared as:</p>\n<pre><code>A obj;  // comes 1st\nint A::count = 5;  // comes 2nd\n</code></pre>\n<p><a href=\"http://www.ideone.com/aO0h9\" rel=\"nofollow\">g++ produces expected result</a>. But since, definition of <code>A::count</code> comes after one of the <code>A</code> instance in global space, shouldn't it be <strong>undefined behavior</strong> ?</p>\n", "Tags": "<c++><initialization><static-members><undefined-behavior>", "LastActivityDate": "2011-06-29T06:43:01.313", "PostTypeId": "1", "AnswerCount": "1", "OwnerUserId": "514235"}, "bq_ids": {"n4140": {"so_6516557_6516695_0": {"length": 25, "quality": 0.5681818181818182, "section_id": 7151}}, "n3337": {"so_6516557_6516695_0": {"length": 25, "quality": 0.5681818181818182, "section_id": 6895}}}, "6516695": {"CommentCount": "1", "Body": "<p>It depends.</p>\n<p>3.6.2</p>\n<blockquote>\n<p id=\"so_6516557_6516695_0\">The storage for objects with static\n  storage duration (basic.stc.static)\n  shall be zero-initialized (dcl.init)\n  before any other initialization takes\n  place. Zero-initialization and\n  initialization with a constant\n  expression are collectively called\n  static initialization; all other\n  initialization is dynamic\n  initialization. Objects of POD types\n  (basic.types) with static storage\n  duration initialized with constant\n  expressions (expr.const) shall be\n  initialized before any dynamic\n  initialization takes place.</p>\n</blockquote>\n<p>Since you have a POD initialized with a constant expression, it will be statically initialized, i.e. before any constructors run. Change any of these conditions, and unexpected results are likely to occur.</p>\n", "CreationDate": "2011-06-29T06:43:01.313", "ParentId": "6516557", "Id": "6516695", "LastActivityDate": "2011-06-29T06:43:01.313", "PostTypeId": "2", "Score": "2", "OwnerUserId": "775806"}});