post_cb({"29990849": {"ViewCount": "133", "Body": "<p>So the code is</p>\n<pre><code>class A\n{\npublic:\n   int i;\n   A(){\n       i = 5;\n   }\n};\nclass B : public A\n{\npublic:\n   void someFunc();\n};\n\nclass C\n{\n   A myObj;\npublic:\n   void func(){\n       B* foo = reinterpret_cast&lt;B*&gt;(&amp;myObj);\n       foo-&gt;someFunc();\n   }\n};\n</code></pre>\n<p>Assuming that classes will stay as they are and never change, is this use of reinterpret_cast correct(i think that it's not)? If not, which exact parts of C++ standard(you can use any edition) are violated here?</p>\n", "AcceptedAnswerId": "29990901", "Title": "Is this code standard compliant or not?", "CreationDate": "2015-05-01T16:23:32.007", "Id": "29990849", "CommentCount": "9", "LastEditDate": "2015-05-01T16:36:08.513", "PostTypeId": "1", "LastEditorUserId": "560648", "LastActivityDate": "2015-05-01T16:36:08.513", "Score": "1", "OwnerUserId": "1436868", "Tags": "<c++><c++11><language-lawyer><c++14><c++98>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_29990849_29990901_0": {"length": 11, "quality": 1.0, "section_id": 5890}}, "n3337": {"so_29990849_29990901_0": {"length": 11, "quality": 1.0, "section_id": 5661}}, "n4659": {"so_29990849_29990901_0": {"length": 11, "quality": 1.0, "section_id": 7373}}}, "29990901": {"Id": "29990901", "PostTypeId": "2", "Body": "<p>Your program does induce UB. \u00a79.3.1/2:</p>\n<blockquote>\n<p id=\"so_29990849_29990901_0\">If a non-static member function of a class <code>X</code> is called for an object\n  that is not of type <code>X</code>, or of a type derived from <code>X</code>, the behavior is\n  undefined.</p>\n</blockquote>\n<p><code>A</code> is not of type <code>B</code> or a type derived from <code>B</code>.</p>\n", "LastActivityDate": "2015-05-01T16:26:46.427", "CommentCount": "7", "CreationDate": "2015-05-01T16:26:46.427", "ParentId": "29990849", "Score": "10", "OwnerUserId": "3647361"}});