post_cb({"bq_ids": {"n4140": {"so_20435859_20436119_0": {"length": 33, "quality": 0.9705882352941176, "section_id": 484}}, "n3337": {"so_20435859_20436119_0": {"length": 32, "quality": 0.9411764705882353, "section_id": 475}}}, "20436079": {"PostTypeId": "2", "Body": "<p>there is no constructor in B with no parameters, try</p>\n<pre><code>B() : A(){}\n</code></pre>\n", "LastActivityDate": "2013-12-07T00:43:26.167", "Id": "20436079", "CommentCount": "3", "CreationDate": "2013-12-07T00:43:26.167", "ParentId": "20435859", "Score": "0", "OwnerUserId": "3076373"}, "20435859": {"ViewCount": "731", "Body": "<p>In this piece of code, why is A's constructor with no parameters not inherited? Is there a special rule that prevents inheriting constructors with no parameters?</p>\n<pre><code>struct A {\n    A(void *) {}\n    A() {}\n};\n\nclass B : public A {\npublic:\n    using A::A;\n    B(int x) {}\n};\n\nvoid f() {\n    B b(1);\n    B b2(nullptr);\n    B b3; // error\n}\n</code></pre>\n<p>clang++ -std=c++11 gives this error, and g++ -std=c++11 gives a substantially similar error message:</p>\n<pre><code>td.cpp:15:7: error: no matching constructor for initialization of 'B'\n    B b3; // error\n      ^\ntd.cpp:9:5: note: candidate constructor not viable: requires single argument 'x', but no arguments\n      were provided\n    B(int x) {}\n    ^\ntd.cpp:8:14: note: candidate constructor (inherited) not viable: requires 1 argument, but 0 were\n      provided\n    using A::A;\n             ^\ntd.cpp:2:5: note: inherited from here\n    A(void *) {}\n</code></pre>\n", "AcceptedAnswerId": "20436119", "Title": "C++11 constructor inheritance and constructors with no parameters", "CreationDate": "2013-12-07T00:15:15.683", "Id": "20435859", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2013-12-07T00:48:36.303", "Score": "8", "OwnerUserId": "1073784", "Tags": "<c++><inheritance><c++11><constructor>", "AnswerCount": "2"}, "20436119": {"PostTypeId": "2", "Body": "<p>The relevant information is in 12.9 [class.inhctor] paragraph 3 (the highlighting is added):</p>\n<blockquote>\n<p id=\"so_20435859_20436119_0\">For each non-template constructor in the candidate set of inherited constructors <strong>other than a constructor having no parameters or a copy/move constructor having a single parameter</strong>, a constructor is implicitly declared with the same constructor characteristics unless there is a user-declared constructor with the same signature in the complete class where the using-declaration appears. [...]</p>\n</blockquote>\n<p>That is, default constructor are not inherited unless they have a [defaulted] argument. If they have a default argument they are inherited but without the defaulted argument as is pointed out by a node on the same paragraph:</p>\n<blockquote>\n<p id=\"so_20435859_20436119_1\">Note: Default arguments are not inherited. [...]</p>\n</blockquote>\n<p>Basically, that says that default constructors are not inherited.</p>\n", "LastActivityDate": "2013-12-07T00:48:36.303", "Id": "20436119", "CommentCount": "0", "CreationDate": "2013-12-07T00:48:36.303", "ParentId": "20435859", "Score": "7", "OwnerUserId": "1120273"}});