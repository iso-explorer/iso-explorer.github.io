post_cb({"bq_ids": {"n4140": {"so_33059531_33059591_0": {"length": 47, "quality": 0.94, "section_id": 7177}}, "n3337": {"so_33059531_33059591_0": {"length": 47, "quality": 0.94, "section_id": 6921}}, "n4659": {"so_33059531_33059591_0": {"length": 44, "quality": 0.88, "section_id": 8685}}}, "33059531": {"ViewCount": "113", "Body": "<p><a href=\"https://youtu.be/uSZFrmhayIM?t=6m18s\" rel=\"nofollow\">In this video</a>, at approximately 6.39, the presenter seems to say that <code>new</code> always returns memory aligned to <code>std::max_align_t</code>, which makes sense, since <code>operator new</code> doesn't know anything about the type of the variable being allocated. That is, the compiler has to opt for the strictest alignment. But I can't find this in the Standard.</p>\n<p>The presenter also says that this rule doesn't apply when <code>new</code> is used to allocate <code>char</code> or <code>unsigned char</code> arrays. In this case, the alignment depends on the size. But this was not clear to me either.</p>\n", "AcceptedAnswerId": "33059591", "Title": "Where in the Standard does it say that every allocation returned by `new` is aligned to `std::max_align_t`?", "CreationDate": "2015-10-10T22:19:14.847", "Id": "33059531", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2015-10-10T22:39:52.443", "LastEditorUserId": "908939", "LastActivityDate": "2015-10-10T22:39:52.443", "Score": "4", "OwnerUserId": "1042389", "Tags": "<c++><language-lawyer><c++14><memory-alignment>", "AnswerCount": "1"}, "33059591": {"Id": "33059591", "PostTypeId": "2", "Body": "<p>This is in  [basic.stc.dynamic.allocation]/2:</p>\n<blockquote>\n<p id=\"so_33059531_33059591_0\">The allocation function attempts to allocate the requested amount of storage. If it is successful, it shall\n  return the address of the start of a block of storage whose length in bytes shall be at least as large as\n  the requested size. [...] <strong>The pointer returned shall be suitably aligned so that it can be converted\n  to a pointer of any complete object type with a fundamental alignment requirement</strong> (3.11) and then used\n  to access the object or array in the storage allocated (until the storage is explicitly deallocated by a call\n  to a corresponding deallocation function). [...]</p>\n</blockquote>\n", "LastActivityDate": "2015-10-10T22:26:50.993", "CommentCount": "3", "CreationDate": "2015-10-10T22:26:50.993", "ParentId": "33059531", "Score": "3", "OwnerUserId": "596781"}});