post_cb({"bq_ids": {"n4140": {"so_11167062_11167081_0": {"length": 18, "quality": 0.8181818181818182, "section_id": 3260}}, "n3337": {"so_11167062_11167081_0": {"length": 20, "quality": 0.9090909090909091, "section_id": 3132}}}, "11167081": {"PostTypeId": "2", "Body": "<p>Your member function:</p>\n<pre><code>void display(int l=this-&gt;length)\n</code></pre>\n<p>is conceptually equivalent to this:</p>\n<pre><code>void display(A * this, int l=this-&gt;length); //translated by the compiler\n</code></pre>\n<p>which means, you're using one parameter in an expression which is the default argument for other parameter which is not allowed in C++, as \u00a78.3.6/9 (C++03) says,</p>\n<blockquote>\n<p id=\"so_11167062_11167081_0\">Default arguments are evaluated each\n  time the function is called. <em>The order\n  of evaluation of function arguments is\n  unspecified</em>. <strong>Consequently, parameters\n  of a function shall not be used in\n  default argument expressions</strong>, even if\n  they are not evaluated.</p>\n</blockquote>\n<p>Note that C++ doesn't allow this:</p>\n<pre><code>int f(int a, int b = a); //illegal : \u00a78.3.6/9\n</code></pre>\n<hr>\n<p>The solution is to add one overload which takes no parameter as:</p>\n<pre><code>void display()\n{\n    display(length); //call the other one!\n}\n</code></pre>\n<p>If you don't want to add one more function then <em>choose an impossible default value</em> for the parameter. For example, since it describes <em>length</em> which can never be negative, then you may choose <code>-1</code> as the default value, and you may implement your function as:</p>\n<pre><code>void display(int l = -1)\n{\n      if ( l &lt;= -1 ) \n           l = length; //use it as default value!\n      //start using l \n}\n</code></pre>\n</hr>", "LastActivityDate": "2012-06-23T05:31:29.890", "LastEditorUserId": "415784", "Id": "11167081", "CommentCount": "7", "CreationDate": "2012-06-23T05:18:07.067", "ParentId": "11167062", "Score": "12", "OwnerUserId": "415784", "LastEditDate": "2012-06-23T05:31:29.890"}, "11167082": {"PostTypeId": "2", "Body": "<p>At compile time, there is no object, so there is no this.</p>\n<p>Why would you pass in one of your object's properties as a default value into a member function if that member function can access the property itself?</p>\n", "LastActivityDate": "2012-06-23T05:18:08.530", "Id": "11167082", "CommentCount": "2", "CreationDate": "2012-06-23T05:18:08.530", "ParentId": "11167062", "Score": "1", "OwnerUserId": "1472045"}, "11167062": {"ViewCount": "466", "Body": "<p>I was trying to pass the current value of length as the default parameter as a function argument . \nbut compiler is showing error that</p>\n<blockquote>\n<p id=\"so_11167062_11167062_0\">\" 'this' may not be used in this context\"</p>\n</blockquote>\n<p>can any one tell me what is the mistake I have committed. ?</p>\n<pre><code>class A\n{\n\n    private:\n    int length;\n    public:\n    A();\n    void display(int l=this-&gt;length)\n    {\n        cout&lt;&lt;\"the length is \"&lt;&lt;l&lt;&lt;endl;\n    }\n\n};\n\n\nint main()\n{\n\n    A a;\n    a.display();    \n    return 0;\n\n}\n</code></pre>\n", "AcceptedAnswerId": "11167081", "Title": "Why this can not be passed as default parameter in member function?", "CreationDate": "2012-06-23T05:13:08.893", "Id": "11167062", "CommentCount": "6", "LastEditDate": "2012-06-23T05:16:20.470", "PostTypeId": "1", "LastEditorUserId": "927034", "LastActivityDate": "2012-06-23T05:31:29.890", "Score": "4", "OwnerUserId": "1304053", "Tags": "<c++>", "AnswerCount": "3"}, "11167090": {"PostTypeId": "2", "Body": "<p>You could user overloading and forwarding instead.</p>\n<pre><code>class A\n{\n    private:\n    int length;\n    public:\n    A();\n\n    void display()\n    {\n        display(this-&gt;length);\n    }\n\n    void display(int l)\n    {\n        cout&lt;&lt;\"the length is \"&lt;&lt;l&lt;&lt;endl;\n    }\n};\n</code></pre>\n", "LastActivityDate": "2012-06-23T05:20:05.973", "Id": "11167090", "CommentCount": "0", "CreationDate": "2012-06-23T05:20:05.973", "ParentId": "11167062", "Score": "3", "OwnerUserId": "221955"}});