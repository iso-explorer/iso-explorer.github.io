post_cb({"13266909": {"ParentId": "13266723", "CommentCount": "0", "Body": "<p>Yes and no.  There is another qualification which applies to iterators:\nwhether they allow mutating the sequence or not.  This qualification is\northogonal to forward, bidirectional etc.  Formally, a non-mutating\nforward iterator must also be a non-mutating output iterator.  Of\ncourse, a non-mutating output iterator doesn't really make much sense,\nand once you've removed the mutating operators from an output iterator,\nthere's not much left, but it is easier to specify and describe the\niterators in this manner, treating mutating/non-mutating as an\northogonal characteristic. </p>\n", "OwnerUserId": "649665", "PostTypeId": "2", "Id": "13266909", "Score": "0", "CreationDate": "2012-11-07T09:35:58.727", "LastActivityDate": "2012-11-07T09:35:58.727"}, "13266723": {"CommentCount": "0", "ViewCount": "117", "CreationDate": "2012-11-07T09:27:29.860", "LastActivityDate": "2012-11-07T10:16:09.713", "Title": "Are c++ forward/bidi/random iterators always output iterators?", "AcceptedAnswerId": "13266830", "PostTypeId": "1", "Id": "13266723", "Score": "3", "Body": "<p>I see many texts on the STL (e.g. <a href=\"http://www.cplusplus.com/reference/std/iterator/\" rel=\"nofollow\">http://www.cplusplus.com/reference/std/iterator/</a>) that imply that Forward iterators (and by extension Bidi and Random iterators) must satisfy both Input and Output iterator requirements. This seems odd to me, since <code>const</code> iterators are clearly iterators, but are just as clearly <em>not</em> Output iterators.</p>\n<p>What is the truth of this understanding? Do I not understand the concept of Output iterator, or do Output iterators not fall into the expanding requirements order of iterators? (Does this idea have a better/official name? I mean the idea that Random iterators are also Bidi iterators which are also Forward...)</p>\n", "Tags": "<c++><stl><iterator>", "OwnerUserId": "331785", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_13266723_13266830_2": {"section_id": 5558, "quality": 0.8571428571428571, "length": 12}, "so_13266723_13266830_1": {"section_id": 5557, "quality": 0.875, "length": 35}}, "n3337": {"so_13266723_13266830_2": {"section_id": 5340, "quality": 0.8571428571428571, "length": 12}, "so_13266723_13266830_1": {"section_id": 5339, "quality": 0.875, "length": 35}}, "n4659": {"so_13266723_13266830_2": {"section_id": 7003, "quality": 0.7142857142857143, "length": 10}, "so_13266723_13266830_1": {"section_id": 7002, "quality": 0.875, "length": 35}}}, "13266830": {"ParentId": "13266723", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>C++03 says (24.1/4):</p>\n<blockquote>\n<p id=\"so_13266723_13266830_0\">Besides its category, a forward, bidirectional, or random access\n  iterator can also be mutable or constant depending on whether the\n  result of the expression *i behaves as a reference or as a reference\n  to a constant. Constant iterators do not satisfy the requirements for\n  output iterators, and the result of the expression *i (for constant\n  iterator i) cannot be used in an expression where an lvalue is\n  required.</p>\n</blockquote>\n<p>cplusplus.com chose not to mention that. The wording in the standard is confusing, since it states \"Forward iterators satisfy all the requirements of the input and output iterators\", and contradicts that in the next paragraph to say that some forward iterators do not satisfy the requirements of output iterators.</p>\n<p>C++11 simplifies a little (24.2.1/3-4):</p>\n<blockquote>\n<p id=\"so_13266723_13266830_1\">Forward iterators satisfy all the requirements of input iterators and\n  can be used whenever an input iterator is speci\ufb01ed; Bidirectional\n  iterators also satisfy all the requirements of forward iterators and\n  can be used when- ever a forward iterator is speci\ufb01ed; Random access\n  iterators also satisfy all the requirements of bidirectional iterators\n  and can be used whenever a bidirectional iterator is speci\ufb01ed.</p>\n<p id=\"so_13266723_13266830_2\">Iterators that further satisfy the requirements of output iterators\n  are called mutable iterators. Nonmutable iterators are referred to as\n  constant iterators.</p>\n</blockquote>\n", "OwnerUserId": "13005", "LastEditorUserId": "13005", "LastEditDate": "2012-11-07T10:16:09.713", "Id": "13266830", "Score": "8", "CreationDate": "2012-11-07T09:32:45.390", "LastActivityDate": "2012-11-07T10:16:09.713"}});