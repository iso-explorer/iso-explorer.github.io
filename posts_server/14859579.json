post_cb({"bq_ids": {"n4140": {"so_14859579_14860231_0": {"length": 22, "quality": 1.0, "section_id": 3367}}, "n3337": {"so_14859579_14860231_0": {"length": 22, "quality": 1.0, "section_id": 3237}}}, "14860231": {"PostTypeId": "2", "Body": "<p>This looks like a bug in GCC and VS2010. Clang won't compile it, and it should not compile according to <code>[except.spec]/5</code>:</p>\n<blockquote>\n<p id=\"so_14859579_14860231_0\">... A similar restriction applies to assignment to and initialization of pointers to functions, pointers to member functions, and references to functions: the target entity shall allow at least the exceptions allowed by the source value in the assignment or initialization.</p>\n</blockquote>\n<p>The standard also includes the following example:</p>\n<pre><code>class A { /*...*/ };\nvoid (*pf1)(); // no exception specification\nvoid (*pf2)() throw(A);\nvoid f() {\n    pf1 = pf2; // OK: pf1 is less restrictive\n    pf2 = pf1; // error: pf2 is more restrictive\n}\n</code></pre>\n", "LastActivityDate": "2013-02-13T18:16:06.640", "Id": "14860231", "CommentCount": "0", "CreationDate": "2013-02-13T18:16:06.640", "ParentId": "14859579", "Score": "1", "OwnerUserId": "485561"}, "14860318": {"PostTypeId": "2", "Body": "<p>It's a long-standing bug in g++: <a href=\"http://gcc.gnu.org/bugzilla/show_bug.cgi?id=12255\" rel=\"nofollow\">http://gcc.gnu.org/bugzilla/show_bug.cgi?id=12255</a></p>\n<blockquote>\n<p id=\"so_14859579_14860318_0\">The underlying issue is that G++ just ignores exception-specifications on\n  non-function declarations.  I think this choice originated in the uncertainty\n  about whether or not the exeception-specification would become part of a\n  function type rather than remain associated with the declaration.</p>\n</blockquote>\n<p>It wouldn't surprise me if VS was similar in this regard.</p>\n", "LastActivityDate": "2013-02-13T18:20:14.883", "Id": "14860318", "CommentCount": "0", "CreationDate": "2013-02-13T18:20:14.883", "ParentId": "14859579", "Score": "1", "OwnerUserId": "367273"}, "14859579": {"ViewCount": "55", "Body": "<p>Based on <a href=\"http://www.gotw.ca/publications/mill22.htm\" rel=\"nofollow\">this</a></p>\n<blockquote>\n<p id=\"so_14859579_14859579_0\">Incidentally, you can do this kind of assignment of a pointer to a\n  function as long as the target\u2019s exception specification is no more\n  restrictive than the source\u2019s</p>\n</blockquote>\n<pre><code>class A{};\nclass B{};\nclass C{};\n\nvoid f() throw(A,B,C) {}\n\nvoid (*pf)() throw(A,B);\n\nint main()\n{\n    pf = f; // pf is more restrictive than that of f. I expect an error here!\n}\n</code></pre>\n<p>The last statement should not pass the compiler. However, I have tried VS2010 and GCC latest version. Neither or them complain about it.</p>\n<p>Question&gt; Why?</p>\n", "AcceptedAnswerId": "14860231", "Title": "Exception Specification more or less restrictive", "CreationDate": "2013-02-13T17:38:55.310", "Id": "14859579", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-02-13T18:20:14.883", "Score": "0", "OwnerUserId": "391104", "Tags": "<c++>", "AnswerCount": "2"}});