post_cb({"27254017": {"Id": "27254017", "PostTypeId": "2", "Body": "<p>Not only is it legal, it could actually be quite useful depending on your coding style.</p>\n<p>Default parameters are only meaningful in a function declaration.</p>\n<p>Named parameters are only meaningful in a function definition.</p>\n<p><strong>f.h:</strong></p>\n<pre><code>void f(void*=nullptr);\n</code></pre>\n<p><strong>f.cc</strong></p>\n<pre><code>void f(void* x)\n{\n...\n}\n</code></pre>\n", "LastActivityDate": "2014-12-02T16:17:57.753", "Score": "-1", "CreationDate": "2014-12-02T16:17:57.753", "ParentId": "14675908", "CommentCount": "1", "OwnerUserId": "2012682"}, "14676057": {"Id": "14676057", "PostTypeId": "2", "Body": "<p>Yes, it is legal.<br/>\nThe syntax productions given for function parameters in clause 8.3.5/1 allow a parameter declaration without an identifier, but with an assignment expression (as initialiser).</p>\n", "LastActivityDate": "2013-02-03T18:58:10.193", "Score": "1", "CreationDate": "2013-02-03T18:58:10.193", "ParentId": "14675908", "CommentCount": "0", "OwnerUserId": "430719"}, "bq_ids": {"n4140": {"so_14675908_14675993_1": {"length": 5, "quality": 0.625, "section_id": 3247}, "so_14675908_14675993_0": {"length": 14, "quality": 0.875, "section_id": 3252}, "so_14675908_14675952_1": {"length": 10, "quality": 1.0, "section_id": 3253}}, "n3337": {"so_14675908_14675993_1": {"length": 5, "quality": 0.625, "section_id": 3120}, "so_14675908_14675993_0": {"length": 14, "quality": 0.875, "section_id": 3124}, "so_14675908_14675952_1": {"length": 10, "quality": 1.0, "section_id": 3125}}, "n4659": {"so_14675908_14675993_1": {"length": 5, "quality": 0.625, "section_id": 4005}, "so_14675908_14675993_0": {"length": 14, "quality": 0.875, "section_id": 4010}, "so_14675908_14675952_1": {"length": 10, "quality": 1.0, "section_id": 4011}}}, "14675952": {"Id": "14675952", "PostTypeId": "2", "Body": "<p>Yes, it's perfectly legal. An obvious example is found in N3485 <strong>8.3.6 Default Arguments</strong>/4:</p>\n<blockquote>\n<p id=\"so_14675908_14675952_0\">[Example: the declaration </p>\n<pre><code>void point(int = 3, int = 4);  \n</code></pre>\n<p id=\"so_14675908_14675952_1\">declares a function that can be called with zero, one, or two arguments of type int.</p>\n</blockquote>\n", "LastEditorUserId": "701092", "LastActivityDate": "2013-02-03T19:01:05.040", "Score": "11", "CreationDate": "2013-02-03T18:46:34.433", "ParentId": "14675908", "CommentCount": "3", "LastEditDate": "2013-02-03T19:01:05.040", "OwnerUserId": "962089"}, "14675908": {"ViewCount": "1429", "Body": "<p>Is the following code legal in C++?</p>\n<pre><code>void f(void* = 0)\n{}\n\nint main()\n{\n    f();\n}\n</code></pre>\n<p>Which page of the C++ standard states that this usage is legal?</p>\n", "AcceptedAnswerId": "14675993", "Title": "Can an unnamed parameter of function have a default value?", "CreationDate": "2013-02-03T18:41:13.553", "Id": "14675908", "CommentCount": "9", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2014-12-02T16:17:57.753", "Score": "10", "OwnerUserId": "508343", "Tags": "<c++><function><c++11><default-parameters><function-signature>", "AnswerCount": "4"}, "14675993": {"Id": "14675993", "PostTypeId": "2", "Body": "<p><strong>Yes, it's legal.</strong></p>\n<p>There is no standard wording to allow this combination of features specifically; there simply isn't any to <em>disallow</em> it, either.</p>\n<p>Default argument syntax applies to function parameters in a <em>parameter-declaration</em>:</p>\n<blockquote>\n<p id=\"so_14675908_14675993_0\"><code>[C++11: 8.3.6/1]:</code> <strong>If an <em>initializer-clause</em> is specified in a <em>parameter-declaration</em> this <em>initializer-clause</em> is used as a default argument.</strong> Default arguments will be used in calls where trailing arguments are missing.</p>\n</blockquote>\n<p>...and function parameters in a <em>parameter-declaration</em> may be unnamed:</p>\n<blockquote>\n<p id=\"so_14675908_14675993_1\"><code>[C++11: 8.3.5/11]:</code> <em>[..]</em> An identi\ufb01er can <strong>optionally</strong> be provided as a parameter name. <em>[..]</em></p>\n</blockquote>\n<p>There is even an example of this usage under 8.3.6/4 (though examples are not normative text, so this cannot be used to prove anything concretely).</p>\n", "LastEditorUserId": "560648", "LastActivityDate": "2013-02-03T19:16:17.583", "Score": "11", "CreationDate": "2013-02-03T18:51:09.787", "ParentId": "14675908", "CommentCount": "0", "LastEditDate": "2013-02-03T19:16:17.583", "OwnerUserId": "560648"}});