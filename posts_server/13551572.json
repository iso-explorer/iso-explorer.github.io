post_cb({"13551661": {"ParentId": "13551572", "PostTypeId": "2", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_13551572_13551661_0\"><strong>Why does <code>foo1</code> work but not <code>foo2</code>? Is not the struct initializer constructor visible for class <code>A</code>?</strong></p>\n</blockquote>\n<pre><code>B b = {0};\n</code></pre>\n<p>Does not work because <code>B</code> is not an <strong>Aggregate</strong>. And it is not an Aggregate because it has an non-static private data member. If you remove the private specifier, <code>B</code> becomes an Aggregate and hence can be initialized in this manner.</p>\n<hr>\n<p><strong>C++03 Standard 8.5.1 Aggregates</strong><br>\n<strong>Para 7:</strong> </br></p>\n<blockquote>\n<p id=\"so_13551572_13551661_1\">If there are fewer initializers in the list than there are members in the aggregate, then each member not explicitly initialized shall be value-initialized (8.5). \n  [Example:</p>\n<pre><code> struct S { int a; char* b; int c; };\n S ss = { 1, \"asdf\" };\n</code></pre>\n<p id=\"so_13551572_13551661_2\">initializes <code>ss.a</code> with <code>1</code>, <code>ss.b</code> with <code>\"asdf\"</code>, and <code>ss.c</code> with the value of an expression of the form <code>int()</code>, that is,<code>0</code>. ]</p>\n</blockquote>\n<p><strong>C++03 standard 8.5.1 \u00a71</strong>:</p>\n<blockquote>\n<p id=\"so_13551572_13551661_3\">An aggregate is an array or a class (clause 9) with no user-declared \n  constructors (12.1), <strong>no private or protected non-static data members</strong> (clause 11),\n  no base classes (clause 10), and no virtual functions (10.3).</p>\n</blockquote>\n</hr>", "OwnerUserId": "452307", "LastEditorUserId": "452307", "LastEditDate": "2012-11-25T14:35:36.767", "Id": "13551661", "Score": "3", "CreationDate": "2012-11-25T13:54:59.250", "LastActivityDate": "2012-11-25T14:35:36.767"}, "13551572": {"CommentCount": "0", "ViewCount": "130", "PostTypeId": "1", "LastEditorUserId": "636019", "CreationDate": "2012-11-25T13:44:15.077", "LastActivityDate": "2014-09-25T12:16:55.533", "Title": "Constructor for Struct with Private Members", "AcceptedAnswerId": "13551661", "LastEditDate": "2012-11-25T21:49:38.243", "Id": "13551572", "Score": "1", "Body": "<p>Consider the following code:</p>\n<pre><code>class A\n{\nprivate:\n    struct B { private: int i; friend class A; };\n\npublic:\n    static void foo1()\n    {\n        B b;\n        b.i = 0;\n    }\n\n    static void foo2()\n    {\n        B b = {0};\n    }\n};\n</code></pre>\n<p>Why does <b>foo1</b> work but not <b>foo2</b>? Is not the struct initializer constructor visible for class A? Is there anyway to make this work in C++11?</p>\n<p>(Note, removing the private makes foo2 working.)</p>\n", "Tags": "<c++><struct><c++11><private-members>", "OwnerUserId": "1225770", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_13551572_13551661_2": {"section_id": 3304, "quality": 0.9, "length": 9}, "so_13551572_13551661_3": {"section_id": 3298, "quality": 0.631578947368421, "length": 12}, "so_13551572_13551661_1": {"section_id": 3304, "quality": 0.8, "length": 12}}, "n3337": {"so_13551572_13551661_2": {"section_id": 3174, "quality": 0.9, "length": 9}, "so_13551572_13551661_3": {"section_id": 3168, "quality": 0.631578947368421, "length": 12}, "so_13551572_13551661_1": {"section_id": 3174, "quality": 0.8, "length": 12}}, "n4659": {"so_13551572_13551661_2": {"section_id": 4070, "quality": 0.9, "length": 9}, "so_13551572_13551661_1": {"section_id": 4070, "quality": 0.6666666666666666, "length": 10}}}});