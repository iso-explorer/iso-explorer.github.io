post_cb({"bq_ids": {"n4140": {"so_6337426_6337447_0": {"length": 8, "quality": 0.8888888888888888, "section_id": 3195}, "so_6337426_6337447_1": {"length": 9, "quality": 0.5294117647058824, "section_id": 3281}}, "n3337": {"so_6337426_6337447_0": {"length": 8, "quality": 0.8888888888888888, "section_id": 3069}, "so_6337426_6337447_1": {"length": 9, "quality": 0.5294117647058824, "section_id": 3152}}, "n4659": {"so_6337426_6337447_0": {"length": 8, "quality": 0.8888888888888888, "section_id": 3957}, "so_6337426_6337447_1": {"length": 9, "quality": 0.5294117647058824, "section_id": 4043}}}, "6337447": {"Id": "6337447", "PostTypeId": "2", "Body": "<p><a href=\"http://www.ideone.com/sHtWI\" rel=\"noreferrer\">Yes. Yes, it is.</a></p>\n<p>Static initializers may call functions, as long as they're in scope.</p>\n<p><code>[dcl.decl]</code> (2003 wording, 8/2):</p>\n<blockquote>\n<p id=\"so_6337426_6337447_0\"><strong>Initial values can also be specified\n  in a declarator</strong>; initializers are\n  discussed in 8.5 and 12.6.</p>\n</blockquote>\n<p><code>[dcl.init]</code> (2003 wording, 8.5/2):</p>\n<blockquote>\n<p id=\"so_6337426_6337447_1\">Automatic, register, <strong>static</strong>, and\n  external variables of namespace scope\n  <strong>can be initialized by arbitrary\n  expressions involving</strong> literals and\n  <strong>previously declared</strong> variables and\n  <strong>functions</strong>.</p>\n</blockquote>\n<p>(Don't be misled by the lack of the <code>static</code> keyword, which has all sorts of meanings. Your variable <code>myvar</code> is declared at namespace scope, and thus has <em>static storage duration</em>.)</p>\n", "LastEditorUserId": "560648", "LastActivityDate": "2011-06-13T23:13:54.043", "Score": "17", "CreationDate": "2011-06-13T23:08:45.510", "ParentId": "6337426", "CommentCount": "2", "LastEditDate": "2011-06-13T23:13:54.043", "OwnerUserId": "560648"}, "6337426": {"ViewCount": "2569", "Body": "<p>Is the following code legal?</p>\n<pre><code>int add(int a, int b)\n{\n    return a + b;\n}\n\nint myvar = add(1, 2);\n\nint main() { /* ... */ }\n</code></pre>\n<p>Why, or why not?</p>\n", "AcceptedAnswerId": "6337447", "Title": "May I initialize a global variable with the result of a function call?", "CreationDate": "2011-06-13T23:05:50.830", "Id": "6337426", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2016-09-29T09:21:23.803", "LastEditorUserId": "365102", "LastActivityDate": "2016-09-29T09:21:23.803", "Score": "12", "OwnerUserId": "365102", "Tags": "<c++><variables>", "AnswerCount": "1"}});