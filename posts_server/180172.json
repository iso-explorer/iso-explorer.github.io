post_cb({"180196": {"Id": "180196", "PostTypeId": "2", "Body": "<p>I guess, the compiler would not know if this statement:</p>\n<blockquote>\n<p id=\"so_180172_180196_0\">MyObject object(); </p>\n</blockquote>\n<p>is a constructor call or a function prototype declaring a function named <em>object</em> with return type <em>MyObject</em> and no  parameters.</p>\n", "OwnerDisplayName": "Black", "LastActivityDate": "2008-10-07T20:17:11.147", "Score": "4", "CreationDate": "2008-10-07T20:17:11.147", "ParentId": "180172", "CommentCount": "0", "OwnerUserId": "25234"}, "180189": {"Id": "180189", "PostTypeId": "2", "Body": "<p>Because it is the treated as the declaration for a function:</p>\n<pre><code>int MyFunction(); // clearly a function\nMyObject object(); // also a function declaration\n</code></pre>\n", "OwnerDisplayName": "1800 INFORMATION", "LastActivityDate": "2008-10-07T20:15:41.303", "Score": "77", "CreationDate": "2008-10-07T20:15:41.303", "ParentId": "180172", "CommentCount": "1", "OwnerUserId": "3146"}, "181772": {"Id": "181772", "PostTypeId": "2", "Body": "<p>You could also use the more verbose way of construction:</p>\n<pre><code>MyObject object1 = MyObject();\nMyObject object2 = MyObject(object1);\n</code></pre>\n<p>In C++0x this also allows for <code>auto</code>:</p>\n<pre><code>auto object1 = MyObject();\nauto object2 = MyObject(object1);\n</code></pre>\n", "LastActivityDate": "2008-10-08T08:05:08.767", "CommentCount": "5", "CreationDate": "2008-10-08T08:05:08.767", "ParentId": "180172", "Score": "7", "OwnerUserId": "19100"}, "46824436": {"Id": "46824436", "PostTypeId": "2", "Body": "<p>As the others said, it is a function declaration. Since C++11 you can use brace initialization if you need to see the empty <em>something</em> that explicitly tells you that a default constructor is used.</p>\n<pre><code>Jedi luke{}; //default constructor\n</code></pre>\n", "LastActivityDate": "2017-10-19T07:11:57.337", "CommentCount": "0", "CreationDate": "2017-10-19T07:11:57.337", "ParentId": "180172", "Score": "0", "OwnerUserId": "3027604"}, "181463": {"Body": "<p><strong>Most vexing parse</strong></p>\n<p>This is related to what is known as \"C++'s most vexing parse\". Basically, anything that can be interpreted by compiler as a declaration will be interpreted as a declaration.</p>\n<p>Another instance of the same problem:</p>\n<pre><code>std::ifstream ifs(\"file.txt\");\nstd::vector&lt;T&gt; v(std::istream_iterator&lt;T&gt;(ifs), std::istream_iterator&lt;T&gt;());\n</code></pre>\n<p><code>v</code> is interpreted as a declaration of function with 2 parameters.</p>\n<p>The workaround is to add another pair of parentheses:</p>\n<pre><code>std::vector&lt;T&gt; v((std::istream_iterator&lt;T&gt;(ifs)), std::istream_iterator&lt;T&gt;());\n</code></pre>\n<p>Or, if you have C++11 and list-initialization (also known as uniform initialization) available:</p>\n<pre><code>std::vector&lt;T&gt; v{std::istream_iterator&lt;T&gt;{ifs}, std::istream_iterator&lt;T&gt;{}};\n</code></pre>\n<p>With this, there is no way it could be interpreted as a function declaration.</p>\n", "CreationDate": "2008-10-08T05:30:31.543", "ParentId": "180172", "CommentCount": "11", "LastEditDate": "2017-09-20T20:08:16.257", "PostTypeId": "2", "OwnerDisplayName": "Constantin", "LastEditorUserId": "20310", "LastActivityDate": "2017-09-20T20:08:16.257", "Id": "181463", "Score": "129", "OwnerUserId": "20310"}, "bq_ids": {"n4140": {"so_180172_31093033_0": {"length": 19, "quality": 0.7307692307692307, "section_id": 3290}}, "n3337": {"so_180172_31093033_0": {"length": 19, "quality": 0.7307692307692307, "section_id": 3160}}, "n4659": {"so_180172_31093033_0": {"length": 19, "quality": 0.7307692307692307, "section_id": 4052}}}, "180185": {"Id": "180185", "PostTypeId": "2", "Body": "<p>The same syntax is used for function declaration - e.g. the function <code>object</code>, taking no parameters and returning <code>MyObject</code></p>\n", "OwnerDisplayName": "Nemanja Trifunovic", "LastActivityDate": "2008-10-07T20:15:22.163", "Score": "50", "CreationDate": "2008-10-07T20:15:22.163", "ParentId": "180172", "CommentCount": "1", "OwnerUserId": "8899"}, "180536": {"Id": "180536", "PostTypeId": "2", "Body": "<p>As mentioned many times, it's a declaration.  It's that way for backward compatibility.  One of the many areas of C++ that are goofy/inconsistent/painful/bogus because of its legacy.  </p>\n", "OwnerDisplayName": "Mike B", "LastActivityDate": "2008-10-07T21:34:19.867", "Score": "4", "CreationDate": "2008-10-07T21:34:19.867", "ParentId": "180172", "CommentCount": "0", "OwnerUserId": "12711"}, "180187": {"Id": "180187", "PostTypeId": "2", "Body": "<p>Because the compiler thinks it is a declaration of a function that takes no arguments and returns a MyObject instance.</p>\n", "OwnerDisplayName": "Fred Larson", "LastActivityDate": "2008-10-07T20:15:25.690", "Score": "10", "CreationDate": "2008-10-07T20:15:25.690", "ParentId": "180172", "CommentCount": "0", "OwnerUserId": "10077"}, "31093033": {"Id": "31093033", "PostTypeId": "2", "Body": "<p>From n4296 [dcl.init]:</p>\n<blockquote>\n<p id=\"so_180172_31093033_0\">[ Note:<br> Since <code>()</code> is not permitted by the syntax for <em>initializer</em>, \n  <code>X a();</code> is not the declaration of an <em>object</em> of class X, but the\n  declaration of a <em>function</em> taking no argument and returning an X. The\n  form () is permitted in certain other initialization contexts (5.3.4,\n  5.2.3, 12.6.2). \n  <br>\u2014end note ]</br></br></p>\n</blockquote>\n", "LastActivityDate": "2015-06-27T20:09:36.853", "CommentCount": "1", "CreationDate": "2015-06-27T20:09:36.853", "ParentId": "180172", "Score": "2", "OwnerUserId": "3677097"}, "180172": {"ViewCount": "21258", "Body": "<p>Is there any good reason that an empty set of round brackets (parentheses) isn't valid for calling the default constructor in C++?</p>\n<pre><code>MyObject  object;  // ok - default ctor\nMyObject  object(blah); // ok\n\nMyObject  object();  // error\n</code></pre>\n<p>I seem to type \"()\" automatically everytime. Is there a good reason this isn't allowed?</p>\n", "AcceptedAnswerId": "181463", "Title": "Default constructor with empty brackets", "CreationDate": "2008-10-07T20:13:10.967", "Id": "180172", "CommentCount": "2", "FavoriteCount": "49", "PostTypeId": "1", "LastEditDate": "2016-02-05T01:17:52.650", "LastEditorDisplayName": "Adam Mitz", "OwnerDisplayName": "mgb", "LastEditorUserId": "2684539", "LastActivityDate": "2017-10-19T07:11:57.337", "Score": "153", "OwnerUserId": "10897", "Tags": "<c++><constructor><default-constructor><c++-faq><most-vexing-parse>", "AnswerCount": "9"}});