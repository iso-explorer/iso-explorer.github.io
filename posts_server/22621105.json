post_cb({"22621105": {"CommentCount": "5", "ViewCount": "93", "PostTypeId": "1", "LastEditorUserId": "34509", "CreationDate": "2014-03-24T21:37:22.607", "LastActivityDate": "2014-03-25T00:32:07.610", "Title": "Is enum members type still implementation-dependent?", "AcceptedAnswerId": "22621673", "LastEditDate": "2014-03-25T00:14:22.247", "Id": "22621105", "Score": "1", "Body": "<p>I've read some articles about C++11 but none of them mentioned whether the implementation-dependent size of members of an enum keeps unchanged. </p>\n<ol>\n<li>Is that still the case?</li>\n<li>If yes, is it a good pratice to use <code>enum class Token : int { ... };</code> to explictly force compile to make them of int type?</li>\n</ol>\n", "Tags": "<c++><c++11><standards>", "OwnerUserId": "447979", "AnswerCount": "2"}, "22621662": {"ParentId": "22621105", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>If you don't specify a type for an unscoped enum then the type is implementation defined, and it may be any type capable of representing all the enumerator values (if there is no such type then the program is ill-formed). This is the same behavior as for all enums prior to C++11.</p>\n<p>If you don't specify a type for a scoped enum then it has a fixed type of <code>int</code>. You can be explicit about the type if you want, but I don't think it's commonly considered a best practice.</p>\n", "OwnerUserId": "365496", "LastEditorUserId": "365496", "LastEditDate": "2014-03-25T00:32:07.610", "Id": "22621662", "Score": "3", "CreationDate": "2014-03-24T22:10:57.677", "LastActivityDate": "2014-03-25T00:32:07.610"}, "22621673": {"ParentId": "22621105", "CommentCount": "2", "Body": "<p>As per \u00a77.2/5 of the Standard:</p>\n<blockquote>\n<p id=\"so_22621105_22621673_0\">Each enumeration also has an underlying type. The underlying type can be explicitly specified using enum-base; <strong>if not explicitly specified, the underlying type of a scoped enumeration type is <code>int</code></strong>.</p>\n</blockquote>\n<p>(emphasis mine). </p>\n<p>On this matter (underlying type), the standard does not make any difference whatsoever between <code>enum</code> and <code>enum class</code>/<code>enum struct</code>.</p>\n", "OwnerUserId": "493122", "PostTypeId": "2", "Id": "22621673", "Score": "1", "CreationDate": "2014-03-24T22:11:54.110", "LastActivityDate": "2014-03-24T22:11:54.110"}, "bq_ids": {"n4140": {"so_22621105_22621673_0": {"section_id": 5464, "quality": 0.8571428571428571, "length": 18}}, "n3337": {"so_22621105_22621673_0": {"section_id": 5251, "quality": 0.9523809523809523, "length": 20}}, "n4659": {"so_22621105_22621673_0": {"section_id": 6898, "quality": 0.7619047619047619, "length": 16}}}});