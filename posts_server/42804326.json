post_cb({"42805525": {"ParentId": "42804326", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2017-03-15T09:20:20.223", "Score": "1", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:10:19.847", "Id": "42805525", "OwnerUserId": "817643", "Body": "<p>To complete the picture and in relation to the answer by <a href=\"https://stackoverflow.com/a/42804829/817643\"><strong>Sourav Ghosh</strong></a>. Here's what the C++ standard has to say about the issue:</p>\n<p><a href=\"http://eel.is/c++draft/expr.call#2\" rel=\"nofollow noreferrer\">[expr.call] p2</a>:</p>\n<blockquote>\n<p id=\"so_42804326_42805525_0\">[\u2009Note: If a function or member function name is used, and name lookup does not find a declaration of that name, the program is ill-formed. No function is implicitly declared by such a call. \u2009\u2014\u2009end note\u2009]</p>\n</blockquote>\n<p>Couldn't get more explicit than that.</p>\n", "LastActivityDate": "2017-03-19T07:53:26.430"}, "42804829": {"ParentId": "42804326", "PostTypeId": "2", "CommentCount": "2", "CreationDate": "2017-03-15T08:45:16.410", "Score": "3", "LastEditorUserId": "2173917", "LastEditDate": "2017-03-15T08:51:21.277", "Id": "42804829", "OwnerUserId": "2173917", "Body": "<p>Well, it is as much as wrong in C, as in C++.</p>\n<p>Considering the question is based on the <strong><em>\"assumption\"</em></strong> that the code is valid from a C compiler point of view, let me elaborate that, as per the spec (<code>C11</code>), implicit declaration of functions is not allowed. Compile your code with strict conformance and (any conforming) compiler will produce the same error in C.</p>\n<p><kbd><strong><a href=\"https://ideone.com/WAqVjs\" rel=\"nofollow noreferrer\">See live example</a></strong></kbd></p>\n<p>Quoting <code>C11</code>, Foreword/p7, <em>\"Major changes in the second edition included:\"</em></p>\n<blockquote id=\"so_42804326_42804829_0\">\n<ul>\n<li>remove implicit function declaration</li>\n</ul>\n</blockquote>\n<p>and the same exist in the <code>C99</code>, also.</p>\n<hr>\n<p>Note: <em>On why it might have worked</em></p>\n<p>Pre <code>C99</code>, there was actually room for this code to be compiled successfully. In case of a missing function prototype, it was assumed that the function returns an <code>int</code> and accepts any number of parameters as input. That is now very much non-standard and compilers with legacy support may choose to allow such code to be compiled, but strictly speaking, a conforming compiler should refuse to do so.</p>\n</hr>", "LastActivityDate": "2017-03-15T08:51:21.277"}, "42805488": {"ParentId": "42804326", "PostTypeId": "2", "CommentCount": "3", "CreationDate": "2017-03-15T09:18:52.390", "Score": "0", "LastEditorUserId": "7573808", "LastEditDate": "2017-03-16T11:20:41.037", "Id": "42805488", "OwnerUserId": "7573808", "Body": "<p>In C++ you can't call an undeclared function. In C you can call a function without a forward declarator if the definition of the function returns an int. This is because of the old K&amp;R function definition style. This is obsolete for ANSI-C, always declare a function with a prototype.</p>\n", "LastActivityDate": "2017-03-16T11:20:41.037"}, "42804326": {"CommentCount": "10", "AcceptedAnswerId": "42804829", "PostTypeId": "1", "ClosedDate": "2017-03-15T11:38:42.137", "LastEditorUserId": "2173917", "CreationDate": "2017-03-15T08:17:54.460", "LastActivityDate": "2017-03-19T07:53:26.430", "LastEditDate": "2017-03-15T08:56:51.907", "ViewCount": "113", "FavoriteCount": "1", "Title": "Issue with missing forward declaration in C++", "Id": "42804326", "Score": "-1", "Body": "<p>I have compiled following program without forward declaring function in <code>C</code>. It's successfully compiled and run in <code>GCC</code> without any warning or error. </p>\n<pre><code>#include &lt;stdio.h&gt;\n\nint main()\n{\n        int ret = func(10, 5);\n}\n\nint func(int i, int j)\n{\n        return (i+j);\n}\n</code></pre>\n<p>But, I have compiled following program without forward declaring function in <code>C++</code>, Compiler gives me an error.</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n        int ret = func(10, 5);\n}\n\nint func(int i, int j)\n{\n        return (i+j);\n}\n</code></pre>\n<p><strong>An Error:</strong></p>\n<pre><code>fl.cpp:6:22: error: \u2018func\u2019 was not declared in this scope\n  int ret = func(10, 5);\n                      ^\n</code></pre>\n<p><strong>Why C++ Compiler Gives an Error? Is it not by default take int data type?</strong></p>\n", "Tags": "<c++><c><forward-declaration><function-prototypes>", "OwnerUserId": "6935629", "AnswerCount": "4"}, "42804837": {"ParentId": "42804326", "CommentCount": "0", "CreationDate": "2017-03-15T08:45:37.833", "OwnerUserId": "2079303", "PostTypeId": "2", "Id": "42804837", "Score": "1", "Body": "<blockquote>\n<p id=\"so_42804326_42804837_0\">Why C++ Compiler Gives an Error?</p>\n</blockquote>\n<p>Because you shall not call functions that have not been declared in C++.</p>\n<blockquote>\n<p id=\"so_42804326_42804837_1\">Is it not by default take int data type?</p>\n</blockquote>\n<p>No. That used to be the case in another language, C. It is not the case in C++.</p>\n", "LastActivityDate": "2017-03-15T08:45:37.833"}, "bq_ids": {"n4140": {"so_42804326_42805525_0": {"section_id": 5989, "quality": 0.8421052631578947, "length": 16}}, "n3337": {"so_42804326_42805525_0": {"section_id": 5757, "quality": 0.8421052631578947, "length": 16}}, "n4659": {"so_42804326_42805525_0": {"section_id": 7489, "quality": 0.8421052631578947, "length": 16}}}});