post_cb({"bq_ids": {"n4140": {"so_41552366_41554001_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 250}}, "n3337": {"so_41552366_41554001_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 241}}, "n4659": {"so_41552366_41554001_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 257}}}, "41554001": {"Id": "41554001", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_41552366_41554001_0\">How can I initialize the static QString member of the class?</p>\n</blockquote>\n<p>The <a href=\"https://woboq.com/blog/qstringliteral.html\" rel=\"nofollow noreferrer\">best way to initialize the QString</a> is using <code>QStringLiteral</code>:</p>\n<pre><code>// in my.h file:\nclass Misc\n{\npublic:\n    static QString s_myQString;\n};\n\n// in my.cpp file:\nQString Misc::s_myQString = QStringLiteral(\"String...\");\n</code></pre>\n<p>This way we avoid dynamic allocation until the string content changes.</p>\n", "LastEditorUserId": "313175", "LastActivityDate": "2017-01-09T18:17:37.290", "Score": "1", "CreationDate": "2017-01-09T17:56:18.010", "ParentId": "41552366", "CommentCount": "0", "OwnerUserId": "313175", "LastEditDate": "2017-01-09T18:17:37.290"}, "41552608": {"Id": "41552608", "PostTypeId": "2", "Body": "<p>You can't initialise a <code>QString</code> in the header file.</p>\n<p>in your <code>misc.h</code></p>\n<pre><code>class MISCSHARED_EXPORT Misc\n{\npublic:\n    static QString googleDNS;\n    static QString ...\n};\n</code></pre>\n<p>in <code>misc.cpp</code> or somewhere you include <code>misc.h</code> do this</p>\n<pre><code>QString Misc::googleDNS = QString(\"8.8.8.8\");\n</code></pre>\n", "LastActivityDate": "2017-01-09T16:33:45.903", "CommentCount": "3", "CreationDate": "2017-01-09T16:33:45.903", "ParentId": "41552366", "Score": "1", "OwnerUserId": "785691"}, "41552366": {"ViewCount": "279", "Body": "<p>Good day all</p>\n<p><em>Please note: c++ newbie</em></p>\n<p>I have taken up a project to try and discover all aspects of c++, currently I am busy creating a dynamic library. Class name <code>misc</code></p>\n<p>In my <code>misc.h</code>, I have several <code>QString</code>'s amoung other objects.</p>\n<p><strong>Problem:</strong></p>\n<p>Error: </p>\n<blockquote>\n<p id=\"so_41552366_41552366_0\">misc.h:17: error: in-class initialization of static data member 'QString </p>\n<p id=\"so_41552366_41552366_1\">Misc::googleDNS' of non-literal type</p>\n<p id=\"so_41552366_41552366_2\">static QString googleDNS = QString(\"8.8.8.8\");</p>\n<pre><code>                                        ^\n</code></pre>\n</blockquote>\n<p>Calling a static object from another class is done by <code>class::static_variable</code>, to my knowledge. Thus I attempt the same:</p>\n<p>Here is a basic code example of my issue:</p>\n<p><strong>//misc.h</strong></p>\n<pre><code>#include \"misc_global.h\"\n#include &lt;QString&gt;\n\nclass MISCSHARED_EXPORT Misc\n{\npublic:\n    static QString googleDNS = QString(\"8.8.8.8\");\n    static QString ...\n};\n</code></pre>\n<p><strong>Application Example:</strong></p>\n<p><strong>//netm.h</strong></p>\n<pre><code>#include \"../misc/misc.h\"\n//...\n\nclass NETMSHARED_EXPORT netm\n{\n    netm();\n    ...\n};\n</code></pre>\n<p><strong>//netm.cpp</strong></p>\n<pre><code>//...\nQHostAddress ip = QHostAddress(Misc::googleDNS);\n//...\n</code></pre>\n<p>While searching for a solution, I have attempted various combinations of <code>const</code>, <code>constexpr</code>, <code>static</code> all which, obviously have not worked.</p>\n<p>I was not able to find a solid explaination to what is meant by non-literal,</p>\n<p>some help would be greatly appreciated!</p>\n", "AcceptedAnswerId": "41554001", "Title": "QString : inclass initialization of static data member of non-literal type", "CreationDate": "2017-01-09T16:21:46.470", "Id": "41552366", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2017-01-09T18:17:37.290", "Score": "0", "OwnerUserId": "4628115", "Tags": "<c++><qt><qt-creator>", "AnswerCount": "2"}});