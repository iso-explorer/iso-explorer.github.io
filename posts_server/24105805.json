post_cb({"24105805": {"CommentCount": "3", "ViewCount": "459", "PostTypeId": "1", "LastEditorUserId": "414063", "CreationDate": "2014-06-08T11:46:55.317", "LastActivityDate": "2014-06-09T20:18:47.417", "Title": "What other values will generate error when given to std::minstd_rand::seed()?", "AcceptedAnswerId": "24128288", "LastEditDate": "2014-06-08T18:52:56.040", "Id": "24105805", "Score": "0", "Body": "<p>I'm on VC++11, so far those values generate errors, but not on ideone.com</p>\n<pre><code>#include \"stdafx.h\"\n#include &lt;iostream&gt;\n#include &lt;random&gt;\nusing namespace std;\n\n int _tmain(int argc, _TCHAR* argv[])\n//int main(int argc, char* argv[])\n{\n    //print_seq(seeded_rand(0x7fffffff,10));\n    //cout &lt;&lt; print_seq(seeded_rand(0xffffffff,10));\n    ////print_seq(seeded_rand(0,10));\n    //cout &lt;&lt;  print_seq(seeded_rand(-50000,10));\n    //cout &lt;&lt;  print_seq(seeded_rand(1,10));\n\n    minstd_rand r1;\n    minstd_rand0 r2;\n\n    r1.seed(0);\n    system(\"PAUSE\");\n\n    return 0;\n}\n</code></pre>\n<p>Those values also generated errors</p>\n<pre><code>0xfffffffe\n0x7fffffff\n-2\n0\n</code></pre>\n<p>what other values are supposed to generate an abort() call ?</p>\n<p><img alt=\"here is sceenshot\" src=\"https://i.imgur.com/xVc1pcN.png\"/></p>\n<p>visual C++ 11.0.61030.0 update 4</p>\n", "Tags": "<c++><visual-c++><c++11>", "OwnerUserId": "414063", "AnswerCount": "1"}, "24128288": {"ParentId": "24105805", "CommentCount": "3", "Body": "<blockquote>\n<p id=\"so_24105805_24128288_0\"><strong>26.5.3.1/5</strong> <code>explicit linear_congruential_engine(result_type s = default_seed);</code>\n<em>Effects:</em> Constructs a <code>linear_congruential_engine</code> object. If <code>c mod m</code> is 0 and <code>s mod m</code> is 0, sets the engine\u2019s state to 1, otherwise sets the engine\u2019s state to <code>s mod m</code>.</p>\n</blockquote>\n<p>For some reason, MSVC implementation chooses to assert in debug build when the \"sets the engine\u2019s state to 1\" condition triggers; in release build, it just quietly seeds with 1 instead of 0.</p>\n<p><code>minstd_rand</code> is a typedef for <code>linear_congruential_engine&lt;uint_fast32_t, 48271, 0, 2147483647&gt;</code>. So any seed that is 0 modulo 2147483647 == 0x7FFFFFFF is meaningless (the generator would just produce a sequence of zeros, if it weren't adjusting the seed to 1 in this case).</p>\n", "OwnerUserId": "1670129", "PostTypeId": "2", "Id": "24128288", "Score": "1", "CreationDate": "2014-06-09T20:18:47.417", "LastActivityDate": "2014-06-09T20:18:47.417"}, "bq_ids": {"n4140": {"so_24105805_24128288_0": {"section_id": 3530, "quality": 0.5555555555555556, "length": 10}}, "n3337": {"so_24105805_24128288_0": {"section_id": 3395, "quality": 0.5555555555555556, "length": 10}}, "n4659": {"so_24105805_24128288_0": {"section_id": 4294, "quality": 0.5555555555555556, "length": 10}}}});