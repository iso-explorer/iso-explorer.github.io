post_cb({"27960408": {"Id": "27960408", "PostTypeId": "2", "Body": "<p><code>function1(1, aaaa)</code> is equivalent to <code>function1(1, int)</code> - you are trying to pass a type as an argument, which is ill-formed.</p>\n<p>In <code>function1(1,aaaa())</code> <code>aaaa()</code> creates a temporary <code>int</code> with value <code>0</code>. See for example C++14 draft N4140 [expr.type.conv]/2:</p>\n<blockquote>\n<p id=\"so_27960122_27960408_0\">The expression <code>T()</code>, where <code>T</code> is a <em>simple-type-specifier</em> or <em>typename-specifier</em> for a non-array complete object type or the (possibly cv-qualified) void type, creates a prvalue of the specified type, whose value is that produced by value-initializing (8.5) an object of type <code>T</code>;</p>\n</blockquote>\n", "LastActivityDate": "2015-01-15T09:33:56.183", "CommentCount": "4", "CreationDate": "2015-01-15T09:33:56.183", "ParentId": "27960122", "Score": "3", "OwnerUserId": "3959454"}, "bq_ids": {"n4140": {"so_27960122_27960408_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 6000}}, "n3337": {"so_27960122_27960408_0": {"length": 16, "quality": 0.6956521739130435, "section_id": 5768}}, "n4659": {"so_27960122_27960408_0": {"length": 12, "quality": 0.5217391304347826, "section_id": 4058}}}, "27960122": {"ViewCount": "161", "Body": "<p>I have found a piece of code with strange argument which is a type:</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ntemplate&lt;class T&gt;\nint function1(T count,double)\n{\n    cout&lt;&lt;\"function1 is called\"&lt;&lt;endl;\n    return 1111;\n}\n\nint main()\n{\n    typedef int aaaa;\n    function1(1,aaaa()); \n}\n</code></pre>\n<p>And the output of this function is </p>\n<blockquote>\n<p id=\"so_27960122_27960122_0\">function1 is called</p>\n</blockquote>\n<p>I want to know what does it mean when an argument is a type? and why should I give the function aaaa() and aaaa without parenthesis gives compiler error?</p>\n<pre><code>error: expected primary-expression before \u2018)\u2019 token\n  function1(1,aaaa); \n                  ^\n</code></pre>\n", "AcceptedAnswerId": "27960408", "Title": "Passing typedef with parenthesis as an argument", "CreationDate": "2015-01-15T09:19:09.677", "Id": "27960122", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2015-01-15T09:33:56.183", "Score": "1", "OwnerUserId": "4456784", "Tags": "<c++><templates><c++11><types><typedef>", "AnswerCount": "2"}, "27960283": {"Id": "27960283", "PostTypeId": "2", "Body": "<p><code>T();</code> where <code>T</code> is any type creates a nameless temporary of type <code>T</code>. The object created would be <a href=\"http://en.cppreference.com/w/cpp/language/value_initialization\" rel=\"nofollow\">value initialized</a>. As applied to <code>aaaa</code>, which is a <code>typedef</code> for <code>int</code>, a temporary <code>int</code> is created and assigned the value <code>0</code>.</p>\n", "LastActivityDate": "2015-01-15T09:27:24.043", "CommentCount": "0", "CreationDate": "2015-01-15T09:27:24.043", "ParentId": "27960122", "Score": "3", "OwnerUserId": "862351"}});