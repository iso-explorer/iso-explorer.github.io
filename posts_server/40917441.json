post_cb({"40917513": {"ParentId": "40917441", "CommentCount": "0", "CreationDate": "2016-12-01T18:07:30.930", "OwnerUserId": "3087601", "PostTypeId": "2", "Id": "40917513", "Score": "0", "Body": "<p>You can't do</p>\n<blockquote>\n<p id=\"so_40917441_40917513_0\"><em>class-head:</em><br>\n  \u2003<em>class-key attribute-specifier-seq<sub>opt</sub> class-head-name<sub>opt</sub> class-virt-specifier<sub>opt</sub> base-clause<sub>opt</sub></em></br></p>\n</blockquote>\n<p>, because that would allow <em>class-head</em> to be</p>\n<blockquote>\n<p id=\"so_40917441_40917513_1\"><em>class-key class-virt-specifier</em></p>\n</blockquote>\n<p>which is not allowed by the original.</p>\n", "LastActivityDate": "2016-12-01T18:07:30.930"}, "40917525": {"ParentId": "40917441", "CommentCount": "0", "CreationDate": "2016-12-01T18:08:11.737", "OwnerUserId": "3282436", "PostTypeId": "2", "Id": "40917525", "Score": "0", "Body": "<p>No, because then it would be possible to leave out <em>class-head-name</em> while still specifying <em>class-virt-specifier</em>.</p>\n<p>The grammar for <em>class-virt-specifier</em> is:</p>\n<blockquote>\n<p id=\"so_40917441_40917525_0\"><em>class-virt-specifier</em>:<br>\n  \u2003\u2003final</br></p>\n</blockquote>\n<p>And as you mentioned, unnamed classes cannot be <strong>final</strong>.</p>\n", "LastActivityDate": "2016-12-01T18:08:11.737"}, "40917543": {"ParentId": "40917441", "PostTypeId": "2", "CommentCount": "2", "CreationDate": "2016-12-01T18:09:05.133", "Score": "5", "LastEditorUserId": "734069", "LastEditDate": "2016-12-01T18:15:59.710", "Id": "40917543", "OwnerUserId": "734069", "Body": "<p>No. If you did, then there would be ambiguity. <code>class final</code> could mean a named class called <code>final</code> or an unnamed class that uses <code>final</code> as the virtual specifier.</p>\n<p>Because of how the grammar is defined, <code>class final</code> <em>always means</em> a class named <code>final</code>. The grammar is unambiguous. The bracketed notation is not normative text; it simply explains the <em>reason</em> for the two definitions.</p>\n<p>Now, you <em>could</em> define the grammar a different way to achieve the same effect, by adding another term:</p>\n<blockquote>\n<p id=\"so_40917441_40917543_0\">class-head:</p>\n<p id=\"so_40917441_40917543_1\">\u2003\u2003class-key attribute-specifier-seq<sub>opt</sub> class-head-name-stuff<sub>opt</sub> base-clause<sub>opt</sub></p>\n<p id=\"so_40917441_40917543_2\">class-head-name-stuff:</p>\n<p id=\"so_40917441_40917543_3\">\u2003\u2003class-head-name class-virt-specifier<sub>opt</sub></p>\n</blockquote>\n", "LastActivityDate": "2016-12-01T18:15:59.710"}, "bq_ids": {"n4140": {"so_40917441_40917441_1": {"section_id": 5845, "quality": 0.8125, "length": 13}}, "n3337": {"so_40917441_40917441_1": {"section_id": 5615, "quality": 0.8125, "length": 13}}, "n4659": {"so_40917441_40917441_1": {"section_id": 7324, "quality": 0.8125, "length": 13}}}, "40917441": {"CommentCount": "3", "ViewCount": "79", "CreationDate": "2016-12-01T18:03:37.847", "LastActivityDate": "2016-12-01T18:15:59.710", "Title": "C++ Grammar production: class-head", "AcceptedAnswerId": "40917543", "PostTypeId": "1", "Id": "40917441", "Score": "1", "Body": "<p>Below you'll find the definition of the grammar production <em>class-head</em> in <a href=\"http://eel.is/c++draft/class#1\" rel=\"nofollow noreferrer\">[class]/1</a>:</p>\n<blockquote>\n<p id=\"so_40917441_40917441_0\"><em>class-head:<br>\n    \u2003\u2003class-key attribute-specifier-seq<sub>opt</sub> class-head-name\n  class-virt-specifier<sub>opt</sub> base-clause<sub>opt</sub><br>\n  \u2003\u2003class-key attribute-specifier-seq<sub>opt</sub>\n  base-clause<sub>opt</sub></br></br></em></p>\n</blockquote>\n<p>At the end of the paragraph you'll find the following:  </p>\n<blockquote>\n<p id=\"so_40917441_40917441_1\">A <em>class-specifier</em> whose <em>class-head</em> omits the <em>class-head-name</em>\n  defines an unnamed class. [ Note: An unnamed class thus can\u2019t be\n  <strong>final</strong>. \u2014end note ]</p>\n</blockquote>\n<p>From the above, I gather that the grammar for a named class, i.e., a class with a <em>class-head-name</em>, is given by the first definition above, and the grammar for an unnamed class is given by the second definition.</p>\n<p>A simple question: wouldn't be possible to replace both definitions above by the first one, simply by substituting <em>class-head-name</em> with <em>class-head-name<sub>opt</sub></em> in it?</p>\n<p>Or to be more clear. Wouldn't be possible to replace the definition above for <em>class-head</em> for the following?</p>\n<p><em>class-head:<br>\n   \u2003\u2003class-key attribute-specifier-seq<sub>opt</sub> class-head-name<sub><strong>opt</strong></sub> class-virt-specifier<sub>opt</sub> base-clause<sub>opt</sub></br></em></p>\n", "Tags": "<c++><language-lawyer><c++1z>", "OwnerUserId": "4463557", "AnswerCount": "3"}});