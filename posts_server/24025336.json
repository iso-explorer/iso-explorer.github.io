post_cb({"bq_ids": {"n4140": {"so_24025336_24025412_0": {"length": 22, "quality": 0.8461538461538461, "section_id": 665}}, "n3337": {"so_24025336_24025412_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 655}}, "n4659": {"so_24025336_24025412_0": {"length": 22, "quality": 0.8461538461538461, "section_id": 693}}}, "24025353": {"Id": "24025353", "PostTypeId": "2", "Body": "<p>Just don't use a pointer (there's no need for it anyway):</p>\n<pre><code>Item I(5);\n++I;\n</code></pre>\n", "LastActivityDate": "2014-06-03T21:36:26.083", "Score": "6", "CreationDate": "2014-06-03T21:36:26.083", "ParentId": "24025336", "CommentCount": "3", "OwnerUserId": "701092"}, "24025380": {"Id": "24025380", "PostTypeId": "2", "Body": "<p>You can manually write (if you REALLY want to use a pointer) </p>\n<pre><code>I-&gt;operator++();\n</code></pre>\n", "LastActivityDate": "2014-06-03T21:38:39.333", "Score": "2", "CreationDate": "2014-06-03T21:38:39.333", "ParentId": "24025336", "CommentCount": "0", "OwnerUserId": "3093378"}, "24025412": {"Id": "24025412", "PostTypeId": "2", "Body": "<p>No, you cannot overload operators for pointer types.</p>\n<p>When defining your own <code>operator++</code> the first argument to the function must be of <em>class-</em> or <em>enumeration-type</em>, as specified in <code>[over.inc]p1</code> in the C++ Standard:</p>\n<blockquote>\n<p id=\"so_24025336_24025412_0\">The user-defined function called <code>operator++</code> implements the prefix and postfix <code>++</code> operator. If this function is a member function with no parameters, or a non-member function with one parameter of class or enumeration type, it defines the prefix increment operator <code>++</code> for objects of that type.</p>\n</blockquote>\n<hr>\n<p><strong>But I really really want to call <code>operator++</code> without having to explicitly write <code>*ptr</code>...</strong></p>\n<p>And you can, but it's not the prettiest looking line of code:</p>\n<pre><code>ptr-&gt;operator++ (); // call member function `operator++`\n</code></pre>\n<hr>\n<p><sub> <strong>Note</strong>: Instead of doing <code>Item *I = new Item (5); ++*I</code>, consider using just <code>Item I (5); ++I</code>, there's no need to use pointers in your snippet. </sub></p>\n</hr></hr>", "LastEditorUserId": "1090079", "LastActivityDate": "2014-06-03T22:03:32.800", "Score": "1", "CreationDate": "2014-06-03T21:40:57.040", "ParentId": "24025336", "CommentCount": "0", "LastEditDate": "2014-06-03T22:03:32.800", "OwnerUserId": "1090079"}, "24025336": {"ViewCount": "176", "Body": "<p>I tried find anything about overload operator ++ for pointer, but without results.</p>\n<p>There is my code.</p>\n<pre><code>struct Item\n{\n    int amount;\n    Item(int a){ this-&gt;amount = a; };\n    Item&amp; operator++()\n    { \n       this-&gt;amount++; \n       return *this;\n    };\n};\n\n\nint main()\n{\n\n    Item *I = new Item(5);\n\n    ++*I;\n\n    return 0;\n}\n</code></pre>\n<p>Is there any options that a could write only in main function</p>\n<pre><code>++I;\n</code></pre>\n<p>(sorry about my English)</p>\n", "AcceptedAnswerId": "24025412", "Title": "c++ pointer: overload operator++", "CreationDate": "2014-06-03T21:35:22.327", "Id": "24025336", "CommentCount": "3", "LastEditDate": "2014-06-03T21:43:12.290", "PostTypeId": "1", "LastEditorUserId": "1783614", "LastActivityDate": "2014-06-03T22:03:32.800", "Score": "0", "OwnerUserId": "3704771", "Tags": "<c++><operator-overloading>", "AnswerCount": "3"}});