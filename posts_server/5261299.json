post_cb({"5261356": {"ParentId": "5261299", "CommentCount": "0", "Body": "<p>static - in this context - only affects the scope, when you declare a function static it has file scope. So you can easily check if it is the same by trying to access the function from another source. </p>\n<p>that way we avoid the discussions about compiler language etc.</p>\n", "OwnerUserId": "45685", "PostTypeId": "2", "Id": "5261356", "Score": "1", "CreationDate": "2011-03-10T14:47:10.863", "LastActivityDate": "2011-03-10T14:47:10.863"}, "5261299": {"CommentCount": "3", "AcceptedAnswerId": "5261457", "PostTypeId": "1", "LastEditorUserId": "203667", "CreationDate": "2011-03-10T14:43:07.137", "LastActivityDate": "2011-03-10T15:08:49.550", "LastEditDate": "2011-03-10T15:08:49.550", "ViewCount": "6096", "FavoriteCount": "3", "Title": "Static keyword in function declaration can be missing in function definition?", "Id": "5261299", "Score": "8", "Body": "<p>I want to have a static function which I declare in my .c file before defining it:</p>\n<pre><code>//file a.c version 1\nstatic int foo();\n...\nstatic int foo()\n{\n...\n}\n</code></pre>\n<p>However, it seems that I can leave the <code>static</code> keyword out of the function definition and I get no compiler warnings... e.g.</p>\n<pre><code>//file a.c version 2\nstatic int foo();\n...\nint foo()\n{\n...\n}\n</code></pre>\n<p>Am I correct in assuming these two forms are exactly the same?<br>\nIf so, why is this discrepancy allowed and which form should I use?</br></p>\n", "Tags": "<c++><c><function><static><declaration>", "OwnerUserId": "653712", "AnswerCount": "5"}, "5261430": {"ParentId": "5261299", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>7.1.1/7:</p>\n<blockquote>\n<p id=\"so_5261299_5261430_0\">The linkages implied by successive\n  declarations for a given entity shall\n  agree. That is, within a given scope,\n  each declaration declaring the same\n  object name or the same overloading of\n  a function name shall imply the same\n  linkage.</p>\n</blockquote>\n<p>7.1.1/6: (Thanks Steve - this is also needed for the answer to be clear)</p>\n<blockquote>\n<p id=\"so_5261299_5261430_1\">A name declared in a namespace scope\n  without a storage-class-specifier has\n  external linkage unless it has\n  internal linkage because of a previous\n  declaration and provided it is not\n  declared const. Objects declared const\n  and not explicitly declared extern\n  have internal linkage.</p>\n</blockquote>\n<p>Yes, those two are the same.</p>\n<p>This however is invalid:</p>\n<pre><code>int foo();\n\nstatic int foo() {\n  return 0;\n}\n</code></pre>\n", "OwnerUserId": "616700", "LastEditorUserId": "616700", "LastEditDate": "2011-03-10T14:58:52.987", "Id": "5261430", "Score": "3", "CreationDate": "2011-03-10T14:53:24.627", "LastActivityDate": "2011-03-10T14:58:52.987"}, "5261465": {"ParentId": "5261299", "CommentCount": "0", "Body": "<p>The static attribute changes the visibility to the compilation unit. This allows to use the same name in different files for different purposes. You should use the static only once. If you have a prototype, you must do here.</p>\n<p>When you are asking for <code>C++</code> you should not use static but anonymous namespace to make the symbold private for the compilation unit:</p>\n<pre><code>namespace {\n    int foo();\n}\n\nvoid bar()\n{\n    foo();\n}\n</code></pre>\n", "OwnerUserId": "266487", "PostTypeId": "2", "Id": "5261465", "Score": "0", "CreationDate": "2011-03-10T14:55:45.130", "LastActivityDate": "2011-03-10T14:55:45.130"}, "5261466": {"ParentId": "5261299", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>As a sidenote, C++ provides a superior alternative to <code>static</code>. You can also use unnamed namespace here</p>\n<p>Example,</p>\n<pre><code>namespace \n{  \n   void f()\n   {\n   }\n}\n</code></pre>\n<p>See these:</p>\n<p><a href=\"https://stackoverflow.com/questions/4422507/superiority-of-unnamed-namespace-over-static\">Superiority of unnamed namespace over static?</a><br>\n<a href=\"https://stackoverflow.com/questions/4977252/why-unnamed-namespace-is-a-superior-alternative-to-static\">Why an unnamed namespace is a \"superior\" alternative to static?</a></br></p>\n", "OwnerUserId": "415784", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:55:24.927", "Id": "5261466", "Score": "0", "CreationDate": "2011-03-10T14:55:48.723", "LastActivityDate": "2011-03-10T14:55:48.723"}, "bq_ids": {"n4140": {"so_5261299_5261430_0": {"section_id": 5397, "quality": 0.88, "length": 22}, "so_5261299_5261430_1": {"section_id": 7136, "quality": 0.5416666666666666, "length": 13}}, "n3337": {"so_5261299_5261430_0": {"section_id": 5192, "quality": 0.88, "length": 22}, "so_5261299_5261457_0": {"section_id": 5191, "quality": 1.0, "length": 15}, "so_5261299_5261430_1": {"section_id": 5191, "quality": 1.0, "length": 24}}, "n4659": {"so_5261299_5261430_0": {"section_id": 6822, "quality": 0.88, "length": 22}, "so_5261299_5261457_0": {"section_id": 8640, "quality": 0.5333333333333333, "length": 8}}}, "5261457": {"ParentId": "5261299", "CommentCount": "4", "Body": "<p>Yes 7.1.1/6</p>\n<blockquote>\n<p id=\"so_5261299_5261457_0\">A name declared in a namespace scope without a <em>storage-class-specifier</em> has external linkage unless it has internal linkage because of a previous declaration and provided it is not declared <code>const</code>.</p>\n</blockquote>\n<p>See also the examples of 7.1.1/7</p>\n", "OwnerUserId": "136208", "PostTypeId": "2", "Id": "5261457", "Score": "7", "CreationDate": "2011-03-10T14:55:10.823", "LastActivityDate": "2011-03-10T14:55:10.823"}});