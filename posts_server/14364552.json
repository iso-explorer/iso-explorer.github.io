post_cb({"bq_ids": {"n4140": {"so_14364552_14364612_0": {"length": 20, "quality": 0.8695652173913043, "section_id": 5938}}, "n3337": {"so_14364552_14364612_0": {"length": 20, "quality": 0.8695652173913043, "section_id": 5710}}, "n4659": {"so_14364552_14364612_0": {"length": 20, "quality": 0.8695652173913043, "section_id": 7422}}}, "14364552": {"ViewCount": "99", "Body": "<p>I'm reading C++ Primer, 5th Ed., where on p. 71 they first give this code example:</p>\n<pre><code>const int ci = 0, &amp;cj = ci;\ndecltype(ci) x = 0;\ndecltype(cj) y = x;\ndecltype(cj) z; //error\n</code></pre>\n<p>Then they say:</p>\n<blockquote>\n<p id=\"so_14364552_14364552_0\">It is worth noting that <code>decltype</code> is the only context in which a variable defined as a reference is not treated as a synonym for the object to which it refers.</p>\n</blockquote>\n<p>What do they mean by this? I don't get it. The <code>y</code> there refers to <code>x</code>. So what's the catch?</p>\n", "AcceptedAnswerId": "14364612", "Title": "decltype - \"the only context in which a variable defined as a reference is not treated as a synonym for the object to which it refers\"?", "CreationDate": "2013-01-16T17:48:07.347", "Id": "14364552", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-01-16T18:00:05.270", "Score": "5", "OwnerUserId": "1859852", "Tags": "<c++>", "AnswerCount": "1"}, "14364612": {"Id": "14364612", "PostTypeId": "2", "Body": "<p>I believe they're trying to say that <code>decltype(cj)</code> will not give you the type of the object that <code>cj</code> refers to (that is, <code>const int</code>) but will give you the type of <code>cj</code> itself. So <code>y</code> will be <code>const int&amp;</code>.</p>\n<p>The case to compare this to is when using the name of a reference in an expression. The standard says:</p>\n<blockquote>\n<p id=\"so_14364552_14364612_0\">If an expression initially has the type \u201creference to T\u201d (8.3.2, 8.5.3), the type is adjusted to T prior to any further analysis. The expression designates the object or function denoted by the reference, and the expression is an lvalue or an xvalue, depending on the expression.</p>\n</blockquote>\n<p>That is, when using the name of a reference in an expression, it is not the reference that is acted on but the object it refers to. This is what gives a reference type the functionality of an \"alias\".</p>\n", "LastEditorUserId": "150634", "LastActivityDate": "2013-01-16T18:00:05.270", "Score": "9", "CreationDate": "2013-01-16T17:51:55.900", "ParentId": "14364552", "CommentCount": "2", "OwnerUserId": "150634", "LastEditDate": "2013-01-16T18:00:05.270"}});