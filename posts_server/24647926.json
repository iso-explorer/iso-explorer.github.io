post_cb({"24647926": {"CommentCount": "10", "AcceptedAnswerId": "24648091", "PostTypeId": "1", "LastEditorUserId": "256138", "CreationDate": "2014-07-09T07:40:03.777", "LastActivityDate": "2014-07-09T10:52:02.957", "LastEditDate": "2014-07-09T08:07:33.993", "ViewCount": "705", "FavoriteCount": "1", "Title": "Why is std::make_tuple(7 + N...) legal in C++11?", "Id": "24647926", "Score": "21", "Body": "<p>The following code is legal in C++11.</p>\n<pre><code>template&lt;int... N&gt;\nstd::tuple&lt;decltype(N)...&gt; f()\n{\n    return std::make_tuple(7 + N...); \n}\n</code></pre>\n<p>What does it mean?</p>\n", "Tags": "<c++><templates><c++11><variadic-templates><compile-time-constant>", "OwnerUserId": "508343", "AnswerCount": "1"}, "24648091": {"ParentId": "24647926", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>First of all, look at the template parameters: <code>template &lt;int ... N&gt;</code>. Even though a variable number of template arguments can be given to <code>f</code>, all of them must be of type <code>int</code>.</p>\n<p>Now when you use <code>f&lt;t1, t2, ..., tn&gt;</code>, the <a href=\"http://en.wikipedia.org/wiki/Variadic_template\">parameter unpacking</a> <code>(7 + N...)</code> will follow the <em>pattern</em> <code>7 + N</code> and expand to </p>\n<pre><code>7 + t1, 7 + t2, 7 + t3, ..., 7 + tn\n</code></pre>\n<p>Therefore you end up with a tuple which contains each of your template arguments increased by seven. The details can be found in section 14.5.3 Variadic templates [temp.variadic].</p>\n<blockquote>\n<p id=\"so_24647926_24648091_0\">3. A pack expansion consists of a pattern and an ellipsis, the instantiation of which produces zero or more instantiations of the pattern in a list [...].</p>\n</blockquote>\n", "OwnerUserId": "1139697", "LastEditorUserId": "1139697", "LastEditDate": "2014-07-09T10:52:02.957", "Id": "24648091", "Score": "25", "CreationDate": "2014-07-09T07:48:43.967", "LastActivityDate": "2014-07-09T10:52:02.957"}, "bq_ids": {"n4140": {"so_24647926_24648091_0": {"section_id": 121, "quality": 0.8333333333333334, "length": 10}}, "n3337": {"so_24647926_24648091_0": {"section_id": 116, "quality": 0.8333333333333334, "length": 10}}, "n4659": {"so_24647926_24648091_0": {"section_id": 125, "quality": 0.8333333333333334, "length": 10}}}});