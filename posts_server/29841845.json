post_cb({"29841983": {"ParentId": "29841845", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>No, this is not allowed. [expr.delete]/p3, emphasis mine:</p>\n<blockquote>\n<p id=\"so_29841845_29841983_0\">In the first alternative (<em>delete object</em>), if the static type of the\n  object to be deleted is different from its dynamic type, the static\n  type shall be a base class of the dynamic type of the object to be\n  deleted <strong>and the static type shall have a virtual destructor</strong> or the\n  behavior is undefined.</p>\n</blockquote>\n<p>In fact, the committee fairly recently <a href=\"http://cplusplus.github.io/EWG/ewg-closed.html#99\" rel=\"nofollow noreferrer\">rejected</a> <a href=\"http://open-std.org/JTC1/SC22/WG21/docs/cwg_closed.html#1259\" rel=\"nofollow noreferrer\">a proposal to make deleting a POD via a pointer-to-base well-defined</a>.</p>\n", "OwnerUserId": "2756719", "LastEditorUserId": "2756719", "LastEditDate": "2015-05-05T05:46:51.900", "Id": "29841983", "Score": "18", "CreationDate": "2015-04-24T08:07:35.297", "LastActivityDate": "2015-05-05T05:46:51.900"}, "29841845": {"CommentCount": "5", "CreationDate": "2015-04-24T07:59:18.317", "PostTypeId": "1", "AcceptedAnswerId": "29841983", "LastEditorUserId": "63550", "LastActivityDate": "2015-05-05T05:46:51.900", "LastEditDate": "2015-04-24T12:57:31.363", "ViewCount": "532", "FavoriteCount": "1", "Title": "Is it safe to delete a POD object by a pointer to its base?", "Id": "29841845", "Score": "11", "Body": "<p>Actually I am thinking about trivially destructible objects, not only about <a href=\"http://en.wikipedia.org/wiki/Plain_old_data_structure\" rel=\"nofollow\">POD</a> (I am not sure POD can have base class).</p>\n<p>When I read this explanation for <a href=\"http://en.cppreference.com/w/cpp/types/is_destructible\" rel=\"nofollow\">is_trivially_destructible</a> from cppreference I notice this:</p>\n<blockquote>\n<p id=\"so_29841845_29841845_0\">Storage occupied by trivially destructible objects may be reused without calling the destructor.</p>\n</blockquote>\n<p>So, it is safe to do that:</p>\n<pre><code>struct A {\n  int a;\n};\nstruct B : A {\n  int b;\n};\nint main() {\n  A* a = new B;\n  delete a;\n}\n</code></pre>\n<p><code>B::~B()</code> won't be called - and AFAIK (please correct if I am wrong) the entire memory will be freed. And <code>B::~B()</code> for sure is trivial.</p>\n<p>I know this code smells badly, but my question is only about safeness of this code...</p>\n", "Tags": "<c++><c++11><destructor><pod>", "OwnerUserId": "1463922", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_29841845_29841983_0": {"section_id": 6107, "quality": 0.9629629629629629, "length": 26}}, "n3337": {"so_29841845_29841983_0": {"section_id": 5873, "quality": 0.9629629629629629, "length": 26}}, "n4659": {"so_29841845_29841983_0": {"section_id": 7604, "quality": 0.9629629629629629, "length": 26}}}});