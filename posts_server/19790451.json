post_cb({"bq_ids": {"n4140": {"so_19790451_19790562_3": {"length": 6, "quality": 0.75, "section_id": 5333}}, "n3337": {"so_19790451_19790562_3": {"length": 6, "quality": 0.75, "section_id": 5130}}, "n4659": {"so_19790451_19790562_3": {"length": 6, "quality": 0.75, "section_id": 6754}}}, "19790562": {"Id": "19790562", "PostTypeId": "2", "Body": "<pre><code>  [iter.first]( const std::string&amp; str )-&gt;bool { return str == iter.first; }\n// ^^^^^^^^^^\n</code></pre>\n<p>Lambda captures are for <em>identifiers</em>, not for arbitrary expressions or anything else.</p>\n<p>Just pass in <code>iter</code>:</p>\n<pre><code>  [iter]( const std::string&amp; str )-&gt;bool { return str == iter.first; }\n</code></pre>\n<hr>\n<blockquote>\n<p id=\"so_19790451_19790562_0\"><code>[C++11: 5.1.2/1]:</code></p>\n<p id=\"so_19790451_19790562_1\"><em>[..]</em></p>\n<p id=\"so_19790451_19790562_2\">\u00a0<em>capture</em>:<br>\n  \u00a0\u00a0\u00a0<em>identifier</em><br>\n  \u00a0\u00a0\u00a0<code>&amp;</code> <em>identifier</em><br>\n  \u00a0\u00a0\u00a0<code>this</code></br></br></br></p>\n<p id=\"so_19790451_19790562_3\"><code>[C++11: 2.11/1]:</code> An identifier is an arbitrarily long sequence of letters and digits. <em>[..]</em></p>\n</blockquote>\n</hr>", "LastActivityDate": "2013-11-05T13:50:18.710", "CommentCount": "2", "CreationDate": "2013-11-05T13:50:18.710", "ParentId": "19790451", "Score": "8", "OwnerUserId": "560648"}, "19790451": {"ViewCount": "560", "Body": "<p>I just want to know how to write pairs inside the lambda expression capture brackets.\nBecause the following code does not compile so I'm missing something ...</p>\n<pre><code>std::vector&lt;std::pair&lt;std::string, std::string&gt;&gt; container1_;\n\nfor( auto iter : container1_ )\n{\n    auto result = std::find_if( container2_.cbegin(), container2_.cend(),\n        [iter.first]( const std::string&amp; str )-&gt;bool { return str == iter.first; } );\n}\n\nIn member function \u2018bool MsgChecker::CheckKeys()\u2019:\nerror: expected \u2018,\u2019 before \u2018.\u2019 token\nerror: expected identifier before \u2018.\u2019 token\n</code></pre>\n", "AcceptedAnswerId": "19790562", "Title": "std::pair in lambda expression", "CreationDate": "2013-11-05T13:45:10.293", "Id": "19790451", "CommentCount": "8", "LastEditDate": "2013-11-05T13:50:59.713", "PostTypeId": "1", "LastEditorUserId": "46642", "LastActivityDate": "2013-11-05T13:50:59.713", "Score": "3", "OwnerUserId": "710054", "Tags": "<c++><c++11><lambda>", "AnswerCount": "1"}});