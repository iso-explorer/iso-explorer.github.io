post_cb({"40331211": {"ParentId": "40331193", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2016-10-30T16:34:22.813", "Score": "13", "LastEditorUserId": "2456565", "LastEditDate": "2016-10-30T16:39:13.097", "Id": "40331211", "OwnerUserId": "2456565", "Body": "<p>No, you do not need to do anything special. In this case (you're converting the lambda to a function pointer) this is no different to telling you that you don't need to delete <code>doSomething</code> either.</p>\n<p>More generally, lambdas are unnamed types with deleted default constructors. This means you can only explicitly create one with new expression by copy/move constructing it - and only then you'd have to call <code>delete</code>.</p>\n<blockquote>\n<p id=\"so_40331193_40331211_0\">N4140 \u00a75.1.2 [expr.prim.lambda] /20</p>\n<p id=\"so_40331193_40331211_1\">The closure type associated with a <em>lambda-expression</em> has a deleted\n  default constructor and a deleted copy assignment operator.</p>\n</blockquote>\n", "LastActivityDate": "2016-10-30T16:39:13.097"}, "40331319": {"ParentId": "40331193", "CommentCount": "0", "CreationDate": "2016-10-30T16:45:34.793", "OwnerUserId": "2079303", "PostTypeId": "2", "Id": "40331319", "Score": "4", "Body": "<p>Without knowing what your class is supposed to do, it is impossible to tell you what its destructor should or shouldn't do.</p>\n<p>If the class directly allocates dynamic memory (with <code>new</code> or <code>malloc</code> [don't use <code>malloc</code>]), then you would have to consider how to deallocate that memory. Likewise, if the class acquires other resources such as file pointers, you will have to consider how to release those resources. Typically, the proper place to do that is the destructor.</p>\n<p>Ask yourself: Does the class directly allocate any dynamic memory or aquire external resources? Answer appears to be: No, it doesn't. So there appears to not be anything in particular that should be explicitly done in the body of the destructor.</p>\n", "LastActivityDate": "2016-10-30T16:45:34.793"}, "bq_ids": {"n4140": {"so_40331193_40331211_1": {"section_id": 5979, "quality": 0.9166666666666666, "length": 11}}, "n3337": {"so_40331193_40331211_1": {"section_id": 5747, "quality": 0.9166666666666666, "length": 11}}, "n4659": {"so_40331193_40331211_1": {"section_id": 7461, "quality": 0.8333333333333334, "length": 10}}}, "40331193": {"CommentCount": "7", "AcceptedAnswerId": "40331211", "PostTypeId": "1", "LastEditorUserId": "5280543", "CreationDate": "2016-10-30T16:32:31.203", "LastActivityDate": "2016-10-30T16:45:34.793", "LastEditDate": "2016-10-30T16:36:35.853", "ViewCount": "1497", "FavoriteCount": "1", "Title": "Do I have to delete lambdas?", "Id": "40331193", "Score": "19", "Body": "<p>I am storing pointers to lambdas in dynamically allocated objects:</p>\n<pre><code>struct Function {\n    SomeType*(*func)(int);\n    Function(SomeType*(*new_func)(int)):\n        func(new_func) {}\n}\n\nFunction* myf = new Function(\n    [](int x){ return doSomething(x); }\n);\n\ndelete myf;\n</code></pre>\n<p>Do I have to write something special in the destructor of this class?</p>\n", "Tags": "<c++><c++11><lambda><function-pointers><destructor>", "OwnerUserId": "6245072", "AnswerCount": "2"}});