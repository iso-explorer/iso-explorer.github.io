post_cb({"1087086": {"ParentId": "1087042", "CommentCount": "4", "Body": "<blockquote>\n<p id=\"so_1087042_1087086_0\">What does the standard say about this? Is it always legal to \"allocate\" empty block of memory?</p>\n</blockquote>\n<p>Every object has a unique identity, i.e. a unique address, which implies a non-zero length (the actual amount of memory will be silently increased, if you ask for zero bytes).</p>\n<p>If you allocated more than one of these objects then you'd find they have different addresses.</p>\n", "OwnerUserId": "49942", "PostTypeId": "2", "Id": "1087086", "Score": "12", "CreationDate": "2009-07-06T13:49:34.877", "LastActivityDate": "2009-07-06T13:49:34.877"}, "37482811": {"ParentId": "1087042", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_1087042_37482811_0\">Curiously, C++ requires that operator new return a legitimate pointer\n  even when zero bytes are requested. (Requiring this odd-sounding\n  behavior simplifies things elsewhere in the language.)</p>\n</blockquote>\n<p>I found <em>Effective C++ Third Edition</em> said like this in \"Item 51: Adhere to convention when writing new and delete\".</p>\n", "OwnerUserId": "5340313", "PostTypeId": "2", "Id": "37482811", "Score": "-1", "CreationDate": "2016-05-27T11:51:03.867", "LastActivityDate": "2016-05-27T11:51:03.867"}, "1087066": {"ParentId": "1087042", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>From 5.3.4/7</p>\n<blockquote>\n<p id=\"so_1087042_1087066_0\">When the value of the expression in a direct-new-declarator is zero, the allocation function is called to allocate an array with no elements.</p>\n</blockquote>\n<p>From 3.7.3.1/2</p>\n<blockquote>\n<p id=\"so_1087042_1087066_1\">The effect of dereferencing a pointer returned as a request for zero size is undefined.</p>\n</blockquote>\n<p>Also</p>\n<blockquote>\n<p id=\"so_1087042_1087066_2\">Even if the size of the space requested [by new] is zero, the request can fail.</p>\n</blockquote>\n<p>That means you can do it, but you can not legally (in a well defined manner across all platforms) dereference the memory that you get - you can only pass it to array delete - and you should delete it.</p>\n<p>Here is an interesting foot-note (i.e not a normative part of the standard, but included for expository purposes) attached to the sentence from 3.7.3.1/2</p>\n<blockquote>\n<p id=\"so_1087042_1087066_3\">[32. The intent is to have operator new() implementable by calling malloc() or calloc(), so the rules are substantially the same. C++ differs from C in requiring a zero request to return a non-null pointer.]</p>\n</blockquote>\n", "OwnerUserId": "51103", "LastEditorUserId": "4928", "LastEditDate": "2012-08-31T19:17:50.813", "Id": "1087066", "Score": "191", "CreationDate": "2009-07-06T13:46:29.263", "LastActivityDate": "2012-08-31T19:17:50.813"}, "1087077": {"ParentId": "1087042", "PostTypeId": "2", "CommentCount": "5", "Body": "<p>Yes it is completely legal to allocate a <code>0</code> sized block with <code>new</code>. You simply can't do anything useful with it since there is no valid data for you to access. <code>int[0] = 5;</code> is illegal.</p>\n<p>However, I believe that the standard allows for things like <code>malloc(0)</code> to return <code>NULL</code>.</p>\n<p>You will still need to <code>delete []</code> whatever pointer you get back from the allocation as well.</p>\n", "OwnerUserId": "13430", "LastEditorUserId": "13430", "LastEditDate": "2016-11-14T16:31:26.787", "Id": "1087077", "Score": "9", "CreationDate": "2009-07-06T13:47:43.537", "LastActivityDate": "2016-11-14T16:31:26.787"}, "1087042": {"CommentCount": "8", "AcceptedAnswerId": "1087066", "OwnerDisplayName": "anon", "CreationDate": "2009-07-06T13:42:29.457", "LastActivityDate": "2016-11-14T16:31:26.787", "PostTypeId": "1", "ViewCount": "44453", "FavoriteCount": "34", "Title": "C++ new int[0] -- will it allocate memory?", "Id": "1087042", "Score": "183", "Body": "<p>A simple test app:</p>\n<pre><code>cout &lt;&lt; new int[0] &lt;&lt; endl;\n</code></pre>\n<p>outputs:</p>\n<pre><code>0x876c0b8\n</code></pre>\n<p>So it looks like it works. What does the standard say about this? Is it always legal to \"allocate\" empty block of memory?</p>\n", "Tags": "<c++><memory-management><new-operator><standards-compliance>", "AnswerCount": "5"}, "bq_ids": {"n4140": {"so_1087042_1087066_3": {"section_id": 7177, "quality": 0.8421052631578947, "length": 16}, "so_1087042_1087066_0": {"section_id": 6088, "quality": 0.7272727272727273, "length": 8}, "so_1087042_1087066_2": {"section_id": 7177, "quality": 0.8888888888888888, "length": 8}, "so_1087042_1087066_1": {"section_id": 7177, "quality": 0.7777777777777778, "length": 7}}, "n3337": {"so_1087042_1087066_3": {"section_id": 6921, "quality": 0.8421052631578947, "length": 16}, "so_1087042_1087066_0": {"section_id": 5856, "quality": 0.9090909090909091, "length": 10}, "so_1087042_1087066_2": {"section_id": 6921, "quality": 0.8888888888888888, "length": 8}, "so_1087042_1087066_1": {"section_id": 6921, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_1087042_1087066_0": {"section_id": 7584, "quality": 0.7272727272727273, "length": 8}, "so_1087042_1087066_3": {"section_id": 8685, "quality": 0.8421052631578947, "length": 16}, "so_1087042_1087066_2": {"section_id": 8685, "quality": 0.8888888888888888, "length": 8}, "so_1087042_1087066_1": {"section_id": 8685, "quality": 0.7777777777777778, "length": 7}}}, "1087059": {"ParentId": "1087042", "CommentCount": "4", "Body": "<p>Yes, it is legal to allocate a zero-sized array like this. But you must also delete it.</p>\n", "Id": "1087059", "PostTypeId": "2", "OwnerDisplayName": "anon", "Score": "17", "CreationDate": "2009-07-06T13:45:23.447", "LastActivityDate": "2009-07-06T13:45:23.447"}});