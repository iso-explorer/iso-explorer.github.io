post_cb({"25631177": {"ParentId": "25630829", "PostTypeId": "2", "CommentCount": "8", "Body": "<p><em>(Note: A complete answer should incorporate @thokra's comment, which is to say that <code>main.cpp</code> is a filename and the appearance of the program entry point in a file with that name is only convention.  But it's a fairly well-adhered to convention in Qt programs and C++ in general to try and put the program's entry point in a file with that name.)</em></p>\n<p>One category would be registration of global hooks and settings.  Think about things like <a href=\"http://qt-project.org/doc/qt-5/qtglobal.html#qInstallMessageHandler\" rel=\"nofollow\">qInstallMessageHandler</a>, or <a href=\"http://qt-project.org/doc/qt-4.8/qtextcodec.html#setCodecForCStrings\" rel=\"nofollow\">QTextCodec::setCodecForCStrings</a>.</p>\n<p>Initialization of any <em>non-Qt</em> libraries that your app wants to take for granted would be another area.</p>\n<p>If your program has a main window object that's only created and destroyed one time, it might seem equally suitable to put the \"run once\" code in its constructor/destructor.  But ask yourself exactly what is it about your app that only lets it have one main window.  Why wouldn't it be able to have two in the same process?  Even if that's not part of the requirement today, it can suggest an architectural boundary.</p>\n<p>I'll mention from personal experience that if you try making a class derived from QApplication, and then put your global run-once-code in the constructor and destructor of that derived class, that is trickier than it sounds <em>(especially if you spawn threads and make widgets in that constructor)</em>.  So I don't think in most scenarios you should derive from QApplication.  I stuck with it because I was making an application <em>framework</em>...but avoid that and your run-once code goes in the main.cpp.</p>\n", "OwnerUserId": "211160", "LastEditorUserId": "211160", "LastEditDate": "2014-09-02T19:56:00.057", "Id": "25631177", "Score": "4", "CreationDate": "2014-09-02T19:45:59.993", "LastActivityDate": "2014-09-02T19:56:00.057"}, "25630829": {"CommentCount": "1", "ViewCount": "1646", "CreationDate": "2014-09-02T19:23:54.150", "LastActivityDate": "2014-09-02T19:56:00.057", "Title": "The role of the 'main.cpp' in a Qt project", "AcceptedAnswerId": "25631177", "PostTypeId": "1", "Id": "25630829", "Score": "3", "Body": "<p>In a Qt project we generally find a <code>project.pro</code> file, the <code>main.cpp</code> and several header, source and <code>*.ui</code> files, containing all the resources to breathe life and function into the application/project.\nIf there is more to it than <em>\"press the button to show 'Hello, world!'\"</em>, there might be directories for storing data and configuration files, etc.</p>\n<p>My question is (in spite of the fact that an exact answer depends on the specific situation):</p>\n<p><strong>What is the general role of the main.cpp in a Qt project (Qt Widgets Application)?</strong></p>\n<hr>\n<p>To make clear what I mean:</p>\n<ol>\n<li>Is the <code>main.cpp</code>'s only purpose to kick off the application?</li>\n<li>If not, what are typical tasks to be performed by the <code>main.cpp</code>?</li>\n<li>Speaking of config files - consider the application has a main form which has (and maybe other classes/dialogs instantiated by the main form as well) to know about some configuration data retrieved from a file. Would the initialization happen in the <code>main.cpp</code> or in the <code>MainForm</code>. In short: <em>\"Setting things up...\"</em> should be placed where (in the light of the current question)?</li>\n<li>Whatever you feel like saying...</li>\n</ol>\n</hr>", "Tags": "<c++><qt>", "OwnerUserId": "2672160", "AnswerCount": "2"}, "25631038": {"ParentId": "25630829", "PostTypeId": "2", "CommentCount": "2", "Body": "<blockquote>\n<p id=\"so_25630829_25631038_0\"><em>\"1. Is the main.cpp's only purpose to kick off the application?\"</em></p>\n</blockquote>\n<p>As from the <a class=\"post-tag\" href=\"/questions/tagged/c%2b%2b\" rel=\"tag\" title=\"show questions tagged 'c++'\">c++</a> [standards definition]<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3376.pdf\" rel=\"nofollow\">1</a> the 1st section says:</p>\n<blockquote>\n<p id=\"so_25630829_25631038_1\"><strong>3.6 Start and termination [basic.start]</strong><br>\n<strong>3.6.1 Main function [basic.start.main]</strong><br>\n<sup>1</sup> A program shall contain a global function called main, which is the designated start of the program. It\n  is implementation-defined whether a program in a freestanding environment is required to define a main\n  function.<br>\n  [ Note: <em>In a freestanding environment, start-up and termination is implementation-defined; startup\n  contains the execution of constructors for objects of namespace scope with static storage duration;\n  termination contains the execution of destructors for objects with static storage duration.</em> \u2014end note ]</br></br></br></p>\n</blockquote>\n<p>A <a class=\"post-tag\" href=\"/questions/tagged/qt\" rel=\"tag\" title=\"show questions tagged 'qt'\">qt</a> application is still using C++, thus this constraint needs to be satisfied for any executable application.\nSo presumably: Yes, the <code>main()</code>'s only purpose is to kick off the application.</p>\n<p><code>MainForm</code> and <code>main()</code> aren't really strongly related, other than your configuration will generate a <code>main()</code> function instantiating and calling it. You can also have Qt projects, that don't have any <code>MainForm</code> instance at all (e.g. a just command line app).</p>\n", "OwnerUserId": "1413395", "LastEditorUserId": "1413395", "LastEditDate": "2014-09-02T19:46:33.307", "Id": "25631038", "Score": "3", "CreationDate": "2014-09-02T19:37:21.693", "LastActivityDate": "2014-09-02T19:46:33.307"}, "bq_ids": {"n4140": {"so_25630829_25631038_1": {"section_id": 7145, "quality": 0.75, "length": 36}}, "n3337": {"so_25630829_25631038_1": {"section_id": 6889, "quality": 0.75, "length": 36}}, "n4659": {"so_25630829_25631038_1": {"section_id": 8646, "quality": 0.7083333333333334, "length": 34}}}});