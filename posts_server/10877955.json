post_cb({"10877955": {"ViewCount": "1462", "Body": "<p>I have the following code sequential search run perfectly in Visual C++</p>\n<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\nint seqSearch(int list[], int length, int item)\n{\n    int index = length-1;\n    if (index &lt; 0)\n        return -1;\n    if (list[index] == item)\n        return (index);\n    else seqSearch(list, index, item);\n} // end seqSearch\n\nint main () \n{\n\n    int const length = 10;\n    int item;\n    int list[10] = { 2, 3, 4, 5, 20, 40, 80, 45, 99, 0};\n\n    cout &lt;&lt; \"Please enter the value to be searched: \";\n    cin&gt;&gt; item;\n\n    if (seqSearch(list, length, item) == -1) cout &lt;&lt; \"Item not found.\" &lt;&lt; endl;\n    else cout &lt;&lt;\"Item found at position: \" &lt;&lt; seqSearch(list, length, item) &lt;&lt; \" of list *Note: (first index of list start at 0)\" &lt;&lt; endl;\n\n    system(\"pause\");\n    return 0; \n}\n</code></pre>\n<p>But in Dev-C++ it always display result 0, I tried to debug and see index is correct but why it display 0? Why we have this difference between VC++ and Dev-C++?</p>\n", "AcceptedAnswerId": "10878440", "Title": "recursive function error Dev-C++", "CreationDate": "2012-06-04T07:46:45.197", "Id": "10877955", "CommentCount": "7", "PostTypeId": "1", "LastActivityDate": "2012-06-04T08:34:30.067", "Score": "0", "OwnerUserId": "1320817", "Tags": "<c++><algorithm><visual-c++><recursion><dev-c++>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_10877955_10878440_1": {"length": 12, "quality": 1.0, "section_id": 3913}}, "n3337": {"so_10877955_10878440_1": {"length": 12, "quality": 1.0, "section_id": 3773}}, "n4659": {"so_10877955_10878440_1": {"length": 9, "quality": 0.75, "section_id": 4799}}}, "10878050": {"Id": "10878050", "PostTypeId": "2", "Body": "<p>The correct method definition should be</p>\n<pre><code>int seqSearch(int list[], int length, int item)\n{\n    int index = length-1;\n    if (index &lt; 0)\n        return -1;\n    if (list[index] == item)\n        return (index);\n    else return seqSearch(list, index, item);\n} \n</code></pre>\n<p>You missed out the return statement. Ideally a compiler should warn you but I'm not too familiar with the version that Dev-Cpp uses.</p>\n", "LastActivityDate": "2012-06-04T07:56:36.790", "CommentCount": "3", "CreationDate": "2012-06-04T07:56:36.790", "ParentId": "10877955", "Score": "3", "OwnerUserId": "632447"}, "10878440": {"Id": "10878440", "PostTypeId": "2", "Body": "<p>The function <code>int seqSearch</code> has a code path, <code>else seqSearch(list, index, item);</code> that is not returning anything. Changing this to <code>else return seqSearch(list, index, item);</code> should solve the problem.</p>\n<p>Now digging a little deep.</p>\n<p>From <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2960.pdf\">n2960</a> draft:</p>\n<blockquote>\n<p id=\"so_10877955_10878440_0\">\u00a7 6.6.3/2</p>\n<p id=\"so_10877955_10878440_1\">Flowing off the end of a function is equivalent to a return with no value; this results in undefined behavior in a value-returning function.</p>\n</blockquote>\n<p>So as per the standard it is an undefined behavior.</p>\n<p>Digging a little deeper:</p>\n<ul>\n<li>Why is not returning from a non-void function not a compiler error?</li>\n</ul>\n<p>Checking all code path to figure out if all of them return is a difficult operation and implementations are not required to check that.</p>\n<ul>\n<li>Why is the code functionally working properly in VC++</li>\n</ul>\n<p>This is architecture and <a href=\"http://en.wikipedia.org/wiki/X86_calling_conventions\">calling convention</a> dependent. Try following code:</p>\n<pre><code>#include &lt;iostream&gt;\n\nint fun (int v)\n{\n    int a = v;\n}\n\nint main ()\n{\n    std::cout &lt;&lt; fun(5) &lt;&lt; std::endl;\n}\n</code></pre>\n<p>On different compilers the function <code>fun</code> returns either <code>0</code> or whatever value is passed to it. Basically it can return value of last evaluated expression.</p>\n", "LastActivityDate": "2012-06-04T08:34:30.067", "CommentCount": "1", "CreationDate": "2012-06-04T08:34:30.067", "ParentId": "10877955", "Score": "5", "OwnerUserId": "446386"}});