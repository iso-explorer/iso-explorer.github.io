post_cb({"bq_ids": {"n4140": {"so_29096929_29097125_0": {"length": 32, "quality": 0.9411764705882353, "section_id": 6047}}, "n3337": {"so_29096929_29097125_0": {"length": 32, "quality": 0.9411764705882353, "section_id": 5815}}, "n4659": {"so_29096929_29097125_0": {"length": 32, "quality": 0.9411764705882353, "section_id": 7546}}}, "29097125": {"Id": "29097125", "PostTypeId": "2", "Body": "<p>Short answer: An implementation is not required to support such a cast.</p>\n<p>It may allow a <code>reinterpret_cast</code> to do it, subject to certain rules (essentially: converting to object pointer and back has to yield the original pointer).</p>\n<p>Quoth the standard, [expr.reinterpret.cast]/8:</p>\n<blockquote>\n<p id=\"so_29096929_29097125_0\">Converting a function pointer to an object pointer type or vice versa is conditionally-supported. The meaning of such a conversion is implementation-defined, except that if an implementation supports conversions in both directions, converting a prvalue of one type to the other type and back, possibly with different cv-qualification, shall yield the original pointer value.</p>\n</blockquote>\n<p>Non-embedded implementations usually allow it for purposes of dynamic linking (such as <code>dlsym()</code>). Strictly speaking, though, it is not required to work.</p>\n", "LastActivityDate": "2015-03-17T10:47:46.617", "Score": "4", "CreationDate": "2015-03-17T10:47:46.617", "ParentId": "29096929", "CommentCount": "1", "OwnerUserId": "4301306"}, "29096929": {"ViewCount": "115", "Body": "<p>As I know such casting from <em>pointer to data</em> to <em>pointer to function</em> is not allowed in C89, C99. What about C++?</p>\n", "AcceptedAnswerId": "29097125", "Title": "Casting \"pointer to data\" to \"pointer to function\"", "CreationDate": "2015-03-17T10:37:10.077", "Id": "29096929", "CommentCount": "4", "LastEditDate": "2015-03-17T11:10:39.007", "PostTypeId": "1", "LastEditorUserId": "694576", "LastActivityDate": "2015-03-17T11:10:39.007", "Score": "2", "OwnerUserId": "1154447", "Tags": "<c++><c>", "AnswerCount": "1"}});