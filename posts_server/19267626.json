post_cb({"19267626": {"CommentCount": "4", "ViewCount": "210", "ClosedDate": "2013-10-09T12:10:45.903", "CreationDate": "2013-10-09T09:11:00.160", "LastActivityDate": "2013-10-09T09:51:31.773", "Title": "can't understand the term 'static'", "PostTypeId": "1", "Id": "19267626", "Score": "0", "Body": "<p>I am struggling to understand the term static means and how it works. here I initialized a static variable \"float percentage\". and I have to convert it to percentage using convertToPercent() and after converting it I have to take the value and put the value to someMethod ()  to do some calculations</p>\n<p>below is what I have </p>\n<p>.h</p>\n<pre><code>class Foo     {\n\nprivate:\n    static float percentage;\n\npublic :    \n    float convertToPercent();\n\n};\n</code></pre>\n<p>.cpp</p>\n<pre><code>float Foo::convertToPercent() {\n             percentage = (30/100) * 100;\n          return percentage;\n}\n\nstatic float someMethod () {\n  //place the static percentage value here after doing convertToPercent() method to do some calculation;\n}\n</code></pre>\n<p>however it throws me an error message </p>\n<pre><code>Undefined symbols for architecture x86_64:\n\"Foo::percentage\", referenced from:\n Foo::convertToPercent() in Foo.o\n</code></pre>\n<p>Apperciate for help given. thanks</p>\n", "Tags": "<c++><visual-c++><c++11>", "OwnerUserId": "2850907", "AnswerCount": "5"}, "bq_ids": {"n4140": {"so_19267626_19267667_1": {"section_id": 5907, "quality": 0.9375, "length": 15}}, "n3337": {"so_19267626_19267667_1": {"section_id": 5679, "quality": 0.9375, "length": 15}}, "n4659": {"so_19267626_19267667_1": {"section_id": 7389, "quality": 0.8125, "length": 13}}}, "19267667": {"ParentId": "19267626", "PostTypeId": "2", "CommentCount": "2", "CreationDate": "2013-10-09T09:13:00.677", "Score": "2", "LastEditorUserId": "951757", "LastEditDate": "2013-10-09T09:27:46.093", "Id": "19267667", "OwnerUserId": "951757", "Body": "<p>A static member is shared among all objects of that class.</p>\n<blockquote>\n<p id=\"so_19267626_19267667_0\">A static data member is declared in the class declaration and is initialized in the file containing the class methods. The scope operator is used in the initialization to indicate to which class the static member belongs. However, if the static member is a const integral type or an enumeration type, it can be initialized in the class declaration itself.</p>\n</blockquote>\n<pre><code>class Foo     {\nprivate:\n    static float percentage; // this is declaration not definition\n\npublic :    \n    float convertToPercent();\n\n};\n</code></pre>\n<p>You need to define <code>percentage</code> in cpp file:</p>\n<pre><code>float Foo::percentage(0.0);  // initialize percentage to 0.0    \n</code></pre>\n<p>\u00a7 9.4.2 <strong>Static data members</strong></p>\n<blockquote>\n<p id=\"so_19267626_19267667_1\"><strong>The declaration of a static data member in its class definition is not a definition</strong> and may be of an incomplete type other than cv-qualified void.</p>\n</blockquote>\n", "LastActivityDate": "2013-10-09T09:27:46.093"}, "19267793": {"ParentId": "19267626", "CommentCount": "1", "CreationDate": "2013-10-09T09:18:15.190", "OwnerUserId": "2804295", "PostTypeId": "2", "Id": "19267793", "Score": "2", "Body": "<p>You have to define the static variable outside of the class.</p>\n<pre><code>// header file\nclass Foo     {\nprivate:\n    static float percentage;\n};\n\n// cpp file\nfloat Foo::percentage(0.0);\n</code></pre>\n<p>Because the member variable is static, there will only be one value of this variable shared amongst all instances of Foo classes (all Foo objects) throughout the runtime of your process.  Eg. if you have three Foo objects A, B and C then changing the percent value in object B also changes it in objects A and C too.</p>\n", "LastActivityDate": "2013-10-09T09:18:15.190"}, "19267670": {"ParentId": "19267626", "CommentCount": "1", "CreationDate": "2013-10-09T09:13:04.920", "OwnerUserId": "2725719", "PostTypeId": "2", "Id": "19267670", "Score": "1", "Body": "<p>You only declared it in the class, but did not give a definition in the cpp that should look like this:</p>\n<pre><code>float Foo::percentage;\n</code></pre>\n", "LastActivityDate": "2013-10-09T09:13:04.920"}, "19268501": {"ParentId": "19267626", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2013-10-09T09:45:19.260", "Score": "0", "LastEditorUserId": "2436697", "LastEditDate": "2013-10-09T09:51:31.773", "Id": "19268501", "OwnerUserId": "2436697", "Body": "<p>Below code of yours tries to declare a static member variable percentage   --- OKAY</p>\n<pre><code>// header file\nclass Foo     \n{\n    private:\n        static float percentage;       //constant declaration \n};\n</code></pre>\n<p>Below code of yours tries to assign a value to an object(percentage) which is not defined yet. -- NOT OKAY</p>\n<pre><code>// cpp file\nfloat Foo::convertToPercent() {\n         percentage = (30/100) * 100;     //tring to update percentage which is not defined yet.\n      return percentage;                 //usage of object (percentage) which is not defined yet.\n}\n</code></pre>\n<p>C++ requires that you provide a definition for anything you use but class-specific constants that are staic and of integral type are an exception. As long as you don't take their address, you can declare them and use them without providing a definition.</p>\n<p>In your case, your implementation file (.cpp) should have the below line and then on you can use your \"percentage\" constant wherever applicable.</p>\n<pre><code>float Foo::percentage(0.0);     //definition of static class member : percentage\n</code></pre>\n", "LastActivityDate": "2013-10-09T09:51:31.773"}, "19267809": {"ParentId": "19267626", "CommentCount": "1", "CreationDate": "2013-10-09T09:19:03.693", "OwnerUserId": "45685", "PostTypeId": "2", "Id": "19267809", "Score": "4", "Body": "<p><code>static</code> in this context means that the variable <code>percentage</code> does not belong to a particular instance of the class Foo, it is instead shared between all instances of Foo.</p>\n<p>in order for the linker to know about the variable you need to define it and not just declare it that is why you get an error. </p>\n<p>put</p>\n<pre><code>float Foo::percentage = 0;\n</code></pre>\n<p>in your .cpp file</p>\n", "LastActivityDate": "2013-10-09T09:19:03.693"}});