post_cb({"6615264": {"Id": "6615264", "PostTypeId": "2", "Body": "<p>It won't compile. GCC:</p>\n<pre><code>error: no unique final overrider for \u2018virtual void A::foo()\u2019 in \u2018D\u2019\n</code></pre>\n<p>You could have found that out yourself pretty fast.</p>\n<p>Same with icc:</p>\n<pre><code>error #361: override of virtual function \"A::foo\" is ambiguous\n</code></pre>\n", "LastActivityDate": "2011-07-07T18:19:37.410", "CommentCount": "0", "CreationDate": "2011-07-07T18:19:37.410", "ParentId": "6615193", "Score": "4", "OwnerUserId": "635608"}, "6615215": {"Id": "6615215", "PostTypeId": "2", "Body": "<p>It won't compile for three reasons none of which has anything to do with virtual inheritance(well, maybe the last one).</p>\n<ol>\n<li><p>You forgot the semicolons after class definitions</p></li>\n<li><p>Your inheritance is private</p></li>\n<li><p><code>D::foo()</code> is ambiguous when not overriden explicitly</p></li>\n</ol>\n<p>By the way, the definition of D itself is ill-formed, not just the fact that you try to use it. I mean if your <code>main()</code> function were empty, it still wouldn't compile.</p>\n<p>And \"Will this compile?\" has the obvious answer \"Why don't you try?\"</p>\n<p>Quote from the standard: 10.3.10</p>\n<blockquote>\n<p id=\"so_6615193_6615215_0\">The following example shows a function that does not have a unique\n  final overrider:</p>\n</blockquote>\n<pre><code> struct A {\n virtual void f();\n };\n struct VB1 : virtual A { // note virtual derivation\n void f();\n };\n struct VB2 : virtual A {\n void f();\n };\n struct Error : VB1, VB2 { // ill-formed\n };\n</code></pre>\n", "LastEditorUserId": "469935", "LastActivityDate": "2011-07-07T18:27:32.023", "Score": "4", "CreationDate": "2011-07-07T18:14:44.030", "ParentId": "6615193", "CommentCount": "1", "OwnerUserId": "469935", "LastEditDate": "2011-07-07T18:27:32.023"}, "6615294": {"Id": "6615294", "PostTypeId": "2", "Body": "<p>No, it won't:</p>\n<pre><code>diamond.cpp:24:7: error: request for member \u2018foo\u2019 is ambiguous\ndiamond.cpp:13:8: error: candidates are: virtual void C::foo()\ndiamond.cpp:8:8: error:                 virtual void B::foo()\n</code></pre>\n<p>This is called the <em>Diamond problem</em>, see <a href=\"http://en.wikipedia.org/wiki/Diamond_problem\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Diamond_problem</a></p>\n", "LastActivityDate": "2011-07-07T18:22:00.747", "CommentCount": "0", "CreationDate": "2011-07-07T18:22:00.747", "ParentId": "6615193", "Score": "3", "OwnerUserId": "810720"}, "bq_ids": {"n4140": {"so_6615193_6615215_0": {"length": 9, "quality": 0.9, "section_id": 7014}}, "n3337": {"so_6615193_6615215_0": {"length": 9, "quality": 0.9, "section_id": 6760}}, "n4659": {"so_6615193_6615215_0": {"length": 9, "quality": 0.9, "section_id": 8511}}}, "6615193": {"ViewCount": "916", "Body": "<p>Something that has been confusing me about virtual base class inheritance... Given the following classes:</p>\n<pre><code>class A\n{\n  virtual void foo() = 0;\n}\nclass B : virtual A\n{\n  void foo() { /* do X */ }\n}\nclass C : virtual A\n{\n  void foo() { /* do Y */ }\n}\nclass D : B, C\n{\n}\n</code></pre>\n<p>Will this compile? If so, what would be the result of the following code:</p>\n<pre><code>D d;\nA* a = &amp;d;\na-&gt;foo();\n</code></pre>\n", "AcceptedAnswerId": "6615298", "Title": "Virtual methods on a virtual base class", "CreationDate": "2011-07-07T18:12:47.423", "Id": "6615193", "CommentCount": "6", "FavoriteCount": "2", "PostTypeId": "1", "LastActivityDate": "2011-07-07T18:27:32.023", "Score": "8", "OwnerUserId": "79595", "Tags": "<c++><methods><virtual><multiple-inheritance>", "AnswerCount": "4"}, "6615298": {"Id": "6615298", "PostTypeId": "2", "Body": "<p>It should not compile, the function foo will be ambiguous. Since A::foo() is pure virtual function, the ambiguity has to be resolved.</p>\n", "LastActivityDate": "2011-07-07T18:22:25.537", "CommentCount": "2", "CreationDate": "2011-07-07T18:22:25.537", "ParentId": "6615193", "Score": "7", "OwnerUserId": "798879"}});