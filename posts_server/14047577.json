post_cb({"14047582": {"ParentId": "14047577", "CommentCount": "0", "CreationDate": "2012-12-26T23:31:47.837", "OwnerUserId": "707111", "PostTypeId": "2", "Id": "14047582", "Score": "1", "Body": "<p>It would be invalid outside the <code>for</code> loop because it\u2019s scoped to the <code>for</code> loop, yes. And yes, that\u2019s also a valid declaration.</p>\n<p><a href=\"http://codepad.org/fcqnQtf8\" rel=\"nofollow\">Working</a> and <a href=\"http://codepad.org/LafVcZg9\" rel=\"nofollow\">not working</a>.</p>\n", "LastActivityDate": "2012-12-26T23:31:47.837"}, "14047599": {"ParentId": "14047577", "CommentCount": "0", "CreationDate": "2012-12-26T23:33:47.407", "OwnerUserId": "946998", "PostTypeId": "2", "Id": "14047599", "Score": "2", "Body": "<p>You can declare then inside of the for loop and is the normal method of doing so.</p>\n<p>Normally its scope is as long as the {} of the for loop.</p>\n<p>Visual Studio (not sure about other compilers) can set flags to extend the scope outside of the for loop.  Don't do that though.</p>\n<p>You can declare multiple variables in the for loop initialization, as long as they are of the same type.</p>\n", "LastActivityDate": "2012-12-26T23:33:47.407"}, "14047675": {"ParentId": "14047577", "CommentCount": "4", "CreationDate": "2012-12-26T23:45:52.437", "OwnerUserId": "1930466", "PostTypeId": "2", "Id": "14047675", "Score": "1", "Body": "<p>both are valid, but in this case:</p>\n<pre><code>for (int a = 0, b = len + 1;a &lt; b;++a);\n</code></pre>\n<p>will be faster that</p>\n<pre><code>for (int a = 0;a &lt; len + 1;++a);\n</code></pre>\n<p>because len+1 is pre-calculated.</p>\n", "LastActivityDate": "2012-12-26T23:45:52.437"}, "14047577": {"CommentCount": "3", "ViewCount": "1397", "CreationDate": "2012-12-26T23:30:14.817", "LastActivityDate": "2012-12-26T23:47:49.877", "Title": "The For Loop Initialization", "AcceptedAnswerId": "14047592", "PostTypeId": "1", "Id": "14047577", "Score": "-1", "Body": "<p>So I was wondering whether I could declare a variable in the declaration of a for loop. Would this code be valid?</p>\n<pre><code>for (int a = 0;a &lt; len + 1;a++);\n</code></pre>\n<p>In what scope would <code>a</code> exist in? Would it be invalid outside the for loop, or would I still be able to access it?</p>\n<p>Also, is it possible for me to declare or initialize 2 variables in a single for loop statement?</p>\n<pre><code>for (int a = 0, b = len + 1;a &lt; b;a++);\n</code></pre>\n<p>Is this a valid statement?</p>\n", "Tags": "<c++><visual-studio-2010><visual-c++><loops><for-loop>", "OwnerUserId": "1120400", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_14047577_14047592_0": {"section_id": 3905, "quality": 0.875, "length": 7}}, "n3337": {"so_14047577_14047592_0": {"section_id": 3765, "quality": 1.0, "length": 8}}, "n4659": {"so_14047577_14047592_0": {"section_id": 4791, "quality": 0.75, "length": 6}}}, "14047592": {"ParentId": "14047577", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2012-12-26T23:32:51.837", "Score": "6", "LastEditorUserId": "150634", "LastEditDate": "2012-12-26T23:47:49.877", "Id": "14047592", "OwnerUserId": "150634", "Body": "<p>Both are perfectly valid because the initialisation part of the <code>for</code> statement (known as the <em>for-init-statement</em>) is either an <em>expression-statement</em> or a <em>simple-declaration</em>. Both of your examples are <em>simple-declarations</em> - the second just has two declarators.</p>\n<p>The scope of variables declared in a <em>for-init-statement</em> is the <code>for</code> loop itself, so it is not available outside the <code>for</code> loop (\u00a76.5.3/3):</p>\n<blockquote>\n<p id=\"so_14047577_14047592_0\">If the <em>for-init-statement</em> is a declaration, the scope of the name(s) declared extends to the end of the <em>for-statement</em>.</p>\n</blockquote>\n", "LastActivityDate": "2012-12-26T23:47:49.877"}});