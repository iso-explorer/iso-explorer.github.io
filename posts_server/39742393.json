post_cb({"39742393": {"ViewCount": "127", "LastEditDate": "2016-09-28T11:22:44.917", "AcceptedAnswerId": "39742714", "Title": "Pointer with no initialization in Visual studio 2015 and in c++ language", "CreationDate": "2016-09-28T08:48:57.820", "LastActivityDate": "2016-09-28T11:22:44.917", "CommentCount": "13", "Body": "<p>Consider this simple code:</p>\n<pre><code>#include \"stdafx.h\"\n#include&lt;iostream&gt;\nusing namespace std;\n\nint main()\n{\n    void* voidptr;\n    cout &lt;&lt; voidptr &lt;&lt; endl;\n\n}\n</code></pre>\n<p>Here is the error:<a href=\"http://i.stack.imgur.com/p9oVp.png\" rel=\"nofollow\">The error</a></p>\n<p>When I run this in visual studio 2015 I get a Debug error but when I do this in code blocks the program works with no error.I read in my textbook that we can use a pointer without initialization but now I can't do it in visual studio.\nDoes anybody know that what the problem is?</p>\n<p>Here is my textbook:<a href=\"http://i.stack.imgur.com/ANUqK.png\" rel=\"nofollow\">Object-oriented programming in c++ by Roabert Lafore </a></p>\n", "PostTypeId": "1", "LastEditorUserId": "6658475", "Id": "39742393", "Score": "0", "OwnerUserId": "6658475", "Tags": "<c++><visual-studio><pointers>", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_39742393_39742701_0": {"length": 42, "quality": 0.8936170212765957, "section_id": 3291}}, "n4659": {"so_39742393_39742701_0": {"length": 42, "quality": 0.8936170212765957, "section_id": 4053}}}, "39742488": {"Id": "39742488", "PostTypeId": "2", "LastEditDate": "2016-09-28T08:59:23.883", "CommentCount": "0", "LastEditorUserId": "2456565", "LastActivityDate": "2016-09-28T08:59:23.883", "CreationDate": "2016-09-28T08:52:52.130", "ParentId": "39742393", "Score": "1", "Body": "<p>You cannot read from an unitialized variable, be it a pointer or other type (note that for classes default initialization is usually equal to zero initialization, which would make the syntax used valid). Doing so yields undefined behavior.</p>\n<p>You could fix the problem of <code>voidptr</code> being unitialized by initializing it</p>\n<pre><code>void* voidptr = nullptr;\n</code></pre>\n<p>but this won't help should you try to dereference it. In this case you would need to point it somewhere, either allocated by <code>new</code>/<code>malloc</code> and the likes, or to some already existing object.</p>\n", "OwnerUserId": "2456565"}, "39742714": {"Id": "39742714", "PostTypeId": "2", "Body": "<p>When you compile this program, the compiler warns you that <code>voidptr</code> is used without having been initiaslized in this line: `cout &lt;&lt; voidptr &lt;&lt; endl;</p>\n<p>When you run this program you get this error:</p>\n<p><a href=\"https://i.stack.imgur.com/ATIm9.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/ATIm9.png\"/></a></p>\n<p>Which again tells you that <code>voidptr</code>is being used without beiing initialized. This can hardly be clearer.</p>\n<p>In C and C++ local variables are not initialized, they contain what ever value has been in memory before, the values are undeterminate. Now when you run the debug version of a program, you get this debug message, because the compiler is kind enough to show you that you are using an uninitialized variable. </p>\n<p>Try to run the release version of the program, you won't get any more error, but some apparently random value will be displayed.</p>\n", "Score": "3", "LastActivityDate": "2016-09-28T09:03:24.203", "CreationDate": "2016-09-28T09:03:24.203", "ParentId": "39742393", "CommentCount": "7", "OwnerUserId": "898348"}, "39742701": {"Id": "39742701", "PostTypeId": "2", "Body": "<p>It's because your behaviour is <em>undefined</em> so anything can happen. </p>\n<p>As <a href=\"http://eel.is/c++draft/dcl.init\" rel=\"nofollow\">[dcl.init]</a> says in paragraph 12:</p>\n<blockquote>\n<p id=\"so_39742393_39742701_0\">If no initializer is specified for an object, the object is\n  default-initialized. When storage for an object with automatic or\n  dynamic storage duration is obtained, the object has an indeterminate\n  value, and if no initialization is performed for the object, that\n  object retains an indeterminate value until that value is replaced\n  ([expr.ass]). [ Note: Objects with static or thread storage duration\n  are zero-initialized, see [basic.start.static].  \u2014 end note ] If an\n  indeterminate value is produced by an evaluation, <strong>the behavior is\n  undefined</strong> except in the following cases:</p>\n<p id=\"so_39742393_39742701_1\">.. insert cases that don't apply to your case here</p>\n</blockquote>\n<p>So your results do not matter. A good compiler should've at least warned you about this.</p>\n", "Score": "0", "LastActivityDate": "2016-09-28T09:02:28.487", "CreationDate": "2016-09-28T09:02:28.487", "ParentId": "39742393", "CommentCount": "0", "OwnerUserId": "1870760"}});