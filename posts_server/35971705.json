post_cb({"35971705": {"CommentCount": "0", "ViewCount": "240", "PostTypeId": "1", "LastEditorUserId": "826983", "CreationDate": "2016-03-13T14:51:40.357", "LastActivityDate": "2016-03-13T15:12:46.293", "Title": "C++ code compiling in minGW-W64 g++ does not compile with Ubuntu g++", "AcceptedAnswerId": "35971860", "LastEditDate": "2016-03-13T14:55:22.047", "Id": "35971705", "Score": "1", "Body": "<p>I am having some problems with the compilation of a program I wrote in my Windows 10 Code::Blocks environment on a work station running Ubuntu.</p>\n<p>Specifically, the compiler having no problem with the code is</p>\n<pre class=\"lang-none prettyprint-override\"><code>g++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 5.3.0*\n</code></pre>\n<p>whereas the compiler complaining about the code is</p>\n<pre class=\"lang-none prettyprint-override\"><code>g++ (Ubuntu 4.8.2-19ubuntu1) 4.8.2\n</code></pre>\n<p>The latter complains about multiple pieces of the code, including various parts of the Alglib library and the overloaded throw() definition of the Numerical Recipes NR3 library.</p>\n<p>I can circumvent using the two libraries above, but do not understand why it is having problems with a has function I wrote for one of my classes. It is giving me a </p>\n<blockquote>\n<p id=\"so_35971705_35971705_0\"><em>error: 'type name' declared as a function returning a function</em></p>\n</blockquote>\n<p>for the line</p>\n<pre><code>for(auto&amp; P : n) res = res ^ ((std::hash&lt;double&gt;()(double(int(P))) ) &lt;&lt; ct++  );\n</code></pre>\n<p>where <em>n</em> is a stl vector of integers and a member of the class.\nSo my questions are:</p>\n<ol>\n<li><p>why does the Ubuntu g++ compiler not follow the same standard as the MinGW g++? (and is it possible to change to some version of g++ on Ubuntu that does follow the same standard)</p></li>\n<li><p>what is ambiguous about the line in my hash function (the efficiency / quality of the hash function is not that important at the moment)</p></li>\n</ol>\n", "Tags": "<c++><c++11><ubuntu><gcc>", "OwnerUserId": "4222828", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_35971705_35971705_0": {"section_id": 47, "quality": 0.7142857142857143, "length": 5}}, "n3337": {"so_35971705_35971705_0": {"section_id": 5775, "quality": 0.7142857142857143, "length": 5}}, "n4659": {"so_35971705_35971705_0": {"section_id": 48, "quality": 0.7142857142857143, "length": 5}}}, "35971860": {"ParentId": "35971705", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>You tagged this question as c++11, so I'll assume you are compiling to that standard. <code>g++-4.8</code> is the first version stated to have complete support for c++11, but it is still described as \"experimental\". <a href=\"https://gcc.gnu.org/gcc-4.8/cxx0x_status.html\" rel=\"nofollow noreferrer\">https://gcc.gnu.org/gcc-4.8/cxx0x_status.html</a>. Also I don't think the standard library support is complete at that time either.</p>\n<p><code>g++-4.9</code> is where support first gets really good, where all the pieces are in place and major defects are fixed.</p>\n<p>If you are running Ubuntu Wily, the default <code>g++</code> version is <code>5.3</code> the same as your mingw.</p>\n<p>If you are on an older Ubuntu, you can add the <code>toolchain/test</code> apt-repository and download <code>g++-4.9</code> specifically or a later version.</p>\n<p>Here are some instructions for how to do that:</p>\n<pre><code>sudo add-apt-repository ppa:ubuntu-toolchain-r/test\nsudo apt-get update\nsudo apt-get install g++-4.9\n</code></pre>\n<p>reference: <a href=\"https://askubuntu.com/questions/428198/getting-installing-gcc-g-4-9-on-ubuntu\">https://askubuntu.com/questions/428198/getting-installing-gcc-g-4-9-on-ubuntu</a></p>\n<hr>\n<p>To give specific info about your error you need to show way more code than that. It sounds like some kind of syntax error but its hard to say if its being caused by a language feature, a standard library element, or a combination, based on what little code you showed.</p>\n<hr>\n<p>Another option is to use <code>clang++</code> on your older Ubuntu. <code>clang-3.6</code> has quite good support for C++11 in my experience and was accepted into Ubuntu much more quickly than the contemporary <code>gcc</code> versions, so you may be able to use that and get your project to compile without adding <code>toolchain-r/test</code>.</p>\n</hr></hr>", "OwnerUserId": "3598119", "LastEditorUserId": "-1", "LastEditDate": "2017-04-13T12:22:41.977", "Id": "35971860", "Score": "3", "CreationDate": "2016-03-13T15:07:19.707", "LastActivityDate": "2016-03-13T15:12:46.293"}});