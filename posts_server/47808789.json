post_cb({"bq_ids": {"n4140": {"so_47808789_47808809_0": {"length": 8, "quality": 0.8, "section_id": 2573}}, "n3337": {"so_47808789_47808809_0": {"length": 8, "quality": 0.8, "section_id": 2538}}, "n4659": {"so_47808789_47808809_0": {"length": 9, "quality": 0.9, "section_id": 3310}}}, "47808789": {"ViewCount": "81", "Body": "<p>My program invokes methods that will set <code>errno</code> when a failure occurs, I throw <code>errno</code> like an exception and catch it:</p>\n<pre><code>try\n{\n    if (-1 == truncate(\"/foo/bar.txt\", 0))\n    {\n        throw errno;\n    }\n}\ncatch (const int errno)\n{\n    //log\n}\n</code></pre>\n<p>Here I don't want to discuss the exception handling best practice topic. The truth is in the code above, <code>catch</code> block will not hit when the variable name in catch bracket is <code>errno</code>. This issue can be simplified to:</p>\n<pre><code>try\n{\n    throw 1999;\n}\ncatch (const int errno)  //renaming \"errno\" to \"e\" works!!!\n{\n    //unreachable code here \n}\n</code></pre>\n<p>I know <code>errno</code> is a \"special\" name, but I thought C++ could handle same variable names defined in different scopes correctly.</p>\n<pre><code>//test.h\nint my_number = 99;\n\n//test.cpp\n#include \"test.h\"\nint main()\n{\n    try\n    {\n        throw 1999;\n    }\n    catch(int my_number)\n    {\n        std::cout &lt;&lt; \"in catch: \" &lt;&lt; my_number &lt;&lt; std::endl;   //prints 1999\n    }\n\n    std::cout &lt;&lt; my_number &lt;&lt; std::endl;  //prints 99\n}\n</code></pre>\n<p>The program is compiled in GNU5.4(happens in both C++11 and C++14). Can anyone explain the strange behavior?</p>\n", "AcceptedAnswerId": "47808809", "Title": "Variable scope strange behavior in C++", "CreationDate": "2017-12-14T08:21:24.743", "LastActivityDate": "2017-12-14T08:30:10.743", "CommentCount": "7", "LastEditDate": "2017-12-14T08:22:07.483", "PostTypeId": "1", "LastEditorUserId": "440558", "Id": "47808789", "Score": "2", "OwnerUserId": "323924", "Tags": "<c++><errno>", "AnswerCount": "1"}, "47808809": {"Id": "47808809", "PostTypeId": "2", "Body": "<p><code>errno</code> is a macro. So your exception handler contains some expanded tokens that most likely make very little sense. From the standard (<a href=\"https://timsong-cpp.github.io/cppwp/n4659/errno#1\" rel=\"noreferrer\">[errno]</a>):</p>\n<blockquote>\n<p id=\"so_47808789_47808809_0\">The contents of the header  are the same as the POSIX header\n  , except that errno shall be defined as a macro.</p>\n</blockquote>\n", "LastEditorUserId": "817643", "LastActivityDate": "2017-12-14T08:30:10.743", "Score": "8", "CreationDate": "2017-12-14T08:23:17.877", "ParentId": "47808789", "CommentCount": "9", "OwnerUserId": "817643", "LastEditDate": "2017-12-14T08:30:10.743"}});