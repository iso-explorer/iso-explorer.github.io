post_cb({"26229035": {"ParentId": "26228985", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Table 124 in C++11 specifies what the individual bits <em>mean:</em></p>\n<blockquote>\n<p id=\"so_26228985_26229035_0\"><strong>badbit</strong> indicates a loss of integrity in an input or output sequence (such as an\n  irrecoverable read error from a file);</p>\n<p id=\"so_26228985_26229035_1\"><strong>eofbit</strong> indicates that an input operation reached the end of an input sequence;</p>\n<p id=\"so_26228985_26229035_2\"><strong>failbit</strong> indicates that an input operation failed to read the expected characters, or\n  that an output operation failed to generate the desired characters.</p>\n</blockquote>\n<p>As to what operations <em>set</em> those bits, that's scattered around the standard in various places, you can just search for occurrences of the mask to find out what sets and clears it.</p>\n<p>For <em>example,</em> one way the <code>badbit</code> can be set is if you use the get an exception during an <code>operator&gt;&gt;</code> call to an <code>istream</code>. This is detailed in <code>27.7.2.2 Formatted input functions</code>. There are many other places throughout the standard which give similar descriptions.</p>\n", "OwnerUserId": "14860", "LastEditorUserId": "14860", "LastEditDate": "2014-10-07T05:30:00.363", "Id": "26229035", "Score": "3", "CreationDate": "2014-10-07T05:21:40.647", "LastActivityDate": "2014-10-07T05:30:00.363"}, "26228985": {"CommentCount": "0", "ViewCount": "243", "PostTypeId": "1", "LastEditorUserId": "28169", "CreationDate": "2014-10-07T05:15:47.000", "LastActivityDate": "2014-10-07T07:59:13.443", "Title": "What are the possible errors in std::stringstream (ways to set failbit and badbit)?", "AcceptedAnswerId": "26229035", "LastEditDate": "2014-10-07T07:59:13.443", "Id": "26228985", "Score": "1", "Body": "<p>What are the possible errors in <code>std::stringstream</code>?</p>\n<p>Specifically, <code>std::stringstream</code> derives off of <code>std::ios</code>, which means that it has an <code>std::ios::rdstate</code>. In <code>std::ios::rdstate</code>, we have a problem when either <code>failbit</code> or <code>badbit</code> are set. As such, what are the possible ways to set the <code>failbit</code> and <code>badbit</code> in <code>std::stringstream</code>?</p>\n<p>Are the ways to set <code>failbit</code> and <code>badbit</code> compiler/implementation dependent or are they specified by the standard?</p>\n", "Tags": "<c++><c++11><language-lawyer>", "OwnerUserId": "1932452", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_26228985_26229035_2": {"section_id": 1946, "quality": 1.0, "length": 14}, "so_26228985_26229035_1": {"section_id": 1946, "quality": 1.0, "length": 8}, "so_26228985_26229035_0": {"section_id": 1946, "quality": 1.0, "length": 12}}, "n3337": {"so_26228985_26229035_2": {"section_id": 1935, "quality": 1.0, "length": 14}, "so_26228985_26229035_1": {"section_id": 1935, "quality": 1.0, "length": 8}, "so_26228985_26229035_0": {"section_id": 1935, "quality": 1.0, "length": 12}}, "n4659": {"so_26228985_26229035_2": {"section_id": 2217, "quality": 1.0, "length": 14}, "so_26228985_26229035_1": {"section_id": 2217, "quality": 1.0, "length": 8}, "so_26228985_26229035_0": {"section_id": 2217, "quality": 1.0, "length": 12}}}});