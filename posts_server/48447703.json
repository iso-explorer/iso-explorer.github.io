post_cb({"48447834": {"Id": "48447834", "PostTypeId": "2", "Body": "<p>According to <a href=\"http://eel.is/c++draft/dcl.enum#2.sentence-4\" rel=\"nofollow noreferrer\">[dcl.enum]p2</a>:</p>\n<blockquote>\n<p id=\"so_48447703_48447834_0\">The <em>type-specifier-seq</em> of an <em>enum-base</em> shall name an integral type; any cv-qualification is ignored.</p>\n</blockquote>\n<p>Here the <em>type-specifier-seq</em> refers to the part after <code>:</code>.</p>\n<p>And what are integral type (<a href=\"http://eel.is/c++draft/basic.types#basic.fundamental-7\" rel=\"nofollow noreferrer\">[basic.types]p7</a>):</p>\n<blockquote>\n<p id=\"so_48447703_48447834_1\">Types bool, char, char16_\u00adt, char32_\u00adt, wchar_\u00adt, and the signed and unsigned integer types are collectively called integral types.<sup>47</sup> A synonym for integral type is integer type.</p>\n</blockquote>\n<p>So a float is not part of the integral types, and so is not valid to use in an enum as base.</p>\n", "LastActivityDate": "2018-01-25T16:36:41.390", "Score": "2", "CreationDate": "2018-01-25T16:36:41.390", "ParentId": "48447703", "CommentCount": "0", "OwnerUserId": "3980929"}, "bq_ids": {"n4140": {"so_48447703_48447834_1": {"length": 18, "quality": 0.9473684210526315, "section_id": 7216}, "so_48447703_48447834_0": {"length": 7, "quality": 0.875, "section_id": 5461}}, "n3337": {"so_48447703_48447834_1": {"length": 18, "quality": 0.9473684210526315, "section_id": 6960}, "so_48447703_48447834_0": {"length": 7, "quality": 0.875, "section_id": 5248}}, "n4659": {"so_48447703_48447834_1": {"length": 18, "quality": 0.9473684210526315, "section_id": 8725}, "so_48447703_48447834_0": {"length": 7, "quality": 0.875, "section_id": 6895}}}, "48447703": {"ViewCount": "39", "Body": "<p>I compile this with GCC 7.2.0:</p>\n<pre><code>typedef float Signal_t;\n\nenum class Signal_level : Signal_t {\n  low = -1.0, neutral = 0.0, high = 1.0\n};\n</code></pre>\n<p>the compiler response is:</p>\n<pre><code>error: underlying type \u2018Signal_t {aka float}\u2019 of \u2018Signal_level\u2019 must be an integral type                                                                                             \n</code></pre>\n<p>Is this behavior dictated by the standard (<code>-std=c++17</code>) or is specific to GCC? \nI'd expect GCC to recognize <code>Signal_t</code> as an integral type.</p>\n", "Title": "Enum class' underlying type aliased to integral type (compile error)", "CreationDate": "2018-01-25T16:30:42.010", "LastActivityDate": "2018-01-25T16:36:41.390", "CommentCount": "3", "PostTypeId": "1", "Id": "48447703", "Score": "0", "OwnerUserId": "1012773", "Tags": "<c++><gcc><types><enums><underlyingtype>", "AnswerCount": "1"}});