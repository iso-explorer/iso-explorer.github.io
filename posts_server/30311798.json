post_cb({"30311859": {"ParentId": "30311798", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_30311798_30311859_0\">Can you overload a binary operator to take only one operand in C++?</p>\n</blockquote>\n<p>No, you cannot do that. Operator overloading doesn't allow you to change the syntax of the language or the operator precedence. It only allows you to change what happens when the operator is used.</p>\n<p>What you have done with</p>\n<pre><code>IntWrap operator+() { ... }\n</code></pre>\n<p>is overload the unary <code>+</code> operator.</p>\n<p>You should be able to use:</p>\n<pre><code>IntWrap test;\ntest = 0;\n+test;\n</code></pre>\n", "OwnerUserId": "434551", "PostTypeId": "2", "Id": "30311859", "Score": "2", "CreationDate": "2015-05-18T20:02:29.627", "LastActivityDate": "2015-05-18T20:02:29.627"}, "30311837": {"ParentId": "30311798", "CommentCount": "0", "Body": "<p>You are not overloading a binary operator, but the <code>unary +</code> operator. The correct usage would be</p>\n<pre><code>IntWrap test;\ntest = 0;\n+test;\n</code></pre>\n", "OwnerUserId": "624664", "PostTypeId": "2", "Id": "30311837", "Score": "2", "CreationDate": "2015-05-18T20:00:54.583", "LastActivityDate": "2015-05-18T20:00:54.583"}, "30311848": {"ParentId": "30311798", "CommentCount": "0", "Body": "<p>N4140 [over.oper]/6:</p>\n<blockquote>\n<p id=\"so_30311798_30311848_0\">It is not possible to change the precedence, grouping, <strong>or number of operands</strong> of operators.</p>\n</blockquote>\n<p>In your code you overloaded unary <code>+</code> operator, not binary one.</p>\n", "OwnerUserId": "3959454", "PostTypeId": "2", "Id": "30311848", "Score": "0", "CreationDate": "2015-05-18T20:01:27.973", "LastActivityDate": "2015-05-18T20:01:27.973"}, "bq_ids": {"n4140": {"so_30311798_30311848_0": {"section_id": 653, "quality": 1.0, "length": 7}}, "n3337": {"so_30311798_30311848_0": {"section_id": 643, "quality": 1.0, "length": 7}}, "n4659": {"so_30311798_30311848_0": {"section_id": 681, "quality": 1.0, "length": 7}}}, "30311798": {"CommentCount": "1", "ViewCount": "222", "CreationDate": "2015-05-18T19:58:36.497", "LastActivityDate": "2015-05-18T20:02:29.627", "Title": "Overloading a binary operator for one operand in c++", "AcceptedAnswerId": "30311859", "PostTypeId": "1", "Id": "30311798", "Score": "1", "Body": "<p>Can you overload a binary operator to take only one operand in C++?</p>\n<p>I tried implementing this with a class similar to this:</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass IntWrap {\npublic:\n    IntWrap operator=(int rhs) {\n        val = rhs;\n        return *this;\n    }\n\n    // No second operand for +\n    IntWrap operator+() {\n        IntWrap result;\n        result = val + 1;\n        return result;\n    }\n\n    int Val() {return val;}\n\nprivate:\n    int val;\n};\n</code></pre>\n<p>This code actually compiled with GCC, which surprised me, and it didn't even give any warnings with <code>-Wall</code></p>\n<p>The problem I ran into was actually using the overloaded operator.</p>\n<p>This will not compile, because GCC expects an operand after <code>+</code>:</p>\n<pre><code>int main() {\n    IntWrap test;\n    test = 0;\n\n    test +; // GCC expects an operand after +\n\n    return 0;\n}\n</code></pre>\n<p>The member function can be used with <code>test.operator+()</code>, but that doesn't really use the operator.</p>\n<p><strong>So to be more specific, is overloading a binary operator with only one operand allowed by the C++ standard? If so, is it possible to call the overloaded function with operator notation, possibly by using some sort of dummy value for the right hand operand?</strong></p>\n<p>Also, don't worry,  I do not plan on using this in any real code, I'm just curious because I couldn't find anything about this.</p>\n", "Tags": "<c++><operator-overloading>", "OwnerUserId": "2640937", "AnswerCount": "3"}});