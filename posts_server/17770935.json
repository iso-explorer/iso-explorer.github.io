post_cb({"bq_ids": {"n4140": {"so_17770935_17773924_3": {"length": 12, "quality": 1.0, "section_id": 3293}, "so_17770935_17773924_0": {"length": 7, "quality": 1.0, "section_id": 6098}, "so_17770935_17773924_2": {"length": 7, "quality": 1.0, "section_id": 6098}, "so_17770935_17773924_1": {"length": 9, "quality": 1.0, "section_id": 6098}}, "n3337": {"so_17770935_17773924_3": {"length": 12, "quality": 1.0, "section_id": 3163}, "so_17770935_17773924_0": {"length": 7, "quality": 1.0, "section_id": 5864}, "so_17770935_17773924_2": {"length": 7, "quality": 1.0, "section_id": 5864}, "so_17770935_17773924_1": {"length": 9, "quality": 1.0, "section_id": 5864}}, "n4659": {"so_17770935_17773924_3": {"length": 12, "quality": 1.0, "section_id": 4055}, "so_17770935_17773924_0": {"length": 7, "quality": 1.0, "section_id": 7595}, "so_17770935_17773924_2": {"length": 7, "quality": 1.0, "section_id": 7595}, "so_17770935_17773924_1": {"length": 9, "quality": 1.0, "section_id": 7595}}}, "17770978": {"Id": "17770978", "PostTypeId": "2", "Body": "<p>VS2010 is invoking commo operator and rightly assigning the last value.</p>\n<p><a href=\"http://en.wikipedia.org/wiki/Comma_operator\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Comma_operator</a></p>\n<p>For gcc try this </p>\n<pre><code>int main()\n{\n int *p = new int((5,6,7));\n return 0;\n}\n</code></pre>\n", "LastEditorUserId": "1807864", "LastActivityDate": "2013-07-21T10:08:21.780", "Score": "1", "CreationDate": "2013-07-21T09:44:43.337", "ParentId": "17770935", "CommentCount": "2", "OwnerUserId": "1807864", "LastEditDate": "2013-07-21T10:08:21.780"}, "17773924": {"Id": "17773924", "PostTypeId": "2", "Body": "<p>VS2010 is non-conforming (surprise). The <code>(5,6,7)</code> in <code>new int(5,6,7)</code> is a <em>new-initializer</em>. According to C++11 \u00a75.3.4/15:</p>\n<blockquote>\n<p id=\"so_17770935_17773924_0\">A <em>new-expression</em> that creates an object of type <code>T</code> initializes that object as follows:</p>\n<ul>\n<li><p id=\"so_17770935_17773924_1\">If the <em>new-initializer</em> is omitted, the object is default-initialized (8.5); if no initialization is performed, the object has indeterminate value.</p></li>\n<li><p id=\"so_17770935_17773924_2\">Otherwise, the <em>new-initializer</em> is interpreted according to the initialization rules of 8.5 for direct-initialization.</p></li>\n</ul>\n</blockquote>\n<p>and \u00a78.5/13 states:</p>\n<blockquote>\n<p id=\"so_17770935_17773924_3\">If the entity being initialized does not have class type, the <em>expression-list</em> in a parenthesized initializer shall be a single expression.</p>\n</blockquote>\n<p>The <em>expression-list</em> in your example <code>5,6,7</code> has multiple expressions, so compilers should diagnose this as an error.</p>\n", "LastActivityDate": "2013-07-21T15:29:19.693", "CommentCount": "2", "CreationDate": "2013-07-21T15:29:19.693", "ParentId": "17770935", "Score": "0", "OwnerUserId": "923854"}, "17770935": {"ViewCount": "282", "Body": "<p>I wrote the following code snippet which resulted in compilation errors when executed on \n<a href=\"http://codepad.org/BnLGt7VM\" rel=\"nofollow\">codepad.org</a></p>\n<pre><code>int main()\n{\nint *p = new int(5,6,7);\nreturn 0;\n}\n</code></pre>\n<p>I was passing 3 number of arguments to constructor of int while dynamically allocating memory for it.(which should not work according to me).</p>\n<p>But when I executed the same code in visual studio 2010 compiler it is compiling and initializing the value with the last argument. Why is this working like this?</p>\n", "Title": "variable number of arguments in constructor of int", "CreationDate": "2013-07-21T09:37:36.057", "LastActivityDate": "2013-07-21T15:29:19.693", "CommentCount": "0", "PostTypeId": "1", "Id": "17770935", "Score": "2", "OwnerUserId": "2588499", "Tags": "<c++><visual-studio-2010><new-operator><codepad>", "AnswerCount": "2"}});