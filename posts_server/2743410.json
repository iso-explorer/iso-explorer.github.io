post_cb({"bq_ids": {"n4140": {"so_2743410_2743497_1": {"length": 30, "quality": 0.8571428571428571, "section_id": 3360}}, "n3337": {"so_2743410_2743497_1": {"length": 30, "quality": 0.8571428571428571, "section_id": 3230}}}, "2743497": {"PostTypeId": "2", "Body": "<p>From: <a href=\"http://gotw.ca/gotw/066.htm\" rel=\"nofollow noreferrer\">http://gotw.ca/gotw/066.htm</a></p>\n<blockquote>\n<p id=\"so_2743410_2743497_0\">What's less obvious, but clearly\n  stated in the standard, is that if the\n  catch block does not throw (either\n  rethrow the original exception, or\n  throw something new), and control\n  reaches the end of the catch block of\n  a constructor or destructor, then the\n  original exception is automatically\n  rethrown.</p>\n</blockquote>\n<p>From standard 15.3/16</p>\n<blockquote>\n<p id=\"so_2743410_2743497_1\">The exception being handled is\n  rethrown if control reaches the end of\n  a handler of the function-try-block of\n  a constructor or destructor.\n  Otherwise, a function returns when\n  control reaches the end of a handler\n  for the function-try-block (6.6.3).\n  Flowing off the end of a\n  function-try-block is equivalent to a\n  return with no value; this results in\n  undefined behavior in a\n  value-returning function (6.6.3).</p>\n</blockquote>\n", "LastActivityDate": "2010-04-30T09:20:03.230", "Id": "2743497", "CommentCount": "0", "CreationDate": "2010-04-30T09:20:03.230", "ParentId": "2743410", "Score": "5", "OwnerUserId": "125672"}, "2743410": {"ViewCount": "63", "Body": "<p>//sample.h</p>\n<pre><code>int calci(int &amp;value)\n{\n   if(value &lt; 20)\n    throw value;\n   else\n     return value;\n}\n\nclass XYZ\n{\n   int m_x;\n   public: XYZ(int &amp;x)try:m_x(x-calci(x))\n          {\n          }catch (int &amp;a)\n          {}\n\n};\nclass ABC\n{\n   int m_a;\n   public: ABC():m_a(0)\n   {\n   }\n    void foo()\n    {\n        XYZ xyz(10);\n\n\n    }\n};\n\n\n\n\nint main()\n{\n   ABC abc;\n   abc.foo();\n}\n</code></pre>\n<p>//if i replace foo() with following code then it works well</p>\n<pre><code>void foo()\n{\n  try{\n    XYZ xyz(10);\n  }catch(...){}\n}\n</code></pre>\n", "Title": "following code comipling perfectly but showing runtime error . why?", "CreationDate": "2010-04-30T09:04:59.720", "LastActivityDate": "2010-04-30T09:20:03.230", "CommentCount": "6", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2010-04-30T09:18:06.880", "LastEditorUserId": "125672", "Id": "2743410", "Score": "0", "OwnerUserId": "323422", "Tags": "<c++><exception-handling>", "AnswerCount": "1"}});