post_cb({"6643035": {"ParentId": "6642679", "CommentCount": "0", "Body": "<p>The container itself is exception safe.<br>\nBut it also depends on the type being placed in the contain and if it has been written correctly.</br></p>\n<p>i.e.: Exceptions should not escape the destructor</p>\n<p>The standard defines the following guarantees on containers and exceptions:</p>\n<h3>23.2.1   General container requirements  [container.requirements.general]</h3>\n<p>Paragraph 10:</p>\n<blockquote>\n<p id=\"so_6642679_6643035_0\">Unless otherwise specified (see 23.2.4.1, 23.2.5.1, 23.3.3.4, and 23.3.6.5) all container types defined in this Clause meet the following additional requirements:<br>\n  \u2014 if an exception is thrown by an insert() function while inserting a single element, that function has no effects.<br>\n  \u2014 if an exception is thrown by a push_back() or push_front() function, that function has no effects.<br>\n  \u2014 no erase(), clear(), pop_back() or pop_front() function throws an exception.<br>\n  \u2014 no copy constructor or assignment operator of a returned iterator throws an exception.<br>\n  \u2014 no swap() function throws an exception.  </br></br></br></br></br></p>\n</blockquote>\n", "OwnerUserId": "14065", "PostTypeId": "2", "Id": "6643035", "Score": "10", "CreationDate": "2011-07-10T18:29:25.080", "LastActivityDate": "2011-07-10T18:29:25.080"}, "6642679": {"CommentCount": "7", "ViewCount": "491", "PostTypeId": "1", "LastEditorUserId": "836523", "CreationDate": "2011-07-10T17:35:37.377", "LastActivityDate": "2011-07-10T20:50:38.060", "Title": "Are C++ Containers exception-safe?", "LastEditDate": "2011-07-10T20:50:38.060", "Id": "6642679", "Score": "1", "Body": "<p>I use the implicit Constructor and a <code>load()</code> Member which inputs the Attributes, but can also throw exceptions.</p>\n<p>My question is: if the Attributes are everyday C++ Containers will I get memory leaks if exceptions happen in <code>load()</code>?</p>\n<p>Thank you for reading.</p>\n<p>Edit: example code to help clarify my question.</p>\n<pre><code>class One\n{\npublic:\n    std::vector&lt;int&gt; stuff;\n\n    void load() {\n        stuff.resize(13);\n        stuff[0] = 43;\n\n        std::bad_alloc ba;\n        throw ba; // will this cause memory leaks? (as far as this class is concerned)\n    }\n}\n</code></pre>\n<p>I know this is a silly question but I had to ask it.</p>\n", "Tags": "<c++><containers>", "OwnerUserId": "836523", "AnswerCount": "3"}, "6642743": {"ParentId": "6642679", "CommentCount": "0", "Body": "<p>Since your question doesn't state much, here is my take.</p>\n<p>If you are allocating memory using <code>new/new[]</code> (inside your <code>load()</code>) then you have to deallocate using <code>delete/delete[]</code>, when exception is thrown.</p>\n<p>If you are allocating as an automatic variable then they are exception safe.</p>\n", "OwnerUserId": "514235", "PostTypeId": "2", "Id": "6642743", "Score": "0", "CreationDate": "2011-07-10T17:45:24.350", "LastActivityDate": "2011-07-10T17:45:24.350"}, "6642742": {"ParentId": "6642679", "CommentCount": "0", "Body": "<p>Yes, containers are exception safe. As long as you aren't doing shenanigans like allocating them on the heap (without exception-safe smart pointers) or such like that, you'll be fine.</p>\n", "OwnerUserId": "734069", "PostTypeId": "2", "Id": "6642742", "Score": "1", "CreationDate": "2011-07-10T17:45:07.900", "LastActivityDate": "2011-07-10T17:45:07.900"}, "bq_ids": {"n4140": {"so_6642679_6643035_0": {"section_id": 712, "quality": 0.9056603773584906, "length": 48}}, "n3337": {"so_6642679_6643035_0": {"section_id": 701, "quality": 0.9056603773584906, "length": 48}}, "n4659": {"so_6642679_6643035_0": {"section_id": 741, "quality": 0.9056603773584906, "length": 48}}}});