post_cb({"23199107": {"CommentCount": "3", "AcceptedAnswerId": "23199195", "PostTypeId": "1", "LastEditorUserId": "47453", "CreationDate": "2014-04-21T14:09:17.137", "LastActivityDate": "2014-04-21T14:21:47.607", "LastEditDate": "2014-04-21T14:18:14.410", "ViewCount": "237", "FavoriteCount": "1", "Title": "std::string comparison, lexicographical or not", "Id": "23199107", "Score": "3", "Body": "<p>The following code, comes from the article <a href=\"https://sigsegv.me/2013/12/02/c-quirks-part-198276/\" rel=\"nofollow\">C++ quirks, part 198276</a></p>\n<pre><code>include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\nint main() \n{\n    std::string a = \"\\x7f\";\n    std::string b = \"\\x80\";\n    cout &lt;&lt; (a &lt; b) &lt;&lt; endl;\n    cout &lt;&lt; (a[0] &lt; b[0]) &lt;&lt; endl;\n\n    return 0;\n}\n</code></pre>\n<p>Surprisingly the <a href=\"http://ideone.com/CSvV0u\" rel=\"nofollow\">output</a> is </p>\n<pre><code>1\n0\n</code></pre>\n<p>Shouldn't string comparison be lexicographical ? If yes how is the output explained?</p>\n", "Tags": "<c++><string>", "OwnerUserId": "2567683", "AnswerCount": "2"}, "23199281": {"ParentId": "23199107", "CommentCount": "0", "Body": "<p>So I'm just going to quote directly from <a href=\"https://sigsegv.me/2013/12/02/c-quirks-part-198276/\" rel=\"nofollow\">your link</a>:</p>\n<blockquote>\n<p id=\"so_23199107_23199281_0\">It turns out that this behavior is required by the standard, in section 21.2.3.1 [char.traits.specializations.char]: \u201cThe two-argument members eq and lt shall be defined identically to the built-in operators == and &lt; for type unsigned char .\u201d</p>\n</blockquote>\n<p>So: </p>\n<ul>\n<li><code>(a &lt; b)</code> is required to use <code>unsigned char</code> comparisons.</li>\n<li><code>(a[0] &lt; b[0])</code> is required to use <code>char</code> comparisons, which may or may not be signed.</li>\n</ul>\n", "OwnerUserId": "47453", "PostTypeId": "2", "Id": "23199281", "Score": "2", "CreationDate": "2014-04-21T14:19:30.413", "LastActivityDate": "2014-04-21T14:19:30.413"}, "23199195": {"ParentId": "23199107", "CommentCount": "1", "Body": "<p>There is nothing in the C++ specification to say if <code>char</code> is <code>signed</code> or <code>unsigned</code>, it's up to the compiler. For your compiler it seems that <code>char</code> defaults to <code>signed char</code> which is why the second comparison returns <code>false</code>.</p>\n", "OwnerUserId": "440558", "PostTypeId": "2", "Id": "23199195", "Score": "2", "CreationDate": "2014-04-21T14:13:41.850", "LastActivityDate": "2014-04-21T14:13:41.850"}, "bq_ids": {"n4140": {"so_23199107_23199281_0": {"section_id": 1544, "quality": 0.5294117647058824, "length": 9}}, "n3337": {"so_23199107_23199281_0": {"section_id": 1538, "quality": 0.5294117647058824, "length": 9}}, "n4659": {"so_23199107_23199281_0": {"section_id": 1694, "quality": 0.5294117647058824, "length": 9}}}});