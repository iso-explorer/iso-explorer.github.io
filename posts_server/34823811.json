post_cb({"bq_ids": {"n4140": {"so_34823811_34824190_1": {"length": 13, "quality": 1.0, "section_id": 4853}}, "n3337": {"so_34823811_34824190_1": {"length": 13, "quality": 1.0, "section_id": 4648}}, "n4659": {"so_34823811_34824190_1": {"length": 13, "quality": 1.0, "section_id": 6278}}}, "34824190": {"Id": "34824190", "PostTypeId": "2", "Body": "<p>Yes, it is, for the <code>high_resolution_clock</code>. As the C++ standard says:</p>\n<blockquote>\n<p id=\"so_34823811_34824190_0\"><strong>20.12.7.3 Class <code>high_resolution_clock</code></strong></p>\n<p id=\"so_34823811_34824190_1\">Objects of class <code>high_resolution_clock</code> represent clocks with the shortest tick period. <code>high_resolution_clock</code> may be a synonym for <code>system_clock</code> or <code>steady_clock</code>.</p>\n</blockquote>\n<p>For example <a href=\"https://msdn.microsoft.com/en-us/library/hh874757.aspx\" rel=\"nofollow\">Visual C++ 2015</a> has it typedef'ed to <code>steady_clock</code>, Intel probably also.</p>\n<p>For <code>steady_clock</code> the standard explicitly sets <code>is_steady</code> to true.</p>\n", "LastEditorUserId": "1806780", "LastActivityDate": "2016-01-16T06:26:19.537", "Score": "2", "CreationDate": "2016-01-16T06:22:36.160", "ParentId": "34823811", "CommentCount": "2", "LastEditDate": "2016-01-16T06:26:19.537", "OwnerUserId": "1806780"}, "34823811": {"ViewCount": "79", "Body": "<p>I use the following code, to output the steady status of 3 clocks</p>\n<pre><code>#include &lt;chrono&gt;\n#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\n\ntemplate &lt;typename C&gt;\nvoid printClockData ()\n{\n    using namespace std;\n\n    cout &lt;&lt; \"- precision: \";\n    // if time unit is less or equal one millisecond\n    typedef typename C::period P;// type of time unit\n    if (ratio_less_equal&lt;P,milli&gt;::value) {\n        // convert to and print as milliseconds\n        typedef typename ratio_multiply&lt;P,kilo&gt;::type TT;\n        cout &lt;&lt; fixed &lt;&lt; double(TT::num)/TT::den\n             &lt;&lt; \" milliseconds\" &lt;&lt; endl;\n    }\n    else {\n        // print as seconds\n        cout &lt;&lt; fixed &lt;&lt; double(P::num)/P::den &lt;&lt; \" seconds\" &lt;&lt; endl;\n    }\n    cout &lt;&lt; \"- is_steady: \" &lt;&lt; boolalpha &lt;&lt; C::is_steady &lt;&lt; endl;\n}\n\nint main()\n{\n    std::cout &lt;&lt; \"system_clock: \" &lt;&lt; std::endl;\n    printClockData&lt;std::chrono::system_clock&gt;();\n    std::cout &lt;&lt; \"\\nhigh_resolution_clock: \" &lt;&lt; std::endl;\n    printClockData&lt;std::chrono::high_resolution_clock&gt;();\n    std::cout &lt;&lt; \"\\nsteady_clock: \" &lt;&lt; std::endl;\n    printClockData&lt;std::chrono::steady_clock&gt;();\n}\n</code></pre>\n<p>compile with g++, outputs</p>\n<p><a href=\"https://i.stack.imgur.com/0o56S.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/0o56S.png\"/></a></p>\n<p>compile with intel icl outputs</p>\n<p><a href=\"https://i.stack.imgur.com/oNwVI.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/oNwVI.png\"/></a></p>\n<p>Why the difference?</p>\n", "AcceptedAnswerId": "34824190", "Title": "in C++, is the clock steady status compiler dependent?", "CreationDate": "2016-01-16T05:21:47.620", "Id": "34823811", "CommentCount": "5", "PostTypeId": "1", "LastActivityDate": "2016-01-16T06:26:19.537", "Score": "1", "OwnerUserId": "1911722", "Tags": "<c++>", "AnswerCount": "1"}});