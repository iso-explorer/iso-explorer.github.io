post_cb({"30456177": {"ParentId": "30455820", "PostTypeId": "2", "CommentCount": "5", "Body": "<blockquote>\n<p id=\"so_30455820_30456177_0\">What am I doing wrong?</p>\n</blockquote>\n<p>Your mistake is omitting the definition of the <code>inline</code> function from the header which declares it. If you use that function in a cpp file which doesn't contain the definition, you'll be breaking the rules of the language.</p>\n<p>\u00a77.1.2 / 4 (n3242 draft)</p>\n<blockquote>\n<p id=\"so_30455820_30456177_1\">An inline function shall be defined in every translation unit in which it is odr-used...</p>\n</blockquote>\n<p>If you declare the function non-inline, the above rule does not apply. If you include the definition in the header, you are following the rule.</p>\n<blockquote>\n<p id=\"so_30455820_30456177_2\">Proper way to split declaration and definition</p>\n</blockquote>\n<p>You can split them, but not into separate files.</p>\n<pre><code>// in header\n\n// declarations...\nclass Vec2\n{\n    Vec2&amp; operator +=(const Vec2&amp; b);\n};\nVec2 operator+(const Vec2&amp;a, const Vec2&amp;b);\n\n// definitions...\ninline Vec2&amp; Vec2::operator +=(const Vec2&amp; b)\n{\n    ...\n}\ninline Vec2 operator+(const Vec2&amp; a, const Vec2&amp; b)\n{\n    ...\n}\n</code></pre>\n", "OwnerUserId": "2079303", "LastEditorUserId": "2079303", "LastEditDate": "2015-05-26T11:04:58.747", "Id": "30456177", "Score": "3", "CreationDate": "2015-05-26T10:39:15.063", "LastActivityDate": "2015-05-26T11:04:58.747"}, "bq_ids": {"n4140": {"so_30455820_30456177_1": {"section_id": 5404, "quality": 1.0, "length": 7}}, "n3337": {"so_30455820_30456177_1": {"section_id": 5199, "quality": 1.0, "length": 7}}, "n4659": {"so_30455820_30456177_1": {"section_id": 6853, "quality": 1.0, "length": 7}}}, "30455820": {"CommentCount": "0", "ViewCount": "257", "CreationDate": "2015-05-26T10:23:42.197", "LastActivityDate": "2015-05-26T11:04:58.747", "Title": "Proper way to split declaration and definition of inlined non member operator (linker issue)", "AcceptedAnswerId": "30456177", "PostTypeId": "1", "Id": "30455820", "Score": "1", "Body": "<p>I have a visual studio solution with 2 projects, one of which is a <strong>static library</strong>. \nIn this library I have the following class with some overloaded operators (both members and not):</p>\n<pre><code>namespace Vec\n{\n    class Vec2\n    {\n     ...\n      inline Vec2&amp; operator +=(const Vec2&amp; b);\n\n    };\n    inline Vec2 operator+(const Vec2&amp;a, const Vec2&amp;b);\n}\n</code></pre>\n<p>The definitions in the .cpp file are the following:</p>\n<pre><code>inline Vec2&amp; Vec2::operator +=(const Vec2&amp; b)\n    {\n        this-&gt;x += b.x;\n        this-&gt;y += b.y;\n\n        return *this;\n    }\ninline Vec2 Vec::operator+(const Vec2&amp; a, const Vec2&amp; b)\n    {\n        return Vec2(a.x + b.x, a.y + b.y);\n    }\n</code></pre>\n<p>Everything compile and link correctly for the member operator. The non-member function doesn't link, the error is the following:</p>\n<blockquote>\n<p id=\"so_30455820_30455820_0\">Error 4   error LNK2019: unresolved external symbol \"class Vec::Vec2\n  __cdecl Vec::operator+(class Vec::Vec2 const &amp;,class Vec::Vec2 const &amp;)\" (??HVec@@YA?AVVec2@0@ABV10@0@Z) referenced in function _main</p>\n</blockquote>\n<p>If I put the definition in the header file, or keep the definition separate from the declaration but removing <strong>inline</strong> keywords, it links successfully.</p>\n<p>What am I doing wrong?</p>\n", "Tags": "<c++><visual-studio-2013><linker><inline><operator-keyword>", "OwnerUserId": "587884", "AnswerCount": "1"}});