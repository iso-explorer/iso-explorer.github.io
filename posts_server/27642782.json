post_cb({"bq_ids": {"n4140": {"so_27642782_27642782_0": {"length": 83, "quality": 0.9651162790697675, "section_id": 5404}}, "n3337": {"so_27642782_27642782_0": {"length": 83, "quality": 0.9651162790697675, "section_id": 5199}}, "n4659": {"so_27642782_27642782_0": {"length": 81, "quality": 0.9418604651162791, "section_id": 6853}}}, "27642782": {"ViewCount": "500", "Body": "<p>There is such thing and it's in the latest C++ draft:</p>\n<p>At \u00a7 7.1.2 .4:</p>\n<blockquote>\n<p id=\"so_27642782_27642782_0\">An inline function shall be defined in every translation unit in which\n  it is odr-used and shall have exactly the same definition in every\n  case (3.2). [ Note: A call to the inline function may be encountered\n  before its definition appears in the translation unit. \u2014 end note ] If\n  the definition of a function appears in a translation unit before its\n  first declaration as inline, the program is ill-formed. <strong>If a function\n  with external linkage is declared inline in one translation unit, it\n  shall be declared inline in all translation units in which it appears;\n  no diagnostic is required. An inline function with external linkage\n  shall have the same address in all translation units. A static local\n  variable in an extern inline function always refers to the same\n  object. A type defined within the body of an extern inline function is\n  the same type in every translation unit.</strong></p>\n</blockquote>\n<p>Some insights on what is this and when to use it?</p>\n", "Title": "What is an 'extern inline' function and when to use?", "CreationDate": "2014-12-24T22:43:47.807", "LastActivityDate": "2014-12-24T23:15:02.900", "CommentCount": "1", "PostTypeId": "1", "Id": "27642782", "Score": "10", "OwnerUserId": "4031604", "Tags": "<c++><c++14>", "AnswerCount": "1"}, "27642974": {"Id": "27642974", "PostTypeId": "2", "Body": "<p><code>extern</code> is redundant for functions, so it is pointless to declare a function <code>extern inline</code>. If, for example you declared a function <code>inline</code> at global scope, the rules of this section would apply. Likewise if you declared a class at global scope and defined a member function within the class definition, as such a function would be <em>implicitly</em> <code>inline</code>.</p>\n<p>The question of when you should declare a function <code>inline</code> is a can of worms I'm not inclined to open here. See: <a href=\"https://stackoverflow.com/questions/1759300/when-should-i-write-the-keyword-inline-for-a-function-method\">When should I write the keyword 'inline' for a function/method?</a></p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2014-12-24T23:15:02.900", "Score": "3", "CreationDate": "2014-12-24T23:15:02.900", "ParentId": "27642782", "CommentCount": "1", "OwnerUserId": "481267", "LastEditDate": "2017-05-23T11:53:06.560"}});