post_cb({"bq_ids": {"n4140": {"so_4573952_4573978_0": {"length": 14, "quality": 1.0, "section_id": 184}}, "n3337": {"so_4573952_4573978_0": {"length": 14, "quality": 1.0, "section_id": 178}}, "n4659": {"so_4573952_4573978_0": {"length": 14, "quality": 1.0, "section_id": 189}}}, "4573993": {"Id": "4573993", "PostTypeId": "2", "Body": "<p>Just remove the </p>\n<pre><code> template &lt;class L&gt;\n</code></pre>\n<p>from the <code>friend</code> member function declaration.</p>\n<p>You also need to replace uses of <code>ostream</code> with <code>std::ostream</code> unless you have a <code>using namespace std</code> somewhere in your code.</p>\n<p>Otherwise, the code looks fine.</p>\n", "LastActivityDate": "2011-01-01T12:07:40.380", "CommentCount": "2", "CreationDate": "2011-01-01T12:07:40.380", "ParentId": "4573952", "Score": "3", "OwnerUserId": "23388"}, "4573978": {"Id": "4573978", "PostTypeId": "2", "Body": "<p>These error messages really belong together:</p>\n<pre><code>a.cc:41: error: declaration of \u2018class L\u2019\na.cc:26: error:  shadows template parm \u2018class L\u2019\n</code></pre>\n<p>This means that in line 41, you introduce a template parameter L; in my copy, this refers to </p>\n<pre><code>template &lt;class L&gt; friend ostream &amp; operator&lt;&lt;(ostream&amp; os,\n               const LinkedList&lt;L&gt; listToprint);//error two\n</code></pre>\n<p>And that declaration shadows the template parameter in line 26:</p>\n<pre><code>template &lt;class L&gt;//error one\nclass LinkedList\n</code></pre>\n<p>You need to rename the template parameter in the friend declaration.</p>\n<p><strong>Edit</strong>: The relevant language specification is 14.6.1/7</p>\n<blockquote>\n<p id=\"so_4573952_4573978_0\">A template-parameter shall not be\n  redeclared within its scope (including\n  nested scopes). A template-parameter\n  shall not have the same name as the\n  template name.</p>\n</blockquote>\n<p>When you refer to <code>L</code> in <code>const LinkedList&lt;L&gt; listToprint</code>, it's not clear whether you mean the L of the friend or the L of the class. So write</p>\n<pre><code>template &lt;class L1&gt; friend ostream &amp; operator&lt;&lt;(ostream&amp; os,\n    const LinkedList&lt;L1&gt; listToprint);\n</code></pre>\n", "LastEditorUserId": "33006", "LastActivityDate": "2011-01-01T12:31:23.350", "Score": "13", "CreationDate": "2011-01-01T11:59:15.783", "ParentId": "4573952", "CommentCount": "3", "OwnerUserId": "33006", "LastEditDate": "2011-01-01T12:31:23.350"}, "4573952": {"ViewCount": "18413", "Body": "<p>i try to design a template for my university project. i wrote the follwing code:</p>\n<pre><code>#ifndef _LinkedList_H_\n#define _LinkedList_H_\n#include \"Link.h\"\n#include &lt;ostream&gt;\ntemplate &lt;class L&gt;//error one\nclass LinkedList\n{\nprivate:\n Link&lt;L&gt; *pm_head;\n Link&lt;L&gt; * pm_tail;\n int m_numOfElements;\n Link&lt;L&gt;* FindLink(L * dataToFind);\npublic:\n LinkedList();\n ~LinkedList();\n int GetNumOfElements(){return m_numOfElements;}\n bool Add( L * data);\n L *FindData(L * data);\n\ntemplate &lt;class L&gt; friend ostream &amp; operator&lt;&lt;(ostream&amp; os,const LinkedList&lt;L&gt; listToprint);//error two\n   L* GetDataOnTop();\n   bool RemoveFromHead();\n   L* Remove(L * toRemove);\n</code></pre>\n<p>this templete uses the link class templete</p>\n<pre><code>#ifndef _Link_H_\n#define _Link_H_\ntemplate &lt;class T&gt;//error 3\nclass Link\n{\nprivate:\n T* m_data;\n Link* m_next;\n Link* m_prev;\npublic:\n Link(T* data);\n ~Link(void);\n bool Link::operator ==(const Link&amp; other)const;\n\n /*getters*/\n Link* GetNext()const {return m_next;}\n Link* GetPrev()const {return m_prev;}\n T* GetData()const {return m_data;}\n //setters\n void SetNext(Link* next) {m_next = next;}\n void SetPrev(Link* prev) {m_prev = prev;}\n void SetData(T* data) {m_data = data;}\n\n};\n\nerror one: shadows template parm `class L'\nerror two:declaration of `class L'\nerror three: shadows template parm `class T'\n</code></pre>\n<p>i dont understand what is the problem. i can really use your help\nthank you :)</p>\n", "Title": "template class c++", "CreationDate": "2011-01-01T11:50:22.010", "LastActivityDate": "2011-01-01T12:38:20.543", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2011-01-01T11:59:06.693", "LastEditorUserId": "559408", "Id": "4573952", "Score": "6", "OwnerUserId": "559408", "Tags": "<c++><templates>", "AnswerCount": "2"}});