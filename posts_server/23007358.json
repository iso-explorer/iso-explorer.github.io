post_cb({"bq_ids": {"n4140": {"so_23007358_23007559_1": {"length": 4, "quality": 1.0, "section_id": 369}, "so_23007358_23007559_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 369}, "so_23007358_23007559_3": {"length": 6, "quality": 1.0, "section_id": 369}, "so_23007358_23007559_4": {"length": 10, "quality": 1.0, "section_id": 369}, "so_23007358_23007559_5": {"length": 16, "quality": 1.0, "section_id": 369}, "so_23007358_23007559_0": {"length": 8, "quality": 0.8888888888888888, "section_id": 3274}}, "n3337": {"so_23007358_23007559_1": {"length": 4, "quality": 1.0, "section_id": 359}, "so_23007358_23007559_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 359}, "so_23007358_23007559_3": {"length": 6, "quality": 1.0, "section_id": 359}, "so_23007358_23007559_4": {"length": 10, "quality": 1.0, "section_id": 359}, "so_23007358_23007559_5": {"length": 16, "quality": 1.0, "section_id": 359}, "so_23007358_23007559_0": {"length": 8, "quality": 0.8888888888888888, "section_id": 3145}}, "n4659": {"so_23007358_23007559_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 383}, "so_23007358_23007559_3": {"length": 6, "quality": 1.0, "section_id": 382}, "so_23007358_23007559_5": {"length": 16, "quality": 1.0, "section_id": 383}, "so_23007358_23007559_4": {"length": 10, "quality": 1.0, "section_id": 383}, "so_23007358_23007559_0": {"length": 8, "quality": 0.8888888888888888, "section_id": 4032}}}, "23007559": {"Id": "23007559", "PostTypeId": "2", "Body": "<p>Yes, a user-declared constructor that is defaulted on its first declaration may be trivial:</p>\n<pre><code>struct Foo\n{ \n    Foo() = default;\n    Foo(int, int);\n\n    char x;\n};\n\n#include &lt;type_traits&gt;\nstatic_assert(std::is_trivially_constructible&lt;Foo&gt;::value, \"Works\");\n</code></pre>\n<p>The example demonstrates how to define a POD class even in the presence of user-defined (non-default) constructors.</p>\n<p>From the standard (12.1), \"a default constructor is trivial if it is not user-provided\" (plus conditions), and (8.4.2):</p>\n<blockquote>\n<p id=\"so_23007358_23007559_0\">A function is <em>user-provided</em> if it is user-declared and not explicitly defaulted or\n  deleted on its first declaration.</p>\n</blockquote>\n<p>However, note that triviality of a default constructor depends on more than just its declaration and definition. To expand the quote from 12.1:</p>\n<blockquote>\n<p id=\"so_23007358_23007559_1\">A default constructor is trivial if it is not user-provided and if:</p>\n<p id=\"so_23007358_23007559_2\">\u2014 its class has no virtual functions (10.3) and no virtual base classes (10.1), and</p>\n<p id=\"so_23007358_23007559_3\">\u2014 no non-static data member of its class has a brace-or-equal-initializer, and</p>\n<p id=\"so_23007358_23007559_4\">\u2014 all the direct base classes of its class have trivial default constructors, and</p>\n<p id=\"so_23007358_23007559_5\">\u2014 for all the non-static data members of its class that are of class type (or array thereof), each such class has a trivial default constructor.</p>\n</blockquote>\n", "LastEditorUserId": "596781", "LastActivityDate": "2014-04-11T08:45:17.870", "Score": "4", "CreationDate": "2014-04-11T08:39:20.040", "ParentId": "23007358", "CommentCount": "1", "OwnerUserId": "596781", "LastEditDate": "2014-04-11T08:45:17.870"}, "23007402": {"Id": "23007402", "PostTypeId": "2", "Body": "<p>Implicit constructor is one provided by the compiler if you don't define one. That's a default constructor having no argument, unless you would like to have your own constructor with or without arguments to precisely control initialization of your object instance data members.</p>\n", "LastActivityDate": "2014-04-11T08:30:17.540", "CommentCount": "0", "CreationDate": "2014-04-11T08:30:17.540", "ParentId": "23007358", "Score": "0", "OwnerUserId": "2032021"}, "23007358": {"ViewCount": "185", "Body": "<p>I know that among other things, a trivial constructor has to be implicitly defined. </p>\n<p>Does this also apply when we use the default keyword?</p>\n<p>Say we specify a T()=default constructor , is it considered user-provided or is it treated like an implicit constructor?</p>\n", "AcceptedAnswerId": "23007559", "Title": "Are constructors specified with the default keyword trivial?", "CreationDate": "2014-04-11T08:27:46.470", "Id": "23007358", "CommentCount": "7", "LastEditDate": "2014-04-11T09:14:33.237", "PostTypeId": "1", "LastEditorUserId": "3024983", "LastActivityDate": "2014-04-11T09:14:33.237", "Score": "0", "OwnerUserId": "3024983", "Tags": "<c++><constructor><default><trivial>", "AnswerCount": "2"}});