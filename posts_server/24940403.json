post_cb({"bq_ids": {"n4140": {"so_24940403_24941118_0": {"length": 42, "quality": 1.0, "section_id": 7181}, "so_24940403_24940403_0": {"length": 27, "quality": 1.0, "section_id": 6114}}, "n3337": {"so_24940403_24941118_0": {"length": 42, "quality": 1.0, "section_id": 6925}, "so_24940403_24940403_0": {"length": 14, "quality": 0.5185185185185185, "section_id": 6925}}, "n4659": {"so_24940403_24940403_0": {"length": 14, "quality": 0.5185185185185185, "section_id": 7611}, "so_24940403_24941002_0": {"length": 4, "quality": 1.0, "section_id": 7611}}}, "24940403": {"ViewCount": "102", "Body": "<p>I've been trying to understand the following behavior:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n\nusing namespace std;\n\nstruct A\n{ \n    void operator delete[](void *p)\n    {\n        cout &lt;&lt; \"delete\\n\";\n        ::operator delete[](p);\n    }\n\n    void operator delete[](void *p, size_t t)\n    {\n        cout &lt;&lt; \"delete with two arguments\\n\";\n        ::operator delete[](p);\n    }\n};\n\nint main()\n{\n    A *a = new A[5];\n    delete [] a;\n}\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/77686324d41d8783\" rel=\"nofollow\">demo</a></p>\n<p>In the example non-placement deallocation function with <strong>one</strong> parameter is called. But 5.3.6/10 N3797 C++14 working draft said that:</p>\n<blockquote>\n<p id=\"so_24940403_24940403_0\">If the type is complete and if deallocation function lookup finds both\n  a usual deallocation function with only a pointer parameter and a\n  usual deallocation function with both a pointer parameter and a size\n  parameter, then the selected deallocation function shall be the one\n  <strong>with two parameters</strong>.</p>\n</blockquote>\n<p>Is it a bug?</p>\n", "AcceptedAnswerId": "24940611", "Title": "Why does deallocation function called with one argument instead of two?", "CreationDate": "2014-07-24T17:37:43.573", "LastActivityDate": "2014-07-24T18:15:12.290", "CommentCount": "7", "FavoriteCount": "0", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "Id": "24940403", "Score": "4", "Tags": "<c++><memory-management>", "AnswerCount": "3"}, "24941118": {"Id": "24941118", "PostTypeId": "2", "Body": "<p>In 3.7.4.2/2 of N3797, it says:</p>\n<blockquote>\n<p id=\"so_24940403_24941118_0\">if a class T has a member deallocation function named operator\n  delete[] with exactly one parameter, then that function is a usual\n  (non-placement) deallocation function. If class T does not declare\n  such an operator delete[] but does declare a member deallocation\n  function named operator delete[] with exactly two parameters, the\n  second of which has type std::size_t, then this function is a usual\n  deallocation function.</p>\n</blockquote>\n<p>Since you have the single parameter delete[] function, that is the one that gets called.</p>\n", "LastActivityDate": "2014-07-24T18:15:12.290", "CommentCount": "0", "CreationDate": "2014-07-24T18:15:12.290", "ParentId": "24940403", "Score": "0", "OwnerUserId": "3849688"}, "24940611": {"Id": "24940611", "PostTypeId": "2", "Body": "<p>That rule is new in C++14, and you're compiling under the C++11 standard. Specifying <code>-std=c++14</code> makes no difference, so presumably that compiler hasn't implemented that particular rule yet. Which isn't particularly surprising, since C++14 hasn't been officially published yet.</p>\n", "LastActivityDate": "2014-07-24T17:48:32.473", "CommentCount": "0", "CreationDate": "2014-07-24T17:48:32.473", "ParentId": "24940403", "Score": "5", "OwnerUserId": "204847"}, "24941002": {"Id": "24941002", "PostTypeId": "2", "Body": "<p>So this is a new C++1y rule but we can see from <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#1788\" rel=\"nofollow\">defect report 1788</a> the language may be changed to the following:</p>\n<blockquote>\n<p id=\"so_24940403_24941002_0\">the function to be called is selected as follows:</p>\n</blockquote>\n<ul>\n<li><p>If the type is complete and if, for the second alternative (delete array) only, the operand is a pointer to a class type with a non-trivial destructor or a (possibly multi-dimensional) array thereof, the function with two parameters is selected.</p></li>\n<li><p>Otherwise, it is unspecified which of the two deallocation functions is selected.</p></li>\n</ul>\n", "LastActivityDate": "2014-07-24T18:08:46.610", "CommentCount": "0", "CreationDate": "2014-07-24T18:08:46.610", "ParentId": "24940403", "Score": "1", "OwnerUserId": "1708801"}});