post_cb({"4343601": {"ParentId": "4343571", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>It's controlled by when the inner <code>x</code> comes into existence (the start of its scope). The standard states (3.3.1 in the current standard, 3.3.2 in the upcoming one) in part (my italics):</p>\n<blockquote>\n<p id=\"so_4343571_4343601_0\">The point of declaration for a name is immediately <em>after</em> its complete declarator and <em>before</em> its initializer.</p>\n</blockquote>\n<p>With <code>int x = x;</code>, it's created at the point of the <code>=</code> so that when you assign <code>x</code> to it, that's the <em>inner</em> x which is being used. Since that hasn't been set to anything before, it's undefined.</p>\n<p>With <code>int x[x];</code>, the inner <code>x</code> comes into existence at the <code>;</code> so it's using the outer <code>x</code> as the array size.</p>\n", "OwnerUserId": "14860", "LastEditorUserId": "14860", "LastEditDate": "2010-12-03T08:22:32.590", "Id": "4343601", "Score": "8", "CreationDate": "2010-12-03T08:12:18.707", "LastActivityDate": "2010-12-03T08:22:32.590"}, "4343626": {"ParentId": "4343571", "CommentCount": "0", "Body": "<p>From the standard: 3.3.1 [basic.scope.pdecl]</p>\n<blockquote>\n<p id=\"so_4343571_4343626_0\">The <em>point of declaration</em> for a name is immediately after its complete declarator (clause 8) and before its <em>initializer</em> (if any), except as noted below.</p>\n</blockquote>\n<p>The standard even has two examples to clarify this:</p>\n<pre><code>int x = 12;\n{ int x = x; }\n</code></pre>\n<blockquote>\n<p id=\"so_4343571_4343626_1\">Here the second <code>x</code> is initialized with its own (indeterminate) value.</p>\n<p id=\"so_4343571_4343626_2\">[Note: a nonlocal name remains visible up to the point of declaration of the local name that hides it. [Example:</p>\n</blockquote>\n<pre><code>const int i = 2;\n{ int i[i]; }\n</code></pre>\n<blockquote>\n<p id=\"so_4343571_4343626_3\">declares a local array of two integers. ]]</p>\n</blockquote>\n<p>These two examples cover the two cases in your question.</p>\n", "OwnerUserId": "19563", "PostTypeId": "2", "Id": "4343626", "Score": "8", "CreationDate": "2010-12-03T08:16:43.530", "LastActivityDate": "2010-12-03T08:16:43.530"}, "bq_ids": {"n4140": {"so_4343571_4343626_0": {"section_id": 7049, "quality": 0.8125, "length": 13}, "so_4343571_4343626_1": {"section_id": 7049, "quality": 1.0, "length": 7}, "so_4343571_4343626_3": {"section_id": 7050, "quality": 0.8, "length": 4}, "so_4343571_4343626_2": {"section_id": 7050, "quality": 0.6363636363636364, "length": 7}, "so_4343571_4343601_0": {"section_id": 7049, "quality": 0.8333333333333334, "length": 10}}, "n3337": {"so_4343571_4343626_0": {"section_id": 6794, "quality": 0.8125, "length": 13}, "so_4343571_4343626_1": {"section_id": 6794, "quality": 1.0, "length": 7}, "so_4343571_4343626_3": {"section_id": 6795, "quality": 0.8, "length": 4}, "so_4343571_4343626_2": {"section_id": 6795, "quality": 0.6363636363636364, "length": 7}, "so_4343571_4343601_0": {"section_id": 6794, "quality": 0.8333333333333334, "length": 10}}, "n4659": {"so_4343571_4343626_0": {"section_id": 8546, "quality": 0.8125, "length": 13}, "so_4343571_4343626_1": {"section_id": 8546, "quality": 1.0, "length": 7}, "so_4343571_4343626_3": {"section_id": 8547, "quality": 0.8, "length": 4}, "so_4343571_4343626_2": {"section_id": 8547, "quality": 0.6363636363636364, "length": 7}, "so_4343571_4343601_0": {"section_id": 8546, "quality": 0.8333333333333334, "length": 10}}}, "4343571": {"CommentCount": "0", "ViewCount": "454", "PostTypeId": "1", "LastEditorUserId": "529090", "CreationDate": "2010-12-03T08:07:18.743", "LastActivityDate": "2010-12-03T08:25:25.490", "Title": "Confusing C++ global scope issues", "FavoriteCount": "1", "LastEditDate": "2010-12-03T08:15:06.990", "Id": "4343571", "Score": "5", "Body": "<p>I am taking a C++ practice test and I'm confused with a set of access scope and point of declaration related questions. Both the  questions are related to each other..I know the answers..what i need is proper explanation :</p>\n<p>What is the value of the local variable x at the end of main</p>\n<pre><code> int x = 5;\n int main(int argc, char** argv)\n {\n    int x = x;\n    return 0;\n }\n</code></pre>\n<p>ans: Undefined</p>\n<p>What is the value of y at the end of main?</p>\n<pre><code>    const int x = 5;\n    int main(int argc, char** argv)\n    {\n       int x[x];\n       int y = sizeof(x) / sizeof(int);\n       return 0;\n    }\n</code></pre>\n<p>answer: 5</p>\n", "Tags": "<c++><scope><declaration><global>", "OwnerUserId": "529090", "AnswerCount": "2"}});