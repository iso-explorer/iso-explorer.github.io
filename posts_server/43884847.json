post_cb({"43884847": {"ViewCount": "52", "Body": "<p>This is my code</p>\n<pre><code>#include&lt;iostream&gt;\n//#include&lt;cmath&gt;\ndouble sqrt(double);\n\nint main()\n{\n    using namespace std;\n\n    cout &lt;&lt; sqrt(16) &lt;&lt; endl;\n    cin.get();\n\n    return 0;\n}\n</code></pre>\n<p>I am only exploring into c++ and supposedly[C++ Primer, Lippman] this form of function prototyping should be working.\nMy code works if I replace <code>double sqrt(double);</code>\nwith the commented line <code>#include&lt;cmath&gt;</code></p>\n<p>But why does the other method throw this error:</p>\n<pre><code>    $ g++ so_c++1_FntnPrototype.cpp -lm\n    /tmp/cc45Ec4F.o: In function `main':\n    so_c++1_FntnPrototype.cpp:(.text+0x22): undefined reference to `sqrt(double)'\n    collect2: error: ld returned 1 exit status\n</code></pre>\n", "AcceptedAnswerId": "43885678", "Title": "Why does this type of function prototyping throwing an error?", "CreationDate": "2017-05-10T06:17:10.320", "Id": "43884847", "CommentCount": "10", "PostTypeId": "1", "LastActivityDate": "2017-05-10T07:42:19.840", "Score": "-2", "OwnerUserId": "7011529", "Tags": "<c++>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_43884847_43885398_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 6311}, "so_43884847_43885398_2": {"length": 14, "quality": 1.0, "section_id": 6304}, "so_43884847_43885398_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 6310}}, "n3337": {"so_43884847_43885398_2": {"length": 14, "quality": 1.0, "section_id": 6061}, "so_43884847_43885398_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 6068}, "so_43884847_43885398_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 6067}}, "n4659": {"so_43884847_43885398_2": {"length": 14, "quality": 1.0, "section_id": 7814}, "so_43884847_43885398_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 7821}, "so_43884847_43885398_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 7820}}}, "43885398": {"Id": "43885398", "PostTypeId": "2", "Body": "<p>Names of library functions are reserved. C++14 [extern.names]/3:</p>\n<blockquote>\n<p id=\"so_43884847_43885398_0\">Each name from the Standard C library declared with external linkage is reserved to the implementation for use as a name with <code>extern \"C\"</code> linkage, both in namespace <code>std</code> and in the global namespace.</p>\n<p id=\"so_43884847_43885398_1\">Each function signature from the Standard C library declared with external linkage is reserved to the\n  implementation for use as a function signature with both extern \"C\" and extern \"C++\" linkage, or as a name of namespace scope in the global namespace.</p>\n</blockquote>\n<p>Being reserved to the implementation means that it's undefined behaviour if you try to declare the name:</p>\n<blockquote>\n<p id=\"so_43884847_43885398_2\">If a program declares or defines a name in a context where it is reserved, other than as explicitly allowed by this Clause, its behavior is undefined.</p>\n</blockquote>\n<p><a href=\"https://stackoverflow.com/a/4105123/1505939\">Undefined behaviour</a> means that anything can happen;  in this case that includes the code failing to compile. </p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2017-05-10T07:16:53.753", "Score": "1", "CreationDate": "2017-05-10T06:52:14.517", "ParentId": "43884847", "CommentCount": "3", "OwnerUserId": "1505939", "LastEditDate": "2017-05-23T12:18:13.220"}, "43885678": {"Id": "43885678", "PostTypeId": "2", "Body": "<p>The problem is that functions in math library (<code>-lm</code>) have C linkage. If you modify <code>sqrt</code> prototype to indicate that it should have C linkage, your program links fine:</p>\n<pre><code>#include&lt;iostream&gt;\n\nextern \"C\" double sqrt(double);\n\nint main()\n{\n    using namespace std;\n\n    cout &lt;&lt; sqrt(16) &lt;&lt; endl;\n    cin.get();\n\n    return 0;\n}\n</code></pre>\n<p>(BTW. that's why header files are used - so you don't have to remember about such details)</p>\n", "LastEditorUserId": "226648", "LastActivityDate": "2017-05-10T07:17:31.367", "Score": "0", "CreationDate": "2017-05-10T07:08:27.277", "ParentId": "43884847", "CommentCount": "1", "OwnerUserId": "226648", "LastEditDate": "2017-05-10T07:17:31.367"}});