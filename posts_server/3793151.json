post_cb({"3793212": {"ParentId": "3793151", "PostTypeId": "2", "CommentCount": "12", "CreationDate": "2010-09-25T09:24:27.943", "Score": "1", "LastEditorUserId": "418110", "LastEditDate": "2010-09-25T13:17:30.837", "Id": "3793212", "OwnerUserId": "418110", "Body": "<p>This is what I understand. I have marked the individual code snippets in the code inline marked according to the line numbers in the OP.</p>\n<pre><code>struct A{\n    void f(){}\n};\n\ntemplate&lt;class T&gt; struct B{};\n\n// The template argument B&lt;T&gt; is TYPE depdent on the template parameter T                      (1)\ntemplate&lt;class T, class U = B&lt;T&gt; &gt; struct T1{};\n\n// The template argument c is VALUE dependent on the template non type parameter 'c'        (2)\ntemplate&lt;class T, char c, int d = c&gt; struct T2{};\n\n// The 2nd template argument is TYPE depdent on the template parameter T                    (3)\ntemplate&lt;class T, void (T::*p)(void) = &amp;T::f&gt; struct T3{};\n\n// The template template argument B is TYPE depdent on the template parameter T             (4)\ntemplate&lt;class T, template&lt;class U = T&gt; class V = B&gt; struct T4{};\n\n\nint main(){\n    T1&lt;int&gt; t1;\n    T2&lt;int, 'A', 2&gt; t2;\n    T3&lt;A&gt; t3;\n    T4&lt;A&gt; t4; \n}\n</code></pre>\n", "LastActivityDate": "2010-09-25T13:17:30.837"}, "3793151": {"CommentCount": "1", "ViewCount": "1284", "PostTypeId": "1", "LastEditorUserId": "165520", "CreationDate": "2010-09-25T09:04:20.967", "LastActivityDate": "2010-09-25T13:17:30.837", "LastEditDate": "2010-09-25T09:24:39.783", "AcceptedAnswerId": "3793212", "OwnerDisplayName": "BE Student", "Title": "Templates :Name resolution:Dependent template arguments : -->can any one tell some more examples for this statement?", "Id": "3793151", "Score": "2", "Body": "<p>This is the statement from ISO C++ Standard 14.6.2.4:\nDependent template arguments :</p>\n<blockquote>\n<ol>\n<li><p id=\"so_3793151_3793151_0\">A type template-argument is dependent if the type it specifies \n     is dependent.</p></li>\n<li><p id=\"so_3793151_3793151_1\">An integral non-type template-argument is dependent if the constant \n      expression it specifies is value dependent.</p></li>\n<li><p id=\"so_3793151_3793151_2\">A non-integral non-type template-argument is dependent if its type\n       is dependent or it has either of the following forms and contains a\n       nested-name-specifier which specifies a class-name that names a \n       dependent type.</p></li>\n<li><p id=\"so_3793151_3793151_3\">A template template-argument is dependent if it names a template\n       parameter or is a qualified-id with a nested-name-specifier which \n       contains a class-name that names a dependent type.</p></li>\n</ol>\n</blockquote>\n<p>I am unable to understand these points?</p>\n<p>Can any one give examples for these statements?</p>\n", "Tags": "<c++><templates>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_3793151_3793151_0": {"section_id": 210, "quality": 1.0, "length": 6}, "so_3793151_3793151_1": {"section_id": 211, "quality": 0.6666666666666666, "length": 6}}, "n3337": {"so_3793151_3793151_0": {"section_id": 204, "quality": 1.0, "length": 6}, "so_3793151_3793151_1": {"section_id": 205, "quality": 0.6666666666666666, "length": 6}}, "n4659": {"so_3793151_3793151_0": {"section_id": 218, "quality": 1.0, "length": 6}, "so_3793151_3793151_1": {"section_id": 219, "quality": 0.6666666666666666, "length": 6}}}});