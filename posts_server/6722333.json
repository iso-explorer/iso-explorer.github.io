post_cb({"6722389": {"ParentId": "6722333", "CommentCount": "3", "CreationDate": "2011-07-17T06:49:28.820", "OwnerUserId": "241631", "PostTypeId": "2", "Id": "6722389", "Score": "5", "Body": "<p>There is no such data type as <code>unsigned float</code>. Pay attention to compiler warnings; if you're not getting any bump up the warning level. From running this example on Visual Studio 2010 it looks like the compiler ignores the <code>float</code> keyword in the declaration </p>\n<pre><code>unsigned float f = 1.0;\n</code></pre>\n<p>This makes <code>f</code> an <code>unsigned int</code>. Since you don't have an overload of <code>foo()</code> that takes an <code>int</code> and <code>unsigned int</code> the compiler is unable to deduce which overload to call. If you add another overload </p>\n<pre><code>void foo(int,unsigned int) {}\n</code></pre>\n<p>the ambiguous call error disappears.</p>\n", "LastActivityDate": "2011-07-17T06:49:28.820"}, "6722364": {"ParentId": "6722333", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2011-07-17T06:43:35.660", "Score": "0", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:11:55.040", "Id": "6722364", "OwnerUserId": "566274", "Body": "<p>What kind of type is <code>unsigned float</code>?? Nothing that I've ever heard of. Check <a href=\"https://stackoverflow.com/questions/512022/why-doesnt-c-have-unsigned-floats\">this</a>.</p>\n<p>As far as I understand, floating point types (i.e. <code>float</code>, <code>double</code> etc) are always signed.</p>\n<p>EDIT: This will not compile at ideone (which is gcc 4.3.4) (it throws the error \"invalid signed/unsigned with float\"):</p>\n<pre><code>int main()\n{\n    unsigned float ff = 1.0;\n\n    return ff;\n}\n</code></pre>\n<p>I dunno what MSVC is doing if it accepts <code>unsigned float</code>. I don't think it's a valid type.</p>\n", "LastActivityDate": "2011-07-17T06:52:58.673"}, "6722355": {"ParentId": "6722333", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2011-07-17T06:40:37.040", "Score": "3", "LastEditorUserId": "784449", "LastEditDate": "2011-07-17T06:59:09.483", "Id": "6722355", "OwnerUserId": "784449", "Body": "<p>Conversion from <code>unsigned int</code> to either <code>int</code> or <code>float</code> results in a loss of precision, and both are considered equal by the compiler. You have to add an explicit case to make the compiler decide which to use, e.g.:</p>\n<pre><code>foo(i, static_cast&lt;float&gt;(f));\n</code></pre>\n<p>Note that there is no such thing as <code>unsigned float</code>. If the compiler accepts that, it is not standards-compliant (VC2010 warns about it, not sure about VC2005).</p>\n<hr/>\n<p>The relevant sections of the C++98 standard are section 4, which ranks a numeric type cast as either an exact match, a promotion, or a conversion, and section 13.3.3.2, which defines how implicit conversions are ranked for overload resolution. The latter section states, in subparagraph 4:</p>\n<blockquote>\n<p id=\"so_6722333_6722355_0\">Standard conversion sequences are ordered by their ranks: an Exact Match is a better conversion than a Promotion, which is a better conversion than a Conversion.</p>\n</blockquote>\n<p>Conversion from <code>unsigned int</code> to either <code>float</code> or <code>int</code> is ranked as \"Conversion\" either way, so it is \"indistinguishable\", making the overload ambiguous.</p>\n<p>Since <code>unsigned float</code> is not an actual type according to the standard, it's hard to say how this applies in your situation, but your compiler appears to treat conversion from <code>unsigned float</code> to either <code>float</code> or <code>int</code> as indistinguishable too.</p>\n", "LastActivityDate": "2011-07-17T06:59:09.483"}, "6722353": {"ParentId": "6722333", "CommentCount": "1", "CreationDate": "2011-07-17T06:40:20.070", "OwnerUserId": "791998", "PostTypeId": "2", "Id": "6722353", "Score": "0", "Body": "<p>When you make f float there is only one function that can be called - so no ambiguity. It works, because unsigned int can be cast to int silently.</p>\n", "LastActivityDate": "2011-07-17T06:40:20.070"}, "6722333": {"CommentCount": "3", "ViewCount": "881", "PostTypeId": "1", "LastEditorUserId": "241631", "CreationDate": "2011-07-17T06:37:27.047", "LastActivityDate": "2011-07-17T06:59:09.483", "Title": "Why overloading causes ambiguous call if unsigned is used?", "AcceptedAnswerId": "6722389", "LastEditDate": "2011-07-17T06:40:08.840", "Id": "6722333", "Score": "1", "Body": "<pre><code>void foo(int,int) {}\nvoid foo(int ,float) {}\nvoid foo(float,int) {}\n\nvoid main()\n{\n  unsigned int i = 10;\n  unsigned float f = 1.0;       //line 5\n  foo(i,f); // ambiguous call error\n}\n</code></pre>\n<p>replacing line 5 by </p>\n<pre><code>float f = 1.0;\n</code></pre>\n<p>makes the program work. Why is it so?</p>\n<p>I am working on visual studio 2005.</p>\n", "Tags": "<c++><visual-c++>", "OwnerUserId": "323422", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_6722333_6722355_0": {"section_id": 640, "quality": 0.9375, "length": 15}}, "n3337": {"so_6722333_6722355_0": {"section_id": 630, "quality": 0.9375, "length": 15}}, "n4659": {"so_6722333_6722355_0": {"section_id": 668, "quality": 0.9375, "length": 15}}}});