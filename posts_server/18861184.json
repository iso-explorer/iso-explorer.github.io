post_cb({"18861184": {"CommentCount": "4", "ViewCount": "858", "ClosedDate": "2013-09-18T08:05:30.700", "LastActivityDate": "2013-09-17T23:02:13.580", "Title": "override with new function declaration syntax", "CreationDate": "2013-09-17T22:52:56.573", "FavoriteCount": "1", "PostTypeId": "1", "Id": "18861184", "Score": "1", "Body": "<p>Given the new function declaration syntax introduced in C++11, it is easy to translate a member function from:</p>\n<pre><code>std::unique_ptr&lt;...&gt; operator()() const;\n</code></pre>\n<p>to</p>\n<pre><code>auto operator()() const -&gt; std::unique_ptr&lt;...&gt;;\n</code></pre>\n<p>I believe that to add override to the first you would write:</p>\n<pre><code>std::uniqe_ptr&lt;...&gt; operator()() const override;\n</code></pre>\n<p>When I write:</p>\n<pre><code>auto operator()() const -&gt; std::unique_ptr&lt;...&gt; override;\n</code></pre>\n<p>Clang gives the error:</p>\n<pre><code>error: type-id cannot have a name\nauto operator()() const -&gt; std::unique_ptr&lt;...&gt; override\n                                                ^~~~~~~~\n</code></pre>\n<p>When I write:</p>\n<pre><code>auto operator()() const override -&gt; std::unique_ptr&lt;...&gt;;\n</code></pre>\n<p>Clang gives the error:</p>\n<pre><code>error: 'auto' return without trailing return type\nauto operator()() const override -&gt; std::unique_ptr&lt;...&gt;;\n^\n</code></pre>\n<p>Where would you put override in the new syntax?</p>\n", "Tags": "<c++><c++11>", "OwnerUserId": "2012007", "AnswerCount": "1"}, "18861284": {"ParentId": "18861184", "CommentCount": "4", "Body": "<p>According to the syntax, the <code>override</code> keyword should be after the trailing return type, i.e., you'd use</p>\n<pre><code>auto operator()() -&gt; std::unique_ptr&lt;int&gt; override;\n</code></pre>\n<p>Trying it with a recent snapshot of gcc works while even a recent version of clang fails. I'd say this is a bug in clang's implementation.</p>\n<p>The relevant quote from the standard is 8.4.1 [dcl.fct.def.general] paragraph 1:</p>\n<blockquote>\n<p id=\"so_18861184_18861284_0\">Function definitions have the form</p>\n</blockquote>\n<pre><code>function-definition:\n    attribute-specifier-seqopt decl-specifier-seqopt declarator virt-specifier-seqopt   function-body\nfunction-body:\n    ctor-initializeropt compound-statement\nfunction-try-block\n= default ;\n= delete ;\n</code></pre>\n<p>The <code>virt-specifier-seqopt</code> consists of <code>final</code> and/or <code>override</code>.</p>\n", "OwnerUserId": "1120273", "PostTypeId": "2", "Id": "18861284", "Score": "1", "CreationDate": "2013-09-17T23:02:13.580", "LastActivityDate": "2013-09-17T23:02:13.580"}, "bq_ids": {"n4140": {"so_18861184_18861284_0": {"section_id": 3262, "quality": 1.0, "length": 4}}, "n3337": {"so_18861184_18861284_0": {"section_id": 3134, "quality": 1.0, "length": 4}}, "n4659": {"so_18861184_18861284_0": {"section_id": 4020, "quality": 1.0, "length": 4}}}});