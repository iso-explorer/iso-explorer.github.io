post_cb({"26355150": {"ParentId": "26354758", "CommentCount": "0", "Body": "<p><sub><em>Under the assumption that ConcreteBar is a subobject</em></sub></p>\n<p>It is valid since the storage has been allocated for \u00a73.7.5/1</p>\n<blockquote>\n<p id=\"so_26354758_26355150_0\">The storage duration of member subobjects, base class subobjects and\n  array elements is that of their complete object (1.8).</p>\n</blockquote>\n<p>and \u00a73.8/5 says:</p>\n<blockquote>\n<p id=\"so_26354758_26355150_1\">Before the lifetime of an object has started but after the storage\n  which the object will occupy has been allocated or, after the lifetime\n  of an object has ended and before the storage which the object\n  occupied is reused or released, any pointer that refers to the storage\n  location where the object will be or was located may be used but only\n  in limited ways. For an object under construction or destruction, see\n  12.7 [referring to non-static member usage]</p>\n</blockquote>\n<p>so that is valid as long as you don't use the reference.</p>\n", "OwnerUserId": "1938163", "PostTypeId": "2", "Id": "26355150", "Score": "6", "CreationDate": "2014-10-14T07:35:14.693", "LastActivityDate": "2014-10-14T07:35:14.693"}, "26354900": {"ParentId": "26354758", "LastEditDate": "2017-05-23T11:48:28.370", "CommentCount": "0", "CreationDate": "2014-10-14T07:22:38.450", "OwnerUserId": "4323", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "26354900", "Score": "6", "Body": "<p>Yes it's valid, because while <code>_bar</code> hasn't been constructed yet, the storage for it does exist, and taking a reference to it is OK so long as you don't actually use that reference until you're in the derived class constructor body.</p>\n<p>Here's another post on a similar topic that you may find illuminating: <a href=\"https://stackoverflow.com/a/5905746/4323\">https://stackoverflow.com/a/5905746/4323</a></p>\n<p>And finally, an answer which quotes the standard: <a href=\"https://stackoverflow.com/a/6258431/4323\">https://stackoverflow.com/a/6258431/4323</a> saying:</p>\n<blockquote>\n<p id=\"so_26354758_26354900_0\">Before the lifetime of an object has started but after the storage\n  which the object will occupy has been allocated [...],\n  any pointer that refers to the storage\n  location where the object will be or was located may be used but only\n  in limited ways.</p>\n</blockquote>\n", "LastActivityDate": "2014-10-14T07:22:38.450"}, "26354758": {"CommentCount": "0", "ViewCount": "1606", "LastActivityDate": "2014-10-14T07:35:14.693", "Body": "<p>Given the following classes where <code>ConcreteBar</code> implements <code>BarIfc</code>:</p>\n<pre><code>class Base {\n\npublic:\n\n    Base(BarIfc&amp; bar) : _bar(bar) { }\n\n    void foo() {\n        _bar.bar();\n    }\n\nprivate:\n\n    Base(const Base&amp; other);\n    Base&amp; operator=(const Base&amp; other);\n\n    BarIfc&amp; _bar; // Pure virtual interface\n};\n\nclass Child : public Base {\n\npublic:\n    // bar is passed to base class before initialization\n    Child(int i) : Base(_bar), _bar(i) { \n    }\n\nprivate:\n\n    Child(const Child&amp; other);\n    Child&amp; operator=(const Child&amp; other);\n\n    ConcreteBar _bar;\n};\n</code></pre>\n<p>Am I right in assuming that this </p>\n<pre><code>Child(int i) : Base(_bar), _bar(i) {}\n</code></pre>\n<p>is \"valid\" C++ as long as I'm not using (e.g. calling a method) <code>_bar</code> reference within the initializer list of the base class?</p>\n", "PostTypeId": "1", "AcceptedAnswerId": "26355150", "FavoriteCount": "2", "Title": "Passing class member to base class constructor (by reference)", "Id": "26354758", "Score": "7", "CreationDate": "2014-10-14T07:15:25.133", "Tags": "<c++>", "OwnerUserId": "1095795", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_26354758_26354900_0": {"section_id": 7193, "quality": 1.0, "length": 25}, "so_26354758_26355150_1": {"section_id": 7193, "quality": 0.9130434782608695, "length": 42}, "so_26354758_26355150_0": {"section_id": 7188, "quality": 0.9230769230769231, "length": 12}}, "n3337": {"so_26354758_26354900_0": {"section_id": 6937, "quality": 1.0, "length": 25}, "so_26354758_26355150_1": {"section_id": 6937, "quality": 0.9130434782608695, "length": 42}, "so_26354758_26355150_0": {"section_id": 6932, "quality": 0.9230769230769231, "length": 12}}, "n4659": {"so_26354758_26354900_0": {"section_id": 8702, "quality": 0.96, "length": 24}, "so_26354758_26355150_1": {"section_id": 8702, "quality": 0.8913043478260869, "length": 41}}}});