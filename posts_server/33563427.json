post_cb({"33563427": {"ViewCount": "398", "Body": "<p>Imagine we have this code:</p>\n<pre><code>template &lt;class, class&gt;\nclass Element\n{};\n\ntemplate &lt;class T&gt;\nclass Util\n{\npublic:\n   template &lt;class U&gt;\n   using BeFriend = Element&lt;T, U&gt;;\n};\n</code></pre>\n<p>Is it possible to mark <code>BeFriend</code> as a friend ? (Of <code>Util</code>, or any other class).</p>\n<h2>\u00a0Edit</h2>\n<p>The \"obvious\" syntax were tried, but both failed with Clang 3.6.</p>\n<pre><code>template &lt;class&gt; friend class BeFriend;\ntemplate &lt;class&gt; friend BeFriend;\n</code></pre>\n<p>I did not know about the second syntax, but <a href=\"https://stackoverflow.com/a/14623763/1027706\">found it in this answer</a>. It seems to work (and be required) for <strong>non</strong>-template aliases, but does not help in this case where the alias is templated.</p>\n<p>(<em>Note</em>: as some could infer from the minimal example, I am looking for a way to work-around the limitation that C++ does not allow to friend a partial template specialization)</p>\n", "Title": "Is it possible to mark an alias template as a friend?", "CreationDate": "2015-11-06T09:26:50.397", "LastActivityDate": "2015-11-06T10:20:27.297", "CommentCount": "9", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2017-05-23T12:25:07.127", "LastEditorUserId": "-1", "Id": "33563427", "Score": "7", "OwnerUserId": "1027706", "Tags": "<c++><templates><c++11><friend><template-aliases>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_33563427_33564333_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 133}}, "n3337": {"so_33563427_33564333_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 127}}, "n4659": {"so_33563427_33564333_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 137}}}, "33564333": {"Id": "33564333", "PostTypeId": "2", "Body": "<p>I think you can't do that because partial specializations could not be declared as friend.</p>\n<p>From the stardard, 14.5.4/8 Friends [temp.friend]</p>\n<blockquote>\n<p id=\"so_33563427_33564333_0\">Friend declarations shall not declare partial specializations. [\n  Example:</p>\n<pre><code>template&lt;class T&gt; class A { };\nclass X {\n  template&lt;class T&gt; friend class A&lt;T*&gt;; // error\n};\n</code></pre>\n<p id=\"so_33563427_33564333_1\">\u2014end example ]</p>\n</blockquote>\n<p>You have to specify a more generic version such as:</p>\n<pre><code>template &lt;class, class&gt; friend class Element;\n</code></pre>\n<p>or a full specified version, such as:</p>\n<pre><code>using BeFriend = Element&lt;T, int&gt;;\nfriend BeFriend;\n</code></pre>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2015-11-06T10:18:41.043", "Score": "6", "CreationDate": "2015-11-06T10:12:41.537", "ParentId": "33563427", "CommentCount": "0", "OwnerUserId": "3309790", "LastEditDate": "2015-11-06T10:18:41.043"}, "33564517": {"Id": "33564517", "PostTypeId": "2", "Body": "<p>The problem is not the alias, the problem is that\n<em>\"partial specialization cannot be declared as a friend\"</em>.</p>\n<pre><code>template &lt;class, class&gt; friend class Element;        // OK\n\ntemplate &lt;class, class&gt; friend class Element&lt;T, T&gt;;  // Error\n</code></pre>\n", "LastActivityDate": "2015-11-06T10:20:27.297", "CommentCount": "0", "CreationDate": "2015-11-06T10:20:27.297", "ParentId": "33563427", "Score": "1", "OwnerUserId": "2020827"}});