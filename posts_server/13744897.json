post_cb({"bq_ids": {"n4140": {"so_13744897_13745615_0": {"length": 8, "quality": 1.0, "section_id": 2200}}, "n3337": {"so_13744897_13745615_0": {"length": 8, "quality": 1.0, "section_id": 2188}}, "n4659": {"so_13744897_13745615_0": {"length": 8, "quality": 1.0, "section_id": 2473}}}, "13745615": {"Id": "13745615", "PostTypeId": "2", "Body": "<p>Formatted input from a <code>std::istream</code> into a character array will null-terminate the input, as specified in C++11 27.7.2.2.3/9:</p>\n<blockquote>\n<p id=\"so_13744897_13745615_0\"><code>operator&gt;&gt;</code> then stores a null byte (<code>charT()</code>) in the next position</p>\n</blockquote>\n<p>The code you've posted gives the expected result once the obvious syntax errors are fixed. But beware that this is very dangerous; there is no check on the length of the array, so too much input will overflow it. I strongly recommend you use the <code>std::string</code> class, rather than plain character arrays, for managing strings.</p>\n<p>The code you posted in a comment via a <a href=\"http://ideone.com/bgqJnM\" rel=\"nofollow\">link</a> looks like this:</p>\n<pre><code>char array[20];\nint length=getlength(array);\ncin&gt;&gt;array;\n</code></pre>\n<p>reading into the array <em>after</em> attempting to measure the string length of the uninitialised array. This could give any result, or crash, or cause any other example of undefined behaviour.</p>\n<p>In future, you should make sure that the code you post in your question is the same code that exhibits the behaviour you're asking about; otherwise, it's impossible to answer the question.</p>\n", "LastEditorUserId": "204847", "LastActivityDate": "2012-12-06T14:30:13.633", "Score": "3", "CreationDate": "2012-12-06T14:23:25.463", "ParentId": "13744897", "CommentCount": "1", "LastEditDate": "2012-12-06T14:30:13.633", "OwnerUserId": "204847"}, "13744956": {"Id": "13744956", "PostTypeId": "2", "Body": "<p>Yes, the input will be zero-terminated. Otherwise you wouldn't be able to, for example, print it without printing random characters after your input.</p>\n", "LastActivityDate": "2012-12-06T13:48:18.763", "Score": "0", "CreationDate": "2012-12-06T13:48:18.763", "ParentId": "13744897", "CommentCount": "7", "OwnerUserId": "440558"}, "13744897": {"ViewCount": "2736", "Body": "<p>I declare a character array: char arr[200].\nSubsequently i use the function cin to read values into the arr[200].\nI type into the command window line:abcd</p>\n<p>Is there a null terminated:'\\0' automatically added to the array at the end of the input.\n(i dont think so cause i tested it using the cin function: cin&gt;&gt;abcd )</p>\n<p>Can somebody explain it to me why</p>\n<p>Below is a snippet of my code i use to test</p>\n<pre><code>    char arr[200]\n    int count=0;\n    int i=0;\n    cin&gt;&gt;arr // i type into command window:abcd\n\n    while (arr[i] != '\\0')\n    {\n       count++;\n        i++\n\n\n\n\n    }\n</code></pre>\n<p>my count value will not be 4 but like 43 hence i concluded that the character array is not null terminated after the cin function</p>\n", "AcceptedAnswerId": "13745615", "Title": "does cin function add null terminated at the end of input", "CreationDate": "2012-12-06T13:44:26.593", "Id": "13744897", "CommentCount": "13", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2012-12-06T14:02:19.080", "LastEditorUserId": "30913", "LastActivityDate": "2012-12-06T14:30:13.633", "ClosedDate": "2012-12-08T09:45:33.657", "Score": "-2", "OwnerUserId": "1832057", "Tags": "<c++>", "AnswerCount": "2"}});