post_cb({"bq_ids": {"n4140": {"so_28113750_28113750_0": {"length": 20, "quality": 0.8695652173913043, "section_id": 3304}}, "n3337": {"so_28113750_28113750_0": {"length": 17, "quality": 0.7391304347826086, "section_id": 3174}}, "n4659": {"so_28113750_28113750_0": {"length": 16, "quality": 0.6956521739130435, "section_id": 4070}}}, "28239970": {"Id": "28239970", "PostTypeId": "2", "Body": "<p>You are correct, this is valid C++14; however, in C++11 a class with <a href=\"https://stackoverflow.com/q/27118535/1708801\">in class member initializers was not an aggregate</a> and so this is not valid in C++11.</p>\n<p>The issue as I noted in my answer to the above question and I realized later after I made my initial comment is that <a href=\"https://gcc.gnu.org/gcc-5/changes.html\" rel=\"nofollow noreferrer\">gcc did not support this change until 5.0</a> (<em><a href=\"http://melpon.org/wandbox/permlink/u87I6PIXszy1sw1K\" rel=\"nofollow noreferrer\">see it live</a></em>):</p>\n<blockquote>\n<p id=\"so_28113750_28239970_0\">G++ now supports C++14 aggregates with non-static data member\n  initializers.</p>\n<pre><code>struct A { int i, j = i; };\nA a = { 42 }; // a.j is also 42\n</code></pre>\n</blockquote>\n", "LastEditorUserId": "-1", "LastActivityDate": "2015-01-30T16:21:19.627", "Score": "5", "CreationDate": "2015-01-30T16:08:26.433", "ParentId": "28113750", "CommentCount": "0", "OwnerUserId": "1708801", "LastEditDate": "2017-05-23T11:58:07.573"}, "28113750": {"ViewCount": "352", "Body": "<p>Consider this code:</p>\n<pre><code>struct S\n{\n    int x;\n    double y = 1.1;\n};\n\nint main()\n{\n    S s = {0};\n}\n</code></pre>\n<p>According to the C++14 standard, \u00a7 8.5.1/7</p>\n<blockquote>\n<p id=\"so_28113750_28113750_0\">If there are fewer initializer-clauses in the list than there are members in the aggregate, then each member not explicitly initialized shall be initialized from its brace-or-equal-initializer or, if there is no brace-or-equal- initializer, from an empty initializer list (8.5.4).</p>\n</blockquote>\n<p>the code should be perfectly valid. </p>\n<p>However, g++ 4.9.2 rejects the code (compiled with <code>-std=c++14</code>)</p>\n<pre><code>so.cpp:9:13: error: could not convert '{0}' from '&lt;brace-enclosed initializer list&gt;' to 'S'\n     S s = {0};\n</code></pre>\n<p>clang++ on the other hand compiles it. </p>\n<p>Is this a known issue for g++?</p>\n", "AcceptedAnswerId": "28239970", "Title": "g++ 4.9 rejects valid aggregate initialization in C++14", "CreationDate": "2015-01-23T15:57:09.410", "Id": "28113750", "CommentCount": "4", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2015-01-30T16:21:19.627", "Score": "3", "OwnerUserId": "3093378", "Tags": "<c++><g++><c++14>", "AnswerCount": "1"}});