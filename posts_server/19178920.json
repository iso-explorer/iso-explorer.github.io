post_cb({"bq_ids": {"n4140": {"so_19178920_19179047_0": {"length": 6, "quality": 0.6, "section_id": 3245}}, "n3337": {"so_19178920_19179047_0": {"length": 6, "quality": 0.6, "section_id": 3118}}}, "19179047": {"PostTypeId": "2", "Body": "<p>Actually, in C++, it's illegal to define a type in a parameter or return type, named or not. See C++11[diff.decl]:</p>\n<blockquote>\n<p id=\"so_19178920_19179047_0\"><strong>Change:</strong> In C++, types may not be defined in return or parameter types. In C, these type definitions are allowed</p>\n</blockquote>\n<p>So the actual problem is the first case being accepted, not the second one being rejected.</p>\n", "LastActivityDate": "2013-10-04T10:29:07.910", "Id": "19179047", "CommentCount": "2", "CreationDate": "2013-10-04T10:29:07.910", "ParentId": "19178920", "Score": "11", "OwnerUserId": "1782465"}, "19178920": {"ViewCount": "303", "Body": "<pre><code>struct { int a, b; } f(int x, int y) // OK\n{\n    return { x, y };\n}\n\nauto g(int x, int y) -&gt; struct { int a, b; } // error C2332\n{\n    return { x, y };\n}\n\nint main()\n{\n    auto n = f(1, 2).a; // OK\n}\n</code></pre>\n<p>My compiler is VC++ 2013 RC.</p>\n<p>Why is <code>g</code> wrong while <code>f</code> is OK?</p>\n<p>Is this a bug of VC++?</p>\n", "AcceptedAnswerId": "19179047", "Title": "Why can an unnamed struct not be used as a trailing return type?", "CreationDate": "2013-10-04T10:23:10.800", "Id": "19178920", "CommentCount": "12", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-10-04T10:29:07.910", "Score": "8", "OwnerUserId": "508343", "Tags": "<c++><visual-c++><c++11><compiler-errors><trailing-return-type>", "AnswerCount": "1"}});