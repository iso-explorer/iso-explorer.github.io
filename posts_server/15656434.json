post_cb({"bq_ids": {"n4140": {"so_15656434_15656459_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 6204}, "so_15656434_15656459_1": {"length": 44, "quality": 0.9361702127659575, "section_id": 6259}}, "n3337": {"so_15656434_15656459_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 5964}, "so_15656434_15656459_1": {"length": 44, "quality": 0.9361702127659575, "section_id": 6019}}, "n4659": {"so_15656434_15656459_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 7707}, "so_15656434_15656459_1": {"length": 41, "quality": 0.8723404255319149, "section_id": 7763}}}, "15656459": {"Id": "15656459", "PostTypeId": "2", "Body": "<p>Prefer to include the <code>&lt;c ...&gt;</code> headers. They are C++ standard library headers. The <code>&lt;... .h&gt;</code> headers are headers defined by the C standard library:</p>\n<blockquote>\n<p id=\"so_15656434_15656459_0\">The C++ standard library also makes available the facilities of the C standard library, suitably adjusted to ensure static type safety.</p>\n</blockquote>\n<p>The C++ headers, for the most part, have content identical to the corresponding C library headers except that the names are all defined in the <code>std</code> namespace.</p>\n<blockquote>\n<p id=\"so_15656434_15656459_1\">Except as noted in Clauses 18 through 30 and Annex D, the contents of each header <code>cname</code> shall be the same as that of the corresponding header <code>name.h</code>, as specified in the C standard library (1.2) or the C Unicode TR, as appropriate, as if by inclusion. In the C++ standard library, however, the declarations (except for names which are defined as macros in C) are within namespace scope (3.3.6) of the namespace std. It is unspecified whether these names are first declared within the global namespace scope and are then injected into namespace std by explicit using-declarations</p>\n</blockquote>\n", "LastActivityDate": "2013-03-27T10:19:58.953", "CommentCount": "8", "CreationDate": "2013-03-27T10:19:58.953", "ParentId": "15656434", "Score": "19", "OwnerUserId": "150634"}, "15656434": {"ViewCount": "29059", "Body": "<p>What are the considerations for including the former rather than the latter in a C++ program? I always include <code>math.h</code>, <code>stdlib.h</code> and never <code>cmath</code>, <code>cstdlib</code> etc. I don't understand the reason the latter even exist, could someone please enlighten me?</p>\n", "AcceptedAnswerId": "15656459", "Title": "#include <cmath> vs #include <math.h> in a C++ program", "CreationDate": "2013-03-27T10:18:33.930", "Id": "15656434", "CommentCount": "3", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2015-06-10T17:32:26.187", "LastEditorUserId": "4721873", "LastActivityDate": "2015-06-10T17:32:26.187", "ClosedDate": "2013-03-27T12:54:47.650", "Score": "7", "OwnerUserId": "634821", "Tags": "<c++><c><coding-style><include><header-files>", "AnswerCount": "1"}});