post_cb({"bq_ids": {"n4140": {"so_8285818_8371534_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 6387}}, "n3337": {"so_8285818_8371534_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 6144}}, "n4659": {"so_8285818_8371534_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 7899}}}, "8371534": {"Id": "8371534", "PostTypeId": "2", "Body": "<p>Section [22.3.1.1.2], Class <code>locale::facet</code>, of the C++11 FDIS states:</p>\n<blockquote>\n<p id=\"so_8285818_8371534_0\">For some standard facets a standard \"...<code>_byname</code>\" class, derived from it, implements the virtual function semantics equivalent to that facet of the locale constructed by <code>locale(const char*)</code> with the same name.</p>\n</blockquote>\n<p>The Standard unfortunately does not require an exception to be thrown by the <code>std::codecvt_byname</code> constructor if the named locale is invalid, as does the explicit <code>std::locale</code> constructor <code>locale(const char*)</code>. However, a work-around is to attempt to construct the locale and <a href=\"http://msdn.microsoft.com/en-us/library/zt587566.aspx\" rel=\"nofollow\"><code>use_facet</code></a> the <code>codecvt</code> facet instead of attempting to use <code>std::codecvt_byname</code>.</p>\n", "LastActivityDate": "2011-12-03T22:26:36.830", "CommentCount": "0", "CreationDate": "2011-12-03T22:26:36.830", "ParentId": "8285818", "Score": "0", "OwnerUserId": "196844"}, "8285818": {"ViewCount": "354", "Body": "<p>Is there a standard way to check whether construction of a new <code>std::codecvt_byname</code> succeeded?</p>\n<p>I was experimenting with the following program:</p>\n<pre><code>// cl /nologo /Fetest_codecvt_byname.exe /EHsc test_codecvt_byname.cpp &amp;&amp; test_codecvt_byname\n// g++ -o test_codecvt_byname test_codecvt_byname.cpp &amp;&amp; test_codecvt_byname\n\n#include &lt;cstdlib&gt;\n#include &lt;iostream&gt;\n#include &lt;locale&gt;\n#include &lt;new&gt;\n#include &lt;stdexcept&gt;\n\nint main()\n{\n    try {\n        new std::codecvt_byname&lt;wchar_t, char, mbstate_t&gt;(\".nonsense\");\n    } catch (const std::exception&amp; ex) {\n        std::cerr &lt;&lt; \"Error: \" &lt;&lt; ex.what() &lt;&lt; std::endl;\n        return EXIT_FAILURE;\n    }\n\n    return EXIT_SUCCESS;\n}\n</code></pre>\n<p>libstdc++ on Windows apparently throws a <code>std::runtime_error</code> object if the named locale is unsupported. Microsoft Visual C++'s STL implementation, however, does not throw an exception.</p>\n<p>Not knowing which C++ compiler will compile the code, how do I check whether construction of the new <code>std::codecvt_byname</code> succeeded? Alternatively, is there a way to check whether construction will be successful assuming no out-of-memory scenario?</p>\n", "AcceptedAnswerId": "8371534", "Title": "How to check if construction of a new codecvt_byname succeeded", "CreationDate": "2011-11-27T13:15:20.757", "Id": "8285818", "CommentCount": "0", "LastEditDate": "2011-11-27T23:41:24.793", "PostTypeId": "1", "LastEditorUserId": "196844", "LastActivityDate": "2011-12-03T22:26:36.830", "Score": "0", "OwnerUserId": "196844", "Tags": "<c++><localization><codecvt>", "AnswerCount": "1"}});