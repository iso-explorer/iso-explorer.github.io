post_cb({"15343276": {"ViewCount": "1313", "Body": "<p>I saw this kind of cast for the first time today, and I'm curious as to why this works. I thought casting in this manner would assign to the temporary, and not the class member. Using VC2010.</p>\n<pre><code>class A\n{\npublic:\n\n   A() :\n      m_value(1.f)\n   {\n      ((float)m_value) = 10.f;\n   }\n\n   const float m_value;\n};\n</code></pre>\n", "AcceptedAnswerId": "15343438", "Title": "Why does an lvalue cast work?", "CreationDate": "2013-03-11T16:09:19.367", "Id": "15343276", "CommentCount": "7", "LastEditDate": "2013-03-11T16:31:20.843", "PostTypeId": "1", "LastEditorUserId": "2060725", "LastActivityDate": "2013-03-11T16:31:20.843", "Score": "3", "OwnerUserId": "345651", "Tags": "<c++><visual-studio-2010><casting><assign><lvalue>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_15343276_15343438_1": {"length": 12, "quality": 1.0, "section_id": 6173}, "so_15343276_15343438_0": {"length": 21, "quality": 0.9130434782608695, "section_id": 6123}}, "n3337": {"so_15343276_15343438_0": {"length": 21, "quality": 0.9130434782608695, "section_id": 5887}, "so_15343276_15343438_1": {"length": 12, "quality": 1.0, "section_id": 5934}}, "n4659": {"so_15343276_15343438_0": {"length": 21, "quality": 0.9130434782608695, "section_id": 7620}, "so_15343276_15343438_1": {"length": 12, "quality": 1.0, "section_id": 7675}}}, "15343438": {"Id": "15343438", "PostTypeId": "2", "Body": "<p>It shouldn't work. An explicit type conversion to <code>float</code> with cast notation will be a prvalue (\u00a75.4):</p>\n<blockquote>\n<p id=\"so_15343276_15343438_0\">The result of the expression <code>(T)</code> <em>cast-expression</em> is of type <code>T</code>. The result is an lvalue if T is an lvalue reference type or an rvalue reference to function type and an xvalue if T is an rvalue reference to object type; <strong>otherwise the result is a prvalue</strong>.</p>\n</blockquote>\n<p>My emphasis added.</p>\n<p>The assignment operator requires an lvalue as its left operand (\u00a75.17):</p>\n<blockquote>\n<p id=\"so_15343276_15343438_1\">All require a modifiable lvalue as their left operand and return an lvalue referring to the left operand.</p>\n</blockquote>\n<p>A prvalue is not an lvalue.</p>\n", "LastActivityDate": "2013-03-11T16:17:31.973", "CommentCount": "0", "CreationDate": "2013-03-11T16:17:31.973", "ParentId": "15343276", "Score": "3", "OwnerUserId": "150634"}, "15343667": {"Id": "15343667", "PostTypeId": "2", "Body": "<p>Even after fixing all other problems to make the code compile, it only works in VC2010 because it uses a non-standard extension. And If you specify <code>/Wall</code> to see all warnings, you compiler will emit </p>\n<blockquote>\n<p id=\"so_15343276_15343667_0\">warning C4213: nonstandard extension used : cast on l-value</p>\n</blockquote>\n", "LastActivityDate": "2013-03-11T16:30:07.320", "CommentCount": "0", "CreationDate": "2013-03-11T16:30:07.320", "ParentId": "15343276", "Score": "2", "OwnerUserId": "2060725"}});