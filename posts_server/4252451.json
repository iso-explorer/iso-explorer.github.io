post_cb({"bq_ids": {"n4140": {"so_4252451_4252451_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 5499}, "so_4252451_4252483_0": {"length": 10, "quality": 1.0, "section_id": 5499}}, "n3337": {"so_4252451_4252451_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 5285}, "so_4252451_4252483_0": {"length": 10, "quality": 1.0, "section_id": 5285}}, "n4659": {"so_4252451_4252451_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 6933}, "so_4252451_4252483_0": {"length": 10, "quality": 1.0, "section_id": 6933}}}, "4262133": {"Id": "4262133", "PostTypeId": "2", "Body": "<p>The example you refer to <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#36\" rel=\"noreferrer\">is known to be inconsistent</a>. The committee hasn't yet fixed this. </p>\n<blockquote>\n<p id=\"so_4252451_4262133_0\">So, is this a bug in GCC and VS2010?</p>\n</blockquote>\n<p>I don't think it's a bug in either of GCC/VS2010/Clang or Comeau. It appears to be a bug in the C++ Standard. In these cases, compile writers have to make up their mind on what is most viable. If you remove the example in question, then 3.3/4 states the example is valid: \"Given a set of declarations in a single declarative region, each of which specifies the same unqualified name, ... they shall all refer to the same entity, or all refer to functions and function templates; or ...\". </p>\n<p>The question arises, as discussed in the linked issue, what 7.3.3/8 refers to when it says \"declarations\", which the committee didn't reach consensus about. And so, until then 3.3/4 applies for GCC/VS2010 and Clang, while Comeau chooses to use some other semantics.</p>\n", "LastEditorUserId": "34509", "LastActivityDate": "2010-11-23T23:42:16.090", "Score": "11", "CreationDate": "2010-11-23T23:33:53.813", "ParentId": "4252451", "CommentCount": "1", "LastEditDate": "2010-11-23T23:42:16.090", "OwnerUserId": "34509"}, "4252451": {"ViewCount": "575", "Body": "<pre><code>namespace A{\n   int i;\n}\n\nint main(){\n   using A::i;\n   using A::i;\n}\n</code></pre>\n<p>VS2010 - compiles fine</p>\n<p>gcc (ideone) - compiles fine</p>\n<p>Comeau - gives error \"\"ComeauTest.c\", line 10: error: \"i\" has already been declared in the current scope\n     using A::i;\"</p>\n<blockquote>\n<p id=\"so_4252451_4252451_0\">$7.3.3/8 - \"A using-declaration is a\n  declaration and can therefore be used\n  repeatedly where (and only where)\n  multiple declarations are allowed.\"</p>\n</blockquote>\n<p>The example right there indicates that the code is indeed ill-formed.</p>\n<p>So, is this a bug in GCC and VS2010?</p>\n<p>EDIT 2:</p>\n<p>Remove the multiple <code>using directives</code> as it was unrelated to the query on hand.</p>\n", "AcceptedAnswerId": "4262133", "Title": "Namespace using declaration (bug in GCC/VS2010)?", "CreationDate": "2010-11-23T03:16:16.860", "Id": "4252451", "CommentCount": "10", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2010-11-23T03:24:03.650", "LastEditorUserId": "418110", "LastActivityDate": "2010-11-23T23:42:16.090", "Score": "12", "OwnerUserId": "418110", "Tags": "<c++><namespaces><using-declaration>", "AnswerCount": "2"}, "4252483": {"Id": "4252483", "PostTypeId": "2", "Body": "<p>Yes you are right. This is indeed a bug in g++, MSVC++ and Clang. Comeau has got it correct. </p>\n<p>As you said <code>7.3.3/8</code> says </p>\n<blockquote>\n<p id=\"so_4252451_4252483_0\">A using-declaration is a declaration and can therefore be used repeatedly where (and only where) multiple declarations are allowed</p>\n</blockquote>\n<p>The following code snippet is also given.</p>\n<pre><code>void f()\n{\n    using A::i;\n    using A::i;  //error: double declaration\n}\n</code></pre>\n<p>Similarly your code is ill-formed too.</p>\n", "LastActivityDate": "2010-11-23T03:25:08.903", "Score": "1", "CreationDate": "2010-11-23T03:25:08.903", "ParentId": "4252451", "CommentCount": "0", "OwnerUserId": "165520"}});