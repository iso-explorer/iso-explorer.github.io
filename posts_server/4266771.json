post_cb({"4266771": {"CommentCount": "4", "AcceptedAnswerId": "4266820", "PostTypeId": "1", "ClosedDate": "2015-11-10T19:05:25.893", "LastEditorUserId": "4512651", "CreationDate": "2010-11-24T12:30:46.303", "LastActivityDate": "2015-09-05T04:59:24.880", "LastEditDate": "2015-09-05T04:59:24.880", "ViewCount": "14871", "FavoriteCount": "3", "Title": "char size confusion", "Id": "4266771", "Score": "2", "Body": "<p>As per I know that 1 char = 1 byte = 8 bits(32 bit system).</p>\n<pre><code>char c=0xffff0000;  //wrong\n</code></pre>\n<p>then why <code>char</code> allow just <strong>8 bits</strong> and also every character in a file also of <strong>8 bit</strong> length.</p>\n<p>thanks.  </p>\n", "Tags": "<c++><char><byte><bit>", "OwnerUserId": "438983", "AnswerCount": "8"}, "4266924": {"ParentId": "4266771", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>char has <code>CHAR_BIT</code> bits  [from <code>#include &lt;climits&gt;</code>]</p>\n<p>On 80x86 machines I have always seen this as 8-bits.<br>\nOn a TMS320C54x and TMS320C55x DSP's I have seen it as 16-bit. This was a pain because to save memory, strings had to be packed with two ASCII characters held in each char!</br></p>\n<p>Always, <code>sizeof(char) == 1</code></p>\n", "OwnerUserId": "517634", "LastEditorUserId": "517634", "LastEditDate": "2010-11-24T13:28:05.167", "Id": "4266924", "Score": "2", "CreationDate": "2010-11-24T12:45:59.117", "LastActivityDate": "2010-11-24T13:28:05.167"}, "4266820": {"ParentId": "4266771", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>No. The sizeof char is by definition 1. But this does not mean that it occupies 32-bits/8-bits always.</p>\n<blockquote>\n<p id=\"so_4266771_4266820_0\">$3.9.1/1- \"Objects declared as characters (char) shall be large\n  enough to store any member of the\n  implementation\u2019s basic character set.\"</p>\n</blockquote>\n<p>There appears to be a confusion that a byte is 8-bits. The C++ Standard does not mandate this however.</p>\n<p>Here's how byte is defined in the Standard $1.7/1</p>\n<blockquote>\n<p id=\"so_4266771_4266820_1\">The fundamental storage unit in the C\n  + + memory model is the byte. A byte is at least large enough to contain\n  any member of the basic execution\n  character set and is composed of a\n  contiguous sequence of bits, <strong>the\n  number of which is\n  implementation-defined</strong>.</p>\n</blockquote>\n<p>As is clear, a byte need not be always 8-bits.</p>\n", "OwnerUserId": "418110", "LastEditorUserId": "418110", "LastEditDate": "2010-11-24T12:40:02.293", "Id": "4266820", "Score": "15", "CreationDate": "2010-11-24T12:34:37.223", "LastActivityDate": "2010-11-24T12:40:02.293"}, "4266862": {"ParentId": "4266771", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Just because a system is classified as \"32 bit\" doesn't mean it uses 32-bit bytes.</p>\n<p>A byte is often defined (in a system-dependent way) as the smallest addressable piece of memory, and for many architectures that is still 8 bits, even though the architectures (like x86 or x86-64) are capable of working with larger amounts of data in registers (32 vs 64, respectively). If you're into this thinking, you often use the word \"octet\" to talk about 8-bit quantities, since the meaning of \"byte\" changes with the architecture being discussed.</p>\n<p>In contrast, for some people \"a byte\" is defined as always being 8 bits, but then the confusion in the question would probably never happen since they wouldn't expect <code>char</code> on e.g. a 32-bit system to be 32 bits.</p>\n<p>Of course, the entire idea of classifying a system as \"<em>n</em>-bit\" is oversimplifying things quite a lot.</p>\n<p>In C, you can always <code>#include &lt;limits.h&gt;</code> and then use the <code>CHAR_BIT</code> macro to get the number of bits in the compiler target's <code>char</code> data type.</p>\n", "OwnerUserId": "28169", "LastEditorUserId": "28169", "LastEditDate": "2014-06-28T13:16:29.270", "Id": "4266862", "Score": "4", "CreationDate": "2010-11-24T12:38:27.707", "LastActivityDate": "2014-06-28T13:16:29.270"}, "4266870": {"ParentId": "4266771", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>In addition to points made already - note that <code>sizeof(char)</code> and the size of a character are not always the same.  </p>\n<p>Multibyte character sets can take &gt; 1 byte per character - for example, a Unicode character always takes up more than one byte (<code>sizeof(wchar_t)</code>).</p>\n<p>Microsoft docs on this topic are <a href=\"http://msdn.microsoft.com/en-us/library/5z097dxa%28v=VS.100%29.aspx\" rel=\"nofollow\">here</a>.  To add to the confusion, some character sets don't even use a fixed number of bytes for each character.</p>\n", "OwnerUserId": "210102", "LastEditorUserId": "210102", "LastEditDate": "2010-11-24T15:12:24.517", "Id": "4266870", "Score": "0", "CreationDate": "2010-11-24T12:39:06.677", "LastActivityDate": "2010-11-24T15:12:24.517"}, "4266807": {"ParentId": "4266771", "CommentCount": "3", "Body": "<p>1 byte = 8 bits</p>\n", "OwnerUserId": "381004", "PostTypeId": "2", "Id": "4266807", "Score": "0", "CreationDate": "2010-11-24T12:33:49.813", "LastActivityDate": "2010-11-24T12:33:49.813"}, "4266884": {"ParentId": "4266771", "CommentCount": "0", "Body": "<p>a char is always a byte and always has size 1.</p>\n<p>A byte always has at least 8 bits but can have more on some systems.</p>\n<p>A 32-bit system refers to the size of the address-bus, in C or C++ you can think of this as the size of a pointer, not the size of a byte.</p>\n", "OwnerUserId": "442284", "PostTypeId": "2", "Id": "4266884", "Score": "2", "CreationDate": "2010-11-24T12:40:37.130", "LastActivityDate": "2010-11-24T12:40:37.130"}, "4266864": {"ParentId": "4266771", "CommentCount": "0", "Body": "<p>The number of bits in a <code>char</code> generally 8 (one byte/octet). The exact number is defined in the header <code>&lt;climits&gt;</code> as <code>CHAR_BIT</code>.</p>\n", "OwnerUserId": "166749", "PostTypeId": "2", "Id": "4266864", "Score": "1", "CreationDate": "2010-11-24T12:38:41.983", "LastActivityDate": "2010-11-24T12:38:41.983"}, "bq_ids": {"n4140": {"so_4266771_4266820_1": {"section_id": 5785, "quality": 0.8695652173913043, "length": 20}, "so_4266771_4266820_0": {"section_id": 7210, "quality": 0.9230769230769231, "length": 12}}, "n3337": {"so_4266771_4266820_1": {"section_id": 5558, "quality": 0.8695652173913043, "length": 20}, "so_4266771_4266820_0": {"section_id": 6954, "quality": 0.9230769230769231, "length": 12}}, "n4659": {"so_4266771_4266820_1": {"section_id": 7242, "quality": 0.8695652173913043, "length": 20}, "so_4266771_4266820_0": {"section_id": 8719, "quality": 0.9230769230769231, "length": 12}}}, "4266849": {"ParentId": "4266771", "CommentCount": "2", "Body": "<p>One byte is most certainly NOT 32 bits.  A byte is always 8 bits, no matter what system you're on.</p>\n<p>A system that is \"32-bit\" means that the \"word\" size is 32 bits.  In other words, data is transferred around the system in 32-bit chunks.</p>\n", "OwnerUserId": "393965", "PostTypeId": "2", "Id": "4266849", "Score": "0", "CreationDate": "2010-11-24T12:37:00.407", "LastActivityDate": "2010-11-24T12:37:00.407"}});