post_cb({"bq_ids": {"n4140": {"so_6027955_6059889_1": {"length": 10, "quality": 0.9090909090909091, "section_id": 7107}, "so_6027955_6059889_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 7107}}, "n3337": {"so_6027955_6059889_1": {"length": 10, "quality": 0.9090909090909091, "section_id": 6851}, "so_6027955_6059889_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 6851}}, "n4659": {"so_6027955_6059889_1": {"length": 10, "quality": 0.9090909090909091, "section_id": 8608}, "so_6027955_6059889_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 8608}}}, "6027955": {"ViewCount": "333", "Body": "<pre><code>struct A\n{\n    enum E\n    {\n        FIRST,\n        SECOND\n    };\n};\n\nstruct B\n{\n    typedef A::E E;\n};\n\nint main()\n{\n    B::E e0 = A::FIRST;//OK (this case is clear for me)\n    B::E e1 = A::E::FIRST;//OK (this case is clear for me as well)\n    B::E e2 = B::FIRST;//Compile Error: FIRST is not member of B (Why isn't this allowed? Don't we lose meaning of typedef of enums in this case?)\n    B::E e3 = B::E::FIRST;//Error of compiler (If there were no bug in visual studio 2005 compiler, would this code work?)\n    return 0;\n}\n</code></pre>\n<p>P.S. The question in code.</p>\n<p><strong>Update:</strong> Actually the bug is fixed in VS2010.</p>\n", "AcceptedAnswerId": "6059889", "Title": "Problem with typedefing enums. And bug in visual studio 2005", "CreationDate": "2011-05-17T08:04:16.217", "Id": "6027955", "CommentCount": "0", "LastEditDate": "2011-05-22T07:26:50.930", "PostTypeId": "1", "LastEditorUserId": "509233", "LastActivityDate": "2011-05-22T07:26:50.930", "Score": "3", "OwnerUserId": "509233", "Tags": "<c++><visual-studio><visual-studio-2005><enums>", "AnswerCount": "2"}, "6059889": {"Id": "6059889", "PostTypeId": "2", "Body": "<p>After adding the missing semicolon in <code>B::E e3 = B::E::FIRST</code>, the following holds:</p>\n<p>In C++03, only the first line (<code>B::E e0 = A::FIRST;</code>) is correct, the other three are errors:</p>\n<pre><code>B::E e1 = A::E::FIRST; // error: \u2018A::E\u2019 is not a class or namespace\nB::E e2 = B::FIRST; // error: \u2018FIRST\u2019 is not a member of \u2018B\u2019\nB::E e3 = B::E::FIRST; // error: \u2018B::E\u2019 is not a class or namespace\n</code></pre>\n<p>In C++0x, only the second line (<code>B::E e2 = B::FIRST;</code>) is an error (FIRST is still not a member of B!), the other three are correct.</p>\n<p>Not an answer to the \"why?\", just pointing out that there are two different issues at hand. The rationale for the issue that affects e1 and e3 is probably explained in the C++0x working papers.</p>\n<p>The change was to the first sentence of <strong>3.4.3[basic.lookup.qual]/1</strong> which now says</p>\n<blockquote>\n<p id=\"so_6027955_6059889_0\">The name of a class or namespace member or enumerator can be referred to after the :: scope resolution operator</p>\n</blockquote>\n<p>But it used to say</p>\n<blockquote>\n<p id=\"so_6027955_6059889_1\">The name of a class or namespace member can be referred to after the :: scope resolution operator</p>\n</blockquote>\n", "LastEditorUserId": "273767", "LastActivityDate": "2011-05-19T14:14:07.120", "Score": "5", "CreationDate": "2011-05-19T14:01:47.453", "ParentId": "6027955", "CommentCount": "1", "OwnerUserId": "273767", "LastEditDate": "2011-05-19T14:14:07.120"}, "6028008": {"Id": "6028008", "PostTypeId": "2", "Body": "<p>Enums only \"overflow\" in the <strong>surrounding</strong> namespace, aka the namespace of <code>struct A</code>. A simple typedef won't yield the same effect for <code>struct B</code>.</p>\n<hr>\n<p>Also, if you enable warning level 4 (/W4), you'll get this nice warning:</p>\n<blockquote>\n<p id=\"so_6027955_6028008_0\">warning C4482: nonstandard extension used: enum 'A::E' used in qualified name</p>\n</blockquote>\n<p>It is not allowed to used <code>A::E::XXX</code> to refer to the enum values in the current standard.</p>\n</hr>", "LastEditorUserId": "500104", "LastActivityDate": "2011-05-17T08:18:27.440", "Score": "2", "CreationDate": "2011-05-17T08:10:43.027", "ParentId": "6027955", "CommentCount": "3", "OwnerUserId": "500104", "LastEditDate": "2011-05-17T08:18:27.440"}});