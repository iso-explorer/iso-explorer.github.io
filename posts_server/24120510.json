post_cb({"bq_ids": {"n4140": {"so_24120510_24120620_0": {"length": 8, "quality": 1.0, "section_id": 350}}, "n3337": {"so_24120510_24120620_0": {"length": 8, "quality": 1.0, "section_id": 340}}, "n4659": {"so_24120510_24120620_0": {"length": 8, "quality": 1.0, "section_id": 360}}}, "24120620": {"Id": "24120620", "PostTypeId": "2", "Body": "<p>14.8.2.5 <strong>[temp.deduct.type]</strong>:</p>\n<blockquote>\n<p id=\"so_24120510_24120620_0\">19 - A template <em>type-parameter</em> cannot be deduced from the type of a function default argument. [...]</p>\n</blockquote>\n<p>The example given is substantially the same as yours.</p>\n", "LastActivityDate": "2014-06-09T12:44:57.727", "Score": "5", "CreationDate": "2014-06-09T12:44:57.727", "ParentId": "24120510", "CommentCount": "12", "OwnerUserId": "567292"}, "24120510": {"ViewCount": "56", "Body": "<p>Why doesn't this C++11 program work:</p>\n<pre><code>template &lt;typename T&gt;\nvoid f(T t = 42) {}\n\nint main() { f(); }\n</code></pre>\n<p>Why can't <code>T</code> be deduced from the default argument <code>42</code>?</p>\n", "AcceptedAnswerId": "24120620", "Title": "Deducing template parameter from default parameter", "CreationDate": "2014-06-09T12:39:46.100", "Id": "24120510", "CommentCount": "5", "PostTypeId": "1", "ClosedDate": "2014-06-09T12:52:42.093", "LastActivityDate": "2014-06-09T12:44:57.727", "Score": "1", "OwnerUserId": "1131467", "Tags": "<c++><c++11>", "AnswerCount": "1"}});