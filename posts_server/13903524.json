post_cb({"13903587": {"ParentId": "13903524", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>That's strange, since in C++ any function argument of array type is actually considered of pointer type, i.e. the \"real\" function signature seen by the compiler is</p>\n<pre><code>void foo(const void* input, char* output);\n</code></pre>\n<blockquote>\n<p id=\"so_13903524_13903587_0\">After determining the type of each parameter, any parameter of type \u201carray of T\u201d [...] is adjusted to be \u201cpointer to T\u201d (C++11, [dcl.fct], \u00b65)</p>\n</blockquote>\n<p>Most importantly, your code <em>does</em> work, as you can see <a href=\"http://ideone.com/EIX75z\" rel=\"nofollow\">here</a>; are you sure that your \"narrowed down\" example actually reflects the problem you are seeing? Probably the problem lies in the type of another parameter.</p>\n", "OwnerUserId": "214671", "LastEditorUserId": "214671", "LastEditDate": "2012-12-16T17:15:16.907", "Id": "13903587", "Score": "3", "CreationDate": "2012-12-16T17:13:16.673", "LastActivityDate": "2012-12-16T17:15:16.907"}, "13903524": {"CommentCount": "9", "ViewCount": "218", "PostTypeId": "1", "ClosedDate": "2012-12-16T18:25:27.093", "LastEditorUserId": "508343", "CreationDate": "2012-12-16T17:07:15.603", "LastActivityDate": "2012-12-16T17:24:35.217", "Title": "How to pass a pointer as an array argument?", "AcceptedAnswerId": "13903595", "LastEditDate": "2012-12-16T17:24:35.217", "Id": "13903524", "Score": "-2", "Body": "<p>I have a third-party library, which has a function delared as follows:</p>\n<pre><code>void foo(const void* input, char output[1024]);\n</code></pre>\n<p>If I write something like this:</p>\n<pre><code>char* input = \"Hello\";\nchar  output[1024];\nfoo(input, output); // OK\n</code></pre>\n<p>But I don't want to declare such a big array on stack (that would be very dangerous in OS kernel environment). So I have to do something like this:</p>\n<pre><code>char* input      = \"Hello\";\nchar* output_buf = new char[1024];\nfoo(input, output_buf); // Compiler Error C2664\n</code></pre>\n<p>I cannot change the implementation of foo. How should I do?</p>\n<p>=================</p>\n<p>The problem has been resolved. My real code is like this:</p>\n<pre><code>char* input      = \"Hello\";\nvoid* output_buf = new char[1024];\nfoo(input, output_buf); // Compiler Error C2664\n</code></pre>\n<p>conversion from void* to char* is not implicitly accepted by the standard. So the following code works:</p>\n<pre><code>char* input      = \"Hello\";\nvoid* output_buf = new char[1024];\nfoo(input, (char*)output_buf); // OK\n</code></pre>\n", "Tags": "<c++><c><arrays><argument-passing><function-declaration>", "OwnerUserId": "508343", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_13903524_13903587_0": {"section_id": 3241, "quality": 0.8333333333333334, "length": 10}}, "n3337": {"so_13903524_13903587_0": {"section_id": 3114, "quality": 0.8333333333333334, "length": 10}}, "n4659": {"so_13903524_13903587_0": {"section_id": 3997, "quality": 0.8333333333333334, "length": 10}}}, "13903595": {"ParentId": "13903524", "CommentCount": "4", "Body": "<p>The problem is not with <code>output</code>.  In reality your function does not take an array as you cannot pass arrays to functions.  It receives a pointer to char.  This would work as well:</p>\n<pre><code>void foo(char f[1024])\n{\n    // blah\n}\n\nint main() {\n    char c1[1];\n    foo(c1);  // works!\n\n    char *c2 = new char[27];\n    foo(c2);  // works!\n\n    delete [] c2; \n}\n</code></pre>\n<p>That code will compile, and it does so because the function receives a pointer, that is all.  So, the problem is with your first argument, <code>input</code>.  It's type must be wrong.  Look at your error message more closely and/or show us the declaration of <code>input</code>.</p>\n", "OwnerUserId": "1053", "PostTypeId": "2", "Id": "13903595", "Score": "2", "CreationDate": "2012-12-16T17:13:42.097", "LastActivityDate": "2012-12-16T17:13:42.097"}});