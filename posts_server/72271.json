post_cb({"22744340": {"ParentId": "72271", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>It's not a great thing . For me I work in Dev C++ under windows 7, have same warning message.\nI just put a new line after my code( just click enter key) the warning vanish away . Any way\nit will not affect program run or compilation.</p>\n<p><img alt=\"Add a new line at last\" src=\"https://i.stack.imgur.com/GZgfm.png\"/></p>\n", "OwnerUserId": "401973", "LastEditorUserId": "560648", "LastEditDate": "2015-08-06T08:58:15.047", "Id": "22744340", "Score": "-1", "CreationDate": "2014-03-30T13:06:58.230", "LastActivityDate": "2015-08-06T08:58:15.047"}, "72409": {"CommentCount": "6", "CreationDate": "2008-09-16T13:49:29.917", "LastEditorUserId": "3552770", "LastActivityDate": "2015-12-22T22:59:03.100", "ParentId": "72271", "PostTypeId": "2", "LastEditorDisplayName": "Thomas", "LastEditDate": "2015-12-22T22:59:03.100", "Id": "72409", "Score": "194", "Body": "<p>Think of some of the problems that can occur if there is no newline. According to the ANSI standard the <code>#include</code> of a file at the beginning inserts the file exactly as it is to the front of the file and does not insert the new line after the <code>#include &lt;foo.h&gt;</code> after the contents of the file. So if you include a file with no newline at the end to the parser it will be viewed as if the last line of <code>foo.h</code> is on the same line as the first line of <code>foo.cpp</code>. What if the last line of foo.h was a comment without a new line? Now the first line of <code>foo.cpp</code> is commented out. These are just a couple of examples of the types of problems that can creep up.</p>\n<p><strong>Edit</strong>: Just wanted to point any interested parties to James' answer below. While The above answer is still correct for C the new C++ standard (C++11) has been changed so that this warning  should no longer be issued if using C++ and a C++11 conformant compiler.</p>\n<p>From C++11 standard via James' post: </p>\n<blockquote>\n<p id=\"so_72271_72409_0\">A source file that is not empty and that does not end in a new-line character, or that ends in a new-line character immediately preceded by a backslash character before any such splicing takes place, shall be processed as if an additional new-line character were appended to the file (C++11 \u00a72.2/1).</p>\n</blockquote>\n", "OwnerUserId": "3022", "OwnerDisplayName": "Thomas"}, "8771096": {"ParentId": "72271", "CommentCount": "0", "Body": "<p>This warning might also help to indicate that a file could have been truncated somehow.  It's true that the compiler will probably throw a compiler error anyway - especially if it's in the middle of a function - or perhaps a linker error, but these could be more cryptic, and aren't guaranteed to occur.</p>\n<p>Of course this warning also isn't guaranteed if the file is truncated immediately after a newline, but it could still catch some cases that other errors might miss, and gives a stronger hint to the problem.</p>\n", "OwnerUserId": "446106", "PostTypeId": "2", "Id": "8771096", "Score": "0", "CreationDate": "2012-01-07T16:19:58.593", "LastActivityDate": "2012-01-07T16:19:58.593"}, "72450": {"ParentId": "72271", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>C++03 Standard [2.1.1.2] declares:</p>\n<blockquote>\n<p id=\"so_72271_72450_0\">... If a source file that is not empty does not end in a new-line character, or ends in a new-line character\n  immediately preceded by a backslash character before any such splicing takes place, the behavior is undefined.</p>\n</blockquote>\n", "OwnerUserId": "11401", "LastEditorUserId": "560648", "LastEditDate": "2015-08-06T08:57:34.743", "Id": "72450", "Score": "21", "CreationDate": "2008-09-16T13:52:09.600", "LastActivityDate": "2015-08-06T08:57:34.743"}, "72377": {"CommentCount": "1", "CreationDate": "2008-09-16T13:46:30.503", "LastEditorUserId": "560648", "LastActivityDate": "2015-08-06T08:57:43.187", "ParentId": "72271", "LastEditDate": "2015-08-06T08:57:43.187", "OwnerDisplayName": "Vytautas Shaltenis", "PostTypeId": "2", "Id": "72377", "Score": "15", "Body": "<p>The answer for the \"obedient\" is \"because the C++03 Standard says the behavior of a program not ending in newline is undefined\" (paraphrased).</p>\n<p>The answer for the curious is here: <a href=\"http://gcc.gnu.org/ml/gcc/2001-07/msg01120.html\" rel=\"nofollow noreferrer\">http://gcc.gnu.org/ml/gcc/2001-07/msg01120.html</a>.</p>\n", "OwnerUserId": "6763"}, "13817529": {"ParentId": "72271", "CommentCount": "0", "Body": "<p>I am using c-free IDE version 5.0,in my progrm either of 'c++' or 'c' language i was getting same problem.Just <strong>at the end of the program</strong> i.e. last line of the program(after braces of function it may be main or any function),<strong>press enter</strong>-line no. will be increased by 1.then execute the same program,it will run without error.</p>\n", "OwnerUserId": "1894299", "PostTypeId": "2", "Id": "13817529", "Score": "2", "CreationDate": "2012-12-11T09:47:33.483", "LastActivityDate": "2012-12-11T09:47:33.483"}, "72271": {"CommentCount": "3", "CreationDate": "2008-09-16T13:38:42.160", "PostTypeId": "1", "AcceptedAnswerId": "72409", "LastEditorUserId": "4370109", "LastActivityDate": "2016-06-03T11:10:58.017", "AnswerCount": "12", "LastEditDate": "2016-06-03T11:10:58.017", "ViewCount": "72673", "FavoriteCount": "38", "Title": "\"No newline at end of file\" compiler warning", "Id": "72271", "Score": "164", "Body": "<p>What is the reason for the following warning in some C++ compilers?</p>\n<blockquote>\n<p id=\"so_72271_72271_0\">No newline at end of file</p>\n</blockquote>\n<p>Why should I have an empty line at the end of a source/header file?</p>\n", "Tags": "<c++><compiler-construction><warnings><c-preprocessor>", "OwnerDisplayName": "LeChuck2k"}, "31850899": {"ParentId": "72271", "CommentCount": "1", "Body": "<p>Because the behavior differs between C/C++ versions if file does not end with new-line. Especially nasty is older C++-versions, fx in C++ 03 the standard says (translation phases):</p>\n<blockquote>\n<p id=\"so_72271_31850899_0\">If a source file that is not empty does not end in a new-line\n  character, or ends in a new-line character immediately preceded by a\n  backslash character, the behavior is undefined.</p>\n</blockquote>\n<p>Undefined behavior is bad: a standard conforming compiler could do more or less what it wants here (insert malicous code or whatever) - clearly a reason for warning.</p>\n<p>While the situation is better in C++11 it is a good idea to avoid situations where the behavior is undefined in earlier versions. The C++03 specification is worse than C99 which outright prohibits such files (behavior is then defined).</p>\n", "OwnerUserId": "4498329", "PostTypeId": "2", "Id": "31850899", "Score": "1", "CreationDate": "2015-08-06T08:43:25.350", "LastActivityDate": "2015-08-06T08:43:25.350"}, "72297": {"ParentId": "72271", "CommentCount": "0", "Body": "<p>It isn't referring to a blank line, it's whether the last line (which can have content in it) is terminated with a newline.</p>\n<p>Most text editors will put a newline at the end of the last line of a file, so if the last line doesn't have one, there is a risk that the file has been truncated. However, there are valid reasons why you might not want the newline so it is only a warning, not an error.</p>\n", "OwnerUserId": "3267", "Id": "72297", "PostTypeId": "2", "OwnerDisplayName": "Leigh Caldwell", "Score": "6", "CreationDate": "2008-09-16T13:40:39.207", "LastActivityDate": "2008-09-16T13:40:39.207"}, "bq_ids": {"n4140": {"so_72271_31850899_0": {"section_id": 5313, "quality": 1.0, "length": 16}, "so_72271_8172348_0": {"section_id": 5313, "quality": 0.9285714285714286, "length": 26}, "so_72271_72450_0": {"section_id": 5313, "quality": 1.0, "length": 21}, "so_72271_72409_0": {"section_id": 5313, "quality": 0.9285714285714286, "length": 26}}, "n3337": {"so_72271_31850899_0": {"section_id": 5110, "quality": 1.0, "length": 16}, "so_72271_8172348_0": {"section_id": 5110, "quality": 0.9285714285714286, "length": 26}, "so_72271_72450_0": {"section_id": 5110, "quality": 1.0, "length": 21}, "so_72271_72409_0": {"section_id": 5110, "quality": 0.9285714285714286, "length": 26}}, "n4659": {"so_72271_31850899_0": {"section_id": 6737, "quality": 1.0, "length": 16}, "so_72271_8172348_0": {"section_id": 6737, "quality": 0.9285714285714286, "length": 26}, "so_72271_72450_0": {"section_id": 6737, "quality": 1.0, "length": 21}, "so_72271_72409_0": {"section_id": 6737, "quality": 0.9285714285714286, "length": 26}}}, "27624582": {"ParentId": "72271", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_72271_27624582_0\">Of course in practice every compiler adds a new line after the #include. Thankfully. \u2013  @mxcl</p>\n</blockquote>\n<p>not specific C/C++ but a C dialect: when using the <code>GL_ARB_shading_language_include</code> extension the glsl compiler on OS X warns you <strong>NOT</strong> about a missing  newline. So you can write a <code>MyHeader.h</code> file with a header guard which ends with <code>#endif // __MY_HEADER_H__</code> and you <strong>will</strong> lose the line after the <code>#include \"MyHeader.h\"</code> for sure.</p>\n", "OwnerUserId": "605745", "PostTypeId": "2", "Id": "27624582", "Score": "2", "CreationDate": "2014-12-23T16:47:51.763", "LastActivityDate": "2014-12-23T16:47:51.763"}, "72391": {"CommentCount": "0", "CreationDate": "2008-09-16T13:47:45.070", "LastEditorUserId": "3552770", "LastActivityDate": "2015-12-22T22:59:39.477", "ParentId": "72271", "LastEditDate": "2015-12-22T22:59:39.477", "OwnerDisplayName": "moonshadow", "PostTypeId": "2", "Id": "72391", "Score": "5", "Body": "<p><code>#include</code> will replace its line with the literal contents of the file. If the file does not end with a newline, the line containing the <code>#include</code> that pulled it in will merge with the next line.</p>\n", "OwnerUserId": "11834"}, "6773704": {"ParentId": "72271", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>That's not an error. It's just a warning.</p>\n<p>Open the file in an editor, go to the last line of the file, and hit enter to add a blank line to the end of the file.</p>\n<p>Though, besides that, you should be using <code>#include &lt;iostream&gt;</code> instead of <code>&lt;iostream.h&gt;</code>. Then put in a <code>using std::cout;</code> after it.</p>\n", "OwnerUserId": "855566", "LastEditorUserId": "887539", "LastEditDate": "2012-11-16T15:18:02.963", "Id": "6773704", "Score": "-3", "CreationDate": "2011-07-21T09:07:00.153", "LastActivityDate": "2012-11-16T15:18:02.963"}, "8172348": {"ParentId": "72271", "CommentCount": "4", "Body": "<p>The requirement that every source file end with a non-escaped newline was removed in C++11.  The specification now reads:</p>\n<blockquote>\n<p id=\"so_72271_8172348_0\">A source file that is not empty and that does not end in a new-line character, or that ends in a new-line character immediately preceded by a backslash character before any such splicing takes place, shall be processed as if an additional new-line character were appended to the file (C++11 \u00a72.2/1).</p>\n</blockquote>\n<p>A conforming compiler should no longer issue this warning (at least not when compiling in C++11 mode, if the compiler has modes for different revisions of the language specification).</p>\n", "OwnerUserId": "151292", "PostTypeId": "2", "Id": "8172348", "Score": "36", "CreationDate": "2011-11-17T18:30:36.033", "LastActivityDate": "2011-11-17T18:30:36.033"}});