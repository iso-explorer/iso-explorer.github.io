post_cb({"6226667": {"Id": "6226667", "PostTypeId": "2", "Body": "<p>You're using incomplete type as type argument to <code>std::list</code> which invokes undefined bevahior according to the C++ Standard.</p>\n<p>\u00a717\u200b.4.3.6/2 says,</p>\n<blockquote>\n<p id=\"so_6226626_6226667_0\">In particular, the effects are <strong>undefined</strong> in the following cases:<br>\n   \u2014 if <strong>an incomplete type</strong> (3.9) is <strong>used as a template argument</strong> when instantiating a template component.</br></p>\n</blockquote>\n<p>So one solution would be using pointer of incomplete type.</p>\n<pre><code>struct Connection;\nstruct User;    \n\ntypedef list&lt;Connection*&gt; Connections; //modified line\ntypedef list&lt;User*&gt; Users;             //modified line\n\nstruct User {\n    Connections::iterator connection;\n};\n\nstruct Connection {\n    Users::iterator user;\n};\n</code></pre>\n<p>This will work because <em>pointer to an incomplete type</em> is a complete type, the compiler can know the size of <em>Connection</em>* which is equal to <code>sizeof(Connection*)</code> even if <code>Connection</code> hasn't been defined yet. </p>\n", "LastEditorUserId": "415784", "LastActivityDate": "2012-04-16T04:42:11.797", "Score": "3", "CreationDate": "2011-06-03T11:42:46.547", "ParentId": "6226626", "CommentCount": "9", "OwnerUserId": "415784", "LastEditDate": "2012-04-16T04:42:11.797"}, "6226673": {"Id": "6226673", "PostTypeId": "2", "Body": "<p>Your compiler tells you exactly what the problem is, that is <code>Connection</code> is <strong>declared</strong> but not <strong>defined</strong>.</p>\n<p>You have to put the complete definition of your <code>Connection</code> type before your <code>typedef</code>.</p>\n", "LastActivityDate": "2011-06-03T11:43:35.030", "CommentCount": "0", "CreationDate": "2011-06-03T11:43:35.030", "ParentId": "6226626", "Score": "1", "OwnerUserId": "279259"}, "bq_ids": {"n4140": {"so_6226626_6226667_0": {"length": 13, "quality": 1.0, "section_id": 6324}}, "n3337": {"so_6226626_6226667_0": {"length": 13, "quality": 1.0, "section_id": 6081}}, "n4659": {"so_6226626_6226667_0": {"length": 13, "quality": 1.0, "section_id": 7834}}}, "6226626": {"ViewCount": "1093", "Body": "<p>I have such code with 2 structures:</p>\n<pre><code>#include &lt;list&gt;\n\nusing namespace std;\n\nstruct Connection;\nstruct User;    \n\ntypedef list&lt;Connection&gt; Connections;\ntypedef list&lt;User&gt; Users;\n\nstruct User {\n    Connections::iterator connection;\n};\n\nstruct Connection {\n    Users::iterator user;\n};\n</code></pre>\n<p>But when I try to compile it, the compiler (C++ Builder XE) return me such error - \"<strong>Undefined structure 'Connection'</strong>\".</p>\n<p>Can anyone help me with my problem?</p>\n<p>@ereOn,\n    struct Connection;\n    struct User;\n    struct Connection {\n        Users::iterator user;\n    };\n    typedef list Connections;\n    typedef list Users;</p>\n<pre><code>struct User {\n    Connections::iterator connection;\n};\n</code></pre>\n<p><strong>Undefined structure 'User'</strong></p>\n", "AcceptedAnswerId": "6226667", "Title": "C++ stl list two structures cross-reference", "CreationDate": "2011-06-03T11:37:53.070", "Id": "6226626", "CommentCount": "3", "LastEditDate": "2011-06-03T11:55:43.740", "PostTypeId": "1", "LastEditorUserId": "782599", "LastActivityDate": "2012-04-16T04:42:11.797", "Score": "3", "OwnerUserId": "782599", "Tags": "<c++><list><stl><struct><cross-reference>", "AnswerCount": "2"}});