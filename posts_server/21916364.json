post_cb({"bq_ids": {"n4140": {"so_21916364_21916364_0": {"length": 8, "quality": 1.0, "section_id": 3321}, "so_21916364_21916364_1": {"length": 5, "quality": 1.0, "section_id": 3321}, "so_21916364_21916364_2": {"length": 6, "quality": 1.0, "section_id": 3321}, "so_21916364_21916649_1": {"length": 5, "quality": 1.0, "section_id": 3321}, "so_21916364_21916649_0": {"length": 11, "quality": 1.0, "section_id": 3321}, "so_21916364_21916364_3": {"length": 24, "quality": 0.8275862068965517, "section_id": 3321}}, "n3337": {"so_21916364_21916364_0": {"length": 8, "quality": 1.0, "section_id": 3191}, "so_21916364_21916364_1": {"length": 5, "quality": 1.0, "section_id": 3191}, "so_21916364_21916364_2": {"length": 6, "quality": 1.0, "section_id": 3191}, "so_21916364_21916649_1": {"length": 5, "quality": 1.0, "section_id": 3191}, "so_21916364_21916649_0": {"length": 11, "quality": 1.0, "section_id": 3191}, "so_21916364_21916364_3": {"length": 24, "quality": 0.8275862068965517, "section_id": 3191}}, "n4659": {"so_21916364_21916364_0": {"length": 8, "quality": 1.0, "section_id": 4087}, "so_21916364_21916364_1": {"length": 5, "quality": 1.0, "section_id": 4087}, "so_21916364_21916364_2": {"length": 6, "quality": 1.0, "section_id": 4087}, "so_21916364_21916649_1": {"length": 5, "quality": 1.0, "section_id": 4087}, "so_21916364_21916649_0": {"length": 11, "quality": 1.0, "section_id": 4087}, "so_21916364_21916364_3": {"length": 27, "quality": 0.9310344827586207, "section_id": 4087}}}, "21916649": {"Id": "21916649", "PostTypeId": "2", "Body": "<p>You are not reading it correctly, this is how you should be reading it:</p>\n<blockquote>\n<p id=\"so_21916364_21916649_0\">the initializer expression ... has a class type (i.e., T2 is a class type) ... and can be\n  converted to an lvalue of type \u201ccv3 T3,\u201d</p>\n</blockquote>\n<p>where <em>the initializer expression</em> refers back to:</p>\n<blockquote>\n<p id=\"so_21916364_21916649_1\">[...]is initialized by an expression of type \u201ccv2 T2\u201d as follows</p>\n</blockquote>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2014-02-20T21:08:17.663", "Score": "4", "CreationDate": "2014-02-20T18:38:01.427", "ParentId": "21916364", "CommentCount": "0", "OwnerUserId": "1708801", "LastEditDate": "2014-02-20T21:08:17.663"}, "21916364": {"ViewCount": "315", "Body": "<p>Paragraph 8.5.3/5 in <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3797.pdf\" rel=\"nofollow\">n3797</a>:</p>\n<blockquote>\n<p id=\"so_21916364_21916364_0\">A reference to type \u201ccv1 T1\u201d is initialized by an expression of type\n  \u201ccv2 T2\u201d as follows:</p>\n<ul>\n<li><p id=\"so_21916364_21916364_1\">If the reference is an lvalue reference and the initializer expression</p>\n<ul>\n<li><p id=\"so_21916364_21916364_2\">is an lvalue (but is not a bit-field), and \u201ccv1 T1\u201d is reference-compatible with \u201ccv2 T2,\u201d or</p></li>\n<li><p id=\"so_21916364_21916364_3\">has a class type (i.e., T2 is a class type), where T1 is not reference-related to T2, <strong>and can be converted to an lvalue of type\n  \u201ccv3 T3,\u201d</strong> where \u201ccv1 T1\u201d is reference-compatible with \u201ccv3 T3\u201d (this\n  conversion is selected by enumerating the applicable conversion\n  functions (13.3.1.6) and choosing the best one through overload\n  resolution (13.3)),</p></li>\n</ul></li>\n</ul>\n<p id=\"so_21916364_21916364_4\">...</p>\n</blockquote>\n<p>English is not my native language, but the phrase in bold (my emphasis) seems to me to give the idea that <code>T1</code> can be converted to an lvalue of type <em>cv3 T3</em>, which I believe is not correct. According to my understanding, <code>T2</code> is the type who has to be convertible to <em>cv3 T3</em>, as the example:</p>\n<pre><code>struct B : A { operator int&amp;(); } b;    \nint&amp; ir = B();\n</code></pre>\n<p>shows. </p>\n", "AcceptedAnswerId": "21916649", "Title": "Is my interpretation correct about n3797 8.5.3/5?", "CreationDate": "2014-02-20T18:23:06.753", "Id": "21916364", "CommentCount": "3", "LastEditDate": "2014-02-21T01:46:52.160", "PostTypeId": "1", "LastEditorUserId": "1708801", "LastActivityDate": "2014-02-21T01:46:52.160", "Score": "5", "OwnerUserId": "2548699", "Tags": "<c++><c++11><reference><language-lawyer><c++14>", "AnswerCount": "2"}, "21916652": {"Id": "21916652", "PostTypeId": "2", "Body": "<p><strong>No</strong>, your interpretation is wrong.</p>\n<ul>\n<li><code>T1 =</code> the reference that is initialized</li>\n<li><code>T2 =</code> the class type</li>\n<li><code>T3 =</code> the lvalue that <code>T2</code> can be converted to</li>\n</ul>\n<p>The quoted snippet is stating that <code>T2</code> (ie. the class type) can be converted to an lvalue of type <code>T3</code> where <code>T1</code> is reference-compatible with <code>T3</code>, but that <code>T1</code> is <em>not</em> reference-related to <code>T2</code>.</p>\n", "LastEditorUserId": "701092", "LastActivityDate": "2014-02-20T18:39:09.843", "Score": "1", "CreationDate": "2014-02-20T18:38:13.713", "ParentId": "21916364", "CommentCount": "4", "OwnerUserId": "1090079", "LastEditDate": "2014-02-20T18:39:09.843"}});