post_cb({"10328619": {"Id": "10328619", "PostTypeId": "2", "Body": "<p><code>sizeof()</code> gives the size of the datatype. In your case it doesn't need to call the function to obtain the datatype.</p>\n<p>I suspect sizeof also does it's business at compile time rather than runtime...</p>\n", "LastActivityDate": "2012-04-26T06:59:35.337", "CommentCount": "0", "CreationDate": "2012-04-26T06:59:35.337", "ParentId": "10328554", "Score": "2", "OwnerUserId": "857132"}, "10328577": {"Id": "10328577", "PostTypeId": "2", "Body": "<p><code>sizeof</code> is actually an operator and it is evaluated in compile-time.</p>\n<p>The compiler can evaluate it because the size of the return type of <code>x</code> is fixed; it cannot change during program execution.</p>\n", "LastActivityDate": "2012-04-26T06:56:02.233", "CommentCount": "0", "CreationDate": "2012-04-26T06:56:02.233", "ParentId": "10328554", "Score": "4", "OwnerUserId": "318758"}, "bq_ids": {"n4140": {"so_10328554_10328628_0": {"length": 14, "quality": 0.8235294117647058, "section_id": 6076}}, "n3337": {"so_10328554_10328628_0": {"length": 14, "quality": 0.8235294117647058, "section_id": 5844}}, "n4659": {"so_10328554_10328628_0": {"length": 14, "quality": 0.8235294117647058, "section_id": 7572}}}, "10328554": {"ViewCount": "546", "Body": "<p>I happened to stumble across this piece of code.</p>\n<pre><code>int x(int a){\n    std::cout&lt;&lt;a&lt;&lt;std::endl;\n    return a + 1;\n}\n\nint main()\n{\n    std::cout&lt;&lt;sizeof(x(20))&lt;&lt;std::endl;\n    return 0;\n}\n</code></pre>\n<p>I expected it to print 20 followed 4. But it just prints 4. Why does it happen so? Isn't it incorrect to optimize out a function, that has a side effect (printing to IO/file etc)?</p>\n", "AcceptedAnswerId": "10328582", "Title": "calling sizeof on a function call skips actually calling the function!}", "CreationDate": "2012-04-26T06:54:02.747", "Id": "10328554", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2012-04-26T07:00:24.200", "Score": "6", "OwnerUserId": "524784", "Tags": "<c++><sizeof>", "AnswerCount": "5"}, "10328582": {"Id": "10328582", "PostTypeId": "2", "Body": "<p><code>sizeof</code> is a compile-time operator, and the operand is never evaluated.</p>\n", "LastActivityDate": "2012-04-26T06:56:11.900", "CommentCount": "3", "CreationDate": "2012-04-26T06:56:11.900", "ParentId": "10328554", "Score": "11", "OwnerUserId": "16102"}, "10328586": {"Id": "10328586", "PostTypeId": "2", "Body": "<p>result of sizeof is computed in compiling time in C++. so there has of function call to x(20)</p>\n", "LastActivityDate": "2012-04-26T06:56:15.603", "CommentCount": "0", "CreationDate": "2012-04-26T06:56:15.603", "ParentId": "10328554", "Score": "2", "OwnerUserId": "818399"}, "10328628": {"Id": "10328628", "PostTypeId": "2", "Body": "<p>Let me quote c++03 standard, #5.3.3.</p>\n<blockquote>\n<p id=\"so_10328554_10328628_0\">The sizeof operator yields the number of bytes in the object\n  representation of its operand. The operand is either an expression,\n  <strong>which is not evaluated</strong>, or a parenthesized type-id.</p>\n</blockquote>\n", "LastActivityDate": "2012-04-26T07:00:24.200", "CommentCount": "0", "CreationDate": "2012-04-26T07:00:24.200", "ParentId": "10328554", "Score": "2", "OwnerUserId": "1345960"}});