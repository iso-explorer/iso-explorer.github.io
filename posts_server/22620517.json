post_cb({"22620517": {"CommentCount": "3", "ViewCount": "141", "PostTypeId": "1", "LastEditorUserId": "19100", "CreationDate": "2014-03-24T21:01:50.630", "LastActivityDate": "2014-03-24T21:22:54.390", "Title": "Is std::is_signed<bool>::value guaranteed to return false?", "AcceptedAnswerId": "22620776", "LastEditDate": "2014-03-24T21:06:39.773", "Id": "22620517", "Score": "5", "Body": "<p>I know that <a href=\"http://en.cppreference.com/w/cpp/types/numeric_limits/is_signed\" rel=\"noreferrer\"><code>std::numeric_limits&lt;bool&gt;::is_signed</code></a> will always be false but is that also true for <a href=\"http://en.cppreference.com/w/cpp/types/is_signed\" rel=\"noreferrer\"><code>std::is_signed&lt;bool&gt;::value</code></a>? Thanks</p>\n", "Tags": "<c++><boolean><signed>", "OwnerUserId": "4704515", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_22620517_22620795_1": {"section_id": 44, "quality": 1.0, "length": 15}, "so_22620517_22620776_0": {"section_id": 44, "quality": 1.0, "length": 28}, "so_22620517_22620776_1": {"section_id": 26, "quality": 1.0, "length": 14}, "so_22620517_22620776_2": {"section_id": 4706, "quality": 1.0, "length": 8}}, "n3337": {"so_22620517_22620795_1": {"section_id": 41, "quality": 1.0, "length": 15}, "so_22620517_22620776_0": {"section_id": 41, "quality": 1.0, "length": 28}, "so_22620517_22620776_1": {"section_id": 23, "quality": 1.0, "length": 14}}, "n4659": {"so_22620517_22620776_1": {"section_id": 26, "quality": 1.0, "length": 14}, "so_22620517_22620776_0": {"section_id": 45, "quality": 1.0, "length": 28}, "so_22620517_22620795_1": {"section_id": 45, "quality": 1.0, "length": 15}, "so_22620517_22620776_2": {"section_id": 6103, "quality": 0.625, "length": 5}}}, "22620776": {"ParentId": "22620517", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2014-03-24T21:17:44.867", "Score": "4", "LastEditorUserId": "420683", "LastEditDate": "2014-03-24T21:22:54.390", "Id": "22620776", "OwnerUserId": "420683", "Body": "<p><code>std::is_signed</code> is defined as follows (Table 49 - Type property predicates, n3485):</p>\n<pre><code>is_arithmetic&lt;T&gt;::value &amp;&amp; T(-1) &lt; T(0)\n</code></pre>\n<p><code>bool</code> is an integral type [basic.fundamental]/7, therefore an arithmetic type [basic.fundamental]/8.</p>\n<p><code>bool(x)</code> where <code>x</code> is an <code>int</code>, uses the boolean conversion [conv.bool]/1</p>\n<blockquote>\n<p id=\"so_22620517_22620776_0\">A prvalue of arithmetic, unscoped enumeration, pointer, or pointer to member type can be converted to a prvalue of type <code>bool</code>. A zero value, null pointer value, or null member pointer value is converted to <code>false</code>; any other value is converted to <code>true</code>. [...]</p>\n</blockquote>\n<p>So we have <code>bool(-1) &lt; bool(0)</code> evaluating to <code>true &lt; false</code>, which is subject (see [expr.rel]/2) to the usual arithmetic conversions [expr]/10 =&gt; integral promotion [conv.prom]/6</p>\n<blockquote>\n<p id=\"so_22620517_22620776_1\">A prvalue of type <code>bool</code> can be converted to a prvalue of type <code>int</code>, with <code>false</code> becoming zero and <code>true</code>\n  becoming one.</p>\n</blockquote>\n<p>The comparison then reads <code>1 &lt; 0</code>, which is <code>false</code>. The the check is guaranteed to evaluate to <code>false</code>.</p>\n<hr>\n<p>In n3797, after fixing <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/lwg-defects.html#2197\" rel=\"nofollow\">LWG 2197</a>, the check is defined as follows:</p>\n<blockquote>\n<p id=\"so_22620517_22620776_2\">If <code>is_arithmetic&lt;T&gt;::value</code> is <code>true</code>, the same result as <code>integral_constant&lt;bool, T(-1) &lt; T(0)&gt;::value</code>; otherwise, <code>false</code></p>\n</blockquote>\n<p>Which has the same result in case of <code>T == bool</code>.</p>\n</hr>", "LastActivityDate": "2014-03-24T21:22:54.390"}, "22620795": {"ParentId": "22620517", "CommentCount": "1", "CreationDate": "2014-03-24T21:18:53.003", "OwnerUserId": "3150802", "PostTypeId": "2", "Id": "22620795", "Score": "1", "Body": "<p>From 20.9.4.3, Table 49:</p>\n<blockquote>\n<p id=\"so_22620517_22620795_0\">is_arithmetic::value &amp;&amp; T(-1) &lt; T(0)</p>\n</blockquote>\n<p>So what translates -1 to when converted into a bool? Naturally, 1:</p>\n<blockquote>\n<p id=\"so_22620517_22620795_1\">A zero value, null pointer value, or null member pointer value is\n  converted to false; any other value is converted to true.</p>\n</blockquote>\n<p>(4.12)</p>\n", "LastActivityDate": "2014-03-24T21:18:53.003"}});