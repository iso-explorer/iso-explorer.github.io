post_cb({"29119900": {"Id": "29119900", "PostTypeId": "2", "Body": "<p>Windows accepts both forward- and backslash as path separator. At least since Windows XP.</p>\n<p>I cannot read minds, but I could guess that forward slash was used in the name of (potential) portability and/or standards compliance because backslash in an include directive has undefined behaviour in c++03.</p>\n<p>c++03 \u00a72.8/2:</p>\n<blockquote>\n<p id=\"so_29119638_29119900_0\">If either of the characters \u2019 or \\, or either of the character sequences /* or // appears in a q-char-sequence or a h-char-sequence, or the character \" appears in a h-char-sequence, the behavior is undefined.</p>\n</blockquote>\n<p>The wording was changed in c++11 according to the draft. The behaviour is no longer undefined, but still implementation defined.</p>\n<p>c++11 draft \u00a72.9/2</p>\n<blockquote>\n<p id=\"so_29119638_29119900_1\">The appearance of either of the characters \u2019 or \\ or of either of the character sequences /* or // in a\n  q-char-sequence or an h-char-sequence is conditionally supported with implementation-defined semantics, as\n  is the appearance of the character \" in an h-char-sequence.</p>\n</blockquote>\n<p>About your bug:</p>\n<blockquote>\n<p id=\"so_29119638_29119900_2\">If I change the path to #include \"..\\this\\thread.hpp\" it finds the file</p>\n</blockquote>\n<p>Pay close attention to your two different include directives. There's more difference than the path separator. Firstly, the forward slash version doesn't refer to parent path (<code>../</code>), secondly the path is enclosed in <code>&lt; &gt;</code> which is wrong in this case since it appears that the path is intended to be relative to the current file. See <a href=\"https://stackoverflow.com/a/21594/2079303\">https://stackoverflow.com/a/21594/2079303</a> for more details.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2015-03-18T11:23:50.073", "Score": "2", "CreationDate": "2015-03-18T10:44:09.150", "ParentId": "29119638", "CommentCount": "3", "OwnerUserId": "2079303", "LastEditDate": "2017-05-23T12:09:31.693"}, "bq_ids": {"n4140": {"so_29119638_29119900_1": {"length": 13, "quality": 0.8125, "section_id": 5330}, "so_29119638_29119900_0": {"length": 9, "quality": 0.6923076923076923, "section_id": 5330}}, "n3337": {"so_29119638_29119900_0": {"length": 9, "quality": 0.6923076923076923, "section_id": 5127}, "so_29119638_29119900_1": {"length": 15, "quality": 0.9375, "section_id": 5127}}, "n4659": {"so_29119638_29119900_0": {"length": 9, "quality": 0.6923076923076923, "section_id": 6751}, "so_29119638_29119900_1": {"length": 12, "quality": 0.75, "section_id": 6751}}}, "29120357": {"Id": "29120357", "PostTypeId": "2", "Body": "<p>Error C1083 is \"cannot open include file\", which typically means that the compiler couldn't find the file.</p>\n<pre><code>#include &lt;this/thread.hpp&gt;\n</code></pre>\n<p>Is there a directory called '<strong>this</strong>' anywhere in your include directory paths?  That is far more likely to be the problem than the forward slash.</p>\n", "LastActivityDate": "2015-03-18T11:04:27.163", "CommentCount": "2", "CreationDate": "2015-03-18T11:04:27.163", "ParentId": "29119638", "Score": "0", "OwnerUserId": "1916711"}, "29119638": {"ViewCount": "1254", "Body": "<p>I got thousands of files that have that include files with forward slashes</p>\n<pre><code>#include &lt;this/thread.hpp&gt;\n</code></pre>\n<p>Why?  the original program was written in VS 2008. </p>\n<p>This causes a fatal error C1083</p>\n<p>If I change the path to <code>#include \"..\\this\\thread.hpp\"</code> it finds the file</p>\n", "AcceptedAnswerId": "29119900", "Title": "Why Path in VS C++ contains forward slash not backslash?", "CreationDate": "2015-03-18T10:31:32.027", "Id": "29119638", "CommentCount": "2", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2015-03-18T11:11:37.243", "LastEditorUserId": "4676527", "LastActivityDate": "2017-03-10T19:39:22.320", "Score": "1", "OwnerUserId": "4676527", "Tags": "<c++><backslash>", "AnswerCount": "3"}, "42726472": {"Id": "42726472", "PostTypeId": "2", "Body": "<p>While not C++ -specific, it is where using <code>\\</code> is an escape character, at least when it is within the <code>&lt;...&gt;</code> tags, such that if you really wanted to specify it as a path separator, you would need to type <code>\\\\</code>.  To avoid doing double-backslashes every time you want to have only one type of backslash, and because it acts the same way, you can apply the same ability to specify a path separation between folders if you simply use <code>/</code>.  This simplicity cuts down on confusion to someone that doesn't understand escaping, so that they do not take an escaped path literally and put it into an Explorer address bar and get confused when it does not take them to the right place.  </p>\n<p>Note that if it requires <code>&lt;...&gt;</code> tags, you are specifying a system file, while the <code>\"...\"</code> statement was to include a locally-generated one.  These syntaxes are different in their escaping requirements.</p>\n", "LastActivityDate": "2017-03-10T19:39:22.320", "CommentCount": "0", "CreationDate": "2017-03-10T19:39:22.320", "ParentId": "29119638", "Score": "0", "OwnerUserId": "1181535"}});