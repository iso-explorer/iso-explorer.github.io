post_cb({"bq_ids": {"n4140": {"so_34071187_34071365_2": {"length": 17, "quality": 0.6538461538461539, "section_id": 435}, "so_34071187_34071365_3": {"length": 17, "quality": 1.0, "section_id": 435}}, "n3337": {"so_34071187_34071365_2": {"length": 25, "quality": 0.9615384615384616, "section_id": 427}, "so_34071187_34071365_3": {"length": 17, "quality": 1.0, "section_id": 427}}, "n4659": {"so_34071187_34071365_2": {"length": 17, "quality": 0.6538461538461539, "section_id": 454}, "so_34071187_34071365_3": {"length": 16, "quality": 0.9411764705882353, "section_id": 454}}}, "34071187": {"ViewCount": "56", "Body": "<p>Why in C++ when derived class object is created, then it automatically calls the parent class constructor with no argument?     </p>\n", "Title": "Why derived class object automatically calls the parent class constructor with no argument?", "CreationDate": "2015-12-03T16:26:33.427", "LastActivityDate": "2015-12-03T16:43:04.107", "CommentCount": "3", "LastEditDate": "2015-12-03T16:43:04.107", "PostTypeId": "1", "LastEditorUserId": "4540773", "Id": "34071187", "Score": "-1", "OwnerUserId": "5244474", "Tags": "<c++>", "AnswerCount": "1"}, "34071365": {"Id": "34071365", "PostTypeId": "2", "Body": "<p>Question:</p>\n<blockquote>\n<p id=\"so_34071187_34071365_0\">Why in C++ when derived class object is created, then it automatically calls the parent class constructor with no argument?</p>\n</blockquote>\n<p>Answer:  Because the standard says so (emphasis mine).</p>\n<blockquote>\n<p id=\"so_34071187_34071365_1\"><strong>12.6.2 Initializing bases and members</strong></p>\n<p id=\"so_34071187_34071365_2\">8 In a non-delegating constructor, if a given non-static data member or base class is not designated by a <em>mem-initializer-id</em> (including the case where there is no <em>mem-initializer-list</em> because the constructor has no <em>ctor-initializer</em>) and the entity is not a virtual base class of an abstract class (10.4), then</p>\n<p id=\"so_34071187_34071365_3\">\u2014 if the entity is a non-static data member that has a <em>brace-or-equal-initializer</em>, the entity is initialized as specified in 8.5;<br>\n  \u2014 otherwise, if the entity is a variant member (9.5), no initialization is performed;<br>\n  \u2014 otherwise, <strong>the entity is default-initialized</strong> (8.5).</br></br></p>\n</blockquote>\n", "LastActivityDate": "2015-12-03T16:35:28.097", "CommentCount": "0", "CreationDate": "2015-12-03T16:35:28.097", "ParentId": "34071187", "Score": "2", "OwnerUserId": "434551"}});