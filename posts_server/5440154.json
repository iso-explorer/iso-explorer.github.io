post_cb({"bq_ids": {"n4140": {"so_5440154_5440235_0": {"length": 26, "quality": 1.0, "section_id": 369}}, "n3337": {"so_5440154_5440235_0": {"length": 26, "quality": 1.0, "section_id": 359}}, "n4659": {"so_5440154_5440235_0": {"length": 24, "quality": 0.9230769230769231, "section_id": 381}}}, "5440161": {"Id": "5440161", "PostTypeId": "2", "Body": "<p>When you create the netlist you are not passing any arguments to the constructor which means you are calling a default constructor. However you didn't define a default constructor. You only created a constructor taking a different netlist as a parameter (the copy constructor) here:</p>\n<pre><code>netlist(const netlist &amp;);\n</code></pre>\n<p>You should define a default constructor like this:</p>\n<pre><code>netlist();\n</code></pre>\n<p>Note that had you not defined any constructor, the compiler would have added default ones but since you added the copy constructor, you have to define all of them yourself.</p>\n", "LastEditorUserId": "622647", "LastActivityDate": "2011-03-26T03:32:04.790", "Score": "6", "CreationDate": "2011-03-26T03:17:33.427", "ParentId": "5440154", "CommentCount": "6", "OwnerUserId": "622647", "LastEditDate": "2011-03-26T03:32:04.790"}, "5440154": {"ViewCount": "4496", "Body": "<p>I require help with respect to class construction. In my class, I have used a copy constructor and operator= to prevent the compiler from creating them. In my main program, when I try to create an instance of the class, I get an error saying \"No default constructor exists for the class\".</p>\n<p>What could be the problem?</p>\n<p>This is a snippet of my code.</p>\n<pre><code>class netlist {\n    netlist(const netlist &amp;);\n    netlist &amp;operator=(const netlist &amp;);\n    std::map&lt;std::string, net *&gt; nets_;\n}; // class netlist\n</code></pre>\n<p>In my main function I am using:</p>\n<pre><code>netlist nl;\n</code></pre>\n<p>This is where I get the error. I am providing the copy constructor declaration, so they should not be a problem.</p>\n<p>I would appreciate any help with this. Thanks in advance.</p>\n", "AcceptedAnswerId": "5440167", "Title": "Default constructor C++ error", "CreationDate": "2011-03-26T03:14:51.430", "Id": "5440154", "CommentCount": "1", "LastEditDate": "2011-03-26T03:18:29.303", "PostTypeId": "1", "LastEditorUserId": "622647", "LastActivityDate": "2012-04-10T03:46:23.283", "Score": "2", "OwnerUserId": "659141", "Tags": "<c++><constructor>", "AnswerCount": "3"}, "5440167": {"Id": "5440167", "PostTypeId": "2", "Body": "<p>There are two problems with the code -</p>\n<ol>\n<li>class members are <strong>private</strong> by default.</li>\n<li><code>\"I get an error saying \"No default constructor exists for the class\" \".</code></li>\n</ol>\n<p>Because if any kind of constructor is provided as a part of class declaration( <code>netlist</code> class has a copy constructor in this case), default constructor( i.e., constructor with no arguments ) is not provided by compiler.</p>\n<pre><code>netlist nl;  // And this invokes call to the default constructor and so\n             // the error\n</code></pre>\n<hr>\n<p><strong>netlist.h</strong> </p>\n<pre><code>class netlist {\n\npublic: // Added\n    netlist(); // This just a declaration. Should provide the definition.\n    netlist(const netlist &amp;);\n    netlist &amp;operator=(const netlist &amp;);\n    std::map&lt;std::string, net *&gt; nets_;\n}; // class netlist\n</code></pre>\n<p><strong>netlist.cpp</strong></p>\n<pre><code>netlist::netlist()\n{\n       // .....\n}\n\n// Other definitions\n</code></pre>\n</hr>", "LastEditorUserId": "528724", "LastActivityDate": "2011-03-26T03:34:38.887", "Score": "6", "CreationDate": "2011-03-26T03:19:18.637", "ParentId": "5440154", "CommentCount": "1", "OwnerUserId": "528724", "LastEditDate": "2011-03-26T03:34:38.887"}, "5440235": {"Id": "5440235", "PostTypeId": "2", "Body": "<p>section <code>[class.ctor]</code> of the standard says (wording from draft n3242):</p>\n<blockquote>\n<p id=\"so_5440154_5440235_0\">A <em>default</em> constructor for a class <code>X</code> is a constructor of class <code>X</code> that can be called without an argument.  If there is no user-declared constructor for class <code>X</code>, a constructor having no parameters is implicitly declared as defaulted (8.4).  An implicitly-declared default constructor is an <code>inline public</code> member of its class.</p>\n</blockquote>\n<p>You have a user-declared constructor:</p>\n<pre><code>netlist(const netlist &amp;);\n</code></pre>\n<p>thus the compiler does not provide a default constructor.</p>\n", "LastActivityDate": "2011-03-26T03:42:28.443", "CommentCount": "0", "CreationDate": "2011-03-26T03:42:28.443", "ParentId": "5440154", "Score": "0", "OwnerUserId": "103167"}});