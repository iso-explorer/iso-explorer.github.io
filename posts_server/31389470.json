post_cb({"bq_ids": {"n4140": {"so_31389470_31389692_0": {"length": 6, "quality": 1.0, "section_id": 6682}}, "n3337": {"so_31389470_31389692_0": {"length": 6, "quality": 1.0, "section_id": 6437}}, "n4659": {"so_31389470_31389692_0": {"length": 6, "quality": 1.0, "section_id": 8157}}}, "31389470": {"ViewCount": "2230", "Body": "<p>I have the following code:</p>\n<pre><code>#include &lt;iostream&gt;\n\nclass BaseClass {\n protected:\n static int x;\n};\n\nint BaseClass::x;\n\nclass DerivedA: public BaseClass {\n public:\n     DerivedA() {\n        x = 3;\n     }\n};    \n\nclass DerivedB: public BaseClass {\n public:\n     DerivedB() {\n        std::cout &lt;&lt; DerivedA::x;\n     }\n};\n\nint main(int argc, char* argv[]) {\n        DerivedB b;\n}\n</code></pre>\n<p>Compiling with g++ (<code>g++ classtest.cpp</code>) I receive the following error:</p>\n<blockquote>\n<p id=\"so_31389470_31389470_0\">classtest.cpp: In constructor \u2018DerivedB::DerivedB()\u2019:<br>\n  classtest.cpp:9:5: error: \u2018int BaseClass::x\u2019 is protected<br>\n   int BaseClass::x;<br>\n           ^\n  classtest.cpp:25:32: error: within this context<br>\n           std::cout &lt;&lt; DerivedA::x;</br></br></br></br></p>\n</blockquote>\n<p>When I'm compiling with clang++ (<code>clang++ classtest.cpp</code>) there's no error.</p>\n<p>Why is g++ returning the compilation error?</p>\n<p>I use g++ version 5.1.0 and clang++ version 3.6.1</p>\n", "AcceptedAnswerId": "31389692", "Title": "g++ compilation error \"... is protected from within this context\" while there's no error with clang", "CreationDate": "2015-07-13T17:12:40.283", "Id": "31389470", "CommentCount": "7", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2015-08-11T14:31:39.230", "LastEditorUserId": "3218828", "LastActivityDate": "2015-08-11T14:31:39.230", "Score": "19", "OwnerUserId": "2606757", "Tags": "<c++><inheritance><gcc><clang>", "AnswerCount": "1"}, "31389692": {"Id": "31389692", "PostTypeId": "2", "Body": "<p>GCC bug. [class.access.base]/p5:</p>\n<blockquote>\n<p id=\"so_31389470_31389692_0\">A member <code>m</code> is accessible at the point <code>R</code> when named in class <code>N</code> if</p>\n<ul>\n<li><code>m</code> as a member of <code>N</code> is public, or</li>\n<li><code>m</code> as a member of <code>N</code> is private, and <code>R</code> occurs in a member or friend of class <code>N</code>, or</li>\n<li><code>m</code> as a member of <code>N</code> is protected, and <code>R</code> occurs in a member or friend of class <code>N</code>, or in a member of a class <code>P</code> derived from <code>N</code>,\n  where <code>m</code> as a member of <code>P</code> is public, private, or protected, or</li>\n<li>there exists a base class <code>B</code> of <code>N</code> that is accessible at <code>R</code>, and <code>m</code> is accessible at <code>R</code> when named in class <code>B</code>.</li>\n</ul>\n</blockquote>\n<p><code>N</code> is <code>DerivedA</code>, <code>m</code> is <code>x</code>, <code>R</code> is the constructor of <code>DerivedB</code>. There exists a base class <code>BaseClass</code> of <code>DerivedA</code> that is accessible at <code>R</code>, and <code>x</code> named in class <code>BaseClass</code> (i.e., <code>BaseClass::x</code>) is plainly accessible at <code>R</code>, so by the fourth bullet point, <code>DerivedA::x</code> is accessible at <code>R</code>.</p>\n", "LastActivityDate": "2015-07-13T17:25:38.593", "CommentCount": "6", "CreationDate": "2015-07-13T17:25:38.593", "ParentId": "31389470", "Score": "17", "OwnerUserId": "2756719"}});