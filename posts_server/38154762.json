post_cb({"38155129": {"Id": "38155129", "PostTypeId": "2", "Body": "<p>You tried to initialize a pointer with an <code>int</code>. Many implicit conversions, including integer-to-pointer conversions, don't happen in non-type template parameters.  </p>\n<p>The  <a href=\"http://en.cppreference.com/w/cpp/language/template_parameters#Template_non-type_arguments\" rel=\"nofollow\">cppreference summary</a> of the behaviour in C++14 for non-template parameters of pointer to object type is: </p>\n<blockquote>\n<p id=\"so_38154762_38155129_0\">For pointers to objects, the template arguments have to designate the address of an object with static storage duration and a linkage (either internal or external), or a constant expression that evaluates to the appropriate null pointer or std::nullptr_t value.</p>\n</blockquote>\n<p>So the code could be:</p>\n<pre><code>template &lt;void* ptr = nullptr&gt;\nvoid f();\n</code></pre>\n<p><em>Footnote:</em> it seems unclear whether <code>void *</code> is allowed as a parameter type, but compilers accept the above code. </p>\n", "LastEditorUserId": "1505939", "LastActivityDate": "2016-07-02T00:19:21.900", "Score": "1", "CreationDate": "2016-07-01T23:49:25.433", "ParentId": "38154762", "CommentCount": "6", "OwnerUserId": "1505939", "LastEditDate": "2016-07-02T00:19:21.900"}, "bq_ids": {"n4140": {"so_38154762_38154792_0": {"length": 8, "quality": 1.0, "section_id": 57}, "so_38154762_38155129_0": {"length": 13, "quality": 0.5416666666666666, "section_id": 87}}, "n3337": {"so_38154762_38154792_0": {"length": 8, "quality": 1.0, "section_id": 52}, "so_38154762_38155129_0": {"length": 13, "quality": 0.5416666666666666, "section_id": 82}}, "n4659": {"so_38154762_38154792_0": {"length": 8, "quality": 1.0, "section_id": 59}}}, "38154792": {"Id": "38154792", "PostTypeId": "2", "Body": "<p>Template parameters of type <code>void*</code> are not allowed. See [temp.param]/4 in the standard, also summarized at <a href=\"http://en.cppreference.com/w/cpp/language/template_parameters#Non-type_template_parameter\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/language/template_parameters#Non-type_template_parameter</a></p>\n<blockquote>\n<p id=\"so_38154762_38154792_0\">A non-type <em>template-parameter</em> shall have one of the following (optionally <em>cv-qualified</em>) types:</p>\n<ul>\n<li>integral or enumeration type,</li>\n<li>pointer to object or pointer to function,</li>\n<li>lvalue reference to object or lvalue reference to function,</li>\n<li>pointer to member,</li>\n<li><code>std::nullptr_t</code>.</li>\n</ul>\n</blockquote>\n<p>Since <code>void</code> is not an object or function type, <code>void*</code> is not among the permitted types.</p>\n<p><em>Addendum:</em> A <code>void*</code> value known at compile time wouldn't be very useful. It's not possible to examine its value at compile time since <code>reinterpret_cast</code> is not allowed in constant expressions; nor is it possible to convert it to <code>T*</code> for some object type <code>T</code> at compile time.</p>\n", "LastEditorUserId": "481267", "LastActivityDate": "2016-07-01T23:17:40.070", "Score": "8", "CreationDate": "2016-07-01T22:53:43.303", "ParentId": "38154762", "CommentCount": "16", "OwnerUserId": "481267", "LastEditDate": "2016-07-01T23:17:40.070"}, "38154762": {"ViewCount": "365", "Body": "<p>Why does the following code fail to compile?  Even though it is legal to do <code>void* ptr = 0;</code></p>\n<pre><code>template &lt;void* ptr = 0&gt;\nvoid func();\n\nint main() {\n    func();\n    return 0;\n}\n</code></pre>\n<p>I ask because I found that a very trusted source did something similar and it failed to compile on my machine</p>\n<p><strong>NOTE</strong> Should have posted the compiler error along with my question so here it is</p>\n<pre><code>so_test.cpp:1:23: error: null non-type template argument must be cast to template parameter type 'void *'\ntemplate &lt;void* ptr = 0&gt;\n                      ^\n                      static_cast&lt;void *&gt;( )\nso_test.cpp:1:17: note: template parameter is declared here\ntemplate &lt;void* ptr = 0&gt;\n                ^\nso_test.cpp:5:5: error: no matching function for call to 'func'\n    func();\n    ^~~~\nso_test.cpp:2:6: note: candidate template ignored: substitution failure [with ptr = nullptr]: null non-type template argument must be cast to template parameter type 'void *'\nvoid func();\n     ^\n</code></pre>\n", "Title": "Why using 0 as default non type template parameter for void* is not allowed", "CreationDate": "2016-07-01T22:49:28.567", "LastActivityDate": "2016-07-02T00:19:21.900", "CommentCount": "2", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2016-07-01T22:54:20.777", "LastEditorUserId": "5501675", "Id": "38154762", "Score": "7", "OwnerUserId": "5501675", "Tags": "<c++><templates><c++11><c++14><void>", "AnswerCount": "2"}});