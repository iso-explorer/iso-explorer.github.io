post_cb({"27642882": {"CommentCount": "13", "ViewCount": "306", "CreationDate": "2014-12-24T22:59:15.180", "LastActivityDate": "2014-12-27T13:50:30.930", "Title": "Why does \"ctor() = default\" change behavior when other constructors are present?", "AcceptedAnswerId": "27643146", "PostTypeId": "1", "Id": "27642882", "Score": "11", "Body": "<p>Why does</p>\n<pre><code>struct wrapper\n{\n    explicit wrapper(void *);\n    wrapper() = default;\n    int v;\n};\n\nint main() { return wrapper().v; }  // You should run this in Debug mode\n</code></pre>\n<p>return <code>0xCCCCCCCC</code>, whereas</p>\n<pre><code>struct wrapper { wrapper() = default; int v; };\nint main() { return wrapper().v; }\n</code></pre>\n<p>and</p>\n<pre><code>struct wrapper { int v; };\nint main() { return wrapper().v; }\n</code></pre>\n<p>both return <code>0</code>?</p>\n", "Tags": "<c++><visual-c++><constructor><default-constructor><visual-c++-2013>", "OwnerUserId": "541686", "AnswerCount": "2"}, "27643146": {"ParentId": "27642882", "CommentCount": "8", "Body": "<p>During <em>value-initialization</em>, if <code>T</code> is a class type without a user-provided or deleted default-constructor, then the object is <em>zero-initialized</em> (\u00a78.5/8.2). This is indeed the case with <code>wrapper</code>.</p>\n<p>Your first example matches the third case for zero-initialization (\u00a78.5/6.1, emphasis mine)</p>\n<blockquote>\n<blockquote>\n<p id=\"so_27642882_27643146_5\">\u2014 if <code>T</code> is a scalar type (3.9), the object is initialized to the value obtained by converting the integer literal\n    <code>0</code> (zero) to <code>T</code>;</p>\n<p id=\"so_27642882_27643146_6\">\u2014 <strong>if <code>T</code> is a (possibly cv-qualified) non-union class type, each non-static data member and each base-class sub-object is zero-initialized and padding is initialized to zero bits;</strong></p>\n<p id=\"so_27642882_27643146_7\">\u2014 if <code>T</code> is a (possibly cv-qualified) union type, the object\u2019s first non-static named data member is zero-initialized and padding is initialized to zero bits;</p>\n<p id=\"so_27642882_27643146_8\">\u2014 if T is an array type, each element is zero-initialized</p>\n<p id=\"so_27642882_27643146_9\">\u2014 if T is a reference type, no initialization is performed</p>\n</blockquote>\n</blockquote>\n<p>So in your first example, <code>v</code> should be zero-initialized. This looks like a bug.</p>\n<p>In your second and third example you no longer have a user-provided constructor, but you do have a default-constructor that isn't user-provided or deleted so your example still falls into the third case for zero-initialization, which is to zero-initialize each non-static data member. VS is correct there.</p>\n", "OwnerUserId": "701092", "PostTypeId": "2", "Id": "27643146", "Score": "4", "CreationDate": "2014-12-24T23:49:00.357", "LastActivityDate": "2014-12-24T23:49:00.357"}, "bq_ids": {"n4140": {"so_27642882_27643146_2": {"section_id": 3285, "quality": 1.0, "length": 15}, "so_27642882_27643207_2": {"section_id": 3285, "quality": 0.9444444444444444, "length": 17}, "so_27642882_27643146_3": {"section_id": 3285, "quality": 1.0, "length": 5}, "so_27642882_27643146_9": {"section_id": 3285, "quality": 1.0, "length": 4}, "so_27642882_27643146_7": {"section_id": 3285, "quality": 1.0, "length": 15}, "so_27642882_27643207_3": {"section_id": 3285, "quality": 0.9090909090909091, "length": 10}, "so_27642882_27643146_6": {"section_id": 3285, "quality": 1.0, "length": 17}, "so_27642882_27643146_8": {"section_id": 3285, "quality": 1.0, "length": 5}, "so_27642882_27643207_0": {"section_id": 3290, "quality": 0.875, "length": 7}, "so_27642882_27643146_4": {"section_id": 3285, "quality": 1.0, "length": 4}, "so_27642882_27643146_0": {"section_id": 3285, "quality": 1.0, "length": 10}, "so_27642882_27643146_5": {"section_id": 3285, "quality": 1.0, "length": 10}, "so_27642882_27643146_1": {"section_id": 3285, "quality": 1.0, "length": 17}, "so_27642882_27643207_1": {"section_id": 3287, "quality": 0.9375, "length": 15}}, "n3337": {"so_27642882_27643146_2": {"section_id": 3155, "quality": 1.0, "length": 15}, "so_27642882_27643207_2": {"section_id": 3155, "quality": 0.9444444444444444, "length": 17}, "so_27642882_27643146_3": {"section_id": 3155, "quality": 1.0, "length": 5}, "so_27642882_27643146_9": {"section_id": 3155, "quality": 1.0, "length": 4}, "so_27642882_27643146_7": {"section_id": 3155, "quality": 1.0, "length": 15}, "so_27642882_27643207_3": {"section_id": 3155, "quality": 0.5454545454545454, "length": 6}, "so_27642882_27643146_6": {"section_id": 3155, "quality": 1.0, "length": 17}, "so_27642882_27643146_8": {"section_id": 3155, "quality": 1.0, "length": 5}, "so_27642882_27643207_0": {"section_id": 3160, "quality": 0.875, "length": 7}, "so_27642882_27643146_4": {"section_id": 3155, "quality": 1.0, "length": 4}, "so_27642882_27643146_0": {"section_id": 3155, "quality": 0.6, "length": 6}, "so_27642882_27643146_5": {"section_id": 3155, "quality": 0.6, "length": 6}, "so_27642882_27643146_1": {"section_id": 3155, "quality": 1.0, "length": 17}, "so_27642882_27643207_1": {"section_id": 3157, "quality": 0.625, "length": 10}}, "n4659": {"so_27642882_27643146_2": {"section_id": 4047, "quality": 1.0, "length": 15}, "so_27642882_27643207_2": {"section_id": 4047, "quality": 0.8888888888888888, "length": 16}, "so_27642882_27643146_9": {"section_id": 4047, "quality": 1.0, "length": 4}, "so_27642882_27643146_3": {"section_id": 4047, "quality": 1.0, "length": 5}, "so_27642882_27643146_7": {"section_id": 4047, "quality": 1.0, "length": 15}, "so_27642882_27643207_3": {"section_id": 4047, "quality": 0.9090909090909091, "length": 10}, "so_27642882_27643146_6": {"section_id": 4047, "quality": 0.9411764705882353, "length": 16}, "so_27642882_27643146_8": {"section_id": 4047, "quality": 1.0, "length": 5}, "so_27642882_27643207_0": {"section_id": 4052, "quality": 0.875, "length": 7}, "so_27642882_27643207_1": {"section_id": 4049, "quality": 0.9375, "length": 15}, "so_27642882_27643146_0": {"section_id": 4047, "quality": 1.0, "length": 10}, "so_27642882_27643146_5": {"section_id": 4047, "quality": 1.0, "length": 10}, "so_27642882_27643146_1": {"section_id": 4047, "quality": 0.9411764705882353, "length": 16}, "so_27642882_27643146_4": {"section_id": 4047, "quality": 1.0, "length": 4}}}, "27643207": {"ParentId": "27642882", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>This does appear to be a bug in MSVC.  In all three cases <code>wrapper</code> has no user-provided default constructor, so initialization with <code>wrapper()</code> invokes:</p>\n<p>(All citations from <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3690.pdf\" rel=\"nofollow\">n3690</a>)</p>\n<blockquote>\n<p id=\"so_27642882_27643207_0\">(8.5/11) An object whose initializer is an empty set of parentheses, i.e., (), shall be value-initialized.</p>\n</blockquote>\n<p>(thanks to dyp), this will result in zero-intialization of <code>int v</code></p>\n<p>Initialization then refers us to the rule:</p>\n<blockquote>\n<p id=\"so_27642882_27643207_1\">(8.5/8) if T is a (possibly cv-qualified) class type without a user-provided or deleted default constructor, then the object is zero-initialized and the semantic constraints for default-initialization are checked.</p>\n</blockquote>\n<p>The zero initialization rules state:</p>\n<blockquote>\n<p id=\"so_27642882_27643207_2\">(8.5/6) if T is a (possibly cv-qualified) non-union class type, each non-static data member and each base-class subobject is zero-initialized and padding is initialized to zero bits</p>\n</blockquote>\n<p><code>int v</code> being a data member of <code>wrapper</code> is zero initialiazed itself according to:</p>\n<blockquote>\n<p id=\"so_27642882_27643207_3\">(8.5/6) if T is a scalar type (3.9), the object is initialized to the value obtained by converting the integer literal 0 (zero) to T</p>\n</blockquote>\n<p>Which is not the behavior you observe.</p>\n", "OwnerUserId": "1013719", "LastEditorUserId": "1013719", "LastEditDate": "2014-12-25T02:04:11.663", "Id": "27643207", "Score": "4", "CreationDate": "2014-12-25T00:00:36.033", "LastActivityDate": "2014-12-25T02:04:11.663"}});