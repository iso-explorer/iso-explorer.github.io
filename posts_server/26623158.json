post_cb({"bq_ids": {"n4140": {"so_26623158_26623158_0": {"length": 24, "quality": 0.96, "section_id": 452}}, "n3337": {"so_26623158_26623158_0": {"length": 24, "quality": 0.96, "section_id": 443}}, "n4659": {"so_26623158_26623158_0": {"length": 24, "quality": 0.96, "section_id": 475}}}, "26623158": {"ViewCount": "60", "Body": "<p>The Standard provides an example regarding to the a move constructor. There is what it says:</p>\n<blockquote>\n<p id=\"so_26623158_26623158_0\">A non-template constructor for class <code>X</code> is a move constructor if its\n  first parameter is of type <code>X&amp;&amp;</code>, <code>const X&amp;&amp;</code>, <code>volatile X&amp;&amp;</code>, or <code>const</code>\n<code>volatile X&amp;&amp;</code>, and either there are no other parameters or else all\n  other parameters have default arguments (8.3.6).</p>\n</blockquote>\n<p>I was trying to run some an experiments with an example the Stadard provides:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;limits&gt;\n\n\nstruct Y {\n    Y(){ std::cout &lt;&lt; \"Y()\" &lt;&lt; std::endl; };\n    Y(const Y&amp;){ std::cout &lt;&lt; \"Y(const Y&amp;)\" &lt;&lt; std::endl; };\n    Y(Y&amp;&amp;){ std::cout &lt;&lt; \"Y(const Y&amp;&amp;)\" &lt;&lt; std::endl; };\n};\n\nY f(int)\n{\n    return Y();\n}\n\nY d(f(1)); // calls Y(Y&amp;&amp;)\nY e = d; // calls Y(const Y&amp;)\n\nint main(){ }\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/2d1cfa278067b51c\" rel=\"nofollow noreferrer\"><strong>DEMO</strong></a></p>\n<p>But instead copy constructor was called. Why that?</p>\n", "AcceptedAnswerId": "26623221", "Title": "Why isn't move constructor called?", "CreationDate": "2014-10-29T05:10:49.537", "Id": "26623158", "CommentCount": "6", "LastEditDate": "2017-04-05T14:33:33.963", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "LastEditorUserId": "1033581", "LastActivityDate": "2017-04-05T14:33:33.963", "Score": "0", "Tags": "<c++>", "AnswerCount": "1"}, "26623221": {"Id": "26623221", "PostTypeId": "2", "Body": "<p>The copy-constructor is invoked by the line:</p>\n<pre><code>Y e = d;\n</code></pre>\n<p>This cannot be a move operation , because <code>d</code> is an lvalue. This is why you see the copy constructor call in your output.</p>\n<p>For the line <code>Y d(f(1))</code>, <code>d</code> is moved from the rvalue <code>f(1)</code> (which was in turn moved from <code>Y()</code>), however <a href=\"https://stackoverflow.com/questions/12953127/what-are-copy-elision-and-return-value-optimization\">copy elision</a> means that the output of both of these move-constructors may be suppressed.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2014-10-29T05:17:17.940", "Score": "2", "CreationDate": "2014-10-29T05:17:17.940", "ParentId": "26623158", "CommentCount": "2", "OwnerUserId": "1505939", "LastEditDate": "2017-05-23T12:17:32.843"}});