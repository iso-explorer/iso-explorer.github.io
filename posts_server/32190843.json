post_cb({"bq_ids": {"n4140": {"so_32190843_32190843_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 712}}, "n3337": {"so_32190843_32190843_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 701}}, "n4659": {"so_32190843_32190843_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 741}}}, "32193070": {"Id": "32193070", "PostTypeId": "2", "Body": "<p>Table 28 specifies one of the requirements of an allocator is that <code>deallocate()</code> \"Does not throw exceptions\". That is how the standard can make the assertion about <code>erase()</code>, <code>clear()</code>, <code>pop_back()</code> and <code>pop_front()</code> </p>\n", "LastEditorUserId": "12711", "LastActivityDate": "2015-08-24T23:08:46.163", "Score": "6", "CreationDate": "2015-08-24T23:02:23.980", "ParentId": "32190843", "CommentCount": "0", "OwnerUserId": "12711", "LastEditDate": "2015-08-24T23:08:46.163"}, "32190843": {"ViewCount": "316", "Body": "<p>C++11 \u00a723.2.1.10 specifies:</p>\n<blockquote>\n<p id=\"so_32190843_32190843_0\">Unless otherwise specified all container types defined\n  in this Clause meet the following additional requirements:</p>\n<ul>\n<li>if an exception is thrown by an insert() or emplace() function while    inserting a single element, that function has no effects.</li>\n<li>no erase() , clear() , pop_back() or pop_front() function throws an    exception.</li>\n</ul>\n</blockquote>\n<p>Regarding the first bullet point, How does the container guarantee that?\nThe constructor for <code>T</code> might have side-effects. Should it not be \"<strong><em>has no effect on the container</em></strong>\"</p>\n<p>Regarding the second bullet point, This normally calls <code>allocator::deallocate(T*,size_t)</code> which is not <code>noexcept</code>. Why should eventual exceptions be masked away?</p>\n", "AcceptedAnswerId": "32193070", "Title": "Exception Requirements on Standard Containers", "CreationDate": "2015-08-24T20:06:50.943", "Id": "32190843", "CommentCount": "13", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2015-08-28T15:27:02.940", "LastEditorUserId": "3202093", "LastActivityDate": "2015-08-28T15:27:02.940", "Score": "16", "OwnerUserId": "3202093", "Tags": "<c++><c++11><language-lawyer>", "AnswerCount": "1"}});