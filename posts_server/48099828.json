post_cb({"bq_ids": {"n4140": {"so_48099828_48099865_0": {"length": 12, "quality": 1.0, "section_id": 5520}}, "n3337": {"so_48099828_48099865_0": {"length": 12, "quality": 1.0, "section_id": 5306}}, "n4659": {"so_48099828_48099865_0": {"length": 12, "quality": 1.0, "section_id": 6955}}}, "48099865": {"Id": "48099865", "PostTypeId": "2", "Body": "<p>Yes, but it's actually the first <code>extern \"C\"</code> that's ignored. To quote the standard [dcl.link]:</p>\n<blockquote>\n<p id=\"so_48099828_48099865_0\">Linkage specifications nest. When linkage specifications nest, the\n  innermost one determines the language linkage.</p>\n</blockquote>\n", "LastActivityDate": "2018-01-04T16:47:10.243", "Score": "21", "CreationDate": "2018-01-04T16:47:10.243", "ParentId": "48099828", "CommentCount": "6", "OwnerUserId": "5569830"}, "48099828": {"ViewCount": "220", "Body": "<p>It looks like nesting extern \"C\" is legal. For example:</p>\n<pre><code>extern \"C\" extern \"C\" void foo();\n</code></pre>\n<p>The second <code>extern \"C\"</code> is essentially ignored. Is that guaranteed by the C++ standard? Where?</p>\n", "AcceptedAnswerId": "48099865", "Title": "What happens if you nest extern \"C\"?", "CreationDate": "2018-01-04T16:45:05.103", "LastActivityDate": "2018-01-04T16:54:33.180", "CommentCount": "0", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2018-01-04T16:54:33.180", "LastEditorUserId": "3980929", "Id": "48099828", "Score": "7", "OwnerUserId": "5569830", "Tags": "<c++><nested><extern>", "AnswerCount": "1"}});