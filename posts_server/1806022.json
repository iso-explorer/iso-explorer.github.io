post_cb({"bq_ids": {"n4140": {"so_1806022_1806038_1": {"length": 20, "quality": 1.0, "section_id": 243}}, "n3337": {"so_1806022_1806038_1": {"length": 20, "quality": 1.0, "section_id": 235}}, "n4659": {"so_1806022_1806038_1": {"length": 18, "quality": 0.9, "section_id": 250}}}, "1806038": {"Id": "1806038", "PostTypeId": "2", "Body": "<p>Yes, this is legal.  The template specification is that until a method is instantiated, it doesn't exist and therefor is not checked by the compiler.  Here's the relevant bit from <a href=\"http://www.kuzbass.ru:8086/docs/isocpp/template.html\" rel=\"nofollow noreferrer\">the spec</a>:</p>\n<blockquote>\n<p id=\"so_1806022_1806038_0\"><b>14.7.1 - Implicit instantiation</b></p>\n<p id=\"so_1806022_1806038_1\">-9- An implementation shall not implicitly instantiate a function\n  template, a member template, a\n  non-virtual member function, a member\n  class or a static data member of a\n  class template that does not require\n  instantiation.</p>\n</blockquote>\n", "LastEditorUserId": "13097", "LastActivityDate": "2009-11-26T23:21:08.237", "Score": "11", "CreationDate": "2009-11-26T23:00:20.120", "ParentId": "1806022", "CommentCount": "6", "OwnerUserId": "13097", "LastEditDate": "2009-11-26T23:21:08.237"}, "1806022": {"ViewCount": "250", "Body": "<p>I just found that when it comes to templates this code compiles in g++ 3.4.2 and works unless m() is not called:</p>\n<pre><code>template &lt;typename T&gt;\nclass C\n{\n     T e;\n\n     public:\n        C(): e(0) {};\n\n    void m()\n    {\n        e = 0;\n    };\n };\n</code></pre>\n<p>Now one may create and use instance</p>\n<pre><code>C&lt;const int&gt; c;\n</code></pre>\n<p>Until <code>c.m()</code> is not called there are no compile errors but is this legal?</p>\n", "AcceptedAnswerId": "1806038", "Title": "Is this code legal in C++", "CreationDate": "2009-11-26T22:53:12.247", "Id": "1806022", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2009-11-26T23:21:08.237", "Score": "4", "OwnerUserId": "205955", "Tags": "<c++><templates><const><const-correctness>", "AnswerCount": "1"}});