post_cb({"16366674": {"CommentCount": "4", "AcceptedAnswerId": "16367158", "PostTypeId": "1", "LastEditorUserId": "1599260", "CreationDate": "2013-05-03T20:02:02.447", "LastActivityDate": "2013-05-03T21:57:22.623", "LastEditDate": "2013-05-03T20:04:40.803", "ViewCount": "602", "FavoriteCount": "4", "Title": "Is it legal to place using tr1::shared_ptr in namespace std in header?", "Id": "16366674", "Score": "5", "Body": "<p>Is it legal and good programming style to use <code>std::tr1::shared_ptr</code> as <code>std::shared_ptr</code> placing <code>using</code> directive in corresponding <strong>header</strong>? Like this:</p>\n<pre><code>namespace std\n{\n   using tr1::shared_ptr;\n}\n</code></pre>\n<p>I know that it's bad to pollute entire namespace but what about this case? Are there any hidden gotchas? Target compiler is VS2008 but compatibility with later versions is also desired.</p>\n", "Tags": "<c++><visual-studio-2008><visual-c++><tr1>", "OwnerUserId": "2123313", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_16366674_16367158_0": {"section_id": 6299, "quality": 0.7142857142857143, "length": 10}}, "n3337": {"so_16366674_16367158_0": {"section_id": 6056, "quality": 0.7142857142857143, "length": 10}}, "n4659": {"so_16366674_16367158_0": {"section_id": 7808, "quality": 0.7142857142857143, "length": 10}}}, "16367158": {"ParentId": "16366674", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>Technically, the Standard says that you enter the realm of Undefined Behavior if you do this:</p>\n<p><strong>17.6.4.2.1 Namespace std [namespace.std]</strong></p>\n<blockquote>\n<p id=\"so_16366674_16367158_0\">1 The behavior of a C++ program is unde\ufb01ned if it adds declarations or\n  de\ufb01nitions to namespace std or to a namespace within namespace std\n  unless otherwise speci\ufb01ed.</p>\n</blockquote>\n<p>But in practice, you are likely to get away with it. Heck, even Scott Meyers proposed a similarly undefined namespace alias trick in Effective C++ 3rd Ed. (Item 54, p.268) to use Boost functionality as a stopgap for missing <code>tr1</code> functionality. </p>\n<pre><code>namespace std { using namespace tr1 = ::boost; }\n</code></pre>\n<p>Your using declaration is also undefined behavior, but go ahead and jump right in. </p>\n<p>NOTE: comment it with a big fat warning, <code>#define</code> and <code>#pragma</code> around your compiler version and warnings, and as soon as you upgrade to a compiler/library that actually has <code>std::shared_ptr</code>, make sure to revisit that header and remove the code.  </p>\n", "OwnerUserId": "819272", "LastEditorUserId": "819272", "LastEditDate": "2013-05-03T21:57:22.623", "Id": "16367158", "Score": "3", "CreationDate": "2013-05-03T20:36:35.747", "LastActivityDate": "2013-05-03T21:57:22.623"}});