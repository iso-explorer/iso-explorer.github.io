post_cb({"bq_ids": {"n4140": {"so_41130990_41131085_1": {"length": 26, "quality": 0.9285714285714286, "section_id": 1204}}, "n3337": {"so_41130990_41131085_1": {"length": 26, "quality": 0.9285714285714286, "section_id": 1202}}, "n4659": {"so_41130990_41131085_1": {"length": 25, "quality": 0.8928571428571429, "section_id": 1284}}}, "41131085": {"Id": "41131085", "PostTypeId": "2", "Body": "<p>1) Yes. It is the definition of spurious failure: it acts as if real value is not equal to expected even if they are.</p>\n<p>2) Use <code>compare_exchange_strong</code> if you must know that or ensure that no spurious failure occurs. </p>\n<p>3) No. it does not. It would violate contract: write only if <code>real == expected</code>, but it would load value to <code>expected</code>, even if it is the same one:</p>\n<blockquote>\n<p id=\"so_41130990_41131085_0\">N3797<br>\n<strong>[atomics.types.operations.req]</strong>/25  </br></p>\n<p id=\"so_41130990_41131085_1\">Remark: A weak compare-and-exchange operation may fail spuriously. That is, even when the contents of memory referred to by expected and object are equal, it may return false and store back to expected the same memory contents that were originally there.</p>\n</blockquote>\n", "LastEditorUserId": "3410396", "LastActivityDate": "2016-12-25T13:40:23.037", "Score": "1", "CreationDate": "2016-12-13T21:45:32.133", "ParentId": "41130990", "CommentCount": "8", "OwnerUserId": "3410396", "LastEditDate": "2016-12-25T13:40:23.037"}, "41130990": {"ViewCount": "234", "Body": "<p>I am confused about spurious failures of std::atomic::compare_exchange_weak. </p>\n<ol>\n<li>Could compare_exchange_weak fail in case the value of the atomic variable was the expected one?</li>\n<li>If the answer is yes: Is there a way to know whether the value was the expected one or not? Because my code assumes that if the CAS failed then the value was not the expected one.</li>\n<li>In particular, does compare_exchange_weak set 'expected' argument to the current value even in case of a spurious failure? In such a case, this value might either be the expected one (in case the CAS failed because of some timing issues\u2026) or not?</li>\n</ol>\n<p><em>Edit</em>: To clarify the 3rd point: I didn't refer to changing the variable value itself by CAS, but changing the 'expected' argument reference. The question is whether compare_exchange_weak changes this reference to the current value of the variable - both generally and particularly in case of a spurious failure. I ask it because my code assumes that after the CAS, the 'expected' argument holds the current value. (According to the answers I got to the 2nd question, I assume that the answer is that 'expected' argument is never updated in the weak version. Correct?)</p>\n", "AcceptedAnswerId": "41131085", "Title": "Spurious failure of std::atomic::compare_exchange_weak in case the value equals to expected", "CreationDate": "2016-12-13T21:37:40.993", "Id": "41130990", "CommentCount": "0", "LastEditDate": "2016-12-16T18:03:51.723", "PostTypeId": "1", "LastEditorUserId": "7289606", "LastActivityDate": "2016-12-25T13:40:23.037", "Score": "0", "OwnerUserId": "7289606", "Tags": "<c++><multithreading><c++11><atomic>", "AnswerCount": "2"}, "41131111": {"Id": "41131111", "PostTypeId": "2", "Body": "<p>The weak exchange functions can fail to update, in order to have a higher-performance implementation under the hood.  They tend to be used in loop checks where it doesn't so much matter because it will get it on the next loop iteration.</p>\n<p>So, specific answers...</p>\n<ol>\n<li>Yes, the failure is that it can fail to update if value == expected_value.</li>\n<li>If you truly need to know in a reliable way, don't use the weak version of these functions.  Go for the strong ones instead.</li>\n<li>No, it will never overwrite the value if it is not the expected value.</li>\n</ol>\n", "LastActivityDate": "2016-12-13T21:47:11.117", "CommentCount": "1", "CreationDate": "2016-12-13T21:47:11.117", "ParentId": "41130990", "Score": "4", "OwnerUserId": "1696283"}});