post_cb({"bq_ids": {"n4140": {"so_23441180_23442128_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 3329}}, "n3337": {"so_23441180_23442128_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 3199}}, "n4659": {"so_23441180_23442128_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 4095}}}, "23442128": {"Id": "23442128", "PostTypeId": "2", "Body": "<p>The problem is that you ask for an implicit conversion of <code>lst.size()</code> which is of type <code>size_t</code> (e.g. a 64 unsigned integer) to an <code>int</code> (e.g. 32 bit signed). In the context of brace initialization, this is a narrowing conversion which is potentially dangerous.</p>\n<blockquote>\n<p id=\"so_23441180_23442128_0\">[dcl.init.list] A narrowing conversion is an implicit conversion ... from an integer type or unscoped enumeration type to an integer type that cannot represent all the values of the original type,... </p>\n</blockquote>\n<p>Narrowing conversion rules are only used for braced initializer lists, i.e. for <code>int a{1}</code>, and not for the classic initialization which used <code>()</code>, i.e. for <code>int a(1)</code>.</p>\n<hr>\n<p>So there are three ways out:</p>\n<ol>\n<li><p>Use <code>std::size_t</code> as the type for <code>sz</code>. <code>sz</code> indicates the length of a memory block, so <code>std::size_t</code> is the correct type. (recommend)</p></li>\n<li><p>Use explicit conversion <code>sz{static_cast&lt;int&gt;(lst.size())}</code>.</p></li>\n<li><p>Use <code>()</code> instead of <code>{}</code> in the constructor. (not recommend)</p>\n<pre><code>  Vector(initializer_list&lt;double&gt; lst)\n  : elem(new double[lst.size()]), sz(lst.size())\n  //                               ^^^        ^^^\n</code></pre></li>\n</ol>\n</hr>", "LastEditorUserId": "316448", "LastActivityDate": "2015-11-17T21:45:34.017", "Score": "3", "CreationDate": "2014-05-03T08:43:16.427", "ParentId": "23441180", "CommentCount": "1", "OwnerUserId": "316448", "LastEditDate": "2015-11-17T21:45:34.017"}, "23441180": {"ViewCount": "382", "Body": "<p>I have this Vector class but its giving error at line marked <strong>//Compilation ERROR</strong> \nHere is the error.</p>\n<p><strong>narrowing conversion of \u2018lst.std::initializer_list&lt;_E&gt;::size with _E = double, std::initializer_list&lt;_E&gt;::size_type = long unsigned int\u2019 from \u2018std::initializer_list::size_type {aka long unsigned int}\u2019 to \u2018int\u2019 inside { } [-fpermissive]|</strong></p>\n<p>But if i change sz{lst.size()} to sz{(int)lst.size()} it ok.\nWould appreciate if any one could please put some light on this.\nI am using (Code:Blocks IDE) enabled C++0x in my IDE.\nCompiler\nGCC (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;list&gt;\n#include &lt;initializer_list&gt;  // std::initializer_list\n    class Vector\n    {\n            double* elem;\n            int sz;\n    public:\n            Vector(int s):elem{new double[s]}, sz{s}\n            {\n                for(int i = 0; i != s; i++)\n                    elem[i] = 0;\n            }\n\n            ~Vector()\n            {\n                delete[] elem;\n            }\n\n            double&amp; operator[] (int i);\n            int size() const;\n            void push_back(double);\n\n            //Compilation ERROR: \n            Vector(initializer_list&lt;double&gt; lst):elem{new double[lst.size()]},sz{lst.size()}\n            {\n                    //copy(lst.begin(), lst.end(), elem);\n            }\n\n             //THIS IS OK   \n            /* Vector(initializer_list&lt;double&gt; lst):elem{new double[lst.size()]},sz{(int)lst.size()}\n            {\n                    //copy(lst.begin(), lst.end(), elem);\n            } */\n    };\n</code></pre>\n", "Title": "std::initializer_list narrowing ERROR", "CreationDate": "2014-05-03T06:41:44.637", "Id": "23441180", "CommentCount": "1", "LastEditDate": "2014-05-03T08:30:13.517", "PostTypeId": "1", "LastEditorUserId": "661519", "LastActivityDate": "2015-11-17T21:45:34.017", "Tags": "<c++><c++11>", "Score": "1", "OwnerUserId": "3598427", "ClosedDate": "2014-05-03T13:37:32.457", "AnswerCount": "1"}});