post_cb({"bq_ids": {"n4140": {"so_40563997_40564182_0": {"length": 37, "quality": 0.9487179487179487, "section_id": 179}}, "n3337": {"so_40563997_40564182_0": {"length": 37, "quality": 0.9487179487179487, "section_id": 173}}, "n4659": {"so_40563997_40564182_0": {"length": 37, "quality": 0.9487179487179487, "section_id": 184}}}, "40563997": {"ViewCount": "40", "Body": "<p>I want to know if there is essentially a difference between:</p>\n<pre><code>template &lt;typename T&gt; \nclass foo{\n  foo&lt;T&gt;(){};\n};\n\ntemplate&lt;typename T&gt;\nclass foo{\n  foo(){};\n};\n</code></pre>\n<p>Both seem to work, but I don't understand the difference between the two. The first one is confusing me, I don't understand what's the role of the &lt; T &gt; here.</p>\n", "AcceptedAnswerId": "40564182", "Title": "Difference between adding and omitting template parameter for class name inside constructor", "CreationDate": "2016-11-12T14:46:01.523", "Id": "40563997", "CommentCount": "0", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2017-02-05T12:58:09.577", "LastEditorUserId": "1033581", "LastActivityDate": "2017-02-05T12:58:09.577", "Score": "1", "OwnerUserId": "3508551", "Tags": "<c++><templates><constructor><typename><injected-class-name>", "AnswerCount": "1"}, "40564182": {"Id": "40564182", "PostTypeId": "2", "Body": "<p>According to the rule of <a href=\"http://eel.is/c++draft/class#2\" rel=\"nofollow noreferrer\">injected-class-name</a>, they're exalctly the same thing.</p>\n<p><a href=\"http://eel.is/c++draft/temp.local#1\" rel=\"nofollow noreferrer\">$14.6.1/1 Locally declared names [temp.local]</a>:</p>\n<blockquote>\n<p id=\"so_40563997_40564182_0\">Like normal (non-template) classes, class templates have an\n  injected-class-name (Clause [class]). The injected-class-name can be\n  used as a template-name or a type-name. When it is used with a\n  template-argument-list, as a template-argument for a template\n  template-parameter, or as the final identifier in the\n  elaborated-type-specifier of a friend class template declaration, it\n  refers to the class template itself. Otherwise, it is equivalent to\n  the template-name followed by the template-parameters of the class\n  template enclosed in &lt;&gt;.</p>\n</blockquote>\n<p>So <code>foo</code> and <code>foo&lt;T&gt;</code> refer to the same thing here. More specifically,</p>\n<blockquote>\n<p id=\"so_40563997_40564182_1\">The first one is confusing me, I don't understand what's the role of the &lt; T &gt; here.</p>\n</blockquote>\n<p>You're using the inject-class-name <code>foo</code> with its template parameter <code>T</code> (i.e. <code>foo&lt;T&gt;</code>), which refers to the template class itself.</p>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2016-11-12T15:21:33.907", "Score": "2", "CreationDate": "2016-11-12T15:06:48.133", "ParentId": "40563997", "CommentCount": "0", "LastEditDate": "2016-11-12T15:21:33.907", "OwnerUserId": "3309790"}});