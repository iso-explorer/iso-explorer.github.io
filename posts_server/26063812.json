post_cb({"26063851": {"ParentId": "26063812", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2014-09-26T16:10:26.910", "Score": "0", "LastEditorUserId": "1938163", "LastEditDate": "2014-09-26T16:27:53.893", "Id": "26063851", "OwnerUserId": "1938163", "Body": "<p><strong>It is not a union</strong>, and due to the enum type member not even a union-like class</p>\n<p>9.5.8</p>\n<blockquote>\n<p id=\"so_26063812_26063851_0\">A union-like class is a union or a class that has an anonymous union\n  as a direct member. A union-like class X has a set of variant members.</p>\n</blockquote>\n<p>You can check this for yourself:</p>\n<pre><code>class IsUnion {\n  public:\n\n  struct struct1 {\n      float tt;\n  };\n\n  struct struct2 {\n      float tt;\n  };\n\n  enum EventType { no, yes };\n\n  EventType type; \n\n  union\n  {\n      struct1 obj;\n      struct2 obj2;\n  };\n\n};\n\nint main() {\n\n    cout &lt;&lt; is_union&lt;IsUnion&gt;::value; // 0\n}\n</code></pre>\n<p><a href=\"http://ideone.com/vdRwUX\" rel=\"nofollow\">Example</a></p>\n<p>anyway the bulk of the class consists of an anonymous union, I believe the documentation wanted to simplify this assumption and make it easy for the reader to understand.</p>\n", "LastActivityDate": "2014-09-26T16:27:53.893"}, "26063812": {"CommentCount": "1", "ViewCount": "139", "PostTypeId": "1", "LastEditorUserId": "1889788", "CreationDate": "2014-09-26T16:08:07.803", "LastActivityDate": "2014-09-26T16:27:53.893", "Title": "SFML 2.1 C++ documentation - is sf::Event really a union?", "AcceptedAnswerId": "26063851", "LastEditDate": "2014-09-26T16:26:20.860", "Id": "26063812", "Score": "1", "Body": "<p>Upon reading SFML 2.1's documentation I stumbled across this:</p>\n<blockquote>\n<p id=\"so_26063812_26063812_0\">Before dealing with events, it is important to understand what the sf::Event type is, and how to correctly use it. <strong>sf::Event is a union</strong>, which means that only one of its member is valid at a time (remember your C++ lesson: all the members of a union share the same memory space).</p>\n</blockquote>\n<p>However upon inspection of sf::Event's declaration I came across this:</p>\n<pre><code>    class Event\n    {\n    public :\n\n        ////////////////////////////////////////////////////////////\n        /// \\brief Size events parameters (Resized)\n        ///\n        ////////////////////////////////////////////////////////////\n        struct SizeEvent\n        {\n            unsigned int width;  ///&lt; New width, in pixels\n            unsigned int height; ///&lt; New height, in pixels\n        }; \n.....\n EventType type; ///&lt; Type of the event\n....\n</code></pre>\n<p>sf::Event cannot be a union since, sf::Event::EventType for example, does not share a memory region with any of the other members of sf::Event, as is clearly defined in the definition.</p>\n<p>The only union declaration I see is the following, taken again from the class definition:</p>\n<pre><code>union\n    {\n        SizeEvent            size;            ///&lt; Size event parameters (Event::Resized)\n        KeyEvent             key;             ///&lt; Key event parameters (Event::KeyPressed, Event::KeyReleased)\n        TextEvent            text;            ///&lt; Text event parameters (Event::TextEntered)\n        MouseMoveEvent       mouseMove;       ///&lt; Mouse move event parameters (Event::MouseMoved)\n        MouseButtonEvent     mouseButton;     ///&lt; Mouse button event parameters (Event::MouseButtonPressed, Event::MouseButtonReleased)\n        MouseWheelEvent      mouseWheel;      ///&lt; Mouse wheel event parameters (Event::MouseWheelMoved)\n        JoystickMoveEvent    joystickMove;    ///&lt; Joystick move event parameters (Event::JoystickMoved)\n        JoystickButtonEvent  joystickButton;  ///&lt; Joystick button event parameters (Event::JoystickButtonPressed, Event::JoystickButtonReleased)\n        JoystickConnectEvent joystickConnect; ///&lt; Joystick (dis)connect event parameters (Event::JoystickConnected, Event::JoystickDisconnected)\n    };\n</code></pre>\n<p>So am I missing something or is it just a genuine mistake in the documentation?</p>\n", "Tags": "<c++><documentation><sfml>", "OwnerUserId": "1889788", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_26063812_26063851_0": {"section_id": 5920, "quality": 0.8461538461538461, "length": 11}}, "n3337": {"so_26063812_26063851_0": {"section_id": 5692, "quality": 1.0, "length": 13}}, "n4659": {"so_26063812_26063851_0": {"section_id": 7413, "quality": 0.8461538461538461, "length": 11}}}});