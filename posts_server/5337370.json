post_cb({"5337376": {"ParentId": "5337370", "CommentCount": "0", "Body": "<p>Tha is called tentative definition. It's allowed only in C.</p>\n<blockquote>\n<p id=\"so_5337370_5337376_0\"><strong>A tentative definition is any external\n  data declaration that has no storage\n  class specifier and no initializer.</strong> A\n  tentative definition becomes a full\n  definition if the end of the\n  translation unit is reached and no\n  definition has appeared with an\n  initializer for the identifier. In\n  this situation, the compiler reserves\n  uninitialized space for the object\n  defined.</p>\n<p id=\"so_5337370_5337376_1\">The following statements show normal definitions and tentative definitions.</p>\n</blockquote>\n<pre><code>int i1 = 10;         /* definition, external linkage */\nstatic int i2 = 20;  /* definition, internal linkage */\nextern int i3 = 30;  /* definition, external linkage */\nint i4;              /* tentative definition, external linkage */\nstatic int i5;       /* tentative definition, internal linkage */\n\nint i1;              /* valid tentative definition */\nint i2;              /* not legal, linkage disagreement with previous */\nint i3;              /* valid tentative definition */\nint i4;              /* valid tentative definition */\nint i5;              /* not legal, linkage disagreement with previous */\n</code></pre>\n<blockquote>\n<p id=\"so_5337370_5337376_2\"><strong>C++ does not support the concept of a tentative definition: an external data declaration without a storage class specifier is always a definition.</strong></p>\n</blockquote>\n<p>From here: <a href=\"http://publib.boulder.ibm.com/infocenter/comphelp/v7v91/index.jsp?topic=/com.ibm.vacpp7a.doc/language/ref/clrc03tentative_defn.htm\" rel=\"noreferrer\">Tentative Definitions</a></p>\n", "OwnerUserId": "415784", "PostTypeId": "2", "Id": "5337376", "Score": "11", "CreationDate": "2011-03-17T09:48:42.337", "LastActivityDate": "2011-03-17T09:48:42.337"}, "5337391": {"ParentId": "5337370", "PostTypeId": "2", "CommentCount": "6", "Body": "<p><a href=\"http://publib.boulder.ibm.com/infocenter/comphelp/v7v91/index.jsp?topic=/com.ibm.vacpp7a.doc/language/ref/clrc03tentative_defn.htm\" rel=\"nofollow noreferrer\"><strong>Tentative definition is allowed in C but not in C++.</strong></a></p>\n<p>A tentative definition is any external data declaration that has no storage class specifier and no initializer.</p>\n<p>C99 6.9.2/2</p>\n<blockquote>\n<p id=\"so_5337370_5337391_0\">A declaration of an identi\ufb01er for an object that has \ufb01le scope <strong>without an initializer</strong>, and\n  <strong>without a storage-class speci\ufb01er or with the storage-class speci\ufb01er static</strong>, constitutes a\n  tentative de\ufb01nition. If a translation unit contains one or more tentative de\ufb01nitions for an\n  identi\ufb01er, and the translation unit contains no external de\ufb01nition for that identi\ufb01er, then\n  the behavior is exactly as if the translation unit contains a \ufb01le scope declaration of that\n  identi\ufb01er, with the composite type as of the end of the translation unit, with an initializer\n  equal to 0.</p>\n</blockquote>\n<p>So <code>int i</code> is a tentative definition. The C compiler will combine all of the tentative definitions into a single definition of <code>i</code>.</p>\n<p>In C++ your code is ill-formed due to the <a href=\"http://en.wikipedia.org/wiki/One_Definition_Rule\" rel=\"nofollow noreferrer\"><strong>One Definition Rule</strong></a> (Section 3.2/1 ISO C++)</p>\n<blockquote>\n<p id=\"so_5337370_5337391_1\">No translation unit <strong>shall contain more than one definition of any variable</strong>, function, class type, enumeration type or template.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p id=\"so_5337370_5337391_2\">// but if I write <code>int i = 5;</code> again I get error in C also</p>\n</blockquote>\n<p>Because in that case it no longer remains a tentative definition because of the initializer (5).</p>\n<hr>\n<p>Just for the sake of information</p>\n<blockquote>\n<p id=\"so_5337370_5337391_3\">J.5.11 Multiple external definitions</p>\n<p id=\"so_5337370_5337391_4\">There may be more than one external definition for the identifier of an object, with or without the explicit use of the keyword extern; if the definitions disagree, or more than one is initialized, the behavior is undefined (6.9.2).</p>\n</blockquote>\n<p>Also check out this <a href=\"https://stackoverflow.com/questions/1433204/what-are-extern-variables-in-c/1433387#1433387\">excellent post on external variables</a>.</p>\n</hr></hr>", "OwnerUserId": "165520", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:09:11.783", "Id": "5337391", "Score": "49", "CreationDate": "2011-03-17T09:49:50.987", "LastActivityDate": "2011-03-17T10:12:52.243"}, "5337370": {"CommentCount": "0", "AcceptedAnswerId": "5337391", "PostTypeId": "1", "LastEditorUserId": "165520", "CreationDate": "2011-03-17T09:48:01.320", "LastActivityDate": "2011-03-22T12:11:22.750", "LastEditDate": "2011-03-22T12:11:22.750", "ViewCount": "1279", "FavoriteCount": "8", "Title": "Redefinition allowed in C but not in C++?", "Id": "5337370", "Score": "31", "Body": "<p>Why does this code work in C but not in C++?</p>\n<pre><code>int i = 5;\nint i; // but if I write int i = 5; again I get error in C also\n\nint main(){\n\n  // using i\n}\n</code></pre>\n", "Tags": "<c++><c><declaration>", "OwnerUserId": "664070", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_5337370_5337391_1": {"section_id": 7038, "quality": 1.0, "length": 14}, "so_5337370_5337391_4": {"section_id": 7043, "quality": 0.5454545454545454, "length": 12}}, "n3337": {"so_5337370_5337391_1": {"section_id": 6784, "quality": 1.0, "length": 14}, "so_5337370_5337391_4": {"section_id": 6788, "quality": 0.5454545454545454, "length": 12}}, "n4659": {"so_5337370_5337391_1": {"section_id": 8535, "quality": 1.0, "length": 14}, "so_5337370_5337391_4": {"section_id": 8540, "quality": 0.5454545454545454, "length": 12}}}, "5337407": {"ParentId": "5337370", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>To understand tentative definition better, go through <a href=\"https://stackoverflow.com/questions/3095861/about-tentative-definition\">this</a></p>\n", "OwnerUserId": "95321", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:52:04.293", "Id": "5337407", "Score": "2", "CreationDate": "2011-03-17T09:52:07.033", "LastActivityDate": "2011-03-17T09:52:07.033"}});