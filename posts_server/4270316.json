post_cb({"4270353": {"ParentId": "4270316", "CommentCount": "0", "Body": "<p>Types ending in <code>_t</code> are <a href=\"http://www.opengroup.org/onlinepubs/009695399/functions/xsh_chap02_02.html\" rel=\"nofollow\">reserved</a> by POSIX.</p>\n", "OwnerUserId": "47773", "PostTypeId": "2", "Id": "4270353", "Score": "2", "CreationDate": "2010-11-24T18:44:34.400", "LastActivityDate": "2010-11-24T18:44:34.400"}, "4270339": {"ParentId": "4270316", "CommentCount": "0", "Body": "<p>Names that begin with <code>_</code> or <code>__</code> are typically for reserved identifiers, and you should not define/create identifiers that begin with that convention. (_ with Upper Case following)</p>\n<p>From C99 standard, 7.1.3 - \"Reserved Identifiers\"</p>\n<blockquote>\n<p id=\"so_4270316_4270339_0\">\u2014 All identi\ufb01ers that begin with an underscore and either an uppercase letter or another\n  underscore are always reserved for any use.</p>\n<p id=\"so_4270316_4270339_1\">\u2014 All identi\ufb01ers that begin with an underscore are always reserved for use as identi\ufb01ers\n  with \ufb01le scope in both the ordinary and tag name spaces.</p>\n</blockquote>\n<p>From C++03 Standard (amendment to C++98), section 17.4.3.1.2 - \"Global Names\"</p>\n<blockquote>\n<p id=\"so_4270316_4270339_2\">\u2014 Each name that contains a double underscore (_  _) or begins with an underscore followed by an upper-\n  case letter (2.11) is reserved to the implementation for any use.</p>\n<p id=\"so_4270316_4270339_3\">\u2014 Each name that begins with an underscore is reserved to the implementation for use as a name in the\n  global namespace</p>\n</blockquote>\n", "OwnerUserId": "297696", "PostTypeId": "2", "Id": "4270339", "Score": "5", "CreationDate": "2010-11-24T18:42:40.320", "LastActivityDate": "2010-11-24T18:42:40.320"}, "4270347": {"ParentId": "4270316", "CommentCount": "3", "Body": "<p>Except for <code>NAME_t</code>, all of these names are reserved for \"the implementation\", that is, the standard C++ library code. <strong>You are forbidden to use such names in your own code</strong>.</p>\n<p>Section 17.6.3.3.2 \"Global names\" \u00a71 states:</p>\n<blockquote>\n<p id=\"so_4270316_4270347_0\">Certain sets of names and function signatures are always reserved to the implementation:</p>\n<ul>\n<li><p id=\"so_4270316_4270347_1\">Each name that contains a double underscore or begins with an underscore followed by an uppercase letter is reserved to the implementation for any use.</p></li>\n<li><p id=\"so_4270316_4270347_2\">Each name that begins with an underscore is reserved to the implementation for use as a name in the global namespace.</p></li>\n</ul>\n</blockquote>\n<p>(Note that these rules forbid header guards like <code>__MY_FILE_H</code> which I have seen quite often.)</p>\n", "OwnerUserId": "252000", "PostTypeId": "2", "Id": "4270347", "Score": "3", "CreationDate": "2010-11-24T18:44:05.040", "LastActivityDate": "2010-11-24T18:44:05.040"}, "bq_ids": {"n4140": {"so_4270316_4270347_2": {"section_id": 6307, "quality": 1.0, "length": 10}, "so_4270316_4270347_0": {"section_id": 6307, "quality": 1.0, "length": 8}, "so_4270316_4270347_1": {"section_id": 6307, "quality": 1.0, "length": 13}, "so_4270316_4270339_3": {"section_id": 6307, "quality": 1.0, "length": 10}, "so_4270316_4270339_2": {"section_id": 6307, "quality": 0.8, "length": 12}}, "n3337": {"so_4270316_4270347_2": {"section_id": 6064, "quality": 1.0, "length": 10}, "so_4270316_4270347_0": {"section_id": 6064, "quality": 1.0, "length": 8}, "so_4270316_4270339_3": {"section_id": 6064, "quality": 1.0, "length": 10}, "so_4270316_4270347_1": {"section_id": 6064, "quality": 1.0, "length": 13}, "so_4270316_4270339_2": {"section_id": 6064, "quality": 0.8, "length": 12}}, "n4659": {"so_4270316_4270347_2": {"section_id": 6756, "quality": 0.9, "length": 9}, "so_4270316_4270347_0": {"section_id": 7844, "quality": 0.625, "length": 5}, "so_4270316_4270339_3": {"section_id": 6756, "quality": 0.9, "length": 9}, "so_4270316_4270347_1": {"section_id": 6756, "quality": 0.9230769230769231, "length": 12}, "so_4270316_4270339_2": {"section_id": 6756, "quality": 0.7333333333333333, "length": 11}}}, "4270316": {"CommentCount": "0", "ViewCount": "767", "CreationDate": "2010-11-24T18:39:22.717", "LastActivityDate": "2010-11-24T18:45:38.947", "Title": "Meaning of notations like _NAME, __NAME, _NAME_, __NAME__", "AcceptedAnswerId": "4270339", "PostTypeId": "1", "Id": "4270316", "Score": "1", "Body": "<p>I've seen this in countless C/C++ header and source files.<br>\nApart from personal preference, what's the meaning of each of these different notations?  </br></p>\n<ul>\n<li><code>_NAME</code></li>\n<li><code>__NAME</code></li>\n<li><code>_NAME_</code></li>\n<li><code>__NAME__</code></li>\n<li><code>NAME_t</code></li>\n</ul>\n<p>Quite honestly, the only one I comprehend is <code>_NAME</code>, which is a private member of a class (at least in C# it is).  </p>\n<p>Can someone explain the difference among them?<br>\nAnd if there are any other noticeable notations as such, please mention them (even in other similar languages).</br></p>\n<p>Thanks!</p>\n", "Tags": "<c#><c++><c>", "OwnerUserId": "330180", "AnswerCount": "3"}});