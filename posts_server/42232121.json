post_cb({"42232208": {"ParentId": "42232121", "LastEditDate": "2017-02-14T17:34:57.523", "CommentCount": "3", "CreationDate": "2017-02-14T17:13:15.883", "OwnerUserId": "335858", "LastEditorUserId": "560648", "PostTypeId": "2", "Id": "42232208", "Score": "10", "Body": "<p>No, <code>int</code> is always signed. Unlike <code>char</code>, which may behave as a <code>signed char</code> or <code>unsigned char</code> depending on the platform, <code>int</code> is always a synonym for <code>signed int</code>, regardless of the platform, in both C and C++.</p>\n<blockquote>\n<p id=\"so_42232121_42232208_0\">Reference: C99, 6.2.5.4:</p>\n<p id=\"so_42232121_42232208_1\">There are five standard signed integer types, designated as <code>signed char</code>, <code>short int</code>, <code>int</code>, <code>long int</code>, and <code>long long int</code>.</p>\n<p id=\"so_42232121_42232208_2\">Reference: C++11, 3.9.1.2:</p>\n<p id=\"so_42232121_42232208_3\">There are five standard signed integer types : <code>signed char</code>, <code>short int</code>, <code>int</code>, <code>long int</code>, and <code>long long int</code>.</p>\n</blockquote>\n", "LastActivityDate": "2017-02-14T17:34:57.523"}, "42232223": {"ParentId": "42232121", "LastEditDate": "2017-02-14T17:19:02.813", "CommentCount": "0", "CreationDate": "2017-02-14T17:14:02.723", "OwnerUserId": "1593860", "LastEditorUserId": "1593860", "PostTypeId": "2", "Id": "42232223", "Score": "7", "Body": "<p><code>char</code> is peculiar: there are three flavors, <code>signed char</code>, <code>unsigned char</code>, and <code>char</code>. A plain <code>char</code> can be signed or unsigned, depending on the implementation, but in C++ it's a different type from the other two. All the other integer types have just two flavors, signed and unsigned; you can say <code>unsigned int</code>, <code>signed int</code>, and just plain <code>int</code>, but plain <code>int</code> is signed, and it's just a different name for <code>signed int</code>. In the C++ standard, that's clause 3.9.1, [basic.fundamental].</p>\n", "LastActivityDate": "2017-02-14T17:19:02.813"}, "42232121": {"CommentCount": "12", "AcceptedAnswerId": "42232351", "PostTypeId": "1", "LastEditorUserId": "817643", "CreationDate": "2017-02-14T17:09:01.507", "LastActivityDate": "2017-02-14T19:24:12.580", "LastEditDate": "2017-02-14T19:24:12.580", "ViewCount": "173", "FavoriteCount": "2", "Title": "Can int be unsigned int by default in some platform?", "Id": "42232121", "Score": "1", "Body": "<p>Can an <code>int</code> be unsigned by default like <code>char</code> and can someone provide these platform if it exists ?</p>\n<p>I mean that <code>char</code> can be unsigned or signed depending on platforms.\nIs the same thing applicable to <code>int</code>, <code>long</code>, <code>short</code> ?</p>\n", "Tags": "<c++><c>", "OwnerUserId": "7304770", "AnswerCount": "3"}, "42232351": {"ParentId": "42232121", "CommentCount": "5", "Body": "<p>As per the <a href=\"http://port70.net/~nsz/c/c11/n1570.html#5.2.4.2.1\">C11 standard section \"5.2.4.2.1 Sizes of integer types \"</a>:</p>\n<blockquote>\n<p id=\"so_42232121_42232351_0\">The values given below shall be replaced by constant expressions\n  suitable for use in #if preprocessing directives. Moreover, except for\n  CHAR_BIT and MB_LEN_MAX, the following shall be replaced by\n  expressions that have the same type as would an expression that is an\n  object of the corresponding type converted according to the integer\n  promotions. Their implementation-defined values <strong>shall be equal or\n  greater in magnitude (absolute value)</strong> to those shown, <strong>with the same</strong>\n<strong>sign</strong>.<br>\n  ...........................<br>\n  minimum value for an object of type <code>int</code><br>\n<code>INT_MIN                                -32767</code><br>\n  maximum value for an object of type <code>int</code><br>\n<code>INT_MAX                                +32767</code></br></br></br></br></br></p>\n</blockquote>\n<p>So, as you can see the limits of <code>int</code> have to be at least the ones specified (absolute values) with the same signs.</p>\n", "OwnerUserId": "4253229", "PostTypeId": "2", "Id": "42232351", "Score": "6", "CreationDate": "2017-02-14T17:19:27.827", "LastActivityDate": "2017-02-14T17:19:27.827"}, "bq_ids": {"n4140": {"so_42232121_42232208_1": {"section_id": 7211, "quality": 0.9375, "length": 15}, "so_42232121_42232208_3": {"section_id": 7211, "quality": 1.0, "length": 15}}, "n3337": {"so_42232121_42232208_1": {"section_id": 6955, "quality": 0.9375, "length": 15}, "so_42232121_42232208_3": {"section_id": 6955, "quality": 1.0, "length": 15}}, "n4659": {"so_42232121_42232208_1": {"section_id": 8720, "quality": 0.875, "length": 14}, "so_42232121_42232208_3": {"section_id": 8720, "quality": 0.9333333333333333, "length": 14}}}});