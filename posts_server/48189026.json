post_cb({"48189026": {"Tags": "<c++><pointers><union><language-lawyer><c++17>", "ViewCount": "176", "LastEditDate": "2018-01-10T15:37:40.140", "CreationDate": "2018-01-10T13:55:40.987", "LastEditorUserId": "5632316", "Title": "Using std::launder to get a pointer to an active object member from a pointer to an inactive object?", "CommentCount": "19", "AnswerCount": "0", "Score": "8", "OwnerUserId": "5632316", "Id": "48189026", "LastActivityDate": "2018-01-10T15:37:40.140", "Body": "<p><sub> This question followes this <a href=\"https://stackoverflow.com/questions/48188737/is-pointer-arithmetic-on-inactive-member-of-a-union-ub\">one</a> </sub></p>\n<p>Let's consider this example code:</p>\n<pre><code>struct sso\n  {\n  union{\n    struct {\n      char* ptr;\n      char size_r[8];\n      } large_str;\n    char short_str[16];\n    };\n\n  bool is_short_str() const{\n    return *std::launder(short_str+15)=='\\0'; //UB?\n    }\n  };\n</code></pre>\n<p>If <code>short_str</code> is not the active member dereferencing the pointer without <code>std::launder</code> would be UB. Let's consider that the ABI is well specified and that we know that size_r[7] is at the same address as short_str[15]. Does <code>std::launder(short_str+15)</code> return a pointer to <code>size_r[7]</code> when <code>short_str</code> is not the active member of the union?</p>\n<hr>\n<p>Nota: I think this is the case because <a href=\"https://timsong-cpp.github.io/cppwp/n4659/ptr.launder#3\" rel=\"noreferrer\">[ptr.launder]/3</a></p>\n<blockquote>\n<p id=\"so_48189026_48189026_0\">A byte of storage is reachable through a pointer value that points to an object Y if it is within the storage occupied by Y, an object that is pointer-interconvertible with Y, or the immediately-enclosing array object if Y is an array element. </p>\n</blockquote>\n</hr>", "PostTypeId": "1"}, "bq_ids": {"n4659": {"so_48189026_48189026_0": {"length": 18, "section_id": 8379, "quality": 1.0}}}});