post_cb({"29069904": {"Tags": "<c++><windows><winsock2><mingw-w64>", "ViewCount": "2517", "LastEditDate": "2015-03-16T07:45:42.743", "CreationDate": "2015-03-16T05:02:54.967", "LastEditorUserId": "1505939", "Title": "Why does MinGW-w64 require winsock2 to be manually included?", "CommentCount": "5", "AnswerCount": "1", "Score": "2", "OwnerUserId": "1505939", "Id": "29069904", "LastActivityDate": "2015-03-16T17:39:04.047", "Body": "<p>Some code and associated warnings/errors:</p>\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;iphlpapi.h&gt;\nint main() { }\n</code></pre>\n<blockquote>\n<p id=\"so_29069904_29069904_0\">F:/Prog/mingw-w64/x86_64-4.9.2-win32-seh-rt_v3-rev1/mingw64/x86_64-w64-mingw32/include/ws2ipdef.h:71:3: error: '<code>ADDRESS_FAMILY</code>' does not name a type</p>\n<pre><code>ADDRESS_FAMILY si_family;\n</code></pre>\n</blockquote>\n<pre><code>#include &lt;windows.h&gt;\n#include &lt;winsock2.h&gt;\n#include &lt;iphlpapi.h&gt;\nint main() { }     // this compiles successfully, only gives warning\n</code></pre>\n<blockquote>\n<p id=\"so_29069904_29069904_1\">F:/Prog/mingw-w64/x86_64-4.9.2-win32-seh-rt_v3-rev1/mingw64/x86_64-w64-mingw32/include/winsock2.h:15:2: warning: #warning Please include winsock2.h before windows.h [-Wcpp]</p>\n</blockquote>\n<pre><code>#include &lt;winsock2.h&gt;\n#include &lt;windows.h&gt;\n#include &lt;iphlpapi.h&gt;\nint main() { }\n</code></pre>\n<blockquote>\n<p id=\"so_29069904_29069904_2\">(compilation successful).</p>\n</blockquote>\n<p>My questions are:</p>\n<ul>\n<li>Why doesn't <code>iphlpapi.h</code> (and other files that rely on winsock) do <code>#include &lt;winsock2.h&gt;</code> themself, or at least give a nicer error message?</li>\n<li>Why does there a warning for it  to come before <code>windows.h</code> ?</li>\n</ul>\n", "PostTypeId": "1"}, "29070871": {"ParentId": "29069904", "Score": "5", "CreationDate": "2015-03-16T06:36:27.487", "LastActivityDate": "2015-03-16T17:39:04.047", "LastEditDate": "2015-03-16T17:39:04.047", "OwnerUserId": "65863", "LastEditorUserId": "65863", "Body": "<p><code>windows.h</code> includes <code>winsock.h</code> by default.  <code>winsock.h</code> and <code>winsock2.h</code> <em>do not</em> coexist.  If <code>winsock2.h</code> is included first, it disables <code>winsock.h</code>, and all is good.  But if <code>winsock.h</code> is included first, <code>winsock2.h</code> fails to compile, because it redeclares a lot of things that <code>winsock.h</code> already declares.  Thus why you need to include <code>winsock2.h</code> first.</p>\n<p>Microsoft wants people to use one or the other, not both.  <code>winsock2.h</code> is meant to <em>replace</em> <code>winsock.h</code> rather than <em>supplement</em> it.  But why they made <code>winsock2.h</code> so incompatible that it completely breaks if <code>winsock.h</code> is included first is anyone's guess.  They could have just as easily made <code>winsock2.h</code> <code>#ifdef</code> any duplicate declarations to avoid errors.  Or even have <code>winsock2.h</code> include <code>winsock.h</code> for the declarations.  But they didn't.</p>\n", "Id": "29070871", "PostTypeId": "2", "CommentCount": "3"}, "bq_ids": {"n4659": {"so_29069904_29069904_0": {"length": 4, "section_id": 180, "quality": 0.6666666666666666}}}});