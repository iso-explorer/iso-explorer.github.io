post_cb({"40770829": {"CommentCount": "4", "ViewCount": "53", "PostTypeId": "1", "LastEditorUserId": "65863", "CreationDate": "2016-11-23T17:29:52.247", "LastActivityDate": "2016-11-23T20:29:38.757", "Title": "Overloading operators '=' and '+'", "AcceptedAnswerId": "40771065", "LastEditDate": "2016-11-23T20:22:10.173", "Id": "40770829", "Score": "0", "Body": "<p>I'm learning how to use templates and how to overload operators. I've managed to overload <code>operator[]</code>, but I've encountered a problem with overloading <code>operator+</code> and <code>operator=</code>. Here is my code:</p>\n<pre><code>template &lt;class T&gt;\nclass A\n{  \npublic:\n    //...\n    friend A&lt;T&gt;&amp; A&lt;T&gt;::operator+ (A&lt;T&gt;&amp;, const A&lt;T&gt;&amp;);\n    friend A&lt;T&gt;&amp; A&lt;T&gt;::operator= (A&lt;T&gt;&amp;, const A&lt;T&gt;&amp;);\n};\n\ntemplate&lt;class T&gt; A&lt;T&gt;&amp; A&lt;T&gt;::operator+ (A&lt;T&gt;&amp; left, const A&lt;T&gt;&amp; right)\n{\n    //some functions\nreturn left;\n}\n\ntemplate&lt;class T&gt; A&lt;T&gt;&amp; A&lt;T&gt;::operator= (A&lt;T&gt;&amp; left, const A&lt;T&gt;&amp; right)\n{\n    //some functions\n    return left;\n}\n</code></pre>\n<p>Whenver I try to compile, I get those errors: </p>\n<blockquote>\n<p id=\"so_40770829_40770829_0\">'+': is not a member of 'A&lt;T&gt;' </p>\n<p id=\"so_40770829_40770829_1\">'=': is not a member of 'A&lt;T&gt;'</p>\n<p id=\"so_40770829_40770829_2\">'operator =' must be a non-static member</p>\n</blockquote>\n<p>What am I doing wrong?</p>\n<hr>\n<p>EDIT:</p>\n<p>I've managed to update the code:</p>\n<pre><code>template &lt;class T&gt;\nclass A\n{  \npublic:\n    //...\n    A&lt;T&gt; operator+ (A&lt;T&gt;);\n    A&lt;T&gt; operator= (A&lt;T&gt;, const A&lt;T&gt;);\n};\n\ntemplate&lt;class T&gt; A&lt;T&gt; A&lt;T&gt;::operator+ (A&lt;T&gt; right)\n{\n    //some functions\n    return *this;\n}\n\ntemplate&lt;class T&gt; A&lt;T&gt; operator= (A&lt;T&gt; right)\n{\n    //some functions\n    return *this;\n}\n</code></pre>\n<p>Looks like <code>operator+</code> works now fine, but compiler gives this error:</p>\n<blockquote>\n<p id=\"so_40770829_40770829_3\">'operator=' must be a non static member</p>\n</blockquote>\n<p>Why is it a static member, and how can I fix it?</p>\n</hr>", "Tags": "<c++><operators><overloading>", "OwnerUserId": "7201420", "AnswerCount": "2"}, "40773645": {"ParentId": "40770829", "CommentCount": "0", "Body": "<p>An operator that is implemented as a non-static member must accept only 1 input parameter, the right-hand operand.  The left-hand operand is the <code>this</code> object that the operator is being called on.</p>\n<p>An operator that is implemented as a static member or a non-member must accept 2 input parameter, the left-hand and right-hand operands.</p>\n<p>Your <code>operator=</code> is declared as a non-static member with 2 input parameters, which is wrong.</p>\n<p>Also, <code>operator+</code> is meant to return a new object that is a copy of the two input objects added together.  Do not return a reference to the object that the operator is being called on.  Whereas <code>operator=</code> is meant to return a reference to the object that is being assigned to.</p>\n<p>Try this:</p>\n<pre><code>template &lt;class T&gt;\nclass A\n{  \npublic:\n    //...\n    A&lt;T&gt; operator+(const A&lt;T&gt;&amp;) const;\n    A&lt;T&gt;&amp; operator=(const A&lt;T&gt;&amp;);\n};\n\ntemplate&lt;class T&gt; A&lt;T&gt; A&lt;T&gt;::operator+(const A&lt;T&gt;&amp; right) const\n{\n    A&lt;T&gt; result(*this);\n    //some functions to add right to result as needed...\n    return result;\n}\n\ntemplate&lt;class T&gt; A&lt;T&gt;&amp; A&lt;T&gt;::operator=(const A&lt;T&gt;&amp; right)\n{\n    // some functions to copy right into this...\n    return *this;\n}\n</code></pre>\n", "OwnerUserId": "65863", "PostTypeId": "2", "Id": "40773645", "Score": "0", "CreationDate": "2016-11-23T20:29:38.757", "LastActivityDate": "2016-11-23T20:29:38.757"}, "40771065": {"ParentId": "40770829", "CommentCount": "7", "Body": "<p>For starters assignment operators must be non-static member functions</p>\n<p>From the C++ Standard (13.5.3 Assignment )</p>\n<blockquote>\n<p id=\"so_40770829_40771065_0\">1 <strong>An assignment operator shall be implemented by a non-static member\n  function</strong> with exactly one parameter. Because a copy assignment\n  operator operator= is implicitly declared for a class if not declared\n  by the user (12.8), a base class assignment operator is always hidden\n  by the copy assignment operator of the derived class.</p>\n</blockquote>\n<p>And secondly (11.3 Friends)</p>\n<blockquote>\n<p id=\"so_40770829_40771065_1\">1 A friend of a class is a function or class that is given permission\n  to use the private and protected member names from the class. A class\n  specifies its friends, if any, by way of friend declarations. Such\n  declarations give special access rights to the friends, but they <strong>do\n  not make the nominated friends members of the befriending class</strong>.</p>\n</blockquote>\n<p>Thus for example this definition</p>\n<pre><code>template&lt;class T&gt; A&lt;T&gt;&amp; A&lt;T&gt;::operator+ (A&lt;T&gt;&amp; left, const A&lt;T&gt;&amp; right)\n                        ^^^^^\n{\n//some functions\nreturn left;\n}\n</code></pre>\n<p>is incorrect. At least you should remove  <code>A&lt;T&gt;::</code> because the operator is not a member of the class.</p>\n", "OwnerUserId": "2877241", "PostTypeId": "2", "Id": "40771065", "Score": "1", "CreationDate": "2016-11-23T17:43:06.397", "LastActivityDate": "2016-11-23T17:43:06.397"}, "bq_ids": {"n4140": {"so_40770829_40771065_0": {"section_id": 660, "quality": 0.967741935483871, "length": 30}, "so_40770829_40770829_2": {"section_id": 577, "quality": 1.0, "length": 4}, "so_40770829_40771065_1": {"section_id": 6684, "quality": 1.0, "length": 34}}, "n3337": {"so_40770829_40771065_0": {"section_id": 650, "quality": 0.967741935483871, "length": 30}, "so_40770829_40770829_2": {"section_id": 567, "quality": 1.0, "length": 4}, "so_40770829_40771065_1": {"section_id": 6439, "quality": 1.0, "length": 34}}, "n4659": {"so_40770829_40771065_0": {"section_id": 688, "quality": 0.967741935483871, "length": 30}, "so_40770829_40770829_2": {"section_id": 600, "quality": 1.0, "length": 4}, "so_40770829_40771065_1": {"section_id": 8159, "quality": 1.0, "length": 34}}}});