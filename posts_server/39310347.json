post_cb({"39310365": {"ParentId": "39310347", "PostTypeId": "2", "CommentCount": "5", "Body": "<p>Well, the word <strong>standard</strong> does imply a certain meaning, doesn't it.</p>\n<p>The point is: if things are <strong>standard</strong>, then each implementation needs to reflect that standard.</p>\n<p>In other words: don't worry about standards, but about those things that are not exactly specified, like <a href=\"https://blog.jetbrains.com/rscpp/microsoft-cpp-compiler-bugs-ambiguities/\" rel=\"nofollow\">here</a> for example. </p>\n<p>Besides, this is a very wide topic. I think you should <em>narrow</em> it down to more specific questions/areas. </p>\n<p>Edit - reasons why various groups create their own implementations: </p>\n<ol>\n<li>In contrast to Java for example, there isn't \"the golden standards\" implementation</li>\n<li>Compiler builders might want to fine tune libraries to their product (and may it just be about legal/licencing topics)</li>\n</ol>\n", "OwnerUserId": "1531124", "LastEditorUserId": "1531124", "LastEditDate": "2016-09-03T19:10:41.190", "Id": "39310365", "Score": "4", "CreationDate": "2016-09-03T19:00:05.193", "LastActivityDate": "2016-09-03T19:10:41.190"}, "39310347": {"CommentCount": "1", "AcceptedAnswerId": "39310427", "PostTypeId": "1", "LastEditorUserId": "6753182", "CreationDate": "2016-09-03T18:57:43.387", "LastActivityDate": "2016-09-03T19:29:42.967", "LastEditDate": "2016-09-03T19:29:42.967", "ViewCount": "453", "FavoriteCount": "1", "Title": "What is the difference between standard library implementations in C++?", "Id": "39310347", "Score": "9", "Body": "<p>I am probably 'on the wood way' as we Germans say. (Proverb for going the wrong way)</p>\n<p>C++ defines a standard library and this standard gets updated frequently in C++98, C++11, C+17 (correct me if I am wrong). I would assume that each compiler or OS defines its own implementation of this standard library.</p>\n<p>So besides the obvious OS specific parts, what are the differences (if any) between these implementations of the standard library?</p>\n<p>Are there 'variants' of the implementation for the same OS? And if so when would I want to bother which implementation is used?</p>\n", "Tags": "<c++><c++-standard-library>", "OwnerUserId": "6753182", "AnswerCount": "2"}, "39310427": {"ParentId": "39310347", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>Basically any definition of every container is implementation specific. The Standard only dictates the declaration and the expected behavior, the side effects, and the conditions.</p>\n<p>Example from \u00a721.4.2:</p>\n<blockquote>\n<pre><code>basic_string(const basic_string&amp; str,\n               size_type pos, size_type n = npos,\n               const Allocator&amp; a = Allocator()); \n</code></pre>\n<p id=\"so_39310347_39310427_0\"><em>Requires</em>: <code>pos &lt;= str.size()</code></p>\n<p id=\"so_39310347_39310427_1\"><em>Throws</em>: <code>out_of_range</code> if <code>pos &gt; str.size()</code>. </p>\n<p id=\"so_39310347_39310427_2\"><em>E\ufb00ects</em>: Constructs an object of class <code>basic_string</code> and determines the e\ufb00ective length <code>rlen</code> of the initial string value as the smaller of <code>n</code> and <code>str.size() - pos</code>, as indicated in Table 65.</p>\n</blockquote>\n<p>As you can see, the Standard also says <em>what</em> the constructor of <code>std::basic_string</code> does, it doesn't say <em>how</em> it should be implemented. It also defines the signature that should be used. The  actual <em>implementation</em> vary across compiler vendors - <code>gcc</code> and <code>clang</code> have different implementations, although they are for the same platform, but the constructor do the same thing.</p>\n<p>You don't need to worry about the implementations (well, technically, you do - some implementations don't implement <em>everything</em>, but that's rare), as they all (<em>should</em>) do everything documented in the standard.</p>\n", "OwnerUserId": "3980929", "LastEditorUserId": "3980929", "LastEditDate": "2016-09-03T19:16:10.120", "Id": "39310427", "Score": "6", "CreationDate": "2016-09-03T19:07:18.570", "LastActivityDate": "2016-09-03T19:16:10.120"}, "bq_ids": {"n4140": {"so_39310347_39310427_2": {"section_id": 1572, "quality": 0.8235294117647058, "length": 14}}, "n3337": {"so_39310347_39310427_2": {"section_id": 1568, "quality": 0.8235294117647058, "length": 14}}, "n4659": {"so_39310347_39310427_2": {"section_id": 1722, "quality": 0.8235294117647058, "length": 14}}}});