post_cb({"10821475": {"ParentId": "10821417", "CommentCount": "3", "Body": "<p>In C++, <code>main</code> needs to return an <code>int</code>:</p>\n<blockquote>\n<p id=\"so_10821417_10821475_0\">C++ standard, 3.6.1.2:</p>\n<p id=\"so_10821417_10821475_1\">An implementation shall not predefine the main function. This function shall not be overloaded. It shall have a return type of type <code>int</code>, but otherwise its type is implementation-defined.</p>\n</blockquote>\n<p>.</p>\n<blockquote>\n<p id=\"so_10821417_10821475_2\">If not, what is the best way that it can output a vector?</p>\n</blockquote>\n<p>To <em>output</em> a vector, you need to copy it to a file or an output stream:</p>\n<pre><code>ostream_iterator&lt;int&gt; out_it(cout, \", \");\ncopy(myvector.begin(), myvector.end(), out_it);\n</code></pre>\n<p>The code fragment above writes the content of <code>vector&lt;int&gt;</code> to the standard output.</p>\n", "OwnerUserId": "335858", "PostTypeId": "2", "Id": "10821475", "Score": "9", "CreationDate": "2012-05-30T17:43:18.290", "LastActivityDate": "2012-05-30T17:43:18.290"}, "10821417": {"CommentCount": "14", "ViewCount": "186", "PostTypeId": "1", "LastEditorUserId": "650718", "CreationDate": "2012-05-30T17:39:03.383", "LastActivityDate": "2012-05-31T17:16:05.750", "Title": "Is it okay to return vector in main", "AcceptedAnswerId": "10821475", "LastEditDate": "2012-05-30T17:45:59.107", "Id": "10821417", "Score": "1", "Body": "<p>I am wondering is it okay to return a vector in <code>main()</code>? For example, </p>\n<pre><code>aSpecialVectorType main()\n{\n    aSpecialVectorType xxx(vector::zero);\n    // do something here;\n    return xxx;\n}\n</code></pre>\n<p>Do I need to forward declare \"<code>class aSpecialVectorType;</code>\" before <code>main()</code>?</p>\n<p>And btw, is it legal to use another name other than \"<code>main</code>\" in c++?</p>\n<p>Thanks</p>\n<h2>Edit1:</h2>\n<p>If not, what is the best way that it can output a vector?</p>\n<p>My friend ask me to give him a blackbox that can serve as \"vector in and vector out\", he will use his matlab code to call my code. That's why I am asking.\nI know how to vector in, but not sure if there is an easy way to output a vector.</p>\n<p>Thanks</p>\n<h2>Edit2:</h2>\n<p>I am surprised why C++ has such an standard, any explanation? :)</p>\n", "Tags": "<c++>", "OwnerUserId": "650718", "AnswerCount": "6"}, "10822224": {"ParentId": "10821417", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>To expand on dashblinkenlight's answer, here is how two programs can communicate.  Not by one capturing the return value of the other, but by a process called \"piping\", directing the standard output of one program to the standard input of another.  Here, I'll print out a list of strings in one program, then the other program will expect a list of strings on its standard input, then I'll show you how to use the two together:</p>\n<pre><code>// Output program\n#include &lt;vector&gt;\n#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    using namespace std;\n\n    vector&lt;string&gt; v;\n    v.push_back(\"one\");\n    v.push_back(\"two\");\n    v.push_back(\"three\");\n\n    for (int i=0; i&lt;v.size(); ++i)\n        cout &lt;&lt; v[i] &lt;&lt; '\\n';\n}\n\n// input program\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;string&gt;\n\nint main()\n{\n    using namespace std;\n\n    vector&lt;string&gt; v;\n    for (string tmp; cin &gt;&gt; tmp; )\n        v.push_back(tmp);\n\n    // print the strings in reverse order\n    for (int i=v.size()-1; i&gt;=0; --i)\n        cout &lt;&lt; v[i] &lt;&lt; '\\n';\n}\n</code></pre>\n<p>If you run the first program by itself, it will just print the 3 strings out.  If you run the second program by itself, it will prompt the user for strings until he uses the termination command.  But on all of the most widely used operating systems, you can chain the two together.  Then the output of the first will become the input of the second.  On Unix-like systems, you do it like this:</p>\n<pre><code>./output_program | ./input_program\n</code></pre>\n<p>On Windows, I think it's the same, or very similar.  Not sure though.</p>\n", "OwnerUserId": "440119", "LastEditorUserId": "440119", "LastEditDate": "2012-05-31T17:16:05.750", "Id": "10822224", "Score": "1", "CreationDate": "2012-05-30T18:37:10.993", "LastActivityDate": "2012-05-31T17:16:05.750"}, "10821450": {"ParentId": "10821417", "CommentCount": "0", "Body": "<p>No.</p>\n<p><code>main</code> must return <code>int</code>.</p>\n<p>Other functions are free to have other names and return anything they want.</p>\n", "OwnerUserId": "103167", "PostTypeId": "2", "Id": "10821450", "Score": "1", "CreationDate": "2012-05-30T17:41:20.053", "LastActivityDate": "2012-05-30T17:41:20.053"}, "10821456": {"ParentId": "10821417", "CommentCount": "4", "Body": "<p>No. <em>main</em> must be declared in one of these two ways:</p>\n<pre><code>int main()\n</code></pre>\n<p>or </p>\n<pre><code>int main(int argc, char*[] argv)\n</code></pre>\n<p>Anything outside of this is not standard.</p>\n", "OwnerUserId": "898478", "PostTypeId": "2", "Id": "10821456", "Score": "3", "CreationDate": "2012-05-30T17:42:04.623", "LastActivityDate": "2012-05-30T17:42:04.623"}, "10821483": {"ParentId": "10821417", "CommentCount": "3", "Body": "<p>The answer to your first question is no. \nThe answer to your second question is yes, but you need to specify the name of your entry point to your executable (via linker settings ... may not be available on all linker tools).</p>\n<p><strong>Below statement is wrong</strong>\nSee Ben's comment below. Useful info that.</p>\n<p>Be aware that though the name of the entry-point can change, it MUST conform to the standard parameter and return types.</p>\n", "OwnerUserId": "509614", "PostTypeId": "2", "Id": "10821483", "Score": "0", "CreationDate": "2012-05-30T17:43:38.527", "LastActivityDate": "2012-05-30T17:43:38.527"}, "10821445": {"ParentId": "10821417", "CommentCount": "0", "Body": "<p><strong>No.</strong> <br>\nAccording to the standard <code>main()</code> must return an <code>int</code> and only that.</br></p>\n", "OwnerUserId": "1336150", "PostTypeId": "2", "Id": "10821445", "Score": "2", "CreationDate": "2012-05-30T17:41:13.567", "LastActivityDate": "2012-05-30T17:41:13.567"}, "bq_ids": {"n4140": {"so_10821417_10821475_1": {"section_id": 7146, "quality": 0.8823529411764706, "length": 15}}, "n3337": {"so_10821417_10821475_1": {"section_id": 6890, "quality": 0.8823529411764706, "length": 15}}, "n4659": {"so_10821417_10821475_1": {"section_id": 8647, "quality": 0.8823529411764706, "length": 15}}}});