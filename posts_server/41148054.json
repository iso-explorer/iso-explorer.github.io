post_cb({"41148054": {"CommentCount": "26", "ViewCount": "225", "PostTypeId": "1", "LastEditorUserId": "7123797", "CreationDate": "2016-12-14T16:54:26.603", "LastActivityDate": "2016-12-17T05:18:50.783", "Title": "non-static data member and its definition from cppreference", "AcceptedAnswerId": "41195598", "LastEditDate": "2016-12-14T19:21:24.250", "Id": "41148054", "Score": "2", "Body": "<p>Definition from <a href=\"http://en.cppreference.com/w/cpp/language/data_members\" rel=\"nofollow noreferrer\">cppreference</a>: </p>\n<blockquote>\n<p id=\"so_41148054_41148054_0\">Non-static data members are the variables that are declared in a member specification of a class. </p>\n</blockquote>\n<p>And they have example:</p>\n<pre>\nclass S\n{\n   int&amp; r;               // non-static data member of reference type\n};\n</pre>\n<p>But we know that non-static data member references are not variables because of the Standard</p>\n<blockquote>\n<p id=\"so_41148054_41148054_1\">\u00a73/6: A variable is introduced by the declaration of a reference other than a non-static data member or of an object.</p>\n</blockquote>\n<p>So their definition of non-static data member is wrong (they forgot about this exception)? Where I can find correct definition of the term \"non-static data member\"?</p>\n<p><em>Unfortunately I couldn't find definition of non-static data member in the C++ Standard.</em></p>\n<p><strong>EDIT</strong>: From <a href=\"http://en.cppreference.com/w/cpp/language/object\" rel=\"nofollow noreferrer\">cppreference object definition</a> and discussion below we can conclude that non-static data members are not objects at all. And <a href=\"http://en.cppreference.com/w/cpp/language/data_members\" rel=\"nofollow noreferrer\">cppreference non-static member page</a> corrected the discussed definition at the moment.</p>\n", "Tags": "<c++>", "OwnerUserId": "7123797", "AnswerCount": "1"}, "41195598": {"ParentId": "41148054", "CommentCount": "1", "Body": "<blockquote>\n<p id=\"so_41148054_41195598_0\">So their definition of non-static data member is wrong </p>\n</blockquote>\n<p>Yes, it was wrong to use the word \"variable\" in the introductory sentence of the data members page (and, as mentioned in the comment, it's a wiki, the discussion tabs on wiki pages get faster feedback).</p>\n<p>The current standard wording is <code>3[basic]/6</code> and :</p>\n<blockquote>\n<p id=\"so_41148054_41195598_1\">A variable is introduced by the declaration of a reference other than a non-static data member or of an object. The variable\u2019s name, if any, denotes the reference or object.</p>\n</blockquote>\n<p>So, reference data members are excluded explicitly, and to figure out the rest you need the definition of \"object\" from <code>1.8[intro.object]/1</code></p>\n<blockquote>\n<p id=\"so_41148054_41195598_2\">An object is created by a definition (3.1), by a new-expression (5.3.4), when implicitly changing the active member of a union (9.3), or when a temporary object is created (4.4, 12.2).</p>\n</blockquote>\n<p>And finally <code>3.1[basic.def]/2</code></p>\n<blockquote>\n<p id=\"so_41148054_41195598_3\">A declaration is a definition unless ... it declares a non-inline static data member in a class definition (9.2, 9.2.3),</p>\n</blockquote>\n<p>Although it may seem like the distinction between variables and data members is impractical language-lawyerism, it is actually important when understanding compiler diagnostics, at least in this case:</p>\n<pre><code>struct X {\n    int m;\n    void f() { auto l = [m](){ return m; }; }\n};\n</code></pre>\n<p>gcc:</p>\n<pre><code>error: capture of non-variable 'X::m' \n</code></pre>\n<p>clang:</p>\n<pre><code>error: 'm' in capture list does not name a variable\n</code></pre>\n<p>icc:</p>\n<pre><code>error: member \"X::m\" is not a variable\n</code></pre>\n", "OwnerUserId": "273767", "PostTypeId": "2", "Id": "41195598", "Score": "1", "CreationDate": "2016-12-17T05:18:50.783", "LastActivityDate": "2016-12-17T05:18:50.783"}, "bq_ids": {"n4140": {"so_41148054_41195598_3": {"section_id": 5907, "quality": 0.7, "length": 7}, "so_41148054_41148054_0": {"section_id": 5861, "quality": 0.625, "length": 5}, "so_41148054_41148054_1": {"section_id": 7029, "quality": 0.9, "length": 9}, "so_41148054_41195598_0": {"section_id": 429, "quality": 0.6666666666666666, "length": 4}, "so_41148054_41195598_1": {"section_id": 7029, "quality": 0.875, "length": 14}}, "n3337": {"so_41148054_41195598_3": {"section_id": 5679, "quality": 0.7, "length": 7}, "so_41148054_41148054_1": {"section_id": 6775, "quality": 0.9, "length": 9}, "so_41148054_41195598_0": {"section_id": 421, "quality": 0.6666666666666666, "length": 4}, "so_41148054_41148054_0": {"section_id": 5631, "quality": 0.625, "length": 5}, "so_41148054_41195598_1": {"section_id": 6775, "quality": 0.875, "length": 14}}, "n4659": {"so_41148054_41195598_3": {"section_id": 8531, "quality": 0.8, "length": 8}, "so_41148054_41195598_0": {"section_id": 447, "quality": 0.6666666666666666, "length": 4}, "so_41148054_41195598_1": {"section_id": 8526, "quality": 0.875, "length": 14}, "so_41148054_41148054_1": {"section_id": 8526, "quality": 0.9, "length": 9}, "so_41148054_41195598_2": {"section_id": 7247, "quality": 0.8125, "length": 13}, "so_41148054_41148054_0": {"section_id": 7330, "quality": 0.625, "length": 5}}}});