post_cb({"bq_ids": {"n4140": {"so_33398579_33398853_8": {"length": 10, "quality": 0.625, "section_id": 3291}}, "n4659": {"so_33398579_33398853_8": {"length": 10, "quality": 0.625, "section_id": 4053}}}, "33411503": {"Id": "33411503", "PostTypeId": "2", "Body": "<p>Finally I got the answer. Look at this little snippet:</p>\n<pre><code>typedef unsigned char uint1;    // 1 Byte ( 8 Bit)\ntypedef unsigned int uint4;     // 4 Byte (32 Bit)\n\nuint1 test=10;\nuint4 test2=(uint4)test;\n\n\ncout &lt;&lt; sizeof(uint1)*8 &lt;&lt; \" Bit-\" &lt;&lt; \"Variable (test): \";\n\nfor (int i=0; i&lt;sizeof(test)*8; i++) {\n    if ((test &lt;&lt; i) &amp; 0x80)\n        cout &lt;&lt; 1;\n    else\n        cout &lt;&lt; 0;\n}\ncout &lt;&lt; endl;\ncout &lt;&lt; sizeof(uint4)*8 &lt;&lt; \" Bit-\" &lt;&lt; \"Variable (test2): \";\n\nfor (int i=0; i&lt;sizeof(test2)*8; i++) {\n    if ((test &lt;&lt; i) &amp; 0x80000000)\n        cout &lt;&lt; 1;\n    else\n        cout &lt;&lt; 0;\n}\n</code></pre>\n<p>Output:</p>\n<p>8 Bit-Variable (test): 00001010</p>\n<p>32 Bit-Variable (test): 00000000 00000000 00000000 00001010</p>\n", "Score": "1", "LastActivityDate": "2015-10-29T10:19:04.217", "CreationDate": "2015-10-29T10:19:04.217", "ParentId": "33398579", "CommentCount": "2", "OwnerUserId": "4555796"}, "33398579": {"ViewCount": "108", "LastEditDate": "2015-10-28T18:25:47.737", "AcceptedAnswerId": "33411503", "Title": "What happens in detail when casting 1Byte data into 4Byte", "CreationDate": "2015-10-28T18:13:39.150", "LastActivityDate": "2015-10-29T10:19:04.217", "CommentCount": "11", "Body": "<p>I'm trying to implement MD5 Algorithm according to RFC1321 in C/C++ and have some trouble with type conversion.</p>\n<pre><code>typedef unsigned int uint4;  // 32 Bit (4 Byte)\ntypedef unsigned char uint1; //  8 Bit (1 Byte)\n\n// pseudocode\nuint1 byte = {1,0,0,1,1,1,1,0}; // 0b10011110\nuint4 t_uint4 = (uint4)byte;\n\nuint4 = { ??? }\n\n// maybe like this??\nuint4 = { {1,0,0,1,1,1,1,0},{???},{???},{???} }\nuint4 = { {???},{???},{???},{1,0,0,1,1,1,1,0} }\n</code></pre>\n<p>So what happens in detail when casting a 1Byte variable into a 4Byte variable, respectively a unsigned char into an unsigned int?</p>\n", "PostTypeId": "1", "LastEditorUserId": "2684539", "Id": "33398579", "AnswerCount": "3", "Score": "2", "OwnerUserId": "4555796", "Tags": "<c++><c><casting>", "FavoriteCount": "1"}, "33398611": {"Id": "33398611", "PostTypeId": "2", "Body": "<p>The numeric value remains the same, so zeroes are added to the \"logical\" left. Where that happens in the underlying bytes that make up the 4-byte integer depends on the endianness of the platform. </p>\n", "Score": "6", "LastActivityDate": "2015-10-28T18:15:45.967", "CreationDate": "2015-10-28T18:15:45.967", "ParentId": "33398579", "CommentCount": "0", "OwnerUserId": "214671"}, "33398853": {"Id": "33398853", "PostTypeId": "2", "Body": "<p>For completeness:</p>\n<blockquote>\n<p id=\"so_33398579_33398853_0\">So what happens [...] when casting [..] a unsigned char into an unsigned int?</p>\n</blockquote>\n<p>C11 Standard (draft):</p>\n<blockquote>\n<p id=\"so_33398579_33398853_1\"><strong>6.5.4 Cast Operators</strong></p>\n<p id=\"so_33398579_33398853_2\">[...]</p>\n<p id=\"so_33398579_33398853_3\"><strong>Semantics</strong></p>\n<p id=\"so_33398579_33398853_4\"><strong>5</strong> Preceding an expression by a parenthesized type name converts the value of the expression to the named type. This construction is called a <em>cast</em>.</p>\n</blockquote>\n<p>and</p>\n<blockquote>\n<p id=\"so_33398579_33398853_5\"><strong>6.5.16.1 Simple assignment</strong></p>\n<p id=\"so_33398579_33398853_6\">[...]</p>\n<p id=\"so_33398579_33398853_7\"><strong>Semantics</strong></p>\n<p id=\"so_33398579_33398853_8\"><strong>2</strong> In <em>simple assignment</em> (=), the value of the right operand is converted to the type of the\n  assignment expression and replaces the value stored in the object designated by the left\n  operand.</p>\n</blockquote>\n", "Score": "0", "LastActivityDate": "2015-10-28T18:28:30.600", "CreationDate": "2015-10-28T18:28:30.600", "ParentId": "33398579", "CommentCount": "1", "OwnerUserId": "694576"}});