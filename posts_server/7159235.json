post_cb({"bq_ids": {"n4140": {"so_7159235_7160293_1": {"length": 13, "quality": 0.8666666666666667, "section_id": 7136}, "so_7159235_7160293_0": {"length": 7, "quality": 0.875, "section_id": 7136}}, "n3337": {"so_7159235_7160293_1": {"length": 13, "quality": 0.8666666666666667, "section_id": 6880}, "so_7159235_7160293_0": {"length": 7, "quality": 0.875, "section_id": 6880}}, "n4659": {"so_7159235_7160293_1": {"length": 12, "quality": 0.8, "section_id": 8637}, "so_7159235_7160293_0": {"length": 7, "quality": 0.875, "section_id": 8637}}}, "7160293": {"Id": "7160293", "PostTypeId": "2", "Body": "<p>C++ 2003, <em>3.5 Program and Linkage</em>, <em>3</em>:</p>\n<blockquote>\n<p id=\"so_7159235_7160293_0\">A name having namespace scope (3.3.5) has internal linkage if it is the name of\n  [...]</p>\n<p id=\"so_7159235_7160293_1\">\u2014 an object or reference that is explicitly declared const and neither explicitly declared  extern nor previously declared to have external linkage; [...]</p>\n</blockquote>\n<p>So you need an explicit <code>extern</code> in the declaration..</p>\n", "LastActivityDate": "2011-08-23T11:30:06.777", "CommentCount": "0", "CreationDate": "2011-08-23T11:30:06.777", "ParentId": "7159235", "Score": "1", "OwnerUserId": "76722"}, "7159235": {"ViewCount": "1759", "Body": "<p>I would like to define array of strings in different cpp file, but there seems to be some discrepancy between definition and declaration when I try to make pointer (array element) also const. Using the same definition as declaration seems to work fine, so I suspect initialization is not an issue. In the code below I have commented out offending const - so it will compile, but  if const is un-commented, linker (tested with g++ 4.6 &amp; VS10) will not find ext_string_array.</p>\n<h2>main.cpp:</h2>\n<pre><code>#include &lt;iostream&gt;\n\nconst char* const string_array[2] =\n{\n  \"aaa\",\n  \"bbb\"\n};\n\nextern const char* /*const*/ ext_string_array[2]; // &lt;- offending const\n\nint main()\n{\n  std::cout &lt;&lt; string_array[0];\n  std::cout &lt;&lt; ext_string_array[0];\n}\n</code></pre>\n<hr>\n<h2>definition.cpp:</h2>\n<pre><code>const char* /*const*/ ext_string_array[2] = // &lt;- offending const\n{\n  \"aaa\",\n  \"bbb\"\n};\n</code></pre>\n</hr>", "Title": "external array definition", "CreationDate": "2011-08-23T09:57:53.940", "LastActivityDate": "2011-08-23T11:30:06.777", "CommentCount": "0", "PostTypeId": "1", "Id": "7159235", "Score": "4", "OwnerUserId": "757089", "Tags": "<c++><arrays><const><definition><extern>", "AnswerCount": "2"}, "7159299": {"Id": "7159299", "PostTypeId": "2", "Body": "<p>In this context const also means static, unless you also specify extern. Change your .cpp file to this</p>\n<pre><code>extern const char* const ext_string_array[2] =\n{\n  \"aaa\",\n  \"bbb\"\n};\n</code></pre>\n", "LastActivityDate": "2011-08-23T10:02:44.840", "CommentCount": "0", "CreationDate": "2011-08-23T10:02:44.840", "ParentId": "7159235", "Score": "3", "OwnerUserId": "882003"}});