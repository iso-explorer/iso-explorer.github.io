post_cb({"40805865": {"CommentCount": "2", "ViewCount": "547", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2016-11-25T13:10:44.053", "LastActivityDate": "2016-11-25T15:19:38.517", "Title": "float initialization from double with braces", "AcceptedAnswerId": "40805955", "LastEditDate": "2017-05-23T11:45:43.277", "Id": "40805865", "Score": "8", "Body": "<p>Why does the compiler (clang,gcc) not warn about narrowing conversions when doing this</p>\n<pre><code>float a{3.1231231241234123512354123512341235123541235};\nfloat a = {double(3.1231231241234123512354123512341235123541235)}\n</code></pre>\n<p>I expected a warning because I do explicit value-initialization with braces.\nFollowing this answer <a href=\"https://stackoverflow.com/a/18222927/293195\">Link</a> it should spit out an error.</p>\n<p><a href=\"http://coliru.stacked-crooked.com/a/13e474d1b598b4f5\" rel=\"nofollow noreferrer\">Compilation here</a></p>\n", "Tags": "<c++><c++11><c++14><brace-initialization><value-initialization>", "OwnerUserId": "293195", "AnswerCount": "2"}, "40805946": {"ParentId": "40805865", "PostTypeId": "2", "CommentCount": "7", "Body": "<p>Because the source is a constant expression and overflow does not occur for these cases, then <a href=\"http://en.cppreference.com/w/cpp/language/list_initialization#Narrowing_conversions\" rel=\"nofollow noreferrer\">narrowing conversion</a> error won't be triggered.</p>\n<p>(emphasis mine)</p>\n<blockquote>\n<p id=\"so_40805865_40805946_0\">conversion from a long double to double or to float and conversion from double to float, <strong>except where the source is a constant expression and overflow does not occur</strong></p>\n</blockquote>\n<p>If you use it with a <code>double</code> variable(i.e. a non-constant-expression) or a constant with big value which causes overlow, the diagnostic message will be generated. e.g.</p>\n<pre><code>double d = 3.14159;\nfloat a {d}; // non-constant-expression cannot be narrowed from type 'double' to 'float' in initializer list\n</code></pre>\n<p><strong>EDIT</strong> (for longer input)</p>\n<p>Because even if the value cannot be represented exactly by <code>float</code>, overflow still doesn't occur, then it's allowed.</p>\n<p><a href=\"http://eel.is/c++draft/dcl.init.list#7.2\" rel=\"nofollow noreferrer\">$8.6.4/7.2 List-initialization</a>\n(emphasie mine)</p>\n<blockquote>\n<p id=\"so_40805865_40805946_1\">from long double to double or float, or from double to float, except where the source is a constant expression and the actual value after conversion is within the range of values that can be represented (<strong>even if it cannot be represented exactly</strong>), or</p>\n</blockquote>\n", "OwnerUserId": "3309790", "LastEditorUserId": "3309790", "LastEditDate": "2016-11-25T15:19:38.517", "Id": "40805946", "Score": "10", "CreationDate": "2016-11-25T13:15:23.153", "LastActivityDate": "2016-11-25T15:19:38.517"}, "bq_ids": {"n4140": {"so_40805865_40805946_0": {"section_id": 3329, "quality": 0.6875, "length": 11}, "so_40805865_40805946_1": {"section_id": 3329, "quality": 1.0, "length": 24}}, "n3337": {"so_40805865_40805946_0": {"section_id": 3199, "quality": 0.6875, "length": 11}, "so_40805865_40805946_1": {"section_id": 3199, "quality": 1.0, "length": 24}}, "n4659": {"so_40805865_40805946_1": {"section_id": 4095, "quality": 1.0, "length": 24}, "so_40805865_40805946_0": {"section_id": 4095, "quality": 0.6875, "length": 11}}}, "40805955": {"ParentId": "40805865", "PostTypeId": "2", "CommentCount": "0", "Body": "<p><a href=\"http://eel.is/c++draft/dcl.init.list#7\" rel=\"nofollow noreferrer\">[dcl.init.list]/\u00a77</a> (standard draft)</p>\n<blockquote>\n<p id=\"so_40805865_40805955_0\">A narrowing conversion is an implicit conversion</p>\n<p id=\"so_40805865_40805955_1\">...</p>\n<ul>\n<li>from long double to double or float, or from double to float, <strong>except where the source is a constant expression and the actual value after conversion is within the range of values that can be represented (even if it cannot be represented exactly)</strong>, or</li>\n</ul>\n<p id=\"so_40805865_40805955_2\">...</p>\n</blockquote>\n<p>Both expressions <code>3.14159</code> and <code>double(3.141)</code> are constant expressions and the value is within the range of values representable by <code>float</code>. Therefore the conversion isn't <em>narrowing</em> as defined by the standard and there is no requirement to warn about the conversion.</p>\n<hr>\n<blockquote>\n<p id=\"so_40805865_40805955_3\">but it does not give a warning also for longer inputs</p>\n</blockquote>\n<p><a href=\"http://coliru.stacked-crooked.com/a/bb05355672ef18d1\" rel=\"nofollow noreferrer\">Sure it does</a>, as long as the value is outside of the range of values representable by <code>float</code>.</p>\n</hr>", "OwnerUserId": "2079303", "LastEditorUserId": "2079303", "LastEditDate": "2016-11-25T13:59:40.393", "Id": "40805955", "Score": "15", "CreationDate": "2016-11-25T13:16:04.340", "LastActivityDate": "2016-11-25T13:59:40.393"}});