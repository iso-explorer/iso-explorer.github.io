post_cb({"4075305": {"Id": "4075305", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_4075276_4075305_0\">Would that be legal? My VC++6 compiles it correctly, but I think this should be illegal.</p>\n</blockquote>\n<p>No it shouldn't be legal. Dump VC++6. Use a new and better compiler.</p>\n", "LastActivityDate": "2010-11-02T06:10:31.283", "CommentCount": "0", "CreationDate": "2010-11-02T06:10:31.283", "ParentId": "4075276", "Score": "1", "OwnerUserId": "165520"}, "4075820": {"Id": "4075820", "PostTypeId": "2", "Body": "<p>That should be illegal but VC6 was very bad at that.</p>\n<p>In Visual Studio 2005, a new project-level setting was introduced named <strong>\"Force conformance in For-loop Scope\"</strong>. This addressed the problem and provided backward compatibility as well. Which means that older code bases could compile in newer versions of visual studio through  disabling this setting.</p>\n<p>However, one thing that MS did right in VS2005 to turn this on by default hence, coming a little bit closer to the standards.</p>\n", "LastActivityDate": "2010-11-02T07:59:14.483", "CommentCount": "0", "CreationDate": "2010-11-02T07:59:14.483", "ParentId": "4075276", "Score": "4", "OwnerUserId": "30341"}, "4075307": {"Id": "4075307", "PostTypeId": "2", "Body": "<p>Microsoft is not known famously for following standards :-) VC6 is even more infamous in that regards. It actually leaked scope in certain circumstances like:</p>\n<pre><code>for (int i = 0; i &lt; 10; i++) { }\n// Can still use 'i' here.\n</code></pre>\n<p>leading to some <a href=\"https://stackoverflow.com/questions/984878/what-is-the-possible-use-for-define-for-if-false-else-for\">funky macro magic</a> to get around this problem. If you're using a ISO-conformant compiler, both those things you try to do are illegal.</p>\n<p>From ISO c++0x (hopefully the soon-to-be standard) <code>3.3.3/1</code>:</p>\n<blockquote>\n<p id=\"so_4075276_4075307_0\">A name declared in a block is local to that block; it has block scope. Its potential scope begins at its point of declaration and ends at the end of its block.</p>\n</blockquote>\n<p>And section <code>6.4</code> states:</p>\n<blockquote>\n<p id=\"so_4075276_4075307_1\">The substatement in a selection-statement (each substatement, in the else form of the if statement) implicitly defines a block scope.</p>\n<p id=\"so_4075276_4075307_2\">A name introduced by a declaration in a condition (either introduced by the type-specifier-seq or the declara tor of the condition) is in scope from its point of declaration until the end of the substatements controlled by the condition.</p>\n</blockquote>\n", "LastEditorUserId": "-1", "LastActivityDate": "2010-11-06T08:07:04.207", "Score": "10", "CreationDate": "2010-11-02T06:10:51.293", "ParentId": "4075276", "CommentCount": "1", "OwnerUserId": "14860", "LastEditDate": "2017-05-23T12:30:59.697"}, "bq_ids": {"n4140": {"so_4075276_4075278_0": {"length": 15, "quality": 0.8333333333333334, "section_id": 7061}, "so_4075276_4075307_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 7061}, "so_4075276_4075307_1": {"length": 7, "quality": 0.875, "section_id": 3905}}, "n3337": {"so_4075276_4075278_0": {"length": 15, "quality": 0.8333333333333334, "section_id": 6805}, "so_4075276_4075307_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 6805}, "so_4075276_4075307_1": {"length": 8, "quality": 1.0, "section_id": 3765}}, "n4659": {"so_4075276_4075278_0": {"length": 15, "quality": 0.8333333333333334, "section_id": 8558}, "so_4075276_4075307_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 8558}, "so_4075276_4075307_1": {"length": 6, "quality": 0.75, "section_id": 4791}}}, "4075306": {"Id": "4075306", "PostTypeId": "2", "Body": "<p>VC took about a decade to implement proper scope for variables declared in loops and conditional statements. Generally you can't rely on VC6' judgment regarding C++. </p>\n", "LastEditorUserId": "5666987", "LastActivityDate": "2015-12-31T07:42:10.783", "Score": "2", "CreationDate": "2010-11-02T06:10:48.533", "ParentId": "4075276", "CommentCount": "0", "OwnerUserId": "140719", "LastEditDate": "2015-12-31T07:42:10.783"}, "4075278": {"Id": "4075278", "PostTypeId": "2", "Body": "<p>No, it would not be (\u00a73.3.2 Local scope):</p>\n<blockquote id=\"so_4075276_4075278_0\">\n<ol>\n<li>A name declared in a block (6.3) is local to that block. Its potential\n  scope begins at its point of\n  declaration (3.3.1) and ends at the\n  end of its declarative region.</li>\n</ol>\n</blockquote>\n<p>I recommend you use compilers released in the last decade.</p>\n", "LastActivityDate": "2010-11-02T06:06:50.037", "CommentCount": "0", "CreationDate": "2010-11-02T06:06:50.037", "ParentId": "4075276", "Score": "15", "OwnerUserId": "47773"}, "4075276": {"ViewCount": "1560", "Body": "<p>If I had the following code:</p>\n<pre><code>for(int myvar = 0; myvar &lt; 10; myvar++);\nif(1)\n{\n    int var2 = 16;\n}\n</code></pre>\n<p>Then, afterwards I wrote the following:</p>\n<pre><code>myvar = 0;\nvar2 = 0;\n</code></pre>\n<p>Would that be legal?\nMy VC++6 compiles it correctly, but I think this should be illegal. (It gives a compiler error in one of my other compilers.)</p>\n", "AcceptedAnswerId": "4075307", "Title": "Variable Scope in C++", "CreationDate": "2010-11-02T06:05:48.720", "Id": "4075276", "CommentCount": "2", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2011-05-02T03:04:07.580", "LastEditorUserId": "365102", "LastActivityDate": "2015-12-31T07:42:10.783", "Score": "8", "OwnerUserId": "365102", "Tags": "<c++><visual-c++><scope><vc6>", "AnswerCount": "5"}});