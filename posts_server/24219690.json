post_cb({"bq_ids": {"n4140": {"so_24219690_24219690_0": {"length": 8, "quality": 0.8888888888888888, "section_id": 5479}}, "n3337": {"so_24219690_24219690_0": {"length": 8, "quality": 0.8888888888888888, "section_id": 5265}}, "n4659": {"so_24219690_24219690_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 6912}}}, "24220589": {"Id": "24220589", "PostTypeId": "2", "Body": "<p>Vour reference to the standard is explicit:  this is not allowed. </p>\n<p>Using Clang++ I get the very clear error message about this: </p>\n<pre><code>Test0614-1.cpp:17:18: error: non-inline namespace cannot be reopened as inline\ninline namespace M\n                 ^\nTest0614-1.cpp:12:11: note: previous definition is here\nnamespace M\n          ^\n</code></pre>\n<p>So it's definitively a bug in g++.  By the way, it's reported here: <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53402\" rel=\"nofollow\">https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53402</a></p>\n<p>The fact that the compiler accepts inline namespace for previous version of the standard and without at least a warning seems to be an issue.  This was already reported as bug in 2010 and should have been fixed:  <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=43824\" rel=\"nofollow\">https://gcc.gnu.org/bugzilla/show_bug.cgi?id=43824</a> </p>\n", "LastEditorUserId": "3723423", "LastActivityDate": "2014-06-14T14:18:06.880", "Score": "4", "CreationDate": "2014-06-14T13:49:04.937", "ParentId": "24219690", "CommentCount": "0", "OwnerUserId": "3723423", "LastEditDate": "2014-06-14T14:18:06.880"}, "24219690": {"ViewCount": "274", "Body": "<p>I read the section about namespace definition. Clause 7.3.1 of N3797 said:</p>\n<blockquote>\n<p id=\"so_24219690_24219690_0\">The inline keyword may be used on an extension-namespace-definition\n  only if it was previously used on the original-namespace-definition\n  for that namespace.</p>\n</blockquote>\n<p>Consider the following code snippet:</p>\n<pre><code>namespace M\n{\n    int h;\n}\n\ninline namespace M\n{\n    int j = 6;\n}\n</code></pre>\n<p>It compiled successful both with the <code>-std=c++11</code> and without that option. Can you explain that behavior? Is it a <code>g++</code> bug?</p>\n", "AcceptedAnswerId": "24220589", "Title": "inline namespace and extension namespace", "CreationDate": "2014-06-14T11:59:41.217", "LastActivityDate": "2014-06-14T14:18:06.880", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "Id": "24219690", "Score": "5", "Tags": "<c++><namespaces><g++><inline>", "AnswerCount": "1"}});