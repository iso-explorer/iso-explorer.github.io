post_cb({"bq_ids": {"n4140": {"so_34209484_34209484_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 6088}}, "n4659": {"so_34209484_34209484_0": {"length": 18, "quality": 0.6428571428571429, "section_id": 7584}}}, "34209484": {"ViewCount": "84", "LastEditDate": "2015-12-10T19:00:48.077", "AcceptedAnswerId": "34209591", "Title": "Erroneous expression in a nonptr-new-declarator", "CreationDate": "2015-12-10T18:49:41.197", "LastActivityDate": "2015-12-10T19:00:48.077", "CommentCount": "1", "Body": "<p>In [expr.new]/7 there is the following phrase:  </p>\n<blockquote>\n<p id=\"so_34209484_34209484_0\">If the <em>expression</em>, after converting to <code>std::size_t</code>, is a core\n  constant expression and the expression is erroneous, the program is\n  ill-formed. Otherwise, a new-expression with an erroneous expression\n  does not call an allocation function and terminates by throwing an\n  exception of a type that would match a handler (15.3) of type\n  <code>std::bad_array_new_length</code>.</p>\n</blockquote>\n<p>What is the relevance of distinguishing between an erroneous core constant expression and an expression that is just erroneous? </p>\n", "PostTypeId": "1", "LastEditorUserId": "411165", "Id": "34209484", "Score": "2", "OwnerUserId": "411165", "Tags": "<c++><language-lawyer><new-operator><c++14>", "AnswerCount": "1"}, "34209591": {"Id": "34209591", "PostTypeId": "2", "Body": "<p>The paragraph before the one you quoted expressed under which conditions the expression is <em>erroneous</em>. Essentially it boils down to the question whether the value is negative or too big. If so, it is an error.</p>\n<p>A <em>core constant expression</em> is something the compiler can and will compute at compile time. If the corresponding expression can, thus, statically be determined to be erroneous, it is a compile-time error. If the the expression is not a constant, it may not be possible to determine its value during compile time. However, in that case an error would be detected at run-time and the error has to result in an exception.</p>\n", "Score": "6", "LastActivityDate": "2015-12-10T18:56:52.810", "CreationDate": "2015-12-10T18:56:52.810", "ParentId": "34209484", "CommentCount": "0", "OwnerUserId": "1120273"}});