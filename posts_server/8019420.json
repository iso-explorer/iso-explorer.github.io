post_cb({"8019454": {"Id": "8019454", "PostTypeId": "2", "Body": "<p>Yes, overflow can occur on some platforms. For example, <code>size_t</code> can be defined as <code>unsigned long</code>, which can easily be bigger than <code>unsigned int</code>.</p>\n", "LastActivityDate": "2011-11-05T10:03:53.977", "CommentCount": "0", "CreationDate": "2011-11-05T10:03:53.977", "ParentId": "8019420", "Score": "1", "OwnerUserId": "89847"}, "8019420": {"ViewCount": "253", "Body": "<p>Is it possible that converting from size_t to unsigned int  result in overflow .</p>\n<pre><code> size_t x  = foo ( ) ;  // foo ( ) returns a value in type size_t\n unsigned int ux = (unsigned int ) x ;\n\n ux == x  // Is result of that line always 1 ?\n</code></pre>\n<p>language : c++</p>\n<p>platform : any </p>\n", "AcceptedAnswerId": "8019446", "Title": "converting from size_t to unsigned int", "CreationDate": "2011-11-05T10:00:06.943", "Id": "8019420", "CommentCount": "0", "PostTypeId": "1", "OwnerDisplayName": "user478571", "LastActivityDate": "2011-11-05T10:17:33.797", "Score": "2", "Tags": "<c++><type-conversion><unsigned-integer>", "AnswerCount": "2"}, "8019446": {"Id": "8019446", "PostTypeId": "2", "Body": "<p>Yes it's possible, <code>size_t</code> and <code>int</code> don't necessarily have the same size. It's actually very common to have 64bit <code>size_t</code>s and 32bit <code>int</code>s.</p>\n<p>C++11 draft N3290 says this in \u00a718.2/6:</p>\n<blockquote>\n<p id=\"so_8019420_8019446_0\">The type <strong>size_t</strong> is an implementation-defined unsigned integer type that is large enough to contain the size in bytes of any object.</p>\n</blockquote>\n<p><code>unsigned int</code> on the other hand is only required to be able to store values from 0 to <code>UINT_MAX</code> (defined in <code>&lt;climits&gt;</code> and following the C standard header <code>&lt;limits.h&gt;</code>) which is only guaranteed to be at least 65535 (2<sup>16</sup>-1).</p>\n", "LastEditorUserId": "635608", "LastActivityDate": "2011-11-05T10:17:33.797", "Score": "4", "CreationDate": "2011-11-05T10:02:59.380", "ParentId": "8019420", "CommentCount": "0", "LastEditDate": "2011-11-05T10:17:33.797", "OwnerUserId": "635608"}, "bq_ids": {"n4140": {"so_8019420_8019446_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 6708}}, "n3337": {"so_8019420_8019446_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 6463}}, "n4659": {"so_8019420_8019446_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 8183}}}});