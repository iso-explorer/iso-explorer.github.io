post_cb({"bq_ids": {"n4140": {"so_5910301_5910402_0": {"length": 15, "quality": 0.9375, "section_id": 6985}}, "n3337": {"so_5910301_5910402_0": {"length": 15, "quality": 0.9375, "section_id": 6731}}, "n4659": {"so_5910301_5910402_0": {"length": 15, "quality": 0.9375, "section_id": 8483}}}, "5910402": {"Id": "5910402", "PostTypeId": "2", "Body": "<p>From standard docs., <em>10.1.4</em>,</p>\n<blockquote>\n<p id=\"so_5910301_5910402_0\">... For each distinct base class that is specified virtual, <strong>the most derived object</strong>\n  shall contain a single base class subobject of that type. ....</p>\n</blockquote>\n<p>And so yes, just one.</p>\n", "LastActivityDate": "2011-05-06T11:00:07.137", "CommentCount": "0", "CreationDate": "2011-05-06T11:00:07.137", "ParentId": "5910301", "Score": "4", "OwnerUserId": "249490"}, "5910301": {"ViewCount": "1938", "Body": "<p>I have a question about virtual inheritance in c++:</p>\n<pre><code>class A {\n};\nclass B: virtual public A {\n};\nclass C: virtual public A {\n};\n\nclass D: public B,public C, virtual public A {\n};\n</code></pre>\n<p>If D inherits B and C virtual inheritance can ensure there is only one copy of A contained in D, but what about D inherits A using virtual public A again just like the code above?</p>\n<p>so the number of sub-objects of type A is 1 or 2?  </p>\n<p>ok, thank you for the answers, I understand.But I still confuse some expression with virtual inheritance.\nfor example:</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass A {\n    public:\n    A() {std::cout&lt;&lt;\"A \";}\n};\n\nclass B: A {\n    public:\n    B() {std::cout&lt;&lt;\"B \";}\n};\n\nclass AToo: virtual A {\n    public:\n    AToo() {\n    std::cout&lt;&lt;\"AToo \";\n}\n};\n\nclass ATooB: virtual AToo, virtual B {\n    public: \n    ATooB() {\n    std::cout&lt;&lt;\"ATooB \";\n}\n};\n</code></pre>\n<p>can the virtual can ensure only one copy of A in ATooB? if AToo virtual inherits A, but B does not, what will happen? two copies in ATooB? so this means both B and AToo should virtual inherit A in order to keep only one copy inside ATooB?</p>\n", "AcceptedAnswerId": "5910317", "Title": "what is virtual inheritance in c++", "CreationDate": "2011-05-06T10:51:34.450", "Id": "5910301", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2011-05-06T15:00:23.947", "LastEditorDisplayName": "user707549", "OwnerDisplayName": "user707549", "LastActivityDate": "2011-05-06T20:04:22.033", "Score": "10", "Tags": "<c++><inheritance><virtual>", "AnswerCount": "2"}, "5910317": {"Id": "5910317", "PostTypeId": "2", "Body": "<p>One - that's the intended use of <code>virtual</code> inheritance. There is only one copy of <code>A</code>.</p>\n<p>You can actually verify that easily. Give <code>A</code> a member and modify it using a <code>D</code> instance. If there was more  than one copy of <code>A</code>, the compiler would say that the access is ambiguous.</p>\n<p><strong>Edit</strong> in the edited question, there will be two copies of A. Each time <code>A</code> is inherited regularly (without <code>virtual</code>), a fresh copy of A is made. If you want one copy, declare it <code>virtual</code> every time.</p>\n", "LastEditorUserId": "234053", "LastActivityDate": "2011-05-06T20:04:22.033", "Score": "11", "CreationDate": "2011-05-06T10:52:21.703", "ParentId": "5910301", "CommentCount": "0", "OwnerUserId": "234053", "LastEditDate": "2011-05-06T20:04:22.033"}});