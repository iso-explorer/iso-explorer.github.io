post_cb({"3838313": {"ParentId": "3838226", "CommentCount": "0", "Body": "<p><code>public</code> and <code>private</code> are there only until compilation of the code. They don't have anything to do with the runtime or memory management.</p>\n", "OwnerUserId": "39742", "PostTypeId": "2", "Id": "3838313", "Score": "0", "CreationDate": "2010-10-01T10:22:22.257", "LastActivityDate": "2010-10-01T10:22:22.257"}, "5747976": {"ParentId": "3838226", "PostTypeId": "2", "CommentCount": "0", "Body": "<pre><code>class priva\n{\nint x=10;\npublic:\nint pub;\n};\nmain()\n{\npriva a;\nint *ptr;\nptr=&amp;a.pub;\n--ptr;//4 bite be4 there will be private data\ncout&lt;&lt;\"Private data having value of 10 is \"&lt;&lt;endl;\ncout&lt;&lt;*ptr;\n} \n</code></pre>\n", "OwnerUserId": "719447", "LastEditorUserId": "304", "LastEditDate": "2011-04-21T18:35:47.600", "Id": "5747976", "Score": "1", "CreationDate": "2011-04-21T18:00:17.840", "LastActivityDate": "2011-04-21T18:35:47.600"}, "3838263": {"ParentId": "3838226", "CommentCount": "0", "Body": "<p>Other than accesability there is no difference!</p>\n", "OwnerUserId": "453492", "PostTypeId": "2", "Id": "3838263", "Score": "0", "CreationDate": "2010-10-01T10:14:59.147", "LastActivityDate": "2010-10-01T10:14:59.147"}, "3838226": {"CommentCount": "8", "ViewCount": "1652", "CreationDate": "2010-10-01T10:10:48.670", "LastActivityDate": "2011-04-21T18:35:47.600", "Title": "Private data types and member functions", "AcceptedAnswerId": "3838582", "PostTypeId": "1", "Id": "3838226", "Score": "0", "Body": "<p>What does it actually mean when you declare a variable or a member function as private in a C++ class? Besides the obvious fact that, these are accessible only by the member functions, How are they mapped differently on memory, than their public counterparts?</p>\n", "Tags": "<c++><class>", "OwnerUserId": "360066", "AnswerCount": "5"}, "3838320": {"ParentId": "3838226", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>From standard docs, <em>9.2.12</em>,</p>\n<blockquote>\n<p id=\"so_3838226_3838320_0\">Nonstatic data members of a (non-union) class with the <strong>same access control</strong> (clause 11) are allocated so that <strong>later\n  members have higher addresses</strong> within a class object. <strong>The order of allocation of non-static data members with different access control is unspecified (11).</strong> Implementation alignment requirements might cause two adjacent members not to\n  be allocated immediately after each other; so might requirements for space for managing virtual functions (10.3) and\n  virtual base classes (10.1).</p>\n</blockquote>\n<p>The standards has specs for the order of allocation of memory but there isn't much difference in the memory that is being allocated for a <code>public</code> data member and it's <code>private</code> counterpart..</p>\n", "OwnerUserId": "249490", "LastEditorUserId": "249490", "LastEditDate": "2010-10-01T10:29:51.477", "Id": "3838320", "Score": "3", "CreationDate": "2010-10-01T10:23:36.110", "LastActivityDate": "2010-10-01T10:29:51.477"}, "3838582": {"ParentId": "3838226", "CommentCount": "1", "Body": "<p>Imagine that they <em>were</em> only acessible from member functions, then code like this would break:</p>\n<pre><code>class Foo {\n  int x; // this is private\n\npublic:\n  int&amp; X() { return x; } // this is public, but returns a reference to a private variable\n};\n\nFoo foo;\nfoo.X() = 42; // look, I can set the value of a private member without being inside a member function\n</code></pre>\n<p>In short, one of the most common way to define get/setters in C++ would break if there was some sort of magic enforcing that a private variable must only be accessed by member functions. That's obviously no good.</p>\n<p><code>public</code> and <code>private</code> are there to help the programmer structure his code, and nothing more. They offer absolutely no security, and no runtime protection against code accessing a \"private\" member. Variables are only private in the source code. In the compiled code, there is no difference.</p>\n", "OwnerUserId": "33213", "PostTypeId": "2", "Id": "3838582", "Score": "2", "CreationDate": "2010-10-01T11:06:52.883", "LastActivityDate": "2010-10-01T11:06:52.883"}, "bq_ids": {"n4140": {"so_3838226_3838320_0": {"section_id": 5873, "quality": 0.9230769230769231, "length": 48}}, "n3337": {"so_3838226_3838320_0": {"section_id": 5644, "quality": 0.9230769230769231, "length": 48}}, "n4659": {"so_3838226_3838320_0": {"section_id": 7356, "quality": 0.9230769230769231, "length": 48}}}});