post_cb({"32275328": {"CommentCount": "4", "ViewCount": "224", "PostTypeId": "1", "LastEditorUserId": "3341479", "CreationDate": "2015-08-28T16:06:44.863", "LastActivityDate": "2015-08-28T18:26:59.093", "Title": "Random Number Generator C++ Error in CMD", "LastEditDate": "2015-08-28T18:26:59.093", "Id": "32275328", "Score": "0", "Body": "<p>I'm trying to make a random number generator, to generate a number between 0 and 999.</p>\n<p>I did originally have it running where the seed for mt19937 was generated from time(null), but found that this would cause the number to change once per second, and was not fast enough for when I called it again from within the for loop.</p>\n<p>I'm using code::blocks to compile my code, and it compiles with no errors, but when I run the code I an error in cmd. </p>\n<pre><code>Error: terminate called after throwing an instance of 'std::runtime_error'\n  what():  random_device::random_device(const std::string&amp;)\n</code></pre>\n<p>Am I doing something horribly wrong?</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;random&gt;\n\nusing namespace std;\n\n//Random Number Generator\nint numGen() {\n\n    //Random Number Generator\n    random_device rd;\n    mt19937 mt(rd());\n    uniform_int_distribution&lt;int&gt; dist(0, 999);\n\n    for (int I = 0; I &lt; 6; i++) {\n        cout &lt;&lt;dist(mt) &lt;&lt; \" \";\n    }\n\n    cout &lt;&lt;endl;\n}\n</code></pre>\n<p>UPDATE:</p>\n<p>I've now run the exact same code from Visual Studio, and there is no error.</p>\n", "Tags": "<c++><c++11><random>", "OwnerUserId": "3341479", "AnswerCount": "2"}, "32275420": {"ParentId": "32275328", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>Your function never returns a value.  Since you have an <code>int</code> return type your function must return an something that is convertible to an <code>int</code>.  You can change your function to <code>void</code> if you do not want to return anything.</p>\n<p>Since your exception is referencing the constructor name then it appears the random device could not be created.  The C++14 standard 26.5.6.4 has</p>\n<blockquote>\n<p id=\"so_32275328_32275420_0\">Throws: A value of an implementation-defined type derived from exception if the random_device\n  could not be initialized.</p>\n</blockquote>\n", "OwnerUserId": "4342498", "LastEditorUserId": "4342498", "LastEditDate": "2015-08-28T16:24:41.773", "Id": "32275420", "Score": "0", "CreationDate": "2015-08-28T16:11:24.060", "LastActivityDate": "2015-08-28T16:24:41.773"}, "bq_ids": {"n4140": {"so_32275328_32275420_0": {"section_id": 3585, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_32275328_32275420_0": {"section_id": 3450, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_32275328_32275420_0": {"section_id": 4350, "quality": 0.7777777777777778, "length": 7}}}, "32275455": {"ParentId": "32275328", "CommentCount": "2", "Body": "<p><code>std::random_device</code> doesn't actually need to be implemented.</p>\n<p><a href=\"http://www.cplusplus.com/reference/random/random_device/\" rel=\"nofollow\">http://www.cplusplus.com/reference/random/random_device/</a></p>\n<p>3rd paragraph. If the device is no good, they throw an exception. Try using a different seeded RNG.</p>\n", "OwnerUserId": "1923959", "PostTypeId": "2", "Id": "32275455", "Score": "1", "CreationDate": "2015-08-28T16:13:17.157", "LastActivityDate": "2015-08-28T16:13:17.157"}});