post_cb({"13224919": {"CommentCount": "0", "ViewCount": "206", "CreationDate": "2012-11-05T01:43:46.603", "LastActivityDate": "2012-11-05T02:32:51.887", "Title": "Error using struct defined in another file in UnitTesting (cppunit)", "AcceptedAnswerId": "13225127", "PostTypeId": "1", "Id": "13224919", "Score": "0", "Body": "<p>I have a <code>Parser.h</code>, that defines a struct <code>StmtParent</code>: </p>\n<pre><code>...\nstruct StmtParent;\n\nclass Parser {\n...\n</code></pre>\n<p>Then in <code>Parser.cpp</code>: </p>\n<pre><code>struct StmtParent {\n    int stmtNo;\n    int parent;\n};\n... \n</code></pre>\n<p>Seems all right? Then I have a unit test (cppunit): </p>\n<pre><code># in ParserUnitTests.h\n#include \"header\\Parser.h\"\n\n# in ParserUnitTests.cpp\nvoid ParserUnitTests::testParseProcSideEffects() {\n...\nstack&lt;StmtParent&gt; follows;\n    ...\n</code></pre>\n<p>Then I get errors like: </p>\n<pre><code>error C2027: use of undefined type 'StmtParent'\n</code></pre>\n<p>Why, I can use functions like <code>Parser::parseLine()</code>. Why can't I access the struct? So I tried including <code>Parser.h</code> in <code>ParserUnitTests.cpp</code> (although I already have it included in the header). Then I get: </p>\n<pre><code>Error   8   error C2146: syntax error : missing ';' before identifier 'm_cCurToken' c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\parser.h    52\nError   9   error C4430: missing type specifier - int assumed. Note: C++ does not support default-int   c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\parser.h    52\nError   10  error C4430: missing type specifier - int assumed. Note: C++ does not support default-int   c:\\program files (x86)\\microsoft sdks\\windows\\v7.0a\\include\\parser.h    52\n...\n</code></pre>\n", "Tags": "<c++><visual-c++><cppunit>", "OwnerUserId": "292291", "AnswerCount": "1"}, "13225127": {"ParentId": "13224919", "PostTypeId": "2", "CommentCount": "1", "Body": "<p><code>Parser.h</code> does not define the struct, it forward-declares it. Therefore it's incomplete when you try to use it as a template parameter for the <code>stack</code>, and you can't use incomplete types as parameters for STL containers:</p>\n<blockquote>\n<p id=\"so_13224919_13225127_0\">C++11 draft 3035, 17.4.3.6, paragraph 2:</p>\n<p id=\"so_13224919_13225127_1\">In particular, the effects are undefined in the following cases:</p>\n<p id=\"so_13224919_13225127_2\">...</p>\n<blockquote>\n<p id=\"so_13224919_13225127_4\">if an incomplete type (3.9) is used as a template argument when instantiating a template component,\n    unless specifically allowed for that component.</p>\n</blockquote>\n</blockquote>\n<p>You can check <a href=\"http://www.drdobbs.com/the-standard-librarian-containers-of-inc/184403814\" rel=\"nofollow\">this</a> out for reasoning.</p>\n", "OwnerUserId": "596167", "LastEditorUserId": "596167", "LastEditDate": "2012-11-05T02:32:51.887", "Id": "13225127", "Score": "2", "CreationDate": "2012-11-05T02:14:23.310", "LastActivityDate": "2012-11-05T02:32:51.887"}, "bq_ids": {"n4140": {"so_13224919_13225127_4": {"section_id": 6324, "quality": 1.0, "length": 11}, "so_13224919_13225127_3": {"section_id": 6324, "quality": 1.0, "length": 11}, "so_13224919_13225127_1": {"section_id": 6324, "quality": 1.0, "length": 5}}, "n3337": {"so_13224919_13225127_4": {"section_id": 6081, "quality": 1.0, "length": 11}, "so_13224919_13225127_3": {"section_id": 6081, "quality": 1.0, "length": 11}, "so_13224919_13225127_1": {"section_id": 6081, "quality": 1.0, "length": 5}}, "n4659": {"so_13224919_13225127_4": {"section_id": 7834, "quality": 1.0, "length": 11}, "so_13224919_13225127_1": {"section_id": 7834, "quality": 1.0, "length": 5}, "so_13224919_13225127_3": {"section_id": 7834, "quality": 1.0, "length": 11}}}});