post_cb({"bq_ids": {"n4140": {"so_48401309_48401309_0": {"length": 13, "quality": 1.0, "section_id": 286}, "so_48401309_48401309_1": {"length": 15, "quality": 1.0, "section_id": 294}}, "n3337": {"so_48401309_48401309_0": {"length": 13, "quality": 1.0, "section_id": 277}, "so_48401309_48401309_1": {"length": 15, "quality": 1.0, "section_id": 285}}, "n4659": {"so_48401309_48401309_0": {"length": 13, "quality": 1.0, "section_id": 293}, "so_48401309_48401309_1": {"length": 15, "quality": 1.0, "section_id": 301}}}, "48401309": {"ViewCount": "69", "Body": "<p>Omitting a template argument is possible, since the standard says in 17.9.1, paragraph 3 [temp.arg.explicit] (<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4700.pdf\" rel=\"nofollow noreferrer\">N4700</a>):</p>\n<blockquote>\n<p id=\"so_48401309_48401309_0\">Trailing template arguments that can be deduced or obtained from default <em>template-argument</em>s may be omitted from the list of explicit <em>template-argument</em>s...</p>\n</blockquote>\n<p>On the other hand, the standard has a conflicting rule, as 17.9.2, paragraph 2 [temp.deduct] shows (emphasis mine):</p>\n<blockquote>\n<p id=\"so_48401309_48401309_1\">... Specifically, the following steps are performed when evaluating an explicitly specified template argument list with respect to a given function template:</p>\n<ul>\n<li>If the specified template arguments do not match the template parameters in kind (i.e., type, non-type, template), or if there are more arguments than there are parameters and no parameter is a template parameter pack, <strong>or if there is not an argument for each non-pack parameter,</strong> type deduction fails.</li>\n<li>...</li>\n</ul>\n</blockquote>\n<p>This paragraph suggests that all template arguments shall be specified if we were to use a explicit template argument list, which clearly contradicts to the above paragraph. Then, what's the intention?</p>\n", "Title": "Seemingly defective paragraph regarding template argument deduction?", "CreationDate": "2018-01-23T12:05:04.787", "LastActivityDate": "2018-01-23T12:08:36.623", "CommentCount": "0", "PostTypeId": "1", "Id": "48401309", "Score": "3", "OwnerUserId": "5645940", "Tags": "<c++><language-lawyer><c++17>", "AnswerCount": "1"}, "48401375": {"Id": "48401375", "PostTypeId": "2", "Body": "<p>The second quote applies <em>\"when evaluating an explicitly specified template argument list\"</em>, but the first clearly is about the case when some template arguments are not explicitly specified.  There's no conflict, because they're talking about two different situations.</p>\n", "LastActivityDate": "2018-01-23T12:08:36.623", "CommentCount": "7", "CreationDate": "2018-01-23T12:08:36.623", "ParentId": "48401309", "Score": "5", "OwnerUserId": "4323"}});