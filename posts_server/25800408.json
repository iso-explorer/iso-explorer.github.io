post_cb({"bq_ids": {"n4140": {"so_25800408_25800622_0": {"length": 36, "quality": 0.9230769230769231, "section_id": 2250}}, "n3337": {"so_25800408_25800622_0": {"length": 36, "quality": 0.9230769230769231, "section_id": 2238}}, "n4659": {"so_25800408_25800622_0": {"length": 35, "quality": 0.8974358974358975, "section_id": 2523}}}, "25800622": {"Id": "25800622", "PostTypeId": "2", "Body": "<p>My comments above are incorrect about clearing <code>failbit</code> and <code>eofbit</code> (only the single parameter overload of <code>seekg</code> clears <code>eofbit</code>), <code>seekg</code> sets <code>failbit</code> on error however, not <code>eofbit</code>, so your loop condition is never met.</p>\n<p>From [istream.unformatted]</p>\n<pre><code>basic_istream&lt;charT,traits&gt;&amp; seekg(off_type off, ios_base::seekdir dir);\n</code></pre>\n<blockquote>\n<p id=\"so_25800408_25800622_0\">Effects: Behaves as an unformatted input function (as described in 27.7.2.3, paragraph 1), except that it does not count the number of characters extracted and does not affect the value returned by subsequent calls to gcount(). After constructing a sentry object, if fail() != true, executes rdbuf()-&gt;pubseekoff(off, dir, ios_base::in). <strong>In case of failure, the function calls setstate(failbit)</strong> (which may throw ios_base::failure).</p>\n</blockquote>\n<p>Change your condition to <code>while (!sample.fail())</code> or even better <code>while (sample)</code> to test for <em>any</em> stream error, or <code>while(sample.get(ch))</code> to abort on the first read error.</p>\n", "LastEditorUserId": "657267", "LastActivityDate": "2014-09-12T04:43:34.207", "Score": "1", "CreationDate": "2014-09-12T04:14:50.803", "ParentId": "25800408", "CommentCount": "9", "LastEditDate": "2014-09-12T04:43:34.207", "OwnerUserId": "657267"}, "25800408": {"ViewCount": "64", "Body": "<p>So the problem I have is that it copies the last line into the numbers2.txt file infinite number of times. idk y its happening like tat it should stop after realizing moving two bytes over is merely going to result in it reaching the eof marker</p>\n<p>Here's the code</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include&lt;string&gt;\n\nusing namespace std;\n\nstring conversion(int);\n\nint conversion2(string);\n\nint main()\n{\n  string initialnumber;\n  fstream sample(\"numbers.txt\", ios::in | ios::out);\n  ofstream sample2(\"numbers2.txt\");\n\n  if (sample &amp;&amp; sample2) {\n    int number2;\n    string roman;\n    int number;\n    char ch;\n\n    //cout &lt;&lt; ch;\n    while (!sample.eof()) {\n      sample.get(ch);\n\n      //cout &lt;&lt; \"OK\" &lt;&lt; \" \";\n      if (ch != '1' &amp;&amp; ch != '2' &amp;&amp; ch != '3' &amp;&amp; ch != '4' &amp;&amp; ch != '5' &amp;&amp; ch != '6'\n          &amp;&amp; ch != '7' &amp;&amp; ch != '8' &amp;&amp; ch != '9') {\n        sample.seekg(-1L, ios::cur);\n        sample &gt;&gt; roman;\n        sample.seekg(2L, ios::cur);\n        sample2 &lt;&lt; roman &lt;&lt; \" \" &lt;&lt; conversion2(roman) &lt;&lt; endl;\n        //cout &lt;&lt; conversion2(roman) &lt;&lt; \" \" &lt;&lt; roman;\n        //cout &lt;&lt; \"OK\";\n        int L = sample.tellp();\n        cout &lt;&lt; L;\n\n      } else {\n        sample.seekg(-1L, ios::cur);\n        sample &gt;&gt; number2;\n        sample2 &lt;&lt; conversion(number2) &lt;&lt; \" \" &lt;&lt; number2 &lt;&lt; endl;\n        sample.seekg(2L, ios::cur);\n        //int l = sample2.tellp();\n        //cout &lt;&lt; l &lt;&lt; \" \";\n        //cout &lt;&lt; \"OK\";\n      }\n    }\n\n  } else {\n    cout &lt;&lt; \"fail\";\n  }\n\n  sample.close();\n  sample2.close();\n}\n</code></pre>\n", "Title": "File input output the last line of the output file is repeating infinite more times", "CreationDate": "2014-09-12T03:47:32.103", "LastActivityDate": "2014-09-12T04:43:34.207", "CommentCount": "5", "LastEditDate": "2014-09-12T03:48:31.277", "PostTypeId": "1", "LastEditorUserId": "657267", "Id": "25800408", "Score": "-2", "OwnerUserId": "3919769", "Tags": "<c++>", "AnswerCount": "1"}});