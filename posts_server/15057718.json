post_cb({"bq_ids": {"n4140": {"so_15057718_15057734_0": {"length": 12, "quality": 0.8571428571428571, "section_id": 3913}}, "n3337": {"so_15057718_15057734_0": {"length": 12, "quality": 0.8571428571428571, "section_id": 3773}}, "n4659": {"so_15057718_15057734_0": {"length": 9, "quality": 0.6428571428571429, "section_id": 4799}}}, "15057718": {"ViewCount": "985", "Body": "<p>I have just spend 3 hours, probably more, trying to find a bug, segfault or bad_allow, depending on the way I modified the code so as to understand what object was messing with the stack or memory: I put all my objects in doubt... I slaughtered classes... ( nonetheless this turned out to be good since those classes revealed themselves useless in the end :-) )...</p>\n<p>But, indeed, the real mistake was simply:\n<strong>I hadn't written a return statement</strong> in a function that should return a value (in my case I needed to return a <code>std::vector&lt;boost::any&gt;</code>).</p>\n<p>I thought that <strong>gcc (4.6.3)</strong> couldn't have compiled without it.\nAnd I feel even stranger remembering that something similar has happened to me with <strong>ms visual 2010</strong>.</p>\n<p>So now I am wondering whether it is legal not to write a return statement ??\nWhat happens in such cases ?</p>\n<p>Is it related with the fact that the main that can have a return value or not ?\nOr should I consider going to <strong>gcc 4.7</strong> ?</p>\n", "AcceptedAnswerId": "15057734", "Title": "What if I don't put a return value to a function whose prototype returns a value", "CreationDate": "2013-02-24T23:00:03.533", "LastActivityDate": "2013-02-24T23:28:54.253", "CommentCount": "4", "LastEditDate": "2013-02-24T23:10:08.677", "PostTypeId": "1", "Tags": "<c++><return><return-value>", "Id": "15057718", "AnswerCount": "2", "Score": "4", "OwnerUserId": "356440", "ClosedDate": "2013-02-25T03:59:03.723", "LastEditorUserId": "356440"}, "15057776": {"Id": "15057776", "PostTypeId": "2", "Body": "<p>If you compile with the flags <code>-Wall -Wextra -pedantic</code> It should give you a compiler warning about a function that should return a value but doesn't do so.</p>\n", "LastEditorUserId": "356440", "LastActivityDate": "2013-02-24T23:28:54.253", "Score": "5", "CreationDate": "2013-02-24T23:06:26.817", "ParentId": "15057718", "CommentCount": "3", "OwnerUserId": "2082884", "LastEditDate": "2013-02-24T23:28:54.253"}, "15057734": {"Id": "15057734", "PostTypeId": "2", "Body": "<p>It's undefined behaviour:</p>\n<blockquote>\n<p id=\"so_15057718_15057734_0\"><code>[C++11: 6.6.3/2]:</code> <em>[..]</em> Flowing off the end of a function is equivalent to a <code>return</code> with no value; this results in undefined behavior in a value-returning function.</p>\n</blockquote>\n<p>It compiles because:</p>\n<ol>\n<li>the compiler is not required to diagnose it;</li>\n<li>diagnosing this is not always trivial, so <em>your</em> compiler doesn't bother;</li>\n<li>C++ is a \"do it yourself\" language.</li>\n</ol>\n", "LastActivityDate": "2013-02-24T23:01:53.107", "CommentCount": "3", "CreationDate": "2013-02-24T23:01:53.107", "ParentId": "15057718", "Score": "8", "OwnerUserId": "560648"}});