post_cb({"bq_ids": {"n4140": {"so_22507947_22508215_3": {"length": 11, "quality": 1.0, "section_id": 5862}, "so_22507947_22508215_2": {"length": 19, "quality": 1.0, "section_id": 5869}, "so_22507947_22508215_4": {"length": 15, "quality": 0.9375, "section_id": 5907}, "so_22507947_22508215_1": {"length": 8, "quality": 1.0, "section_id": 5862}}, "n3337": {"so_22507947_22508215_3": {"length": 11, "quality": 1.0, "section_id": 5632}, "so_22507947_22508215_2": {"length": 19, "quality": 1.0, "section_id": 5640}, "so_22507947_22508215_4": {"length": 15, "quality": 0.9375, "section_id": 5679}, "so_22507947_22508215_1": {"length": 8, "quality": 1.0, "section_id": 5632}}, "n4659": {"so_22507947_22508215_3": {"length": 11, "quality": 1.0, "section_id": 7345}, "so_22507947_22508215_2": {"length": 19, "quality": 1.0, "section_id": 7352}, "so_22507947_22508215_4": {"length": 13, "quality": 0.8125, "section_id": 7389}, "so_22507947_22508215_1": {"length": 8, "quality": 1.0, "section_id": 7345}}}, "22507947": {"ViewCount": "1474", "Body": "<p>I am a little bit confused ...</p>\n<p>Why is this allowed in C++:</p>\n<pre><code>static int t = 0;\n\nclass A\n{\n    public:\n        A() : m(t++)\n        {\n\n            cout &lt;&lt; \"C:\" &lt;&lt; m &lt;&lt; endl; \n            if(t &gt;= 5)\n            {\n                A a;                      // &lt;&lt;&lt;&lt; ----- THIS line\n                throw( a);\n            }\n        }            \n\n        int m;\n};\n</code></pre>\n<p>But this not:</p>\n<pre><code>static int t = 0;\n\nclass A\n{\n    public:\n\n        A() : m(t++)\n        {\n\n            cout &lt;&lt; \"C:\" &lt;&lt; m &lt;&lt; endl; \n        }\n\n        A a;                            // &lt;&lt;&lt;&lt; ----- THIS line\n\n        int m;\n};\n</code></pre>\n<p>The second one is not compiling as expected (yes, I know why it's not compiling: at that point in code the <code>A</code> is still incomplete) ... </p>\n<p>But ... the first one compiles nicely (and does what it's supposed to do, ie: crashes the application on a statement like: <code>A a[10];</code> ). Is the <code>A</code> a complete type in the constructor? Can also point me some C++ standard entries for this situation?</p>\n", "AcceptedAnswerId": "22508215", "Title": "About C++ classes with self reference", "CreationDate": "2014-03-19T13:48:00.577", "Id": "22507947", "CommentCount": "1", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2014-03-20T15:07:29.050", "LastEditorUserId": "1009479", "LastActivityDate": "2014-03-20T15:07:29.050", "Score": "5", "OwnerUserId": "186193", "Tags": "<c++><class><exception>", "AnswerCount": "2"}, "22508010": {"Id": "22508010", "PostTypeId": "2", "Body": "<p>When you are declaring any variable, compiler should know the size of that. in case of your second example you are creating an object of <code>A</code> inside <code>A</code> so compiler will not be able to calculate the size of <code>A</code> to allocate memory.</p>\n", "LastActivityDate": "2014-03-19T13:50:49.380", "CommentCount": "0", "CreationDate": "2014-03-19T13:50:49.380", "ParentId": "22507947", "Score": "5", "OwnerUserId": "3064551"}, "22508215": {"Id": "22508215", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_22507947_22508215_0\">Can also point me some C++ standard entries for this situation?</p>\n</blockquote>\n<p>Yes, the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\" rel=\"nofollow\">draft C++ standard</a> says a class is not completely defined until the closing <code>}</code>, this is in section <code>9.2</code> <em>Class members</em> paragraph <em>2</em>:</p>\n<blockquote>\n<p id=\"so_22507947_22508215_1\">A class is considered a completely-defined object type (3.9) (or complete type) at the closing } of the classspecifier. [...]</p>\n</blockquote>\n<p>and all non-static data members of a class must be complete, from paragraph <em>9</em>:</p>\n<blockquote>\n<p id=\"so_22507947_22508215_2\">Non-static (9.4) data members shall not have incomplete types. In particular, a class C shall not contain a non-static member of class C, but it can contain a pointer or reference to an object of class C.</p>\n</blockquote>\n<p>but it is considered complete within the constructor also within paragraph <em>2</em>:</p>\n<blockquote>\n<p id=\"so_22507947_22508215_3\">[...]Within the class member-specification, the class is regarded as complete within function bodies, default arguments,[...]</p>\n</blockquote>\n<p>although static members can be incomplete, section <code>9.4.2</code> <em>Static data members</em> paragraph <em>2</em>:</p>\n<blockquote>\n<p id=\"so_22507947_22508215_4\">The declaration of a static data member in its class definition is not a definition and may be of an incomplete type other than cv-qualified void.[...]</p>\n</blockquote>\n<p>It also makes sense to not allow a class to contain itself since this would require infinite space since the self reference would never end, <code>A</code> contains <code>A</code> which contains <code>A</code> ... </p>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2014-03-20T15:04:38.343", "Score": "3", "CreationDate": "2014-03-19T13:58:40.140", "ParentId": "22507947", "CommentCount": "1", "OwnerUserId": "1708801", "LastEditDate": "2014-03-20T15:04:38.343"}});