post_cb({"43956379": {"CommentCount": "6", "ViewCount": "41", "CreationDate": "2017-05-13T18:06:56.587", "LastActivityDate": "2017-05-14T01:49:46.163", "Title": "What is a \"translated translation unit\" mentioned in [lex.phases]/1.8?", "PostTypeId": "1", "Id": "43956379", "Score": "3", "Body": "<p>My first thought was that this term doesn't require a formal definition in the standard, as it can be inferred just by using the English language, that is, a translated translation unit is just the object file produced by the compiler from its correspondent translation unit. But I'm not sure if this is the correct interpretation given the the text in [lex.phases]/1.8, as shown below: </p>\n<p><a href=\"http://eel.is/c++draft/lex.phases#1.8\" rel=\"nofollow noreferrer\">[lex.phases]/1.8</a>:</p>\n<blockquote>\n<p id=\"so_43956379_43956379_0\"><strong>Translated translation units</strong> and instantiation units are combined as follows: [ Note: Some or all of these may be supplied from a\n  library. \u2014 end note ] Each <strong>translated translation unit</strong> is examined\n  to produce a list of required instantiations. [ Note: This may include\n  instantiations which have been explicitly requested (14.7.2). \u2014 end\n  note ] The definitions of the required templates are located. It is\n  implementation-defined whether the source of the translation units\n  containing these definitions is required to be available. [ Note: An\n  implementation could encode sufficient information into the\n  <strong>translated translation unit</strong> so as to ensure the source is not required here. \u2014 end note ] All the required instantiations are\n  performed to produce instantiation units. [ Note: These are similar to\n  <strong>translated translation units</strong>, but contain no references to uninstantiated templates and no template definitions. \u2014end note ] The\n  program is ill-formed if any instantiation fails.</p>\n</blockquote>\n", "Tags": "<c++><language-lawyer>", "OwnerUserId": "5479741", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_43956379_43956379_0": {"section_id": 5313, "quality": 0.7934782608695652, "length": 73}}, "n3337": {"so_43956379_43956379_0": {"section_id": 5110, "quality": 0.7934782608695652, "length": 73}}, "n4659": {"so_43956379_43956379_0": {"section_id": 6737, "quality": 0.7934782608695652, "length": 73}}}});