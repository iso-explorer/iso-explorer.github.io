post_cb({"26184684": {"ParentId": "26184441", "CommentCount": "1", "Body": "<p>According to the C++ Standard (7.1.6.1 The cv-qualifiers)</p>\n<blockquote>\n<p id=\"so_26184441_26184684_0\">1 There are two cv-qualifiers, const and volatile. <strong>Each cv-qualifier\n  shall appear at most once in a cvqualifier- seq</strong>. If a cv-qualifier\n  appears in a decl-specifier-seq, the init-declarator-list of the\n  declaration shall not be empty. [ Note: 3.9.3 and 8.3.5 describe how\n  cv-qualifiers affect object and function types. \u2014end note ]\n  <strong>Redundant cv-qualifications are ignored.</strong> [ Note: For example, these could be introduced by typedefs.\u2014end note ]</p>\n</blockquote>\n<p>So this declaration</p>\n<pre><code>void doSomething(const int const &amp;someVal);\n</code></pre>\n<p>has a redundant const qualifier that is simply ignored.</p>\n<p>The second const qualifier would have a sense if <code>someVal</code> would be declared as a reference to const pointer. For example</p>\n<pre><code>void doSomething(const int * const &amp;someVal);\n</code></pre>\n", "OwnerUserId": "2877241", "PostTypeId": "2", "Id": "26184684", "Score": "2", "CreationDate": "2014-10-03T18:31:16.113", "LastActivityDate": "2014-10-03T18:31:16.113"}, "26184441": {"CommentCount": "11", "ViewCount": "105", "CreationDate": "2014-10-03T18:14:21.737", "LastActivityDate": "2014-10-03T18:31:16.113", "Title": "what is the second const doing in \"const int const &someval\"?", "AcceptedAnswerId": "26184684", "PostTypeId": "1", "Id": "26184441", "Score": "3", "Body": "<p>talking about a function parameter, for example:</p>\n<pre><code>void doSomething(const int const &amp;someVal);\n</code></pre>\n<p>As far as I understand, the fist const indicates that the value will not be changed by the function, and the &amp; indicates that the value should be passed by reference. But what does the second 'const' do?</p>\n", "Tags": "<c++>", "OwnerUserId": "4049658", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_26184441_26184684_0": {"section_id": 5430, "quality": 0.725, "length": 29}}, "n3337": {"so_26184441_26184684_0": {"section_id": 5225, "quality": 0.6, "length": 24}}, "n4659": {"so_26184441_26184684_0": {"section_id": 6858, "quality": 0.725, "length": 29}}}, "26184604": {"ParentId": "26184441", "CommentCount": "0", "Body": "<p>Both of these should work:</p>\n<pre><code>void doSomething(const int &amp;someVal);\n\nvoid doSomething(int const &amp;someVal);\n</code></pre>\n<p>Using a second const doesn't add any functionality and the extra one should be removed. It's a good practice to keep the const to the left though for clarity as it stands out better. </p>\n", "OwnerUserId": "3084326", "PostTypeId": "2", "Id": "26184604", "Score": "0", "CreationDate": "2014-10-03T18:26:16.743", "LastActivityDate": "2014-10-03T18:26:16.743"}});