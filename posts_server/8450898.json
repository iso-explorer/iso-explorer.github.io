post_cb({"bq_ids": {"n4140": {"so_8450898_8450995_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 382}, "so_8450898_8450987_1": {"length": 28, "quality": 0.8235294117647058, "section_id": 382}, "so_8450898_8450987_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 381}}, "n3337": {"so_8450898_8450995_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 373}, "so_8450898_8450987_1": {"length": 28, "quality": 0.8235294117647058, "section_id": 373}, "so_8450898_8450987_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 372}}, "n4659": {"so_8450898_8450987_1": {"length": 22, "quality": 0.6470588235294118, "section_id": 397}, "so_8450898_8450987_0": {"length": 8, "quality": 0.7272727272727273, "section_id": 396}}}, "8450995": {"Id": "8450995", "PostTypeId": "2", "Body": "<p>Your code involves undefined behavior. The temporary is destructed when the constructor of B exits (C++03, [class.temporary]):</p>\n<blockquote>\n<p id=\"so_8450898_8450995_0\">A temporary bound to a reference member in a constructor\u2019s ctor-initializer (12.6.2) persists until the constructor exits.</p>\n</blockquote>\n<p>Try changing to:</p>\n<pre><code>B() : a(A()) {\n    cout &lt;&lt; \"B()\\n\";\n};\n</code></pre>\n<p>You'll get:</p>\n<pre><code>A() B() ~A() A ~B()\n</code></pre>\n", "LastActivityDate": "2011-12-09T19:56:03.433", "CommentCount": "0", "CreationDate": "2011-12-09T19:56:03.433", "ParentId": "8450898", "Score": "2", "OwnerUserId": "277176"}, "8450898": {"ViewCount": "559", "Body": "<p>Consider the following code:</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct A {\n    const char *name;\n\n    A() : name(\"A\") {\n        std::cout &lt;&lt; \"A()\\n\";\n    }\n\n    virtual ~A() {\n        std::cout &lt;&lt; \"~A()\\n\";\n    }\n};\n\nclass B {\n    const A&amp; a;\npublic:\n\n    B() : a(A()) {\n    };\n\n    void print_data() const {\n        std::cout &lt;&lt; a.name &lt;&lt; '\\n';\n    }\n\n    ~B() {\n        std::cout &lt;&lt; \"~B()\\n\";\n    }\n};\n\nint main() {\n    B b;\n    b.print_data();\n    return 0;\n}\n</code></pre>\n<p>The output from GCC 4.4 is:</p>\n<blockquote>\n<p id=\"so_8450898_8450898_0\">A()  ~A()  A ~B()</p>\n</blockquote>\n<p>This looks strange to me. I would have expected either a copy of the temporary instance of A being bound to the B::a or that temporary itself being destructed during ~B().</p>\n<p>Basically, I thought B::a is always a valid reference during the life of b. In fact b.print_data() works apparently and the compiler does not give any warning. </p>\n<p>What does the standard c++98/03 say about this matter?</p>\n", "AcceptedAnswerId": "8450987", "Title": "const reference data member bound to a temporary initializing that reference in a constructor", "CreationDate": "2011-12-09T19:48:03.407", "Id": "8450898", "CommentCount": "2", "PostTypeId": "1", "LastActivityDate": "2011-12-09T20:36:33.773", "Score": "2", "OwnerUserId": "989331", "Tags": "<c++>", "AnswerCount": "2"}, "8450987": {"Id": "8450987", "PostTypeId": "2", "Body": "<p>Constant references don't prolong the life of temporaries in classes, period. It's just like that. They only do it in <code>Foo const&amp; f = Foo();</code> where <code>foo</code> returns by-value, but that's it.</p>\n<p><code>\u00a712.2 [class.temporary]</code></p>\n<blockquote>\n<p id=\"so_8450898_8450987_0\">p4 There are two contexts in which temporaries are destroyed at a different point than the end of the full expression. [...]</p>\n<p id=\"so_8450898_8450987_1\">p5 The second context is when a reference is bound to a temporary. The temporary to which the reference is bound or the temporary that is the complete object to a subobject of which the temporary is bound persists for the lifetime of the reference except as specified below. <strong>A temporary bound to a reference member in a constructor\u2019s ctor-initializer (12.6.2) persists until the constructor exits</strong>.</p>\n</blockquote>\n", "LastEditorUserId": "500104", "LastActivityDate": "2011-12-09T20:36:33.773", "Score": "4", "CreationDate": "2011-12-09T19:54:48.130", "ParentId": "8450898", "CommentCount": "0", "LastEditDate": "2011-12-09T20:36:33.773", "OwnerUserId": "500104"}});