post_cb({"765722": {"Id": "765722", "PostTypeId": "2", "Body": "<h3>Microsoft Visual C++:</h3>\n<blockquote>\n<p id=\"so_765709_765722_0\">warning C4245: 'initializing' :\n  conversion from 'int' to 'unsigned\n  int', signed/unsigned mismatch</p>\n</blockquote>\n<p>On warning level 4.</p>\n<h3>G++</h3>\n<p>Gives me the warning:</p>\n<blockquote>\n<p id=\"so_765709_765722_1\">warning: converting of negative value\n  <code>-0x00000000a' to</code>unsigned int'</p>\n</blockquote>\n<p>Without any -W directives.</p>\n<h3>GCC</h3>\n<p>You must use:</p>\n<blockquote>\n<p id=\"so_765709_765722_2\">gcc main.c -Wconversion</p>\n</blockquote>\n<p>Which will give the warning:</p>\n<blockquote>\n<p id=\"so_765709_765722_3\">warning: negative integer implicitly converted to unsigned type</p>\n</blockquote>\n<p>Note that -Wall will not enable this warning.</p>\n<hr>\n<p>Maybe you just need to turn your warning levels up. </p>\n</hr>", "LastEditorUserId": "87234", "LastActivityDate": "2009-04-19T17:29:07.333", "Score": "16", "CreationDate": "2009-04-19T17:02:14.323", "ParentId": "765709", "CommentCount": "3", "OwnerUserId": "87234", "LastEditDate": "2009-04-19T17:29:07.333"}, "bq_ids": {"n4140": {"so_765709_765722_3": {"length": 4, "quality": 0.5714285714285714, "section_id": 5943}}, "n3337": {"so_765709_765722_3": {"length": 4, "quality": 0.5714285714285714, "section_id": 5714}}, "n4659": {"so_765709_765722_3": {"length": 5, "quality": 0.7142857142857143, "section_id": 8018}}}, "765709": {"ViewCount": "3231", "Body": "<p>I know <em>unsigned int</em> can't hold negative values. But the following code compiles without any errors/warnings.</p>\n<pre><code>unsigned int a = -10;\n</code></pre>\n<p>When I print the variable <em>a</em>, I get a wrong value printed. If unsigned variables can't hold signed values, why do compilers allow them to compile without giving any error/warning?</p>\n<p>Any thoughts?</p>\n<p><strong>Edit</strong></p>\n<p>Compiler : VC++ compiler</p>\n<p><strong>Solution</strong></p>\n<p>Need to use the warning level 4.</p>\n", "AcceptedAnswerId": "765722", "Title": "Why compiler is not giving error when signed value is assigned to unsigned integer? - C++", "CreationDate": "2009-04-19T16:57:23.900", "Id": "765709", "CommentCount": "1", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2009-04-19T17:03:35.257", "LastEditorUserId": "50419", "LastActivityDate": "2015-07-06T19:20:27.863", "Score": "15", "OwnerUserId": "50419", "Tags": "<c++><variables><compiler-errors><compiler-warnings><unsigned>", "AnswerCount": "5"}, "765787": {"Id": "765787", "PostTypeId": "2", "Body": "<p>Converting a <code>signed int</code> to an <code>unsigned int</code> is something known in the C standard as a \"Usual arithmetic conversion\", so it's not an error.</p>\n<p>The reason compilers often don't issue a warning on this by default is because it's so commonly done in code there would be far too many 'false positive' warnings issued in general.  There is an awful lot of code out there that works with <code>signed int</code> values to deal with things that are inherently unsigned (calculating buffer sizes for example).  It's also very common to mix signed and unsigned values in expressions.</p>\n<p>That's not to say that these silent conversions aren't responsible for bugs. So, it might not be a bad idea to enable the warning for new code so it's 'clean' from the start.  However, I think you'd probably find it rather overwhelming to deal with the warnings issued by existing code.</p>\n", "LastActivityDate": "2009-04-19T17:48:47.800", "CommentCount": "1", "CreationDate": "2009-04-19T17:48:47.800", "ParentId": "765709", "Score": "12", "OwnerUserId": "12711"}, "765716": {"Id": "765716", "PostTypeId": "2", "Body": "<p>For gcc compiler you can add</p>\n<pre><code>gcc -Wconversion ...\n</code></pre>\n<p>And this will produce the following warning</p>\n<pre><code>warning: converting negative value '-0x0000000000000000a' to 'unsigned int'\n</code></pre>\n", "LastActivityDate": "2009-04-19T17:00:37.620", "CommentCount": "0", "CreationDate": "2009-04-19T17:00:37.620", "ParentId": "765709", "Score": "1", "OwnerUserId": "54684"}, "765731": {"Id": "765731", "PostTypeId": "2", "Body": "<p>-10 is parsed as an integer value, and assigning int to unsigned int is allowed. To know you are doing something wrong the compiler has to check whether your integer (-10) is negative or positive. As it is more than a type check, I guess it has been disabled for performance issues.</p>\n", "LastActivityDate": "2009-04-19T17:10:32.090", "CommentCount": "0", "CreationDate": "2009-04-19T17:10:32.090", "ParentId": "765709", "Score": "2", "OwnerUserId": "38924"}, "31253921": {"Id": "31253921", "PostTypeId": "2", "Body": "<p>I am using g++ 4.9.2 and need to use -Wsign-conversion to make this warning appear. </p>\n<blockquote>\n<p id=\"so_765709_31253921_0\"><a href=\"https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html\" rel=\"nofollow\">gcc.gnu.org</a>:\n  Warnings about conversions between signed and unsigned integers are disabled by default in C++ unless -Wsign-conversion is explicitly enabled. </p>\n</blockquote>\n", "LastActivityDate": "2015-07-06T19:20:27.863", "CommentCount": "0", "CreationDate": "2015-07-06T19:20:27.863", "ParentId": "765709", "Score": "-1", "OwnerUserId": "4587659"}});