post_cb({"9929703": {"ViewCount": "238", "Body": "<p>One Book(Object Oriented Programming with C++ by E.Balagurusamy) says that  </p>\n<pre><code> const size = 10;  \n</code></pre>\n<p>means </p>\n<pre><code> const int size = 10; \n</code></pre>\n<p>but g++ compiler (version-4.6.1 in ubuntu) issues an error as</p>\n<pre><code>error: \u2018size\u2019 does not name a type \n</code></pre>\n<p>what should I conclude based on this?</p>\n<ol>\n<li>g++ doesn't support the feature.  </li>\n<li>It is new feature. Latest g++ version supports it.</li>\n<li>The statement is wrong. Data-type is mandatory with the <em>const</em> keyword.</li>\n<li>Something else.</li>\n</ol>\n", "AcceptedAnswerId": "9929734", "Title": "default data-type of const-keyword is int-type?", "CreationDate": "2012-03-29T16:42:44.723", "Id": "9929703", "CommentCount": "1", "LastEditDate": "2012-11-16T21:11:45.533", "PostTypeId": "1", "LastEditorUserId": "992687", "LastActivityDate": "2012-11-16T21:11:45.533", "Score": "3", "OwnerUserId": "739331", "Tags": "<c++><const>", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_9929703_9929734_0": {"length": 23, "quality": 0.8214285714285714, "section_id": 5790}, "so_9929703_9929734_3": {"length": 17, "quality": 0.7083333333333334, "section_id": 7225}, "so_9929703_9929734_2": {"length": 7, "quality": 1.0, "section_id": 7037}}, "n3337": {"so_9929703_9929734_0": {"length": 23, "quality": 0.8214285714285714, "section_id": 5563}, "so_9929703_9929734_3": {"length": 23, "quality": 0.9583333333333334, "section_id": 6969}, "so_9929703_9929734_2": {"length": 7, "quality": 1.0, "section_id": 6783}}, "n4659": {"so_9929703_9929734_0": {"length": 19, "quality": 0.6785714285714286, "section_id": 7247}, "so_9929703_9929734_3": {"length": 16, "quality": 0.6666666666666666, "section_id": 8735}, "so_9929703_9929734_2": {"length": 7, "quality": 1.0, "section_id": 8534}}}, "9929738": {"Id": "9929738", "PostTypeId": "2", "Body": "<p>I would go with: The statement is wrong. Data-type is mandatory with the const keyword.</p>\n", "LastActivityDate": "2012-03-29T16:45:15.540", "CommentCount": "0", "CreationDate": "2012-03-29T16:45:15.540", "ParentId": "9929703", "Score": "3", "OwnerUserId": "1280410"}, "9929737": {"Id": "9929737", "PostTypeId": "2", "Body": "<p>Mr. Balagurusamy is wrong. Completely wrong. The <em>type</em> is compulsory, with or without <code>const</code> keyword.</p>\n<p>You should stop reading this book. You should not read books by Yashwant Kanetkar also. I know that books by these authors are very popular among students of many universities in India.</p>\n<p>I would suggest you to get an introductory book from this list:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list\">The Definitive C++ Book Guide and List</a></li>\n</ul>\n", "LastEditorUserId": "-1", "LastActivityDate": "2012-03-29T16:56:58.383", "Score": "5", "CreationDate": "2012-03-29T16:45:12.773", "ParentId": "9929703", "CommentCount": "2", "OwnerUserId": "415784", "LastEditDate": "2017-05-23T12:14:16.860"}, "9929734": {"Id": "9929734", "PostTypeId": "2", "Body": "<p>Looks like an error in the book ... you definitely must name a type or aliased type (i.e., a <code>typedef</code>) since C++ is a strongly-typed languages.</p>\n<p>Here is what the C++03 specification states on objects, declarations and definitions:</p>\n<hr>\n<p>Section 1.8/1:</p>\n<blockquote>\n<p id=\"so_9929703_9929734_0\">The properties of an object are determined when the object is created. An object can have a name (clause 3). An object has a storage duration (3.7) which influences its lifetime (3.8). <strong>An object has a type</strong> (3.9). The term <em>object type</em> refers to the type with which the object is created.</p>\n</blockquote>\n<p>Then in Section 3.1/1:</p>\n<blockquote>\n<p id=\"so_9929703_9929734_1\">A declaration is a <em>definition</em> ... [note: the rest of the paragraph are exceptions to this rule and are omitted since they're not applicable in this case]</p>\n</blockquote>\n<p>Then in Section 3.1/6:</p>\n<blockquote>\n<p id=\"so_9929703_9929734_2\">A program is ill-formed if the definition of any object gives the object an incomplete type</p>\n</blockquote>\n<p>Finally, in Section 3.9.2/1 it states:</p>\n<blockquote>\n<p id=\"so_9929703_9929734_3\">... the term <em>object type</em> (1.8) includes the <em>cv-qualifiers</em> specified when the object is created. The presence of a <em>const</em> specifier in a <em>decl-specifier-seq</em> declares an object of <em>const-qualified</em> object type; such object is called a <em>const</em> object. ...</p>\n</blockquote>\n<hr>\n<p>So according to 3.9.2/1, <code>const</code> is a qualifier, not a type, and as-such, it has to qualify a valid unqualified type.  Secondly, in the example given, according to 3.1/1, the declaration of <code>size</code> is also a definition, and therefore the <code>size</code> object must have an associated type or the program is ill-formed according to 3.1/6.</p>\n</hr></hr>", "LastEditorUserId": "649233", "LastActivityDate": "2012-03-29T19:31:55.457", "Score": "3", "CreationDate": "2012-03-29T16:44:55.737", "ParentId": "9929703", "CommentCount": "5", "OwnerUserId": "649233", "LastEditDate": "2012-03-29T19:31:55.457"}});