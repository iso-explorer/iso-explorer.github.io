post_cb({"10304783": {"ParentId": "10304751", "CommentCount": "0", "Body": "<p>The double-quotes include are used to tell the compiler to look for the included header file in the local directory first before searching for it in the include directories. You can see this difference when you're trying to include on of your local header file of your code. If you used '&lt;&gt;' to include your local header file, the compiler will fail unless your local directory is the 'include' directory paths.</p>\n", "OwnerUserId": "210634", "PostTypeId": "2", "Id": "10304783", "Score": "1", "CreationDate": "2012-04-24T19:34:30.397", "LastActivityDate": "2012-04-24T19:34:30.397"}, "10304779": {"ParentId": "10304751", "CommentCount": "0", "Body": "<p>&lt;&gt; only looks in the compiler provided header files while \"\" looks in the project directory first and only looks in the compiler provided header files if nothing is there.</p>\n<p>Add an file called iostream next to your source file. Now include with \"\" and watch it fail (since it will get the empty file) or use &lt;&gt; and watch it succeed (since it will ignore the local file).</p>\n", "OwnerUserId": "29809", "PostTypeId": "2", "Id": "10304779", "Score": "0", "CreationDate": "2012-04-24T19:34:21.083", "LastActivityDate": "2012-04-24T19:34:21.083"}, "10304751": {"CommentCount": "1", "AcceptedAnswerId": "10304797", "PostTypeId": "1", "ClosedDate": "2012-04-24T19:35:12.040", "LastEditorUserId": "-1", "CreationDate": "2012-04-24T19:32:25.003", "LastActivityDate": "2012-04-24T19:41:06.453", "LastEditDate": "2017-05-23T12:21:17.107", "ViewCount": "1041", "LastEditorDisplayName": "user166390", "Title": "Difference between <iostream> and \"iostream\" (quotes) in #include?", "Id": "10304751", "Score": "0", "Body": "<blockquote>\n<p id=\"so_10304751_10304751_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/21593/what-is-the-difference-between-include-filename-and-include-filename\">What is the difference between #include &lt;filename&gt; and #include \u201cfilename\u201d?</a> </br></p>\n</blockquote>\n<p>When I written my programs, I include libraries like <code>#include &lt;iostream&gt;</code> . but also <code>#include \"iostream\"</code> is correct and the code would compiled without any error or problem.   </p>\n<p>So, I'm wondering what's the difference between <code>&lt; &gt;</code> and <code>\" \"</code> ?</p>\n", "Tags": "<c++><syntax>", "OwnerUserId": "359170", "AnswerCount": "4"}, "10304797": {"ParentId": "10304751", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>When you use <code>&lt; &gt;</code>, the compiler <em>only</em> looks in the system-designated directory/directories (e.g., whatever you've set in the <code>include</code> environment variable) for the header.</p>\n<p>When you use <code>\" \"</code>, the compiler looks in the local directory first, and if that fails, re-searches just like you'd used <code>&lt; &gt;</code>. Technically, (i.e., according to the standard) that doesn't have to be the \"local\" directory, but that's how it works in essentially every compiler of which I'm aware).</p>\n<p>In case you care, the official wording from the standard is actually kind of vague (\u00a716.2/2-3):</p>\n<blockquote>\n<p id=\"so_10304751_10304797_0\">A preprocessing directive of the form</p>\n<p id=\"so_10304751_10304797_1\"><code># include &lt;h-char-sequence&gt; new-line</code></p>\n<p id=\"so_10304751_10304797_2\">searches a sequence of implementation-defined places for a header identified uniquely by the specified\n  sequence between the &lt; and &gt; delimiters, and causes the replacement of that directive by the entire contents\n  of the header. How the places are specified or the header identified is implementation-defined.</p>\n<p id=\"so_10304751_10304797_3\">A preprocessing directive of the form</p>\n<p id=\"so_10304751_10304797_4\"><code># include \"q-char-sequence\" new-line</code></p>\n<p id=\"so_10304751_10304797_5\">causes the replacement of that directive by the entire contents of the source file identified by the specified\n  sequence between the \" delimiters. The named source file is searched for in an implementation-defined\n  manner. If this search is not supported, or if the search fails, the directive is reprocessed as if it read</p>\n<p id=\"so_10304751_10304797_6\"><code># include &lt;h-char-sequence&gt; new-line</code></p>\n<p id=\"so_10304751_10304797_7\">with the identical contained sequence (including &gt; characters, if any) from the original directive.</p>\n</blockquote>\n", "OwnerUserId": "179910", "LastEditorUserId": "179910", "LastEditDate": "2012-04-24T19:41:06.453", "Id": "10304797", "Score": "1", "CreationDate": "2012-04-24T19:35:10.917", "LastActivityDate": "2012-04-24T19:41:06.453"}, "10304813": {"ParentId": "10304751", "CommentCount": "0", "Body": "<p>\"XXX\" - Its in your one directory.\n - Its in the SDK of Microsoft, or any SDK (you can add in the </p>\n", "OwnerUserId": "1337013", "PostTypeId": "2", "Id": "10304813", "Score": "0", "CreationDate": "2012-04-24T19:36:11.680", "LastActivityDate": "2012-04-24T19:36:11.680"}, "bq_ids": {"n4140": {"so_10304751_10304797_7": {"section_id": 505, "quality": 1.0, "length": 7}, "so_10304751_10304797_5": {"section_id": 505, "quality": 0.9230769230769231, "length": 24}, "so_10304751_10304797_2": {"section_id": 504, "quality": 0.9130434782608695, "length": 21}}, "n3337": {"so_10304751_10304797_7": {"section_id": 496, "quality": 1.0, "length": 7}, "so_10304751_10304797_5": {"section_id": 496, "quality": 0.9230769230769231, "length": 24}, "so_10304751_10304797_2": {"section_id": 495, "quality": 0.9130434782608695, "length": 21}}, "n4659": {"so_10304751_10304797_2": {"section_id": 525, "quality": 0.9130434782608695, "length": 21}, "so_10304751_10304797_5": {"section_id": 526, "quality": 0.9230769230769231, "length": 24}, "so_10304751_10304797_7": {"section_id": 526, "quality": 1.0, "length": 7}}}});