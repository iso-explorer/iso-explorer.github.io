post_cb({"27750058": {"ParentId": "27749974", "CommentCount": "0", "Body": "<p>You can include a standard header however many times you want in each translation unit.</p>\n<p>Usually subsequent inclusions after the first one will have no effect.</p>\n<p>One exception is the <code>&lt;assert.h&gt;</code> header, which defines the <code>assert</code> macro. This header can define <code>assert</code> differently, depending on the symbol <code>NDEBUG</code>, each time that it\u2019s included. Since that\u2019s a bit unusual the standard points it out explicitly.</p>\n<hr>\n<p>Standardese:</p>\n<p><strong>C++11 \u00a717.6.22/2</strong> [using.headers]<strong>:</strong></p>\n<blockquote>\n<p id=\"so_27749974_27750058_0\"><strong>\u201d</strong> A translation unit may include library headers in any order (Clause 2). Each may be included more than\n  once, with no effect different from being included exactly once, except that the effect of including either\n  <code>&lt;cassert&gt;</code> or <code>&lt;assert.h&gt;</code> depends each time on the lexically current definition of <code>NDEBUG</code>.</p>\n</blockquote>\n</hr>", "OwnerUserId": "464581", "PostTypeId": "2", "Id": "27750058", "Score": "4", "CreationDate": "2015-01-02T23:36:23.150", "LastActivityDate": "2015-01-02T23:36:23.150"}, "27749974": {"CommentCount": "16", "ViewCount": "104", "CreationDate": "2015-01-02T23:26:36.470", "LastActivityDate": "2015-01-02T23:36:23.150", "Title": "C++: Does it cause any problems if I include multiple header files, if both have #include <string>?", "AcceptedAnswerId": "27750058", "PostTypeId": "1", "Id": "27749974", "Score": "0", "Body": "<p>I'm trying to write my own little \"game\", that's why I started programming itself. However, using multiple header files for declaring multiple classes used by separate .cpps brought me to a question: does it cause any harm later on if I <code>#include &lt;string&gt;</code> into every one of them, and include multiple of these headers into a single .cpp?\nAn example:</p>\n<pre><code>//a.cpp\n#include \"x.h\"\n#include \"y.h\"\nint main(){blablabla}\n\n//x.h\n#ifndef XCLASS_H #define XCLASS_H\n#include &lt;string&gt;\nclass xclass{std::string xstring;};\n#endif\n\n//y.h\n#ifndef YCLASS_H #define YCLASS_H\n#include &lt;string&gt;\nclass yclass{std::string ystring;};\n#endif\n</code></pre>\n<p>As I know, both would include  to a.cpp. When I tried, the program ran fine and without any errors. I'm using Visual Studio 2012. Will this cause problems on other computers, and if so, how can I avoid them?</p>\n", "Tags": "<c++><class>", "OwnerUserId": "4381024", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_27749974_27750058_0": {"section_id": 6269, "quality": 1.0, "length": 33}}, "n3337": {"so_27749974_27750058_0": {"section_id": 6029, "quality": 1.0, "length": 33}}, "n4659": {"so_27749974_27750058_0": {"section_id": 7775, "quality": 1.0, "length": 33}}}});