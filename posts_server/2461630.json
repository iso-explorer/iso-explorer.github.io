post_cb({"2461630": {"ViewCount": "466", "Body": "<p>referring to yesterday's post, \nthis woke me up this morning. Why does this actually work? As long as the function <code>test</code> is concerned, this function has no body so how can it perform anything? I want to know why and how this works? I'm REALLY interested to see your answers.</p>\n<pre><code>template&lt;typename T&gt; \nclass IsClassT { \n  private: \n    typedef char One; \n    typedef struct { char a[2]; } Two; \n    template&lt;typename C&gt; static One test(int C::*); //NO BODY HERE\n    template&lt;typename C&gt; static Two test(\u2026); //NOR HERE\n  public: \n    enum { Yes = sizeof(IsClassT&lt;T&gt;::template test&lt;T&gt;(0)) == sizeof(One) }; \n    enum { No = !Yes }; \n}; \n</code></pre>\n<p>Thanks in advance with help to understand this very interesting phenomenon.</p>\n", "AcceptedAnswerId": "2461676", "Title": "Why this works (Templates, SFINAE). C++", "CreationDate": "2010-03-17T10:58:59.190", "Id": "2461630", "CommentCount": "1", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2010-05-01T15:38:00.140", "LastEditorUserId": "151292", "LastActivityDate": "2010-05-01T15:38:00.140", "Score": "7", "OwnerUserId": "207177", "Tags": "<c++><templates><sfinae>", "AnswerCount": "2"}, "2461676": {"Id": "2461676", "PostTypeId": "2", "Body": "<p>I assume you are refering to the Yes enum?  <code>IsClassT&lt;T&gt;::test&lt;T&gt;(0)</code>?  sizeof does not actually evaluate its arguments.  That's why code like the following is legal, even though you might expect it to bail out on you:</p>\n<pre><code>int* p = 0;\nint sizeof_int = sizeof(*p); //oops, p is 0 :(\n</code></pre>\n", "LastActivityDate": "2010-03-17T11:07:39.417", "CommentCount": "2", "CreationDate": "2010-03-17T11:07:39.417", "ParentId": "2461630", "Score": "6", "OwnerUserId": "293791"}, "bq_ids": {"n4140": {"so_2461630_2461856_1": {"length": 16, "quality": 0.8, "section_id": 6076}}, "n3337": {"so_2461630_2461856_1": {"length": 16, "quality": 0.8, "section_id": 5844}}, "n4659": {"so_2461630_2461856_1": {"length": 16, "quality": 0.8, "section_id": 7572}}}, "2461856": {"Id": "2461856", "PostTypeId": "2", "Body": "<ol>\n<li><p>You can not get compiler error because <code>test</code>-function <strong>declaration</strong> exists. </p></li>\n<li><p>You can not get linker error because you <strong>do not call</strong> <code>test</code>-function.</p></li>\n</ol>\n<p>C++ Standart ISO/IEC 14882:2003(E)</p>\n<blockquote>\n<p id=\"so_2461630_2461856_0\"><strong>5.3.3 Sizeof</strong></p>\n<p id=\"so_2461630_2461856_1\">The sizeof operator yields the number of bytes in the\n  object representation of its operand. \n  The operand is either an expression,\n  which <strong>is not evaluated</strong>, or a\n  parenthesized type-id. The sizeof\n  operator shall not ...</p>\n<p id=\"so_2461630_2461856_2\">...</p>\n</blockquote>\n", "LastEditorUserId": "124161", "LastActivityDate": "2010-03-17T11:56:53.897", "Score": "8", "CreationDate": "2010-03-17T11:40:35.673", "ParentId": "2461630", "CommentCount": "0", "OwnerUserId": "124161", "LastEditDate": "2010-03-17T11:56:53.897"}});