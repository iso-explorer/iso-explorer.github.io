post_cb({"44664807": {"Tags": "<c++><vector><language-lawyer>", "ViewCount": "115", "LastEditDate": "2017-06-21T00:43:43.780", "CreationDate": "2017-06-21T00:00:48.037", "LastEditorUserId": "1116364", "Title": "Is a vector with incomplete type allowed if absolutely no member functions are called? If so, since when?", "CommentCount": "9", "AnswerCount": "1", "Score": "3", "OwnerUserId": "1116364", "Id": "44664807", "LastActivityDate": "2017-06-21T12:05:40.000", "Body": "<p>Suppose I have some incomplete type</p>\n<pre><code>// in foo.hh\nstruct Hidden;\n</code></pre>\n<p>that I want to use as element type of a <code>std::vector</code>. Using an <code>union</code> I can \"defer\" calls to the constructor(s) and the destructor of the <code>std::vector</code> to the implementation of the unions constructor(s) / destructor.</p>\n<pre><code>// in foo.hh\nstruct Public {\n  union Defer {\n    std::vector&lt;Hidden&gt; v;\n    Defer();\n    // add copy/move constructor if needed\n    ~Defer();\n  } d;\n};\n</code></pre>\n<p>Now I can use <code>Public</code> by only including <code>foo.hh</code> and linking with the file(s) implementing <code>Public::Defer::Defer()</code> and <code>Public::Defer::~Defer()</code>. Only those will need access to the full definition of <code>Hidden</code>.</p>\n<p><strong>Is this legal C++? If so, since when?</strong></p>\n<p>Background: <a href=\"https://stackoverflow.com/a/44664736/1116364\">Question that came up in my answer to another question</a>.</p>\n", "PostTypeId": "1"}, "bq_ids": {"n4659": {"so_44664807_44675477_0": {"length": 18, "section_id": 1018, "quality": 0.9}}}, "44675477": {"ParentId": "44664807", "Score": "1", "CreationDate": "2017-06-21T11:58:31.850", "LastActivityDate": "2017-06-21T12:05:40.000", "LastEditDate": "2017-06-21T12:05:40.000", "OwnerUserId": "1670129", "LastEditorUserId": "1670129", "Body": "<p>Instantiating <code>std::vector&lt;T&gt;</code> with incomplete type <code>T</code> is undefined behavior up to C++14. In C++17 this limitation is relaxed somewhat:</p>\n<blockquote>\n<p id=\"so_44664807_44675477_0\"><strong>[vector.overview]/3</strong> An incomplete type <code>T</code> may be used when instantiating <code>vector</code> if the allocator satisfies the allocator completeness\n  requirements 17.6.3.5.1. <code>T</code> shall be complete before any member of the resulting specialization of <code>vector</code> is referenced.</p>\n</blockquote>\n<p>(Note: the default allocator <code>std::allocator</code> does satisfy those completeness requirements).</p>\n<p>My reading is that with C++17, it's legal for a translation unit to include your header (the one that forward-declares <code>Hidden</code> and defines <code>Public</code>), and define a variable <code>Public pub;</code> - but not to actually use any members of <code>pub.d.v</code>. Before C++17, merely including the header would already trigger undefined behavior.</p>\n", "Id": "44675477", "PostTypeId": "2", "CommentCount": "0"}});