post_cb({"24313226": {"ParentId": "24312885", "CommentCount": "1", "Body": "<p>This is a <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=56679\">bug in gcc</a>; it's fixed in gcc 4.9.0.</p>\n<p>From 5.3.3 <strong>[expr.sizeof ]</strong>:</p>\n<blockquote>\n<p id=\"so_24312885_24313226_0\">5 - The identifier in a <code>sizeof...</code> expression shall name a parameter pack. [...]</p>\n</blockquote>\n", "OwnerUserId": "567292", "PostTypeId": "2", "Id": "24313226", "Score": "5", "CreationDate": "2014-06-19T17:52:21.973", "LastActivityDate": "2014-06-19T17:52:21.973"}, "24312885": {"CommentCount": "0", "ViewCount": "276", "CreationDate": "2014-06-19T17:32:35.897", "LastActivityDate": "2014-06-19T17:52:21.973", "Title": "Variadic template-template arguments and sizeof differences in GCC, Clang, and MSVC - who is right?", "AcceptedAnswerId": "24313226", "PostTypeId": "1", "Id": "24312885", "Score": "2", "Body": "<p>When using variadic template-template arguments, to get the number of arguments using sizeof...() GCC and Clang have different requirements. GCC requires that you fill in the template arguments for the variadic argument while Clang requires you not to. Since they both claim to be standards-compliant, one must have a bug or the standards must be ambiguous (in case they should be corrected in c++1y).</p>\n<p>Example (full compilable example at <a href=\"http://ideone.com/5TWFKY\" rel=\"nofollow\">http://ideone.com/5TWFKY</a>):</p>\n<pre><code>template&lt;template &lt;class&gt; class... T&gt;\nstruct X\n{\n    /* code goes here */\n};\n</code></pre>\n<p>GCC (note: Z is any non-template class in this case):</p>\n<pre><code>static const constexpr size_t count = sizeof...(T&lt;Z&gt;);\n</code></pre>\n<p>Clang:</p>\n<pre><code>static const constexpr size_t count = sizeof...(T);\n</code></pre>\n<p>MSVC 2013 (for completeness - same as Clang w/out constexpr which is not supported):</p>\n<pre><code>static const           size_t count = sizeof...(T);\n</code></pre>\n", "Tags": "<c++11><g++><variadic-templates><clang++><template-templates>", "OwnerUserId": "582298", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_24312885_24313226_0": {"section_id": 6080, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_24312885_24313226_0": {"section_id": 5848, "quality": 0.8571428571428571, "length": 6}}, "n4659": {"so_24312885_24313226_0": {"section_id": 7576, "quality": 0.8571428571428571, "length": 6}}}});