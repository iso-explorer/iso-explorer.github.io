post_cb({"38960126": {"CommentCount": "0", "AcceptedAnswerId": "38961143", "PostTypeId": "1", "LastEditorUserId": "5182731", "CreationDate": "2016-08-15T17:43:21.743", "LastActivityDate": "2016-08-16T10:02:13.880", "LastEditDate": "2016-08-16T10:02:13.880", "ViewCount": "89", "FavoriteCount": "1", "Title": "Expected behavior on out-of-range template parameters?", "Id": "38960126", "Score": "5", "Body": "<pre><code>template&lt;bool b = 2&gt; void foo(void) {}\ntemplate void foo();\n\ntemplate&lt;unsigned char n = 258&gt; void bar(void) {}\ntemplate void bar();\n</code></pre>\n<p>GCC instantiates foo&lt; true&gt; and bar&lt;2&gt;; Clang rejects both with \"error: non-type template argument evaluates to 2, which cannot be narrowed to type 'bool' [-Wc++11-narrowing]\".</p>\n<p>Is the above code valid? Is this a bug in one of them?</p>\n<p>Versions used: Clang 3.8.0-2ubuntu4, GCC 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.2)</p>\n", "Tags": "<c++><templates>", "OwnerUserId": "5182731", "AnswerCount": "1"}, "38961143": {"ParentId": "38960126", "CommentCount": "0", "Body": "<p>This is gcc bug <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57891\">57891</a> and <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=60715\">60715</a>. </p>\n<p>From [temp.arg.nontype]:</p>\n<blockquote>\n<p id=\"so_38960126_38961143_0\">A template-argument for a non-type template-parameter shall be a converted constant expression (5.20) of the type of the template-parameter.</p>\n</blockquote>\n<p>From [expr.const]:</p>\n<blockquote>\n<p id=\"so_38960126_38961143_1\">A converted constant expression of type T is an expression, implicitly converted to type T, where the converted\n  expression is a constant expression and the implicit conversion sequence contains only [...] integral conversions (4.7) other than narrowing conversions (8.5.4),</p>\n</blockquote>\n<p>From [dcl.init.list]:</p>\n<blockquote>\n<p id=\"so_38960126_38961143_2\">A narrowing conversion is an implicit conversion [...] from an integer type or unscoped enumeration type to an integer type that cannot represent all the\n  values of the original type, except where the source is a constant expression whose value after integral\n  promotions will fit into the target type.</p>\n</blockquote>\n<p>Narrowing conversions (e.g. <code>2</code> to <code>bool</code> or <code>258</code> to <code>char</code>) are ill-formed for template non-type parameters. </p>\n", "OwnerUserId": "2069064", "PostTypeId": "2", "Id": "38961143", "Score": "7", "CreationDate": "2016-08-15T18:51:35.813", "LastActivityDate": "2016-08-15T18:51:35.813"}, "bq_ids": {"n4140": {"so_38960126_38961143_2": {"section_id": 3329, "quality": 0.96875, "length": 31}, "so_38960126_38961143_1": {"section_id": 6186, "quality": 0.9583333333333334, "length": 23}, "so_38960126_38961143_0": {"section_id": 87, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_38960126_38961143_2": {"section_id": 3199, "quality": 0.875, "length": 28}, "so_38960126_38961143_1": {"section_id": 5947, "quality": 0.8333333333333334, "length": 20}, "so_38960126_38961143_0": {"section_id": 82, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_38960126_38961143_2": {"section_id": 4095, "quality": 0.96875, "length": 31}, "so_38960126_38961143_1": {"section_id": 7689, "quality": 0.875, "length": 21}, "so_38960126_38961143_0": {"section_id": 90, "quality": 0.8888888888888888, "length": 8}}}});