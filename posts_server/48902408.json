post_cb({"bq_ids": {"n4140": {"so_48902408_48903141_2": {"length": 25, "quality": 1.0, "section_id": 7019}}, "n3337": {"so_48902408_48903141_2": {"length": 25, "quality": 1.0, "section_id": 6765}}, "n4659": {"so_48902408_48903141_2": {"length": 25, "quality": 1.0, "section_id": 8516}}}, "48903141": {"Id": "48903141", "PostTypeId": "2", "Body": "<p>Answering the question at hand:</p>\n<blockquote>\n<p id=\"so_48902408_48903141_0\">Can I specify in C++ that a class must be concrete (and if it's not tell the cause/missing-method)?</p>\n</blockquote>\n<p>C++ has no explicit <em>abstract</em> or <em>concrete</em> classes. These concepts are implicit in the language. <em>Abstract</em> is implied by the presence (either in the class itself or inherited) of one or more pure virtual member functions, and <em>concrete</em> by the absence of such functions.</p>\n<p>This is exactly how the C++ standard defines an <em>abstract</em> class (\u00a713.4/2)</p>\n<blockquote>\n<p id=\"so_48902408_48903141_1\">[class.abstract]</p>\n<p id=\"so_48902408_48903141_2\">An abstract class is a class that can be used only as a base class of some other class; no objects of an abstract class can be created except as subobjects of a class derived from it. <strong>A class is abstract if it has at least one pure virtual function</strong>.</p>\n</blockquote>\n<p>There's no keyword such as Java's <code>abstract</code>, for example, in C++.</p>\n<p>Compiler error messages are the standard place where you can catch errors such as the attempt to instantiate a class that still has pure virtual member functions.</p>\n", "LastActivityDate": "2018-02-21T10:07:48.413", "Score": "2", "CreationDate": "2018-02-21T10:07:48.413", "ParentId": "48902408", "CommentCount": "0", "OwnerUserId": "1594913"}, "48902408": {"ViewCount": "39", "Body": "<p>Every time I add a non-concrete virtual method to an abstract class, the compiler gives unuseful error <code>invalid new-expression of abstract class type '...'</code> on all the classes that derives from that abstract class, and then I need to do <code>git diff</code> to search for the new method I added earlier, or look for the note in GCC's errors. (there can be days difference between adding the method, and compiling)</p>\n<p>Can I specify in C++ that a class must be concrete (and if it's not tell the cause/missing-method)?</p>\n", "AcceptedAnswerId": "48903141", "Title": "Make the compiler tell which methods are not concrete instead of erroring 'invalid new-expression of abstract class type'", "CreationDate": "2018-02-21T09:33:03.600", "Id": "48902408", "CommentCount": "19", "PostTypeId": "1", "LastActivityDate": "2018-02-21T10:07:48.413", "Score": "0", "OwnerUserId": "4211034", "Tags": "<c++><abstract-class><virtual-method>", "AnswerCount": "1"}});