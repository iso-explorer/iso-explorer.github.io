post_cb({"bq_ids": {"n4140": {"so_5378677_5378719_0": {"length": 7, "quality": 0.5384615384615384, "section_id": 3342}}, "n3337": {"so_5378677_5378719_0": {"length": 7, "quality": 0.5384615384615384, "section_id": 3212}}}, "5378677": {"ViewCount": "8973", "Body": "<p>These days, I have been reading a lot the <a href=\"http://www.parashift.com/c++-faq-lite/\" rel=\"noreferrer\">C++ F.A.Q</a> and especially <a href=\"http://www.parashift.com/c++-faq-lite/exceptions.html\" rel=\"noreferrer\">this page</a>.</p>\n<p>Reading through the section I discovered a \"technique\" that the author calls \"exception dispatcher\" that allows someone to group all his exception handling in one handy function:</p>\n<pre><code>void handleException()\n{\n  try {\n    throw; // ?!\n  }\n  catch (MyException&amp; e) {\n    //...code to handle MyException...\n  }\n  catch (YourException&amp; e) {\n    //...code to handle YourException...\n  }\n}\n\nvoid f()\n{\n  try {\n    //...something that might throw...\n  }\n  catch (...) {\n    handleException();\n  }\n}\n</code></pre>\n<p>What bothers me is the single <code>throw;</code> statement: if you consider the given example then sure, it is obvious what it does: it rethrows the exception first caught in <code>f()</code> and deals with it again.</p>\n<p>But what if I call <code>handleException()</code> on its own, directly, without doing it from a <code>catch()</code> clause ? Is there any specified behavior ?</p>\n<p>Additionally for bonus points, is there any other \"weird\" (probably not the good word) use of <code>throw</code> that you know of ?</p>\n<p>Thank you.</p>\n", "AcceptedAnswerId": "5378736", "Title": "What does a single \"throw;\" statement do?", "CreationDate": "2011-03-21T14:02:46.817", "Id": "5378677", "CommentCount": "3", "FavoriteCount": "7", "PostTypeId": "1", "LastActivityDate": "2014-01-08T13:43:25.193", "Score": "41", "OwnerUserId": "279259", "Tags": "<c++><exception><throw>", "AnswerCount": "3"}, "5378736": {"PostTypeId": "2", "Body": "<p>If you do a <code>throw;</code> on its own, and there isn't a current exception for it to rethrow, then the program ends abruptly. (More specifically, <code>terminate()</code> is called.)</p>\n<p>Note that throw; is the only safe way to re-throw the current exception - it's not equivalent to</p>\n<p><code>catch (exception const &amp; e) { throw e; }</code></p>\n", "LastActivityDate": "2011-03-21T14:07:56.973", "Id": "5378736", "CommentCount": "7", "CreationDate": "2011-03-21T14:07:56.973", "ParentId": "5378677", "Score": "42", "OwnerUserId": "212870"}, "5378715": {"PostTypeId": "2", "Body": "<p>That's so-called exception handler. It rethrows the \"current exception\" if any. If there's no exception currently being handled <a href=\"https://stackoverflow.com/q/981400/57428\"><code>terminate()</code> will be called</a>.</p>\n", "LastActivityDate": "2011-03-21T14:05:45.943", "LastEditorUserId": "-1", "Id": "5378715", "CommentCount": "0", "CreationDate": "2011-03-21T14:05:45.943", "ParentId": "5378677", "Score": "6", "OwnerUserId": "57428", "LastEditDate": "2017-05-23T11:46:54.700"}, "5378719": {"PostTypeId": "2", "Body": "<p>Yes, it specified behavior, it will call terminate;</p>\n<blockquote>\n<p id=\"so_5378677_5378719_0\">15.1, para 8: If no exception is presently being handled, executing a\n  throw expression with no operand calls\n  terminate() (15.5.1).</p>\n</blockquote>\n", "LastActivityDate": "2011-03-21T14:06:35.320", "Id": "5378719", "CommentCount": "2", "CreationDate": "2011-03-21T14:06:35.320", "ParentId": "5378677", "Score": "34", "OwnerUserId": "19100"}});