post_cb({"29593652": {"ParentId": "29593597", "PostTypeId": "2", "CommentCount": "5", "Body": "<p>Use one more pair of braces</p>\n<pre><code>constexpr static array&lt;int, 18&gt; rouges = { { 1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36 } };\n    // ...\n</code></pre>\n<p>In fact there are two aggregates one of which is ecnlosed in other.</p>\n<p>The initialization  of std;:array is defined like (23.3.2.1 Class template array overview)</p>\n<blockquote>\n<p id=\"so_29593597_29593652_0\">2 An array is an aggregate (8.5.1) that can be initialized with the\n  syntax array a = { <strong>initializer-list</strong> }; where\n  initializer-list is a comma-separated list of up to N elements whose\n  types are convertible to T.</p>\n</blockquote>\n<p>And (8.5.1 Aggregates)</p>\n<blockquote>\n<p id=\"so_29593597_29593652_1\">11 Braces can be elided in an initializer-list as follows. <strong>If the\n  initializer-list begins with a left brace</strong>, then the succeeding\n  comma-separated list of initializer-clauses initializes the members of\n  a subaggregate; it is erroneous for there to be more\n  initializer-clauses than members.</p>\n</blockquote>\n", "OwnerUserId": "2877241", "LastEditorUserId": "2877241", "LastEditDate": "2015-04-12T19:46:33.710", "Id": "29593652", "Score": "0", "CreationDate": "2015-04-12T19:25:12.533", "LastActivityDate": "2015-04-12T19:46:33.710"}, "bq_ids": {"n4140": {"so_29593597_29593652_0": {"section_id": 775, "quality": 0.75, "length": 12}, "so_29593597_29593652_1": {"section_id": 3308, "quality": 1.0, "length": 23}}, "n3337": {"so_29593597_29593652_0": {"section_id": 762, "quality": 0.75, "length": 12}, "so_29593597_29593652_1": {"section_id": 3178, "quality": 0.9565217391304348, "length": 22}}, "n4659": {"so_29593597_29593652_1": {"section_id": 4074, "quality": 0.9130434782608695, "length": 21}}}, "29593597": {"CommentCount": "2", "ViewCount": "103", "PostTypeId": "1", "LastEditorUserId": "1655229", "CreationDate": "2015-04-12T19:20:30.943", "LastActivityDate": "2015-04-12T19:52:49.490", "Title": "Declaring a static private array member", "AcceptedAnswerId": "29593652", "LastEditDate": "2015-04-12T19:52:49.490", "Id": "29593597", "Score": "1", "Body": "<p>My <code>foo</code> class needs a static C++ <code>array</code> as a private member that I eventually declared this way :</p>\n<pre><code>class Foo : public Bar {\n\nprivate:\n\n    constexpr static array&lt;int, 18&gt; rouges = {1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36};\n    // ...\n}\n</code></pre>\n<p>but the compiler throws</p>\n<pre><code>error: array must be initialized with a brace-enclosed initializer\nerror: too many initializers for 'const std::array&lt;int, 18u&gt;'\n</code></pre>\n<p>Funny thing my array size is exactly 18 elements here and if I declare it <code>array&lt;int, 500&gt;</code> I still get the <code>too many initializers</code> error. As for the brace-enclosed initializer error, I don't understand what the compiler expects to read.</p>\n<p>I documented myself by looking into <em>Stroustrup's A Tour of C++</em> (11.3.1 <code>array</code>) but I don't see how he did it differently that I did. Alternatively, removing the <code>constexpr static</code> keywords doesn't get rid of the errors.</p>\n<p>Thanks for your insight.</p>\n", "Tags": "<c++><arrays><static><mingw>", "OwnerUserId": "1655229", "AnswerCount": "1"}});