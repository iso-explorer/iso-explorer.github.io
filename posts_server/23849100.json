post_cb({"23849543": {"ParentId": "23849100", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2014-05-24T20:51:45.527", "Score": "3", "LastEditorUserId": "36565", "LastEditDate": "2014-05-24T20:58:33.010", "Id": "23849543", "OwnerUserId": "36565", "Body": "<p>Since you want quotes 3.4.1 [basic.unqual.lookup]:</p>\n<blockquote>\n<p id=\"so_23849100_23849543_0\">/4 A name used in global scope, outside of any function, class or user-declared namespace, shall be declared before its use in global scope.</p>\n<p id=\"so_23849100_23849543_1\">/6 A name used in the definition of a function following the function\u2019s declarator-id28 that is a member of namespace N (where, only for the purpose of exposition, N could represent the global scope) shall be declared before its use in the block in which it is used or in one of its enclosing blocks (6.3) or, shall be declared before its use in namespace N or, if N is a nested namespace, shall be declared before its use in one of N\u2019s enclosing namespaces.</p>\n</blockquote>\n", "LastActivityDate": "2014-05-24T20:58:33.010"}, "23849100": {"CommentCount": "4", "ViewCount": "39", "PostTypeId": "1", "LastEditorUserId": "2786156", "CreationDate": "2014-05-24T19:59:31.720", "LastActivityDate": "2014-05-24T20:58:33.010", "Title": "Function definition as qualified id", "AcceptedAnswerId": "23849543", "LastEditDate": "2014-05-24T20:04:53.590", "Id": "23849100", "Score": "1", "Body": "<p>Why the following code is compiled successfully:</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nnamespace B\n{\n    void foo();\n    int i=3;\n}\n\nvoid B::foo()\n{\n    i=65;\n}\nint main(){ }\n</code></pre>\n<p>and the following is not compiled succefully:</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nnamespace B\n{\n    void foo()\n    {\n        i=65;//error: \u2018i\u2019 was not declared in this scope\n    }\n    int i=3;\n}\n\nint main(){ }\n</code></pre>\n<p>I would like to find a reference from the standard clarified this moment.</p>\n", "Tags": "<c++><namespaces>", "OwnerUserId": "2786156", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_23849100_23849543_0": {"section_id": 7090, "quality": 1.0, "length": 14}, "so_23849100_23849543_1": {"section_id": 7092, "quality": 0.9736842105263158, "length": 37}}, "n3337": {"so_23849100_23849543_0": {"section_id": 6834, "quality": 1.0, "length": 14}, "so_23849100_23849543_1": {"section_id": 6836, "quality": 0.9736842105263158, "length": 37}}, "n4659": {"so_23849100_23849543_0": {"section_id": 8591, "quality": 1.0, "length": 14}, "so_23849100_23849543_1": {"section_id": 8593, "quality": 0.7105263157894737, "length": 27}}}, "23849111": {"ParentId": "23849100", "PostTypeId": "2", "CommentCount": "5", "CreationDate": "2014-05-24T20:00:58.883", "Score": "1", "LastEditorUserId": "119527", "LastEditDate": "2014-05-24T20:04:33.623", "Id": "23849111", "OwnerUserId": "3093378", "Body": "<p>In the first example, <code>foo</code> is declared in namespace <code>B</code>, so will search for an <code>i</code> inside its namespace first (and finds such an <code>i</code>, because the implementation of <code>foo</code> is AFTER the namespace declaration of <code>i</code>). In the second example you are declaring <code>i</code> after the definition of <code>foo</code>, so <code>f</code> does not \"see\" <code>i</code>.</p>\n", "LastActivityDate": "2014-05-24T20:04:33.623"}});