post_cb({"bq_ids": {"n4140": {"so_27278596_27278926_1": {"length": 68, "quality": 0.9315068493150684, "section_id": 500}, "so_27278596_27278926_0": {"length": 24, "quality": 0.8, "section_id": 497}}, "n3337": {"so_27278596_27278926_1": {"length": 68, "quality": 0.9315068493150684, "section_id": 491}, "so_27278596_27278926_0": {"length": 24, "quality": 0.8, "section_id": 488}}, "n4659": {"so_27278596_27278926_1": {"length": 43, "quality": 0.589041095890411, "section_id": 519}}}, "27279947": {"Id": "27279947", "PostTypeId": "2", "Body": "<p>I believe the compiler will see everything after the name/macro being defined as part of the definition of the name/macro, that is, as program text, not as macro text.</p>\n<pre><code>int defined(char s);    // prototype of a function named \"defined\"\n\n#define foo\n#define bar defined(foo)\n</code></pre>\n<p>\"bar\" anywhere in the program text will now be replaced with a call to defined() with no argument (as \"foo\" is defined as empty).</p>\n", "LastActivityDate": "2014-12-03T19:22:37.133", "CommentCount": "4", "CreationDate": "2014-12-03T19:22:37.133", "ParentId": "27278596", "Score": "0", "OwnerUserId": "3100312"}, "27278596": {"ViewCount": "77", "Body": "<p>In the very simple C program below, what is the expected compiler error? gcc is giving me 1 whereas MSVC 2013 is giving me 2.</p>\n<pre><code>#define foo\n#define bar (defined(foo))\n\n#if bar\n#error 1\n#else\n#error 2\n#endif\n</code></pre>\n<p>My questions are hopefully equally simple:</p>\n<ol>\n<li>What does the C spec say about the value of defined()? I can't seem\nto find anything that talks about setting its value to another\nmacro.</li>\n<li>The actual code is not something I have control over and \"#if bar\" is used all over the place. What is the simplest way to change the #define so that #if bar will work as \"expected\" in MSVC? The only thing I can think of is to expand it out:</li>\n</ol>\n<p>.</p>\n<pre><code>#ifdef foo\n#define bar 1\n#else\n#define bar 2\n#endif\n</code></pre>\n", "AcceptedAnswerId": "27278926", "Title": "What value to expect from a macro that has been set to the result of defined()?", "CreationDate": "2014-12-03T18:05:32.640", "Id": "27278596", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2014-12-03T20:10:19.047", "Score": "2", "OwnerUserId": "488078", "Tags": "<c><visual-c++><macros><visual-c++-2013><msvc12>", "AnswerCount": "2"}, "27278926": {"Id": "27278926", "PostTypeId": "2", "Body": "<p>The C spec says:</p>\n<blockquote>\n<p id=\"so_27278596_27278926_0\">\u00a76.10.1/1 The expression ... may contain unary operator expressions of the form <code>defined identifier</code> or <code>defined(identifier)</code> which evaluate to <code>1</code> if the identifier is currently defined as a macro name (that is, if it is predefined or if it has been the subject of a <code>#define</code> preprocessing directive without an intervening <code>#undef</code> directive with the same subject identifier), <code>0</code> if it is not.</p>\n<p id=\"so_27278596_27278926_1\">\u00a76.10.1/4  macro invocations in the list of preprocessing tokens that will become\n  the controlling constant expression are replaced (except for those macro names modified\n  by the <code>defined</code> unary operator), just as in normal text. <strong>If the token <code>defined</code> is\n  generated as a result of this replacement process</strong> or use of the <code>defined</code> unary operator\n  does not match one of the two specified forms prior to macro replacement, <strong>the behavior is\n  undefined</strong>. After all replacements due to macro expansion and the <code>defined</code> unary\n  operator have been performed, all remaining identifiers (including those lexically\n  identical to keywords) are replaced with the pp-number 0, and then each preprocessing\n  token is converted into a token.</p>\n</blockquote>\n<p>(emphasis mine) \nHowever, how macro replacement is very complex, and I think MSVC is defining <code>foo</code> as <code>defined(bar)</code> which is undefined behavior, wheras GCC is defining <code>foo</code> as <code>1</code> correctly.  Since MSVC is then in undefined behavior, it does strange things.</p>\n<p>As you say, the easiest fix is </p>\n<pre><code>#ifdef foo\n#define bar 1\n#else\n#define bar 2\n#endif\n</code></pre>\n", "LastEditorUserId": "845092", "LastActivityDate": "2014-12-03T20:10:19.047", "Score": "2", "CreationDate": "2014-12-03T18:22:58.347", "ParentId": "27278596", "CommentCount": "3", "OwnerUserId": "845092", "LastEditDate": "2014-12-03T20:10:19.047"}});