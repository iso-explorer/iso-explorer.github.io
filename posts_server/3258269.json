post_cb({"bq_ids": {"n4140": {"so_3258269_3258284_0": {"length": 15, "quality": 0.9375, "section_id": 369}}, "n3337": {"so_3258269_3258284_0": {"length": 15, "quality": 0.9375, "section_id": 359}}, "n4659": {"so_3258269_3258284_0": {"length": 15, "quality": 0.9375, "section_id": 381}}}, "3258538": {"Id": "3258538", "PostTypeId": "2", "Body": "<p>No, it won't compile without a default constructor. There is no compiler-generated default constructor in this case, because you have defined another constructor. \"The compiler will try to generate one if needed and if the user hasn't declared other constructors.\" -- <em>The C++ Programming Language</em>, Stroustrup</p>\n<p>If you really want to use <code>new SomeClass[5]</code>, you'll have to provide a default constructor as well.</p>\n", "LastActivityDate": "2010-07-15T18:11:10.930", "CommentCount": "6", "CreationDate": "2010-07-15T18:11:10.930", "ParentId": "3258269", "Score": "1", "OwnerUserId": "246895"}, "3258269": {"ViewCount": "149", "Body": "<p>Should SomeClass* initialEl = new SomeClass[5]; necessarily compile, assuming SomeClass does not have a non-publicly declared default constructor?  Consider:</p>\n<pre><code>/*\n * SomeClass.h\n *\n */\n\n#ifndef SOMECLASS_H_\n#define SOMECLASS_H_\n\nclass SomeClass\n{\n\npublic:\n    SomeClass(int){}\n    ~SomeClass(){}\n};\n\n#endif /* SOMECLASS_H_ */\n\n\n/*\n * main.cpp\n *\n */\n\n#include \"SomeClass.h\"\n\nint main()\n{\n    SomeClass* initialEl = new SomeClass[5];\n\n    delete[] initialEl;\n\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "3258538", "Title": "SomeClass* initialEl = new SomeClass[5];", "CreationDate": "2010-07-15T17:37:15.897", "Id": "3258269", "CommentCount": "15", "LastEditDate": "2010-07-15T18:02:30.830", "PostTypeId": "1", "LastEditorUserId": "383352", "LastActivityDate": "2010-07-15T18:13:52.130", "Score": "0", "OwnerUserId": "383352", "Tags": "<c++><class><memory-management><dynamic-memory-allocation><dynamic-arrays>", "AnswerCount": "2"}, "3258284": {"Id": "3258284", "PostTypeId": "2", "Body": "<p>Assuming <code>SomeClass</code> has a publicly accessible default constructor, yes.</p>\n<p>Note that there is a difference between </p>\n<ol>\n<li>having a publicly accessible default constructor (what i said) and</li>\n<li>not having a non-publicly declared default constructor (what you said)</li>\n</ol>\n<p>For the following class <em>2.</em> is true but <em>1.</em> is not:</p>\n<pre><code>class A {\n    SomeClass(const SomeClass&amp;) {}\n};\n</code></pre>\n<p>This is due to <em>\u00a712.1/5</em> (C++03): </p>\n<blockquote>\n<p id=\"so_3258269_3258284_0\">If there is no <em>user-declared</em> constructor for class X, a default constructor is implicitly declared.\n  An <em>implicitly-declared</em> default constructor is an <code>inline public</code> member of its class.</p>\n</blockquote>\n<hr>\n<p>With your update, <code>SomeClass</code> doesn't have a default constructor. You didn't declare one and because you have declared another constructor the compiler won't declare it implicitly either.</p>\n<p>If you need one you have to implement it yourself:</p>\n<pre><code>class A {\npublic:\n    SomeClass(int) {}\n    SomeClass() {}\n};\n</code></pre>\n<p>Or let another constructor qualify as a default constructor:</p>\n<pre><code>class A {\npublic:\n    SomeClass(int=0) {}\n};\n</code></pre>\n</hr>", "LastEditorUserId": "168225", "LastActivityDate": "2010-07-15T18:13:52.130", "Score": "5", "CreationDate": "2010-07-15T17:38:49.637", "ParentId": "3258269", "CommentCount": "9", "OwnerUserId": "168225", "LastEditDate": "2010-07-15T18:13:52.130"}});