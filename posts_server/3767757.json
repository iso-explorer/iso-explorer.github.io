post_cb({"3767757": {"ViewCount": "533", "Body": "<p>Consider </p>\n<pre><code>#include &lt;cstdio&gt;\n\nint main() {\n    char a[10];\n    char *begin = &amp;a[0];\n    char *end = &amp;a[9];\n    int i = end - begin;\n    printf(\"%i\\n\", i);\n    getchar();\n}\n</code></pre>\n<hr>\n<pre><code>#include &lt;cstdio&gt;\n\nint main() {\n    int a[10];\n    int *begin = &amp;a[0];\n    int *end = &amp;a[9];\n    int i = end - begin;\n    printf(\"%i\\n\", i);\n    getchar();\n}\n</code></pre>\n<hr>\n<pre><code>#include &lt;cstdio&gt;\n\nint main() {\n    double a[10];\n    double *begin = &amp;a[0];\n    double *end = &amp;a[9];\n    int i = end - begin;\n    printf(\"%i\\n\", i);\n    getchar();\n}\n</code></pre>\n<p>All the above three examples also print <strong>9</strong></p>\n<p>May I know, how I should interpret the meaning of 9. What does it mean?</p>\n</hr></hr>", "AcceptedAnswerId": "3767915", "Title": "What is the meaning of \"difference of memory address?\"", "CreationDate": "2010-09-22T09:07:08.000", "Id": "3767757", "CommentCount": "4", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2010-09-22T10:18:32.953", "Score": "2", "OwnerUserId": "72437", "Tags": "<c++><c>", "AnswerCount": "4"}, "3768224": {"Id": "3768224", "PostTypeId": "2", "Body": "<p>Just think at the definition of subtraction: if, in general</p>\n<pre><code>r = b - a\n</code></pre>\n<p>it means that</p>\n<pre><code>b = a + r\n</code></pre>\n<p>It holds the same for pointers:</p>\n<pre><code>ptrdiff_t res = end - begin;\n</code></pre>\n<p>thus</p>\n<pre><code>end == begin + res\n</code></pre>\n<p>Now, knowing the normal pointer arithmetic rules, you can easily deduce that <code>res</code> is the number of elements (of the type pointed to by <code>begin</code> and <code>end</code>) that separate <code>begin</code> and <code>end</code>.</p>\n<p><hr/>\nNotice that I didn't use <code>int</code> as the type of <code>res</code>, but <code>ptrdiff_t</code>: this is very much intentional, since <code>ptrdiff_t</code> is defined to be \"<em>the type returned by the subtraction operation between two pointers</em>\" (<a href=\"http://www.cplusplus.com/reference/clibrary/cstddef/ptrdiff_t/\" rel=\"nofollow noreferrer\" title=\"ptrdiff_t - C++ Reference\">link</a>), so it's the perfect type to hold such result.</p>\n", "LastEditorUserId": "214671", "LastActivityDate": "2010-09-22T10:18:32.953", "CommentCount": "1", "CreationDate": "2010-09-22T10:11:54.913", "ParentId": "3767757", "Score": "3", "OwnerUserId": "214671", "LastEditDate": "2010-09-22T10:18:32.953"}, "3767915": {"PostTypeId": "2", "Body": "<p>the compiler will automatically calculate pointer arithmetic based on type of pointer, which is why you cant perform operation using <code>void*</code> (no type information) or mixed pointer type (ambiguous type).</p>\n<p>In MSVC2008 (and in most other compiler i believe), the syntax is interpreted as calculate the amount of element difference between two pointer.</p>\n<pre><code>int i = end - begin;\n00411479  mov         eax,dword ptr [end] \n0041147C  sub         eax,dword ptr [begin] \n0041147F  sar         eax,3 \n00411482  mov         dword ptr [i],eax \n</code></pre>\n<p>Since the subtraction is followed by a right-shifting, the result will be round-down, hence guarantee N element can fit into memory space between two pointer (and there might be unused gap). This is proven in code below which yield result of 9 too.</p>\n<pre><code>int main()\n{\n    double a[10];\n    double *begin = &amp;a[0];\n    char *endc = (char*)&amp;a[9];\n    endc += 7;\n    double *end = (double*)endc;\n    int i = end - begin;\n    printf(\"%i\\n\", i);\n    getchar();\n\n    return 0;\n}\n</code></pre>\n", "LastActivityDate": "2010-09-22T09:29:12.797", "Id": "3767915", "CommentCount": "1", "CreationDate": "2010-09-22T09:29:12.797", "ParentId": "3767757", "Score": "3", "OwnerUserId": "217571"}, "3767779": {"Id": "3767779", "PostTypeId": "2", "Body": "<p>9 means the number of elements of type 'T' between &amp;a[9] and &amp;a[0] (where T is char, int, double respectively in that order).</p>\n<p>The actual number of bytes between them is <code>(&amp;a[9] - &amp;a[0])*sizeof(T)</code>. Note that sizeof(char) is 1 by definition. Note further that a byte is not mandated to be 8-bits. <strike>Instead it is a number of 8-bit memory locations required to hold all the characters in the implementations' basic character set.</strike></p>\n<p>EDIT: As @pmg pointed out, a byte is defined to be a memory location wide enough to hold all the characters in the implementation's basic character set.</p>\n", "LastEditorUserId": "418110", "LastActivityDate": "2010-09-22T10:05:34.737", "CommentCount": "2", "CreationDate": "2010-09-22T09:09:31.370", "ParentId": "3767757", "Score": "12", "OwnerUserId": "418110", "LastEditDate": "2010-09-22T10:05:34.737"}, "bq_ids": {"n4140": {"so_3767757_3767792_0": {"length": 16, "quality": 0.6956521739130435, "section_id": 6143}}, "n3337": {"so_3767757_3767792_0": {"length": 16, "quality": 0.6956521739130435, "section_id": 5907}}}, "3767792": {"PostTypeId": "2", "Body": "<p>Difference between pointers to some type is number of instances between them (that is it is equivalent to difference between array indexes). Or in other words it is equivalent to (not sure about correct integer type)</p>\n<pre><code>((int)end - (int)begin)/sizeof(type)\n</code></pre>\n<blockquote>\n<p id=\"so_3767757_3767792_0\"><strong>6.5.6.9</strong> When two pointers are subtracted, both shall point to\n  elements of the same array object, or\n  one past the last element of the array\n  object; the result is the difference\n  of the subscripts of the two array\n  elements</p>\n</blockquote>\n", "LastActivityDate": "2010-09-22T09:11:43.413", "Id": "3767792", "CommentCount": "1", "CreationDate": "2010-09-22T09:11:43.413", "ParentId": "3767757", "Score": "6", "OwnerUserId": "137350"}});