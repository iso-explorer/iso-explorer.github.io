post_cb({"28075100": {"CommentCount": "1", "AcceptedAnswerId": "28075117", "PostTypeId": "1", "ClosedDate": "2015-01-21T19:41:53.797", "LastEditorUserId": "1782465", "CreationDate": "2015-01-21T19:19:36.843", "LastActivityDate": "2015-01-21T19:27:14.163", "LastEditDate": "2015-01-21T19:24:32.527", "ViewCount": "1396", "FavoriteCount": "1", "Title": "When should we use sizeof with and without parentheses", "Id": "28075100", "Score": "5", "Body": "<pre><code>typedef struct rem{\n    int  addr;\n    char addrbuf[32];\n} foo;\n</code></pre>\n<p>Both of these codes return the same results</p>\n<pre><code>foo addr;\nprintf(\"size is: %d\\n\",sizeof addr);\nprintf(\"size is: %d\\n\",sizeof (foo));\n</code></pre>\n<p>size is: 36</p>\n<p>size is: 36</p>\n<p>But when should we use <code>sizeof</code> with and without parentheses?</p>\n", "Tags": "<c++><c>", "OwnerUserId": "2501921", "AnswerCount": "2"}, "28075212": {"ParentId": "28075100", "CommentCount": "8", "Body": "<p>[expr.sizeof]/1:</p>\n<blockquote>\n<p id=\"so_28075100_28075212_0\">The operand is either an <em>expression</em>, which is an unevaluated operand\n  (Clause 5), or a <strong>parenthesized <em>type-id</em></strong>.</p>\n</blockquote>\n<p>Thus the parentheses are required for types only. If you prefer to use parentheses for clarity and consistency (as I do) you can always use them though, as parentheses around an <em>expression</em> form another <em>expression</em>.<br>\nThe operator precedence of <code>sizeof</code> is not very well known and could cause irritations.</br></p>\n<p>Also, for the <code>sizeof...</code> operator, you always have to use parentheses (another reason for consistency).</p>\n", "OwnerUserId": "3647361", "PostTypeId": "2", "Id": "28075212", "Score": "9", "CreationDate": "2015-01-21T19:26:19.383", "LastActivityDate": "2015-01-21T19:26:19.383"}, "bq_ids": {"n4140": {"so_28075100_28075212_0": {"section_id": 6076, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_28075100_28075212_0": {"section_id": 5844, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_28075100_28075212_0": {"section_id": 7572, "quality": 0.8888888888888888, "length": 8}}}, "28075117": {"ParentId": "28075100", "CommentCount": "16", "Body": "<p>When using <code>sizeof</code> with a <em>type,</em> you need parentheses around the type. When using it with an <em>expression,</em> you don't. But you can of course include them in this case as well, and you don't have to worry about operator precedence in such case. With uncommon operators such as this one, fewer people would be sure of the precedence, so clarity certainly helps.</p>\n<p>So I'd say it's preferable to use them always.</p>\n", "OwnerUserId": "1782465", "PostTypeId": "2", "Id": "28075117", "Score": "12", "CreationDate": "2015-01-21T19:21:04.187", "LastActivityDate": "2015-01-21T19:21:04.187"}});