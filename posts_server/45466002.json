post_cb({"45466002": {"Tags": "<c++14><specifications>", "ViewCount": "27", "AnswerCount": "1", "CreationDate": "2017-08-02T16:15:12.110", "Title": "Disjointness of allocated memory blocks?", "CommentCount": "2", "AcceptedAnswerId": "45466619", "Score": "0", "OwnerUserId": "6695164", "Id": "45466002", "LastActivityDate": "2017-08-02T16:54:08.127", "Body": "<p>It was my impression that a call to the allocation function will result in a pointer to the start of a memory block (A) such that all subsequent calls allocate a block of memory disjoint from A. But I yet to find that requirement (or a requirement implicating this) in the C++14 specification (ISO/IEC 14882:2014(E)), specifically \u00a7 3.7.4.1.</p>\n<p><strong>Question:</strong> Is it part of the specification, and if so where can I find it? </p>\n", "PostTypeId": "1"}, "45466619": {"ParentId": "45466002", "Score": "2", "CreationDate": "2017-08-02T16:47:07.930", "LastActivityDate": "2017-08-02T16:54:08.127", "LastEditDate": "2017-08-02T16:54:08.127", "OwnerUserId": "734069", "LastEditorUserId": "734069", "Body": "<p>It's in [basic.stc.dynamic.allocation]/2: the requirements on \"allocation functions\":</p>\n<blockquote>\n<p id=\"so_45466002_45466619_0\">Furthermore, for the library allocation functions in [new.delete.single] and [new.delete.array], <code>p0</code> shall represent the address of a block of storage disjoint from the storage for any other object accessible to the caller.</p>\n</blockquote>\n<p>Note that this is from N4659, a C++17 draft. The N4140 draft document for C++14 does not contain this; it was added due to a defect resolution for <a href=\"http://wg21.link/cwg1338\" rel=\"nofollow noreferrer\">CWG issue 1338</a>.</p>\n", "Id": "45466619", "PostTypeId": "2", "CommentCount": "0"}, "bq_ids": {"n4659": {"so_45466002_45466619_0": {"length": 14, "section_id": 8685, "quality": 0.875}}}});