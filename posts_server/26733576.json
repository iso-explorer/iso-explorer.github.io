post_cb({"26734444": {"ParentId": "26733576", "CommentCount": "1", "Body": "<p>Automatic variables are destroyed in reverse order of declaration, so the destructor indicated is the destructor of <code>s1</code>.</p>\n<p>The reason it takes the value <code>{\"\", 42}</code> at that point in the program is that the return value of <code>f</code> is being initialized by move construction; that is, <code>s1</code> is being treated as an xvalue.  This follows from the rule in <strong>[class.copy]</strong>/32:</p>\n<blockquote>\n<p id=\"so_26733576_26734444_0\">When the criteria for elision of a copy operation are met or would be met save for the fact that the source\n  object is a function parameter, and the object to be copied is designated by an lvalue, overload resolution to\n  select the constructor for the copy is \ufb01rst performed as if the object were designated by an rvalue.</p>\n</blockquote>\n", "OwnerUserId": "567292", "PostTypeId": "2", "Id": "26734444", "Score": "2", "CreationDate": "2014-11-04T11:50:06.760", "LastActivityDate": "2014-11-04T11:50:06.760"}, "26733576": {"CommentCount": "5", "ViewCount": "96", "CreationDate": "2014-11-04T11:05:28.180", "LastActivityDate": "2014-11-04T11:50:06.760", "Title": "Whose destructor is this one?", "AcceptedAnswerId": "26734444", "PostTypeId": "1", "Id": "26733576", "Score": "3", "Body": "<p>In the code below:</p>\n<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n\nstruct S {\n    std::string a;\n    int b;\n\n    S(const S&amp;) = default;\n    S(S&amp;&amp;) = default;\n    S&amp; operator=(const S&amp;) = default;\n    S&amp; operator=(S&amp;&amp;) = default; // not required here but should be added for completeness\n\n    ~S() {\n        std::cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; std::endl;\n    }\n};\n\nS f(S arg) {\n    S s0{};\n    S s1(s0); //s1 {s0}; in the book\n    s1 = arg;\n    return s1;\n}\n\nint main()\n{\n    S s3{\"tool\",42};\n    f(s3);\n}\n</code></pre>\n<p>I get the following output (I commented the output with my reasonings):</p>\n<pre><code> 42 //???\n 0  // s0 is destroyed\ntool 42 // arg is destroyed\ntool 42 // return value of f() is destroyed\ntool 42 // s3 is destroyed\n</code></pre>\n<p>whose destructor is the one which outputs 42?? I can't understand it</p>\n", "Tags": "<c++>", "OwnerUserId": "3834459", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_26733576_26734444_0": {"section_id": 481, "quality": 0.6551724137931034, "length": 19}}, "n3337": {"so_26733576_26734444_0": {"section_id": 472, "quality": 0.9655172413793104, "length": 28}}, "n4659": {"so_26733576_26734444_0": {"section_id": 504, "quality": 0.5172413793103449, "length": 15}}}});