post_cb({"32520507": {"Id": "32520507", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_32520257_32520507_0\"><code>N3337 [global.names]:</code> Certain sets of names and function signatures are always reserved to the implementation:</p>\n<p id=\"so_32520257_32520507_1\">\u2014 <strong>Each name that contains a double underscore <code>__</code> or begins with an underscore followed by an uppercase letter is reserved to the implementation for any use.</strong></p>\n<p id=\"so_32520257_32520507_2\">\u2014 Each name that begins with an underscore is reserved to the implementation for use as a name in the\n  global namespace.</p>\n</blockquote>\n<p>Your macro contains a double underscore, so is reserved to the implementation. Changing it to a valid name should fix your issue.</p>\n", "LastActivityDate": "2015-09-11T09:48:46.763", "CommentCount": "1", "CreationDate": "2015-09-11T09:48:46.763", "ParentId": "32520257", "Score": "6", "OwnerUserId": "496161"}, "32520257": {"ViewCount": "110", "Body": "<p>Is it possible in <strong>C</strong>/C++ to nest a preprocessor <code>#define</code> (in this case <code>#ifdef</code>)? I'd like to be able to do this:</p>\n<pre><code>#ifdef _DEBUG_\n#define __DEV_MODE_VERBOSE__  // Defined in DEBUG mode only\n#endif\n</code></pre>\n<p>The idea is that \"<code>__DEV_MODE_VERBOSE__</code>\" will usually be commented out. When uncommented, I can use something like:</p>\n<pre><code>#ifdef __DEV_MODE_VERBOSE__\nint test = (5 * GetTickCount());  // Not reached!\n#endif      // __DEV_MODE_VERBOSE__\n</code></pre>\n<p>to log commands sent and received over my comms link. If the <code>#define</code> were accidentally left uncommented, though, the logging would NOT occur in RELEASE (and therefore production) code.</p>\n<p>When I try to define \"<code>__DEV_MODE_VERBOSE__</code>\" as above, it isn't defined so I'm not sure if the syntax is incorrect or whether the problem is more fundamental. The symbol <strong>is</strong> defined if I don't nest between \"<code>#ifdef _DEBUG_</code>\" and its' <code>#endif</code>.</p>\n", "AcceptedAnswerId": "32520507", "Title": "Conditional #define based on another defined symbol", "CreationDate": "2015-09-11T09:36:23.673", "Id": "32520257", "CommentCount": "6", "LastEditDate": "2016-07-06T08:25:53.783", "PostTypeId": "1", "LastEditorUserId": "4370109", "LastActivityDate": "2016-07-06T08:25:53.783", "Score": "2", "OwnerUserId": "2377399", "Tags": "<c++><c-preprocessor>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_32520257_32520507_0": {"length": 8, "quality": 0.8, "section_id": 6307}, "so_32520257_32520507_2": {"length": 10, "quality": 1.0, "section_id": 6307}, "so_32520257_32520507_1": {"length": 13, "quality": 1.0, "section_id": 6307}}, "n3337": {"so_32520257_32520507_0": {"length": 8, "quality": 0.8, "section_id": 6064}, "so_32520257_32520507_2": {"length": 10, "quality": 1.0, "section_id": 6064}, "so_32520257_32520507_1": {"length": 13, "quality": 1.0, "section_id": 6064}}, "n4659": {"so_32520257_32520507_2": {"length": 9, "quality": 0.9, "section_id": 6756}, "so_32520257_32520507_1": {"length": 12, "quality": 0.9230769230769231, "section_id": 6756}}}});