post_cb({"bq_ids": {"n4140": {"so_21964120_21964142_5": {"length": 10, "quality": 0.7142857142857143, "section_id": 3285}, "so_21964120_21964142_2": {"length": 19, "quality": 0.76, "section_id": 3291}, "so_21964120_21964142_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 7151}, "so_21964120_21964142_3": {"length": 5, "quality": 1.0, "section_id": 3285}, "so_21964120_21964142_1": {"length": 4, "quality": 0.8, "section_id": 39}}, "n3337": {"so_21964120_21964142_5": {"length": 13, "quality": 0.9285714285714286, "section_id": 3155}, "so_21964120_21964142_4": {"length": 11, "quality": 0.9166666666666666, "section_id": 3155}, "so_21964120_21964142_1": {"length": 4, "quality": 0.8, "section_id": 36}, "so_21964120_21964142_2": {"length": 21, "quality": 0.84, "section_id": 3161}, "so_21964120_21964142_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 6895}, "so_21964120_21964142_3": {"length": 5, "quality": 1.0, "section_id": 3155}}, "n4659": {"so_21964120_21964142_2": {"length": 19, "quality": 0.76, "section_id": 4053}, "so_21964120_21964142_5": {"length": 10, "quality": 0.7142857142857143, "section_id": 4047}, "so_21964120_21964142_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 425}, "so_21964120_21964142_3": {"length": 4, "quality": 0.8, "section_id": 653}, "so_21964120_21964142_1": {"length": 4, "quality": 0.8, "section_id": 39}}}, "21964134": {"Id": "21964134", "PostTypeId": "2", "Body": "<p>The pointer will point to address zero (NULL on most systems). You will still need to point it somewhere valid (e. g. from malloc) before using it as a pointer.</p>\n", "LastActivityDate": "2014-02-23T04:13:32.820", "CommentCount": "1", "CreationDate": "2014-02-23T04:13:32.820", "ParentId": "21964120", "Score": "0", "OwnerUserId": "2112731"}, "21964120": {"ViewCount": "5421", "Body": "<p>As static variable declaration without any value assigned goes in BSS section of code. where it will be automatically initialed to zero.          </p>\n<p>Question:\n    suppose, if declare static pointer without any assignment, then <strong>whether should it have zero value for address or value?</strong></p>\n", "Title": "Static pointer default value in c/c++", "CreationDate": "2014-02-23T04:12:20.810", "LastActivityDate": "2014-08-22T12:25:09.857", "CommentCount": "2", "PostTypeId": "1", "ClosedDate": "2014-02-27T16:11:18.030", "Id": "21964120", "Score": "1", "OwnerUserId": "3264390", "Tags": "<c++><c><static>", "AnswerCount": "2"}, "21964142": {"Id": "21964142", "PostTypeId": "2", "Body": "<p>In C a static pointer will be initialized to null, the <a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf\" rel=\"nofollow\">draft C99 standard</a> section <code>6.7.8</code> <em>Initialization</em> paragraph <em>10</em> says:</p>\n<blockquote>\n<p id=\"so_21964120_21964142_0\">an object that has static storage duration is not initialized explicitly, then:</p>\n</blockquote>\n<p>and included the following bullet:</p>\n<blockquote>\n<p id=\"so_21964120_21964142_1\">\u2014 if it has pointer type, it is initialized to a null pointer;</p>\n</blockquote>\n<p>So no storage is allocated for it, it is a null pointer. Also note it is an implementation defined behavior where static variables are stored.</p>\n<p>The relevant section for <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\" rel=\"nofollow\">the C++ draft standard</a> would be section <code>8.5</code> <em>Initializers</em> paragraph <em>13</em> which says (<em>emphasis mine</em>):</p>\n<blockquote>\n<p id=\"so_21964120_21964142_2\">If no initializer is specified for an object, the object is default-initialized; if no initialization is performed, an object with automatic or dynamic storage duration has indeterminate value. [ Note: <strong>Objects with static or thread storage duration are \n  zero-initialized</strong>, see 3.6.2. \u2014end note ]</p>\n</blockquote>\n<p><em>zero-initialize</em> is covered in paragraph <em>6</em> which says:</p>\n<blockquote>\n<p id=\"so_21964120_21964142_3\">To zero-initialize an object or reference of type T means:</p>\n</blockquote>\n<p>and has the following bullet:</p>\n<blockquote>\n<p id=\"so_21964120_21964142_4\">\u2014 if T is a scalar type (3.9), the object is set to the value 0 (zero), taken as an integral constant expression, converted to T;<sup>103</sup></p>\n</blockquote>\n<p>where <em>footnote</em> <code>103</code> says (<em>emphasis mine</em>):</p>\n<blockquote>\n<p id=\"so_21964120_21964142_5\">As specified in 4.10, converting an integral constant expression whose value is 0 to a <strong>pointer type results in a null pointer value</strong>.</p>\n</blockquote>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2014-08-22T12:25:09.857", "Score": "9", "CreationDate": "2014-02-23T04:15:02.727", "ParentId": "21964120", "CommentCount": "0", "OwnerUserId": "1708801", "LastEditDate": "2014-08-22T12:25:09.857"}});