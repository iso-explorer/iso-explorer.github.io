post_cb({"7263017": {"ParentId": "7262818", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>\u00a76.6/2:</p>\n<blockquote>\n<p id=\"so_7262818_7263017_0\">On exit from a scope (however accomplished), destructors (12.4) are called for all constructed objects with automatic storage duration...</p>\n</blockquote>\n<p>At least as I'd read it, \"however accomplished\" should/does include a <code>goto</code>.</p>\n<p>Edit: Okay, based on Johannes's comment, what we care about is \u00a715.1/4: </p>\n<blockquote>\n<p id=\"so_7262818_7263017_1\">When the last handler being executed for the\n  exception exits by any means other than throw; the temporary object is destroyed and the implementation\n  may deallocate the memory for the temporary object; </p>\n</blockquote>\n<p>[ ... ] </p>\n<blockquote>\n<p id=\"so_7262818_7263017_2\">The destruction occurs immediately after the destruction of the object declared in the exception-declaration\n  in the handler.</p>\n</blockquote>\n", "OwnerUserId": "179910", "LastEditorUserId": "179910", "LastEditDate": "2011-08-31T20:54:52.373", "Id": "7263017", "Score": "11", "CreationDate": "2011-08-31T20:32:50.240", "LastActivityDate": "2011-08-31T20:54:52.373"}, "7262818": {"CommentCount": "8", "AcceptedAnswerId": "7263017", "PostTypeId": "1", "LastEditorUserId": "214671", "CreationDate": "2011-08-31T20:11:40.413", "LastActivityDate": "2011-09-01T05:32:39.587", "LastEditDate": "2011-08-31T20:58:35.633", "ViewCount": "623", "FavoriteCount": "3", "Title": "If I jump out of a catch-block with \"goto\", am I guaranteed that the exception-object will be free'ed?", "Id": "7262818", "Score": "13", "Body": "<p>I have such code as follows</p>\n<pre><code>try {\n  doSomething();\n} catch(InterruptException) {\n  goto rewind_code;\n}\n\nif(0) {\nrewind_code:\n  longjmp(savepoint, 1);\n}\n</code></pre>\n<p>My question is, is the exception object that is stored by the C++ runtime free'ed when I <code>goto</code> out of the catch block? Or is the runtime allowed to cache it until the surrounding function exists or something like that? I simply want to ensure that if I execute above code multiple times, each time taking the rewind code, I won't leak memory (because the <code>longjmp</code> won't execute cleanup code emitted by the compiler into or before function prologues). </p>\n", "Tags": "<c++><exception><language-lawyer><abi><longjmp>", "OwnerUserId": "34509", "AnswerCount": "2"}, "7263318": {"ParentId": "7262818", "CommentCount": "0", "Body": "<p>\u00a7 15.1.4</p>\n<blockquote>\n<p id=\"so_7262818_7263318_0\">The memory for the exception object is allocated in an unspecified\n  way, except as noted in 3.7.4.1. If a handler exits by rethrowing,\n  control is passed to another handler for the same exception. <strong>The\n  exception object is destroyed after either the last remaining active\n  handler for the exception exits by any means other than rethrowing</strong>, or\n  the last object of type std::exception_ptr (18.8.5) that refers to the\n  exception object is destroyed, whichever is later. In the former case,\n  <strong>the destruction occurs when the handler exits, immediately after the\n  destruction of the object declared in the exception-declaration in the\n  handler, if any.</strong> In the latter case, the destruction occurs before the\n  destructor of std::exception_ptr returns. The implementation may then\n  deallocate the memory for the exception object; any such deallocation\n  is done in an unspecified way.</p>\n</blockquote>\n", "OwnerUserId": "845092", "PostTypeId": "2", "Id": "7263318", "Score": "4", "CreationDate": "2011-08-31T20:57:31.330", "LastActivityDate": "2011-08-31T20:57:31.330"}, "bq_ids": {"n4140": {"so_7262818_7263017_0": {"section_id": 3909, "quality": 0.6153846153846154, "length": 8}, "so_7262818_7263017_2": {"section_id": 3337, "quality": 0.9, "length": 9}, "so_7262818_7263017_1": {"section_id": 3337, "quality": 0.7, "length": 14}, "so_7262818_7263318_0": {"section_id": 3337, "quality": 0.9382716049382716, "length": 76}}, "n3337": {"so_7262818_7263017_0": {"section_id": 3769, "quality": 0.6153846153846154, "length": 8}, "so_7262818_7263017_2": {"section_id": 3207, "quality": 0.9, "length": 9}, "so_7262818_7263017_1": {"section_id": 3207, "quality": 0.7, "length": 14}, "so_7262818_7263318_0": {"section_id": 3207, "quality": 0.9382716049382716, "length": 76}}, "n4659": {"so_7262818_7263017_0": {"section_id": 4795, "quality": 0.6153846153846154, "length": 8}, "so_7262818_7263318_0": {"section_id": 4104, "quality": 0.6172839506172839, "length": 50}, "so_7262818_7263017_1": {"section_id": 4104, "quality": 0.65, "length": 13}, "so_7262818_7263017_2": {"section_id": 4104, "quality": 0.8, "length": 8}}}});