post_cb({"23720289": {"ParentId": "23720258", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>If you run this code in VS with all checks on, you'll get a <strong>runtime error</strong></p>\n<blockquote>\n<p id=\"so_23720258_23720289_0\">Run-Time Check Failure #3 - The variable 'x' is being used without being initialized.</p>\n</blockquote>\n<p>The process of initialization, (roughly) assigns a value to an object. When you use the object itself, you're using uninitialized memory to initialize memory</p>\n<p>On initialization itself, I'd recommend chapters 8.5 : </p>\n<blockquote>\n<p id=\"so_23720258_23720289_1\">A declarator can specify an initial value for the identifier being declared. The identifier designates a variable being initialized. The process of initialization described in the remainder of 8.5 applies also to initializations specified by other syntactic contexts, such as the initialization of function parameters with argument expressions (5.2.2) or the initialization of return values. ( . . . )</p>\n</blockquote>\n<p>and 12.6 : </p>\n<blockquote>\n<p id=\"so_23720258_23720289_2\">12.6 Initialization [class.init]</p>\n<ol>\n<li><p id=\"so_23720258_23720289_3\">When no initializer is specified for an object of (possibly cv-qualified) class type (or array thereof), or the initializer has the form (), the object is initialized as specified in 8.5.</p></li>\n<li><p id=\"so_23720258_23720289_4\">An object of class type (or array thereof ) can be explicitly initialized; see 12.6.1 and 12.6.2.</p></li>\n<li><p id=\"so_23720258_23720289_5\">When an array of class objects is initialized (either explicitly or implicitly) and the elements are initialized by constructor, the constructor shall be called for each element of the array, following the subscript order; see 8.3.4. [ Note: Destructors for the array elements are called in reverse order of their construction. \u2014 end note ]</p></li>\n</ol>\n<p id=\"so_23720258_23720289_6\">12.6.1\n  An object of class type can be initialized with a parenthesized expression-list , where the expression-list is construed as an argument list for a constructor that is called to initialize the object. Alternatively, a single assignment-expression can be specified as an initializer using the = form of initialization. Either direct-initialization semantics or copy-initialization semantics apply; see 8.5. ( . . . )</p>\n</blockquote>\n", "OwnerUserId": "2567683", "LastEditorUserId": "2567683", "LastEditDate": "2014-05-18T09:13:33.883", "Id": "23720289", "Score": "1", "CreationDate": "2014-05-18T09:05:55.707", "LastActivityDate": "2014-05-18T09:13:33.883"}, "bq_ids": {"n4140": {"so_23720258_23720289_3": {"section_id": 421, "quality": 1.0, "length": 15}, "so_23720258_23720289_4": {"section_id": 422, "quality": 0.8181818181818182, "length": 9}, "so_23720258_23720289_6": {"section_id": 424, "quality": 0.9696969696969697, "length": 32}, "so_23720258_23720289_5": {"section_id": 423, "quality": 0.875, "length": 28}, "so_23720258_23720289_1": {"section_id": 3280, "quality": 0.9166666666666666, "length": 33}}, "n3337": {"so_23720258_23720289_3": {"section_id": 413, "quality": 1.0, "length": 15}, "so_23720258_23720289_4": {"section_id": 414, "quality": 0.8181818181818182, "length": 9}, "so_23720258_23720289_6": {"section_id": 416, "quality": 0.9696969696969697, "length": 32}, "so_23720258_23720289_5": {"section_id": 415, "quality": 0.875, "length": 28}, "so_23720258_23720289_1": {"section_id": 3151, "quality": 0.9166666666666666, "length": 33}}, "n4659": {"so_23720258_23720289_4": {"section_id": 440, "quality": 0.8181818181818182, "length": 9}, "so_23720258_23720289_5": {"section_id": 441, "quality": 0.875, "length": 28}, "so_23720258_23720289_6": {"section_id": 442, "quality": 0.9696969696969697, "length": 32}, "so_23720258_23720289_1": {"section_id": 4042, "quality": 0.8611111111111112, "length": 31}, "so_23720258_23720289_3": {"section_id": 439, "quality": 1.0, "length": 15}}}, "23720258": {"CommentCount": "5", "AcceptedAnswerId": "23720289", "ClosedDate": "2014-05-18T09:37:29.123", "OwnerDisplayName": "user2953119", "CreationDate": "2014-05-18T09:02:21.427", "LastActivityDate": "2014-05-18T09:13:33.883", "PostTypeId": "1", "ViewCount": "72", "Title": "What does variable initialization mean", "Id": "23720258", "Score": "1", "Body": "<p>I'm reading the c++ standard and I've encountered with the line (3.3.2/2):</p>\n<pre><code>int x=x;\n</code></pre>\n<p>In this example <code>x</code> is initialized with its own (Indeterminate) value. Is <code>x</code> initialized in this case? </p>\n", "Tags": "<c++><initialization>", "AnswerCount": "1"}});