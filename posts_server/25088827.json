post_cb({"25089036": {"ParentId": "25088827", "CommentCount": "0", "Body": "<p>Try using std::size_t in your other constructor</p>\n<p>You'll be in the same boat if you do size_t as your vector template parameter... but it's a workaround for the other cases until this is fixed.</p>\n<pre><code>#include &lt;initializer_list&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nclass MyArray\n{\npublic:\n    std::vector&lt; int &gt; values;\n    MyArray(std::size_t s) : values(s) { }\n    MyArray(std::initializer_list&lt;int&gt; list): values(list)\n    {}\n};\n\nint main()\n{\n    int s({ 9 });\n    vector&lt;int&gt; vx({ 9, 8, 7 }); // Works\n    MyArray mx({ 9, 8, 7 });   // Works\n\n    vector&lt;int&gt; vy({ 9 });     // Works\n    MyArray my1(0);\n    MyArray my({ 9 });         // VS-compiler complains about ambiguity\n}\n</code></pre>\n", "OwnerUserId": "1417615", "PostTypeId": "2", "Id": "25089036", "Score": "2", "CreationDate": "2014-08-01T21:36:09.560", "LastActivityDate": "2014-08-01T21:36:09.560"}, "25088827": {"CommentCount": "5", "ViewCount": "280", "PostTypeId": "1", "LastEditorUserId": "370594", "CreationDate": "2014-08-01T21:17:37.203", "LastActivityDate": "2014-08-01T21:42:40.150", "Title": "Visual Studio gives error about ambiguous ctor", "AcceptedAnswerId": "25089036", "LastEditDate": "2014-08-01T21:33:36.030", "Id": "25088827", "Score": "4", "Body": "<p>I'm stuck with compiler errors in VS 2013 where my custom class has an ambiguity error, but it works without ambiguity for <code>std::vector</code> </p>\n<pre><code>#include &lt;initializer_list&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nclass MyArray\n{\npublic:\n    std::vector&lt; int &gt; values;\n    MyArray(int s) : values(s) { }\n    MyArray(std::initializer_list&lt; int &gt;list) { values = list; }\n};\n\nint main ()\n{\n    vector&lt;int&gt; vx({9,8,7}); // Works\n    MyArray mx({9, 8, 7});   // Works\n\n    vector&lt;int&gt; vy({9});     // Works\n    MyArray my({9});         // VS-compiler complains about ambiguity\n    MyArray mz(std::initializer_list&lt;int&gt;{9}); // Works\n}\n</code></pre>\n<p>Of course, I can fix the ambiguity by added the type explicitly: <code>MyArray my(std::initializer_list&lt;int&gt;{9})</code>, but that is very inconvenient. <strong>Is there a way to code up the constructors so that VS doesn't complain about ambiguity for my class?</strong></p>\n<p>Since <code>std::vector</code> doesn't give ambiguity errors, it would seem like it should be possible.</p>\n", "Tags": "<c++><visual-c++><visual-studio-2013>", "OwnerUserId": "370594", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_25088827_25088924_1": {"section_id": 599, "quality": 1.0, "length": 20}, "so_25088827_25088924_0": {"section_id": 599, "quality": 0.9285714285714286, "length": 13}}, "n3337": {"so_25088827_25088924_1": {"section_id": 589, "quality": 1.0, "length": 20}, "so_25088827_25088924_0": {"section_id": 589, "quality": 0.9285714285714286, "length": 13}}, "n4659": {"so_25088827_25088924_1": {"section_id": 622, "quality": 1.0, "length": 20}, "so_25088827_25088924_0": {"section_id": 622, "quality": 0.9285714285714286, "length": 13}}}, "25088924": {"ParentId": "25088827", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>it seems it is a bug of MS VC++ 2013 compiler.</p>\n<p>According to the C++ Standard (13.3.1.7 Initialization by list-initialization, p.#1)</p>\n<blockquote>\n<p id=\"so_25088827_25088924_0\">\u2014 Initially, the candidate functions are the initializer-list\n  constructors (8.5.4) of the class T and the argument list consists of\n  the initializer list as a single argument.</p>\n<p id=\"so_25088827_25088924_1\">\u2014 If no viable initializer-list constructor is found, overload\n  resolution is performed again, where the candidate functions are all\n  the constructors of the class T and the argument list consists of the\n  elements of the initializer list.</p>\n</blockquote>\n<p>As such a constructor is found in your class it shall be called.</p>\n<p>At least this code is compiled with GCC.</p>\n<p>You may write a defect report to Microsoft. Usually they suggest a way to overcome the problem.\nDo not forget to test the code setting off the MS language extensions for the project.</p>\n", "OwnerUserId": "2877241", "LastEditorUserId": "2877241", "LastEditDate": "2014-08-01T21:42:40.150", "Id": "25088924", "Score": "4", "CreationDate": "2014-08-01T21:27:06.647", "LastActivityDate": "2014-08-01T21:42:40.150"}});