post_cb({"bq_ids": {"n4140": {"so_23967553_23967656_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 11}}, "n3337": {"so_23967553_23967656_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 8}}, "n4659": {"so_23967553_23967656_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 12}}}, "23967656": {"Id": "23967656", "PostTypeId": "2", "Body": "<p>The type of string literal <code>\"Bohr\"</code> is indeed <code>const char[5]</code>.</p>\n<p>However, it can be implicitly casted to <code>const char *</code> due to</p>\n<p><strong>\u00a7 4.2 Array-to-pointer conversion [conv.array]</strong></p>\n<blockquote>\n<p id=\"so_23967553_23967656_0\">An lvalue or rvalue of type \u201carray of N T\u201d or \u201carray of unknown bound of T\u201d can be converted to a prvalue\n  of type \u201cpointer to T\u201d. The result is a pointer to the \ufb01rst element of the array.</p>\n</blockquote>\n<p><strong>Edit:</strong></p>\n<p>I didn't realize your confusion was from Bjarne's statement about <code>// error, but accepted in pre-C++11-standard code</code>. Well, compilers need to stay backwards-compatible so they don't throw an error, but they do give you a warning. His claim isn't wrong however, since as far as the language standard goes, by C++11 rules it is an error.</p>\n<p>From clang for example:</p>\n<blockquote>\n<p id=\"so_23967553_23967656_1\">warning: conversion from string literal to 'char *' is deprecated\n        [-Wc++11-compat-deprecated-writable-strings]</p>\n</blockquote>\n<p>and from gcc:</p>\n<blockquote>\n<p id=\"so_23967553_23967656_2\">warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]</p>\n</blockquote>\n", "LastEditorUserId": "2968284", "LastActivityDate": "2014-05-31T07:48:56.007", "Score": "2", "CreationDate": "2014-05-31T07:38:10.570", "ParentId": "23967553", "CommentCount": "4", "OwnerUserId": "2968284", "LastEditDate": "2014-05-31T07:48:56.007"}, "23967553": {"ViewCount": "1624", "Body": "<p>C++11: Type of string literal is \"array of the appropriate number of const characters\";</p>\n<p>\"Bohr\" therefore would be of type <code>const char[5]</code></p>\n<pre><code>void f()\n{\n char* p = \"Plato\"; // error, but accepted in pre-C++11-standard code\n p[4] = 'e';        // error: assignment to const\n}\n</code></pre>\n<p>(which is a short excerpt of \"The C++ Programming Language by Bjarne Stroustrup (4th Ed.)\" on p. 176 in 7.3.2 \"String Literals\")\nyet my compiler (Dev-C++11 5.6.2) with either settings of ISO-C++11 or GNU-C++11 doesn't warn or break compilation at</p>\n<pre><code>const char a[5] = \"Bohr\";\nconst char *b = \"Bohr\";\n</code></pre>\n<hr>\n<p>Furthermore, Question #2 at cppquiz.org also doesn't mention any compiler breakage or any other problems with this: <a href=\"http://cppquiz.org/quiz/question/2\" rel=\"nofollow\">http://cppquiz.org/quiz/question/2</a></p>\n<blockquote>\n<p id=\"so_23967553_23967553_0\"><strong>What is the output of the below program in C+++11?</strong></p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nvoid f(const std::string &amp;) { std::cout &lt;&lt; 1; }\n\nvoid f(const void *) { std::cout &lt;&lt; 2; }\n\nint main() {\n  f(\"foo\");\n  const char *bar = \"bar\";\n  f(bar);\n}\n</code></pre>\n</blockquote>\n<p>Before writing the author, I wanted to ask for advice here; I hope you can help me?</p>\n<p>Edit: The line</p>\n<pre><code>char* p = \"Plato\"; // error, but accepted in pre-C++11-standard code\n</code></pre>\n<p>should, as is commented, not be valid in C++-11-standard code, according to the latest book from the official creator of the language, but in</p>\n<pre><code>const char *b = \"Bohr\";\n</code></pre>\n<p>there appears to be no problem in the quiz as well the compiler?</p>\n</hr>", "Title": "C++11: Type of string literal is \"array of the appropriate number of const characters\"", "CreationDate": "2014-05-31T07:24:59.303", "LastActivityDate": "2014-05-31T17:05:59.787", "CommentCount": "13", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2014-05-31T07:34:48.877", "Tags": "<c++><string><c++11><char><const>", "Id": "23967553", "LastEditorUserId": "3547831", "Score": "0", "OwnerUserId": "3547831", "ClosedDate": "2014-05-31T11:32:05.340", "AnswerCount": "1"}});