post_cb({"13992924": {"ParentId": "13992897", "CommentCount": "0", "Body": "<p>Definitely not.  A lot of characteristics of enums are implementation defined.  Make sure to pick a real (safe) type and serialize that.</p>\n", "OwnerUserId": "116908", "PostTypeId": "2", "Id": "13992924", "Score": "3", "CreationDate": "2012-12-21T15:36:07.090", "LastActivityDate": "2012-12-21T15:36:07.090"}, "13992936": {"ParentId": "13992897", "CommentCount": "0", "Body": "<p>Size of enum is the same as <code>int</code>, so it's not guaranteed to be of the same length everywhere.</p>\n<p>Use one of types defined in <code>stdint.h</code>, like <code>int32_t</code>, <code>int16_t</code>, etc.</p>\n", "OwnerUserId": "300886", "PostTypeId": "2", "Id": "13992936", "Score": "1", "CreationDate": "2012-12-21T15:36:25.000", "LastActivityDate": "2012-12-21T15:36:25.000"}, "13992925": {"ParentId": "13992897", "PostTypeId": "2", "CommentCount": "3", "Body": "<blockquote>\n<p id=\"so_13992897_13992925_0\">In other words is sizeof(MyEnum) guaranteed to be the same size on all platforms?</p>\n</blockquote>\n<p>You can set an explicit type in C++11 (but <em>not</em> in earlier C++ incarnations):</p>\n<pre><code>enum class Drug : char {\n    Cocaine,\n    Cannabis,\n    Crack\n};\n</code></pre>\n<p>or</p>\n<pre><code>enum Sex : uint32_t {\n    Male,\n    Female,\n    Other\n};\n</code></pre>\n<p>Using <code>class</code> in front of <code>enum</code> by the way forces users of <code>Drug</code> to spell it <code>Drug::Cocaine</code>, for enumerations without the <code>class</code> in front of their declarations, the spelling is optional (both <code>Sex::Male</code> and <code>Female</code> are valid).</p>\n<p>Hacks for C++es prior 2011 include the following, which forces a minimal size:</p>\n<pre><code>enum Frob {\n    ...\n    FORCE_DWORD          = 0x7fffffff\n};\n</code></pre>\n<p>Seen in practice e.g. on ReactOS' <a href=\"http://doxygen.reactos.org/dd/df8/d3d8types_8h_a8ef2b49d3b5f6e59fdc4fd76d252b764.html\" rel=\"nofollow\">DirectX-SDK implementation</a>.</p>\n<hr>\n<h3>Standards references</h3>\n<blockquote>\n<h3>7.2 Enumeration Declarations [dcl.enum]</h3>\n<p id=\"so_13992897_13992925_1\">[...]</p>\n<p id=\"so_13992897_13992925_2\">\u00a76: For an enumeration whose underlying type is not fixed, <strong>the underlying type is an integral type that can\n  represent all the enumerator values defined in the enumeration. If no integral type can represent all the\n  enumerator values, the enumeration is ill-formed. It is implementation-defined which integral type is used</strong>\n  as the underlying type except that the underlying type shall not be larger than int unless the value of an\n  enumerator cannot fit in an int or unsigned int. If the enumerator-list is empty, the underlying type is\n  as if the enumeration had a single enumerator with value 0.</p>\n</blockquote>\n</hr>", "OwnerUserId": "76722", "LastEditorUserId": "76722", "LastEditDate": "2012-12-21T15:48:59.167", "Id": "13992925", "Score": "9", "CreationDate": "2012-12-21T15:36:08.093", "LastActivityDate": "2012-12-21T15:48:59.167"}, "13992932": {"ParentId": "13992897", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>It will generally be the same as an int, which can be of different sizes. <a href=\"https://stackoverflow.com/a/366026/193892\">See this answer.</a></p>\n", "OwnerUserId": "193892", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:15:42.480", "Id": "13992932", "Score": "0", "CreationDate": "2012-12-21T15:36:20.260", "LastActivityDate": "2012-12-21T15:36:20.260"}, "13992897": {"CommentCount": "0", "AcceptedAnswerId": "13992925", "PostTypeId": "1", "ClosedDate": "2012-12-21T15:41:30.697", "LastEditorUserId": "-1", "CreationDate": "2012-12-21T15:34:12.817", "LastActivityDate": "2012-12-21T15:48:59.167", "LastEditDate": "2017-05-23T11:59:02.380", "ViewCount": "794", "FavoriteCount": "1", "Title": "Is enum type cross-platform in C++?", "Id": "13992897", "Score": "2", "Body": "<blockquote>\n<p id=\"so_13992897_13992897_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/8115550/what-is-the-size-of-an-enum-type-data-in-c\">what is the size of an enum type data in C++?</a> </br></p>\n</blockquote>\n<p>How is enum data type stored internally (I'd imagine as 8/16/32-bit int?) and can it be safely serialized or should I use something like quint8 to store the value? In other words is <code>sizeof(MyEnum)</code> guaranteed to be the same size on all platforms?</p>\n", "Tags": "<c++><qt><serialization><enums><cross-platform>", "OwnerUserId": "842424", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_13992897_13992925_2": {"section_id": 5466, "quality": 0.9622641509433962, "length": 51}}, "n3337": {"so_13992897_13992925_2": {"section_id": 5252, "quality": 0.9622641509433962, "length": 51}}, "n4659": {"so_13992897_13992925_2": {"section_id": 6900, "quality": 0.9622641509433962, "length": 51}}}});