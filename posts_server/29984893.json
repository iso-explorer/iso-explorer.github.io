post_cb({"29984893": {"CreationDate": "2015-05-01T10:02:06.817", "ViewCount": "74", "Id": "29984893", "Score": "4", "Title": "Using pointers as template non-type arguments", "LastEditorUserId": "1791531", "CommentCount": "6", "Body": "<p>I would like to use an array pointer (with array arithmetic) as a non-type argument. I understand that the argument should be known at compile-time, but isn't it the case for a fixed size global array?</p>\n<p>This example can print the first 2 lines, but not the third one. Is there any workaround for this?</p>\n<p><strong>EDIT:</strong> I am looking for an answer for not only <code>aa+1</code>, but all <code>aa+i</code>s where <code>i</code> is less than the size of <code>aa</code></p>\n<pre><code>#include &lt;iostream&gt;\n\nvoid print (int n) {\n    printf(\"the value is: %d\\n\", n);\n}\n\ntemplate &lt;int *n&gt;\nvoid myWrapper() {\n    print(*n);\n}\n\nvoid myCall(void (*CALLBACK)(void)) {\n    CALLBACK();\n}\n\nint a = 1; int aa[4] = {2,3,4,5}; \n\nint main()\n{\n    myCall(myWrapper&lt;&amp;a&gt;); // prints 1\n    myCall(myWrapper&lt;aa&gt;); // prints 2\n    /* the following line gives error: no matches converting function 'myWrapper' to type 'void (*)()' \n       note: candidate is: template&lt;int* n&gt; void myWrapper() \n    */\n    myCall(myWrapper&lt;aa+1&gt;); \n}\n</code></pre>\n", "Tags": "<c++><arrays><templates><pointers><callback>", "LastEditDate": "2015-05-01T13:06:04.123", "LastActivityDate": "2015-05-01T13:06:04.123", "PostTypeId": "1", "AnswerCount": "1", "OwnerUserId": "1791531"}, "29985337": {"CommentCount": "1", "Body": "<p>This is excluded by a note to <strong>[temp.arg.nontype]</strong>:</p>\n<blockquote>\n<p id=\"so_29984893_29985337_0\">3 - [ <em>Note:</em> Addresses of array elements and names or addresses of non-static class members are not acceptable\n  <em>template-arguments</em>. [...]</p>\n</blockquote>\n<p>A workaround could be to supply the array index as another template parameter:</p>\n<pre><code>template &lt;int *n, unsigned N = 0&gt;\nvoid myWrapper() {\n    print(n[N]);\n}\n\n// ...\nmyCall(myWrapper&lt;aa, 1&gt;); \n</code></pre>\n", "CreationDate": "2015-05-01T10:32:54.303", "ParentId": "29984893", "Id": "29985337", "LastActivityDate": "2015-05-01T10:32:54.303", "PostTypeId": "2", "Score": "6", "OwnerUserId": "567292"}, "bq_ids": {"n4140": {"so_29984893_29985337_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 89}}, "n3337": {"so_29984893_29985337_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 84}}}});