post_cb({"32659257": {"Id": "32659257", "PostTypeId": "2", "Body": "<p>Yes, it is platform independent. It can be (and often is) implemented as wrapper for pthreads, so basically it can be pthreads with different API.</p>\n", "LastActivityDate": "2015-09-18T19:01:01.740", "CommentCount": "0", "CreationDate": "2015-09-18T19:01:01.740", "ParentId": "32659072", "Score": "0", "OwnerUserId": "2622016"}, "bq_ids": {"n4140": {"so_32659072_32659233_1": {"length": 35, "quality": 0.9459459459459459, "section_id": 2659}}, "n3337": {"so_32659072_32659233_1": {"length": 35, "quality": 0.9459459459459459, "section_id": 2623}}, "n4659": {"so_32659072_32659233_1": {"length": 35, "quality": 0.9459459459459459, "section_id": 3399}}}, "32659072": {"ViewCount": "1426", "Body": "<p>I searched for lots of questions and answers, but I really couldn't figure out this issue. Yesterday I have tried C++11 thread on Windows in a Visual C++ project and it works fine.</p>\n<p>Does that mean we can use C++11 threads on every platform that has a compiler with  C++11 support? Are there any reasons not to use this thread instead of pthread or Windows thread (depending on the platform)?</p>\n", "AcceptedAnswerId": "32659233", "Title": "Is c++11 thread platform independent?", "CreationDate": "2015-09-18T18:49:32.690", "Id": "32659072", "CommentCount": "7", "LastEditDate": "2015-09-18T18:54:53.677", "PostTypeId": "1", "LastEditorUserId": "5208889", "LastActivityDate": "2015-09-18T19:04:57.987", "Score": "1", "OwnerUserId": "5208889", "Tags": "<c++><multithreading><c++11>", "AnswerCount": "4"}, "32659211": {"Id": "32659211", "PostTypeId": "2", "Body": "<p>It really depends how well the compiler supports it. I would imagine GCC / VS /Intel have pretty good support by now but then if you are targeting some exotic platform that might not necessarily be the case.</p>\n<p>That's been the case with the STL for a while now - it's mostly portable, but it really depends on the implementation.\nJust because it's in the standard does not mean it will magically work, even though the chance of it working is much higher than if it was not in the standard.</p>\n<p>There will still be other implementations - pthread, boost, whatever. Which one you use depends on your personal preferences, your requirements, etc, etc.</p>\n", "LastActivityDate": "2015-09-18T18:58:33.970", "CommentCount": "1", "CreationDate": "2015-09-18T18:58:33.970", "ParentId": "32659072", "Score": "1", "OwnerUserId": "2036161"}, "32659233": {"Id": "32659233", "PostTypeId": "2", "Body": "<p>The C++ 11 thread library still uses threads from the OS and relies on them but it is abstracted in a good way so you will experience almost no differences. The behavior is different only in the detail and you will almost not notice them (only on edge cases and/or on failure). There might be still some platforms out there which don't support everything from <code>std::thread</code> (even in 2015, e.g. on some specific / exotic mobile platforms).</p>\n<p>From the C++ Standard:</p>\n<blockquote>\n<p id=\"so_32659072_32659233_0\"><strong>30 Thread support library</strong></p>\n<p id=\"so_32659072_32659233_1\">Some functions described in this Clause are specified to throw\n  exceptions of type system_error (19.5.6). <strong>Such exceptions shall be\n  thrown if any of the function\u2019s error conditions is detected or a call\n  to an operating system or other underlying API results in an error\n  that prevents the library function from meeting its specifications.</strong>\n  Failure to allocate storage shall be reported as described in\n  17.6.5.12.</p>\n</blockquote>\n", "LastEditorUserId": "1385931", "LastActivityDate": "2015-09-18T19:04:57.987", "Score": "4", "CreationDate": "2015-09-18T18:59:46.840", "ParentId": "32659072", "CommentCount": "0", "OwnerUserId": "1385931", "LastEditDate": "2015-09-18T19:04:57.987"}, "32659122": {"Id": "32659122", "PostTypeId": "2", "Body": "<p>C++11's thread mechanisms are intended to be cross-platform like any other feature of standard C++.  From my understanding, all major compilers intend to support the C++ standard to the best of their ability which means supporting the threading library.</p>\n", "LastActivityDate": "2015-09-18T18:52:42.907", "CommentCount": "0", "CreationDate": "2015-09-18T18:52:42.907", "ParentId": "32659072", "Score": "2", "OwnerUserId": "1283466"}});