post_cb({"31333729": {"ViewCount": "198", "Body": "<p>In the code below is it required that <code>f1</code> be called before <code>f2</code> (or vice-versa) or is it unspecified?</p>\n<pre><code>int f1();\nint f2();\n\nstd::initializer_list&lt;int&gt; list { f1(), f2() };\n</code></pre>\n", "AcceptedAnswerId": "31333886", "Title": "Order of evaluation in initializer_list c++11", "CreationDate": "2015-07-10T06:17:32.830", "Id": "31333729", "CommentCount": "2", "LastEditDate": "2015-07-10T06:25:22.197", "PostTypeId": "1", "LastEditorUserId": "221955", "LastActivityDate": "2015-07-10T06:26:20.157", "Score": "7", "OwnerUserId": "4622957", "Tags": "<c++><c++11>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_31333729_31333886_0": {"length": 33, "quality": 0.9428571428571428, "section_id": 3326}}, "n3337": {"so_31333729_31333886_0": {"length": 33, "quality": 0.9428571428571428, "section_id": 3196}}, "n4659": {"so_31333729_31333886_0": {"length": 33, "quality": 0.9428571428571428, "section_id": 4092}}}, "31333886": {"Id": "31333886", "PostTypeId": "2", "Body": "<p>This is one interesting corner of the C++ standard where execution order is well defined. Section 8.5.4 [dcl.init.list], paragraph 4:</p>\n<blockquote>\n<p id=\"so_31333729_31333886_0\">Within the initializer-list of a braced-init-list, the initializer-clauses, including any that result from pack expansions (14.5.3), are evaluated in the order in which they appear. That is, every value computation and side effect associated with a given initializer-clause is sequenced before every value computation and side effect associated with any initializer-clause that follows it in the comma-separated list of the initializer-list.</p>\n</blockquote>\n<p>So in the initializer list, the function calls are evaluated left-to-right.</p>\n", "LastActivityDate": "2015-07-10T06:26:19.907", "CommentCount": "3", "CreationDate": "2015-07-10T06:26:19.907", "ParentId": "31333729", "Score": "8", "OwnerUserId": "1566221"}});