post_cb({"26526740": {"ParentId": "26526426", "CommentCount": "0", "Body": "<p>Formally, anything which the standard doesn't define <em>is</em>\nundefined behavior.  How is it defined, if the standard doesn't\ndefine it?</p>\n<p>Practically, there are a couple of things which are taken as\ngiven; if the standard defines a behavior, for example, an\nimplementation cannot add additional observable behavior.  (I.e.\nin a statement like <code>a = 2 * a;</code>, an implementation isn't\nallowed to modify anything but <code>a</code>, even though I don't think\nyou'll find an explicit passage to this effect in the standard.)</p>\n<p>But that's about it.  If the standard doesn't define it, it's\nundefined behavior according to the standard.  (An\nimplementation may provide further definitions.  In fact, all\ndo.) </p>\n", "OwnerUserId": "649665", "PostTypeId": "2", "Id": "26526740", "Score": "1", "CreationDate": "2014-10-23T11:08:41.823", "LastActivityDate": "2014-10-23T11:08:41.823"}, "26526666": {"ParentId": "26526426", "CommentCount": "3", "Body": "<blockquote>\n<p id=\"so_26526426_26526666_0\">However, how can the standard say something is undefined behavior without explicitly saying so?</p>\n</blockquote>\n<p>Because that's what <strong>undefined</strong> means. What happens has not been defined. The standard defines what <strong>is</strong> expected of a valid program, it doesn't attempt to list every conceivable invalid program and say \"this is undefined, also this is undefined, also this is undefined\".</p>\n<p>The standard doesn't specify what happens if you set fire to your computer while the program is running. That doesn't mean it's well-defined. It's clearly undefined.</p>\n<blockquote>\n<p id=\"so_26526426_26526666_1\">Literally anything can happen in a program and it is assumed that it is not undefined behavior unless said so by the standard.</p>\n</blockquote>\n<p>I'm not sure what you're trying to say here, but it sounds 180\u00b0 backwards.</p>\n<blockquote>\n<p id=\"so_26526426_26526666_2\">Does this mean a non-standard program is undefined behavior by default?</p>\n</blockquote>\n<p>What is a \"non-standard program\"?</p>\n", "OwnerUserId": "981959", "PostTypeId": "2", "Id": "26526666", "Score": "6", "CreationDate": "2014-10-23T11:02:09.810", "LastActivityDate": "2014-10-23T11:02:09.810"}, "26526426": {"CommentCount": "4", "ViewCount": "154", "PostTypeId": "1", "LastEditorUserId": "4173463", "CreationDate": "2014-10-23T10:46:48.580", "LastActivityDate": "2014-10-23T11:08:43.267", "Title": "Is something undefined behavior by omission?", "AcceptedAnswerId": "26526666", "LastEditDate": "2014-10-23T11:00:48.267", "Id": "26526426", "Score": "5", "Body": "<p>The standard says:</p>\n<pre><strong>1.3.24</strong>                                                          <strong>[defns.undefined]</strong>\n<strong>undefined behavior</strong>\nbehavior for which this International Standard imposes no requirements\n[ <em>Note</em>: Undefined behavior may be expected when this International Standard \nomits any explicit definition of behavior or when a program uses an erroneous \nconstruct or erroneous data. Permissible undefined behavior ranges from ignoring \nthe situation completely with unpredictable results, to behaving during \ntranslation or program execution in a documented manner characteristic of the \nenvironment (with or without the issuance of a diagnostic message), to \nterminating a translation or execution (with the issuance of a diagnostic \nmessage). Many erroneous program constructs do not engender undefined behavior; \nthey are required to be diagnosed.\n\u2014 <em>end note</em> ]</pre>\n<p>Clearly the standard can not cover every possible facet of behavior. So it seems that if something is not covered by the standard, it \"may\" be undefined behavior. What exactly does that mean?</p>\n<p>It's implied that if the standard does not cover something, it can't impose requirements on it. However, how can the standard say something is undefined behavior without explicitly saying so? Literally anything can happen in a program and it is assumed that it is not undefined behavior unless said so by the standard. Does this mean a non-standard program is undefined behavior by default?</p>\n<hr/>\n<p>An answerer says notes are non-normative. This is answered in <a href=\"https://stackoverflow.com/questions/21364398/are-notes-and-examples-in-the-core-language-specification-of-the-c-standard-no\">Are notes and examples in the core language specification of the C++ Standard non-normative?</a> which says:</p>\n<blockquote>\n<p id=\"so_26526426_26526426_0\">Notes and examples integrated in the text of a document shall only be\n  used for giving additional information intended to assist the\n  understanding or use of the document. They shall not contain\n  requirements (\"shall\"; see 3.3.1 and Table H.1) or any information\n  considered indispensable for the use of the document, e.g.\n  instructions (imperative; see Table H.1), recommendations (\"should\";\n  see 3.3.2 and Table H.2) or permission (\"may\"; see Table H.3). Notes\n  may be written as a statement of fact.</p>\n</blockquote>\n<p>It seems to me then that something that is omitted is not strictly undefined behavior. For example, is something strictly undefined behavior if it's mentioned in a note?</p>\n", "Tags": "<c++><language-lawyer>", "OwnerUserId": "4173463", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_26526426_26526532_0": {"section_id": 5768, "quality": 1.0, "length": 9}}, "n3337": {"so_26526426_26526532_0": {"section_id": 5541, "quality": 1.0, "length": 9}}, "n4659": {"so_26526426_26526532_0": {"section_id": 7225, "quality": 1.0, "length": 9}}}, "26526532": {"ParentId": "26526426", "LastEditDate": "2014-10-23T11:06:06.790", "CommentCount": "1", "CreationDate": "2014-10-23T10:53:33.970", "OwnerUserId": "3204551", "LastEditorUserId": "3204551", "PostTypeId": "2", "Id": "26526532", "Score": "2", "Body": "<p>The last sentence of the note you quoted explains the <code>may</code> in its first sentence:</p>\n<blockquote>\n<p id=\"so_26526426_26526532_0\">Many erroneous program constructs do not engender undefined behavior; they are required to be diagnosed.</p>\n</blockquote>\n<p>Thus, may is quite correct.</p>\n<p>Anything not defined is undefined, though there are many ways it can be defined (even if it is only slightly constrained).</p>\n<p>Also, as notes are not normative, they cannot define behavior.</p>\n", "LastActivityDate": "2014-10-23T11:06:06.790"}});