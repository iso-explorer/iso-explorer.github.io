post_cb({"15050632": {"CommentCount": "0", "ViewCount": "103", "CreationDate": "2013-02-24T10:04:22.127", "LastActivityDate": "2013-02-24T11:38:20.407", "Title": "When ptr_vector iterators are invalidated", "AcceptedAnswerId": "15051314", "PostTypeId": "1", "Id": "15050632", "Score": "1", "Body": "<p>Is it possible that inserting and/or erasing elements can invalidate iterators to existing elements.</p>\n<p>Thank you. </p>\n", "Tags": "<c++><boost><boost-ptr-container>", "OwnerUserId": "638231", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_15050632_15051314_2": {"section_id": 986, "quality": 0.9473684210526315, "length": 18}, "so_15050632_15051314_1": {"section_id": 988, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_15050632_15051314_2": {"section_id": 971, "quality": 0.9473684210526315, "length": 18}, "so_15050632_15051314_1": {"section_id": 973, "quality": 0.8571428571428571, "length": 6}}, "n4659": {"so_15050632_15051314_2": {"section_id": 1049, "quality": 0.9473684210526315, "length": 18}, "so_15050632_15051314_1": {"section_id": 1051, "quality": 0.8571428571428571, "length": 6}}}, "15051314": {"ParentId": "15050632", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Yes. The <a href=\"http://www.boost.org/doc/libs/1_53_0/libs/ptr_container/doc/ptr_vector.html\" rel=\"nofollow\">documentation</a> for <code>boost::ptr_vector&lt;T&gt;</code> states:</p>\n<blockquote>\n<p id=\"so_15050632_15051314_0\">A <code>ptr_vector&lt;T&gt;</code> is a pointer container that uses an underlying <code>std::vector&lt;void*&gt;</code> to store the pointers.</p>\n</blockquote>\n<p>And inserting elements into or erasing elements from a <code>std::vector</code> can cause re-allocation and therefore existing iterators to be invalidated.</p>\n<p>Specifically, \u00a723.3.6.5/3 of C++11 states about <code>erase()</code>:</p>\n<blockquote>\n<p id=\"so_15050632_15051314_1\">(3) E\ufb00ects: Invalidates iterators and references at or after the point of the erase.</p>\n</blockquote>\n<p>and about <code>insert()</code> and <code>push_back()</code>:</p>\n<blockquote>\n<p id=\"so_15050632_15051314_2\">(1) Remarks: Causes reallocation if the new size is greater than the old capacity. If no reallocation happens, all the iterators and references before the insertion point remain valid.</p>\n</blockquote>\n<p>Therefore, to prevent iterator invalidation in the case of element insertion, you may use the <code>reserve()</code> function to increase the vector's capacity before obtaining any iterators from it. Those iterators will then remain valid until the <code>size()</code> of the vector exceeds the number of elements space was reserved for.</p>\n", "OwnerUserId": "777186", "LastEditorUserId": "777186", "LastEditDate": "2013-02-24T11:38:20.407", "Id": "15051314", "Score": "4", "CreationDate": "2013-02-24T11:33:10.723", "LastActivityDate": "2013-02-24T11:38:20.407"}});