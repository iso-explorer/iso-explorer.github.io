post_cb({"1421750": {"Id": "1421750", "PostTypeId": "2", "Body": "<p>Depends. I prefer using:<br>\n_age for the fields<br>\ngetAge and setAge for accessor methods<br>\nIt's simply a matter of style... but if you precede your accessor methods with get/set, then your code will be clearer (I'm assuming you're working in C++)</br></br></br></p>\n", "LastActivityDate": "2009-09-14T14:02:34.843", "CommentCount": "0", "CreationDate": "2009-09-14T14:02:34.843", "ParentId": "1421694", "Score": "0", "OwnerUserId": "152873"}, "1421810": {"Id": "1421810", "PostTypeId": "2", "Body": "<p>You shouldn't use underscore prefix. It is reserved to the implementation according to C++ standard 17.4.3.1.2/1:</p>\n<blockquote>\n<p id=\"so_1421694_1421810_0\">Certain sets of names and function signatures are <strong>always reserved to the implementation</strong>:</p>\n<ul>\n<li>Each name that contains a double underscore (_  _) or begins with an underscore followed by an upper-case letter (2.11) is reserved to the implementation for any use.</li>\n<li><strong>Each name that begins with an underscore is reserved</strong> to the implementation for use as a name in the global namespace.</li>\n</ul>\n</blockquote>\n<p>You could take a look on <a href=\"http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml#Variable_Names\" rel=\"noreferrer\">Google C++ coding style</a>.</p>\n", "LastEditorUserId": "123111", "LastActivityDate": "2009-09-14T14:19:25.430", "Score": "8", "CreationDate": "2009-09-14T14:12:33.273", "ParentId": "1421694", "CommentCount": "4", "OwnerUserId": "123111", "LastEditDate": "2009-09-14T14:19:25.430"}, "1421743": {"Id": "1421743", "PostTypeId": "2", "Body": "<p>Personally I would recommend to start member variables with m_ and the accessor method with get and set prefixes, e.g.: m_age and int getAge() {}.</p>\n<p>For a good rule set of naming conventions and best practices read these two books:</p>\n<p><a href=\"http://rads.stackoverflow.com/amzn/click/0735619670\" rel=\"nofollow noreferrer\">http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670/ref=sr_1_1/187-8545911-6271721?ie=UTF8&amp;s=books&amp;qid=1252936825&amp;sr=8-1</a> (general programming style)</p>\n<p><a href=\"http://rads.stackoverflow.com/amzn/click/0321113586\" rel=\"nofollow noreferrer\">http://www.amazon.com/Coding-Standards-Rules-Guidelines-Practices/dp/0321113586/ref=sr_1_1/177-5450861-2480140?ie=UTF8&amp;s=books&amp;qid=1252936836&amp;sr=8-1</a> (C++ specific)</p>\n", "LastActivityDate": "2009-09-14T14:01:55.017", "CommentCount": "0", "CreationDate": "2009-09-14T14:01:55.017", "ParentId": "1421694", "Score": "1", "OwnerUserId": "60988"}, "bq_ids": {"n4140": {"so_1421694_1421810_0": {"length": 8, "quality": 1.0, "section_id": 6307}}, "n3337": {"so_1421694_1421810_0": {"length": 8, "quality": 1.0, "section_id": 6064}}, "n4659": {"so_1421694_1421810_0": {"length": 5, "quality": 0.625, "section_id": 7844}}}, "1421733": {"Id": "1421733", "PostTypeId": "2", "Body": "<p>Take a look at <a href=\"http://www.possibility.com/Cpp/CppCodingStandard.html\" rel=\"nofollow noreferrer\">C++ Coding Standard</a></p>\n", "LastActivityDate": "2009-09-14T14:00:13.237", "CommentCount": "0", "CreationDate": "2009-09-14T14:00:13.237", "ParentId": "1421694", "Score": "1", "OwnerUserId": "142822"}, "1421747": {"Id": "1421747", "PostTypeId": "2", "Body": "<p>This is really different from person to person. Personally I go for \"int _age\" with \"getAge()\" and \"setAge(...)\". It is quite common to use names with verbs for methods to get a feeling for what it does. Just calling a method \"age\" may be a bit diffuse. But again, it's all about taste.</p>\n", "LastActivityDate": "2009-09-14T14:02:27.087", "CommentCount": "0", "CreationDate": "2009-09-14T14:02:27.087", "ParentId": "1421694", "Score": "0", "OwnerUserId": "170801"}, "1421765": {"Id": "1421765", "PostTypeId": "2", "Body": "<p>I'd recommend against the leading underscore.  The ones you're using are legal, but since some names beginning with underscores are reserved for the implementation I'd rather avoid them entirely.</p>\n<p>Where I am, we use <code>m_</code>, such as <code>m_age</code>, to represent members.  It works pretty well.</p>\n<p>Also, are you under the impression that you should have accessors for all class members?  Public functions should expose the class behavior, not the class members.  </p>\n", "LastActivityDate": "2009-09-14T14:04:16.153", "CommentCount": "0", "CreationDate": "2009-09-14T14:04:16.153", "ParentId": "1421694", "Score": "3", "OwnerUserId": "14148"}, "1421694": {"ViewCount": "8472", "Body": "<p>What naming convention should I follow for class members?  Right now, I\u2019m prefixing all fields with an underscore, and using the regular name for the accessor method, e.g.: <code>int _age</code> and <code>int age() { return _age; }</code></p>\n<p>Any preferred approaches?</p>\n", "AcceptedAnswerId": "1421810", "Title": "What is a good naming convention for fields and accessors in C++?", "CreationDate": "2009-09-14T13:55:29.217", "Id": "1421694", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2015-08-01T22:44:36.827", "LastEditorUserId": "1768232", "LastActivityDate": "2015-08-01T22:44:36.827", "ClosedDate": "2015-07-16T18:48:19.613", "Score": "5", "OwnerUserId": "67063", "Tags": "<c++><class><naming-conventions>", "AnswerCount": "7"}, "1421861": {"Id": "1421861", "PostTypeId": "2", "Body": "<p>Two things:</p>\n<p>1) Avoid using the leading underscore.  The general convention is that compiler vendors use both an underscore and double underscore as a means to introduce keywords.  For example, ___declspec in Microsoft Visual C++.  That is why you see the trailing underscore (e.g., int foo_;) in some C++ literature.</p>\n<p>2) There is no answer to your question.  Sorry to be unhelpful.  The C++ community is not like other communities in this respect.  Sun has established a style standard for Java.  Microsoft has documented a style standard in the MSDN for C#.  Other communities tend to follow the style of the programming languages author.  \"How does van Rossum write Python?\" or \"How does Matz write Ruby?\"  You don't see this in C++.  Although there is a definitive style to Stroustrup's books, nobody follows it.  Even the most notable C++ figures all have their own style.</p>\n<p>The only advice I can offer is to be consistent.  It doesn't matter what style you choose.  </p>\n<p>(Note: this is coming from a person with OCD.  I can understand the pain of not having a definitive answer on this topic.  However, the older I get, the more I learn to let go of the matter.)</p>\n", "LastActivityDate": "2009-09-14T14:19:46.660", "CommentCount": "0", "CreationDate": "2009-09-14T14:19:46.660", "ParentId": "1421694", "Score": "11", "OwnerUserId": "4652"}});