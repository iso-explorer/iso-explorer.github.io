post_cb({"bq_ids": {"n4140": {"so_25633520_25633776_1": {"length": 44, "quality": 0.9565217391304348, "section_id": 7107}}, "n3337": {"so_25633520_25633776_1": {"length": 44, "quality": 0.9565217391304348, "section_id": 6851}}, "n4659": {"so_25633520_25633776_1": {"length": 44, "quality": 0.9565217391304348, "section_id": 8608}}}, "25633549": {"Id": "25633549", "PostTypeId": "2", "Body": "<p>Probably it means the function you are looking at is derived from <code>Thread</code> and <code>sleep</code> is merely delegating responsibility for \"sleeping\" to the parent class's static <code>yield</code> function. BUT, we really need to see more before we can say for sure.</p>\n", "LastActivityDate": "2014-09-02T22:45:44.367", "CommentCount": "0", "CreationDate": "2014-09-02T22:45:44.367", "ParentId": "25633520", "Score": "0", "OwnerUserId": "624998"}, "25633776": {"Id": "25633776", "PostTypeId": "2", "Body": "<p>A call to</p>\n<pre><code>Thread::yield();\n</code></pre>\n<p>means a call of a method named <em>yield</em> which is enclosed in <code>Thread</code> class or <em>namespace</em> ( it can be global method just enclosed in a namespace). The name <em>yield</em> suggests <a href=\"http://en.cppreference.com/w/cpp/thread/yield\" rel=\"nofollow noreferrer\">it is a call made to give up the CPU cycles and enable other threads running</a>.\nSearch in your project for <strong>Thread</strong> and you will find what it is exactly. Method named <em>yield</em> should be present within <code>Thread</code> class or namespace.</p>\n<blockquote>\n<p id=\"so_25633520_25633776_0\">What is :: ?</p>\n</blockquote>\n<p>:: is a <em>scope resolution operator</em></p>\n<p>C++ Standard n3337 <strong>\u00a7</strong> 3.4.3 Qualified name lookup</p>\n<blockquote>\n<p id=\"so_25633520_25633776_1\">The name of a class or namespace member or enumerator can be referred\n  to after the :: scope resolution operator (5.1) applied to a\n  nested-name-specifier that denotes its class, namespace, or\n  enumeration. If a :: scope resolution operator in a\n  nested-name-specifier is not preceded by a decltype-specifier, lookup\n  of the name preceding that :: considers only namespaces, types, and\n  templates whose specializations are types. If the name found does not\n  designate a namespace or a class, enumeration, or dependent type, the\n  program is ill-formed.[ Example:</p>\n</blockquote>\n<pre><code>class A {\npublic:\n    static int n;\n};\n\nint main() {\n    int A;\n    A::n = 42; // OK\n    A b; // ill-formed: A does not name a type\n}\n</code></pre>\n<blockquote>\n<p id=\"so_25633520_25633776_2\">\u2014end example ]</p>\n</blockquote>\n<p><a href=\"https://stackoverflow.com/a/9338301/1141471\">https://stackoverflow.com/a/9338301/1141471</a></p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2014-09-02T23:52:38.620", "Score": "2", "CreationDate": "2014-09-02T23:11:22.233", "ParentId": "25633520", "CommentCount": "0", "OwnerUserId": "1141471", "LastEditDate": "2017-05-23T12:05:47.803"}, "25633604": {"Id": "25633604", "PostTypeId": "2", "Body": "<p>So basically the <code>::</code> means that you are calling a static class method on the Thread class (notice you did not have to create an instance of the class Thread to call that method). </p>\n<p>The yield operation causes the thread that called the sleep method to yield execution to other waiting threads. Basically that thread is paused and other waiting threads are allowed to run. The OS reschedules the sleeping thread to run in the future, based on the threads priority and the status of other threads.</p>\n", "LastEditorUserId": "1864267", "LastActivityDate": "2014-09-02T22:55:49.380", "Score": "0", "CreationDate": "2014-09-02T22:50:25.267", "ParentId": "25633520", "CommentCount": "0", "OwnerUserId": "1864267", "LastEditDate": "2014-09-02T22:55:49.380"}, "25633520": {"ViewCount": "347", "Body": "<p>I'm trying to understand a class, which is part of an assignment we have to do, but I don't understand some of the syntax:</p>\n<pre><code>void sleep() \n    { \n        Thread::yield(); \n    } // implicit unlock()\n</code></pre>\n<p>What does Thread::yield(); mean? Which thread is that? There is no declaration in the code for this Thread object. What is :: ? </p>\n", "Title": "What does Thread::yield() mean in this context?", "CreationDate": "2014-09-02T22:42:29.770", "LastActivityDate": "2014-09-02T23:52:38.620", "CommentCount": "8", "PostTypeId": "1", "Id": "25633520", "Score": "-2", "OwnerUserId": "1377288", "Tags": "<c++><syntax>", "AnswerCount": "3"}});