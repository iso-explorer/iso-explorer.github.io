post_cb({"17611426": {"Id": "17611426", "PostTypeId": "2", "Body": "<p>To quote the standard: Section 7.3.1.2 point 2:</p>\n<blockquote>\n<p id=\"so_17611000_17611426_0\">Members of a named namespace can also be defined outside that\n  namespace by explicit qualification (3.4.3.2) of the name being\n  defined, provided that the entity being defined was already declared\n  in the namespace and the definition appears after the point of\n  declaration in a namespace that encloses the declaration\u2019s namespace.</p>\n<pre><code>namespace Q {\n  namespace V\n    void f();\n  }\n  void V::f() { /\u2217 ... \u2217/ }    // ok. \n  void V::g() { /\u2217 ... \u2217/ }    // Error: g() is not yet a member of V\n  namespace V\n    void g();\n  }\n}\n\nnamespace R {\n   void Q::V::g() { /\u2217 ... \u2217/ }   // // error: R doesn\u2019t enclose Q\n}\n</code></pre>\n</blockquote>\n<p>So, you could do what you have in your original post, if you declare the class name there:</p>\n<pre><code>namespace Bushman{\n    namespace CAD_Calligraphy {\n        class Shp_ostream;\n        ...\n    }\n}\n</code></pre>\n", "LastEditorUserId": "366904", "LastActivityDate": "2013-07-12T21:11:15.487", "Score": "2", "CreationDate": "2013-07-12T09:14:02.077", "ParentId": "17611000", "CommentCount": "0", "OwnerUserId": "1919155", "LastEditDate": "2013-07-12T21:11:15.487"}, "17611517": {"Id": "17611517", "PostTypeId": "2", "Body": "<p>That's how C++ works.</p>\n<p>It's consistent with other nested declarations: you can't add members to a class from outside the class:</p>\n<pre><code>class A\n{\n};\n\nvoid A::f() { }  // Error!\n</code></pre>\n<p>And you can't add enumerators to an enum from outside:</p>\n<pre><code>enum E { E1 = 1, E2 = 2 };\n\nE::E3 = 3;  // Error!\n</code></pre>\n<p>You need to \"open\" the scope and declare the entity inside the scope.  Once it's declared you can define it outside that scope, using a nested-name:</p>\n<pre><code>class A\n{\n  void f();  // declare\n};\n\nvoid A::f() { }  // define\n</code></pre>\n", "LastActivityDate": "2013-07-12T09:18:28.843", "CommentCount": "0", "CreationDate": "2013-07-12T09:18:28.843", "ParentId": "17611000", "Score": "1", "OwnerUserId": "981959"}, "17611242": {"Id": "17611242", "PostTypeId": "2", "Body": "<p>First of all, C++ is not designed to work like that. So it is not a surprise that this is happening.</p>\n<p>But, since you're using Visual Studio, you could take advantage of <a href=\"http://en.wikipedia.org/wiki/C%2B%2B/CX#Partial_classes\" rel=\"nofollow\">partial classes</a>. Unfortunately, it seems this characteristic is only related to C++/CX so maybe yo won't be able to use it.</p>\n<p>You will still need to declare a partial class in your namespace hierarchy, but I guess it could be empty.</p>\n<p>To be honest, I haven't used this feature and I don't know how far can it be bent in order to achieve what you want. But you could anyway give it a try.</p>\n<p>Remember that this is a Visual Studio extension, so your code won't be cross-platform.</p>\n<p>Hope this helps. Somehow.</p>\n", "LastEditorUserId": "266978", "LastActivityDate": "2013-07-12T19:41:15.937", "Score": "-1", "CreationDate": "2013-07-12T09:04:50.183", "ParentId": "17611000", "CommentCount": "5", "OwnerUserId": "266978", "LastEditDate": "2013-07-12T19:41:15.937"}, "17611286": {"Id": "17611286", "PostTypeId": "2", "Body": "<p>The restriction is in \u00a79/1: \"If a class-head-name contains\na nested-name-specifier, the class-specifier shall refer to\na class that was previously declared directly in the class or\nnamespace to which the nested-name-specifier refers[...]\".  In\nother words, the first appearance of the class name cannot be in\nsomething like <code>Bushman::CAD_Calligraphy::Shp_ostream</code>.  </p>\n<p>What you can do is add forward declarations in your initial\ndeclaration of the hierarchy:</p>\n<pre><code>// Namespaces hierarchy:\nnamespace Bushman{\n    namespace CAD_Calligraphy{\n        class Shp_ostream;\n        //...\n    }\n    //...\n}\n\n// Declarations of classes and functions\nclass Bushman::CAD_Calligraphy::Shp_ostream{\npublic:\n    explicit Shp_ostream(std::ostream&amp; ost);\n};\n</code></pre>\n<p>Depending on how your headers are organized, this might even be\nbetter from the human point of view: your header starts with\na sort of index of what is defined in it.</p>\n", "LastActivityDate": "2013-07-12T09:07:06.080", "CommentCount": "0", "CreationDate": "2013-07-12T09:07:06.080", "ParentId": "17611000", "Score": "10", "OwnerUserId": "649665"}, "bq_ids": {"n4140": {"so_17611000_17611426_0": {"length": 30, "quality": 0.967741935483871, "section_id": 5484}}, "n3337": {"so_17611000_17611426_0": {"length": 30, "quality": 0.967741935483871, "section_id": 5270}}, "n4659": {"so_17611000_17611426_0": {"length": 30, "quality": 0.967741935483871, "section_id": 6919}}}, "17611000": {"ViewCount": "202", "Body": "<p>I write some header file. I want separately declare the namespaces hierarchy (for clarity), and and then declare functions and classes. For me it looks as a table of contents in the document. It would be very convenient for me: to see the full hierarchy of namespaces in one place. I write this:</p>\n<pre><code>// Namespaces hierarchy:\nnamespace Bushman{\n    namespace CAD_Calligraphy{}\n    //...\n}\n\n// Declarations of classes and functions\nclass Bushman::CAD_Calligraphy::Shp_ostream{\npublic:\n    explicit Shp_ostream(std::ostream&amp; ost);\n};\n</code></pre>\n<p>But MS Visual Studio shouts on such way of creation of the header file. I should write so:</p>\n<pre><code>namespace Bushman{\n    namespace CAD_Calligraphy{\n        class Shp_istream{\n        public:\n            explicit Shp_istream(std::istream&amp; ist);\n        };\n    }\n}\n</code></pre>\n<p>Why the first variant doesn't work? Is this restriction of the C++, or IDE?</p>\n<p>P.S. My additional question is <a href=\"https://stackoverflow.com/questions/17613383/how-can-i-declare-the-nested-types-in-my-hierarchy-header-file\">here</a>.</p>\n<p>Thank you.</p>\n", "AcceptedAnswerId": "17611286", "Title": "Why I can't separately write namespace's hierarchy in the header file?", "CreationDate": "2013-07-12T08:50:26.383", "Id": "17611000", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2017-05-23T11:56:32.383", "LastEditorUserId": "-1", "LastActivityDate": "2013-07-12T21:11:15.487", "Score": "4", "OwnerUserId": "1306132", "Tags": "<c++><visual-studio>", "AnswerCount": "4"}});