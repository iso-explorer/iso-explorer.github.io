post_cb({"bq_ids": {"n4140": {"so_31222601_31222782_0": {"length": 18, "quality": 0.8181818181818182, "section_id": 7147}}, "n3337": {"so_31222601_31222782_0": {"length": 18, "quality": 0.8181818181818182, "section_id": 6891}}, "n4659": {"so_31222601_31222782_0": {"length": 18, "quality": 0.8181818181818182, "section_id": 8648}}}, "31222782": {"Id": "31222782", "PostTypeId": "2", "Body": "<p>Because references to the function <code>main</code> are forbidden (it helps if you quote the entire rule), linkage of <code>main</code> has absolutely no effect on user code:</p>\n<blockquote>\n<p id=\"so_31222601_31222782_0\"><strong>The function main shall not be used within a program</strong>. The linkage of <code>main</code> is implementation-defined. A program that defines <code>main</code> as deleted or that declares <code>main</code> to be <code>inline</code>, <code>static</code>, or <code>constexpr</code> is ill-formed. The name <code>main</code> is not otherwise reserved.</p>\n</blockquote>\n<p>Linkage controls the scope across which the name is usable, the name of the <code>main()</code> function isn't usable by your code anywhere at all, so trying to label it with a linkage doesn't make sense.</p>\n", "LastEditorUserId": "103167", "LastActivityDate": "2015-07-04T16:26:14.797", "Score": "6", "CreationDate": "2015-07-04T16:20:26.187", "ParentId": "31222601", "CommentCount": "0", "OwnerUserId": "103167", "LastEditDate": "2015-07-04T16:26:14.797"}, "31222601": {"ViewCount": "90", "Body": "<p>C++ standard section 3.6.1/3 says that</p>\n<blockquote>\n<p id=\"so_31222601_31222601_0\">The linkage of main is implementation-defined</p>\n</blockquote>\n<p>What does it mean? Why it is implementation defined? Is it same in C also?</p>\n", "AcceptedAnswerId": "31222812", "Title": "What does it mean that linkage of main() is implementation defined?", "CreationDate": "2015-07-04T16:01:28.417", "Id": "31222601", "CommentCount": "9", "FavoriteCount": "2", "PostTypeId": "1", "LastActivityDate": "2015-07-04T16:26:14.797", "Score": "2", "OwnerUserId": "3777958", "Tags": "<c++><function><linkage>", "AnswerCount": "2"}, "31222812": {"Id": "31222812", "PostTypeId": "2", "Body": "<p>The purpose of C++ is to provide a portable abstraction over programming. Many things are specified by the standard so as to be unambiguous regardless of whether you translate your C++ to assembly, JavaScript, cheese, frying pans or supermodels.</p>\n<p>The linkage of <code>main</code> is not one of those things, because it is a bit of an abstraction leak: it is (theoretically) the function that interacts with the pieces of the executing machine/cheese/frying pan and handles data crossing that boundary. Data in, data out.</p>\n<p><strong>Substantial details about the <code>main</code> function should not be standard-mandated because the entire purpose of <code>main</code> is to interface with things that the standard cannot control.</strong></p>\n<p>That being said, <a href=\"https://stackoverflow.com/a/6982101/560648\">there are still significant restrictions emplaced upon <code>main</code></a>, and in most implementations it's not even used as the entrypoint \u2014 some internal function in your compiler's C++ runtime will usually act as the the entrypoint, performing static initialisation and a few other things before invoking <code>main</code>, because, well, that's about the only sane way to do it.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2015-07-04T16:23:58.683", "Score": "2", "CreationDate": "2015-07-04T16:23:58.683", "ParentId": "31222601", "CommentCount": "0", "OwnerUserId": "560648", "LastEditDate": "2017-05-23T12:21:46.537"}});