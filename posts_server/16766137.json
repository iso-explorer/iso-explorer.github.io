post_cb({"16766850": {"ParentId": "16766137", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>The trailing return type is part of the member function <em>declaration</em>, which does not have access to data members or member functions declared after it, unlike the member function <em>definition</em>, which does. I am not aware of any change in this behaviour in C++14.</p>\n<p>See 3.4.1-7 of the C++11 standard, <em>Unqualified name look-up</em>:</p>\n<blockquote>\n<p id=\"so_16766137_16766850_0\">A name used in the definition of a class X <strong>outside of a member function body</strong> or nested class definition\n  shall be declared in one of the following ways:</p>\n<ul>\n<li>before its use in class X or be a member of a base class of X (10.2), or...</li>\n</ul>\n</blockquote>\n<p>(emphasis mine)</p>\n", "OwnerUserId": "661519", "LastEditorUserId": "1619294", "LastEditDate": "2013-05-28T00:42:36.007", "Id": "16766850", "Score": "7", "CreationDate": "2013-05-27T05:34:34.490", "LastActivityDate": "2013-05-28T00:42:36.007"}, "16766137": {"CommentCount": "4", "ViewCount": "640", "PostTypeId": "1", "LastEditorUserId": "1619294", "CreationDate": "2013-05-27T04:04:26.107", "LastActivityDate": "2013-05-28T00:42:36.007", "Title": "decltype in class method declaration: error when used before \"referenced\" member is declared", "AcceptedAnswerId": "16766850", "LastEditDate": "2013-05-27T04:27:59.267", "Id": "16766137", "Score": "9", "Body": "<p>Consider the <a href=\"http://coliru.stacked-crooked.com/view?id=cfd277617e00b2a44f732c31987c4229-50d9cfc8a1d350e7409e81e87c2653ba\">following code</a>:</p>\n<pre><code>struct test {    \n    auto func() -&gt; decltype(data) {}  // ERROR\n\n    int data;\n};\n\nint main() {\n    test t;\n    t.func();\n}\n</code></pre>\n<p>It gives the following error:</p>\n<pre><code>main.cpp:2:29: error: 'data' was not declared in this scope\n     auto func() -&gt; decltype(data) {}\n</code></pre>\n<p>However, if I place <code>data</code> above <code>func()</code>, it gives out no error (<a href=\"http://coliru.stacked-crooked.com/view?id=35ac9f2af265f0e38d8ee72678df4135-50d9cfc8a1d350e7409e81e87c2653ba\">live code</a>):</p>\n<pre><code>struct test {    \n    int data;\n\n    auto func() -&gt; decltype(data) {}\n};\n\n...\n</code></pre>\n<p>And so my question is, why is <code>decltype</code> not considering members declared after it (when <code>decltype</code> is used in a method declaration, not in the definition)? I also want to know if there are any change in this behavior in future iterations of the language standard.</p>\n<p><hr/>\n<sup>Please note that I'm asking this because I was expecting <code>decltype</code> to behave differently. My coding convention is to place class data members below the class functions. Surely this different behavior would affect how I organize my class members. I would be very grateful if you can provide any workaround that would preserve my coding convention.</sup></p>\n", "Tags": "<c++><c++11><decltype>", "OwnerUserId": "1619294", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_16766137_16766850_0": {"section_id": 7093, "quality": 1.0, "length": 14}}, "n3337": {"so_16766137_16766850_0": {"section_id": 6837, "quality": 1.0, "length": 14}}, "n4659": {"so_16766137_16766850_0": {"section_id": 8594, "quality": 1.0, "length": 14}}}});