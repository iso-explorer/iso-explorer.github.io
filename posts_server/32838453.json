post_cb({"32838599": {"ParentId": "32838453", "CommentCount": "0", "Body": "<p>To answer your question: no, the space cannot cause an issue. It is perfectly legal to have whitespace (spaces and tabs) between the <code>#</code> introducing a preprocessing directive and the directive's name. VS2005 is sufficiently modern to honour that.</p>\n<p>However, what is <em>very</em> strange is that you're apparently including a <em>source file</em> (<code>.cpp</code>) and not just a header file. While technically there's nothing wrong with that, it's quite likely that is not what you really want to do. You didn't specify what errors you're getting, but double definition errors would be a typical class of error caused by including a source file (and compiling it separately as well).</p>\n", "OwnerUserId": "1782465", "PostTypeId": "2", "Id": "32838599", "Score": "2", "CreationDate": "2015-09-29T07:52:36.650", "LastActivityDate": "2015-09-29T07:52:36.650"}, "32838453": {"CommentCount": "10", "ViewCount": "458", "PostTypeId": "1", "LastEditorUserId": "4370137", "CreationDate": "2015-09-29T07:45:07.893", "LastActivityDate": "2015-09-29T08:05:01.267", "Title": "Correct format of #include directive", "AcceptedAnswerId": "32838599", "LastEditDate": "2015-09-29T08:05:01.267", "Id": "32838453", "Score": "2", "Body": "<p>What's the correct/recommended way to include a file? I'm getting trouble with inclusion (VS2005 compiler...).</p>\n<p>I know the correct way is this: </p>\n<pre><code>#include \"source.cpp\"\n</code></pre>\n<p>or this:</p>\n<pre><code>#include &lt;source.cpp&gt;\n</code></pre>\n<p>Could <code># include \"source.cpp\"</code> cause problems (added space after #)? Some of my team mates use that way and we are getting an unsolved problem.</p>\n<p>The point I'm including a source file is that I'm developing under and IDE which doesn't allows to define functions in it's editor due to they'll become local functions.</p>\n", "Tags": "<c++><include><c-preprocessor>", "OwnerUserId": "4370137", "AnswerCount": "4"}, "32838621": {"ParentId": "32838453", "PostTypeId": "2", "CommentCount": "0", "Body": "<pre><code>#include \"source.cpp\"\n# include \"source.cpp\"\n</code></pre>\n<p>Those are correct (space does not lead to any issue even if pointless) even if not recommended, see this post: <a href=\"https://stackoverflow.com/questions/8836871/include-cpp-file?rq=1\">Include .cpp file?</a></p>\n<p>At some point I already included .cpp files in my code to do a kind of static import of some other code. But that's definitely not recommended because it leads to lots of problems. For instance, if the same cpp file gets included twice, <code>static</code> objects created by the file will be created twice too...so they are not <code>static</code> as they were supposed to be. Also, compiler may get lost because some functions get defined twice...</p>\n", "OwnerUserId": "3336423", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:24:14.900", "Id": "32838621", "Score": "2", "CreationDate": "2015-09-29T07:53:40.123", "LastActivityDate": "2015-09-29T07:53:40.123"}, "32838628": {"ParentId": "32838453", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>According to the <a href=\"https://gcc.gnu.org/onlinedocs/gcc-2.95.3/cpp_1.html#SEC3\" rel=\"nofollow\">C preprocessor documentation</a> in the GCC manual, you can use whitespace after <code>#</code> in the preprocessing directive (e.g. <code>#include</code>):</p>\n<blockquote>\n<p id=\"so_32838453_32838628_0\">Preprocessing directives are lines in your program that start with\n  <code>#</code>. The <code>#</code> is followed by an identifier that is the directive name.\n  For example, <code>#define</code> is the directive that defines a macro.\n  <strong>Whitespace is also allowed before and after the `#'.</strong></p>\n</blockquote>\n<p>Therefore that space is definitely not the issue in your case and all of the following are correct: <code># include &lt;file.h&gt;</code>, <code>#include &lt;file.h&gt;</code>, <code># include &lt;file.cpp&gt;</code>, <code>#include &lt;file.cpp&gt;</code>, though <strong>you should avoid using last two and always include header files</strong>.</p>\n<p>Having said that, I would advise you to do not use any whitespace after <code>#</code> - your code will be more readable then, as <code>#include</code> is what is used almost all the time and what many code formatters will format your code to anyways.</p>\n<p>The C++ standard also states the same on that matter, see: <a href=\"http://www.open-std.org/jtc1/sc22/open/n2356/cpp.html\" rel=\"nofollow\">16.3  Macro replacement [cpp.replace]</a>.</p>\n", "OwnerUserId": "963881", "LastEditorUserId": "963881", "LastEditDate": "2015-09-29T08:00:50.680", "Id": "32838628", "Score": "1", "CreationDate": "2015-09-29T07:54:18.533", "LastActivityDate": "2015-09-29T08:00:50.680"}, "32838625": {"ParentId": "32838453", "CommentCount": "0", "Body": "<p>The standard specifies the following rule for spaces in preprocessor directives (16/4):</p>\n<blockquote>\n<p id=\"so_32838453_32838625_0\">The only white-space characters that shall appear <strong>between preprocessing tokens</strong> within a preprocessing\n  directive (from just after the introducing\n  #\n  preprocessing token through just before the terminating new-line\n  character) are space and horizontal-tab (including spaces that have replaced comments or possibly other\n  white-space characters in translation phase 3).</p>\n</blockquote>\n<p>Both <code>#</code> and <code>\"filename\"</code>/<code>&lt;filename&gt;</code> are preprocessing tokens, so you can have as many whitespaces between them as you want.</p>\n", "OwnerUserId": "1490355", "PostTypeId": "2", "Id": "32838625", "Score": "1", "CreationDate": "2015-09-29T07:53:52.833", "LastActivityDate": "2015-09-29T07:53:52.833"}, "bq_ids": {"n4140": {"so_32838453_32838625_0": {"section_id": 494, "quality": 0.9705882352941176, "length": 33}}, "n3337": {"so_32838453_32838625_0": {"section_id": 485, "quality": 0.9705882352941176, "length": 33}}, "n4659": {"so_32838453_32838625_0": {"section_id": 509, "quality": 0.9705882352941176, "length": 33}}}});