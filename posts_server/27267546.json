post_cb({"bq_ids": {"n4140": {"so_27267546_27267758_0": {"length": 13, "quality": 0.9285714285714286, "section_id": 2466}, "so_27267546_27267758_1": {"length": 5, "quality": 1.0, "section_id": 2426}}, "n3337": {"so_27267546_27267758_0": {"length": 13, "quality": 0.9285714285714286, "section_id": 2451}, "so_27267546_27267758_1": {"length": 5, "quality": 1.0, "section_id": 2411}}, "n4659": {"so_27267546_27267758_0": {"length": 14, "quality": 1.0, "section_id": 2742}, "so_27267546_27267758_1": {"length": 5, "quality": 1.0, "section_id": 2701}}}, "27267546": {"ViewCount": "106", "Body": "<p>I'm trying to write a simple tail program in C++. I've tried the <a href=\"https://stackoverflow.com/a/18880874/433685\">example from this solution</a> and it works like a charm.</p>\n<p>Then, I tried to make the <code>ifstream</code> as global. Now the code does not work anymore and nothing is showed if I edit the file.</p>\n<p>Why this behaviour? I read the <a href=\"http://www.cplusplus.com/reference/fstream/ifstream/open/\" rel=\"nofollow noreferrer\">manual</a> of <code>ifstream::open</code> and I don't see any kind of error but the code does not work:</p>\n<blockquote>\n<p id=\"so_27267546_27267546_0\">Opens the file identified by argument filename, associating it with\n  the stream object, so that input/output operations are performed on\n  its content. Argument mode specifies the opening mode.</p>\n</blockquote>\n<p>Here is the <strong>non-working</strong> code:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;fstream&gt;\nusing namespace std;\n\nint find_last_linefeed(ifstream &amp;infile) {\n  infile.seekg(0,ios::end);\n  int filesize = infile.tellg();\n  for(int n=1;n&lt;filesize;n++) {\n    infile.seekg(filesize-n-1,ios::beg);\n    char c;\n    infile.get(c);\n    if(c == 0x0A) return infile.tellg();\n  }\n}\n\nifstream infile;\n\nint main() {\n  int last_position=-1;\n  for(;;) {\n    infile.open(\"/Users/alberto/tmp/test\");\n\n    int position = find_last_linefeed(infile);\n    if(position &gt; last_position) {\n      infile.seekg(position,ios::beg);\n      string in;\n      infile &gt;&gt; in;\n      cout &lt;&lt; in &lt;&lt; endl;\n    }\n    last_position=position;\n    sleep(1);\n  }\n}\n</code></pre>\n<p>Here is the working code:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;fstream&gt;\nusing namespace std;\n\nint find_last_linefeed(ifstream &amp;infile) {\n  infile.seekg(0,ios::end);\n  int filesize = infile.tellg();\n  for(int n=1;n&lt;filesize;n++) {\n    infile.seekg(filesize-n-1,ios::beg);\n    char c;\n    infile.get(c);\n    if(c == 0x0A) return infile.tellg();\n  }\n}\n\n\nint main() {\n  int last_position=-1;\n  for(;;) {\n\n    ifstream infile;\n\n    infile.open(\"/Users/alberto/tmp/test\");\n\n    int position = find_last_linefeed(infile);\n    if(position &gt; last_position) {\n      infile.seekg(position,ios::beg);\n      string in;\n      infile &gt;&gt; in;\n      cout &lt;&lt; in &lt;&lt; endl;\n    }\n    last_position=position;\n    sleep(1);\n  }\n}\n</code></pre>\n", "AcceptedAnswerId": "27267758", "Title": "Why does std::ifstream does not update if defined globally", "CreationDate": "2014-12-03T09:07:11.393", "Id": "27267546", "CommentCount": "7", "LastEditDate": "2017-05-23T12:05:38.320", "PostTypeId": "1", "LastEditorUserId": "-1", "LastActivityDate": "2014-12-03T09:43:43.523", "Score": "0", "OwnerUserId": "433685", "Tags": "<c++><ifstream>", "AnswerCount": "1"}, "27267758": {"Id": "27267758", "PostTypeId": "2", "Body": "<p>Since you <code>open</code> inside the loop, the stream will enter an error state on the second iteration, and keep failing after that.</p>\n<p>Move </p>\n<pre><code>infile.open(\"/Users/alberto/tmp/test\");\n</code></pre>\n<p>outside the loop, or define <code>infile</code> like this and don't use <code>open</code> at all:</p>\n<pre><code>ifstream infile(\"/Users/alberto/tmp/test\");\n</code></pre>\n<p>The best alternative is to not use a global variable at all, as there's no reason for it here.</p>\n<p>Also, <code>find_last_linefeed</code> fails to return anything if the file doesn't contain a linefeed, which is undefined. </p>\n<p>\u2014-</p>\n<p>Regarding <code>ifstream::open</code>, from the standard (27.9.1.9):</p>\n<blockquote>\n<p id=\"so_27267546_27267758_0\">Calls rdbuf()-&gt;open(s, mode | ios_base::in). If that function does not\n  return a null pointer calls clear(), otherwise calls setstate(failbit)</p>\n</blockquote>\n<p>and <code>basic_filebuf::open</code> (27.9.1.4):</p>\n<blockquote>\n<p id=\"so_27267546_27267758_1\">If is_open() != false, returns a null pointer</p>\n</blockquote>\n", "LastEditorUserId": "404970", "LastActivityDate": "2014-12-03T09:43:43.523", "Score": "2", "CreationDate": "2014-12-03T09:19:25.627", "ParentId": "27267546", "CommentCount": "12", "LastEditDate": "2014-12-03T09:43:43.523", "OwnerUserId": "404970"}});