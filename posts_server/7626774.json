post_cb({"7626774": {"CommentCount": "1", "ViewCount": "1611", "PostTypeId": "1", "LastEditorUserId": "2186836", "CreationDate": "2011-10-02T13:57:07.423", "LastActivityDate": "2014-03-14T08:26:53.140", "Title": "Multiple Definition errors in c++", "AcceptedAnswerId": "7627089", "LastEditDate": "2014-03-14T08:26:53.140", "Id": "7626774", "Score": "1", "Body": "<p>Here's some code that I wrote in DevCpp (windows), now I'm trying to get it to run in linux without much success.\nHere is the source code</p>\n<p><strong>screen.h</strong></p>\n<pre><code>#ifndef SCREEN_H\n#define SCREEN_H\n\n#include &lt;graphics.h&gt;\n\nclass Screen\n{\n      private:\n              int max_x,max_y,grid_size;\n              int delta_x,delta_y;\n              int origin_x,origin_y;\n      public:\n      // Default Constructor to Initialize the screen with the grid\n      Screen(int xcoord=641, int ycoord=641, int grid=8)\n      {\n           //variable initialization\n           max_x = xcoord;\n           max_y = ycoord;\n           grid_size = grid;\n\n           delta_x = max_x / grid_size;\n           delta_y = max_y / grid_size;\n\n           origin_x = grid_size / 2 * delta_x;\n           origin_y = grid_size / 2 * delta_y;\n\n           //plotting the initial grid\n           int gd,gm;\n           initgraph(&amp;gd,&amp;gm,NULL);\n            //draw the x component of the grid\n             for(int i=0; i&lt;max_x; i += delta_x)\n             {\n                     if( i != max_x / 2)\n                         setcolor(GREEN);\n                     else\n                         setcolor(RED);\n                    line(i,0,i,max_y);\n             }\n             //draw the y component of the grid\n             for(int i=0; i&lt;max_y; i += delta_y)\n             {\n                     if( i != max_y / 2)\n                         setcolor(GREEN);\n                     else\n                         setcolor(RED);\n                     line(0,i,max_x,i);\n             }\n             //mark the origin with a white dot to acertain its coordinates for future use\n             putpixel(origin_x,origin_y,WHITE);\n             std::cout&lt;&lt;origin_x&lt;&lt;\"\\t\"&lt;&lt;origin_y&lt;&lt;\"\\n\";\n        }\n\n\n\n      //Method prototypes\n      void plot_pixel(int xcoord,int ycoord,int col=WHITE)\n      {\n        int l,t,r,b;\n        l = origin_x + xcoord * delta_x;\n        r = l + delta_x;\n        b = origin_y - ycoord * delta_y;\n        t = b - delta_y;\n        setcolor(col);\n        bar(l,t,r,b);\n        setcolor(WHITE);\n     }\n};\n#endif\n</code></pre>\n<p><strong>circles.cpp</strong></p>\n<pre><code>#include&lt;iostream&gt;\n#include&lt;cmath&gt;\n#include \"screen.h\"\nusing namespace std;\n\nvoid draw_midpoint_circle(Screen ob, int radius);\nvoid circlepointplot(Screen ob, int m, int n);\nvoid trigonometric_circle(Screen ob, int radius);\n\nint main() {\n    Screen scr = Screen(641, 641, 16);\n    int choice, rad;\n    cout &lt;&lt; \"Menu\\n 1. Midpoint Circle Drawing Algorithm\\n 2. Bresenham's Circle Drawing Algorithm \\n 3. Trigonometric Method\\n\";\n    cin&gt;&gt;choice;\n    cout &lt;&lt; \"Enter Radius \\t\";\n    cin&gt;&gt;rad;\n\n    switch (choice) {\n        case 1:\n            draw_midpoint_circle(scr, rad);\n            break;\n        case 2:\n            draw_midpoint_circle(scr, rad);\n            break;\n        case 3:\n            trigonometric_circle(scr, rad);\n            break;\n        default:\n            cout &lt;&lt; \"Wrong Choice\\n\";\n            break;\n    }\n\n    getch();\n    return 0;\n}\n\nvoid trigonometric_circle(Screen ob, int radius) {\n    double angle = 0.0;\n    while (angle &lt;= 360) {\n        int dx = 641 / 16;\n        int x = int(radius * cos(angle));\n        int y = int(radius * sin(angle));\n        angle = angle + 5;\n        ob.plot_pixel(x, y, 0);\n        cout &lt;&lt; \"Point Plotted  \" &lt;&lt; x &lt;&lt; \"\\t\" &lt;&lt; y &lt;&lt; endl;\n        char buffer[50];\n        sprintf(buffer, \"%d,%d\", x, y);\n        outtextxy(320 + ((x + 1) * dx), 320 - ((y - 1) * dx), buffer);\n        getch();\n    }\n}\n\nvoid draw_midpoint_circle(Screen ob, int radius) {\n    float dp;\n    int x, y;\n    x = 0;\n    y = radius;\n    dp = 1 - radius;\n    while (x &lt; y) {\n        circlepointplot(ob, x, y);\n        if (dp &lt; 0)\n            dp = dp + 2 * x + 3;\n        else {\n            dp = dp + 2 * (x - y) + 5;\n            y--;\n        }\n\n        x++;\n        circlepointplot(ob, x, y);\n    }\n}\n\nvoid circlepointplot(Screen ob, int m, int n) {\n    ob.plot_pixel(m, n, 0);\n    ob.plot_pixel(n, m, 0);\n    ob.plot_pixel(m, -n, 0);\n    ob.plot_pixel(n, -m, 0);\n    ob.plot_pixel(-m, n, 0);\n    ob.plot_pixel(-n, m, 0);\n    ob.plot_pixel(-m, -n, 0);\n    ob.plot_pixel(-n, -m, 0);\n\n    cout &lt;&lt; \"Point Plotted\" &lt;&lt; m &lt;&lt; \"\\t\" &lt;&lt; n &lt;&lt; endl;\n    cout &lt;&lt; \"Point Plotted\" &lt;&lt; n &lt;&lt; \"\\t\" &lt;&lt; m &lt;&lt; endl;\n    cout &lt;&lt; \"Point Plotted\" &lt;&lt; m &lt;&lt; \"\\t\" &lt;&lt; -n &lt;&lt; endl;\n    cout &lt;&lt; \"Point Plotted\" &lt;&lt; n &lt;&lt; \"\\t\" &lt;&lt; -m &lt;&lt; endl;\n    cout &lt;&lt; \"Point Plotted\" &lt;&lt; -m &lt;&lt; \"\\t\" &lt;&lt; n &lt;&lt; endl;\n    cout &lt;&lt; \"Point Plotted\" &lt;&lt; -n &lt;&lt; \"\\t\" &lt;&lt; m &lt;&lt; endl;\n    cout &lt;&lt; \"Point Plotted\" &lt;&lt; -m &lt;&lt; \"\\t\" &lt;&lt; -n &lt;&lt; endl;\n    cout &lt;&lt; \"Point Plotted\" &lt;&lt; -n &lt;&lt; \"\\t\" &lt;&lt; -m &lt;&lt; endl;\n    int dx = 641 / 16;\n    char buffer[50];\n    sprintf(buffer, \"%d,%d\", m, n);\n    outtextxy(320 + ((m + 1) * dx), 320 - ((n - 1) * dx), buffer);\n    getch();\n\n}\n</code></pre>\n<p>I'm using <a href=\"http://zaher14.blogspot.com/2007/01/graphicsh-in-linux.html\" rel=\"nofollow\">graphics.h</a> for linux. Basic programs run fine.\nThe errors that I get are</p>\n<pre><code>g++ -c screen.cpp -o screen.o\ng++ -c circles.cpp -o circles.o\ng++ screen.o circles.o -o \"circle.exe\" -lgraph\ncircles.o:(.bss+0x0): multiple definition of `screen'\nscreen.o:(.bss+0x0): first defined here\ncircles.o:(.bss+0x8): multiple definition of `Font_surface'\nscreen.o:(.bss+0x8): first defined here\ncircles.o:(.bss+0x10): multiple definition of `_fgcolor'\nscreen.o:(.bss+0x10): first defined here\ncircles.o:(.bss+0x14): multiple definition of `_bgcolor'\nscreen.o:(.bss+0x14): first defined here\ncircles.o:(.bss+0x18): multiple definition of `_fontcolor'\nscreen.o:(.bss+0x18): first defined here\ncircles.o:(.bss+0x1c): multiple definition of `_pid'\nscreen.o:(.bss+0x1c): first defined here\ncircles.o:(.bss+0x20): multiple definition of `CP'\nscreen.o:(.bss+0x20): first defined here\ncircles.o:(.bss+0x40): multiple definition of `InternalFont'\nscreen.o:(.bss+0x40): first defined here\ncircles.o:(.bss+0x850): multiple definition of `TP'\nscreen.o:(.bss+0x850): first defined here\ncircles.o:(.bss+0x860): multiple definition of `_last_arc'\nscreen.o:(.bss+0x860): first defined here\ncircles.o:(.bss+0x878): multiple definition of `_internal_linestyle'\nscreen.o:(.bss+0x878): first defined here\ncircles.o:(.bss+0x888): multiple definition of `_scanlist'\nscreen.o:(.bss+0x888): first defined here\ncollect2: ld returned 1 exit status\n</code></pre>\n<p>What am I doing wrong, how do I get this to work?</p>\n<p>Updated errors after moving the code into the class.</p>\n<pre><code>/tmp/ccB2RO2Q.o: In function `main':\ncircles.cpp:(.text+0x111): undefined reference to `grgetch'\n/tmp/ccB2RO2Q.o: In function `trigonometric_circle(Screen, int)':\ncircles.cpp:(.text+0x242): undefined reference to `outtextxy'\ncircles.cpp:(.text+0x247): undefined reference to `grgetch'\n/tmp/ccB2RO2Q.o: In function `circlepointplot(Screen, int, int)':\ncircles.cpp:(.text+0x6f2): undefined reference to `outtextxy'\ncircles.cpp:(.text+0x6f7): undefined reference to `grgetch'\n/tmp/ccB2RO2Q.o: In function `Screen::Screen(int, int, int)':\ncircles.cpp:(.text._ZN6ScreenC2Eiii[_ZN6ScreenC5Eiii]+0xd0): undefined reference to `initgraph'\ncircles.cpp:(.text._ZN6ScreenC2Eiii[_ZN6ScreenC5Eiii]+0xf7): undefined reference to `setcolor'\ncircles.cpp:(.text._ZN6ScreenC2Eiii[_ZN6ScreenC5Eiii]+0x103): undefined reference to `setcolor'\ncircles.cpp:(.text._ZN6ScreenC2Eiii[_ZN6ScreenC5Eiii]+0x11c): undefined reference to `line'\ncircles.cpp:(.text._ZN6ScreenC2Eiii[_ZN6ScreenC5Eiii]+0x15e): undefined reference to `setcolor'\ncircles.cpp:(.text._ZN6ScreenC2Eiii[_ZN6ScreenC5Eiii]+0x16a): undefined reference to `setcolor'\ncircles.cpp:(.text._ZN6ScreenC2Eiii[_ZN6ScreenC5Eiii]+0x182): undefined reference to `line'\ncircles.cpp:(.text._ZN6ScreenC2Eiii[_ZN6ScreenC5Eiii]+0x1b9): undefined reference to `putpixel'\n/tmp/ccB2RO2Q.o: In function `Screen::plot_pixel(int, int, int)':\ncircles.cpp:(.text._ZN6Screen10plot_pixelEiii[Screen::plot_pixel(int, int, int)]+0x6d): undefined reference to `setcolor'\ncircles.cpp:(.text._ZN6Screen10plot_pixelEiii[Screen::plot_pixel(int, int, int)]+0x80): undefined reference to `bar'\ncircles.cpp:(.text._ZN6Screen10plot_pixelEiii[Screen::plot_pixel(int, int, int)]+0x8a): undefined reference to `setcolor'\ncollect2: ld returned 1 exit status\n</code></pre>\n<p>Here's the graphics.h file it has a reference to an SDL_Image *screen</p>\n<pre><code>/* libgraph - TurboC graphics API on GNU/Linux\n * graphics.h: Core initialization and configuration functions\n * \n * Copyright (C) 2003  Faraz Shahbazker\n *\n *  This library is free software; you can redistribute it and/or\n *  modify it under the terms of the GNU Library General Public\n *  License as published by the Free Software Foundation; either\n *  version 2 of the License, or (at your option) any later version.\n *\n *  This library is distributed in the hope that it will be useful,\n *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n *  Library General Public License for more details.\n *\n *  You should have received a copy of the GNU Library General Public\n *  License along with this library; if not, write to the Free\n *  Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,\n *  MA 02111-1307, USA\n *\n * Author:  Faraz Shahbazker &lt;faraz_ms@rediffmail.com&gt;\n */\n\n/* Graphic functions using SDL */\n\n#ifndef GRAPHICS_H\n#define GRAPHICS_H 1\n\n\n#include &lt;SDL/SDL.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;sys/types.h&gt;\n#include &lt;signal.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;string.h&gt;\n#include &lt;time.h&gt;\n\n\n#ifdef __cplusplus\nextern \"C\" \n{\n\n#endif      /* __cplusplus */\n\n\n/* graphic drivers */\nenum _driver{DETECT=0, USER, VGA=9};\nenum graphics_modes{VGALO=0, VGAMED, VGAHI, VGAMAX, VGA640, VGA800, VGA1024, USERMODE};\n\n\n/* 16 colors */\nenum _color{BLACK=0, BLUE, GREEN, CYAN, RED, MAGENTA, BROWN, LIGHTGRAY, DARKGRAY,LIGHTBLUE, LIGHTGREEN, LIGHTCYAN, LIGHTRED, LIGHTMAGENTA, YELLOW, WHITE};\n\n\n\n/* global variables */\nSDL_Surface *screen;        //main drawing screen\nSDL_Surface *Font_surface;  //font screen \nUint32 _fgcolor, _bgcolor, _fontcolor;  //global color numbers\npid_t _pid;         //Don't bother with this \n\n\n\n/* function prototypes */\nvoid initgraph(int *graphdriver,int *graphmode,char *pathtodriver);\nvoid closegraph(void);\nvoid setgraphmode(int gmode);\nint  getgraphmode(void);\nvoid restorecrtmode(void);\nint  getmaxx(void);\nint  getmaxy(void);\nvoid putpixel(int x, int y, int color);\nint  getpixel(int, int);\nvoid setbkcolor(int color);\nint  getbkcolor(void);\nvoid setcolor(int color);\nint  getcolor(void);\nint getmaxcolor(void);\nchar* getdrivername(void);\nchar* getmodename(int mode_number);\nint getmaxmode(void);\nvoid detectgraph(int* graphdriver, int* graphmode);\nvoid getmoderange(int graphdriver, int* lomode, int* himode);\nint delay(float);\nvoid setfontcolor(int color);\nint getfontcolor(void);\n\n\n\n\n\n/*** library specific functions - not for users ***/\nvoid initialize_settings (void);\nvoid mappixel(int, int);     //marks a pixel without updating screen\nvoid clippixel(int *, int *); /* Clip pixel (x,y) to current\n                                 screen size*/\nvoid mapword(int,int,int);\nvoid mapvword(int,int,int);\nint colorrev(const Uint8);   // maps 0..255 8-bit color to 0..15 TC color\nUint8 colortrans(const int); // maps 0..15 TC color to 0..255 8-bit color\nvoid ctrlbreak(void);        // To detect user interrupt    \nvoid inthandler(int);        // clean up on user interrupt\nvoid safe_update(int top, int left, int right, int bottom);\n    /* update screen within boundary */\n\n#define CHECK_INITIALIZATION\\\n    if (!getenv(\"LIBGRAPHICS_ACTIVE\")) \\\n    { \\\n        fprintf(stderr, \"*** The graphics system has not been initialized!\\n\"); \\\n        fprintf(stderr, \"*** Call initgraph() before trying to use graphics functions.\\n\"); \\\n        exit(-1); \\\n    }\n\nstruct {int x;int y;}CP;\n\n#include \"grtext.h\"\n#include \"shapes.h\"\n#include \"polygon.h\"\n\n#ifdef __cplusplus\n}\n#endif      /* __cplusplus */\n\n\n#endif      /* LIBGRAPH_H */\n</code></pre>\n", "Tags": "<c++><graphics>", "OwnerUserId": "632447", "AnswerCount": "2"}, "7627089": {"ParentId": "7626774", "LastEditDate": "2011-10-02T15:37:21.847", "CommentCount": "6", "CreationDate": "2011-10-02T14:55:04.223", "OwnerUserId": "279313", "LastEditorUserId": "279313", "PostTypeId": "2", "Id": "7627089", "Score": "1", "Body": "<p>graphics.h contains the following lines:</p>\n<pre>\n/* global variables */ \nSDL_Surface *screen;        //main drawing screen \nSDL_Surface *Font_surface;  //font screen  \nUint32 _fgcolor, _bgcolor, _fontcolor;  //global color numbers \npid_t _pid;         //Don't bother with this  \n</pre>\n<p>This is a bit strange, but this h-file creates global variables. This means, if you include this file to more than one .cpp files, you have multiple definition error. I don't know why this h-file is written by such way, the program will be linked only if graphics.h is included to only one cpp file. If your can change this file, add extern keyword before every global variable, and create these variables (if necessary) in some .cpp file.</p>\n", "LastActivityDate": "2011-10-02T15:37:21.847"}, "7626830": {"ParentId": "7626774", "LastEditDate": "2011-10-02T15:33:43.370", "CommentCount": "3", "CreationDate": "2011-10-02T14:07:12.677", "OwnerUserId": "464581", "LastEditorUserId": "464581", "PostTypeId": "2", "Id": "7626830", "Score": "1", "Body": "<p>Your first error message is</p>\n<blockquote>\n<p id=\"so_7626774_7626830_0\">circles.o:(.bss+0x0): multiple definition of `screen'</p>\n</blockquote>\n<p>In your code, as I write this, there is nothing called \"screen\".</p>\n<p>Hence, the problem appears to be solved already.</p>\n<hr>\n<p><em>EDIT</em>: now that you have added the contents of (someone else's) <code>graphics.h</code>, the author's ignorance of the following is the cause of the problem:</p>\n<blockquote>\n<p id=\"so_7626774_7626830_1\"><strong>C++98 \u00a77.5/7</strong><br>\n  The form of <em>linkage specification</em> that contains a braced-enclosed <em>declaration-seq</em> does\n  not affect whether the contained declarations are definitions or not (3.1).</br></p>\n</blockquote>\n<p>So the pointer variable declarations there are definitions.</p>\n<p>Unfortunately it appears that  not only the author of that header, but also <em>the current C++ standard got it wrong</em>:</p>\n<blockquote>\n<p id=\"so_7626774_7626830_2\"><strong>C++11 \u00a77.5/7:</strong><br>\n  A declaration directly contained in a <em>linkage-specification</em> is treated as if it contains\n  the <code>extern</code> specifier (7.1.1) for the purpose of determining the linkage of the declared \n  name and whether it is a definition.</br></p>\n</blockquote>\n<p>According to that normative text it is as if each pointer variable was declared as\n<code>extern</code> and thus would\nbe only a declaration (not a definition). However, even in C++11 the non-normative example\nshows the intent, that it is a definition.</p>\n<p>All that said, this was news to me too, and I'm an old hand at this. It seems to be just\na meaningless quirk in the standard, a needless gotcha. But possibly it's because in C++\nthere is no other way to express pure declaration versus definition for an object.</p>\n<p>Cheers &amp; hth.,</p>\n</hr>", "LastActivityDate": "2011-10-02T15:33:43.370"}, "bq_ids": {"n4140": {"so_7626774_7626830_2": {"section_id": 5523, "quality": 0.8333333333333334, "length": 15}}, "n3337": {"so_7626774_7626830_2": {"section_id": 5309, "quality": 0.8333333333333334, "length": 15}}, "n4659": {"so_7626774_7626830_2": {"section_id": 6958, "quality": 0.8333333333333334, "length": 15}}}});