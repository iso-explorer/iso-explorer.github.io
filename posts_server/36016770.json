post_cb({"36016914": {"ParentId": "36016770", "CommentCount": "0", "Body": "<p>In C99, it's explicitly forbidden by the standard (6.7.8p3)</p>\n<blockquote>\n<p id=\"so_36016770_36016914_0\">The type of the entity to be initialized shall be an array of unknown size or an object type that is not a variable length array type.</p>\n</blockquote>\n<p>Even though we can see that <code>n</code> is a constant value, it is not marked as such.</p>\n<p>AFAIK, C++ standard does not allow for variable-length arrays (i.e. <code>n</code> not being <code>const</code> or <code>constexpr</code>) although most compilers support it following C rules.</p>\n", "OwnerUserId": "4524862", "PostTypeId": "2", "Id": "36016914", "Score": "1", "CreationDate": "2016-03-15T16:28:57.723", "LastActivityDate": "2016-03-15T16:28:57.723"}, "36016770": {"CommentCount": "2", "ViewCount": "144", "PostTypeId": "1", "LastEditorUserId": "4572081", "CreationDate": "2016-03-15T16:22:09.637", "LastActivityDate": "2016-03-15T16:32:47.627", "Title": "compile-time array initialization with non-const variable size", "AcceptedAnswerId": "36016914", "LastEditDate": "2016-03-15T16:32:47.627", "Id": "36016770", "Score": "0", "Body": "<p>I having a confusion about what is going on <em>behind the scene</em> of array initialization.</p>\n<pre><code>int n= 3;\nint a[n]; // compile succeeds\n</code></pre>\n<p>but,</p>\n<pre><code>int n = 3;\nint a[n] = {1, 2, 3};   // compile error\n</code></pre>\n<p>error message from <em>codeblock</em>:</p>\n<pre><code>error: variable-sized object 'a' may not be initialized\n</code></pre>\n<p>My understanding is:\nfirst snippet, n elements are allocated but uninitialized. Second one allocates n elements and initializes them to <code>{1, 2, 3}</code>. Both do almost the same thing, but why second one causes error. </p>\n<hr>\n<p>Please clarify my understanding or leave me some resources (I've tried, but couldn't find the close answer). </p>\n<hr>\n<p>compiler: <strong>mingw32-g++</strong></p>\n</hr></hr>", "Tags": "<c++><arrays><initialization>", "OwnerUserId": "4572081", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_36016770_36016914_0": {"section_id": 4706, "quality": 0.6153846153846154, "length": 8}}, "n3337": {"so_36016770_36016914_0": {"section_id": 3101, "quality": 0.5384615384615384, "length": 7}}, "n4659": {"so_36016770_36016914_0": {"section_id": 6103, "quality": 0.6153846153846154, "length": 8}}}});