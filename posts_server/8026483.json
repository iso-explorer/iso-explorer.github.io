post_cb({"8026499": {"ParentId": "8026483", "CommentCount": "0", "Body": "<p>Whenever you do <code>T::*</code>, you're saying \"this thing requires an instance of <code>T</code> to use.\" That statement does not hold for <code>static</code> functions, which are callable without any instances of the class.</p>\n", "OwnerUserId": "87234", "PostTypeId": "2", "Id": "8026499", "Score": "1", "CreationDate": "2011-11-06T10:43:42.077", "LastActivityDate": "2011-11-06T10:43:42.077"}, "8026512": {"ParentId": "8026483", "CommentCount": "0", "Body": "<p>You'd have to use a regular function pointer, like so:</p>\n<pre><code>int (*s)()=&amp;S::f;\n</code></pre>\n<p>Like GMan said, static methods don't work on instances, so they don't receive the hidden <code>this</code> pointer. This effectively makes them have a different signature from instance methods with the same arguments.</p>\n", "OwnerUserId": "469220", "PostTypeId": "2", "Id": "8026512", "Score": "0", "CreationDate": "2011-11-06T10:45:44.013", "LastActivityDate": "2011-11-06T10:45:44.013"}, "8026500": {"ParentId": "8026483", "CommentCount": "1", "Body": "<blockquote>\n<p id=\"so_8026483_8026500_0\">Why a pointer cannot point to a static member of a class?</p>\n</blockquote>\n<p>Because for the purpose of membership it <em>isn\u2019t</em> a member, merely for the purpose of scope. Apart from scope, static members are just like free functions, unattached to an instance of a class. You can use non-member function pointers:</p>\n<pre><code>int (*s)() = &amp;S::f;\n</code></pre>\n", "OwnerUserId": "1968", "PostTypeId": "2", "Id": "8026500", "Score": "4", "CreationDate": "2011-11-06T10:43:55.493", "LastActivityDate": "2011-11-06T10:43:55.493"}, "bq_ids": {"n4140": {"so_8026483_8026483_0": {"section_id": 3227, "quality": 0.9090909090909091, "length": 10}, "so_8026483_8026500_0": {"section_id": 3227, "quality": 0.7142857142857143, "length": 5}}, "n3337": {"so_8026483_8026483_0": {"section_id": 3100, "quality": 0.9090909090909091, "length": 10}, "so_8026483_8026500_0": {"section_id": 3100, "quality": 0.7142857142857143, "length": 5}}, "n4659": {"so_8026483_8026483_0": {"section_id": 3984, "quality": 0.8181818181818182, "length": 9}, "so_8026483_8026500_0": {"section_id": 3984, "quality": 0.7142857142857143, "length": 5}}}, "8026483": {"CommentCount": "0", "ViewCount": "137", "PostTypeId": "1", "LastEditorUserId": "974191", "CreationDate": "2011-11-06T10:39:23.510", "LastActivityDate": "2011-11-06T11:13:23.367", "Title": "Pointers to static members of class", "AcceptedAnswerId": "8026500", "LastEditDate": "2011-11-06T11:13:23.367", "Id": "8026483", "Score": "1", "Body": "<p>From this reference:</p>\n<blockquote>\n<p id=\"so_8026483_8026483_0\">(8.3.3/3) A pointer to member shall not point to a static member of a\n  class (9.4), a member with reference type, or \"<em>cv</em> void.\"</p>\n</blockquote>\n<p>Why a pointer cannot point to a static member of a class?</p>\n<pre><code>struct S {\n     static int f() { /*...*/ };\n\n};\n\nint main()\n{\n     int (S::*s)() = &amp;S::f; // why?\n}\n</code></pre>\n", "Tags": "<c++>", "OwnerUserId": "974191", "AnswerCount": "3"}});