post_cb({"bq_ids": {"n4140": {"so_29261910_29262172_0": {"length": 19, "quality": 0.8636363636363636, "section_id": 5479}}, "n3337": {"so_29261910_29262172_0": {"length": 19, "quality": 0.8636363636363636, "section_id": 5265}}, "n4659": {"so_29261910_29262172_0": {"length": 19, "quality": 0.8636363636363636, "section_id": 6912}}}, "29261910": {"ViewCount": "75", "Body": "<p>Must the declaration of a namespace as <code>inline</code> be the first one, or can any (reopened) namespace be declard as <code>inline</code> at any point?</p>\n<p>If so, is there a way to prevent someone to declare a namespace as <code>inline</code> (afterwards)?</p>\n<pre><code>#include &lt;iostream&gt;\n\nnamespace outer {\n//inline\nnamespace inner {\n}}\n\n//inline namespace std {}\n\nnamespace outer {\ninline\nnamespace inner {\n    void foo() {\n        std::cout &lt;&lt; \"foo\" &lt;&lt; std::endl;\n        //::cout &lt;&lt; \"foo\" &lt;&lt; endl;\n    }\n}}\n\nint main() {\n    outer::foo();\n}\n</code></pre>\n<hr>\n<p><strong>edit</strong><br>\nIt seems that gcc accepts this, as I first tested only on coliru, however <a href=\"http://goo.gl/4TPsZt\" rel=\"nofollow\">clang rejects it</a></br></p>\n<p>Is this a bug?</p>\n</hr>", "AcceptedAnswerId": "29262172", "Title": "Prevent hijacking a namespace to an inline namespace", "CreationDate": "2015-03-25T17:00:45.353", "Id": "29261910", "CommentCount": "0", "LastEditDate": "2015-03-25T19:37:37.833", "PostTypeId": "1", "LastEditorUserId": "3087952", "LastActivityDate": "2015-03-25T19:37:37.833", "Score": "1", "OwnerUserId": "3087952", "Tags": "<c++><c++11><namespaces>", "AnswerCount": "1"}, "29262172": {"Id": "29262172", "PostTypeId": "2", "Body": "<p>7.3.1/7 shows us that it must be declared inline at the first declaration:</p>\n<blockquote>\n<p id=\"so_29261910_29262172_0\">If the optional initial inline keyword appears in a\n  namespace-definition for a particular namespace, that namespace is\n  declared to be an inline namespace. The inline keyword may be used on\n  an extension namespace-definition only if it was previously used on\n  the original-namespace-definition for that namespace.</p>\n</blockquote>\n", "LastEditorUserId": "251738", "LastActivityDate": "2015-03-25T17:28:19.500", "Score": "2", "CreationDate": "2015-03-25T17:13:57.540", "ParentId": "29261910", "CommentCount": "1", "OwnerUserId": "251738", "LastEditDate": "2015-03-25T17:28:19.500"}});