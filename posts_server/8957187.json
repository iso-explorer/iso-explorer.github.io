post_cb({"bq_ids": {"n4140": {"so_8957187_8958112_0": {"length": 14, "quality": 0.9333333333333333, "section_id": 6698}, "so_8957187_8958112_1": {"length": 8, "quality": 0.8, "section_id": 6699}}, "n3337": {"so_8957187_8958112_0": {"length": 14, "quality": 0.9333333333333333, "section_id": 6453}, "so_8957187_8958112_1": {"length": 8, "quality": 0.8, "section_id": 6454}}, "n4659": {"so_8957187_8958112_0": {"length": 14, "quality": 0.9333333333333333, "section_id": 8173}, "so_8957187_8958112_1": {"length": 8, "quality": 0.8, "section_id": 8173}}}, "8958112": {"Id": "8958112", "PostTypeId": "2", "Body": "<p><code>\u00a711.6 Multiple access [class.paths]</code></p>\n<blockquote>\n<p id=\"so_8957187_8958112_0\">If a name can be reached by several paths through a multiple inheritance graph, <strong>the access is that of the path that gives most access</strong>. [ <em>Example:</em></p>\n<pre><code>class W { public: void f(); };\nclass A : private virtual W { };\nclass B : public virtual W { };\nclass C : public A, public B {\n   void f() { W::f(); } // OK\n};\n</code></pre>\n<p id=\"so_8957187_8958112_1\">Since <code>W::f()</code> is available to <code>C::f()</code> along the public path through <code>B</code>, access is allowed. <em>\u2014end example</em> ]</p>\n</blockquote>\n<p>I think I don't need to add anything else, but see also <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_closed.html#471\">this defect report</a> (which was closed as \"not a defect\").</p>\n", "LastEditorUserId": "596781", "LastActivityDate": "2012-01-22T01:02:09.000", "Score": "6", "CreationDate": "2012-01-22T00:57:51.570", "ParentId": "8957187", "CommentCount": "9", "OwnerUserId": "500104", "LastEditDate": "2012-01-22T01:02:09.000"}, "8957187": {"ViewCount": "448", "Body": "<p>let's say we have <code>class A,B,C,D</code> where A is base, B,C are between and D is derived in diamond model.</p>\n<p><em>NOTE:</em> </p>\n<p><code>class B</code> inherits virtualy <code>class A</code> in <strong>private</strong> mode,</p>\n<p><code>class C</code> inherita virtualy <code>class A</code> in <strong>protected</strong> mode.</p>\n<pre><code>class A\n{\npublic:\n    int member;  // note this member\n};\nclass B :\n    virtual private A // note private \n{\n\n};\nclass C :\n    virtual protected A // note protected\n{\n\n};\nclass D :\n    public B, // doesn't metter public or whatever here\n    public C\n{\n\n};\n\nint main()\n{\n    D test;\n    test.member = 0; // WHAT IS member? protected or private member?\n    cin.ignore();\n    return 0;\n}\n</code></pre>\n<p>now when we make an instance of <code>class D</code> what will member be then? private or protected lol?</p>\n<p><strong>Figure No2:</strong></p>\n<p>what if we make it so:</p>\n<pre><code>class B :\n    virtual public A // note public this time!\n{\n\n};\nclass C :\n    virtual protected A // same as before\n{\n\n};\n</code></pre>\n<p>I suppose <code>member</code> will be public in this second example isn it?</p>\n", "AcceptedAnswerId": "8958112", "Title": "Diamond inheritance with mixed inheritance modifers (protected / private / public)", "CreationDate": "2012-01-21T22:14:12.263", "Id": "8957187", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2012-01-22T01:14:29.987", "Score": "4", "OwnerUserId": "1044776", "Tags": "<c++><inheritance><diamond-problem>", "AnswerCount": "1"}});