post_cb({"33642510": {"CommentCount": "4", "AcceptedAnswerId": "33646986", "PostTypeId": "1", "LastEditorUserId": "3647361", "CreationDate": "2015-11-11T00:57:41.350", "LastActivityDate": "2015-11-11T09:34:03.537", "LastEditDate": "2015-11-11T09:34:03.537", "ViewCount": "398", "FavoriteCount": "0", "Title": "explicit qualification in C++ declaration", "Id": "33642510", "Score": "6", "Body": "<p>The following namespace definition fails to compile when the first declaration is commented out. If the first declaration of <code>foo</code> is uncommented, then it compiles just fine.</p>\n<pre><code>namespace Y\n{\n    //void foo();\n    void ::Y::foo(){}\n}\n</code></pre>\n<p>The relevant part in the standard (\u00a78.3\u00b61) says:</p>\n<blockquote>\n<p id=\"so_33642510_33642510_0\">When the declarator-id is qualified, the declaration shall refer to a previously declared member</p>\n</blockquote>\n<p>I understand that this rule prevents the introduction of names into other namespaces. I wonder if that rule could be relaxed to allow for <em>qualified-id</em>s referring to the current namespace.</p>\n", "Tags": "<c++><namespaces><declaration><language-lawyer><qualified-name>", "OwnerUserId": "2549876", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_33642510_33642510_0": {"section_id": 3208, "quality": 1.0, "length": 8}}, "n3337": {"so_33642510_33642510_0": {"section_id": 3082, "quality": 1.0, "length": 8}}, "n4659": {"so_33642510_33642510_0": {"section_id": 3965, "quality": 1.0, "length": 8}}}, "33646986": {"ParentId": "33642510", "PostTypeId": "2", "CommentCount": "0", "Body": "<p><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#482\" rel=\"nofollow\"><strong>CWG #482</strong></a> is relevant:</p>\n<blockquote>\n<p id=\"so_33642510_33646986_0\">According to 8.3 [dcl.meaning] paragraph 1, [\u2026] <br>\n  This restriction prohibits examples like the following:</br></p>\n<pre><code>void f();\nvoid ::f();        // error: qualified declarator\n\nnamespace N {\n  void f();\n  void N::f() { }  // error: qualified declarator\n}\n</code></pre>\n<p id=\"so_33642510_33646986_1\">There doesn't seem to be any good reason for disallowing such\n  declarations, and a number of implementations accept them in spite of\n  the Standard's prohibition. Should the Standard be changed to allow\n  them?</p>\n<p id=\"so_33642510_33646986_2\">Notes from the April, 2006 meeting:</p>\n<p id=\"so_33642510_33646986_3\"><strong>In discussing <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_closed.html#548\" rel=\"nofollow\">issue 548</a>, the CWG agreed that the prohibition of\n  qualified declarators inside their namespace should be removed.</strong></p>\n</blockquote>\n<p>So your code is valid if the first declaration of <code>foo</code> is present (as of about 2012; GCC has an <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64267\" rel=\"nofollow\">open bug report</a>). If not, however, your quoted wording still applies and renders the qualified declaration ill-formed. I see no reason to permit that case; it intuitively implies that the name has been declared already, since qualified name lookup must determine what it refers to.</p>\n", "OwnerUserId": "3647361", "LastEditorUserId": "3647361", "LastEditDate": "2015-11-11T09:28:34.387", "Id": "33646986", "Score": "3", "CreationDate": "2015-11-11T08:49:39.217", "LastActivityDate": "2015-11-11T09:28:34.387"}});