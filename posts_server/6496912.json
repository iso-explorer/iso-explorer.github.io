post_cb({"6496912": {"CommentCount": "2", "AcceptedAnswerId": "6497126", "CreationDate": "2011-06-27T17:56:49.897", "LastActivityDate": "2011-06-27T18:23:16.660", "PostTypeId": "1", "ViewCount": "191", "FavoriteCount": "1", "Title": "Does placement-new introduce a sequence point?", "Id": "6496912", "Score": "12", "Body": "<p>Consider the following line of code:</p>\n<pre><code>new (p++) T();\n</code></pre>\n<p>If the constructor <code>T()</code> throws an exception, is <code>p</code> guaranteed to have already been incremented?</p>\n", "Tags": "<c++><exception><constructor><side-effects><sequence-points>", "OwnerUserId": "252000", "AnswerCount": "5"}, "6497101": {"ParentId": "6496912", "CommentCount": "3", "Body": "<p>Placement new is just a regular function, named <code>operator new(size_t, void*)</code>. It simply returns its second argument.</p>\n", "OwnerUserId": "775806", "PostTypeId": "2", "Id": "6497101", "Score": "0", "CreationDate": "2011-06-27T18:14:20.647", "LastActivityDate": "2011-06-27T18:14:20.647"}, "6497126": {"ParentId": "6496912", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>From 5.3.4 [expr.new] (quoting from n3242):</p>\n<blockquote>\n<p id=\"so_6496912_6497126_0\"><em>11</em> The new-placement syntax is used to\n  supply additional arguments to an\n  allocation function. If used, overload\n  resolution is performed on a function\n  call created by assembling an argument\n  list consisting of the amount of space\n  requested (the first argument) and the\n  expressions in the new-placement part\n  of the new-expression (the second and\n  succeeding arguments).</p>\n</blockquote>\n<p>So in a new expression the allocation function is used from a function call (which makes sense). All allocation functions are functions, including the ones provided by the implementation, from 3.7.4.1 [basic.stc.dynamic.allocation]:</p>\n<blockquote>\n<p id=\"so_6496912_6497126_1\"><em>1</em> An allocation function shall be a class member function or a global function; [...]</p>\n</blockquote>\n<p>So by the time an exception is thrown from the constructor, the allocation has taken place and the associated function call expression has been fully evaluated.</p>\n", "OwnerUserId": "726300", "LastEditorUserId": "726300", "LastEditDate": "2011-06-27T18:23:16.660", "Id": "6497126", "Score": "8", "CreationDate": "2011-06-27T18:16:13.687", "LastActivityDate": "2011-06-27T18:23:16.660"}, "6497118": {"ParentId": "6496912", "CommentCount": "0", "Body": "<p>I don't think the standard answers this question directly/explicitly. Implicitly, however, the answer is yes.</p>\n<p>In particular, the placement syntax for new is simply a way of specifying extra parameters that will be passed to a function. Like any other function call, there is a sequence point between evaluating all the parameters to the function (in unspecified order), and executing any code in the function. I believe that should mean your <code>p++</code> will be evaluated and all side effects applied before anything else happens.</p>\n", "OwnerUserId": "179910", "PostTypeId": "2", "Id": "6497118", "Score": "3", "CreationDate": "2011-06-27T18:15:26.713", "LastActivityDate": "2011-06-27T18:15:26.713"}, "6497035": {"ParentId": "6496912", "CommentCount": "3", "Body": "<p>The increment operator does the following:</p>\n<ol>\n<li>stores the old value in a internal copy</li>\n<li>increments by one</li>\n<li>returns the old value</li>\n<li>deletes the copy of the old value</li>\n</ol>\n<p>So, <code>p</code> is guaranteed to be incremented.</p>\n", "OwnerUserId": "816210", "PostTypeId": "2", "Id": "6497035", "Score": "-1", "CreationDate": "2011-06-27T18:07:31.917", "LastActivityDate": "2011-06-27T18:07:31.917"}, "bq_ids": {"n4140": {"so_6496912_6497126_0": {"section_id": 6094, "quality": 0.9666666666666667, "length": 29}, "so_6496912_6497126_1": {"section_id": 7176, "quality": 1.0, "length": 7}}, "n3337": {"so_6496912_6497126_0": {"section_id": 5860, "quality": 0.9666666666666667, "length": 29}, "so_6496912_6497126_1": {"section_id": 6920, "quality": 1.0, "length": 7}}, "n4659": {"so_6496912_6497126_1": {"section_id": 8684, "quality": 1.0, "length": 7}}}, "6497108": {"ParentId": "6496912", "CommentCount": "0", "Body": "<p>Yes it is guaranteed to be incremented.</p>\n<p>The operators are just syntactic sugar for function/method calls.<br>\nI don't believe new has any special meaning above operator so it should be the same.</br></p>\n<p>Thus all parameter are fully evaluated (with sequence point) before the function <code>new</code> is called.</p>\n", "OwnerUserId": "14065", "PostTypeId": "2", "Id": "6497108", "Score": "4", "CreationDate": "2011-06-27T18:15:06.400", "LastActivityDate": "2011-06-27T18:15:06.400"}});