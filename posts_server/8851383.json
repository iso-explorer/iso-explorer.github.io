post_cb({"8851493": {"Id": "8851493", "PostTypeId": "2", "Body": "<p>You can actually narrow the problem down even further:</p>\n<pre><code>class A\n{\n   int x;\n   void foo(int k = x);\n};\n</code></pre>\n<p>This is because the standard says so.</p>\n<p>You can overload the method, <code>foo()</code>, and call <code>foo(x)</code> inside.</p>\n<p>From 8.3.6/9</p>\n<blockquote>\n<p id=\"so_8851383_8851493_0\">[...] A nonstatic member shall not be used in a default argument\n  expression, even if it is not evaluated, unless it appears as the\n  id-expression of a class member access expression (5.2.5) or unless it\n  is used to form a pointer to member (5.3.1) [...]</p>\n</blockquote>\n<p>For insight, you can read the whole section 8.3.6</p>\n", "LastEditorUserId": "673730", "LastActivityDate": "2012-01-13T13:49:23.700", "Score": "1", "CreationDate": "2012-01-13T13:43:00.223", "ParentId": "8851383", "CommentCount": "1", "OwnerUserId": "673730", "LastEditDate": "2012-01-13T13:49:23.700"}, "bq_ids": {"n4140": {"so_8851383_8851493_0": {"length": 15, "quality": 0.8333333333333334, "section_id": 3260}}, "n3337": {"so_8851383_8851493_0": {"length": 15, "quality": 0.8333333333333334, "section_id": 3132}}, "n4659": {"so_8851383_8851493_0": {"length": 13, "quality": 0.7222222222222222, "section_id": 4018}}}, "8851440": {"Id": "8851440", "PostTypeId": "2", "Body": "<p>That's because <code>this</code> isn't defined nor does it exist, when the method is actually called (imagine the resulting code). Same is true for actual member variables (without the pointer to the data there's no way to access the data either).</p>\n<p>To elaborate this a bit more, it would also result in weird constructs that aren't really defined, like the following (remember that <code>o_root</code> is even private!):</p>\n<pre><code>sometree-&gt;inorder();\n// ...would essentially be the same as...\nsometree-&gt;inorder(sometree-&gt;o_root);\n</code></pre>\n<p>How about just overloading <code>inorder()</code>, removing the default parameter?</p>\n<p>Basically use the following:</p>\n<pre><code>void BinaryTree::inorder(void)\n{\n    inorder(o_root);\n}\n\nvoid BinaryTree::inorder(Node* root)\n{\n    // your code as-is\n}\n</code></pre>\n", "LastActivityDate": "2012-01-13T13:39:18.987", "CommentCount": "4", "CreationDate": "2012-01-13T13:39:18.987", "ParentId": "8851383", "Score": "5", "OwnerUserId": "409744"}, "8851383": {"ViewCount": "305", "Body": "<p>I was just writing an inorder function to my Binary tree and I have encountered this difficulty. </p>\n<pre><code>class BinaryTree\n{\nprivate:\n     struct Node* o_root;\npublic:\nBinaryTree()\n    {\n              o_root = new Node();    \n        o_root-&gt;data = 0;\n        o_root-&gt;left = NULL;\n        o_root-&gt;right = NULL;\n\n    }\n    void inorder(Node*root = o_root);//Invalid\n\n};\n\n\nvoid BinaryTree::inorder(Node* root = o_root)//Invalid\n    {\n         if(root==NULL)\n         {\n             return;\n         }\n         inorder(root-&gt;left);\n\n         cout&lt;&lt; root -&gt; data;\n\n         inorder(root-&gt;right);\n\n    }\n</code></pre>\n<p>I get an error : a nonstatic member reference must be relative to a specific object </p>\n<p>if I turn the root node static this works.</p>\n<p>Why should this be so ? If i have two binary trees I would want the specific root of the object, not a static member. I tried using a this operator but that gives me another error which basically says that use of this operator not allowed in default parameter. </p>\n<p>Can anyone explain why this is not working and why has C++ denied use of this operator as default arguments?</p>\n", "AcceptedAnswerId": "8851440", "Title": "Why using a pointer of this as default parameter to a function not allowed?", "CreationDate": "2012-01-13T13:33:51.680", "Id": "8851383", "CommentCount": "0", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2012-01-18T15:34:29.147", "LastEditorUserId": "131433", "LastActivityDate": "2012-01-18T15:34:29.147", "Score": "2", "OwnerUserId": "985306", "Tags": "<c++><default-value>", "AnswerCount": "2"}});