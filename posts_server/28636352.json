post_cb({"bq_ids": {"n4140": {"so_28636352_28636352_0": {"length": 20, "quality": 0.6451612903225806, "section_id": 5920}, "so_28636352_28636515_1": {"length": 7, "quality": 1.0, "section_id": 369}, "so_28636352_28636515_0": {"length": 7, "quality": 1.0, "section_id": 369}}, "n3337": {"so_28636352_28636352_0": {"length": 31, "quality": 1.0, "section_id": 5692}, "so_28636352_28636515_1": {"length": 7, "quality": 1.0, "section_id": 359}, "so_28636352_28636515_0": {"length": 7, "quality": 1.0, "section_id": 359}}, "n4659": {"so_28636352_28636352_0": {"length": 17, "quality": 0.5483870967741935, "section_id": 7413}, "so_28636352_28636515_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 382}, "so_28636352_28636515_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 382}}}, "28636515": {"Id": "28636515", "PostTypeId": "2", "Body": "<p>The bullet is</p>\n<blockquote>\n<p id=\"so_28636352_28636515_0\"><code>X</code> is a union-like class that has a variant member with a non-trivial\n  default constructor</p>\n</blockquote>\n<p>which is parsed as</p>\n<blockquote>\n<p id=\"so_28636352_28636515_1\"><code>X</code> is a union-like class that has (a variant member with a non-trivial\n  default constructor)</p>\n</blockquote>\n<p>i.e., \"with a non-trivial default constructor\" applies to the type of the variant member, not <code>X</code>.</p>\n", "LastActivityDate": "2015-02-20T19:13:51.227", "CommentCount": "5", "CreationDate": "2015-02-20T19:13:51.227", "ParentId": "28636352", "Score": "11", "OwnerUserId": "2756719"}, "28636352": {"ViewCount": "471", "Body": "<p>The code below shows a union-like class with a non-trivial default constructor (member <code>y</code> is initialized with a <em>brace-or-equal-initializer</em>), so if a default constructor for such a class is defaulted, it should be deleted according to \u00a712.1/5 first bullet point. That is, the declaration <code>T t;</code> should not compile, as there is no default constructor for the <code>union T</code>. But the <a href=\"http://coliru.stacked-crooked.com/a/a72e7785386e32c8\" rel=\"nofollow\">code compiles and executes</a> in clang and GCC.</p>\n<pre><code>#include &lt;iostream&gt;\nunion T\n{\n    int y{1};\n    float x;\n    char c;\n    T() = default;\n};\n\nint main()\n{\n    T t;\n    std::cout &lt;&lt; t.y &lt;&lt; '\\n';\n}\n</code></pre>\n<p><strong>EDIT</strong> </p>\n<p>My question above was wrong right from the start, as the union T is <strong>not</strong> a <em>union-like class</em>. I just came to know about \u00a79.5/8 in C++11 which says:</p>\n<blockquote>\n<p id=\"so_28636352_28636352_0\">A <em>union-like class</em> is a union or a class that has an anonymous union\n  as a direct member. A union-like class X has a set of <em>variant members</em>.\n  If X is a union its variant members are the non-static data members;\n  otherwise, its variant members are the non-static data members of all\n  anonymous unions that are members of X.</p>\n</blockquote>\n<p>Now, consider the snippet below. It doesn't compile because the default constructor for the union is deleted. But I still, don't know which bullet point in \u00a712.1/5 is reponsible for this result. Note that again, the union is not a <em>union-like class</em> and so, the first bullet point in \u00a712.1/5 doesn't apply. But that's what the error message says in both clang and GCC. See <a href=\"http://coliru.stacked-crooked.com/a/261d1d2e5414a8c9\" rel=\"nofollow\">live example</a>.</p>\n<pre><code>#include &lt;iostream&gt;\n\nunion T{\n    int y;\n    struct A{ int i; A():i{1} {} } a;\n};\n\nint main()\n{\n    T t;\n    std::cout &lt;&lt; t.a.i &lt;&lt; '\\n';\n}\n</code></pre>\n", "AcceptedAnswerId": "28636515", "Title": "AFAIK, the code below shouldn't compile, but it does in clang and GCC. What am I missing here?", "CreationDate": "2015-02-20T19:02:50.573", "Id": "28636352", "CommentCount": "3", "LastEditDate": "2015-02-21T20:53:21.530", "PostTypeId": "1", "LastEditorUserId": "411165", "LastActivityDate": "2015-02-21T20:53:21.530", "Score": "6", "OwnerUserId": "411165", "Tags": "<c++><c++11><language-lawyer>", "AnswerCount": "1"}});