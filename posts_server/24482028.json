post_cb({"bq_ids": {"n4140": {"so_24482028_24482042_0": {"length": 29, "quality": 1.0, "section_id": 1936}, "so_24482028_24482042_1": {"length": 11, "quality": 1.0, "section_id": 4926}, "so_24482028_24482028_0": {"length": 9, "quality": 0.6923076923076923, "section_id": 1936}}, "n3337": {"so_24482028_24482042_0": {"length": 29, "quality": 1.0, "section_id": 1925}, "so_24482028_24482042_1": {"length": 11, "quality": 1.0, "section_id": 4721}, "so_24482028_24482028_0": {"length": 9, "quality": 0.6923076923076923, "section_id": 1925}}, "n4659": {"so_24482028_24482042_0": {"length": 29, "quality": 1.0, "section_id": 2207}, "so_24482028_24482042_1": {"length": 11, "quality": 1.0, "section_id": 6326}, "so_24482028_24482028_0": {"length": 9, "quality": 0.6923076923076923, "section_id": 2207}}}, "24482042": {"Id": "24482042", "PostTypeId": "2", "Body": "<p>The <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\">draft C++ standard</a> has the following footnote <code>296</code> in section <code>27.5.2</code> <em>Types</em> which says:</p>\n<blockquote>\n<p id=\"so_24482028_24482042_0\">streamsize is used in most places where ISO C would use size_t. Most\n  of the uses of streamsize could use size_t, except for the\n  strstreambuf constructors, which require negative values. It should\n  probably be the signed type corresponding to size_t (which is what\n  Posix.2 calls ssize_t).</p>\n</blockquote>\n<p>and we can see in section <code>D.7.1.1</code> <em>strstreambuf constructors</em> we have the following entries (<em>emphasis mine going forward</em>):</p>\n<pre><code>strstreambuf(char* gnext_arg, <b>streamsize n</b>, char *pbeg_arg = 0);\nstrstreambuf(signed char* gnext_arg, <b>streamsize n</b>,\n   signed char *pbeg_arg = 0);\nstrstreambuf(unsigned char* gnext_arg, <b>streamsize n</b>,\n   unsigned char *pbeg_arg = 0);\n</code></pre>\n<p>and says:</p>\n<blockquote>\n<p id=\"so_24482028_24482042_1\">gnext_arg shall point to the first element of an array object whose\n  number of elements N is determined as follows:</p>\n</blockquote>\n<p>and we can see from the following discussion that <code>n</code> which is of type <code>streamsize</code> is indeed required to be able to take on a negative value:</p>\n<blockquote>\n<p id=\"so_24482028_24482042_2\">\u2014 If n &gt; 0, N is n.</p>\n<p id=\"so_24482028_24482042_3\">\u2014 If n == 0, N is std::strlen(gnext_arg).</p>\n<p id=\"so_24482028_24482042_4\">\u2014 <strong>If n &lt; 0, N is INT_MAX</strong>.<sup>336</sup></p>\n</blockquote>\n<p>This seems like a poor argument for this requirement and the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2942.html#255\">closed issue 255</a> has a similar comment from <em>Howard Hinnant</em> which says:</p>\n<blockquote>\n<p id=\"so_24482028_24482042_5\">This is something of a nit, but I'm wondering if streamoff wouldn't be\n  a better choice than streamsize. The argument to pbump and gbump MUST\n  be signed. [...] This seems a little weak for the argument to pbump\n  and gbump. Should we ever really get rid of strstream, this footnote\n  might go with it, along with the reason to make streamsize signed.</p>\n</blockquote>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2014-06-30T03:36:45.980", "Score": "16", "CreationDate": "2014-06-30T01:56:46.147", "ParentId": "24482028", "CommentCount": "8", "OwnerUserId": "1708801", "LastEditDate": "2014-06-30T03:36:45.980"}, "24482028": {"ViewCount": "2654", "Body": "<p>According to <a href=\"http://en.cppreference.com/w/cpp/io/streamsize\">http://en.cppreference.com/w/cpp/io/streamsize</a></p>\n<blockquote>\n<p id=\"so_24482028_24482028_0\">The type std::streamsize is a signed integral type used to represent\n  the number of characters transferred in an I/O operation or the size\n  of an I/O buffer.</p>\n</blockquote>\n<p>As far as I can imagine, a stream's size can never be negative, so, my question is:</p>\n<p>Why is <code>std::streamsize</code> defined as <em>signed</em> rather than <em>unsigned</em>? What's the rationale behind?</p>\n", "AcceptedAnswerId": "24482042", "Title": "Why is std::streamsize defined as signed rather than unsigned?", "CreationDate": "2014-06-30T01:53:27.833", "Id": "24482028", "CommentCount": "0", "FavoriteCount": "4", "PostTypeId": "1", "LastEditDate": "2014-06-30T09:26:15.660", "LastEditorUserId": "1708801", "LastActivityDate": "2014-06-30T09:26:15.660", "Score": "22", "OwnerUserId": "508343", "Tags": "<c++><iostream><language-lawyer><unsigned><signed>", "AnswerCount": "1"}});