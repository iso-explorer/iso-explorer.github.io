post_cb({"30850534": {"Id": "30850534", "PostTypeId": "2", "Body": "<p><code>argv[0]</code> not only shows the name of file but also shows you the path, exmaple if you run the program without having changed the directory to the programs directory an output like below would show up(windows):</p>\n<p><code>C:\\Users\\username\\desktop\\program.exe</code>.</p>\n<p>On linux, like your example outputs <code>./a.out</code> where <code>./</code> represents current directory.</p>\n", "LastActivityDate": "2015-06-15T16:43:05.190", "CommentCount": "0", "CreationDate": "2015-06-15T16:43:05.190", "ParentId": "30850094", "Score": "0", "OwnerUserId": "3677097"}, "30850142": {"Id": "30850142", "PostTypeId": "2", "Body": "<p>Whenever you call your program from the command line, its 0th argument is going to be the name of the file/command itself. So basically, the arguments you have passed are from the first member of the array onwards.</p>\n<p>If you include </p>\n<pre><code>cout &lt;&lt; argv[3]\n</code></pre>\n<p>you will get what you are expecting.</p>\n", "LastActivityDate": "2015-06-15T16:21:09.420", "CommentCount": "5", "CreationDate": "2015-06-15T16:21:09.420", "ParentId": "30850094", "Score": "-1", "OwnerUserId": "4396876"}, "30850121": {"Id": "30850121", "PostTypeId": "2", "Body": "<p>Yes, that is expected behavior. From [basic.start.main], emphasis mine:</p>\n<blockquote>\n<p id=\"so_30850094_30850121_0\">If <code>argc</code> is nonzero these arguments\n  shall be supplied in <code>argv[0]</code> through <code>argv[argc-1]</code> as pointers to the initial characters of null-terminated\n  multibyte strings (ntmbs s) (17.5.2.1.4.2) and <code>argv[0]</code> <strong>shall be the pointer to the initial character of a\n  ntmbs that represents the name used to invoke the program or \"\"</strong>. The value of <code>argc</code> shall be non-negative.\n  The value of <code>argv[argc]</code> shall be <code>0</code>.</p>\n</blockquote>\n", "LastActivityDate": "2015-06-15T16:20:05.137", "CommentCount": "2", "CreationDate": "2015-06-15T16:20:05.137", "ParentId": "30850094", "Score": "2", "OwnerUserId": "2069064"}, "30850094": {"ViewCount": "62", "Body": "<p>I tried to print the arguments passed through the command line as follows:</p>\n<pre><code>#include&lt;iostream&gt;\n\nint main(int argc, char ** argv)\n{\n    std::cout &lt;&lt; argv[0] &lt;&lt; std::endl;\n    std::cout &lt;&lt; argv[1] &lt;&lt; std::endl;\n    std::cout &lt;&lt; argv[2] &lt;&lt; std::endl;\n}\n</code></pre>\n<p>but failed. The output was:</p>\n<pre><code>./a.out\nfirst\nsecond\n</code></pre>\n<p><strong><a href=\"http://coliru.stacked-crooked.com/a/7743f81c97249fb6\" rel=\"nofollow\">DEMO</a></strong></p>\n<p>It wasn't what I expected. I expected something like that:</p>\n<pre><code>first\nsecond\n__some_garbage_data__    \n</code></pre>\n<p>Is the binary name always treated as an argument with the index <code>0</code>? </p>\n", "AcceptedAnswerId": "30850121", "Title": "Printing arguments passed through the command line", "CreationDate": "2015-06-15T16:18:25.800", "Id": "30850094", "CommentCount": "4", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "LastActivityDate": "2015-06-15T16:43:05.190", "Score": "0", "Tags": "<c++>", "AnswerCount": "5"}, "bq_ids": {"n4140": {"so_30850094_30850121_0": {"length": 25, "quality": 0.8333333333333334, "section_id": 7146}}, "n3337": {"so_30850094_30850121_0": {"length": 25, "quality": 0.8333333333333334, "section_id": 6890}}, "n4659": {"so_30850094_30850121_0": {"length": 25, "quality": 0.8333333333333334, "section_id": 8647}}}, "30850221": {"Id": "30850221", "PostTypeId": "2", "Body": "<p>arg[0] stores name of program called and after that argv stores the arguments that were passed in the command line.</p>\n<p>$./a.out hello hi</p>\n<pre><code> 0     1   2\n</code></pre>\n<p>So </p>\n<pre><code> argv[0]=a.out\n argv[1]=hello\n argv[2]=hi\n</code></pre>\n", "LastActivityDate": "2015-06-15T16:24:54.373", "CommentCount": "0", "CreationDate": "2015-06-15T16:24:54.373", "ParentId": "30850094", "Score": "0", "OwnerUserId": "4958370"}, "30850144": {"Id": "30850144", "PostTypeId": "2", "Body": "<p>In most languages the first argument is the program itself. In your case, argv[0] will always print ./a.out</p>\n", "LastActivityDate": "2015-06-15T16:21:13.120", "CommentCount": "0", "CreationDate": "2015-06-15T16:21:13.120", "ParentId": "30850094", "Score": "1", "OwnerUserId": "3729695"}});