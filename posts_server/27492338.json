post_cb({"bq_ids": {"n4140": {"so_27492338_27492474_0": {"length": 12, "quality": 1.0, "section_id": 3665}, "so_27492338_27492474_2": {"length": 6, "quality": 0.75, "section_id": 3665}}, "n3337": {"so_27492338_27492474_0": {"length": 12, "quality": 1.0, "section_id": 3527}, "so_27492338_27492474_2": {"length": 6, "quality": 0.75, "section_id": 3527}}, "n4659": {"so_27492338_27492474_0": {"length": 12, "quality": 1.0, "section_id": 4429}, "so_27492338_27492474_2": {"length": 6, "quality": 0.75, "section_id": 4429}}}, "27492338": {"ViewCount": "164", "Body": "<p>I'm generating a sequence of random numbers with std::mt19937_64. I've noticed that, when run with GCC and Clang on the same platform with the same seed, I obtain a different sequence. I've run the program through Valgrind and found no uninitialized memory. </p>\n<p>Is there any guarantee to reproducibility across compilers or across platforms with std::mt19937_64?</p>\n<p>Edit: Running with std::normal_distribution</p>\n", "AcceptedAnswerId": "27492474", "Title": "Mersenne Twister Reproducibility across Compilers", "CreationDate": "2014-12-15T20:13:28.887", "Id": "27492338", "CommentCount": "3", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2014-12-15T20:23:24.133", "LastEditorUserId": "1599766", "LastActivityDate": "2014-12-15T20:47:24.420", "ClosedDate": "2014-12-16T00:41:23.817", "Score": "7", "OwnerUserId": "1599766", "Tags": "<c++><random><c++-standard-library>", "AnswerCount": "1"}, "27492474": {"Id": "27492474", "PostTypeId": "2", "Body": "<p>The numbers that engines generate are guaranteed to be reproducible across implementations, but the distributions are not. (source: <a href=\"http://channel9.msdn.com/Events/GoingNative/2013/rand-Considered-Harmful\" rel=\"nofollow noreferrer\">rand() considered harmful</a>).</p>\n<p>The N3337 standard draft says this about <code>normal_distribution</code> (26.5.8.5.1):</p>\n<blockquote>\n<p id=\"so_27492338_27492474_0\">A normal_distribution random number distribution produces random numbers x distributed according to the probability density function </p>\n<p id=\"so_27492338_27492474_1\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/HdPXf.png\"/></p>\n<p id=\"so_27492338_27492474_2\">The distribution parameters \u00b5 and \u03c3 are also known as this distribution\u2019s mean and standard deviation</p>\n</blockquote>\n<p>And... that's it. It doesn't specify the order of the generated numbers, nor algorithm, nor example outputs.</p>\n<p>The standard is very elaborate about <code>mersenne_twister_engine</code> (26.5.3.2), it specifies the state transition function, initial seeding algorithm and so on.</p>\n", "LastEditorUserId": "1012936", "LastActivityDate": "2014-12-15T20:47:24.420", "Score": "10", "CreationDate": "2014-12-15T20:23:32.733", "ParentId": "27492338", "CommentCount": "4", "OwnerUserId": "1012936", "LastEditDate": "2014-12-15T20:47:24.420"}});