post_cb({"bq_ids": {"n4140": {"so_22049889_22050083_0": {"length": 52, "quality": 0.9454545454545454, "section_id": 5343}}, "n3337": {"so_22049889_22050083_0": {"length": 52, "quality": 0.9454545454545454, "section_id": 5140}}, "n4659": {"so_22049889_22050083_0": {"length": 38, "quality": 0.6909090909090909, "section_id": 6765}}}, "22050083": {"Id": "22050083", "PostTypeId": "2", "Body": "<pre><code>std::cout &lt;&lt; \"\\nThe value you entered doubled is: \" &lt;&lt; refvar &lt;&lt; '.\\n';\n                                                                 ^^^^^\n                                                                   |\n                                                         multicharacter literal\n</code></pre>\n<p>It's a multicharacter literal, and has a type of <code>int</code>.</p>\n<blockquote>\n<h3>C++11 \u00a72.13.2 Character literals</h3>\n<p id=\"so_22049889_22050083_0\">A character literal is one or more characters enclosed in single quotes, as in <code>\u2019x\u2019</code>, optionally preceded by the letter <code>L</code>, as in <code>L\u2019x\u2019</code>. A character literal that does not begin with <code>L</code> is an ordinary character literal, also referred to as a narrow-character literal. An ordinary character literal that contains a single c-char has type char, with value equal to the numerical value of the encoding of the c-char in the execution character set. <strong>An ordinary character literal that contains more than one c-char is a multicharacter literal. A multicharacter literal has type <code>int</code> and implementation-defined value.</strong></p>\n</blockquote>\n<p>Check out this post: <a href=\"https://stackoverflow.com/questions/19394141/why-does-this-code-with-1234-compile-in-c\">Why does this code with '1234' compile in C++?</a>.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2014-02-26T18:30:42.003", "Score": "3", "CreationDate": "2014-02-26T18:30:42.003", "ParentId": "22049889", "CommentCount": "0", "OwnerUserId": "2589776", "LastEditDate": "2017-05-23T10:31:57.773"}, "22049889": {"ViewCount": "122", "Body": "<h1>About the Program</h1>\n<p>The program takes a number the user entered and outputs that number doubled. I created two functions, one that gathers the number (getnumber), and another that doubles it (doublenumber). The program does work properly; however, the output is not completely accurate.</p>\n<h1>The Problem</h1>\n<p>The output is only right partially. I.e the user enters 50, the value is doubled and the output should be 100. Instead, the value outputs as 100114. Only the first few numbers seem to be what I want.</p>\n<h1>Source Code:</h1>\n<pre><code>#include &lt;iostream&gt;\n\nvoid doublenumber(int&amp;);\nvoid getnumber(int&amp;);\n\nint main() {\n\nint value;\n\ngetnumber(value);\ndoublenumber(value);\n\nstd::cin.get();\nstd::cin.get();\n\n\nreturn 0;\n}\n\nvoid doublenumber(int &amp;refvar) {\n\n    refvar*= 2;\n    std::cout &lt;&lt; \"\\nThe value you entered doubled is: \" &lt;&lt; refvar &lt;&lt; '.\\n';\n\n}\n\nvoid getnumber(int &amp;userNum) {\n\n    std::cout &lt;&lt; \"\\nEnter a number to double: \";\n    std::cin &gt;&gt; userNum;\n}\n</code></pre>\n", "AcceptedAnswerId": "22050083", "Title": "Double Number Program Unexpected Values", "CreationDate": "2014-02-26T18:20:58.360", "Id": "22049889", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2014-02-26T18:30:42.003", "Score": "0", "OwnerUserId": "2984806", "Tags": "<c++><function><pass-by-reference>", "AnswerCount": "2"}, "22049956": {"Id": "22049956", "PostTypeId": "2", "Body": "<p>I have answered my own question after carefully looking over the code. Ugh! A very simple mistake at:</p>\n<pre><code> std::cout &lt;&lt; \"\\nThe value you entered doubled is: \" &lt;&lt; refvar &lt;&lt; '.\\n';\n</code></pre>\n<p>The \"'.\\n'\" should be: \".\\n\";\" instead. Could someone tell me why this produced this output though?</p>\n", "LastActivityDate": "2014-02-26T18:23:49.357", "CommentCount": "1", "CreationDate": "2014-02-26T18:23:49.357", "ParentId": "22049889", "Score": "1", "OwnerUserId": "2984806"}});