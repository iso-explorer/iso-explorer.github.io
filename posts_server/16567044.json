post_cb({"16567044": {"CommentCount": "0", "ViewCount": "187", "CreationDate": "2013-05-15T13:56:52.293", "LastActivityDate": "2013-05-15T14:00:00.817", "Title": "C++11 type of variable in expression?", "AcceptedAnswerId": "16567138", "PostTypeId": "1", "Id": "16567044", "Score": "1", "Body": "<p>In C++11 I'm somewhat confused about the difference between the types <code>T</code> and <code>reference to T</code> as they apply to expressions that name variables.  Specifically consider:</p>\n<pre><code>int main()\n{\n    int x = 42;\n    int&amp; y = x;\n\n    x; // (1)\n    y; // (2)\n}\n</code></pre>\n<p>What is the type of the expression <code>x</code> in (1) in the above?  Is it <code>int</code> or <code>lvalue reference to int</code> ?  (Its value category is clearly an <code>lvalue</code>, but this is separate from its type)</p>\n<p>Likewise what is the type of the expression <code>y</code> at (2) in the above?  Is it <code>int</code> or <code>lvalue reference to int</code> ?</p>\n<p>It says in 5.1.1.8:</p>\n<blockquote>\n<p id=\"so_16567044_16567044_0\">The type of [an identifier primary expression] is the type of the identi\ufb01er.\n  The result is the entity denoted by the identi\ufb01er. The result is an lvalue if the entity is a function, variable, or data member and a prvalue otherwise.</p>\n</blockquote>\n", "Tags": "<c++><c++11>", "OwnerUserId": "1131467", "AnswerCount": "2"}, "16567075": {"ParentId": "16567044", "CommentCount": "0", "Body": "<p>The expression denotes an <em>lvalue</em> of type <code>int</code>, in both cases. An expression cannot be a <em>reference</em>, although you can <em>bind</em> the result of an expression with an <em>lvalue</em> or <em>rvalue</em> reference.</p>\n", "OwnerUserId": "36565", "PostTypeId": "2", "Id": "16567075", "Score": "2", "CreationDate": "2013-05-15T13:57:59.620", "LastActivityDate": "2013-05-15T13:57:59.620"}, "16567138": {"ParentId": "16567044", "CommentCount": "3", "Body": "<p>The bit you're missing is this (\u00a75/5):</p>\n<blockquote>\n<p id=\"so_16567044_16567138_0\">If an expression initially has the type \u201creference to <code>T</code>\u201d (8.3.2, 8.5.3), the type is adjusted to <code>T</code> prior to any further analysis.</p>\n</blockquote>\n<p>So although the identifier <code>y</code> has type <code>int&amp;</code>, the expression <code>y</code> has type <code>int</code>. An expression never has reference type, so the type of both of your expressions is <code>int</code>.</p>\n", "OwnerUserId": "150634", "PostTypeId": "2", "Id": "16567138", "Score": "7", "CreationDate": "2013-05-15T14:00:00.817", "LastActivityDate": "2013-05-15T14:00:00.817"}, "bq_ids": {"n4140": {"so_16567044_16567138_0": {"section_id": 5938, "quality": 0.8181818181818182, "length": 9}, "so_16567044_16567044_0": {"section_id": 5954, "quality": 0.6818181818181818, "length": 15}}, "n3337": {"so_16567044_16567138_0": {"section_id": 5710, "quality": 0.8181818181818182, "length": 9}, "so_16567044_16567044_0": {"section_id": 5724, "quality": 0.6818181818181818, "length": 15}}, "n4659": {"so_16567044_16567138_0": {"section_id": 7422, "quality": 0.8181818181818182, "length": 9}, "so_16567044_16567044_0": {"section_id": 7441, "quality": 0.6363636363636364, "length": 14}}}});