post_cb({"bq_ids": {"n4140": {"so_26806857_26806985_2": {"length": 23, "quality": 0.6388888888888888, "section_id": 3336}}, "n3337": {"so_26806857_26806985_2": {"length": 32, "quality": 0.8888888888888888, "section_id": 3206}}}, "26806985": {"PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_26806857_26806985_0\">Are there specific scenarios where binding temporary to non-const reference is allowed.</p>\n</blockquote>\n<p>For lvalue-references (that is, the type <code>T&amp;</code>) there isn't. You can't bind a temporary to a non-const lvalue-reference because it doesn't make much sense to modify, say, a literal like <code>42</code>. They can bind to <em>const</em> lvalue-references because then a promise has been made <em>not</em> to modify the object to which the reference is bound.</p>\n<p>They can in fact bind to <a href=\"http://en.cppreference.com/w/cpp/language/reference\" rel=\"nofollow\"><em>rvalue</em>-references</a> (<code>T&amp;&amp;</code>), but that's unrelated to this thread.</p>\n<blockquote>\n<p id=\"so_26806857_26806985_1\">If there are then what factors are taken into account while allowing these exceptions.</p>\n</blockquote>\n<p>It is true that temporaries cannot bind to non-const lvalue-references, but there's a certain provision made for exception objects:</p>\n<p>Taken from the C++11 standard (closest draft <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf\" rel=\"nofollow\">n3337</a>):</p>\n<blockquote>\n<p id=\"so_26806857_26806985_2\">\u00a715.1/3 A <em>throw-expression</em> initializes a temporary object, called the\n  <em>exception object</em>, the type of which is determined by removing any top-level cv-qualifiers from the static type of the operand of throw\n  and adjusting the type from \u201carray of T\u201d or \u201cfunction returning T\u201d to\n  \u201cpointer to T\u201d or \u201cpointer to function returning T\u201d, respectively. <strong>The\n  temporary is an lvalue and is used to initialize the variable named in\n  the matching <em>handler</em></strong> (15.3). <em>[..]</em></p>\n</blockquote>\n<p><sub>emphasis mine</sub></p>\n<p><a href=\"http://en.cppreference.com/w/cpp/language/throw\" rel=\"nofollow\">cppreference</a> simplifies this into:</p>\n<blockquote>\n<p id=\"so_26806857_26806985_3\">Unlike other temporary objects, the exception object is considered to be an lvalue argument when initializing the catch clause parameters, so it can be caught by lvalue reference, modified, and rethrown.</p>\n</blockquote>\n<p>So for this case you can in fact bind the exception to a non-const lvalue-reference.</p>\n", "LastEditorDisplayName": "user3920237", "LastActivityDate": "2014-11-07T18:01:05.187", "Id": "26806985", "CommentCount": "4", "CreationDate": "2014-11-07T17:43:33.273", "ParentId": "26806857", "Score": "2", "OwnerUserId": "701092", "LastEditDate": "2014-11-07T18:01:05.187"}, "26806857": {"ViewCount": "191", "Body": "<p>I have always read that temporaries are allowed to bind only with non-const reference arguments in case of function calls..</p>\n<p>CASE 1:-</p>\n<p>For example:-</p>\n<pre><code>class Simple{\n    public: \n       int i;\n       Simple(Simple &amp;f)\n       {\n         i = f.i + 1;\n       }\n       Simple(int j)\n       {\n         i = j;\n       }\n  };\n\nint main()\n{\n   Simple f1 = Simple(2);   // error no matching call fruit::fruit(fruit)...\n   return 0;\n}\n</code></pre>\n<p>This would give me error as I am trying to bind temporary with non-const reference arguments.</p>\n<p>CASE 2:-</p>\n<pre><code>try\n{\n throw e;\n}\ncatch ( exception&amp; e )\n{\n}\n</code></pre>\n<p>I have learnt when we throw an exception what really get passed to catch is the copy of original exception thrown i.e a temporary is created for the object thrown and then this would be passed to catch clause.</p>\n<p>What catch is doing is catching this exception by non-const reference. This is in contrast to what I have shown in CASE 1.</p>\n<p>So, my questions are:-</p>\n<p>1) Are there specific scenarios where binding temporary to non-const reference is allowed.</p>\n<p>2) If there are then what factors are taken into account while allowing these exceptions.</p>\n", "Title": "Binding temporaries to non-const references in case of exceptions", "CreationDate": "2014-11-07T17:33:54.163", "LastActivityDate": "2014-11-07T18:01:05.187", "CommentCount": "1", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2014-11-07T17:41:04.457", "LastEditorUserId": "4047092", "Id": "26806857", "Score": "1", "OwnerUserId": "4047092", "Tags": "<c++><temporary-objects>", "AnswerCount": "1"}});