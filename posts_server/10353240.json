post_cb({"10353240": {"ViewCount": "1803", "Body": "<p>Generally we declare the array in following format:</p>\n<pre><code>DataType array_name[SIZE];\n</code></pre>\n<p>SO If I tried creating 0 length array for e.g.</p>\n<pre><code>int arr[0]; //Line#1\narr[0] = 5; //Line#2\n</code></pre>\n<p>I do not get any error when above code is executed.In this case is memory allocated for single integer? </p>\n", "AcceptedAnswerId": "10353341", "Title": "Array of zero size?", "CreationDate": "2012-04-27T15:15:06.020", "Id": "10353240", "CommentCount": "6", "PostTypeId": "1", "LastActivityDate": "2012-04-27T15:28:21.300", "Score": "1", "OwnerUserId": "892759", "Tags": "<c++><arrays><size>", "AnswerCount": "2"}, "10353341": {"Id": "10353341", "PostTypeId": "2", "Body": "<p><strong>Why does the Line#1 not generate any compilation error?</strong><br>\nIdeally, it should!<br>\nIt is not legal code to create an array of size <code>0</code> on local storage.<br>\nIdeally, the compiler should issue you an error, probably some compiler extension allows this to compile but as per the standard this is not a valid code.Try compiling with <code>-pedantic</code>.</br></br></br></p>\n<p>Reference:    </p>\n<p><strong>C++03 Standard 8.3.4/1:</strong> </p>\n<blockquote>\n<p id=\"so_10353240_10353341_0\">If the _constant-expression+ (5.19) is present, it shall be an integral constant expression and its value shall be greater than zero.    </p>\n</blockquote>\n<p>Further,<br>\n<strong>Why does the Line#2 not generate any compilation error?</strong><br>\nBecause writing beyond the bounds of an allocated array is <strong>Undefined Behavior</strong>. An Undefined Behavior does not need the compiler to provide you any diagnostic. Note that once the code exhibits an Undefined Behavior literally anything can happen and all bets are off.</br></br></p>\n", "LastEditorUserId": "452307", "LastActivityDate": "2012-04-27T15:28:21.300", "Score": "6", "CreationDate": "2012-04-27T15:21:13.223", "ParentId": "10353240", "CommentCount": "4", "OwnerUserId": "452307", "LastEditDate": "2012-04-27T15:28:21.300"}, "10353276": {"Id": "10353276", "PostTypeId": "2", "Body": "<p>You don't get any error because C/C++ doesn't do any range checking on arrays.  <code>arr[10000000]</code> wouldn't give you can compile error either.</p>\n<p>What happens is you are writing to some memory some where on the stack that isn't part of <code>arr</code> and who knows what will happen.  It could result in an access violate and crash or randomly corrupt some other data structure.</p>\n<p>That's a buffer overflow.</p>\n", "LastActivityDate": "2012-04-27T15:18:09.527", "CommentCount": "1", "CreationDate": "2012-04-27T15:18:09.527", "ParentId": "10353240", "Score": "4", "OwnerUserId": "161455"}, "bq_ids": {"n4140": {"so_10353240_10353341_0": {"length": 8, "quality": 0.7272727272727273, "section_id": 3228}}, "n3337": {"so_10353240_10353341_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 3101}}, "n4659": {"so_10353240_10353341_0": {"length": 8, "quality": 0.7272727272727273, "section_id": 3985}}}});