post_cb({"bq_ids": {"n4140": {"so_6151558_6151580_0": {"length": 7, "quality": 0.875, "section_id": 3269}, "so_6151558_6151580_2": {"length": 6, "quality": 0.8571428571428571, "section_id": 3269}}, "n3337": {"so_6151558_6151580_0": {"length": 7, "quality": 0.875, "section_id": 3141}, "so_6151558_6151580_2": {"length": 6, "quality": 0.8571428571428571, "section_id": 3141}}, "n4659": {"so_6151558_6151580_0": {"length": 7, "quality": 0.875, "section_id": 4027}, "so_6151558_6151580_2": {"length": 6, "quality": 0.8571428571428571, "section_id": 4027}}}, "6151599": {"Id": "6151599", "PostTypeId": "2", "Body": "<p>As @Prasoon says, there's no standard way.<br>\nFor Visual Studio, <code>__FUNCTION__</code> displays the fully qualified name.</br></p>\n", "LastActivityDate": "2011-05-27T11:27:59.543", "Score": "3", "CreationDate": "2011-05-27T11:27:59.543", "ParentId": "6151558", "CommentCount": "1", "OwnerUserId": "500104"}, "6151580": {"Id": "6151580", "PostTypeId": "2", "Body": "<p>There is no standard defined way for the same. However if you are using gcc you can use <code>__PRETTY_FUNCTION__</code> instead of <code>__func__</code>.</p>\n<p>Standard C++ (i.e C++03) does not have either <code>__func__</code> or <code>__PRETTY_FUNCTION__</code>.</p>\n<p>C++0x derives <code>__func__</code> from C99 and it is defined in 8.4.2/8 (n3290)</p>\n<blockquote>\n<p id=\"so_6151558_6151580_0\">The function-local predefined variable <code>__func__</code> is defined as if a definition of the form</p>\n<p id=\"so_6151558_6151580_1\"><code>static const char __func__[] = \"function-name \";</code></p>\n<p id=\"so_6151558_6151580_2\">had been provided, where function-name is an implementation-defined string</p>\n</blockquote>\n", "LastEditorUserId": "165520", "LastActivityDate": "2011-05-27T11:34:45.173", "Score": "9", "CreationDate": "2011-05-27T11:26:31.977", "ParentId": "6151558", "CommentCount": "4", "LastEditDate": "2011-05-27T11:34:45.173", "OwnerUserId": "165520"}, "6151558": {"ViewCount": "806", "Body": "<pre><code>#include &lt;iostream&gt;\nclass A{\n    public:\n    void myfunction(){\n        std::cout &lt;&lt; __func__; \n    }\n};\nint main(){\n    A obj;\n    obj.myfunction();\n}\n</code></pre>\n<p>Output is <code>myfunction</code>. Unfortunately <code>__funct__</code> does not work. How to output the fully qualified name of the member function i.e <code>A::myfunction</code> ?</p>\n", "AcceptedAnswerId": "6151580", "Title": "Displaying fully qualified name of the function", "CreationDate": "2011-05-27T11:24:45.830", "Id": "6151558", "CommentCount": "0", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2011-05-27T11:25:27.437", "LastEditorUserId": "500104", "LastActivityDate": "2011-05-27T11:34:45.173", "Score": "6", "OwnerUserId": "772811", "Tags": "<c++><function>", "AnswerCount": "2"}});