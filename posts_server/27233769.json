post_cb({"bq_ids": {"n4140": {"so_27233769_27233848_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 3270}, "so_27233769_27233769_8": {"length": 10, "quality": 1.0, "section_id": 3276}, "so_27233769_27233769_4": {"length": 30, "quality": 1.0, "section_id": 3270}, "so_27233769_27233769_2": {"length": 6, "quality": 1.0, "section_id": 3270}}, "n3337": {"so_27233769_27233848_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 3142}, "so_27233769_27233769_8": {"length": 10, "quality": 1.0, "section_id": 3147}, "so_27233769_27233769_4": {"length": 30, "quality": 1.0, "section_id": 3142}, "so_27233769_27233769_2": {"length": 6, "quality": 1.0, "section_id": 3142}}, "n4659": {"so_27233769_27233848_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 4028}, "so_27233769_27233769_8": {"length": 10, "quality": 1.0, "section_id": 4034}, "so_27233769_27233769_4": {"length": 30, "quality": 1.0, "section_id": 4028}, "so_27233769_27233769_2": {"length": 6, "quality": 1.0, "section_id": 4028}}}, "27233798": {"Id": "27233798", "PostTypeId": "2", "Body": "<p>Because only special member functions have well-defined \"default\" definitions, generated implicitly if you don't declare the function or any other function that would inhibit it.</p>\n<p>If I were to write</p>\n<pre><code>int f() = default;\n</code></pre>\n<p>what would you expect the function to do?</p>\n", "LastActivityDate": "2014-12-01T17:25:19.953", "CommentCount": "2", "CreationDate": "2014-12-01T17:25:19.953", "ParentId": "27233769", "Score": "4", "OwnerUserId": "204847"}, "27233769": {"ViewCount": "285", "Body": "<p>Previously:</p>\n<ul>\n<li><p><a href=\"https://stackoverflow.com/q/24676081/3920237\">Can non-special C++ member functions be deleted (or defaulted)?</a></p></li>\n<li><p><a href=\"https://stackoverflow.com/q/2875333/3920237\">Can any function be a deleted-function?</a></p></li>\n</ul>\n<p>We know that only special member functions may be defaulted, but any function can be deleted. </p>\n<p><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf\" rel=\"nofollow noreferrer\">N3337</a>:</p>\n<p>[dcl.fct.def.default]</p>\n<blockquote>\n<p id=\"so_27233769_27233769_0\">A function definition of the form:</p>\n<p id=\"so_27233769_27233769_1\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<em>attribute-specifier-seq</em><sub>opt</sub>\n<em>decl-specifier-seq</em><sub>opt</sub> <em>declarator</em> = default ;</p>\n<p id=\"so_27233769_27233769_2\">is called an <em>explicitly-defaulted</em> definition. A function that is\n  explicitly defaulted shall</p>\n<p id=\"so_27233769_27233769_3\">\u2014 be a special member function,</p>\n<p id=\"so_27233769_27233769_4\">\u2014 have the same declared function type (except for possibly differing\n  <em>ref-qualifiers</em> and except that in the case of a copy constructor or copy assignment operator, the parameter type may be \u201creference to\n  non-const <code>T</code>\u201d, where <code>T</code> is the name of the member function\u2019s class)\n  as if it had been implicitly declared, and</p>\n<p id=\"so_27233769_27233769_5\">\u2014 not have default arguments.</p>\n</blockquote>\n<p>[dcl.fct.def.delete]</p>\n<blockquote>\n<p id=\"so_27233769_27233769_6\">A function definition of the form:</p>\n<p id=\"so_27233769_27233769_7\">\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<em>attribute-specifier-seq</em><sub>opt</sub>\n<em>decl-specifier-seq</em><sub>opt</sub> <em>declarator</em> = delete ;</p>\n<p id=\"so_27233769_27233769_8\">is called a <em>deleted definition</em>. A function with a deleted definition\n  is also called a <em>deleted function</em>.</p>\n</blockquote>\n<p>My question is, why is this so? If the standard can allow any function to be deleted, I don't see the harm in allowing any function to be defaulted. <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2210.html\" rel=\"nofollow noreferrer\">n2210</a>'s wording seems to imply that defaulted free functions would be allowed. For example, </p>\n<p>Under <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2210.html#changes\" rel=\"nofollow noreferrer\">Changes to the Standard</a>, it says:</p>\n<blockquote>\n<p id=\"so_27233769_27233769_9\">[...]</p>\n<p id=\"so_27233769_27233769_10\">Add a new paragraph 7.</p>\n<blockquote>\n<p id=\"so_27233769_27233769_12\">A function definition of \"=default;\", called an explicitly defaulted definition, has exactly the implementation of an implicit default\n    definition (12.1, 12.4, 12.8). [ <em>Note</em>: Member functions with\n    explicitly defaulted definitions outside the class definition must\n    also be declared within the class definition. \u2014 <em>end note</em> ] Unlike with\n    an implicit default definition, the explicitly defaulted definition\n    may be non-inline. [...]</p>\n</blockquote>\n</blockquote>\n<p>3 years later, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3053.html#dcl.fct.def.default\" rel=\"nofollow noreferrer\">N3025</a> already establishes the language that resembles the final draft, and explicitly restricts defaulted functions to be special member functions. Is there a paper in that 3 year gap or some rationale that explains this?</p>\n", "Title": "Why can you delete any function, but only default special member functions?", "CreationDate": "2014-12-01T17:23:02.797", "Id": "27233769", "CommentCount": "1", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2017-05-23T12:06:33.583", "OwnerDisplayName": "user3920237", "ClosedDate": "2014-12-01T17:35:24.967", "LastActivityDate": "2014-12-01T17:33:01.883", "AnswerCount": "2", "Score": "0", "Tags": "<c++><c++11><standards>", "LastEditorUserId": "-1"}, "27233848": {"Id": "27233848", "PostTypeId": "2", "Body": "<p>The logic hasn't changed at all, only the wording.  Look at the original</p>\n<blockquote>\n<p id=\"so_27233769_27233848_0\">A function definition of \"=default;\", called an explicitly defaulted definition, has exactly the implementation of an implicit default definition</p>\n</blockquote>\n<p>Only special member functions have \"an implicit default definition\".  Trying to explicitly default any other function is ill-defined, because it's defined in terms of something that doesn't exist (the implicit default definition).</p>\n", "LastActivityDate": "2014-12-01T17:28:47.843", "CommentCount": "0", "CreationDate": "2014-12-01T17:28:47.843", "ParentId": "27233769", "Score": "1", "OwnerUserId": "103167"}});