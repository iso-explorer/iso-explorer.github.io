post_cb({"bq_ids": {"n4140": {"so_31502894_31502943_0": {"length": 37, "quality": 0.8809523809523809, "section_id": 3291}}, "n4659": {"so_31502894_31502943_0": {"length": 37, "quality": 0.8809523809523809, "section_id": 4053}}}, "31502943": {"Id": "31502943", "PostTypeId": "2", "LastEditDate": "2015-07-19T15:55:15.743", "CommentCount": "5", "LastEditorUserId": "3002139", "LastActivityDate": "2015-07-19T15:55:15.743", "CreationDate": "2015-07-19T15:41:55.337", "ParentId": "31502894", "Score": "3", "Body": "<p>You read uninitialized memory. This is undefined behavior. That means the C++ language rules give literally no guarantee what happens when you run this code, at all. You may see the values you observed, nothing at all, crash your PC or set your house on fire. All equally legal outcomes of running this code.</p>\n<p>In practice this will only print unpredictable garbage values in the range of <code>int</code> of course, dependent on what just happens to be left over in your memory and do nothing interesting.</p>\n<p>Proof from the standard (N4140) for the non-believers:</p>\n<blockquote>\n<p id=\"so_31502894_31502943_0\">When storage for an object\n  with automatic or dynamic storage duration is obtained, the object has an indeterminate value, and if\n  no initialization is performed for the object, that object retains an indeterminate value until that value is\n  replaced (5.17). [ Note: Objects with static or thread storage duration are zero-initialized, see 3.6.2. \u2014\n  end note ] <strong>If an indeterminate value is produced by an evaluation, the behavior is undefined</strong> except in the\n  following cases:</p>\n</blockquote>\n<p>[8.5 (12)], emphasize mine, the exceptions following this don't apply.</p>\n", "OwnerUserId": "3002139"}, "31503066": {"Id": "31503066", "PostTypeId": "2", "LastEditDate": "2015-07-19T16:54:07.703", "CommentCount": "0", "LastEditorUserId": "16287", "LastActivityDate": "2015-07-19T16:54:07.703", "CreationDate": "2015-07-19T15:54:27.463", "ParentId": "31502894", "Score": "2", "Body": "<p>It's an unchecked coincidence in a <strong>highly</strong> complex system.</p>\n<p>That may be the best answer you'll get regarding why uninitialized memory in your computer is showing you the pattern you see.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Butterfly_effect\" rel=\"nofollow\">See also...</a></p>\n", "OwnerUserId": "16287"}, "31503006": {"Id": "31503006", "PostTypeId": "2", "Body": "<p>The c++ statement <code>new int</code> allocates memory from the heap but it doesn't initialize it. So whatever was on the heap or memory from before is being read. You have to do <code>int *b = new int(0)</code> to initialize what b is pointing to with 0. </p>\n", "Score": "0", "LastActivityDate": "2015-07-19T15:47:09.013", "CreationDate": "2015-07-19T15:47:09.013", "ParentId": "31502894", "CommentCount": "3", "OwnerUserId": "5087437"}, "31502894": {"ViewCount": "144", "Body": "<p>I am getting different values for the a variable which is an int.\nAlthough I know I am not initializing it, the value changes from 32767 32766 32765 and 32764  for variable a (with code version 1) and its always 0 with code version 2.\nI know I don't have to leave variables uninitialized, just asked this question to see if anybody knew what is happening behind the scenes at runtime, I am using gcc .</p>\n<p><strong>whith code version 1</strong></p>\n<pre><code>#include &lt;iostream&gt;\n\nint main()\n{\n int a;\n int *b = new int; //   &lt;----- this line \n std::cout&lt;&lt;a&lt;&lt;std::endl;\n std::cout&lt;&lt;*b&lt;&lt;std::endl;\n return 0;\n}\n</code></pre>\n<p><strong>whith code version 2</strong></p>\n<pre><code>#include &lt;iostream&gt;\n\nint main()\n{\n int a;\n std::cout&lt;&lt;a&lt;&lt;std::endl;\n int *b = new int; //    &lt;----- same line moved here  \n std::cout&lt;&lt;*b&lt;&lt;std::endl;\n return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "31502943", "Title": "Why am I getting different values in c++?", "CreationDate": "2015-07-19T15:37:23.420", "Id": "31502894", "CommentCount": "5", "PostTypeId": "1", "LastActivityDate": "2015-07-19T16:54:07.703", "Score": "-2", "OwnerUserId": "2432237", "Tags": "<c++><gcc><runtime>", "AnswerCount": "3"}});