post_cb({"5878850": {"ParentId": "5878052", "PostTypeId": "2", "CommentCount": "5", "Body": "<p>The standard says that <code>numeric_limits&lt;streamsize&gt;::max()</code> is a special value that doesn't affect the number of characters skipped.</p>\n<blockquote>\n<p id=\"so_5878052_5878850_0\">Effects: Behaves as an unformatted input function (as described in 27.7.2.3, paragraph 1). After constructing a sentry object, extracts characters and discards them. Characters are extracted until any of the following occurs:<br>\n   -- if <code>n != numeric_limits&lt;streamsize&gt;::max()</code> (18.3.2), n characters are extracted<br>\n   -- end-of-file occurs on the input sequence (in which case the function calls setstate(eofbit), which may throw ios_base::failure (27.5.5.4));<br>\n   -- traits::eq_int_type(traits::to_int_type(c), delim) for the next available input character c (in which case c is extracted). </br></br></br></p>\n</blockquote>\n", "OwnerUserId": "597607", "LastEditorUserId": "13005", "LastEditDate": "2011-05-04T09:02:30.193", "Id": "5878850", "Score": "5", "CreationDate": "2011-05-04T05:10:52.703", "LastActivityDate": "2011-05-04T09:02:30.193"}, "5878052": {"CommentCount": "5", "AcceptedAnswerId": "5878850", "PostTypeId": "1", "LastEditorUserId": "722491", "CreationDate": "2011-05-04T03:08:12.653", "LastActivityDate": "2011-05-04T09:02:30.193", "LastEditDate": "2011-05-04T03:15:08.447", "ViewCount": "5077", "FavoriteCount": "1", "Title": "Does using ignore(numeric_limits<streamsize>::max()) in the IOStreams library handle arbitrarily massive streams?", "Id": "5878052", "Score": "3", "Body": "<p>In the C++ standard (section 27.6.1.3\\24), for the\nistream <code>ignore()</code> function in the IOStreams library, it implies that if you supply an argument for 'n' of <code>numeric_limits::max()</code>, it will continue to ignore characters\nforever up until the delimiter is found, even way beyond the actual\nmax value for streamsize (i.e. the 'n' argument is interpreted as infinite).</p>\n<p>For the gcc implementation this does indeed appear to be how\n<code>ignore()</code> is implemented, but I'm still unclear as to\nwhether this is implementation specific, or mandated by the standard.\nCan someone who knows this well confirm that this is guaranteed by a\nstandard compliant iostreams library?</p>\n", "Tags": "<c++><iostream><standards>", "OwnerUserId": "722491", "AnswerCount": "2"}, "5878152": {"ParentId": "5878052", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>According to <a href=\"http://www.cplusplus.com/reference/iostream/istream/ignore\" rel=\"nofollow\">here</a>:</p>\n<pre><code>istream&amp;  istream::ignore ( streamsize n = 1, int delim = EOF );\n</code></pre>\n<p>Extract and discard characters\nExtracts characters from the input sequence and discards them.</p>\n<p>The extraction ends when n characters have been extracted and discarded <strong>or</strong> when the character delim is found, <strong>whichever comes first</strong>. In the latter case, the delim character itself is also extracted.</p>\n<p>In your case, when numeric_limits::max() number of characters have been reached, the first condition is met.</p>\n<p>[Per Bo]</p>\n<p>However, according to spec, the above case is applied only when n is <strong>not</strong> equal to <code>numeric_limits&lt;streamsize&gt;::max()</code>.</p>\n", "OwnerUserId": "419391", "LastEditorUserId": "419391", "LastEditDate": "2011-05-04T09:02:09.903", "Id": "5878152", "Score": "0", "CreationDate": "2011-05-04T03:25:19.440", "LastActivityDate": "2011-05-04T09:02:09.903"}, "bq_ids": {"n4140": {"so_5878052_5878850_0": {"section_id": 2232, "quality": 0.9111111111111111, "length": 41}}, "n3337": {"so_5878052_5878850_0": {"section_id": 2220, "quality": 0.9111111111111111, "length": 41}}, "n4659": {"so_5878052_5878850_0": {"section_id": 2505, "quality": 0.8888888888888888, "length": 40}}}});