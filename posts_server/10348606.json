post_cb({"10348626": {"Id": "10348626", "PostTypeId": "2", "Body": "<p>You're not using a standard-compliant compiler. An object size can't be <code>0</code>, even an empty <code>class</code> or <code>struct</code> has size <code>1</code>. Moreover, the array dimension has to be specified.</p>\n<p>EDIT: It's strange, ideone also prints out 0. In MSVS I get a warning, but at least the size is 1.</p>\n<h3>5.3.3. Sizeof</h3>\n<blockquote id=\"so_10348606_10348626_0\">\n<ol>\n<li>[...] When applied to a class, the result is the number of bytes in an object of that class [...] The size of a most derived class shall\n  be greater than zero. [...] The result of applying sizeof to a base class subobject is the size of the base class type. [...]</li>\n</ol>\n</blockquote>\n<p>EDIT 2:</p>\n<p>I tried the following in MSVS:</p>\n<pre><code>xxx a[100];\n</code></pre>\n<p>and it fails to compile. Strange how it doesn't pick up the error beforehand.</p>\n", "LastEditorUserId": "673730", "LastActivityDate": "2012-04-27T10:08:21.560", "Score": "2", "CreationDate": "2012-04-27T10:01:20.410", "ParentId": "10348606", "CommentCount": "0", "OwnerUserId": "673730", "LastEditDate": "2012-04-27T10:08:21.560"}, "10348723": {"Id": "10348723", "PostTypeId": "2", "Body": "<p>The size of an object can not be zero. even if  the class is empty, its size is never zero.</p>\n<p>Checkout the link to know more <a href=\"http://www2.research.att.com/~bs/bs_faq2.html\" rel=\"nofollow\">Bjarne Stroustrup's C++ Style and Technique FAQ</a>.</p>\n", "LastActivityDate": "2012-04-27T10:07:52.027", "CommentCount": "0", "CreationDate": "2012-04-27T10:07:52.027", "ParentId": "10348606", "Score": "1", "OwnerUserId": "1312147"}, "10348734": {"Id": "10348734", "PostTypeId": "2", "Body": "<p>As the others have said, an object in C++ can never have size 0.</p>\n<p>However, since the code isn\u2019t valid C++ in the first place (arrays cannot be empty) this is inconsequential. The compiler just does what it wants.</p>\n<p>GCC with <code>-pedantic</code> rejects this code. MSVC at least warns. My version of <code>clang++</code> with <code>-pedantic</code> ICEs but does emit a warning before that.</p>\n", "LastActivityDate": "2012-04-27T10:08:40.647", "CommentCount": "6", "CreationDate": "2012-04-27T10:08:40.647", "ParentId": "10348606", "Score": "4", "OwnerUserId": "1968"}, "10349073": {"Id": "10349073", "PostTypeId": "2", "Body": "<p>That element <code>a</code> in your class <code>xxx</code> is called a flexible array member.</p>\n<p>Flexible array members are not in the C++ standard. They are a part of C99. However, many compiler vendors provide flexible array members as a C++ extension.</p>\n<p>Your code as-is is not legal C code. It uses C++ specific constructs. Your code is easy to change to C. Change the <code>class</code> to <code>struct</code>, get rid of the <code>public</code>, and change the use of C++ I/O to C's <code>printf</code>. With those changes, your converted code is still illegal C99 code. Flexible array members are only allowed as the last element of a structure that is otherwise non-empty.</p>\n<p>Apparently your vendor took the flexible array member concept over to C++, but not the constraint that the structure be otherwise non-empty.</p>\n", "LastActivityDate": "2012-04-27T10:34:16.193", "CommentCount": "0", "CreationDate": "2012-04-27T10:34:16.193", "ParentId": "10348606", "Score": "2", "OwnerUserId": "774499"}, "bq_ids": {"n4140": {"so_10348606_10348626_0": {"length": 25, "quality": 0.9259259259259259, "section_id": 6077}}, "n3337": {"so_10348606_10348626_0": {"length": 25, "quality": 0.9259259259259259, "section_id": 5845}}, "n4659": {"so_10348606_10348626_0": {"length": 25, "quality": 0.9259259259259259, "section_id": 7573}}}, "10348606": {"ViewCount": "177", "Body": "<p>I am getting the sizeof of object as zero, which is ought not to be. Please explain me the concept as why the compiler is giving this answer?</p>\n<pre><code>  #include&lt;iostream&gt;\n  using namespace std;\n\n  class xxx{\n      public: int a[];  // Why this line is not giving error.\n  }; \n\n  int main(int argc, char *argv[])\n  {\n      xxx x1;\n      cout&lt;&lt;sizeof(x1); //Q=Why this code is not giving error.\n      return 0;\n  }\n</code></pre>\n", "AcceptedAnswerId": "10348734", "Title": "Why the size of the object is zero", "CreationDate": "2012-04-27T09:59:54.110", "LastActivityDate": "2012-04-27T10:34:16.193", "CommentCount": "2", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2012-04-27T10:08:12.223", "OwnerDisplayName": "user1360764", "LastEditorUserId": "514235", "Id": "10348606", "Score": "4", "Tags": "<c++><compiler-construction><size>", "AnswerCount": "4"}});