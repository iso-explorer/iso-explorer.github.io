post_cb({"17863604": {"Id": "17863604", "PostTypeId": "2", "Body": "<p>There are a couple of issues in your code. The first is that <code>main</code> cannot be a template. It is a very special function that needs to follow some rules.</p>\n<p>Additionally, <code>TestVector</code> is not a variable but rather a <em>function declaration</em>. It declares a function that takes two objects of types <code>a</code> and <code>b</code> and returns <code>Vector2d&lt;a,b&gt;</code>.</p>\n", "LastActivityDate": "2013-07-25T16:23:47.893", "CommentCount": "0", "CreationDate": "2013-07-25T16:23:47.893", "ParentId": "17863494", "Score": "1", "OwnerUserId": "36565"}, "17863725": {"Id": "17863725", "PostTypeId": "2", "Body": "<p>Also, cin uses this operator '&gt;&gt;'; not this one '&lt;&lt;'</p>\n<pre><code>cin &gt;&gt; Fnum;\ncin &gt;&gt; Snum;\n</code></pre>\n", "LastActivityDate": "2013-07-25T16:30:53.260", "CommentCount": "0", "CreationDate": "2013-07-25T16:30:53.260", "ParentId": "17863494", "Score": "0", "OwnerUserId": "1998828"}, "17864181": {"Id": "17864181", "PostTypeId": "2", "Body": "<p>I think there are some problems in your code :\n the first the template must has a certain type before compiled,so you can use template before  the main()\n the second \"cin&lt;\n</p>", "LastActivityDate": "2013-07-25T16:55:51.217", "CommentCount": "0", "CreationDate": "2013-07-25T16:55:51.217", "ParentId": "17863494", "Score": "0", "OwnerUserId": "2619467"}, "bq_ids": {"n4140": {"so_17863494_17863556_0": {"length": 18, "quality": 0.75, "section_id": 7146}}, "n3337": {"so_17863494_17863556_0": {"length": 22, "quality": 0.9166666666666666, "section_id": 6890}}, "n4659": {"so_17863494_17863556_0": {"length": 18, "quality": 0.75, "section_id": 8647}}}, "17863571": {"Id": "17863571", "PostTypeId": "2", "Body": "<p><code>main</code> is a magic function called out specifically as the entry point of the program by the C++ specification.  The signature must be either <code>int main()</code> or <code>int main(int arc, char* arv[])</code>, no templates.  Your code does not have such a function, so the linker cannot link it into your executable.  </p>\n<p>Executable Programs themselves cannot be templated, so there's no way that even makes sense.  When would you specifiy the parameter type of <code>main</code>?  So you'll have to (A) use actual types in main, not templates, or (B), move the templated body to another function, and have main call that function, again specifying particular template parameter types.</p>\n", "LastActivityDate": "2013-07-25T16:21:47.900", "CommentCount": "0", "CreationDate": "2013-07-25T16:21:47.900", "ParentId": "17863494", "Score": "3", "OwnerUserId": "845092"}, "17863556": {"Id": "17863556", "PostTypeId": "2", "Body": "<p><code>main()</code> cannot be templated.</p>\n<p>The C++ runtime will call into this function when your process starts.  How is it to know what template parameters to provide?</p>\n<p>Section 3.6.1.2 of the C++ standard (ISO/IEC 14882, second edition):</p>\n<blockquote>\n<p id=\"so_17863494_17863556_0\">An implementation shall not predefine the main function. This function shall not be overloaded. It shall\n  have a return type of type int, but otherwise its type is implementation-defined. All implementations\n  shall allow both of the following definitions of main:</p>\n<p id=\"so_17863494_17863556_1\"><code>int main() { /* ... */ }</code></p>\n<p id=\"so_17863494_17863556_2\"><code>int main(int argc, char* argv[]) { /* ... */ }</code></p>\n</blockquote>\n<p>Your definition of main does not fit either of these definitions, therefore C++ implementations are not required to support it, and I don't know of a single implementation that could do so reasonably, as it would have to provide its own type arguments and that doesn't make a whole lot of sense.</p>\n<p>One of the purposes of templates is to allow you to write code that works with multiple different types, without having to write different code to support each type.  This appears to be what you are trying to do.  However, templates by themselves don't do anything -- they need to be <em>instantiated</em>, that is, used with real types at some point.  An uninstatiated template is not even emitted as native code by the compiler, it is simply discarded!</p>\n<p>All you have here are uninstantiated templates.  <em>At some point</em> you need to specify <em>actual</em> types for template parameters, and you have not done so.</p>\n<p>When the compiler compiles the file containing your <code>main()</code> the output object file <em>doesn't contain a <code>main()</code> at all</em>.  This explains why the linker is unable to find it.  (And even if you did explicitly instantiate it, the linker would be looking for a different symbol entirely!)</p>\n", "LastEditorUserId": "501250", "LastActivityDate": "2013-07-25T16:32:30.863", "Score": "3", "CreationDate": "2013-07-25T16:21:26.490", "ParentId": "17863494", "CommentCount": "0", "OwnerUserId": "501250", "LastEditDate": "2013-07-25T16:32:30.863"}, "17863494": {"ViewCount": "248", "Body": "<p>Vector2d.h:</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntemplate &lt;typename T, typename U&gt;\nclass Vector2d\n{\n    T x;\n    U y;\npublic:\n    Vector2d (T X, U Y)\n    {\n        x = X;\n        y = Y;\n    }\n    void printdata()\n    {\n        cout &lt;&lt; \"X: \" &lt;&lt; x &lt;&lt; \" Y: \" &lt;&lt; y;\n    }\n\n};\n</code></pre>\n<p>main.cpp:</p>\n<pre><code>#include &lt;iostream&gt;\n\n#include \"Vector2d.h\"\n\nusing namespace std;\ntemplate &lt;typename a, typename b&gt;\nint main()\n{\n\n    a Fnum;\n    b Snum;\n    cout &lt;&lt; \"Please enter two numbers \";\n    cin &lt;&lt; Fnum;\n    cin &lt;&lt; Snum;\n    Vector2d&lt;a, b&gt; TestVector (a Fnum, b Snum);\n    cout &lt;&lt; TestVector.printdata();\n    return 0;\n}\n</code></pre>\n<p>My problem is I am trying to make a 2D vector class (for game design) and I wanted to try working with templates. I will probably want to just use floating point numbers in the end, but I still want to learn how to use templates. When I run this program I get a:</p>\n<blockquote>\n<p id=\"so_17863494_17863494_0\">unresolved external symbol <em>main referenced in function _</em>_tmainCRTStartup</p>\n</blockquote>\n<p>and I'm not sure what I'm doing wrong. If you need me to elaborate please feel free to ask.</p>\n", "AcceptedAnswerId": "17863556", "Title": "C++ template variable assignment mayhem", "CreationDate": "2013-07-25T16:18:32.387", "Id": "17863494", "CommentCount": "4", "PostTypeId": "1", "LastActivityDate": "2013-07-25T16:55:51.217", "Score": "0", "OwnerUserId": "2565979", "Tags": "<c++><templates><testing><compilation>", "AnswerCount": "5"}});