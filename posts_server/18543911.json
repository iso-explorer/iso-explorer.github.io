post_cb({"18543911": {"CommentCount": "4", "ViewCount": "7244", "PostTypeId": "1", "LastEditorUserId": "2734698", "CreationDate": "2013-08-31T02:34:30.743", "LastActivityDate": "2014-06-21T17:02:31.533", "Title": "Invalid types 'int [5][float]' for array subscript", "AcceptedAnswerId": "18543950", "LastEditDate": "2013-08-31T03:12:12.090", "Id": "18543911", "Score": "1", "Body": "<p>This is my entire code (in C++) in case it's necessary. I'm using Eclipse Kepler.</p>\n<pre><code>//Tutorials from www.cplusplus.com/doc/tutorial combined\n#include &lt;iostream&gt;\nusing namespace std;\n\n//tutorial #1.1 Function with type -- Addition\nint addition (int a, int b)\n{\n  int r;\n  r=a+b;\n  return (r);\n}\n\n//tutorial #1.2 Function with type -- Subtraction\nint subtraction (int a, int b){\n    int r;\n    r=a-b;\n    return (r);\n}\n\n//tutorial #1.3 Function with NO type\nvoid printmessage (void)\n{\n  cout &lt;&lt; \"It's good to be the king.\" &lt;&lt; '\\n';\n}\n\n//tutorial #2.1 Arguments passed by reference\nvoid duplicate (int&amp; a, int&amp; b, int&amp; c)\n{\n  a*=2;\n  b*=2;\n  c*=2;\n}\n\n//tutorial #2.2 and 2.5 Arguments passed by value and Declaration of preferred inline function\ninline void prevnext (int x, int&amp; prev, int&amp; next)\n{\n  prev = x-1;\n  next = x+1;\n}\n\n//tutorial #2.3 Default values in parameters (functions)\nint divide (int a, int b=2)\n{\n  int r;\n  r=a/b;\n  return (r);\n}\n\n//tutorial #2.4.1 Overloaded functions -- int cannot handle decimals\nint operate (int a, int b)\n{\n  return (a*b);\n}\n\n//tutorial #2.4.2 Overloaded functions -- float is used with decimals\nfloat operate (float a, float b)\n{\n  return (a/b);\n}\n\n//tutorial #2.6 Recursivity -- factorial calculator\nlong factorial (long a)\n{\n  if (a &gt; 1)\n   return (a * factorial (a-1));\n  else\n   return (1);\n}\n\n//tutorial #2.7 Declaring function prototypes\nvoid odd (int a); //declared\nvoid even (int a); //declared\n\nvoid odd (int a) //defined\n{\n  if ((a%2)!=0) cout &lt;&lt; \"Number is odd.\\n\";\n  else even (a);\n}\n\nvoid even (int a) //defined\n{\n  if ((a%2)==0) cout &lt;&lt; \"Number is even.\\n\";\n  else odd (a);\n}\n\n//tutorial #3.1 Initializing and accessing the values of an array\nfloat billy [] = {16, 2, 77, 40, 12071};\nfloat k, result=0;\n\nint main ()\n{\n    cout &lt;&lt; \"Name: My Name \\n\";\n    cout &lt;&lt; \"Homework: 1\";\n    cout &lt;&lt; endl;\n    cout &lt;&lt; endl;\n\n  int x=8, y=1, z, aa;\n  float n=3.0,m=9.0;\n  long number;\n\n  z = addition (4,2);\n  aa = subtraction (6,3);\n    cout &lt;&lt; \"The sum is \" &lt;&lt; z &lt;&lt; '\\n';\n    cout &lt;&lt; \"The subtraction is \" &lt;&lt; aa &lt;&lt; '\\n';\n    cout &lt;&lt; \"The second subtraction is \" &lt;&lt; subtraction(x,y) &lt;&lt; '\\n';\n\n  z = addition (x,y) - 3;\n    cout &lt;&lt; \"The new sum is \" &lt;&lt; z &lt;&lt; '\\n';\n\n  printmessage();\n\n  duplicate (x,y,z);\n    cout &lt;&lt; \"x=\" &lt;&lt; x &lt;&lt; \", y=\" &lt;&lt; y &lt;&lt; \", z=\" &lt;&lt; z &lt;&lt; '\\n';\n\n  prevnext (x, y, z);\n    cout &lt;&lt; \"Previous=\" &lt;&lt; y &lt;&lt; \", Next=\" &lt;&lt; z;\n\n    cout &lt;&lt; endl;\n    cout &lt;&lt; \"Division = \" &lt;&lt; divide (14);\n    cout &lt;&lt; endl;\n    cout &lt;&lt; \"Second Division = \" &lt;&lt; divide (10,8);\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"Operate Multiply: \" &lt;&lt; operate(x,y);\n    cout &lt;&lt; '\\n';\n    cout &lt;&lt; \"Operate Divide: \" &lt;&lt; operate(n,m);\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"Please type a number: \";\n      cin &gt;&gt; number;\n      cout &lt;&lt; number &lt;&lt; \"! = \" &lt;&lt; factorial (number);        \n      cout &lt;&lt; endl;\n\n    int i;\n      do {\n        cout &lt;&lt; \"Type a number (type 0 to exit): \";\n        cin &gt;&gt; i;\n        odd (i);\n      } while (i!=0);\n\n      for ( k=0 ; k&lt;5 ; k++ )\n       {\n          result += billy[k];\n       }\n       cout &lt;&lt; result;\n\n  return 0;\n}\n</code></pre>\n<p>This is the part of my code written in the main that is having the issue.  More specifically, the result += billy[k] line is throwing the error:</p>\n<pre><code>      for ( k=0 ; k&lt;5 ; k++ )\n       {\n          result += billy[k];\n       }\n       cout &lt;&lt; result;\n</code></pre>\n<p>This corresponds with:</p>\n<pre><code>//tutorial #3.1 Initializing and accessing the values of an array\nfloat billy [] = {16, 2, 77, 40, 12071};\nfloat k, result=0;\n</code></pre>\n<p>I need help fixing this code but most importantly I want to know <strong>why</strong> my code threw me this error and how I could make it better (at an elementary level--obviously, I'm not implementing advanced concepts here). </p>\n<p>EDIT 11:10PM I forgot to switch it back to int.  I had int initially but due to the error I figured I would try float to see if it made a difference.</p>\n", "Tags": "<c++><arrays><eclipse><compiler-errors>", "OwnerUserId": "2734698", "AnswerCount": "3"}, "18543938": {"ParentId": "18543911", "CommentCount": "0", "Body": "<p>You cannot use floating point types as indexes for arrays.  <code>k</code> should be an integer.</p>\n", "OwnerUserId": "440119", "PostTypeId": "2", "Id": "18543938", "Score": "2", "CreationDate": "2013-08-31T02:39:02.393", "LastActivityDate": "2013-08-31T02:39:02.393"}, "18543950": {"ParentId": "18543911", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>You should use integers for indices to arrays.  That is, declare <code>k</code> as an integer.</p>\n<p>One way to think about this is, what if you tried <code>billy[1.5]</code>?  Does this make sense, should this return the first element or the second element, or something in between, or nothing at all?  Accessing <code>billy[1.5]</code> doesn't make sense, you should think about arrays as a discrete set of values and the index should only ever point to one of these values.</p>\n<pre><code>float billy[] = {1.0, 2.0, 3.0, 4.0, 5.0};\nfloat result = 0.0;\nint k;\n\nfor (k = 0; k &lt; 5; k++)\n{\n    result += billy[k];\n}\n\ncout &lt;&lt; result &lt;&lt; endl;\n</code></pre>\n<p>Also, unless you really need to access <code>result</code>, <code>billy</code> and <code>k</code> everywhere in your program, you should consider moving them to inside your <code>main</code> function.  As  Neil Kirk said in one of the comments, you can write the following if you only need <code>k</code> inside your loop:</p>\n<pre><code>for (int k = 0; k &lt; 5; k++)\n{\n    // Do Something\n}\n</code></pre>\n", "OwnerUserId": "2372604", "LastEditorUserId": "2372604", "LastEditDate": "2013-08-31T03:00:39.433", "Id": "18543950", "Score": "1", "CreationDate": "2013-08-31T02:40:41.453", "LastActivityDate": "2013-08-31T03:00:39.433"}, "18544007": {"ParentId": "18543911", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>as per C++ standard, array index must be integer type, you need to change your variable <code>k</code> to integral type.</p>\n<p><strong>\u00a78.3.4 Arrays</strong></p>\n<blockquote>\n<p id=\"so_18543911_18544007_0\">In a declaration T D where D has the form</p>\n</blockquote>\n<pre><code>D1 [ constant-expressionopt] attribute-specifier-seqopt\n</code></pre>\n<blockquote>\n<p id=\"so_18543911_18544007_1\">and the type of the identifier in the declaration T D1 is \u201cderived-declarator-type-list T\u201d, then the type of the identifier of D is an array type;</p>\n<p id=\"so_18543911_18544007_2\">If the constant-expression (5.19) is present, it shall be an <strong>integral constant expression</strong> and its value shall be greater than zero. The constant expression specifies the bound of (number of elements in) the array. If the value of the constant expression is N, the array has N elements numbered 0 to N-1, and the type of the identifier of D is \u201cderived-declarator-type-list array of N T\u201d.</p>\n</blockquote>\n<p>Now look at \u00a7 5.19 Constant expressions</p>\n<p>\u00a7 5.19.4\nSince this International Standard imposes no restrictions on the\naccuracy of floating-point operations, it is unspecified whether the evaluation of a <strong>floating-point expression during translation yields the same result as the evaluation of the same expression</strong></p>\n", "OwnerUserId": "951757", "LastEditorUserId": "759866", "LastEditDate": "2014-06-21T17:02:31.533", "Id": "18544007", "Score": "1", "CreationDate": "2013-08-31T02:54:01.823", "LastActivityDate": "2014-06-21T17:02:31.533"}, "bq_ids": {"n4140": {"so_18543911_18544007_2": {"section_id": 3228, "quality": 0.8275862068965517, "length": 24}, "so_18543911_18544007_1": {"section_id": 3228, "quality": 1.0, "length": 9}}, "n3337": {"so_18543911_18544007_2": {"section_id": 3101, "quality": 0.8620689655172413, "length": 25}, "so_18543911_18544007_1": {"section_id": 3101, "quality": 1.0, "length": 9}}, "n4659": {"so_18543911_18544007_2": {"section_id": 3985, "quality": 0.8275862068965517, "length": 24}, "so_18543911_18544007_1": {"section_id": 3985, "quality": 0.8888888888888888, "length": 8}}}});