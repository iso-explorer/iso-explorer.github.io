post_cb({"29710299": {"ParentId": "29710183", "CommentCount": "0", "CreationDate": "2015-04-17T22:13:08.480", "OwnerUserId": "179910", "PostTypeId": "2", "Id": "29710299", "Score": "13", "Body": "<p>I believe it's a bug in VS 2013.</p>\n<p>For what it's worth, the compiler from the VS 2015 CTP does what (I think) you'd probably expect:</p>\n<pre><code>test.cpp(10): error C3246: 'Derived': cannot inherit from 'Base&lt;int&gt;' as it has been declared as 'final'\n</code></pre>\n", "LastActivityDate": "2015-04-17T22:13:08.480"}, "29710305": {"ParentId": "29710183", "CommentCount": "0", "CreationDate": "2015-04-17T22:13:18.797", "OwnerUserId": "701092", "PostTypeId": "2", "Id": "29710305", "Score": "18", "Body": "<p><strong>It is indeed a bug.</strong> </p>\n<p>N4296, [class]/p3:</p>\n<blockquote>\n<p id=\"so_29710183_29710305_0\">If a class is marked with the <em>class-virt-specifier</em> <code>final</code> and it appears as a <em>base-type-specifier</em> in a <em>base-clause</em> (Clause 10), the program is ill-formed.</p>\n</blockquote>\n", "LastActivityDate": "2015-04-17T22:13:18.797"}, "29710183": {"CommentCount": "0", "ViewCount": "729", "PostTypeId": "1", "LastEditorUserId": "63550", "CreationDate": "2015-04-17T22:04:36.780", "LastActivityDate": "2015-04-19T00:33:31.727", "Title": "Why is this code allowed to compile under Visual Studio 2013?", "AcceptedAnswerId": "29710305", "LastEditDate": "2015-04-19T00:32:11.987", "Id": "29710183", "Score": "18", "Body": "<p>Here is a very simple C++11 program that tests out the use of the <code>final</code> keyword to prevent a class from being subclassed:</p>\n<pre><code>template&lt;class T&gt; class Base final\n{\npublic:\n   Base() {}\n\nprivate:\n   T t;\n};\n\nclass Derived : public Base&lt;int&gt; {};\n\nint main(int, char **)\n{\n   Derived d;\n   return 0;\n}\n</code></pre>\n<p>If I try to compile the above program under Mac\u00a0OS\u00a0X (<a href=\"http://en.wikipedia.org/wiki/Clang\" rel=\"nofollow\">Clang</a>), I get the expected error messages:</p>\n<pre><code>jeremy-friesners-mac-pro-3:~ jaf$ g++ -std=c++11 ./temp.cpp\n./temp.cpp:10:28: error: base 'Base' is marked 'final'\n   class Derived : public Base&lt;int&gt; {};\n                       ^\n./temp.cpp:1:29: note: 'Base' declared here\n   template&lt;class T&gt; class Base final\n</code></pre>\n<p>However, if I compile the same code under Windows using Visual Studio 2013, it compiles with no errors. If I make the <code>Base</code> class non-templated, however, Visual Studio does recognize the <code>final</code> keyword and emits an error.</p>\n<p>Is this a bug in Visual Studio 2013, or am I missing some nuance about how the <code>final</code> keyword is allowed/expected to operate in conjunction with templated classes?</p>\n", "Tags": "<c++><templates><visual-studio-2013><final>", "OwnerUserId": "131930", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_29710183_29710305_0": {"section_id": 5847, "quality": 1.0, "length": 9}}, "n3337": {"so_29710183_29710305_0": {"section_id": 5617, "quality": 1.0, "length": 9}}, "n4659": {"so_29710183_29710305_0": {"section_id": 7326, "quality": 0.8888888888888888, "length": 8}}}, "29710262": {"ParentId": "29710183", "PostTypeId": "2", "CommentCount": "3", "CreationDate": "2015-04-17T22:10:34.933", "Score": "-5", "LastEditorUserId": "63550", "LastEditDate": "2015-04-19T00:33:31.727", "Id": "29710262", "OwnerUserId": "4694262", "Body": "<p>I don't know all of the internals of the combination, but IMHO both compilers are \"correct\". MSVC sees that the template class is final, and you don't derive from it. You USE the template class to define the class Base&lt;int&gt;, which is not final any more. </p>\n<p>IMHO different interpretation of the compilers.</p>\n", "LastActivityDate": "2015-04-19T00:33:31.727"}});