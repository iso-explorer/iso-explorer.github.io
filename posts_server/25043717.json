post_cb({"25043996": {"ParentId": "25043717", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Objects with static storage duration are zero initialized. This is covered in the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\" rel=\"nofollow\">draft C++ standard</a> section <code>3.6.2</code> <em>Initialization of non-local variables</em> which says:</p>\n<blockquote>\n<p id=\"so_25043717_25043996_0\">Variables with static storage duration (3.7.1) or thread storage duration (3.7.2) shall be zero-initialized (8.5)\n  before any other initialization takes place.</p>\n</blockquote>\n<p>and zero initialization is covered in <code>8.5</code> <em>Initializers</em> which says:</p>\n<blockquote>\n<p id=\"so_25043717_25043996_1\">To zero-initialize an object or reference of type T means:</p>\n<ul>\n<li>if T is a scalar type (3.9), the object is set to the value 0 (zero), taken as an integral constant expression,\n  converted to T;103</li>\n<li>if T is a (possibly cv-qualified) non-union class type, each non-static data member and each base-class\n  subobject is zero-initialized and padding is initialized to zero bits;</li>\n<li>if T is a (possibly cv-qualified) union type, the object\u2019s first non-static named data member is zeroinitialized\n  and padding is initialized to zero bits;</li>\n<li>if T is an array type, each element is zero-initialized;</li>\n<li>if T is a reference type, no initialization is performed.</li>\n</ul>\n</blockquote>\n<p>Both <em>bool</em> and <em>pointers</em> are scalar types and therefore by the first bullet will be set to <code>0</code>.</p>\n", "OwnerUserId": "1708801", "LastEditorUserId": "1708801", "LastEditDate": "2014-07-31T04:04:19.150", "Id": "25043996", "Score": "3", "CreationDate": "2014-07-30T18:11:59.940", "LastActivityDate": "2014-07-31T04:04:19.150"}, "25043717": {"CommentCount": "0", "AcceptedAnswerId": "25043819", "PostTypeId": "1", "LastEditorUserId": "3314788", "CreationDate": "2014-07-30T17:57:19.337", "LastActivityDate": "2014-07-31T04:04:19.150", "LastEditDate": "2014-07-30T18:04:53.377", "ViewCount": "814", "FavoriteCount": "1", "Title": "What are the default initialization values of static variables in c++ objects?", "Id": "25043717", "Score": "2", "Body": "<p>I believe that all numerical variables are initialized to zero, but what about things like <code>static bool</code> or <code>static MyClass*</code>?</p>\n<p>I have looked around the interwebs, but most results I found are for how to initialize things like ints to non-zero values, and I just want to know the defaults.</p>\n", "Tags": "<c++><static><initialization>", "OwnerUserId": "3314788", "AnswerCount": "3"}, "25043748": {"ParentId": "25043717", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Global variables, local static variables, and static member variables are all zero initialized, unless otherwise initialized. This means floating point values are zero, booleans are false, pointers are nullptr etc</p>\n<p>See <a href=\"http://en.cppreference.com/w/cpp/language/zero_initialization\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/language/zero_initialization</a></p>\n", "OwnerUserId": "440558", "LastEditorUserId": "208809", "LastEditDate": "2014-07-30T18:22:05.187", "Id": "25043748", "Score": "5", "CreationDate": "2014-07-30T17:59:10.530", "LastActivityDate": "2014-07-30T18:22:05.187"}, "bq_ids": {"n4140": {"so_25043717_25043996_1": {"section_id": 3285, "quality": 1.0, "length": 5}, "so_25043717_25043996_0": {"section_id": 7151, "quality": 0.8666666666666667, "length": 13}}, "n3337": {"so_25043717_25043996_1": {"section_id": 3155, "quality": 1.0, "length": 5}, "so_25043717_25043996_0": {"section_id": 6895, "quality": 0.8666666666666667, "length": 13}}, "n4659": {"so_25043717_25043996_1": {"section_id": 653, "quality": 0.8, "length": 4}, "so_25043717_25043996_0": {"section_id": 4051, "quality": 0.6, "length": 9}}}, "25043819": {"ParentId": "25043717", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>\u00a78.5/5 of the standard explains what it means to zero-initialize an object. For scalar types, the value after zero-initialization will be the result of converting <code>0</code> to the destination type.</p>\n<p>The result of zero-initializing <code>bool</code> is <code>false</code>, since that is the result of converting <code>0</code> to <code>bool</code>. Incidentally, <code>bool</code> is an integer type.</p>\n<p>The result of zero-initializing a pointer is a null pointer value, since that is the result of converting <code>0</code> to a pointer type.</p>\n", "OwnerUserId": "481267", "LastEditorUserId": "481267", "LastEditDate": "2014-07-30T18:22:08.647", "Id": "25043819", "Score": "3", "CreationDate": "2014-07-30T18:02:59.800", "LastActivityDate": "2014-07-30T18:22:08.647"}});