post_cb({"bq_ids": {"n4140": {"so_33417594_33417594_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 294}}, "n3337": {"so_33417594_33417594_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 285}}, "n4659": {"so_33417594_33417594_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 301}}}, "33417594": {"ViewCount": "108", "Body": "<p>Suppose the following definitions:</p>\n<pre><code>#define AA(x) A&lt;decltype(x), x&gt;\n\ntemplate&lt;typename T, T x&gt;\nstruct A;\n\ntemplate&lt;int a&gt;\nstruct A&lt;int, a&gt;{};\n\ntemplate&lt;bool b&gt;\nstruct A&lt;bool, b&gt;{};\n\ntemplate&lt;const double &amp;d&gt;\nstruct A&lt;const double &amp;, d&gt;{};\n\nextern constexpr double myDouble = 0.2;\n</code></pre>\n<p>After these definitions, the following works:</p>\n<pre><code>AA(false) myA2; \n</code></pre>\n<p>However, the compiler complains when it sees this:</p>\n<pre><code>AA(myDouble) myA3;\n</code></pre>\n<p>It says:</p>\n<blockquote>\n<p id=\"so_33417594_33417594_0\">\u2018const double\u2019 is not a valid type for a template non-type parameter</p>\n<p id=\"so_33417594_33417594_1\">#define AA(x) A</p>\n</blockquote>\n<p>On the other hand, the compiler is perfectly happy with this:</p>\n<pre><code>A&lt;const double &amp;, myDouble&gt; myA1; \n</code></pre>\n<p>What is the reason for this compiler error? (using <code>g++</code> version 4.8.2)</p>\n", "Title": "const double & in template class partial specialization", "CreationDate": "2015-10-29T14:54:35.127", "LastActivityDate": "2015-10-29T14:54:35.127", "CommentCount": "2", "PostTypeId": "1", "Id": "33417594", "Score": "0", "OwnerUserId": "2725810", "Tags": "<c++><templates><c++11><partial-specialization>", "AnswerCount": "0"}});