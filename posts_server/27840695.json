post_cb({"27840695": {"CommentCount": "0", "ViewCount": "62", "CreationDate": "2015-01-08T12:56:21.447", "LastActivityDate": "2015-01-08T14:15:02.370", "Title": "Strange usage of static_cast", "AcceptedAnswerId": "27840837", "PostTypeId": "1", "Id": "27840695", "Score": "1", "Body": "<p>I came over the following code construct in our production environment (heavily simplified however).</p>\n<pre><code>#include &lt;iostream&gt;\n\ntypedef struct \n{\n    char entry[10]; \n}\ninn_struct;\n\ntypedef struct \n{    \n    inn_struct directory;\n} \nout_struct;\n\n\nstruct test\n{\n    static const int \n       ENTRY_LENGTH = (sizeof((static_cast&lt;out_struct*&gt;(0))-&gt;directory.entry) \n           / sizeof((static_cast&lt;out_struct*&gt;(0))-&gt;directory.entry[0]));\n};\n\nint main()\n{\n    test a;\n    std::cout &lt;&lt; test::ENTRY_LENGTH;\n}\n</code></pre>\n<p>Now not considering the obviously obfuscated nature of it since it's just the old C way of determining the length of an array ... I am really bothered by the <code>static_cast</code> of the <code>0</code> value. ... Is this code acceptable? Can you please attach some passages from the c++ standard to your response which tells me (if) why this code is ok?</p>\n", "Tags": "<c++><null><zero><static-cast>", "OwnerUserId": "186193", "AnswerCount": "1"}, "27840837": {"ParentId": "27840695", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>Yes, this code is perfectly acceptable. See \u00a75.3.3/1 (emphasis mine).</p>\n<blockquote>\n<p id=\"so_27840695_27840837_0\">The sizeof operator yields the number of bytes in the object representation of its operand. The operand is either an expression, which is an <strong>unevaluated</strong> operand (Clause 5), or a paranthesized <em>type-id</em>.</p>\n</blockquote>\n<p>The expression is not evaluated, so there's no problem with what looks like dereferencing a null pointer. </p>\n<p>Note also that in C++11, you don't need to jump through that hoop, and can just directly reference the class member with sizeof, thanks to \u00a75/8 (emphasis mine):</p>\n<blockquote>\n<p id=\"so_27840695_27840837_1\">In some contexts, <em>unevaluated operands</em> appear (5.2.8, 5.3.3, 5.3.7, 7.1.6.2). An unevaluated operand is not evaluated. An unevaluated operand is considered a full-expression. [ <em>Note:</em> In an unevaluated operand, <strong>a non-static class member may be named</strong> (5.1) and naming of objects or functions does not, by itself, require that a definition be provided (3.2). \u2014 <em>end note</em> ]</p>\n</blockquote>\n<p>and \u00a75.1.1/13:</p>\n<blockquote>\n<p id=\"so_27840695_27840837_2\">An <em>id-expression</em> that denotes a non-static data member or non-static member function of a class can only be used:</p>\n<ul>\n<li><p id=\"so_27840695_27840837_3\">..</p></li>\n<li><p id=\"so_27840695_27840837_4\">if that <em>id-expression</em> denotes a non-static data member and it appears in an unevaluated context <em>[Example:</em></p></li>\n</ul>\n</blockquote>\n<pre><code>    struct S {\n      int m;\n    };\n\n    int i = sizeof(S::m); // OK\n    int j = sizeof(S::m + 42); // OK\n</code></pre>\n<blockquote>\n<p id=\"so_27840695_27840837_5\"><em>- end example]</em></p>\n</blockquote>\n", "OwnerUserId": "2069064", "LastEditorUserId": "2069064", "LastEditDate": "2015-01-08T14:15:02.370", "Id": "27840837", "Score": "4", "CreationDate": "2015-01-08T13:04:38.587", "LastActivityDate": "2015-01-08T14:15:02.370"}, "bq_ids": {"n4140": {"so_27840695_27840837_0": {"section_id": 6076, "quality": 0.8421052631578947, "length": 16}, "so_27840695_27840837_4": {"section_id": 5959, "quality": 0.7777777777777778, "length": 7}, "so_27840695_27840837_1": {"section_id": 5941, "quality": 0.7272727272727273, "length": 24}, "so_27840695_27840837_2": {"section_id": 5959, "quality": 1.0, "length": 10}}, "n3337": {"so_27840695_27840837_0": {"section_id": 5844, "quality": 0.8421052631578947, "length": 16}, "so_27840695_27840837_4": {"section_id": 5728, "quality": 0.7777777777777778, "length": 7}, "so_27840695_27840837_1": {"section_id": 5712, "quality": 0.6363636363636364, "length": 21}, "so_27840695_27840837_2": {"section_id": 5728, "quality": 1.0, "length": 10}}, "n4659": {"so_27840695_27840837_0": {"section_id": 7572, "quality": 0.8421052631578947, "length": 16}, "so_27840695_27840837_4": {"section_id": 7440, "quality": 0.7777777777777778, "length": 7}, "so_27840695_27840837_1": {"section_id": 7425, "quality": 0.6363636363636364, "length": 21}, "so_27840695_27840837_2": {"section_id": 7440, "quality": 1.0, "length": 10}}}});