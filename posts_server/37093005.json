post_cb({"bq_ids": {"n4140": {"so_37093005_37093026_0": {"length": 29, "quality": 0.90625, "section_id": 5402}}, "n3337": {"so_37093005_37093026_0": {"length": 29, "quality": 0.90625, "section_id": 5197}}, "n4659": {"so_37093005_37093026_0": {"length": 29, "quality": 0.90625, "section_id": 6849}}}, "37093026": {"Id": "37093026", "PostTypeId": "2", "Body": "<p><code>inline</code> is <strong>in no way</strong> related to the number of lines in a function<sup>1</sup>. It is just a compiler <strong>hint</strong>, which the compiler is <strong>not</strong>, by any means, obliged to follow. Whether a function is really inlined when declared <code>inline</code>, is implementation-defined.<br>\nFrom C++14 standard draft N3690, \u00a77.1.2:</br></p>\n<blockquote>\n<p id=\"so_37093005_37093026_0\">A function declaration (8.3.5, 9.3, 11.3) with an <code>inline</code> specifier\n  declares an inline function. The <code>inline</code> specifier indicates to the\n  implementation that inline substitution of the function body at the\n  point of call is to be preferred to the usual function call mechanism.\n  <strong>An implementation is not required to perform this inline substitution at the point of call</strong> [...]</p>\n</blockquote>\n<p><sub>(Formatting mine.)</sub></p>\n<p>There are compiler-specific options and attributes to enable/disable inlining for all functions and do other, related stuff. Look up your compiler's documentation for further information.</p>\n<hr>\n<p><sup>1</sup> A compiler could take the line count of a function into account when deciding on whether to inline a function or not but that's implementation-defined and not required by the standard.</p>\n</hr>", "LastEditorUserId": "3494013", "LastActivityDate": "2016-05-07T20:01:42.577", "Score": "1", "CreationDate": "2016-05-07T19:51:53.387", "ParentId": "37093005", "CommentCount": "0", "OwnerUserId": "3494013", "LastEditDate": "2016-05-07T20:01:42.577"}, "37093005": {"ViewCount": "156", "Body": "<p>I read that having more than a line in a function will falsify \"inline\", if so how do i get to know when my function is inlined and vice-versa :/</p>\n<pre><code>inline int foo(int x, int y)\n{\n   cout&lt;&lt;\"foo-boo\";\n   return (x &gt; y)? x : y;\n}\n</code></pre>\n", "AcceptedAnswerId": "37093026", "Title": "Will compiler ignore inline qualifier for my function?", "CreationDate": "2016-05-07T19:49:10.987", "Id": "37093005", "CommentCount": "10", "LastEditDate": "2016-05-07T19:51:40.340", "PostTypeId": "1", "LastEditorUserId": "417501", "LastActivityDate": "2017-07-18T12:34:42.933", "Score": "0", "OwnerUserId": "4862824", "Tags": "<c++><inline>", "AnswerCount": "2"}, "45166919": {"Id": "45166919", "PostTypeId": "2", "Body": "<p>Remember, inlining is only a request to the compiler, not a command. Compiler can ignore the request for inlining. Compiler may not perform inlining in such circumstances like:</p>\n<ol>\n<li>If a function contains a loop. (for, while, do-while)</li>\n<li>If a function contains static variables.</li>\n<li>If a function is recursive.</li>\n<li>If a function return type is other than void, and the return statement doesn\u2019t exist in function body.</li>\n<li>If a function contains switch or goto statement.</li>\n</ol>\n", "LastEditorUserId": "4384810", "LastActivityDate": "2017-07-18T12:34:42.933", "Score": "1", "CreationDate": "2017-07-18T12:32:08.567", "ParentId": "37093005", "CommentCount": "1", "OwnerUserId": "4384810", "LastEditDate": "2017-07-18T12:34:42.933"}});