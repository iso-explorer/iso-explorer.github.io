post_cb({"bq_ids": {"n4140": {"so_14812214_14812252_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 5794}}, "n3337": {"so_14812214_14812252_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 5567}}, "n4659": {"so_14812214_14812252_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 7253}}}, "14812214": {"ViewCount": "149", "Body": "<p>I know the size of an empty class is defined by the standard to be non-zero. It is <em>usually</em> 1 byte on most implementations.<br>\nBut, does the C++ standard specify the minimum possible size of an object?  Is it logical to assume that as per standard the size of an empty class object will be <strong>atleast</strong> 1 byte.   </br></p>\n", "AcceptedAnswerId": "14812252", "Title": "Smallest standard compliant object size in C++?", "CreationDate": "2013-02-11T12:46:25.390", "Id": "14812214", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2013-02-11T12:57:15.513", "Score": "2", "OwnerUserId": "452307", "Tags": "<c++><sizeof>", "AnswerCount": "1"}, "14812252": {"Id": "14812252", "PostTypeId": "2", "Body": "<p>The minimum size of an object is zero (\u00a71.8/5). However, complete objects must always have non-zero size, and that size must be at least one.</p>\n<blockquote>\n<p id=\"so_14812214_14812252_0\">Unless it is a bit-field (9.6), a most derived object shall have a\n  non-zero size and shall occupy one or more bytes of storage. Base\n  class subobjects may have zero size. An object of trivially copyable\n  or standard-layout type (3.9) shall occupy contiguous bytes of\n  storage.</p>\n</blockquote>\n<p>Base class subobjects of empty types can have zero size thanks to what is known as EBCO, the <em>empty base class optimization</em>.</p>\n", "LastEditorUserId": "46642", "LastActivityDate": "2013-02-11T12:57:15.513", "Score": "8", "CreationDate": "2013-02-11T12:47:50.843", "ParentId": "14812214", "CommentCount": "14", "OwnerUserId": "46642", "LastEditDate": "2013-02-11T12:57:15.513"}});