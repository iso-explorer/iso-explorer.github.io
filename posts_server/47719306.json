post_cb({"bq_ids": {"n4140": {"so_47719306_47719541_2": {"length": 7, "quality": 0.6363636363636364, "section_id": 5946}}, "n3337": {"so_47719306_47719541_2": {"length": 6, "quality": 0.5454545454545454, "section_id": 14}}, "n4659": {"so_47719306_47719541_2": {"length": 6, "quality": 0.5454545454545454, "section_id": 16}}}, "47719306": {"ViewCount": "68", "Body": "<p>Can you use an <code>auto</code> deduced type where you have a comma to indicate initialization of two or more variables. Like this:</p>\n<pre><code> auto p = c.begin(), e = c.end();\n</code></pre>\n<p>Or is the presence of two initializations  (potentially) too confusing for a compiler?</p>\n", "Title": "Can you use auto with a comma", "CreationDate": "2017-12-08T17:22:59.513", "LastActivityDate": "2017-12-08T18:06:29.677", "CommentCount": "11", "LastEditDate": "2017-12-08T18:06:29.677", "PostTypeId": "1", "LastEditorUserId": "545127", "Id": "47719306", "Score": "-5", "OwnerUserId": "545127", "Tags": "<c++><initialization><auto>", "AnswerCount": "2"}, "47719541": {"Id": "47719541", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_47719306_47719541_0\">Can you use an auto deduced type where you have a comma operator to indicate initialization of two or more variables.</p>\n</blockquote>\n<p>Yes.</p>\n<blockquote>\n<p id=\"so_47719306_47719541_1\">Or is the presence of two initialization too confusing for a compiler?</p>\n</blockquote>\n<p>No, it is not. As long as the auto deduction does not result in inconsistent types declaring multiple variables in the same statement using <code>auto</code> is fine.</p>\n<p>From the <a href=\"https://timsong-cpp.github.io/cppwp/n3337/dcl.spec.auto#3\" rel=\"nofollow noreferrer\">C++11 Standard/7.1.6.4 auto specifier/3</a>:</p>\n<blockquote id=\"so_47719306_47719541_2\">\n<pre><code>auto x = 5;                 // OK: x has type int\nconst auto *v = &amp;x, u = 6;  // OK: v has type const int*, u has type const int\n</code></pre>\n</blockquote>\n<p>However, you may not use:</p>\n<pre><code>const auto *v = &amp;x, u = 6.0;\n</code></pre>\n<p>and hope for the type of <code>v</code> to be deduced as <code>const int*</code> and the type of <code>u</code> to be deduced as <code>const double</code>.</p>\n", "LastActivityDate": "2017-12-08T17:39:22.277", "Score": "1", "CreationDate": "2017-12-08T17:39:22.277", "ParentId": "47719306", "CommentCount": "0", "OwnerUserId": "434551"}, "47719351": {"Id": "47719351", "PostTypeId": "2", "Body": "<p>Yes you can initialize them that way as long as they are of the same type (which they are in your example).</p>\n", "LastEditorUserId": "2096824", "LastActivityDate": "2017-12-08T17:54:32.300", "Score": "3", "CreationDate": "2017-12-08T17:25:53.827", "ParentId": "47719306", "CommentCount": "3", "OwnerUserId": "2096824", "LastEditDate": "2017-12-08T17:54:32.300"}});