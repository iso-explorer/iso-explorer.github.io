post_cb({"41961562": {"ParentId": "41961181", "PostTypeId": "2", "CommentCount": "1", "Body": "<blockquote>\n<p id=\"so_41961181_41961562_0\">Is this code correct (and there is a mistake in the Standard)</p>\n</blockquote>\n<p>The standard is what decides if a program is \"correct\" i.e. well-formed. The standard explicitly says that the program is ill-formed.</p>\n<blockquote>\n<p id=\"so_41961181_41961562_1\">or is it incorrect (and there is a bug in both Clang and GCC)?</p>\n</blockquote>\n<p>The program is ill-formed (incorrect). Both clang and gcc are standard compliant in their observed behaviour.</p>\n<blockquote>\n<p id=\"so_41961181_41961562_2\">Is it possible that a/this program is \"ill-formed, no diagnostic required\" and that the compilers are allowed to compile it successfully?</p>\n</blockquote>\n<p>Yes. The standard doesn't require that an ill-formed program must fail to compile. It merely requires that the implementation issues at least one diagnostic message, if the program violates the rules. Some rules are not diagnosable, and diagnostic is not required if such rules are violated.</p>\n<p>In fact, the rule is considered \"not diagnosable\" because it would be very difficult for the compiler to prove (in general) that the rule is violated. It is quite typical that \"no diagnostic required\" rule violations compile successfully.</p>\n<p>If an ill-formed program does compile, the standard does not specify how such program should behave.</p>\n", "OwnerUserId": "2079303", "LastEditorUserId": "2079303", "LastEditDate": "2017-01-31T21:19:54.613", "Id": "41961562", "Score": "3", "CreationDate": "2017-01-31T15:42:19.063", "LastActivityDate": "2017-01-31T21:19:54.613"}, "41961181": {"CommentCount": "6", "ViewCount": "122", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2017-01-31T15:21:59.547", "LastActivityDate": "2017-01-31T21:19:54.613", "Title": "Ill-Formed, No Diagnostic Required (NDR): ConstExpr Function Throw in C++14", "AcceptedAnswerId": "41961562", "LastEditDate": "2017-05-23T12:09:10.833", "Id": "41961181", "Score": "2", "Body": "<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nconstexpr int f(bool b){ return b ? throw 0 : 0; } // OK \n\nconstexpr int f() { return f(true); } // Ill-Formed, No Diagnostic Required\n\nint main(){\n\n    try{\n        f();\n    }catch( int x ){\n        cout &lt;&lt; \"x = \" &lt;&lt; x &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>\n<p>This code is an example from the C++14 Standard (ISO/IEC 14882:2014), Section 7.1.5, Paragraph 5:</p>\n<blockquote>\n<p id=\"so_41961181_41961181_0\">For a non-template, non-defaulted constexpr function or a non-template, non-defaulted, non-inheriting constexpr constructor, if no argument values exist such that an invocation of the function or constructor could be an evaluated subexpression of a core constant expression (5.19), the program is ill-formed; no diagnostic required.</p>\n</blockquote>\n<p>It is described as \"<strong>ill-formed, no diagnostic required</strong>\" because <em>a throw-expression</em> is not a <em>core constant expression</em> (5.19/2). However, both Clang and GCC compile it successfully (<a href=\"http://ideone.com/HfVJ2K\" rel=\"nofollow noreferrer\">Ideone</a>).</p>\n<ul>\n<li>Is this code correct (and there is a mistake in the Standard) or is it incorrect (and there is a bug in both Clang and GCC)?</li>\n</ul>\n<p>I also found these interesting discussions about the Standard wording: </p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/22180312/difference-between-undefined-behavior-and-ill-formed-no-diagnostic-message-requ\">Difference between Undefined Behavior and Ill-formed, no diagnostic message required</a></li>\n<li><a href=\"https://stackoverflow.com/questions/24881706/what-is-the-rationale-to-no-diagnostic-required\">What is the rationale to \"no diagnostic required\"?</a></li>\n<li><a href=\"https://stackoverflow.com/questions/15805394/what-is-the-c-compiler-required-to-do-with-ill-formed-programs-according-to-th\">What is the C++ compiler required to do with ill-formed programs according to the Standard?</a></li>\n</ul>\n<p>Is it possible that a/this program is \"<strong>ill-formed, no diagnostic required</strong>\" and that the compilers are allowed to compile it successfully?</p>\n", "Tags": "<c++><c++14><constexpr><throw>", "OwnerUserId": "6892577", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_41961181_41961181_0": {"section_id": 5421, "quality": 0.9259259259259259, "length": 25}}, "n3337": {"so_41961181_41961181_0": {"section_id": 5216, "quality": 0.5925925925925926, "length": 16}}, "n4659": {"so_41961181_41961181_0": {"section_id": 6843, "quality": 0.7407407407407407, "length": 20}}}});