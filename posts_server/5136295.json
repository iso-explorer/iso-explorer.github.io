post_cb({"5136336": {"ParentId": "5136295", "CommentCount": "1", "Body": "<p>a switch is essentially a <code>goto</code>, that is, it is a <code>goto</code> to the appropriate label. The C++ standard forbids a goto to bypass an initialization of a non-POD object. Take the vector declaration into braces and it will solve the problem</p>\n<pre><code>switch (retrycancel)\n    {\n     case 4:                //The user pressed RETRY\n     {\n        std::vector&lt;MainHandles::window_data&gt; windows = MainHandles().enum_windows().get_results(); //Enumerate all visible windows and store handle and caption in \"windows\"\n        break;\n     }\n    case 2: \n        //code\n    }\n</code></pre>\n", "OwnerUserId": "469935", "PostTypeId": "2", "Id": "5136336", "Score": "11", "CreationDate": "2011-02-27T22:06:15.853", "LastActivityDate": "2011-02-27T22:06:15.853"}, "5136332": {"ParentId": "5136295", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>section 6.6.4 of the C++ standard:</p>\n<blockquote>\n<p id=\"so_5136295_5136332_0\">The goto statement unconditionally\n  transfers control to the statement\n  labeled by the identifier. The\n  identifier shall be a label (6.1)\n  located in the current function.</p>\n</blockquote>\n<p>section 6.7 of the C++ standard:</p>\n<blockquote>\n<p id=\"so_5136295_5136332_1\">It is possible to transfer into a\n  block, but <strong>not in a way that bypasses\n  declarations with initialization</strong>. A\n  program that jumps from a point\n  where a local variable with automatic\n  storage duration is not in scope to a\n  point where it is in scope is\n  ill-formed unless the variable has POD\n  type (3.9) and is declared without an\n  initializer</p>\n</blockquote>\n<p><strong>Emphasis</strong> added by me. Since <code>switch</code> is really <code>goto</code> in disguise, you're encountering this behavior. To solve this, add braces if you must use a <code>switch</code></p>\n<pre><code>switch (retrycancel)\n    {\n    case 4:\n    {\n        const std::vector&lt;MainHandles::window_data&gt; windows(\n            MainHandles().enum_windows().get_results()\n        );\n        break;\n    }\n    case 2: \n        //code\n    }\n</code></pre>\n<p>or refactor into <code>if</code>/<code>else</code></p>\n<pre><code>if (retrycancel == 4) {\n    const std::vector&lt;MainHandles::window_data&gt; windows(\n        MainHandles().enum_windows().get_results()\n    );\n} else if (retrycancel == 2)\n    // code\n} else {\n    ...\n}\n</code></pre>\n<p>Though it's not obvious to me what you're hoping to accomplish with creating the <code>windows</code> <code>vector</code> inside a <code>switch</code>, so you may want to rethink your design. <strong>Note</strong> I added a <code>const</code> qualifier to <code>windows</code> since it's not modified in your example.</p>\n", "OwnerUserId": "283302", "LastEditorUserId": "283302", "LastEditDate": "2011-02-27T22:19:38.703", "Id": "5136332", "Score": "51", "CreationDate": "2011-02-27T22:05:12.173", "LastActivityDate": "2011-02-27T22:19:38.703"}, "5136295": {"CommentCount": "0", "AcceptedAnswerId": "5136332", "PostTypeId": "1", "LastEditorUserId": "1321293", "CreationDate": "2011-02-27T21:59:36.240", "LastActivityDate": "2012-10-10T17:22:00.163", "LastEditDate": "2012-10-10T17:22:00.163", "ViewCount": "39050", "FavoriteCount": "8", "Title": "switch \"transfer of control bypasses initialization of:\" when calling a function", "Id": "5136295", "Score": "36", "Body": "<p>I get a \"transfer of control bypasses initialization of:\" error when i try to build the following switch:</p>\n<pre><code>switch (retrycancel)\n{\n    case 4:    //The user pressed RETRY\n        //Enumerate all visible windows and store handle and caption in \"windows\"\n        std::vector&lt;MainHandles::window_data&gt; windows = MainHandles().enum_windows().get_results(); \n        break;\n\n    case 2: \n        //code\n}\n</code></pre>\n<p>It has something to do with my calling my enumerate function. If it is not allowed to call a function from within a switch, is there a workaround for this kind of problem?</p>\n", "Tags": "<c++><function><switch-statement>", "OwnerUserId": "583187", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_5136295_5136332_0": {"section_id": 3915, "quality": 0.8666666666666667, "length": 13}, "so_5136295_5136332_1": {"section_id": 3918, "quality": 0.8888888888888888, "length": 24}}, "n3337": {"so_5136295_5136332_0": {"section_id": 3775, "quality": 0.8666666666666667, "length": 13}, "so_5136295_5136332_1": {"section_id": 3778, "quality": 0.8888888888888888, "length": 24}}, "n4659": {"so_5136295_5136332_0": {"section_id": 4801, "quality": 0.8666666666666667, "length": 13}, "so_5136295_5136332_1": {"section_id": 4804, "quality": 0.9259259259259259, "length": 25}}}});