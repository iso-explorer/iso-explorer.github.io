post_cb({"28926412": {"ViewCount": "65", "Body": "<p>I was taught that if we define <code>array[N]</code>, then <code>N</code> should be a const variable or a const expression. But now i find the following code can be compiled and run correctly.(I use g++ 4.8.3, if i use vs2010, there will be a compiled error:error C2057: expected constannt express)</p>\n<pre><code>#include&lt;iostream&gt;\nint main()\n{\n    int N;\n    std::cin&gt;&gt;N;\n    int A[N];\n    for(int i=0;i&lt;N;++i)\n       std::cin&gt;&gt;A[i];\n    for(int i=0;i&lt;N;++i)\n        std::cout&lt;&lt;A[i]&lt;&lt;\" \";\n    return 0;\n}\n</code></pre>\n<p>Obviously <code>N</code> is not const type. I use g++ 4.8.3</p>\n", "Title": "Does array size need to be const?", "CreationDate": "2015-03-08T12:32:28.113", "LastActivityDate": "2015-03-08T12:47:08.440", "CommentCount": "6", "PostTypeId": "1", "ClosedDate": "2015-03-08T17:42:05.950", "Id": "28926412", "Score": "2", "OwnerUserId": "4427875", "Tags": "<c++><arrays>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_28926412_28926516_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 3228}}, "n3337": {"so_28926412_28926516_0": {"length": 9, "quality": 0.6923076923076923, "section_id": 3101}}, "n4659": {"so_28926412_28926516_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 3985}}}, "28926488": {"Id": "28926488", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_28926412_28926488_0\"><em>\"<strong>Does array size need to be const?</strong>\"</em></p>\n</blockquote>\n<p>Yes, according the current c++ standard, array size specifiers need to be const expressions.</p>\n<p>A number of compilers support VLA's (variable length arrays) allocation on the stack. It's a compiler extension and isn't portable code.</p>\n<p>If you need a portable variant, you can use a <code>std::vector&lt;int&gt;</code> like follows</p>\n<pre><code>int N;\nstd::cin&gt;&gt;N;\nstd::vector&lt;int&gt; A(N);\n</code></pre>\n", "LastEditorUserId": "1413395", "LastActivityDate": "2015-03-08T12:47:08.440", "Score": "0", "CreationDate": "2015-03-08T12:40:19.223", "ParentId": "28926412", "CommentCount": "1", "OwnerUserId": "1413395", "LastEditDate": "2015-03-08T12:47:08.440"}, "28926516": {"Id": "28926516", "PostTypeId": "2", "Body": "<p>It seems that the first compiler has its own language extension that allows to use Variable Length Arrays (that are introduced in C).</p>\n<p>Nevertheless this feature is not C++ compliant. According to the definition of arrays in C++ the size of an array if it is present shall be a constant expression greater than zero:</p>\n<pre><code>D1 [ constant-expressionopt] attribute-specifier-seqopt\n</code></pre>\n<p>From the C++ Standard (8.3.4 Arrays)</p>\n<blockquote id=\"so_28926412_28926516_0\">\n<ol>\n<li>...If the <strong>constant-expression</strong> (5.19) is present, it shall be a converted constant expression of type std::size_t and its value shall\n  be greater than zero.</li>\n</ol>\n</blockquote>\n", "LastActivityDate": "2015-03-08T12:43:08.720", "CommentCount": "0", "CreationDate": "2015-03-08T12:43:08.720", "ParentId": "28926412", "Score": "0", "OwnerUserId": "2877241"}});