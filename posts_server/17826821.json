post_cb({"bq_ids": {"n4140": {"so_17826821_17827365_1": {"length": 16, "quality": 0.8888888888888888, "section_id": 1543}}, "n3337": {"so_17826821_17827365_1": {"length": 16, "quality": 0.8888888888888888, "section_id": 1537}}, "n4659": {"so_17826821_17827365_1": {"length": 16, "quality": 0.8888888888888888, "section_id": 1693}}}, "17826821": {"ViewCount": "212", "Body": "<p>The docs on this are rather lacking so I'm hoping the community can run a simple test and post results here so that I, and anybody else, has a reference.</p>\n<pre><code>#include &lt;cwchar&gt;\nsizeof( std::mbstate_t );\n</code></pre>\n<p>If you could post the results here and also mention which compiler you are using, I would be very grateful.</p>\n<p>On VS2010 it's declared as <code>typedef int mbstate_t;</code> and it's size is 4 bytes for both 32 and 64 bit builds.</p>\n<p>I'm asking this because <code>mbstate_t</code> is a member of <code>streampos</code>. I need to use this member to store the conversion state of an encoding. The minimum space I can get away with is 3 bytes so I need to know if any implementation is going to break my code.</p>\n<p>Thanks in advance.</p>\n", "Title": "Size of implementation specific std::mbstate_t", "CreationDate": "2013-07-24T06:35:00.877", "LastActivityDate": "2013-07-24T07:26:47.183", "CommentCount": "8", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2013-07-24T06:40:47.147", "Tags": "<c++><c><c++11><compiler-specific>", "Id": "17826821", "LastEditorUserId": "1479092", "Score": "0", "OwnerUserId": "1479092", "ClosedDate": "2014-01-31T09:55:03.737", "AnswerCount": "3"}, "17826929": {"Id": "17826929", "PostTypeId": "2", "Body": "<p>gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3 on x86_64</p>\n<pre><code>size = 8\n</code></pre>\n<p>gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3 on armv7l</p>\n<pre><code>size = 8\n</code></pre>\n", "LastActivityDate": "2013-07-24T06:41:50.470", "Score": "1", "CreationDate": "2013-07-24T06:41:50.470", "ParentId": "17826821", "CommentCount": "4", "OwnerUserId": "135549"}, "17827365": {"Id": "17827365", "PostTypeId": "2", "Body": "<p>From the C11 specification (7.29.1/2):</p>\n<blockquote>\n<pre><code>   mbstate_t\n</code></pre>\n<p id=\"so_17826821_17827365_0\">which is a complete object type other than an array type that can hold the conversion state\n  information necessary to convert between sequences of multibyte characters and wide\n  characters;</p>\n</blockquote>\n<p>So while I was wrong in that is can be an array, it could be anything else (including a structure <em>containing</em> an array). The language in the specification doesn't say <em>anything</em> about how it should be implemented, just that it's \"a complete object type other than an array type\".</p>\n<hr>\n<p>From the C++11 specification (multiple places, for example 21.2.3.1/4):</p>\n<blockquote>\n<p id=\"so_17826821_17827365_1\">The type <code>mbstate_t</code> is defined in <code>&lt;cwchar&gt;</code> and can represent any of the conversion states that can occur in an implementation-defined set of supported multibyte character encoding rules.</p>\n</blockquote>\n<hr>\n<p>In conclusion, you can <em>not</em> rely on <code>mbstate_t</code> being an integer type, or of a specific size, if you want to be portable. If you want to be portable, you have to let the standard library manage the state for you.</p>\n</hr></hr>", "LastEditorUserId": "440558", "LastActivityDate": "2013-07-24T07:26:47.183", "Score": "0", "CreationDate": "2013-07-24T07:08:18.783", "ParentId": "17826821", "CommentCount": "4", "LastEditDate": "2013-07-24T07:26:47.183", "OwnerUserId": "440558"}, "17826966": {"Id": "17826966", "PostTypeId": "2", "Body": "<p>You just want know the results of the <strong>sizeof</strong>?</p>\n<p>Qt 5.1 with GCC x86 32bit under Debian:</p>\n<p>size = 8</p>\n", "LastActivityDate": "2013-07-24T06:43:43.023", "Score": "1", "CreationDate": "2013-07-24T06:43:43.023", "ParentId": "17826821", "CommentCount": "1", "OwnerUserId": "2609506"}});