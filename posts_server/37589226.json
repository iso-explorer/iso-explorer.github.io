post_cb({"bq_ids": {"n4140": {"so_37589226_37589226_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 6331}}, "n3337": {"so_37589226_37589226_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 6088}}, "n4659": {"so_37589226_37589226_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 7841}}}, "37589484": {"Id": "37589484", "PostTypeId": "2", "Body": "<p>Section <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/n4582.pdf\" rel=\"nofollow\">D.3 C standard library headers</a> of the C++ standard makes 26 C standard headers part of C++. Thus those are part of C++. Also many other C headers adhere to the shared subset of the languages (probably by <code>#ifdef</code>ing some things out) making them both, valid C and C++ headers.</p>\n", "LastActivityDate": "2016-06-02T10:38:54.550", "CommentCount": "0", "CreationDate": "2016-06-02T10:38:54.550", "ParentId": "37589226", "Score": "4", "OwnerUserId": "206302"}, "37589485": {"Id": "37589485", "PostTypeId": "2", "Body": "<p>For the purpose of the question you follow up with (name conflicts), yes, it certainly can. The reason is that the C++ standard library includes the <code>&lt;c:::&gt;</code> C++ headers for the C standard library contents, and the standard explicitly allows these to provide the names in the global namespace as well (in addition to mandatorily providing them in <code>::std</code>).</p>\n<p>Further, based on Annex D [depr] of the C++ standard, the C standard library headers (the <code>&lt;:::.h&gt;</code> versions) are also part of the C++ standard library (albeit deprecated). This means [res.on.headers]/1 allows C++ headers to include them.</p>\n", "LastActivityDate": "2016-06-02T10:38:56.290", "CommentCount": "0", "CreationDate": "2016-06-02T10:38:56.290", "ParentId": "37589226", "Score": "3", "OwnerUserId": "1782465"}, "37589226": {"ViewCount": "137", "Body": "<p>I can only find in the standard draft N4582 that</p>\n<blockquote>\n<p id=\"so_37589226_37589226_0\">[res.on.headers/1] A C++ header may include other C++ headers.</p>\n</blockquote>\n<p>It seems not to specify that whether a C++ header can include a C standard header. </p>\n<p>If it is permitted, is it unsafe to use a global name defined in a C standard header even if this header is not included (since the program may implicitly include the header through some C++ standard header)? </p>\n", "AcceptedAnswerId": "37589485", "Title": "Can a C++ standard library header include a C standard header?", "CreationDate": "2016-06-02T10:26:43.393", "Id": "37589226", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2016-06-02T10:38:56.290", "Score": "13", "OwnerUserId": "5376789", "Tags": "<c++><c><c++-standard-library>", "AnswerCount": "2"}});