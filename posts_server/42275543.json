post_cb({"42275543": {"CommentCount": "6", "AcceptedAnswerId": "42275579", "PostTypeId": "1", "LastEditorUserId": "3666197", "CreationDate": "2017-02-16T13:37:26.480", "LastActivityDate": "2017-02-25T06:11:47.883", "LastEditDate": "2017-02-25T06:11:47.883", "ViewCount": "2834", "FavoriteCount": "1", "Title": "What does the underscore mean in the typedef structure?", "Id": "42275543", "Score": "21", "Body": "<p>I was reading the source code of zmq, and came across the following <code>typedef</code></p>\n<pre><code>typedef struct {unsigned char _ [32];} zmq_msg_t;\n</code></pre>\n<p>I don't understand what the underscore means in this definition. Could someone please help shed some light?</p>\n", "Tags": "<c++><c><structure><typedef>", "OwnerUserId": "7413590", "AnswerCount": "5"}, "42275608": {"ParentId": "42275543", "CommentCount": "0", "Body": "<p>It doesn't mean anything, it's simply the name of the structure member.</p>\n<p>It's not the most communicative name, but it's probably chosen to be a bit \"secret\".</p>\n<p>An identifier basically has to match <code>[A-Za-z_][A-Za-z_0-9]*</code>, and this one does.</p>\n", "OwnerUserId": "28169", "PostTypeId": "2", "Id": "42275608", "Score": "19", "CreationDate": "2017-02-16T13:40:43.880", "LastActivityDate": "2017-02-16T13:40:43.880"}, "42275579": {"ParentId": "42275543", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>An underscore (<code>_</code>) is a valid identifier, in this case, a name of the member of the structure. It does not have any <em>special</em> meaning, as such.</p>\n<p>Quoting <code>C11</code>, chapter \u00a76.4.2.1, <em>Identifiers</em></p>\n<blockquote>\n<p id=\"so_42275543_42275579_0\">An identifier is a sequence of nondigit characters (including the underscore <code>_</code>, the\n  lowercase and uppercase Latin letters, and other characters) and digits, which designates\n  one or more entities [....]</p>\n</blockquote>\n<p>AFAIR, this is true in case of C++, also, refer chapter 2.11, C++14.</p>\n", "OwnerUserId": "2173917", "LastEditorUserId": "2173917", "LastEditDate": "2017-02-16T13:56:39.347", "Id": "42275579", "Score": "32", "CreationDate": "2017-02-16T13:39:39.427", "LastActivityDate": "2017-02-16T13:56:39.347"}, "42275665": {"ParentId": "42275543", "CommentCount": "0", "Body": "<p>In one word? Nothing. _ is a character as any other and can be used to name a variable... <br><br>\nMost programmers, however, use _ to replace spaces in variable names... so, you can do something like this:<br><br>\n<code>int my_darling_little_beloved_variable;</code></br></br></br></br></p>\n", "OwnerUserId": "7066323", "PostTypeId": "2", "Id": "42275665", "Score": "1", "CreationDate": "2017-02-16T13:43:10.387", "LastActivityDate": "2017-02-16T13:43:10.387"}, "42278520": {"ParentId": "42275543", "CommentCount": "0", "Body": "<p>In several languages there is a convention to use the identifier <code>_</code> for \"don't care\" variables that are not supposed to ever be referenced.  For example, you could write in Scheme/Lisp</p>\n<pre><code>(let* ((x ...)\n       (_ ...&lt;some side effect depending on x&gt;)\n       (y ...&lt;something making use of the side effect's result&gt;))\n  ...)\n</code></pre>\n<p>In this case there is no problem with scoping since you can reassign <code>_</code> as often as you want.  In C/C++ this convention is not all that workable since more often than not several uses of <code>_</code> would conflict.  It is not necessary for ignored parameters since you can just omit them altogether:</p>\n<pre><code>int fun(int a, int, int b) { return a + b; }\n</code></pre>\n<p>However, as sole size substitute in a structure (for which it is used here), you cannot omit the identifier, and you'll only ever need one identifier per namespace.  So in this case, this convention works out.  But as an idiomatic pattern, it is used in other languages a whole lot more.</p>\n", "Id": "42278520", "PostTypeId": "2", "OwnerDisplayName": "user7576024", "Score": "12", "CreationDate": "2017-02-16T15:45:52.217", "LastActivityDate": "2017-02-16T15:45:52.217"}, "42275617": {"ParentId": "42275543", "PostTypeId": "2", "CommentCount": "8", "Body": "<p>From cppreference, for not having a copy of Standard by me:</p>\n<blockquote>\n<p id=\"so_42275543_42275617_0\">An identifier is an arbitrarily long sequence of digits, underscores,\n  lowercase and uppercase Latin letters, and most Unicode characters</p>\n</blockquote>\n<p>Thus, <code>_</code> is a variable name. See also</p>\n<p><a href=\"https://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier\">What are the rules about using an underscore in a C++ identifier?</a></p>\n<p>for reference on using underscores in identifiers</p>\n", "OwnerUserId": "342384", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:46:30.573", "Id": "42275617", "Score": "3", "CreationDate": "2017-02-16T13:40:59.163", "LastActivityDate": "2017-02-16T13:40:59.163"}, "bq_ids": {"n4140": {"so_42275543_42275617_0": {"section_id": 5333, "quality": 0.5384615384615384, "length": 7}}, "n3337": {"so_42275543_42275617_0": {"section_id": 5130, "quality": 0.5384615384615384, "length": 7}}, "n4659": {"so_42275543_42275617_0": {"section_id": 6754, "quality": 0.5384615384615384, "length": 7}}}});