post_cb({"7957814": {"Id": "7957814", "PostTypeId": "2", "Body": "<p>From the C++11 February Draft</p>\n<blockquote>\n<p id=\"so_7957696_7957814_0\">\u00a7 5.16/2 If either the second or the third operand has type (possibly cv-qualified) void, then the lvalue-to-rvalue (4.1), array-to-pointer (4.2), and function-to-pointer (4.3) standard conversions are performed on the second and third operands, and one of the following shall hold:<br>\n  \u2014 The second or the third operand (but not both) is a throw-expression (15.1); the result is of the type of the other and is a prvalue.<br>\n  \u2014 Both the second and the third operands have type void; the result is of type void and is a prvalue. [ Note: This includes the case where both operands are throw-expressions. \u2014end note ]</br></br></p>\n</blockquote>\n<p>It appears that <code>throw</code> counts as evaluating to a <code>void</code>, and that this is allowed.</p>\n", "LastEditorUserId": "845092", "LastActivityDate": "2011-10-31T18:20:56.617", "Score": "2", "CreationDate": "2011-10-31T18:10:28.810", "ParentId": "7957696", "CommentCount": "2", "OwnerUserId": "845092", "LastEditDate": "2011-10-31T18:20:56.617"}, "7957696": {"ViewCount": "1265", "Body": "<p>The following code compiles with G++ 4.6.1, but not with Visual Studio 2008</p>\n<pre><code>return (m_something == 0) ? \n    throw std::logic_error(\"Something wrong happened\") : m_something;\n</code></pre>\n<p>The fact is the Visual Studio compiler performs an internal crash.</p>\n<p>I want to know if this is standard C++ and why it doesn't compile with Visual Studio, but does with G++?</p>\n", "AcceptedAnswerId": "7957789", "Title": "Throw and ternary operator in C++", "CreationDate": "2011-10-31T18:00:38.360", "Id": "7957696", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2011-10-31T18:20:56.617", "Score": "6", "OwnerUserId": "988360", "Tags": "<c++><operators><ternary-operator>", "AnswerCount": "4"}, "7957818": {"Id": "7957818", "PostTypeId": "2", "Body": "<p>The internal crash can be considered a bug of Visual Studio. A compiler should never crash because of the code being compiled.</p>\n<p>This is a very strange usage of the ternary operator, a simple if before the return would be a much preferable idiom:</p>\n<pre><code>if(m_something == 0)\n    throw std::logic_error(\"Something wrong happened\");\n\nreturn m_something;\n</code></pre>\n", "LastActivityDate": "2011-10-31T18:11:09.020", "CommentCount": "0", "CreationDate": "2011-10-31T18:11:09.020", "ParentId": "7957696", "Score": "1", "OwnerUserId": "578749"}, "bq_ids": {"n4140": {"so_7957696_7957814_0": {"length": 35, "quality": 0.6481481481481481, "section_id": 6168}}, "n3337": {"so_7957696_7957814_0": {"length": 45, "quality": 0.8333333333333334, "section_id": 5929}}, "n4659": {"so_7957696_7957814_0": {"length": 35, "quality": 0.6481481481481481, "section_id": 7665}}}, "7957749": {"Id": "7957749", "PostTypeId": "2", "Body": "<p>Comeau compiles it without errors (here's my minimal compilable test case):</p>\n<pre><code>int main(void)\n{\n    int x = 17;\n    return x ? throw \"Something wrong happened\" : 5;\n}\n</code></pre>\n<p>which is pretty good evidence that it's allowed by the standard.  So is the fact that MSVC crashes, rather than failing cleanly with an error.</p>\n<p>Also, it appears to be fixed in VC++ 2010</p>\n<pre><code>R:\\&gt;cl ternarythrowtest.cpp\nMicrosoft (R) 32-bit C/C++ Optimizing Compiler Version 16.00.40219.01 for 80x86\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nternarythrowtest.cpp\nMicrosoft (R) Incremental Linker Version 10.00.40219.01\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n/out:ternarythrowtest.exe\nternarythrowtest.obj\n</code></pre>\n<p>and x64 version:</p>\n<pre><code>R:\\&gt;cl ternarythrowtest.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 16.00.40219.01 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nternarythrowtest.cpp\nMicrosoft (R) Incremental Linker Version 10.00.40219.01\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n/out:ternarythrowtest.exe\nternarythrowtest.obj\n</code></pre>\n<p>Upgrade your compiler if possible, this is far from the only bug fixed in 2010.</p>\n", "LastEditorUserId": "103167", "LastActivityDate": "2011-10-31T18:17:41.730", "Score": "4", "CreationDate": "2011-10-31T18:05:23.567", "ParentId": "7957696", "CommentCount": "7", "OwnerUserId": "103167", "LastEditDate": "2011-10-31T18:17:41.730"}, "7957789": {"Id": "7957789", "PostTypeId": "2", "Body": "<p>It is standard C++.  Either (or both) of the then/else expressions in a conditional expression is allowed to be a throw-expression instead (C++98 5.16/2).</p>\n<p>If Visual Studio crashes when compiling it... that would seem to be unfortunate!</p>\n", "LastEditorUserId": "280577", "LastActivityDate": "2011-10-31T18:16:28.263", "Score": "10", "CreationDate": "2011-10-31T18:08:42.170", "ParentId": "7957696", "CommentCount": "2", "OwnerUserId": "280577", "LastEditDate": "2011-10-31T18:16:28.263"}});