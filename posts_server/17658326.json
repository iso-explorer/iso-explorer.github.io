post_cb({"17658415": {"Id": "17658415", "PostTypeId": "2", "Body": "<p>I believe it's legal (<code>typedef</code> are certainly processed in the order they appear), but it will be TERRIBLY confusing for anyone trying to read the code in the future.</p>\n<p>It would make much more sense to rename the secondary type:</p>\n<pre><code> typedef T *Tptr; \n Tptr m2;\n</code></pre>\n", "LastActivityDate": "2013-07-15T15:50:44.033", "CommentCount": "1", "CreationDate": "2013-07-15T15:50:44.033", "ParentId": "17658326", "Score": "1", "OwnerUserId": "1919155"}, "17658326": {"ViewCount": "194", "Body": "<p>Is it legal for a name to refer to a base class member in one part of class definition and to a derived class member in another? This code demonstrates it:</p>\n<pre><code>struct Base\n{\n  typedef int T;\n};\n\n\nstruct Derived : Base\n{\n  T m1; //type int\n  typedef T *T;\n  T m2; //type int*\n};\n</code></pre>\n<p>I haven't been able to find a ruling against this in the standard. Is the code legal?</p>\n", "AcceptedAnswerId": "17659594", "Title": "Using and re-defining typedef from base class", "CreationDate": "2013-07-15T15:46:40.410", "Id": "17658326", "CommentCount": "1", "LastEditDate": "2013-07-15T15:53:59.973", "PostTypeId": "1", "LastEditorUserId": "1137388", "LastActivityDate": "2013-07-15T16:54:14.470", "Score": "2", "OwnerUserId": "1782465", "Tags": "<c++><inheritance><typedef>", "AnswerCount": "3"}, "17659594": {"Id": "17659594", "PostTypeId": "2", "Body": "<p>Yes, it is legal. I will make no comment on whether or not it's advisable.</p>\n<p>First, you need to be able to redeclare a different entity with the same name in the derived class; this is allowed by 3.3.10/1 (with my emphasis):</p>\n<blockquote>\n<p id=\"so_17658326_17659594_0\">A name can be hidden by an explicit declaration of that same name in a nested declarative region <strong>or derived class</strong>.</p>\n</blockquote>\n<p>Then you need <code>T</code> to refer to <code>Base::T</code> in the declaration of the <code>Derived::T</code>; i.e. <code>Derived::T</code> must not be in scope at that point. The scope is defined by 3.3.3/1:</p>\n<blockquote>\n<p id=\"so_17658326_17659594_1\">Its potential scope begins at its point of declaration and ends at the end of its block.</p>\n</blockquote>\n<p>and the point of declaration is defined by 3.3.2/1:</p>\n<blockquote>\n<p id=\"so_17658326_17659594_2\">The point of declaration for a name is immediately after its complete declarator</p>\n</blockquote>\n<p>meaning that, before and during the declarator, <code>Derived::T</code> is not in scope and so <code>T</code> refers to <code>Base::T</code>.</p>\n", "LastActivityDate": "2013-07-15T16:54:14.470", "CommentCount": "0", "CreationDate": "2013-07-15T16:54:14.470", "ParentId": "17658326", "Score": "1", "OwnerUserId": "204847"}, "bq_ids": {"n4140": {"so_17658326_17659594_1": {"length": 11, "quality": 1.0, "section_id": 7061}, "so_17658326_17659594_0": {"length": 12, "quality": 1.0, "section_id": 7078}, "so_17658326_17659594_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 7049}}, "n3337": {"so_17658326_17659594_1": {"length": 11, "quality": 1.0, "section_id": 6805}, "so_17658326_17659594_0": {"length": 12, "quality": 1.0, "section_id": 6822}, "so_17658326_17659594_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 6794}}, "n4659": {"so_17658326_17659594_1": {"length": 11, "quality": 1.0, "section_id": 8558}, "so_17658326_17659594_0": {"length": 12, "quality": 1.0, "section_id": 8579}, "so_17658326_17659594_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 8546}}}, "17658696": {"Id": "17658696", "PostTypeId": "2", "Body": "<p>Luckily in this case it doesn't matter whether it's legal or not (I believe that it's well-formed because typedefs are allowed to shadow) because you can make a tiny refactor change and the code become completely obvious:</p>\n<pre><code>struct Derived : Base\n{\n  typedef Base::T BaseT;\n  typedef BaseT* T;\n\n  BaseT m1; //type int\n  T m2; //type int*\n};\n</code></pre>\n", "LastActivityDate": "2013-07-15T16:05:10.667", "CommentCount": "0", "CreationDate": "2013-07-15T16:05:10.667", "ParentId": "17658326", "Score": "2", "OwnerUserId": "251738"}});