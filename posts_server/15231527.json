post_cb({"15231718": {"Id": "15231718", "PostTypeId": "2", "Body": "<p><code>std::copy</code> is defined as doing <code>*(result + n) = *(first + n)</code> for each element in the sequence (\u00a725.3.1). The value given by <code>*(first + n)</code> is an lvalue expression (\u00a75.3.1/1), in your case referring to an uninitialized value. Since the assignment operator expects a prvalue as it's right operand (this is <a href=\"https://stackoverflow.com/q/14991219/150634\">ill-specified</a>), this will result in lvalue-to-rvalue conversion. Lvalue-to-rvalue conversion on an expression referring to an uninitialized value is undefined behaviour (\u00a74.1):</p>\n<blockquote>\n<p id=\"so_15231527_15231718_0\">If the object to which the glvalue refers is not an object of type T and is not an object of a type derived from T, or if the object is uninitialized, a program that necessitates this conversion has undefined behavior. </p>\n</blockquote>\n<p>So your code has undefined behaviour. The solution is of course to initialize the elements of the array (perhaps with <code>int data[data_size] = {};</code>).</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2013-03-05T18:57:10.260", "Score": "9", "CreationDate": "2013-03-05T18:49:14.840", "ParentId": "15231527", "CommentCount": "5", "LastEditDate": "2017-05-23T10:32:16.927", "OwnerUserId": "150634"}, "bq_ids": {"n4140": {"so_15231527_15231718_0": {"length": 8, "quality": 0.5714285714285714, "section_id": 5768}}, "n3337": {"so_15231527_15231718_0": {"length": 14, "quality": 1.0, "section_id": 5}}, "n4659": {"so_15231527_15231718_0": {"length": 8, "quality": 0.5714285714285714, "section_id": 7225}}}, "15231527": {"ViewCount": "178", "Body": "<p>Is the following code safe, so long as I don't read any elements of the struct's array without setting it with a real value first? Thanks.</p>\n<pre><code>const int data_size = 5;\n\nstruct Testing\n{\n    int data[data_size];\n\n    Testing(const int data[data_size])\n    {\n        std::copy(data, data + data_size, this-&gt;data);\n    }\n};\n\nint main()\n{\n    int data[data_size];\n    data[2] = 57;\n\n    Testing t(data);\n\n    t.data[1] = 93;\n}\n</code></pre>\n", "AcceptedAnswerId": "15231718", "Title": "Is it ok to copy uninitialized data if it will be unused/set later?", "CreationDate": "2013-03-05T18:38:10.083", "Id": "15231527", "CommentCount": "4", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-03-05T18:57:10.260", "Score": "6", "OwnerUserId": "2068573", "Tags": "<c++>", "AnswerCount": "1"}});