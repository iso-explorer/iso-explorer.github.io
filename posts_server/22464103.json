post_cb({"22558060": {"PostTypeId": "2", "Body": "<p>The problem with the code was the MinGW Tool Chain, that was installed wrong. I re-installed it and it worked. Thank you for your answers</p>\n", "LastActivityDate": "2014-03-21T11:54:26.100", "Id": "22558060", "CommentCount": "0", "CreationDate": "2014-03-21T11:54:26.100", "ParentId": "22464103", "Score": "0", "OwnerUserId": "2119587"}, "22464646": {"Id": "22464646", "PostTypeId": "2", "Body": "<p>The problem with your code is that</p>\n<ol>\n<li>Your <code>char</code> should be a <code>char*</code> for a name</li>\n<li>Change your <code>insert</code> function to <code>pdata insert ( int n , tdata *array )</code></li>\n<li>Change <code>(*array)[i].key</code> to <code>array[i].key</code></li>\n<li>You need to return the modified array from your function (e.g. <code>return array;</code>)</li>\n<li>Add statement such as <code>tdata* pdata</code> instead of just <code>pdata data</code>.</li>\n<li>Change your <code>insert</code> call in <code>main</code> to <code>insert(n, data);</code></li>\n<li>Free the memory allocated for array with malloc (call free).</li>\n<li>Once you do that, you will stop getting runtime errors.</li>\n</ol>\n<p>Running example here: <a href=\"http://ideone.com/FsFgCs\" rel=\"nofollow\">http://ideone.com/FsFgCs</a></p>\n", "LastEditorUserId": "1141471", "LastActivityDate": "2014-03-17T21:54:59.933", "CommentCount": "12", "CreationDate": "2014-03-17T20:28:01.693", "ParentId": "22464103", "Score": "3", "OwnerUserId": "2591612", "LastEditDate": "2014-03-17T21:54:59.933"}, "bq_ids": {"n4140": {"so_22464103_22464892_1": {"length": 39, "quality": 0.9512195121951219, "section_id": 3913}}, "n3337": {"so_22464103_22464892_1": {"length": 39, "quality": 0.9512195121951219, "section_id": 3773}}}, "22464103": {"ViewCount": "115", "Body": "<p>I have the following code of a pointer-to-structure array, but I can't get the Insert function working</p>\n<pre><code>    #include &lt;cstdio&gt;\n    #include &lt;cstdlib&gt;\n    #include &lt;iostream&gt;\n\n    using namespace std ;\n\n    typedef struct data\n    {\n        int key ;\n        char name[50] ; \n        int year ;\n    } tdata ;\n\n    typedef tdata* pdata ;\n\n    pdata create ( int n )\n    {\n        pdata aux = ( pdata ) malloc ( n * sizeof (tdata ) ) ;\n        return aux ;\n    }\n\n    pdata insert ( int n , tdata *array[] )\n    {\n        int i , k ;\n        for ( int i = 0 ; i &lt; n ; i ++ )\n        {\n            cin &gt;&gt; k ;\n            (*array)[i].key = k;\n\n        }\n    }       \n</code></pre>\n<p>It has been a while since I worked with pointer to structure arrays, so I don't think I quite remember how it is done. When I build this code using NetBeans/MinGW/MSYS it builds just fine, but I get the following error when I try to run it:</p>\n<p>RUN FAILED (exit value -1,073,741,511, total time: 69ms)</p>\n<p>Any help is appreciated.</p>\n<p>As some people asked, I've written a main(). Here it is:</p>\n<pre><code>    int main ( )\n    {\n        int n ;\n        cin &gt;&gt; n ;\n        pdata data =create(n);\n        data = insert(n, &amp;data);\n\n        return 0;\n    }\n</code></pre>\n<p>IMPORTANT EDIT:\n   I'm getting the same exit failure number even for a program as simple as:</p>\n<pre><code>int main()\n{\n    int n;\n    cin&gt;&gt;n;\n    cout&lt;&lt;n;\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "22558060", "Title": "Can't get a pointer-to-structure array to work", "CreationDate": "2014-03-17T19:58:03.757", "Id": "22464103", "CommentCount": "28", "LastEditDate": "2014-03-17T20:51:00.397", "PostTypeId": "1", "LastEditorUserId": "2119587", "LastActivityDate": "2014-03-21T11:54:26.100", "Score": "0", "OwnerUserId": "2119587", "Tags": "<c++><arrays><data-structures>", "AnswerCount": "4"}, "22464892": {"Id": "22464892", "PostTypeId": "2", "Body": "<p>Here you are omitting a return statement:</p>\n<pre><code>pdata insert ( int n , tdata *array[] )\n    {\n        int i , k ;\n        for ( int i = 0 ; i &lt; n ; i ++ )\n        {\n            cin &gt;&gt; k ;\n            (*array)[i].key = k;\n\n        }\n    }   \n</code></pre>\n<p>Omitting the return statement in a <strong>non-void</strong> function [Except main()] and using the returned value in your code invokes <em>Undefined Behaviour</em>.</p>\n<blockquote>\n<p id=\"so_22464103_22464892_0\">ISO C++-98[Section 6.6.3/2]</p>\n<p id=\"so_22464103_22464892_1\">A return statement with an expression can be used only in functions\n  returning a value; the value of the expression is returned to the\n  caller of the function. If required, the expression is implicitly\n  converted to the return type of the function in which it appears. A\n  return statement can involve the construction and copy of a temporary\n  object (class.temporary). Flowing off the end of a function is\n  equivalent to a return with no value; this results in undefined\n  behavior in a value-returning function.</p>\n</blockquote>\n<p>This means anything can happen, including returning -1,073,741,511.</p>\n<pre><code>data = insert(n, &amp;data);  // undefined behavior\n</code></pre>\n<hr>\n<p>But there are also other problems with your code. Possible solution was given by Gl Joe with my addition of 7th hint:</p>\n<ol>\n<li>Your <code>char</code> should be a <code>char*</code> for a name</li>\n<li>Change your <code>insert</code> function to <code>pdata insert ( int n , tdata *array )</code></li>\n<li>Change <code>(*array)[i].key</code> to <code>array[i].key</code></li>\n<li>You need to return the modified array from your function (e.g. <code>return array;</code>)</li>\n<li>Add statement such as <code>tdata* pdata</code> instead of just <code>pdata data</code>.</li>\n<li>Change your <code>insert</code> call in <code>main</code> to <code>insert(n, data);</code></li>\n<li>Free the memory allocated for array with malloc (call free).</li>\n</ol>\n</hr>", "LastEditorUserId": "1141471", "LastActivityDate": "2014-03-18T01:44:45.843", "CommentCount": "0", "CreationDate": "2014-03-17T20:40:11.320", "ParentId": "22464103", "Score": "1", "OwnerUserId": "1141471", "LastEditDate": "2014-03-18T01:44:45.843"}, "22464459": {"PostTypeId": "2", "Body": "<p>I think the bug is that you are working with an pointer to an array of structures, which is something of an array of arrays. You don't want this.</p>\n<p>When you pass arrays around like this, you are basically passing a pointer to the beginning of the array. (You have to pass the size separately. In a class, you can encapsulate this, but your version is pretty much raw C.)</p>\n<p>Change to </p>\n<pre><code> pdata insert ( int n , tdata *array )\n</code></pre>\n<p>Notice the brackets have disappeared.</p>\n", "LastActivityDate": "2014-03-17T20:17:53.683", "Id": "22464459", "CommentCount": "0", "CreationDate": "2014-03-17T20:17:53.683", "ParentId": "22464103", "Score": "-1", "OwnerUserId": "717898"}});