post_cb({"26568219": {"ParentId": "26568200", "CommentCount": "0", "Body": "<p>Starting a number with 0 makes it Octal, so digits 8 and 9 are illegal, and your other examples show conversion to decimal.</p>\n", "OwnerUserId": "3949566", "PostTypeId": "2", "Id": "26568219", "Score": "2", "CreationDate": "2014-10-25T23:13:24.067", "LastActivityDate": "2014-10-25T23:13:24.067"}, "26568224": {"ParentId": "26568200", "CommentCount": "0", "Body": "<p>Yes, this is expected.</p>\n<blockquote>\n<p id=\"so_26568200_26568224_0\"><code>[C++11: 2.14.2/1]:</code> An <em>integer literal</em> is a sequence of digits that has no period or exponent part. An integer literal may have a prefix that specifies its base and a suffix that specifies its type. The lexically first digit of the sequence of digits is the most significant. A <em>decimal</em> integer literal (base ten) begins with a digit other than 0 and consists of a sequence of decimal digits. <strong>An <em>octal</em> integer literal (base eight) begins with the digit 0 and consists of a sequence of octal digits.</strong><sup>22</sup> A <em>hexadecimal</em> integer literal (base sixteen) begins with 0x or 0X and consists of a sequence of hexadecimal digits, which include the decimal digits and the letters a through f and A through F with decimal values ten through fifteen. <em>[ Example:</em> the number twelve can be written 12, 014, or 0XC. <em>\u2014end example ]</em></p>\n<p id=\"so_26568200_26568224_1\"><sup><sup>22</sup> <strong>The digits 8 and 9 are not octal digits.</strong></sup></p>\n</blockquote>\n", "OwnerUserId": "560648", "PostTypeId": "2", "Id": "26568224", "Score": "8", "CreationDate": "2014-10-25T23:14:03.933", "LastActivityDate": "2014-10-25T23:14:03.933"}, "26568217": {"ParentId": "26568200", "CommentCount": "15", "Body": "<p>Integer literals that start with <code>0</code> are <em>octal</em> literals. Therefore they must only contain the digits 0\u20137.</p>\n<p>(Amusingly, this includes the literal <code>0</code> itself.)</p>\n", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "26568217", "Score": "2", "CreationDate": "2014-10-25T23:12:42.033", "LastActivityDate": "2014-10-25T23:12:42.033"}, "26568200": {"CommentCount": "3", "AcceptedAnswerId": "26568224", "PostTypeId": "1", "LastEditorUserId": "2864740", "CreationDate": "2014-10-25T23:10:26.303", "LastActivityDate": "2014-10-25T23:25:49.623", "LastEditDate": "2014-10-25T23:25:49.623", "ViewCount": "1626", "FavoriteCount": "1", "Title": "What is special about numbers starting with zero?", "Id": "26568200", "Score": "1", "Body": "<p>This is kinda stupid question, but it's interesting for me )</p>\n<p>This is what i get with visual studio 2013</p>\n<pre><code>int i = 07;     // i == 7\nint i = 16;     // i == 16\nint i = 00016;  // i == 14, why?\nint i = 05016;  // i == 2574, wow )\nint i = 08;     // compile error, compiler expects octal number...\n</code></pre>\n<p>If number starts with zero and contains 8, it's compile error. Is this normal? And what exactly compiler does with starting zeros if 00016 == 14?</p>\n<p>Thanks to all ))</p>\n", "Tags": "<c++><c><syntax><compiler-construction><numbers>", "OwnerUserId": "4181780", "AnswerCount": "4"}, "26568220": {"ParentId": "26568200", "CommentCount": "0", "Body": "<p>An integer literal that starts with <code>0</code> is an <a href=\"http://en.wikipedia.org/wiki/Octal\">octal number</a>, much like a number starting with <code>0x</code>is a hexadecimal number.</p>\n<p>Octal numbers can only contain the digits <code>0</code> to <code>7</code>, and this is why you get a compilation error.</p>\n", "Id": "26568220", "PostTypeId": "2", "OwnerDisplayName": "user308323", "Score": "5", "CreationDate": "2014-10-25T23:13:30.493", "LastActivityDate": "2014-10-25T23:13:30.493"}, "bq_ids": {"n4140": {"so_26568200_26568224_0": {"section_id": 5340, "quality": 0.8192771084337349, "length": 68}}, "n3337": {"so_26568200_26568224_0": {"section_id": 5137, "quality": 0.8795180722891566, "length": 73}}, "n4659": {"so_26568200_26568224_0": {"section_id": 6761, "quality": 0.7710843373493976, "length": 64}}}});