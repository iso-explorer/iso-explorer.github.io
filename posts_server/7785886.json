post_cb({"7785963": {"ParentId": "7785886", "CommentCount": "0", "CreationDate": "2011-10-16T17:19:59.743", "OwnerUserId": "560648", "PostTypeId": "2", "Id": "7785963", "Score": "34", "Body": "<pre><code>class A{\n\npublic:\n    friend void fun(A a){std::cout &lt;&lt; \"Im here\" &lt;&lt; std::endl;}\n    friend void fun2(){ std::cout &lt;&lt; \"Im here2\" &lt;&lt; std::endl; }\n    friend void fun3();\n};\n</code></pre>\n<p>Although your definition of <code>fun2</code> <em>does</em> define a \"global\" function rather than a member, and makes it a <code>friend</code> of <code>A</code> at the same time, you are still missing a declaration of the same function in the global scope itself.</p>\n<p>That means that no code in that scope has any idea that <code>fun2</code> exists.</p>\n<p>The same problem occurs for <code>fun</code>, except that Argument-Dependent Lookup can take over and find the function, because there is an argument of type <code>A</code>.</p>\n<p>I recommend instead defining your functions in the usual manner:</p>\n<pre><code>class A {\n   friend void fun(A a);\n   friend void fun2();\n   friend void fun3();\n};\n\nvoid fun(A a) { std::cout &lt;&lt; \"I'm here\"  &lt;&lt; std::endl; }\nvoid fun2()   { std::cout &lt;&lt; \"I'm here2\" &lt;&lt; std::endl; }\nvoid fun3();\n</code></pre>\n<p>Notice now that <a href=\"http://codepad.org/B86OEC5T\" rel=\"noreferrer\"><em>everything</em> works</a> (except <code>fun3</code> because I never defined it).</p>\n", "LastActivityDate": "2011-10-16T17:19:59.743"}, "7785935": {"ParentId": "7785886", "PostTypeId": "2", "CommentCount": "7", "CreationDate": "2011-10-16T17:13:31.447", "Score": "21", "LastEditorUserId": "19563", "LastEditDate": "2011-10-16T17:18:42.420", "Id": "7785935", "OwnerUserId": "19563", "Body": "<p>The reason that you can call <code>fun</code> is that the friend declaration inside class <code>A</code> makes it visible via argument dependent lookup only. Otherwise friend declarations don't make the functions that they declare automatically visible outside of the class scope where the appear.</p>\n<p>You need to add a declaration at namespace scope or inside <code>main</code> to make <code>fun2</code> visible in <code>main</code>.</p>\n<p>E.g.</p>\n<pre><code>void fun2();\n</code></pre>\n<p><code>fun3</code> is visible inside <code>main</code> because its definition (outside of the class) is also a declaration that makes it visible from <code>main</code>.</p>\n<p>ISO/IEC 14882:2011 7.3.1.2:</p>\n<blockquote>\n<p id=\"so_7785886_7785935_0\">The name of the friend is not found by unqualified lookup (3.4.1) or by qualified lookup (3.4.3) until a matching declaration is provided in that namespace scope (either before or after the class definition granting friendship).</p>\n</blockquote>\n<p>3.4.2 (Argument-dependent name lookup) / 4:</p>\n<blockquote>\n<p id=\"so_7785886_7785935_1\">Any namespace-scope friend functions or friend function templates declared in associated classes are visible within their respective namespaces even if they are not visible during an ordinary lookup (11.3).</p>\n</blockquote>\n", "LastActivityDate": "2011-10-16T17:18:42.420"}, "bq_ids": {"n4140": {"so_7785886_7785935_1": {"section_id": 7106, "quality": 0.9090909090909091, "length": 20}, "so_7785886_7785935_0": {"section_id": 5485, "quality": 0.782608695652174, "length": 18}}, "n3337": {"so_7785886_7785935_1": {"section_id": 6850, "quality": 0.9090909090909091, "length": 20}, "so_7785886_7785935_0": {"section_id": 5271, "quality": 0.8695652173913043, "length": 20}}, "n4659": {"so_7785886_7785935_1": {"section_id": 8607, "quality": 0.9090909090909091, "length": 20}, "so_7785886_7785935_0": {"section_id": 6920, "quality": 0.782608695652174, "length": 18}}}, "7785886": {"CommentCount": "2", "AcceptedAnswerId": "7785963", "CreationDate": "2011-10-16T17:06:51.613", "LastActivityDate": "2011-10-16T17:43:25.500", "PostTypeId": "1", "ViewCount": "6161", "FavoriteCount": "11", "Title": "Access friend function defined in class", "Id": "7785886", "Score": "39", "Body": "<p>There is such code:</p>\n<pre><code>#include &lt;iostream&gt;\n\nclass A{\n\npublic:\n    friend void fun(A a){std::cout &lt;&lt; \"Im here\" &lt;&lt; std::endl;}\n    friend void fun2(){ std::cout &lt;&lt; \"Im here2\" &lt;&lt; std::endl; }\n    friend void fun3();\n};\n\nvoid fun3(){\n    std::cout &lt;&lt; \"Im here3\" &lt;&lt; std::endl;\n}\n\nint main() \n{  \n    fun(A()); // works ok\n    //fun2(); error: 'fun2' was not declared in this scope\n    //A::fun2(); error: 'fun2' is not a member of 'A'\n    fun3(); // works ok\n} \n</code></pre>\n<p>How to access function fun2()?</p>\n", "Tags": "<c++><friend>", "OwnerUserId": "738811", "AnswerCount": "2"}});