post_cb({"31213185": {"ParentId": "2310838", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>This is an error. In <code>[expr.sub]</code>:</p>\n<blockquote>\n<p id=\"so_2310838_31213185_0\">A post\ufb01x expression followed by an expression in square brackets is a post\ufb01x expression. One of the expressions shall have the type \u201cpointer to T\u201d and the other shall have unscoped enumeration or integral type.</p>\n</blockquote>\n<p>I am not aware of a clause in the standard that specifies that conversion should happen here (admittedly, I would not be surprised if such a clause existed), although testing with ideone.com did produce a compilation error.</p>\n<p>However, if you're subscripting a class rather than a pointer \u2014 e.g. <code>std::vector</code> or <code>std::array</code>  \u2014 then the overload of <code>operator[]</code> will have the usual semantics of a function call, and floating-point arguments will get converted to the corresponding <code>size_type</code>.</p>\n", "OwnerUserId": "1084944", "LastEditorUserId": "1084944", "LastEditDate": "2015-07-03T19:37:57.230", "Id": "31213185", "Score": "0", "CreationDate": "2015-07-03T19:31:31.847", "LastActivityDate": "2015-07-03T19:37:57.230"}, "2310842": {"ParentId": "2310838", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>The float value will be casted to int (it can give warning or error depending on compiler's warning level)</p>\n<pre><code>s1 = q[12.2]; // same as q[12]\ns2 = q[12.999999]; // same as q[12]\ns3 = q[12.1/6.2]; // same as q[1]\n</code></pre>\n", "OwnerUserId": "231224", "LastEditorUserId": "231224", "LastEditDate": "2010-02-23T10:01:56.117", "Id": "2310842", "Score": "10", "CreationDate": "2010-02-22T12:39:14.540", "LastActivityDate": "2010-02-23T10:01:56.117"}, "2310838": {"CommentCount": "2", "ViewCount": "2746", "PostTypeId": "1", "LastEditorUserId": "28169", "CreationDate": "2010-02-22T12:38:06.680", "LastActivityDate": "2015-07-03T19:37:57.230", "Title": "Float Values as an index in an Array in C++", "LastEditDate": "2010-02-22T12:40:53.807", "Id": "2310838", "Score": "7", "Body": "<p>Can a float value be used as the index of an array? What will happen if an expression used as an index resulted to a float value?</p>\n", "Tags": "<c++>", "OwnerUserId": "278676", "AnswerCount": "5"}, "2317254": {"ParentId": "2310838", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>A C++ array is a contiguous sequence of memory locations. <code>a[x]</code> means \"the xth memory location after one pointed to by <code>a</code>.\" </p>\n<p>What would it mean to access the 12.4th object in a sequence?</p>\n", "OwnerUserId": "53543", "LastEditorUserId": "53543", "LastEditDate": "2010-02-23T10:21:49.907", "Id": "2317254", "Score": "2", "CreationDate": "2010-02-23T10:16:45.823", "LastActivityDate": "2010-02-23T10:21:49.907"}, "2310844": {"ParentId": "2310838", "CommentCount": "0", "Body": "<p>It will be casted to int.</p>\n", "OwnerUserId": "58877", "PostTypeId": "2", "Id": "2310844", "Score": "1", "CreationDate": "2010-02-22T12:39:43.603", "LastActivityDate": "2010-02-22T12:39:43.603"}, "2310843": {"ParentId": "2310838", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>Yes. But it's pointless. The float value will be truncated to an integer.</p>\n<p>(You can use <code>std::map&lt;float, T&gt;</code>, however, but most of the time you'll miss the intended values because of inaccuracy.)</p>\n", "OwnerUserId": "224671", "LastEditorUserId": "28169", "LastEditDate": "2010-02-22T12:40:31.577", "Id": "2310843", "Score": "9", "CreationDate": "2010-02-22T12:39:21.403", "LastActivityDate": "2010-02-22T12:40:31.577"}, "bq_ids": {"n4140": {"so_2310838_31213185_0": {"section_id": 5986, "quality": 0.8947368421052632, "length": 17}}, "n3337": {"so_2310838_31213185_0": {"section_id": 5754, "quality": 0.8947368421052632, "length": 17}}, "n4659": {"so_2310838_31213185_0": {"section_id": 7486, "quality": 0.7894736842105263, "length": 15}}}});