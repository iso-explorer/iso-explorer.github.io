post_cb({"33178981": {"CommentCount": "2", "ViewCount": "181", "PostTypeId": "1", "LastEditorUserId": "4470210", "CreationDate": "2015-10-16T20:24:43.440", "LastActivityDate": "2017-03-20T13:19:42.273", "Title": "Constructor with an empty mem-initializer-list and an empty body", "AcceptedAnswerId": "33179745", "LastEditDate": "2017-03-20T13:19:42.273", "Id": "33178981", "Score": "2", "Body": "<p>Where can I find in the Standard (C++14) a clause stating that an user-defined default constructor with an empty <em>mem-initializer-list</em> and an empty body invokes the default constructor for each base class and for each member sub-object. For instance consider the code below:</p>\n<pre><code>#include &lt;iostream&gt;\nclass A{\npublic:\n    A() {std::cout &lt;&lt; \"A\" &lt;&lt; '\\n'; }\n};\n\nclass Base{\npublic:\n    Base() { std::cout &lt;&lt; \"Base\" &lt;&lt; '\\n'; }\n};\n\nclass Derived : public Base {\n    A a;\npublic:\n    Derived() {}\n};\n\nint main()\n{\n    Derived d;\n}\n</code></pre>\n<p>The constructors for both <code>Base</code> and <code>A</code> are called by the user-declared constructor <code>Derived()</code> with an empty mem-initializer-list and an empty body.</p>\n", "Tags": "<c++><constructor><c++14><language-lawyer><ctor-initializer>", "OwnerUserId": "4470210", "AnswerCount": "2"}, "33179745": {"ParentId": "33178981", "LastEditDate": "2017-05-23T12:09:35.470", "CommentCount": "2", "CreationDate": "2015-10-16T21:21:29.763", "OwnerUserId": "2352671", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "33179745", "Score": "4", "Body": "<p>Quoting from the draft standard <a href=\"http://open-std.org/JTC1/SC22/WG21/docs/papers/2015/n4527.pdf\" rel=\"nofollow noreferrer\">N4527</a> <em>12.6.2/9 Initializing bases and members [class.base.init]</em> (<strong>Emphasis Mine</strong>):</p>\n<blockquote>\n<p id=\"so_33178981_33179745_0\"><strong>In a non-delegating constructor, if a given potentially constructed\n  subobject is not designated by a <em>mem-initializer-id</em> (including the case\n  where there is no <em>mem-initializer-list</em> because the constructor has no\n  <em>ctor-initializer</em>), then</strong></p>\n<p id=\"so_33178981_33179745_1\">(9.1) \u2014 if the entity is a non-static data member that has a\n  <em>brace-or-equal-initializer</em> and either</p>\n<p id=\"so_33178981_33179745_2\">(9.1.1) \u2014 the constructor\u2019s class is a union (9.5), and no other\n  variant member of that union is designated by a <em>mem-initializer-id</em> or</p>\n<p id=\"so_33178981_33179745_3\">(9.1.2) \u2014 the constructor\u2019s class is not a union, and, if the entity\n  is a member of an anonymous union, no other member of that union is\n  designated by a <em>mem-initializer-id</em>, the entity is initialized as\n  specified in 8.5;</p>\n<p id=\"so_33178981_33179745_4\">(9.2) \u2014 otherwise, if the entity is an anonymous union or a variant\n  member (9.5), no initialization is performed;</p>\n<p id=\"so_33178981_33179745_5\">(9.3) \u2014 otherwise, <strong>the entity is default-initialized</strong> (8.5).</p>\n</blockquote>\n<p><strong>Note:</strong> As <a href=\"https://stackoverflow.com/users/576911/howard-hinnant\">@Howard Hinnant</a> pointed out in the comments below, in C++14 (N4141) \"finalized\" standard the above quote lies in paragraph 8 and not paragraph 9.</p>\n", "LastActivityDate": "2015-10-16T22:18:37.000"}, "bq_ids": {"n4140": {"so_33178981_33179101_3": {"section_id": 369, "quality": 0.696969696969697, "length": 23}, "so_33178981_33179101_2": {"section_id": 7035, "quality": 0.7142857142857143, "length": 20}, "so_33178981_33179745_3": {"section_id": 435, "quality": 0.9375, "length": 15}, "so_33178981_33179745_2": {"section_id": 435, "quality": 0.9, "length": 9}, "so_33178981_33179745_4": {"section_id": 435, "quality": 1.0, "length": 8}, "so_33178981_33179745_0": {"section_id": 435, "quality": 1.0, "length": 17}, "so_33178981_33179745_1": {"section_id": 435, "quality": 1.0, "length": 6}}, "n3337": {"so_33178981_33179101_3": {"section_id": 359, "quality": 0.696969696969697, "length": 23}, "so_33178981_33179745_4": {"section_id": 427, "quality": 0.625, "length": 5}, "so_33178981_33179745_1": {"section_id": 427, "quality": 0.8333333333333334, "length": 5}, "so_33178981_33179745_0": {"section_id": 427, "quality": 0.8235294117647058, "length": 14}, "so_33178981_33179101_2": {"section_id": 6781, "quality": 0.7142857142857143, "length": 20}}, "n4659": {"so_33178981_33179101_3": {"section_id": 381, "quality": 0.8787878787878788, "length": 29}, "so_33178981_33179745_1": {"section_id": 382, "quality": 0.8333333333333334, "length": 5}, "so_33178981_33179101_2": {"section_id": 8532, "quality": 0.7142857142857143, "length": 20}, "so_33178981_33179745_3": {"section_id": 454, "quality": 0.9375, "length": 15}, "so_33178981_33179745_2": {"section_id": 454, "quality": 0.9, "length": 9}, "so_33178981_33179745_4": {"section_id": 454, "quality": 1.0, "length": 8}, "so_33178981_33179745_0": {"section_id": 454, "quality": 1.0, "length": 17}}}, "33179101": {"ParentId": "33178981", "CommentCount": "0", "Body": "<p>Q: Exactly what version of the C++ 14 standard are you referring to?</p>\n<p>From n4296:</p>\n<blockquote>\n<p id=\"so_33178981_33179101_0\"><a href=\"https://isocpp.org/std/the-standard\" rel=\"nofollow\">https://isocpp.org/std/the-standard</a></p>\n<p id=\"so_33178981_33179101_1\">Note: </p>\n<p id=\"so_33178981_33179101_2\">In some circumstances, C++ implementations implicitly define the\n  default constructor (12.1), copy constructor (12.8), move constructor\n  (12.8), copy assignment operator (12.8), move assignment operator\n  (12.8), or destructor (12.4) member functions. \u2014end note</p>\n</blockquote>\n<p>Also;</p>\n<blockquote>\n<p id=\"so_33178981_33179101_3\">A default constructor for a class X is a constructor of class X that\n  either has no parameters or else each parameter that is not a function\n  parameter pack has a default argument. If there is no user-declared\n  constructor for class X, a constructor having no parameters is\n  implicitly declared as defaulted (8.4). An implicitly-declared default\n  constructor is an inline public member of its class.</p>\n</blockquote>\n", "OwnerUserId": "421195", "PostTypeId": "2", "Id": "33179101", "Score": "1", "CreationDate": "2015-10-16T20:32:37.200", "LastActivityDate": "2015-10-16T20:32:37.200"}});