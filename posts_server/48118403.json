post_cb({"bq_ids": {"n4140": {"so_48118403_48118403_0": {"length": 9, "quality": 1.0, "section_id": 6168}, "so_48118403_48119051_1": {"length": 8, "quality": 0.8888888888888888, "section_id": 6168}, "so_48118403_48118403_2": {"length": 17, "quality": 0.8095238095238095, "section_id": 6168}, "so_48118403_48118403_1": {"length": 13, "quality": 0.65, "section_id": 6168}, "so_48118403_48119051_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 6168}}, "n3337": {"so_48118403_48118403_0": {"length": 9, "quality": 1.0, "section_id": 5929}, "so_48118403_48119051_1": {"length": 8, "quality": 0.8888888888888888, "section_id": 5929}, "so_48118403_48118403_2": {"length": 17, "quality": 0.8095238095238095, "section_id": 5929}, "so_48118403_48119051_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 5929}}, "n4659": {"so_48118403_48118403_0": {"length": 9, "quality": 1.0, "section_id": 7665}, "so_48118403_48119051_1": {"length": 8, "quality": 0.8888888888888888, "section_id": 7665}, "so_48118403_48118403_2": {"length": 17, "quality": 0.8095238095238095, "section_id": 7665}, "so_48118403_48118403_1": {"length": 17, "quality": 0.85, "section_id": 7665}, "so_48118403_48119051_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 7665}}}, "48118403": {"ViewCount": "56", "Body": "<p><a href=\"http://eel.is/c++draft/expr.cond#2\" rel=\"nofollow noreferrer\">[expr.cond]/2</a>:</p>\n<blockquote>\n<p id=\"so_48118403_48118403_0\">2  If either the second or the third operand has type void, one of the\n  following shall hold:</p>\n<p id=\"so_48118403_48118403_1\">(2.1) \u2014 The second or the third operand (but not both) is a (possibly\n  parenthesized) throw-expression (8.17); the result is of the type and\n  value category of the other. The conditional-expression is a bit-field\n  if that operand is a bit-field.</p>\n<p id=\"so_48118403_48118403_2\">(2.2) \u2014 Both the second and the third operands have type void; the\n  result is of type void and is a prvalue. [ Note: This includes the\n  case where both operands are throw-expressions. \u2014end note ]</p>\n</blockquote>\n<p>Consider the case where the second operand has type void, but it's not a throw-expression and the third operand is a throw-expression. Would this case fall under (2.1) or (2.2)?</p>\n", "AcceptedAnswerId": "48119051", "Title": "Isn't something missing in [expr.cond]/2?", "CreationDate": "2018-01-05T17:24:06.847", "Id": "48118403", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2018-01-05T18:09:09.100", "Score": "1", "OwnerUserId": "4463557", "Tags": "<c++><language-lawyer>", "AnswerCount": "1"}, "48119051": {"Id": "48119051", "PostTypeId": "2", "Body": "<p>Case 2.1 has the condition:</p>\n<blockquote>\n<p id=\"so_48118403_48119051_0\">(the second operand is a <em>throw-expression</em>) XOR (the third operand is a <em>throw-expression</em>)</p>\n</blockquote>\n<p>Case 2.2 has the condition:</p>\n<blockquote>\n<p id=\"so_48118403_48119051_1\">(the second operand has type <code>void</code>) AND (the third operand has type <code>void</code>)</p>\n</blockquote>\n<p>So if exactly one operand is a <em>throw-expression</em> and the other has type <code>void</code>, that's case 2.1. The fact that the other operand has type <code>void</code> means that the result of the conditional expression has type <code>void</code> (due to the clause after the semicolon), but it doesn't change the fact that we're in case 2.1. </p>\n", "LastActivityDate": "2018-01-05T18:09:09.100", "Score": "1", "CreationDate": "2018-01-05T18:09:09.100", "ParentId": "48118403", "CommentCount": "0", "OwnerUserId": "2069064"}});