post_cb({"31559264": {"CommentCount": "2", "ViewCount": "123", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2015-07-22T09:33:09.913", "LastActivityDate": "2015-07-22T16:29:12.907", "Title": "Interchanging class & struct keyword in C++", "AcceptedAnswerId": "31559661", "LastEditDate": "2017-05-23T10:24:19.160", "Id": "31559264", "Score": "1", "Body": "<p>I was reading about one of the strange C++ feature called <strong>Injected class name</strong> <a href=\"https://stackoverflow.com/questions/25549652/c-why-is-there-injected-class-name\">here</a>. </p>\n<p>I tried following simple program</p>\n<pre><code>#include &lt;iostream&gt;\nclass test\n{\n    int s{3};\n    public:\n    int get_s()\n    { return s; }\n};\nint main() {\n    class test::test s;  // struct test::test s; also allowed. Why???\n    std::cout&lt;&lt;s.get_s();\n}\n</code></pre>\n<p>If I replace <strong>class</strong> keyword with <strong>struct</strong> in first line of main() program still compiles &amp; runs fine. See live demo <a href=\"http://ideone.com/k9OHK9\" rel=\"nofollow noreferrer\">here</a>. Why? Shouldn't I get compiler error? Why it compiles fine? </p>\n", "Tags": "<c++><injected-class-name>", "OwnerUserId": "3777958", "AnswerCount": "4"}, "31559421": {"ParentId": "31559264", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2015-07-22T09:40:28.707", "Score": "1", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:18:30.310", "Id": "31559421", "OwnerUserId": "3772383", "Body": "<p>struct and class are almost identical in C++. The only difference is, that members of structs are public by default while member of classes are private by default. </p>\n<p>see complete answer here: <a href=\"https://stackoverflow.com/questions/2750270/c-c-struct-vs-class\">C/C++ Struct vs Class</a></p>\n", "LastActivityDate": "2015-07-22T09:40:28.707"}, "31559460": {"ParentId": "31559264", "CommentCount": "0", "CreationDate": "2015-07-22T09:42:01.537", "OwnerUserId": "1084774", "PostTypeId": "2", "Id": "31559460", "Score": "-1", "Body": "<p><code>class test s;</code>\nor\n<code>struct test s;</code> works too. </p>\n<p>Classes and structs in C++ are virtually the same thing.</p>\n<p>The difference is:</p>\n<pre><code>struct A{\n};\n</code></pre>\n<p>is like</p>\n<pre><code>class A{\npublic:\n};\n</code></pre>\n<p>and </p>\n<pre><code>class B{\n};\n</code></pre>\n<p>is like</p>\n<pre><code>struct B{\nprivate:\n};\n</code></pre>\n<p>Allowing you to use the <code>struct</code> prefix is for C compatibility and I guess it extends to <code>class</code> because \"why not?\".</p>\n", "LastActivityDate": "2015-07-22T09:42:01.537"}, "31559515": {"ParentId": "31559264", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2015-07-22T09:44:12.193", "Score": "-1", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:47:33.833", "Id": "31559515", "OwnerUserId": "4920575", "Body": "<p>I'm sorry, maybe I have misunderstood your post but there is no big differences between class and struct in C++.\nThe main differences that I know is that by default, a struct have all field public.</p>\n<p>There is a post talking about differences between struct and class :\n<a href=\"https://stackoverflow.com/questions/92859/what-are-the-differences-between-struct-and-class-in-c\">What are the differences between struct and class in C++?</a></p>\n", "LastActivityDate": "2015-07-22T09:44:12.193"}, "31559661": {"ParentId": "31559264", "CommentCount": "0", "CreationDate": "2015-07-22T09:50:27.283", "OwnerUserId": "410767", "PostTypeId": "2", "Id": "31559661", "Score": "5", "Body": "<p>I believe the relevant verse is in 7.1.6.3/3 (highlighting mine, quoted here from a draft of the C++17 Standard):</p>\n<blockquote>\n<p id=\"so_31559264_31559661_0\">Thus, in any <em>elaborated-type-specifier</em>, the <code>enum</code> keyword shall be used to refer to an enumeration (7.2), the <code>union</code> <em>class-key</em> shall be used to refer to a union (Clause 9), and <strong>either the <code>class</code> or <code>struct</code> <em>class-key</em> shall be used to refer to a class (Clause 9) declared using the <code>class</code> or <code>struct</code> <em>class-key</em></strong>.</p>\n</blockquote>\n<p>So either keyword can be used to stipulate the scope within which the injected class name exists, irrespective of which was used to declare/define <code>test</code>.</p>\n", "LastActivityDate": "2015-07-22T09:50:27.283"}, "bq_ids": {"n4140": {"so_31559264_31559661_0": {"section_id": 5444, "quality": 1.0, "length": 23}}, "n3337": {"so_31559264_31559661_0": {"section_id": 5239, "quality": 1.0, "length": 23}}, "n4659": {"so_31559264_31559661_0": {"section_id": 6871, "quality": 1.0, "length": 23}}}});