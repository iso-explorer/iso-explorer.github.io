post_cb({"bq_ids": {"n4140": {"so_49185817_49185840_1": {"length": 8, "quality": 0.8, "section_id": 5967}, "so_49185817_49185840_0": {"length": 8, "quality": 0.8, "section_id": 5967}}, "n4659": {"so_49185817_49185840_1": {"length": 8, "quality": 0.8, "section_id": 7465}, "so_49185817_49185840_0": {"length": 8, "quality": 0.8, "section_id": 7465}}}, "49185817": {"ViewCount": "32", "LastEditDate": "2018-03-10T01:53:48.883", "AcceptedAnswerId": "49185840", "Title": "Incorrect error C3489 in msvc 2017?", "CreationDate": "2018-03-09T02:44:54.790", "LastActivityDate": "2018-03-10T01:53:48.883", "CommentCount": "2", "Body": "<p>Should this code compile?</p>\n<pre><code>int main()\n{\n    int a, b;\n    [=, b]{ return a; };\n\n    return 0;\n}\n</code></pre>\n<p>msvc 2017 version 15.6.1 gives me an error:</p>\n<pre><code>error C3489: '&amp;b' is required when the default capture mode is by copy (=)\n</code></pre>\n<p>Same code compiles fine on gcc 6.3: <a href=\"https://ideone.com/HzdiJw\" rel=\"nofollow noreferrer\">https://ideone.com/HzdiJw</a></p>\n<hr>\n<p>Workaround from <a href=\"https://stackoverflow.com/users/560648/lightness-races-in-orbit\">Lightness Races in Orbit</a>'s comment: <code>[=, b_=b]{ return a; };</code>.</p>\n</hr>", "PostTypeId": "1", "LastEditorUserId": "2018010", "Id": "49185817", "Score": "1", "OwnerUserId": "2018010", "Tags": "<c++><lambda><visual-studio-2017>", "AnswerCount": "1"}, "49185840": {"PostTypeId": "2", "LastEditDate": "2018-03-09T03:35:43.640", "ParentId": "49185817", "CommentCount": "5", "LastEditorUserId": "560648", "LastActivityDate": "2018-03-09T03:35:43.640", "CreationDate": "2018-03-09T02:48:20.280", "Id": "49185840", "Score": "1", "Body": "<p>This was illegal in C++14:</p>\n<blockquote>\n<p id=\"so_49185817_49185840_0\"><code>[C++14: 5.1.2/8]:</code> <em>[..]</em> If a <em>lambda-capture</em> includes a <em>capture-default</em> that is <code>=</code>, each <em>simple-capture</em> of that <em>lambda-capture</em> shall be of the form \u201c<code>&amp; identifier</code>\u201d. <em>[..]</em></p>\n</blockquote>\n<p>And still is in <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/n4727.pdf\" rel=\"nofollow noreferrer\">the current working draft</a>:</p>\n<blockquote>\n<p id=\"so_49185817_49185840_1\"><code>[N4727: 8.4.5.2/2]:</code> <em>[..]</em> If a <em>lambda-capture</em> includes a <em>capture-default</em> that is =, each <em>simple-capture</em> of that <em>lambda-capture</em> shall be of the form \u201c<code>&amp; identifier</code>\u201d, \u201c<code>this</code>\u201d, or \u201c<code>* this</code>\u201d. <em>[..]</em></p>\n</blockquote>\n<p>It's unlikely it became legal in C++17 then was made illegal again.</p>\n<p>Furthermore, <a href=\"https://godbolt.org/g/Jjz3gZ\" rel=\"nofollow noreferrer\">GCC 6.3 <em>does</em> complain about this code</a>, so the ideone.com environment is building without <code>-Werror</code>, then reporting a successful build without passing along warnings.</p>\n", "OwnerUserId": "560648"}});