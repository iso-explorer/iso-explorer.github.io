post_cb({"bq_ids": {"n4140": {"so_19345989_19346021_0": {"length": 25, "quality": 0.7575757575757576, "section_id": 37}, "so_19345989_19346024_0": {"length": 24, "quality": 0.75, "section_id": 37}}, "n3337": {"so_19345989_19346021_0": {"length": 25, "quality": 0.7575757575757576, "section_id": 34}, "so_19345989_19346024_0": {"length": 24, "quality": 0.75, "section_id": 34}}, "n4659": {"so_19345989_19346021_0": {"length": 23, "quality": 0.696969696969697, "section_id": 37}, "so_19345989_19346024_0": {"length": 22, "quality": 0.6875, "section_id": 37}}}, "19345989": {"ViewCount": "207", "Body": "<p>today have found that VS2010 do not support <code>round</code> function in C++ projects. Info about that function have found <a href=\"http://www.cplusplus.com/reference/cmath/round/\" rel=\"nofollow\">here</a>. Also noticed that there also no <code>trunc</code> function.</p>\n<p>So have tried some stuff and noticed some behavior that may help in such situation.</p>\n<hr>\n<pre><code>float a = 2.999;\nint b = (int)a;   //gives 2\n</code></pre>\n<hr>\n<pre><code>float a = -2.999;\nint b = (int)a;   //gives -2\n</code></pre>\n<hr>\n<p>This works as truncation so I could use that, however I don't want to use code which leads to undefined behavior. So would like to ask if this is defined or undefined behavior.</p>\n<p><strong>EDIT:</strong> I'm not asking about C++11 as I'm using VS2008.</p>\n</hr></hr></hr>", "Title": "Is converting floating point number to integer defined behavior", "CreationDate": "2013-10-13T13:52:53.607", "Id": "19345989", "CommentCount": "1", "LastEditDate": "2013-10-13T14:06:16.570", "PostTypeId": "1", "LastEditorUserId": "1009479", "LastActivityDate": "2013-10-13T14:06:16.570", "Tags": "<c++><floating-point><undefined-behavior>", "Score": "-1", "OwnerUserId": "1237747", "ClosedDate": "2013-10-13T14:08:53.727", "AnswerCount": "2"}, "19346024": {"Id": "19346024", "PostTypeId": "2", "Body": "<p>It's not undefined behavior.</p>\n<blockquote>\n<h3>C++11 \u00a74.9 Floating-integral conversions [conv.fpint]</h3>\n<p id=\"so_19345989_19346024_0\">An rvalue of a floating point type can be converted to an rvalue of an integer type. The conversion truncates; that is, the fractional part is discarded. The behavior is undefined if the truncated value cannot be represented in the destination type. [ Note: If the destination type is bool, see 4.12. \u2014end note ]</p>\n</blockquote>\n", "LastActivityDate": "2013-10-13T13:56:25.090", "CommentCount": "3", "CreationDate": "2013-10-13T13:56:25.090", "ParentId": "19345989", "Score": "2", "OwnerUserId": "1009479"}, "19346021": {"Id": "19346021", "PostTypeId": "2", "Body": "<p>It is clearly defined in</p>\n<blockquote>\n<h3>4.9 Floating-integral conversions [conv.fpint]</h3>\n<p id=\"so_19345989_19346021_0\"><sup>1</sup> A prvalue of a floating point type can be converted to a prvalue of an integer type. The conversion trun- cates; that is, the fractional part is discarded. The behavior is undefined if the truncated value cannot be represented in the destination type. [ <em>Note:</em> If the destination type is <code>bool</code>, see 4.12. \u2014 <em>end note</em> ]</p>\n</blockquote>\n", "LastActivityDate": "2013-10-13T13:55:55.417", "CommentCount": "0", "CreationDate": "2013-10-13T13:55:55.417", "ParentId": "19345989", "Score": "5", "OwnerUserId": "2073257"}});