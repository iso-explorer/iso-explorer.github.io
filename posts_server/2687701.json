post_cb({"bq_ids": {"n4140": {"so_2687701_2687714_1": {"length": 44, "quality": 0.9166666666666666, "section_id": 3308}}, "n3337": {"so_2687701_2687714_1": {"length": 43, "quality": 0.8958333333333334, "section_id": 3178}}, "n4659": {"so_2687701_2687714_1": {"length": 39, "quality": 0.8125, "section_id": 4074}}}, "2687701": {"ViewCount": "10837", "Body": "<p>I am trying to understand the <a href=\"http://www.boost.org/doc/libs/1_42_0/doc/html/array/rationale.html\" rel=\"noreferrer\">boost array</a>. The <a href=\"http://www.josuttis.com/cppcode/array.hpp.html\" rel=\"noreferrer\">code</a> can be read easily from author's site. </p>\n<p>In the design rationale, author (Nicolai M. Josuttis) mentioned that the following two types of initialization is possible.</p>\n<pre><code>boost::array&lt;int,4&gt; a = { { 1, 2, 3 } };  // Line 1\nboost::array&lt;int,4&gt; a = { 1, 2, 3 };      // Line 2\n</code></pre>\n<p>In my experiment with g++ (version 4.1.2) Line 1 is working but Line 2 is not. \n(Line 2 yields the following:</p>\n<pre><code>warning: missing braces around initializer for 'int [4]'\nwarning: missing initializer for member 'boost::array&lt;int, 4ul&gt;::elems'\n</code></pre>\n<p>)</p>\n<p>Nevertheless, my main question is, how Line 1 is working? I tried to write a class similar to array.hpp and use statement like Line 1, but that did not work :-(. The error is </p>\n<pre><code>typedef array&lt; unsigned int, 10 &gt; MyArray;\n\nMyArray b = { { 1, 2, 3 } };  // Line 74\n\narray_test.cpp:74: error: in C++98 'b' must be initialized by constructor, not by '{...}'\narray_test.cpp:74: error: no matching function for call to 'array&lt;unsigned int, 10u&gt;::array(&lt;brace-enclosed initializer list&gt;)'\narray.h:16: note: candidates are: array&lt;unsigned int, 10u&gt;::array()\narray.h:16: note:                 array&lt;unsigned int, 10u&gt;::array(const array&lt;unsigned int, 10u&gt;&amp;)\n</code></pre>\n<p>Can somebody explain me? Is there some boost specific thing happening in Line 1 that I need to be aware of?</p>\n", "AcceptedAnswerId": "2687722", "Title": "How should I initialize a boost::array?", "CreationDate": "2010-04-22T01:38:02.927", "Id": "2687701", "CommentCount": "3", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2012-01-28T19:41:04.307", "LastEditorUserId": "560648", "LastActivityDate": "2012-01-28T19:41:04.307", "Score": "14", "OwnerUserId": "278326", "Tags": "<c++><boost>", "AnswerCount": "2"}, "2687722": {"Id": "2687722", "PostTypeId": "2", "Body": "<p>this is a regular brace initialization list:</p>\n<p>Boost array is defined like this:</p>\n<pre><code>struct array { T elems[N]; };\n</code></pre>\n<p>inner brace is for elems array initialization, outear brace is for struct initialization.\nIf you provide your own constructor, you no longer have plain old datatype any cannot initialize using brace</p>\n<p>notice that you can go without outer brace, but you will get a warning</p>\n", "LastEditorUserId": "206328", "LastActivityDate": "2010-04-22T01:49:26.843", "Score": "20", "CreationDate": "2010-04-22T01:43:58.437", "ParentId": "2687701", "CommentCount": "2", "OwnerUserId": "206328", "LastEditDate": "2010-04-22T01:49:26.843"}, "2687714": {"Id": "2687714", "PostTypeId": "2", "Body": "<p>The relevant section of the standard is \u00a78.5.1, aggregates.</p>\n<blockquote id=\"so_2687701_2687714_0\">\n<ol>\n<li>An aggregate is an array or a class (clause 9) with no user-declared\n  constructors (12.1), no private or\n  pro- tected non-static data members\n  (clause 11), no base classes (clause\n  10), and no virtual functions (10.3).</li>\n<li>When an aggregate is initialized the initializer can contain an\n  initializer-clause consisting of a\n  brace- enclosed, comma-separated list\n  of initializer-clauses for the members\n  of the aggregate, written in\n  increasing subscript or member order.\n  If the aggregate contains\n  subaggregates, this rule applies\n  recursively to the members of the subaggregate.</li>\n</ol>\n</blockquote>\n<p>GCC 4.1.2 may be violating paragraph 11.</p>\n<blockquote>\n<p id=\"so_2687701_2687714_1\">11    Braces can be elided in an\n  initializer-list as follows. If the\n  initializer-list begins with a left\n  brace, then the succeeding\n  comma-separated list of initializers\n  initializes the members of a\n  subaggregate; it is erroneous for\n  there to be more initializers than\n  members. If, however, the\n  initializer-list for a subaggregate\n  does not begin with a left brace, then\n  only enough initializers from the list\n  are taken to initialize the members of\n  the subaggregate; any remaining\n  initializers are left to initialize\n  the next member of the aggregate of\n  which the current subaggregate is a\n  member.</p>\n</blockquote>\n", "LastActivityDate": "2010-04-22T01:41:52.780", "CommentCount": "1", "CreationDate": "2010-04-22T01:41:52.780", "ParentId": "2687701", "Score": "9", "OwnerUserId": "153285"}});