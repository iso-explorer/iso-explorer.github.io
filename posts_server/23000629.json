post_cb({"23000771": {"Id": "23000771", "PostTypeId": "2", "Body": "<pre><code>error: invalid conversion from 'const char*' to 'char' global variable\n</code></pre>\n<p>is caused by trying to assign a string to a single char. Besides this you invoke undefined behavior before you get to this.</p>\n<pre><code>extern char Title[10]; // array of 10 char, indexed as 0, 1, ..., 9\n</code></pre>\n<p>This is declaration, OK.</p>\n<pre><code>char Title[10] = \"Asia\";\n</code></pre>\n<p>This is initialization, OK.</p>\n<pre><code>Title[10] = \"Europe\";  // 10 means accessing array out of bound\n</code></pre>\n<p>Access array out of bounds. This is undefined behavior.</p>\n<hr>\n<p>C++ Standard n3337 <strong>\u00a7</strong> 5.2.1/1</p>\n<blockquote>\n<p id=\"so_23000629_23000771_0\">A postfix expression followed by an expression in square brackets is a\n  postfix expression. One of the expres- sions shall have the type\n  \u201cpointer to T\u201d and the other shall have unscoped enumeration or\n  integral type. The result is an lvalue of type \u201cT.\u201d The type \u201cT\u201d shall\n  be a completely-defined object type.62 The expression E1[E2] is\n  identical (by definition) to *((E1)+(E2)) [ Note: see 5.3 and 5.7 for\n  details of * and + and 8.3.4 for details of arrays. \u2014 end note ]</p>\n</blockquote>\n<p>Then, <strong>\u00a7</strong> 5.7/5 explains what <code>ptr + i</code> points to:</p>\n<blockquote>\n<p id=\"so_23000629_23000771_1\">(...)If both the pointer operand and the result point to elements of\n  the same array object, or one past the last element of the array\n  object, the evaluation shall not produce an overflow; otherwise, the\n  behavior is undefined.</p>\n</blockquote>\n</hr>", "LastEditorUserId": "1141471", "LastActivityDate": "2014-04-10T23:25:22.257", "Score": "0", "CreationDate": "2014-04-10T23:15:41.063", "ParentId": "23000629", "CommentCount": "2", "OwnerUserId": "1141471", "LastEditDate": "2014-04-10T23:25:22.257"}, "23000629": {"ViewCount": "106", "Body": "<p>I have a global variable declared in .h file:</p>\n<pre><code>extern char Title[10];\n</code></pre>\n<p>when I use it in the .cpp file:</p>\n<pre><code>char Title[10] = \"Asia\";\n</code></pre>\n<p>more code:</p>\n<pre><code>Title[10] = \"Europe\";\n</code></pre>\n<p>this second assignment is causing an error <code>error: invalid conversion from 'const char*' to 'char' global variable</code></p>\n<p>How can I reassign this global variable?</p>\n", "AcceptedAnswerId": "23000714", "Title": "How to change a global variable multiple times", "CreationDate": "2014-04-10T23:02:50.463", "Id": "23000629", "CommentCount": "7", "LastEditDate": "2014-04-10T23:49:54.280", "PostTypeId": "1", "LastEditorUserId": "2348315", "LastActivityDate": "2014-04-10T23:49:54.280", "Score": "0", "OwnerUserId": "2333234", "Tags": "<c++>", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_23000629_23000771_0": {"length": 32, "quality": 0.7441860465116279, "section_id": 5986}, "so_23000629_23000771_1": {"length": 21, "quality": 1.0, "section_id": 6142}}, "n3337": {"so_23000629_23000771_0": {"length": 33, "quality": 0.7674418604651163, "section_id": 5754}, "so_23000629_23000771_1": {"length": 21, "quality": 1.0, "section_id": 5906}}, "n4659": {"so_23000629_23000771_0": {"length": 30, "quality": 0.6976744186046512, "section_id": 7486}, "so_23000629_23000771_1": {"length": 11, "quality": 0.5238095238095238, "section_id": 7638}}}, "23000714": {"Id": "23000714", "PostTypeId": "2", "Body": "<p><strong>The problem:</strong></p>\n<pre><code>extern char Title[10];\n</code></pre>\n<p>Declares a <code>char</code> array of size 10. </p>\n<p>While:</p>\n<pre><code>Title[10] = \"Europe\";\n</code></pre>\n<p>attempts to set the 11th element of <code>Title</code> to <code>\"Europe\"</code>.</p>\n<p>Obviously not what you were intending...</p>\n<p><strong>The C style solution:</strong></p>\n<p>Use <code>strcpy</code> to copy the <code>char</code> array \"Europe\" into <code>Title</code>. <a href=\"http://www.cplusplus.com/reference/cstring/strcpy/\" rel=\"nofollow\">Here's some handy reference to <code>strcpy</code></a>.</p>\n<p>You pass it the destination and source so in your case it would be:</p>\n<pre><code>strcpy(Title, \"Europe\");\n</code></pre>\n<p><strong>The C++ route:</strong></p>\n<p>Use a string class such as <code>std::string</code>. <a href=\"http://www.cplusplus.com/reference/string/\" rel=\"nofollow\">Here's some handy reference to <code>std::string</code></a></p>\n<pre><code>extern std::string Title;\n</code></pre>\n<p>...</p>\n<pre><code>std::string Title(\"Asia\");\nTitle = \"Europe\";\n</code></pre>\n", "LastEditorUserId": "2348315", "LastActivityDate": "2014-04-10T23:42:18.060", "Score": "2", "CreationDate": "2014-04-10T23:10:52.733", "ParentId": "23000629", "CommentCount": "0", "OwnerUserId": "2348315", "LastEditDate": "2014-04-10T23:42:18.060"}, "23000702": {"Id": "23000702", "PostTypeId": "2", "Body": "<p>In the char Title[10] = \"Asia\" line, you are initializing the array to those values. In the line where you set it to Europe, you are trying to set the tenth byte of the character array to a pointer to a constant string.  You should use strncpy or some such technique to copy into the string.</p>\n<p>e.g. strncpy(Title, \"Europe\", 10);</p>\n", "LastActivityDate": "2014-04-10T23:10:23.773", "CommentCount": "3", "CreationDate": "2014-04-10T23:10:23.773", "ParentId": "23000629", "Score": "0", "OwnerUserId": "3204413"}, "23000706": {"Id": "23000706", "PostTypeId": "2", "Body": "<p>This is a declaration; it declares an array named <code>Title</code> that is of type <code>char</code> and contains 10 elements:</p>\n<pre><code>char Title[10] = \"Asia\";\n</code></pre>\n<p>This, however, is an assignment statement. It attempts (incorrectly) to assign a string to the 11th element of <code>Title</code>:</p>\n<pre><code>Title[10] = \"Europe\";\n</code></pre>\n<p>You cannot assign a string to a <code>char</code>, which is what <code>Title[10]</code> is. What you want to do is copy a new string to <code>Title</code>, and the easiest way to do that is with the <code>strcpy</code> function. Like this:</p>\n<pre><code>strcpy(Title, \"Europe\");\n</code></pre>\n", "LastActivityDate": "2014-04-10T23:10:32.920", "CommentCount": "4", "CreationDate": "2014-04-10T23:10:32.920", "ParentId": "23000629", "Score": "0", "OwnerUserId": "854742"}});