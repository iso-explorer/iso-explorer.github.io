post_cb({"33388157": {"ParentId": "33388095", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>Use <code>QT_VERSION</code> instead:</p>\n<blockquote>\n<p id=\"so_33388095_33388157_0\">QT_VERSION\n  This macro expands a numeric value of the form 0xMMNNPP (MM = major, NN = minor, PP = patch) that specifies Qt's version number.</p>\n</blockquote>\n<pre><code>#if QT_VERSION == 0x050401\n  #include &lt;5.4.1/QtGui/private/qzipwriter_p.h&gt;\n#endif\n</code></pre>\n<p><strong>Edit:</strong></p>\n<blockquote>\n<p id=\"so_33388095_33388157_1\">No idea for concatenating the version string in the path?</p>\n</blockquote>\n<p>The standard doesn't allow that (16.3.4/3):</p>\n<blockquote>\n<p id=\"so_33388095_33388157_2\">The resulting completely macro-replaced preprocessing token sequence is not processed as a preprocessing\n  directive even if it resembles one</p>\n</blockquote>\n<p>So you can't make a macro that will be expanded into an <code>#include</code> directive. You also can't use a macro inside the brackets of <code>include</code> (<code>#include &lt;like this&gt;</code>) because everything inside the brackets is just a string.</p>\n", "OwnerUserId": "1490355", "LastEditorUserId": "1490355", "LastEditDate": "2015-10-28T11:28:13.367", "Id": "33388157", "Score": "4", "CreationDate": "2015-10-28T10:08:52.077", "LastActivityDate": "2015-10-28T11:28:13.367"}, "33388095": {"CommentCount": "1", "AcceptedAnswerId": "33388906", "PostTypeId": "1", "LastEditorUserId": "4370109", "CreationDate": "2015-10-28T10:06:17.103", "LastActivityDate": "2016-07-06T15:44:38.580", "LastEditDate": "2016-07-06T15:44:38.580", "ViewCount": "425", "FavoriteCount": "1", "Title": "Include directive depending on Qt version", "Id": "33388095", "Score": "2", "Body": "<p>I need to include the following header in my code:</p>\n<pre><code>#include &lt;5.4.1/QtGui/private/qzipwriter_p.h&gt;\n</code></pre>\n<p>The problem is, we are compiling this on other Qt versions, such as 5.4.2 or 5.5.x</p>\n<p>I know I should not use these \"private\" headers since they are unsupported, but we need them at least until we have a durable replacement.</p>\n<p>How can I concatenate the <code>QT_VERSION_STR</code> variable in the path so that this works with all versions?</p>\n", "Tags": "<c++><qt><include><c-preprocessor>", "OwnerUserId": "2042388", "AnswerCount": "3"}, "37497918": {"ParentId": "33388095", "CommentCount": "0", "Body": "<p>With cmake it would be like this:</p>\n<p>CMakeLists.txt:</p>\n<pre><code>find_package(Qt5 COMPONENTS Core Qml)\nadd_definitions(-DQT_VERSION_MAJOR=${Qt5_VERSION_MAJOR})\nadd_definitions(-DQT_VERSION_MINOR=${Qt5_VERSION_MINOR})\nadd_definitions(-DQT_VERSION_PATCH=${Qt5_VERSION_PATCH})\n</code></pre>\n<p>yourcode.cpp:</p>\n<pre><code>#define p_qqmljslexer(major,minor,patch)  &lt;major.minor.patch/QtQml/private/qqmljslexer_p.h&gt;\n\n#include p_qqmljslexer(QT_VERSION_MAJOR, QT_VERSION_MINOR, QT_VERSION_PATCH)  \n</code></pre>\n", "OwnerUserId": "6394161", "PostTypeId": "2", "Id": "37497918", "Score": "0", "CreationDate": "2016-05-28T10:31:19.347", "LastActivityDate": "2016-05-28T10:31:19.347"}, "33388906": {"ParentId": "33388095", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>You can compare numeric <code>QT_VERSION</code> macro using human readable helper <a href=\"http://doc.qt.io/qt-5/qtglobal.html#QT_VERSION_CHECK\" rel=\"nofollow noreferrer\"><code>QT_VERSION_CHECK</code></a> that combines major, minor and patch numbers into <code>QT_VERSION</code> format:</p>\n<pre><code>#if QT_VERSION == QT_VERSION_CHECK(5, 4, 1)\n//...\n#endif\n</code></pre>\n<hr>\n<p>The idea for concatenation taken from GCC headers <a href=\"https://stackoverflow.com/questions/5873722/c-macro-dynamic-include\">C Macro - Dynamic #include</a></p>\n<p>The problem is that we do not have macro tokens with Qt major, minor and patch versions. There is only numeric <code>QT_VERSION</code>. So, it is tricky to get required numbers. It is possible to transfer them as macro definitions from <code>.pro</code> file using <code>qmake</code> variables <a href=\"http://doc.qt.io/qt-5/qmake-variable-reference.html#qt-major-version\" rel=\"nofollow noreferrer\"><code>QT_*_VERSION</code></a>:</p>\n<pre><code>DEFINES += QT_MAJOR_VERSION=$$QT_MAJOR_VERSION\nDEFINES += QT_MINOR_VERSION=$$QT_MINOR_VERSION\nDEFINES += QT_PATCH_VERSION=$$QT_PATCH_VERSION\n</code></pre>\n<p>Now those macro versions can be used in source files:</p>\n<pre><code>// To return as a string: \"5.4.1/QtGui/private/qzipwriter_p.h\"\n#define qt_header__(x) #x\n#define qt_header_(major,minor,patch) qt_header__(major.minor.patch/QtGui/private/qzipwriter_p.h)\n#define qt_header(major,minor,patch) qt_header_(major,minor,patch)\n\n// Simpler without stringification, however Qt Creator cannot follow\n// that header\n#define qt_header(major,minor,patch) &lt;major.minor.patch/QtGui/private/qzipwriter_p.h&gt;\n\n#include qt_header(QT_MAJOR_VERSION, QT_MINOR_VERSION, QT_PATCH_VERSION)\n</code></pre>\n<p>It is better to use stringified variant (<code>\"5.4.1/QtGui/private/qzipwriter_p.h\"</code>). In that case the latest versions of Qt Creator can follow such <code>qt_header()</code> macro and highlight text accordingly.</p>\n</hr>", "OwnerUserId": "4023446", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:17:01.857", "Id": "33388906", "Score": "2", "CreationDate": "2015-10-28T10:42:51.893", "LastActivityDate": "2015-10-28T14:55:40.057"}, "bq_ids": {"n4140": {"so_33388095_33388157_2": {"section_id": 532, "quality": 0.9230769230769231, "length": 12}}, "n3337": {"so_33388095_33388157_2": {"section_id": 523, "quality": 0.9230769230769231, "length": 12}}, "n4659": {"so_33388095_33388157_2": {"section_id": 553, "quality": 0.9230769230769231, "length": 12}}}});