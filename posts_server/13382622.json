post_cb({"bq_ids": {"n4140": {"so_13382622_13382801_0": {"length": 12, "quality": 1.0, "section_id": 5562}}, "n3337": {"so_13382622_13382801_0": {"length": 12, "quality": 1.0, "section_id": 5344}}, "n4659": {"so_13382622_13382801_0": {"length": 12, "quality": 1.0, "section_id": 7009}}}, "13382719": {"Id": "13382719", "PostTypeId": "2", "Body": "<p>No, there is no upper bound on the time it can take to increment/decrement an iterator. The standard is silent on how long any program takes to run. As far as I know, all of the popular compilers are also silent on the subject.</p>\n<p>Having said that, however, the typical implementations do nothing that would take significant time. There are no memory allocations or file-IO (other than VM page-ins, I suppose.)</p>\n", "LastActivityDate": "2012-11-14T16:18:14.040", "CommentCount": "0", "CreationDate": "2012-11-14T16:18:14.040", "ParentId": "13382622", "Score": "1", "OwnerUserId": "8747"}, "13382622": {"ViewCount": "477", "Body": "<p>Are there upper bounds on the time it can take to increment/decrement an iterator of a standard library collection (e.g. std::map)? (Assuming the container itself is not changed.)</p>\n", "AcceptedAnswerId": "13382719", "Title": "Are incrementing/decrementing iterators of standard library container iterators deterministic?", "CreationDate": "2012-11-14T16:12:53.060", "Id": "13382622", "CommentCount": "2", "PostTypeId": "1", "LastActivityDate": "2012-11-14T16:22:40.147", "Score": "1", "OwnerUserId": "1671066", "Tags": "<c++><iterator><deterministic>", "AnswerCount": "2"}, "13382801": {"Id": "13382801", "PostTypeId": "2", "Body": "<p>The increment operation for a <code>std::map</code> iterator is guaranteed to have <em>amortized constant</em> cost. That is, full traversal of <em>n</em> elements is O(<em>n</em>). This is in fact true for <em>all</em> iterators (see 24.2.1/8):</p>\n<blockquote>\n<p id=\"so_13382622_13382801_0\">All the categories of iterators require only those functions that are realizable for a given category in constant\n  time (amortized).</p>\n</blockquote>\n", "LastActivityDate": "2012-11-14T16:22:40.147", "CommentCount": "0", "CreationDate": "2012-11-14T16:22:40.147", "ParentId": "13382622", "Score": "3", "OwnerUserId": "596781"}});