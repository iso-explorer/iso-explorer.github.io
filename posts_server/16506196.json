post_cb({"25634172": {"ParentId": "16506196", "LastEditDate": "2017-05-23T11:57:15.353", "CommentCount": "0", "CreationDate": "2014-09-02T23:58:43.150", "OwnerUserId": "2756719", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "25634172", "Score": "1", "Body": "<p>I think <a href=\"https://stackoverflow.com/a/16506229/2756719\">Joseph Mansfield's answer</a> mostly correctly interprets the word \"header\" (it refers only to the standard library headers defined in \u00a717.6.1.2 [headers]), except that I think it also includes the C headers described in appendix D, as footnote 176 (in N3936) refers to both <code>&lt;iso646.h&gt;</code> and <code>&lt;ciso646&gt;</code> as \"standard header\". This answer focuses on the meaning of the phrase <em>external declaration or definition</em>.</p>\n<p>It appears that this particular sentence in the C++ standard was borrowed from the C standard. The same phrasing seems to be present in the C89 standard, at least according to <a href=\"http://flash-gordon.me.uk/ansi.c.txt\" rel=\"nofollow noreferrer\">this unofficial version</a>, and is present in both C99 and C11.</p>\n<p>While the C++ standard doesn't define \"external declaration or definition\", these terms are defined in the C standard (quoting N1256 \u00a76.9):</p>\n<blockquote>\n<p id=\"so_16506196_25634172_0\">the unit of program text after preprocessing is a translation unit,\n  which consists of a sequence of external declarations.  These are\n  described as \"external\" because they appear outside any function (and\n  hence have file scope). [...]</p>\n<p id=\"so_16506196_25634172_1\">An external definition is an external declaration that is also a\n  definition of a function or an object.</p>\n</blockquote>\n<p>The C grammar for a <em>translation-unit</em> is:</p>\n<pre><code>translation-unit:\n    external-declaration\n    translation-unit external-declaration\nexternal-declaration:\n    function-definition\n    declaration\n</code></pre>\n<p>Now, the corresponding description of a translation unit in the C++ standard is (\u00a73.5 [basic.link]):</p>\n<blockquote>\n<p id=\"so_16506196_25634172_2\">A translation unit consists of a sequence of declarations.</p>\n</blockquote>\n<p>And the grammar is simply</p>\n<pre><code>translation-unit:\n    declaration-seq_opt\n</code></pre>\n<p>In short, in C, a translation unit is a sequence of <em>external declarations</em>, and in C++, it is a sequence of <em>declarations</em>. Thus it appears that the word \"external\" in the C++ standard is a historical artifact caused by the borrowing, and the quoted sentence is meant to prohibit including standard library headers in <em>any</em> declaration or definition of whatever sort.</p>\n", "LastActivityDate": "2014-09-03T00:21:40.050"}, "16506229": {"ParentId": "16506196", "LastEditDate": "2013-05-12T10:13:04.303", "CommentCount": "5", "CreationDate": "2013-05-12T10:05:59.150", "OwnerUserId": "150634", "LastEditorUserId": "150634", "PostTypeId": "2", "Id": "16506229", "Score": "4", "Body": "<p>A <em>header</em> is defined in the standard as where elements of the C++ standard library are declared or defined. That doesn't include the user's <code>.h</code> files. See \u00a717.6.1.2:</p>\n<blockquote>\n<p id=\"so_16506196_16506229_0\">Each element of the C++ standard library is declared or defined (as appropriate) in a <em>header</em>.</p>\n<p id=\"so_16506196_16506229_1\">The C++ standard library provides 52 <em>C++ library headers</em>, as shown in Table 14.</p>\n<p id=\"so_16506196_16506229_2\">The facilities of the C standard Library are provided in 26 additional headers, as shown in Table 15.</p>\n</blockquote>\n<p>So the example you gave is fine (as long as the <code>.h</code> file doesn't itself include some standard library headers). However, this wouldn't be:</p>\n<pre><code>extern \"C\"\n{\n   #include &lt;string&gt;\n}\n</code></pre>\n<p>To further back up the seperation between headers and source files (which include <code>.h</code> files), the <code>#include</code> preprocessing directive is defined to include \"headers\" with the <code>&lt;h-char-sequence&gt;</code> syntax and to include \"source files\" with the <code>\"q-char-sequence\"</code> syntax (\u00a716.2). So your <code>#include \"smth.h\"</code> is including a source file, not a header. A source file is defined as the text of a program, which together with the headers it includes makes up a translation unit:</p>\n<blockquote>\n<p id=\"so_16506196_16506229_3\">The text of the program is kept in units called source files in this International Standard. A source file together with all the headers (17.6.1.2) and source files included (16.2) via the preprocessing directive <code>#include</code>, less any source lines skipped by any of the conditional inclusion (16.1) preprocessing directives, is called a translation unit.</p>\n</blockquote>\n<p>I think the aim of such wording is to decouple the standard library headers from their representation. There's no reason they have to be stored as C++ source files, even though they typically are. Including a particular header just has to have the effect of making the appropriate declarations available to the program.</p>\n", "LastActivityDate": "2013-05-12T10:13:04.303"}, "bq_ids": {"n4140": {"so_16506196_16506229_3": {"section_id": 5311, "quality": 0.7714285714285715, "length": 27}, "so_16506196_16506229_1": {"section_id": 6257, "quality": 0.7142857142857143, "length": 5}, "so_16506196_25634172_2": {"section_id": 7134, "quality": 1.0, "length": 5}, "so_16506196_16506229_2": {"section_id": 6258, "quality": 0.75, "length": 6}, "so_16506196_16506196_0": {"section_id": 6270, "quality": 1.0, "length": 19}, "so_16506196_16506229_0": {"section_id": 6256, "quality": 1.0, "length": 7}}, "n3337": {"so_16506196_16506229_3": {"section_id": 5108, "quality": 0.7714285714285715, "length": 27}, "so_16506196_16506229_1": {"section_id": 6017, "quality": 0.7142857142857143, "length": 5}, "so_16506196_25634172_2": {"section_id": 6878, "quality": 1.0, "length": 5}, "so_16506196_16506229_2": {"section_id": 6018, "quality": 0.75, "length": 6}, "so_16506196_16506196_0": {"section_id": 6030, "quality": 1.0, "length": 19}, "so_16506196_16506229_0": {"section_id": 6016, "quality": 1.0, "length": 7}}, "n4659": {"so_16506196_16506229_3": {"section_id": 6735, "quality": 0.7428571428571429, "length": 26}, "so_16506196_16506229_1": {"section_id": 6314, "quality": 0.5714285714285714, "length": 4}, "so_16506196_25634172_2": {"section_id": 8635, "quality": 1.0, "length": 5}, "so_16506196_16506229_2": {"section_id": 7762, "quality": 0.625, "length": 5}, "so_16506196_16506229_0": {"section_id": 7760, "quality": 1.0, "length": 7}, "so_16506196_16506196_0": {"section_id": 7776, "quality": 0.9473684210526315, "length": 18}}}, "16506196": {"CommentCount": "5", "ViewCount": "137", "LastActivityDate": "2014-09-03T00:21:40.050", "Body": "<h3>17.6.2.2 Headers [using.headers]</h3>\n<blockquote>\n<p id=\"so_16506196_16506196_0\">3) <strong>A translation unit shall include a header only outside of any\n  external declaration or definition</strong>, and shall include the header\n  lexically before the first reference in that translation unit to any\n  of the entities declared in that header.</p>\n</blockquote>\n<p>If my interpretation is correct:</p>\n<pre><code>extern \"C\"\n{\n   #include \"smth.h\"\n}\n</code></pre>\n<p>is illegal (and there's a lot of it out there). </p>\n<p>Am I missinterpreting? Do \"external declaration\" and \"external definition\" mean something else (in this context)?</p>\n", "PostTypeId": "1", "AcceptedAnswerId": "16506229", "FavoriteCount": "0", "Title": "Does \"external declaration or definition\" not mean what I think?", "Id": "16506196", "Score": "3", "CreationDate": "2013-05-12T10:02:11.543", "Tags": "<c++><header-files><language-lawyer>", "OwnerUserId": "673730", "AnswerCount": "2"}});