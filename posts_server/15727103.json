post_cb({"15727125": {"CommentCount": "2", "Body": "<blockquote>\n<p id=\"so_15727103_15727125_0\">Is <code>__value</code> a gcc extension, and if so, what does it do? Does it have a VC++ equivalent?</p>\n</blockquote>\n<p>It's the other way around. It's a <a href=\"http://msdn.microsoft.com/en-us/library/k7kkeb76%28v=vs.71%29.aspx\">keyword in VC++</a> but not in <code>gcc</code>.</p>\n<p>In <code>gcc</code>, it's just an identifier.</p>\n", "CreationDate": "2013-03-31T06:50:22.320", "ParentId": "15727103", "Id": "15727125", "LastActivityDate": "2013-03-31T06:50:22.320", "PostTypeId": "2", "Score": "6", "OwnerUserId": "367273"}, "15727103": {"CreationDate": "2013-03-31T06:47:02.417", "ViewCount": "375", "Id": "15727103", "AcceptedAnswerId": "15727125", "Score": "2", "Title": "Is `__value` a gcc extension, and if so, what does it do? Does it have a VC++ equivalent?", "CommentCount": "2", "Body": "<p>Title says it all.</p>\n<p>I am trying to use some of the libraries from cygwin's gcc with visual studio's C++ compiler but the following code from <code>C:\\cygwin\\usr\\include\\sys\\_types.h</code> does not compile:</p>\n<pre><code>#ifndef __mbstate_t_defined\n/* Conversion state information.  */\ntypedef struct\n{\n  int __count;\n  union\n  {\n    wint_t __wch;\n    unsigned char __wchb[4];\n  } __value;        /* Value so far.  */\n} _mbstate_t;\n#endif\n</code></pre>\n<p>Build Output:</p>\n<pre><code>1&gt;c:\\cygwin\\usr\\include\\sys\\_types.h(74): error C4980: '__value' : use of this keyword requires /clr:oldSyntax command line option\n1&gt;c:\\cygwin\\usr\\include\\sys\\_types.h(74): error C2059: syntax error : '__value'\n</code></pre>\n<p>Visual Studio seems to be interpreting this as <a href=\"http://msdn.microsoft.com/en-us/library/aa712839%28v=vs.71%29.aspx\" rel=\"nofollow\">some sort of CLR extension</a></p>\n", "Tags": "<c><visual-c++><gcc><visual-studio-2012><cygwin>", "LastActivityDate": "2013-03-31T07:11:15.580", "PostTypeId": "1", "AnswerCount": "2", "OwnerUserId": "703382"}, "bq_ids": {"n4140": {"so_15727103_15727264_0": {"length": 20, "quality": 0.5405405405405406, "section_id": 6307}}, "n3337": {"so_15727103_15727264_0": {"length": 20, "quality": 0.5405405405405406, "section_id": 6064}}}, "15727264": {"CommentCount": "0", "Body": "<p>This <a href=\"http://social.msdn.microsoft.com/forums/en-us/vcgeneral/thread/ADABF801-8006-47BD-9495-972E04DF5C78\" rel=\"nofollow\">link</a> says</p>\n<blockquote>\n<p id=\"so_15727103_15727264_0\">C/C++ Standards explicitly says that identifiers that contains double underscore are reserved: \n  ISO.IEC 14882:2003 C++ Standard, section 17.4.3.1.2 \"Global names\":\n  \"Certain sets of names and function signatures are always reserved to the implementation:\n  -- Each name that contains a double uderscore (__) or begins with an underscore followed by an upper-case letter (2.11) is reserved to the implementation for any use. ...\"</p>\n</blockquote>\n<p>Since it looks like Visual Studio uses the <code>__value</code> keyword in Managed Extensions for C++, could you maybe just rename <code>__value</code> to something else (like <code>__Value</code>)?</p>\n<p>[the MSDN link above also has a dicsussion whether this is a bug in unmanaged C, the Microsoft reply seems to be that this is \"by design\"]</p>\n", "CreationDate": "2013-03-31T07:11:15.580", "ParentId": "15727103", "Id": "15727264", "LastActivityDate": "2013-03-31T07:11:15.580", "PostTypeId": "2", "Score": "3", "OwnerUserId": "1850797"}});