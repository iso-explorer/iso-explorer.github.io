post_cb({"bq_ids": {"n4140": {"so_33033859_33033910_0": {"length": 110, "quality": 0.9482758620689655, "section_id": 3919}}, "n3337": {"so_33033859_33033910_0": {"length": 110, "quality": 0.9482758620689655, "section_id": 3779}}, "n4659": {"so_33033859_33033910_0": {"length": 60, "quality": 0.5172413793103449, "section_id": 4805}}}, "33033859": {"ViewCount": "53", "Body": "<p>Can you help me ? I am fed up with this static int var .... Here is my function.  I want that its values <strong>static int ban_ve</strong> be 0 in the first function acces\nand i want that the compteur increment it each time the prog acces to the methode, that to detect if programm accessed two time to the procedure .</p>\n<pre><code>void iCol::attCalc() //juste une fois cpt test\n{\n  static int ban_ve;  // how can I initialize it to 0 and only the first \n  if (ban_ve&gt;0)\n  {\n    printf(\" hello tu es dedans ....\\n\");\n    _getch();\n    exit(0);\n  }\n    attConD = OdemoConInfo(GetStdHandle(STD_OUTPUT_HANDLE)) ;\n    carConD = attConD % 16;  //  couleur de caractere par modulo carConD\n    bckConD = attConD - carConD;\n    bckConCH = bckConD / 16;  //  car hexa couleur de fond  (ex F)\n    printf(\"attcalc attConD %d carConD %d bckConD %d bckConCH %d \\n\",attConD, carConD ,bckConD ,bckConCH );\n    ban_ve++;\n}\n</code></pre>\n", "Title": "How can I declare and initialise a static int in c++ function?", "CreationDate": "2015-10-09T08:49:32.013", "Id": "33033859", "CommentCount": "2", "LastEditDate": "2015-10-09T08:53:42.473", "PostTypeId": "1", "LastEditorUserId": "2596489", "LastActivityDate": "2015-10-09T08:59:35.957", "Tags": "<c++><static>", "Score": "-3", "OwnerUserId": "2596489", "ClosedDate": "2015-10-09T13:09:52.903", "AnswerCount": "2"}, "33033969": {"Id": "33033969", "PostTypeId": "2", "Body": "<p>Declare <code>static int ban_ve</code> as a global variable and increment it everytime function is called :</p>\n<pre><code>static int ban_ve = 0;\nvoid iCol::attCalc()\n{\n    ban_ve++;\n    //rest of code\n}\n</code></pre>\n", "LastActivityDate": "2015-10-09T08:55:01.563", "Score": "1", "CreationDate": "2015-10-09T08:55:01.563", "ParentId": "33033859", "CommentCount": "0", "OwnerUserId": "5069314"}, "33033910": {"Id": "33033910", "PostTypeId": "2", "Body": "<p>Just write <code>static int ban_ve = 0;</code> </p>\n<p>It's guaranteed that <code>ban_ve</code> will be initialized only once.</p>\n<p>6.7$4 Declaration statement [stmt.dcl]:</p>\n<blockquote>\n<p id=\"so_33033859_33033910_0\">The zero-initialization (8.5) of all block-scope variables with static\n  storage duration (3.7.1) or thread storage duration (3.7.2) is\n  performed before any other initialization takes place. Constant\n  initialization (3.6.2) of a block-scope entity with static storage\n  duration, if applicable, is performed before its block is first\n  entered. An implementation is permitted to perform early\n  initialization of other block-scope variables with static or thread\n  storage duration under the same conditions that an implementation is\n  permitted to statically initialize a variable with static or thread\n  storage duration in namespace scope (3.6.2). Otherwise such a variable\n  is initialized the first time control passes through its declaration;\n  such a variable is considered initialized upon the completion of its\n  initialization. If the initialization exits by throwing an exception,\n  the initialization is not complete, so it will be tried again the next\n  time control enters the declaration. If control enters the declaration\n  concurrently while the variable is being initialized, the concurrent\n  execution shall wait for completion of the initialization.93 If\n  control re-enters the declaration recursively while the variable is\n  being initialized, the behavior is undefined.</p>\n</blockquote>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2015-10-09T08:59:35.957", "Score": "1", "CreationDate": "2015-10-09T08:51:50.953", "ParentId": "33033859", "CommentCount": "0", "LastEditDate": "2015-10-09T08:59:35.957", "OwnerUserId": "3309790"}});