post_cb({"9819972": {"ParentId": "9819782", "CommentCount": "0", "CreationDate": "2012-03-22T10:00:46.310", "OwnerUserId": "72178", "PostTypeId": "2", "Id": "9819972", "Score": "3", "Body": "<p>It is valid C++ code. It is compiled since <a href=\"http://en.wikipedia.org/wiki/Argument-dependent_name_lookup\" rel=\"nofollow\">argument-dependent lookup</a> applies here.</p>\n", "LastActivityDate": "2012-03-22T10:00:46.310"}, "9819949": {"ParentId": "9819782", "PostTypeId": "2", "CommentCount": "5", "CreationDate": "2012-03-22T09:59:46.393", "Score": "9", "LastEditorUserId": "1090079", "LastEditDate": "2012-03-22T10:06:16.303", "Id": "9819949", "OwnerUserId": "1090079", "Body": "<p>What you are experiencing is due to <code>ADL</code> (<a href=\"http://en.wikipedia.org/wiki/Argument-dependent_name_lookup\" rel=\"nofollow noreferrer\">Argument Dependent Lookup</a>).</p>\n<p>There is nothing wrong with your snippet (besides the fact that the linker will probably complain about <code>NS::Y</code> isn't defined), but it should compile - VS2012 is handling the snippet as it should.</p>\n<p>The compiler will find <code>NS::Y</code> due to the fact that the type of parameter <code>x</code> (<code>NS::X</code>) is in the appropriate scope.</p>\n<hr>\n<blockquote>\n<p id=\"so_9819782_9819949_0\"><strong>3.4.2</strong> <em>Argument-dependent name lookup</em> [<strong>basic.lookup.argdep</strong>]</p>\n<ol>\n<li><p id=\"so_9819782_9819949_1\">When an unqualified name is used as the postfix-expression in a\n  function call (5.2.2), other namespaces not considered during the\n  usual unqualified lookup (3.4.1) may be searched, and in those\n  namespaces, namespace-scope friend function declarations (11.4) not\n  otherwise visible may be found.</p>\n<p id=\"so_9819782_9819949_2\">These modifications to the search depend on the types of the\n  arguments (and for template template arguments, the namespace of the\n  template argument).</p></li>\n<li><p id=\"so_9819782_9819949_3\">For each argument type T in the function call, there is a set of zero or more associated namespaces and a set of zero or more\n  associated classes to be considered.</p>\n<p id=\"so_9819782_9819949_4\">The sets of namespaces and\n  classes is determined entirely by the types of the function arguments\n  (and the namespace of any template template argument).</p></li>\n</ol>\n</blockquote>\n</hr>", "LastActivityDate": "2012-03-22T10:06:16.303"}, "bq_ids": {"n4140": {"so_9819782_9819949_2": {"section_id": 7103, "quality": 0.9166666666666666, "length": 11}, "so_9819782_9819949_4": {"section_id": 7104, "quality": 0.9230769230769231, "length": 12}, "so_9819782_9819949_3": {"section_id": 7104, "quality": 0.9411764705882353, "length": 16}, "so_9819782_9819949_1": {"section_id": 7103, "quality": 0.8148148148148148, "length": 22}}, "n3337": {"so_9819782_9819949_2": {"section_id": 6847, "quality": 0.9166666666666666, "length": 11}, "so_9819782_9819949_4": {"section_id": 6848, "quality": 0.9230769230769231, "length": 12}, "so_9819782_9819949_3": {"section_id": 6848, "quality": 0.9411764705882353, "length": 16}, "so_9819782_9819949_1": {"section_id": 6847, "quality": 0.8148148148148148, "length": 22}}, "n4659": {"so_9819782_9819949_2": {"section_id": 8604, "quality": 0.9166666666666666, "length": 11}, "so_9819782_9819949_3": {"section_id": 8605, "quality": 0.7058823529411765, "length": 12}, "so_9819782_9819949_1": {"section_id": 8604, "quality": 0.8148148148148148, "length": 22}, "so_9819782_9819949_4": {"section_id": 8605, "quality": 0.9230769230769231, "length": 12}}}, "9819782": {"CommentCount": "4", "ViewCount": "184", "CreationDate": "2012-03-22T09:50:13.730", "LastActivityDate": "2012-03-22T10:06:16.303", "Title": "Code compiles in Visual Studio 2010 but shouldn't compile at all", "AcceptedAnswerId": "9819949", "PostTypeId": "1", "Id": "9819782", "Score": "5", "Body": "<p>The following source code compiles correctly with Visual Studio 2010:</p>\n<pre><code>namespace NS\n   {\n   class X\n      {\n      };   \n   X Y(X str);\n   } \n\nvoid myFun()\n   {\n   NS::X x;\n   Y(x);\n   }\n</code></pre>\n<p>(this is reduced code where all my own class and function names have been replaced by X, Y, ...)</p>\n<p>I would expect that the line <code>Y(x)</code> would fail to compile, since it should be <code>NS::Y(x)</code>.</p>\n<p>This source code is compiled with the following command</p>\n<pre><code>cl /c file.cpp\n</code></pre>\n<p>There are no other files included here, no other command line options.</p>\n<p>Why does this file compile?\nBug in VS2010?  Or something that I (and my 3 other colleagues) overlooked?</p>\n", "Tags": "<c++><compiler-errors>", "OwnerUserId": "163551", "AnswerCount": "2"}});