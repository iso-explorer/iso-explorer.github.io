post_cb({"23445738": {"ParentId": "23445662", "CommentCount": "3", "Body": "<p>You can use a <code>long long</code> to store this integer. A <code>long long</code> is guranteed to hold at least 64 bits.</p>\n<p>The problem with this code: <code>if( a&gt;=0 &amp;&amp; a &lt;= (1000000000000000000))</code> is that you need to give the literal (<code>1000000000000000000</code>) the suffix <code>LL</code> if you want it to be of type <code>long long</code> or <code>ULL</code> for <code>unsigned long long</code>.</p>\n", "OwnerUserId": "2553662", "PostTypeId": "2", "Id": "23445738", "Score": "0", "CreationDate": "2014-05-03T14:31:40.320", "LastActivityDate": "2014-05-03T14:31:40.320"}, "23445713": {"ParentId": "23445662", "CommentCount": "2", "Body": "<p>Try a <a href=\"http://msdn.microsoft.com/en-us/library/s3f49ktz.aspx#bkmkRemarks\" rel=\"nofollow\"><code>unsigned long long</code></a>, assuming the value is positive, it can hold up to</p>\n<pre><code>18,446,744,073,709,551,615\n</code></pre>\n<p>(VS 13)\nHowever, you must use the <code>ULL</code> syntax.</p>\n", "OwnerUserId": "1783614", "PostTypeId": "2", "Id": "23445713", "Score": "0", "CreationDate": "2014-05-03T14:28:31.410", "LastActivityDate": "2014-05-03T14:28:31.410"}, "23445662": {"CommentCount": "9", "ViewCount": "9574", "PostTypeId": "1", "LastEditorUserId": "3114046", "CreationDate": "2014-05-03T14:23:14.510", "LastActivityDate": "2014-05-03T14:53:08.813", "Title": "How to store a integer value equal to 10^18 in c programs or c++?", "LastEditDate": "2014-05-03T14:53:08.813", "Id": "23445662", "Score": "-2", "Body": "<p>How can I store a large integer value in a variable of C ?\nIf i am declaring a with <code>int a;</code> it won't work.\nI have used this with <code>long long int</code>.It is not working.</p>\n<pre><code>if( a&gt;=0 &amp;&amp; a &lt;= (1000000000000000000))\n</code></pre>\n<p>What to declare variable a so that it will not so any error.It should be integer.</p>\n<pre><code>Compiler error\ninteger constant is too large for long type.\n</code></pre>\n", "Tags": "<c++><c>", "OwnerUserId": "3599293", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_23445662_23445826_0": {"section_id": 5341, "quality": 0.8333333333333334, "length": 10}}, "n3337": {"so_23445662_23445826_0": {"section_id": 5138, "quality": 0.8333333333333334, "length": 10}}, "n4659": {"so_23445662_23445826_0": {"section_id": 6762, "quality": 0.8333333333333334, "length": 10}}}, "23445826": {"ParentId": "23445662", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>Lets look at this <code>if</code> statement you wrote:</p>\n<pre><code>if( a&gt;=0 &amp;&amp; a &lt;= (1000000000000000000))\n</code></pre>\n<p><code>1000000000000000000</code> is too big for an integral literal so you will need a bigger literal type. You should declare <code>a</code> as an <code>int64_t</code> and do the comparion like that:</p>\n<pre><code>if( a&gt;=INT64_C(0) &amp;&amp; a &lt;= INT64_C(1000000000000000000))\n</code></pre>\n<p>Note that this will only work in a <code>C99</code> or <code>C++11</code> compiler when you <code>#include &lt;cstdint&gt;</code> or <code>#include &lt;stdint.h&gt;</code></p>\n<p>Edit: in current draft of the standard you can find this sentence (2.14.2/2):</p>\n<blockquote>\n<p id=\"so_23445662_23445826_0\">The type of an integer literal is the first of the corresponding list\n  in Table 6 in which its value can be represented.</p>\n</blockquote>\n<p>It means that compiler should use the required literal type automatically to make your literal fit. Btw I didn't see that kind of compiler.</p>\n", "OwnerUserId": "2502409", "LastEditorUserId": "2502409", "LastEditDate": "2014-05-03T14:49:38.493", "Id": "23445826", "Score": "0", "CreationDate": "2014-05-03T14:39:28.853", "LastActivityDate": "2014-05-03T14:49:38.493"}});