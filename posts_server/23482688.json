post_cb({"23482921": {"Id": "23482921", "PostTypeId": "2", "Body": "<p>First of, consider <code>char*</code> to mean <code>c_string</code>, and it immediately becomes obvious why you would need <code>int main(int argc, c_string argv[])</code> versus <code>int main(int argc, c_string&amp; argv)</code>. After all, programs can take more than one parameter.</p>\n<p>Since an array of references (if it were allowed) would turn out to hold only a single char per index, since references cannot be used to find the next character (without taking the reference of it, and thus converting it to a pointer), this does not make any sense either.</p>\n<p>The assumption that the array of arguments is not owned by the program is simply false. The C standards 1999 and 2011 explicitly say:</p>\n<blockquote>\n<p id=\"so_23482688_23482921_0\">The parameters argc and argv and the strings pointed to by the argv array shall\n  be modifiable by the program, and retain their last-stored values between program\n  startup and program termination.</p>\n</blockquote>\n<p>And my copy of the C++1y standard draft says nothing to the contrary.</p>\n", "LastActivityDate": "2014-05-05T22:24:43.290", "CommentCount": "2", "CreationDate": "2014-05-05T22:24:43.290", "ParentId": "23482688", "Score": "3", "OwnerUserId": "65678"}, "23482915": {"Id": "23482915", "PostTypeId": "2", "Body": "<p>First, there's no such thing as \"array of references\" in C++. The standard explicitly prohibits it (\u00a78.3.2 [dcl.ref]/5):</p>\n<blockquote>\n<p id=\"so_23482688_23482915_0\">There shall be no references to references, no references to arrays of runtime bound, <strong>no arrays of references</strong>, and no pointers to references.</p>\n</blockquote>\n<p>Second, even if there were such a thing, backward compatibility requirements would weigh extremely heavily against such a change, which would break lots and lots of existing code using <code>int main(int argc, char *argv[])</code> for no good reason.</p>\n", "LastEditorUserId": "2756719", "LastActivityDate": "2014-08-03T08:59:56.510", "Score": "1", "CreationDate": "2014-05-05T22:24:25.917", "ParentId": "23482688", "CommentCount": "1", "OwnerUserId": "2756719", "LastEditDate": "2014-08-03T08:59:56.510"}, "23482919": {"Id": "23482919", "PostTypeId": "2", "Body": "<p>As @Red Alert said you have confused the redeclaration of \"main\" but I'm going to answer what I think you asked.</p>\n<p>The program arguments is provided by the operating system, and thus is not actually owned by the program. Remember that C/C++ is intended to be low level and efficient so extra copies of arguments should be avoided. I have not seen anyone actually change them on a running program but there are several ways in e.g. Linux to retrieve them outside of the program.</p>\n<p>Also think of compatibility with C, you have not got the \"&amp;\" operator in that way in C and the \"main\" declaration is inherited from C. </p>\n", "LastActivityDate": "2014-05-05T22:24:36.030", "CommentCount": "1", "CreationDate": "2014-05-05T22:24:36.030", "ParentId": "23482688", "Score": "2", "OwnerUserId": "671282"}, "bq_ids": {"n4140": {"so_23482688_23482915_0": {"length": 7, "quality": 0.6363636363636364, "section_id": 3222}}, "n3337": {"so_23482688_23482915_0": {"length": 7, "quality": 0.6363636363636364, "section_id": 3096}}, "n4659": {"so_23482688_23482915_0": {"length": 7, "quality": 0.6363636363636364, "section_id": 3979}}}, "23482688": {"ViewCount": "111", "Body": "<p>I've read <a href=\"http://www.gnu.org/software/libc/manual/html_node/Program-Arguments.html#Program-Arguments\" rel=\"nofollow\">the libc reference</a> for <code>int main (int argc, char *argv[])</code>, as well as  section 3.6.1 \"Main function\" in the <a href=\"https://isocpp.org/std/the-standard\" rel=\"nofollow\">current working standard of the C++ ISO documentation</a>. I've also read a bunch about references. I understand they cannot be reassigned, that they must be only one layer deep, etc. </p>\n<p>That said, why is the standard <code>int main (int argc, char *argv[])</code> rather than <code>int main (int argc, char * &amp;argv)</code> such that it is an \"array\"/data block holding the references to the parameters? </p>\n<p>What I mean by this is why have an array of arrays (char **argv) that are NOT owned by a program and COULD be changed/moved during run time instead of memory that by its definition cannot be modified without the program's consent and proper handling (for example via signaling)? What am I missing?</p>\n", "AcceptedAnswerId": "23482921", "Title": "C++ references to main parameters", "CreationDate": "2014-05-05T22:06:07.487", "Id": "23482688", "CommentCount": "1", "LastEditDate": "2014-05-05T22:30:56.340", "PostTypeId": "1", "LastEditorUserId": "27615", "LastActivityDate": "2014-08-03T08:59:56.510", "Score": "3", "OwnerUserId": "3103569", "Tags": "<c++><parameter-passing><main>", "AnswerCount": "3"}});