post_cb({"bq_ids": {"n4140": {"so_44894400_44894477_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 5510}}, "n3337": {"so_44894400_44894477_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 5296}}, "n4659": {"so_44894400_44894477_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 6945}}}, "44894400": {"ViewCount": "118", "Body": "<p>Look at this snippet:</p>\n<pre><code>namespace A {\nint fn();\n}\nnamespace B {\nint fn();\n}\n\n// namespace Ns {\n\nusing namespace A;\nusing namespace B;\nusing A::fn;\n\nint z = fn();\n\n// }\n</code></pre>\n<p>This code doesn't compile, as <code>fn()</code> is ambiguous at <code>int z = fn();</code></p>\n<p>If I put <code>using</code>'s and <code>z</code> into a namespace (remove the two <code>//</code>), the code compiles. Why is that? What is special about the global namespace?</p>\n", "AcceptedAnswerId": "44894477", "Title": "Resolving ambiguity with using declaration", "CreationDate": "2017-07-03T22:05:55.163", "Id": "44894400", "CommentCount": "2", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2017-07-03T22:14:27.820", "Score": "7", "OwnerUserId": "8157187", "Tags": "<c++>", "AnswerCount": "1"}, "44894477": {"Id": "44894477", "PostTypeId": "2", "Body": "<p>See [namespace.udir]/2</p>\n<blockquote>\n<p id=\"so_44894400_44894477_0\">A <em>using-directive</em> specifies that the names in the nominated namespace can be used in the scope in which the\n  <em>using-directive</em> appears after the <em>using-directive</em>. During unqualified name lookup (3.4.1), the names appear\n  as if they were declared in the nearest enclosing namespace which contains both the <em>using-directive</em> and the\n  nominated namespace.</p>\n</blockquote>\n<p>Thus, when you have the namespace <code>Ns</code>, the directives <code>using namespace A;</code> and <code>using namespace B</code> make <code>A::fn</code> and <code>B::fn</code> appear in the global namespace, whereas <code>using A::fn;</code> makes <code>fn</code> appear in <code>Ns</code>. The latter declaration \"wins\" during name lookup.</p>\n", "LastActivityDate": "2017-07-03T22:14:27.820", "CommentCount": "4", "CreationDate": "2017-07-03T22:14:27.820", "ParentId": "44894400", "Score": "7", "OwnerUserId": "481267"}});