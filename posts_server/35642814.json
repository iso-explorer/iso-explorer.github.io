post_cb({"bq_ids": {"n4140": {"so_35642814_35643113_0": {"length": 6, "quality": 1.0, "section_id": 3270}}, "n3337": {"so_35642814_35643113_0": {"length": 6, "quality": 1.0, "section_id": 3142}}, "n4659": {"so_35642814_35643113_0": {"length": 6, "quality": 1.0, "section_id": 4028}}}, "35643113": {"Id": "35643113", "PostTypeId": "2", "Body": "<p>Yes, you can only explicitly default special member functions. From [dcl.fct.def.default]:</p>\n<blockquote>\n<p id=\"so_35642814_35643113_0\">A function that is explicitly defaulted shall<br>\n  (1.1) \u2014 be a special member function,</br></p>\n</blockquote>\n<p>After all, only special member functions are <em>implicitly</em> defaulted - so why would it make sense to <em>explicitly</em> default anything else? </p>\n<p>In this case, you can simply remove the constructor and make <code>A</code> an aggregate. This will allow you to use list-initialization (<code>A a{42, 'c'};</code>). </p>\n", "LastActivityDate": "2016-02-26T03:52:36.520", "CommentCount": "0", "CreationDate": "2016-02-26T03:52:36.520", "ParentId": "35642814", "Score": "6", "OwnerUserId": "2069064"}, "35642814": {"ViewCount": "121", "Body": "<p>Does <code>=default</code> only apply to special member functions? I tried the following and it did not compile:</p>\n<pre><code>struct A{\n   A(int, char)=default;\n   int i;\n   char c;\n};\n</code></pre>\n", "AcceptedAnswerId": "35643113", "Title": "C++11's \"default\" can be only applied on special member functions?", "CreationDate": "2016-02-26T03:20:21.633", "Id": "35642814", "CommentCount": "0", "LastEditDate": "2016-02-26T03:52:46.990", "PostTypeId": "1", "LastEditorUserId": "2069064", "LastActivityDate": "2016-02-26T03:52:46.990", "Score": "4", "OwnerUserId": "4927124", "Tags": "<c++><function><c++11><default><member>", "AnswerCount": "1"}});