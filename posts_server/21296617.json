post_cb({"21296617": {"AcceptedAnswerId": "21296852", "Tags": "<c++><types><eigen>", "AnswerCount": "1", "OwnerUserId": "958110", "Body": "<p>consider the following test</p>\n<pre><code>Eigen::MatrixXd B(Eigen::MatrixXd::Random(5,5));\nconst Eigen::MatrixXd C(Eigen::MatrixXd::Random(5,5));\nstd::cout &lt;&lt; \"B \" &lt;&lt; typeid(B).name() &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"C \" &lt;&lt; typeid(C).name() &lt;&lt; std::endl;\nstd::cout &lt;&lt; \" === \" &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"B.T \" &lt;&lt; typeid(B.transpose()).name() &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"C.T \" &lt;&lt; typeid(C.transpose()).name() &lt;&lt; std::endl;\n</code></pre>\n<p>and its output</p>\n<pre><code>B N5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEE\nC N5Eigen6MatrixIdLin1ELin1ELi0ELin1ELin1EEE\n === \nB.T N5Eigen9TransposeINS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEE\nC.T N5Eigen9TransposeIKNS_6MatrixIdLin1ELin1ELi0ELin1ELin1EEEEE\n</code></pre>\n<p>demangled</p>\n<pre><code>B Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;\nC Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt;\n === \nB.T Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; &gt;\nC.T Eigen::Transpose&lt;Eigen::Matrix&lt;double, -1, -1, 0, -1, -1&gt; const&gt;\n</code></pre>\n<p>Why is <code>C</code> not shown as <code>const</code>? How does Eigen figure out it is? Is this an Eigen issue or is this <code>typeid</code> ?</p>\n", "CommentCount": "2", "PostTypeId": "1", "CreationDate": "2014-01-22T23:54:29.063", "ViewCount": "193", "LastActivityDate": "2014-01-23T00:14:33.443", "Id": "21296617", "LastEditorUserId": "958110", "Title": "eigen matrix const type", "Score": "1", "LastEditDate": "2014-01-23T00:11:10.853"}, "bq_ids": {"n3337": {"so_21296617_21296852_0": {"section_id": 5792, "quality": 0.75, "length": 9}}}, "21296852": {"LastActivityDate": "2014-01-23T00:14:33.443", "ParentId": "21296617", "Id": "21296852", "Score": "1", "Body": "<p>This is due to the behaviour of <code>typeid</code>:</p>\n<blockquote>\n<p id=\"so_21296617_21296852_0\"><em>\u00a75.2.8/5 [expr.typeid]</em> The top-level cv-qualifiers of the glvalue expression or the <em>type-id</em> that is the operand of <code>typeid</code> are always ignored.</p>\n</blockquote>\n<p>So in both cases, the <code>typeid</code> will only apply to <code>Eigen::MatrixXd</code>.</p>\n", "CommentCount": "1", "PostTypeId": "2", "OwnerUserId": "150634", "CreationDate": "2014-01-23T00:14:33.443"}});