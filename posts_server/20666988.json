post_cb({"20667036": {"ParentId": "20666988", "PostTypeId": "2", "CommentCount": "2", "Body": "<blockquote>\n<p id=\"so_20666988_20667036_0\">Is the string returned by <code>exception::what()</code> expected to be the same across compilers?</p>\n</blockquote>\n<p><strong>No, this isn't standardised.</strong></p>\n<p>Taking your example of <code>bad_alloc</code>:</p>\n<blockquote>\n<p id=\"so_20666988_20667036_1\"><code>[C++11: 18.6.2.1/5]:</code> <strong><code>virtual const char* what() const noexcept;</code></strong></p>\n<p id=\"so_20666988_20667036_2\"><em>Returns:</em> An implementation-defined NTBS.</p>\n</blockquote>\n<p><sup>(NTBS means \"null-terminated byte string\"; it's the \"implementation-defined\" that you care about.)</sup></p>\n<p>At best, this pattern is found in all the standard exception definitions.</p>\n<hr>\n<blockquote>\n<p id=\"so_20666988_20667036_3\">Is there some reason a more descriptive string such as Memory allocation failure isn't returned?</p>\n</blockquote>\n<p>Probably because it's longer, and in fact <em>not</em> more descriptive. A verbose string like \"Memory allocation failure\" is pretty needless; a short string that provides <em>the information</em> can always be expanded to be more human-friendly, in calling code.</p>\n</hr>", "OwnerUserId": "560648", "LastEditorUserId": "560648", "LastEditDate": "2013-12-18T19:56:10.377", "Id": "20667036", "Score": "3", "CreationDate": "2013-12-18T19:45:15.893", "LastActivityDate": "2013-12-18T19:56:10.377"}, "20667042": {"ParentId": "20666988", "CommentCount": "0", "Body": "<p>There's no standard, it's all down to the implementation of the C++ runtime.</p>\n", "OwnerUserId": "26095", "PostTypeId": "2", "Id": "20667042", "Score": "0", "CreationDate": "2013-12-18T19:45:33.910", "LastActivityDate": "2013-12-18T19:45:33.910"}, "bq_ids": {"n4140": {"so_20666988_20667036_1": {"section_id": 6873, "quality": 0.75, "length": 6}}, "n3337": {"so_20666988_20667036_1": {"section_id": 6619, "quality": 0.75, "length": 6}}, "n4659": {"so_20666988_20667036_1": {"section_id": 8411, "quality": 0.75, "length": 6}}}, "20666988": {"CommentCount": "0", "ViewCount": "90", "CreationDate": "2013-12-18T19:42:34.737", "LastActivityDate": "2013-12-18T19:56:10.377", "Title": "Are exception descriptions from exception::what() standarized for standard exceptions?", "AcceptedAnswerId": "20667036", "PostTypeId": "1", "Id": "20666988", "Score": "4", "Body": "<p>For standardized exceptions like <code>std::bad_alloc</code>, is the string returned by <code>exception::what()</code> expected to be the same across compilers?</p>\n<p>For example, several compilers I've worked with all return <code>bad allocation</code> for <code>bad_alloc::what()</code>.  Is there some reason a more descriptive string such as <code>Memory allocation failure</code> isn't returned? </p>\n", "Tags": "<c++><exception><standards>", "OwnerUserId": "681231", "AnswerCount": "2"}});