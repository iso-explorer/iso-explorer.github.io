post_cb({"7538521": {"ParentId": "7538431", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2011-09-24T10:47:06.277", "Score": "6", "LastEditorUserId": "19563", "LastEditDate": "2011-09-24T10:53:13.027", "Id": "7538521", "OwnerUserId": "19563", "Body": "<p>Yes, it's required that <code>override</code> is not ignored by a conforming implementation. First, <code>override</code> can only appear in the declaration of a virtual member function.</p>\n<p>9.2/9:</p>\n<blockquote>\n<p id=\"so_7538431_7538521_0\">[...] A virt-specifier-seq shall appear only in the declaration of a virtual member function.</p>\n</blockquote>\n<p>Second, a virtual function which doesn't override a member function of a base class but is marked <code>override</code> makes the program ill-formed.</p>\n<p>10.3/7:</p>\n<blockquote>\n<p id=\"so_7538431_7538521_1\">If a virtual function is marked with the virt-specifier override and does not override a member function of a base class, the program is ill-formed.</p>\n</blockquote>\n<p>As both are diagnosable rules of the standard it is illegal for a conforming compiler to ignore violations. (1.4/1)</p>\n<p>The same reasoning applies to <code>final</code> and the relevant requirements are in 9 [class]/3 and 10.3 [class.virtual]/4.</p>\n", "LastActivityDate": "2011-09-24T10:53:13.027"}, "7538431": {"CommentCount": "0", "ViewCount": "363", "CreationDate": "2011-09-24T10:27:34.830", "LastActivityDate": "2011-09-24T10:53:13.027", "Title": "Compiler requirement for override and final", "AcceptedAnswerId": "7538521", "PostTypeId": "1", "Id": "7538431", "Score": "4", "Body": "<p>I can remember that during the discussion about general attributes which finally lead to the new contextual keywords <code>override</code> and <code>final</code> it was suggested that compiler support for these ore some <strong>may be optional</strong> (I guess it would read in the standard text as \"behavior is implementation-specific). But I can not find any trace about this optionality in the FDIS and the corrections afterwards.</p>\n<p>But since not finding it is not proof, I have to ask: <strong>Is the support</strong> as described in 2.11p2, 9.2 and 10.3 of the FDIS <strong>for <code>override</code> and <code>final</code> obligatory for a conforming compiler?</strong></p>\n<p>Is it for example required that a <em>conforming compiler</em> rejects</p>\n<pre><code>class Foo {\n    void func() override; // Error: not virtual, 9.2p9\n};\n</code></pre>\n<p>Or is it still conforming by ignoring <em>override</em>?</p>\n", "Tags": "<c++><compiler-construction><override><virtual><c++11>", "OwnerUserId": "472245", "AnswerCount": "2"}, "7538484": {"ParentId": "7538431", "CommentCount": "1", "CreationDate": "2011-09-24T10:38:12.413", "OwnerUserId": "597607", "PostTypeId": "2", "Id": "7538484", "Score": "5", "Body": "<p>The <em>use</em> of <code>override</code> and <code>final</code> is optional for the programmer, but nowhere does it say that the compiler can ignore them.</p>\n<p>This might have been different for the earlier proposals which used attributes instead of keywords. Attributes leave a lot more freedom to the compiler.</p>\n", "LastActivityDate": "2011-09-24T10:38:12.413"}, "bq_ids": {"n4140": {"so_7538431_7538521_0": {"section_id": 5868, "quality": 1.0, "length": 6}, "so_7538431_7538521_1": {"section_id": 7006, "quality": 1.0, "length": 12}}, "n3337": {"so_7538431_7538521_0": {"section_id": 5639, "quality": 1.0, "length": 6}, "so_7538431_7538521_1": {"section_id": 6752, "quality": 1.0, "length": 12}}, "n4659": {"so_7538431_7538521_0": {"section_id": 7351, "quality": 1.0, "length": 6}, "so_7538431_7538521_1": {"section_id": 8503, "quality": 1.0, "length": 12}}}});