post_cb({"26160962": {"ViewCount": "1690", "Body": "<p>Following on from my answer to <a href=\"https://stackoverflow.com/q/26160465/560648\">this question</a>, in both C++11 and C++14:</p>\n<blockquote>\n<p id=\"so_26160962_26160962_0\"><code>[C++11, C++14: 25.5/2]:</code> The contents are the same as the Standard C library header <code>&lt;stdlib.h&gt;</code> with the following exceptions:</p>\n<p id=\"so_26160962_26160962_1\"><code>[C++11, C++14: 25.5/3]:</code> The function signature:</p>\n<pre><code>bsearch(const void *, const void *, size_t, size_t,\n        int (*)(const void *, const void *));\n</code></pre>\n<p id=\"so_26160962_26160962_2\">is replaced by the two declarations:</p>\n<pre><code>extern \"C\" void *bsearch(const void *key, const void *base,\n                         size_t nmemb, size_t size,\n                         int (*compar)(const void *, const void *));\n\nextern \"C++\" void *bsearch(const void *key, const void *base,\n                           size_t nmemb, size_t size,\n                           int (*compar)(const void *, const void *));\n</code></pre>\n<p id=\"so_26160962_26160962_3\">both of which have the same behavior as the original declaration.</p>\n</blockquote>\n<p>However,</p>\n<blockquote>\n<p id=\"so_26160962_26160962_4\"><code>[C++11, C++14: 7.5/5]:</code> If two declarations declare functions with the same name and parameter-type-list (8.3.5) to be members of the same namespace or declare objects with the same name to be members of the same namespace and the declarations give the names different language linkages, the program is ill-formed; no diagnostic is required if the declarations appear in different translation units. <em>[..]</em></p>\n</blockquote>\n<p>Is this a defect?</p>\n", "AcceptedAnswerId": "26161361", "Title": "Is the specification of `bsearch` in C++11 & C++14 defective?", "CreationDate": "2014-10-02T12:37:34.497", "Id": "26160962", "CommentCount": "3", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2017-05-23T12:16:41.837", "LastEditorUserId": "-1", "LastActivityDate": "2015-09-06T16:38:20.887", "Score": "45", "OwnerUserId": "560648", "Tags": "<c++><c++11><language-lawyer><c++14><bsearch>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_26160962_26161361_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 5520}, "so_26160962_26160962_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 1523}, "so_26160962_26160962_4": {"length": 31, "quality": 0.8857142857142857, "section_id": 5521}, "so_26160962_26161361_0": {"length": 12, "quality": 1.0, "section_id": 5517}, "so_26160962_26160962_3": {"length": 6, "quality": 1.0, "section_id": 1524}}, "n3337": {"so_26160962_26161361_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 5306}, "so_26160962_26160962_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 1517}, "so_26160962_26160962_4": {"length": 31, "quality": 0.8857142857142857, "section_id": 5307}, "so_26160962_26161361_0": {"length": 12, "quality": 1.0, "section_id": 5303}, "so_26160962_26160962_3": {"length": 6, "quality": 1.0, "section_id": 1518}}, "n4659": {"so_26160962_26161361_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 6955}, "so_26160962_26160962_4": {"length": 31, "quality": 0.8857142857142857, "section_id": 6956}, "so_26160962_26161361_0": {"length": 12, "quality": 1.0, "section_id": 6952}}}, "26161361": {"Id": "26161361", "PostTypeId": "2", "Body": "<p>But the parameter types list are not the same. In one, <code>compar</code> is a pointer to a function with \"C\" language linkage, in the other one, it's a pointer to a function with \"C++\" language linkage.</p>\n<p>C++11, 7.5 specifies:</p>\n<blockquote>\n<p id=\"so_26160962_26161361_0\">1 ... Two function types with different language\n  linkages are distinct types even if they are otherwise identical.</p>\n<p id=\"so_26160962_26161361_1\">4 In a <em>linkage-specification,</em> the specified language linkage applies to the function\n  types of all function declarators, function names with external linkage, and variable names with external\n  linkage declared within the <em>linkage-specification.</em> [ <em>Example:</em></p>\n<pre><code>extern \"C\" void f1(void(*pf)(int));\n// the name f1 and its function type have C language\n// linkage; pf is a pointer to a C function\n</code></pre>\n</blockquote>\n<p>The seeming inconsistency between 7.5/1 and 7.5/5 is solved when realising that 1 talks about function <em>types,</em> while 5 addresses function <em>names.</em></p>\n", "LastEditorUserId": "1782465", "LastActivityDate": "2014-10-02T13:05:12.363", "Score": "49", "CreationDate": "2014-10-02T12:57:46.953", "ParentId": "26160962", "CommentCount": "12", "OwnerUserId": "1782465", "LastEditDate": "2014-10-02T13:05:12.363"}});