post_cb({"16527644": {"ParentId": "16527595", "CommentCount": "4", "Body": "<p>When you use <code>args</code> in the capture, you need ellipsis:</p>\n<pre><code>template &lt;class T, class... A&gt;\nvoid tpool::enqueue(T&amp;&amp; func, A&amp;&amp;... args) {\n    std::function&lt;void()&gt; task([func, args...] () {\n        //...\n    });\n}\n</code></pre>\n", "OwnerUserId": "440558", "PostTypeId": "2", "Id": "16527644", "Score": "3", "CreationDate": "2013-05-13T17:21:44.287", "LastActivityDate": "2013-05-13T17:21:44.287"}, "16527595": {"CommentCount": "0", "AcceptedAnswerId": "16527660", "CreationDate": "2013-05-13T17:18:10.367", "LastActivityDate": "2013-05-13T17:22:32.880", "PostTypeId": "1", "ViewCount": "931", "FavoriteCount": "1", "Title": "How to capture variable number of arguments in lambda function", "Id": "16527595", "Score": "4", "Body": "<p>I tried the following code but doesn't compile.</p>\n<pre><code>template &lt;class T, class... A&gt;\nvoid tpool::enqueue(T&amp;&amp; func, A&amp;&amp;... args) {\n    std::function&lt;void()&gt; task([func, args] () {\n        //...\n    });\n}\n</code></pre>\n", "Tags": "<c++><templates><c++11><lambda>", "OwnerUserId": "1320862", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_16527595_16527660_0": {"section_id": 83, "quality": 0.5714285714285714, "length": 4}}, "n3337": {"so_16527595_16527660_0": {"section_id": 5751, "quality": 0.7142857142857143, "length": 5}}, "n4659": {"so_16527595_16527660_0": {"section_id": 86, "quality": 0.5714285714285714, "length": 4}}}, "16527660": {"ParentId": "16527595", "CommentCount": "6", "Body": "<p>Just use the ellipses. Per paragraph 5.1.2/23 of the C++11 Standard:</p>\n<blockquote>\n<p id=\"so_16527595_16527660_0\">A capture followed by an ellipsis is a pack expansion (14.5.3). [ <em>Example</em>:</p>\n<pre><code>template&lt;class... Args&gt;\nvoid f(Args... args) {\n    auto lm = [&amp;, args...] { return g(args...); };\n    lm();\n}\n</code></pre>\n<p id=\"so_16527595_16527660_1\">\u2014<em>end example</em> ]</p>\n</blockquote>\n<p>Note: Interestingly enough, GCC is refusing to compile this (see the <a href=\"http://ideone.com/C2wHot\">live example</a>):</p>\n<pre><code>template &lt;class T, class... A&gt;\nvoid foo(T&amp;&amp; func, A&amp;&amp;... args) {\n    std::function&lt;void()&gt; task([func, args...] () {\n        //...\n    });\n}\n</code></pre>\n<p>But considering the above example from the Standard, this is definitely a compiler issue.</p>\n", "OwnerUserId": "1932150", "PostTypeId": "2", "Id": "16527660", "Score": "7", "CreationDate": "2013-05-13T17:22:32.880", "LastActivityDate": "2013-05-13T17:22:32.880"}});