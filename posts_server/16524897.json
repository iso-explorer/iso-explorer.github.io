post_cb({"16524897": {"CommentCount": "4", "AcceptedAnswerId": "16525136", "PostTypeId": "1", "LastEditorUserId": "150634", "CreationDate": "2013-05-13T14:46:40.220", "LastActivityDate": "2013-06-11T11:36:37.093", "LastEditDate": "2013-05-13T15:18:07.880", "ViewCount": "1773", "FavoriteCount": "9", "Title": "Type of `this` in static member function?", "Id": "16524897", "Score": "73", "Body": "<p>In C++ 5.1.1/3 [expr.prim.general] it says:</p>\n<blockquote>\n<p id=\"so_16524897_16524897_0\">The type and value category [of <code>this</code>] are defined within a static member function.</p>\n</blockquote>\n<p>What does this mean?  How is it relevant?</p>\n<p>Note that:</p>\n<blockquote>\n<p id=\"so_16524897_16524897_1\"><code>this</code> shall not appear in the declaration of a static member function</p>\n</blockquote>\n", "Tags": "<c++><c++11><language-lawyer>", "OwnerUserId": "1131467", "AnswerCount": "1"}, "16525136": {"ParentId": "16524897", "CommentCount": "5", "Body": "<p>The language in the standard can be traced to <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3282.pdf\" rel=\"noreferrer\">n3282</a>, which is a resolution for defects <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1207\" rel=\"noreferrer\">1207</a> and <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1017\" rel=\"noreferrer\">1017</a>.  In particular, the language appears in the proposed resolution for defect 1207, and thus should be considered in the context of the standard as it stood at the time that defect was addressed.  At that time there was some concern over the rewriting of id-expressions into member access expressions using <code>*this</code> (9.3.1p3), in particular in the context of trailing-return-type declarations (see issue <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#945\" rel=\"noreferrer\">945</a>).</p>\n<p>If we compare the proposed resolution to defect 1207 to the eventual language in n3282 and subsequently in the standard, there is one significant difference to 9.3.1p3:</p>\n<h3>Defect 1207:</h3>\n<blockquote>\n<p id=\"so_16524897_16525136_0\">When an id-expression (5.1 [expr.prim]) that is not part of a class member access syntax (5.2.5 [expr.ref]) and not used to form a pointer to member (5.3.1 [expr.unary.op]) is used in <strong>the declaration of a member function of class <code>X</code></strong>, if name lookup (3.4 [basic.lookup]) resolves the name...</p>\n</blockquote>\n<h3>n3282 and C++11:</h3>\n<blockquote>\n<p id=\"so_16524897_16525136_1\">When an id-expression (5.1 [expr.prim]) that is not part of a class member access syntax (5.2.5 [expr.ref]) and not used to form a pointer to member (5.3.1 [expr.unary.op]) is used in <strong>a member of class <code>X</code> in a context where <code>this</code> can be used (5.1.1 [expr.prim.general])</strong>, if name lookup (3.4 [basic.lookup]) resolves the name [...]</p>\n</blockquote>\n<p>It is apparent that the proposed resolution to defect 1207 carried the belief that id-expressions (to a static member) within a static member functions would need to be transformed to <code>*this</code> member access expressions and thus would need access to the type and value category of <code>this</code>.  By the time n3282 was written this had been resolved in favour of the qualified-id transformation (also 9.3.1p3) which does not require <code>this</code>, but the language in 5.1.1p3 remained vestigially.</p>\n<p>I would recommend raising this issue on the C++ standards discussion newsgroup; it may be possible to get the vestigial language removed editorially.</p>\n", "OwnerUserId": "567292", "PostTypeId": "2", "Id": "16525136", "Score": "78", "CreationDate": "2013-05-13T14:57:15.787", "LastActivityDate": "2013-05-13T14:57:15.787"}, "bq_ids": {"n4140": {"so_16524897_16525136_0": {"section_id": 5891, "quality": 0.6666666666666666, "length": 16}, "so_16524897_16525136_1": {"section_id": 5891, "quality": 0.7037037037037037, "length": 19}, "so_16524897_16524897_0": {"section_id": 5949, "quality": 0.8888888888888888, "length": 8}, "so_16524897_16524897_1": {"section_id": 5949, "quality": 1.0, "length": 5}}, "n3337": {"so_16524897_16525136_0": {"section_id": 5662, "quality": 0.6666666666666666, "length": 16}, "so_16524897_16525136_1": {"section_id": 5662, "quality": 0.7037037037037037, "length": 19}, "so_16524897_16524897_0": {"section_id": 5719, "quality": 0.8888888888888888, "length": 8}, "so_16524897_16524897_1": {"section_id": 5719, "quality": 1.0, "length": 5}}, "n4659": {"so_16524897_16525136_0": {"section_id": 7374, "quality": 0.6666666666666666, "length": 16}, "so_16524897_16525136_1": {"section_id": 7374, "quality": 0.7037037037037037, "length": 19}, "so_16524897_16524897_0": {"section_id": 7435, "quality": 0.8888888888888888, "length": 8}, "so_16524897_16524897_1": {"section_id": 7435, "quality": 1.0, "length": 5}}}});