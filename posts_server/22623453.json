post_cb({"22623453": {"CommentCount": "5", "ViewCount": "264", "CreationDate": "2014-03-25T00:49:18.533", "LastActivityDate": "2014-03-25T02:43:19.683", "Title": "C++ Converting unsigned to signed integer portability", "AcceptedAnswerId": "22624277", "PostTypeId": "1", "Id": "22623453", "Score": "0", "Body": "<p>I know that in C the conversion of unsigned to signed integers is implementation defined, but what is it for C++? I figured someone would have asked this already, and I searched but I couldn't find it.</p>\n<p>I have a function that operates on an unsigned integer and returns a related unsigned integer. I am passing that function a signed integer by casting to unsigned similar to <code>int num = -6; unsigned ret = func((unsigned)num); int ret_as_signed = (int)ret;</code>. In Visual Studio that works fine, but I wonder how portable it is.</p>\n<p>Is there a portable way to convert unsigned integers to signed integers? It it possible to just reverse how signed integers are converted to unsigned via wraparound? Thanks</p>\n", "Tags": "<c++><standards><signed>", "OwnerUserId": "4704515", "AnswerCount": "2"}, "22624277": {"ParentId": "22623453", "CommentCount": "0", "CreationDate": "2014-03-25T02:17:32.443", "OwnerUserId": "1566221", "PostTypeId": "2", "Id": "22624277", "Score": "1", "Body": "<p>Conversion of an unsigned integer to a signed integer where the unsigned value is outside of the range of the signed type is <em>implementation-defined</em>. You cannot count on being able to round-trip a negative integer to unsigned and then back to signed. [1]</p>\n<p>C++ standard, [conv.integral], \u00a7 4.7/3:</p>\n<blockquote>\n<p id=\"so_22623453_22624277_0\">If the destination type is signed, the value is unchanged if it can be represented in the destination type (and bit-field width); otherwise, the value is implementation-defined.</p>\n</blockquote>\n<p>[1] It seems likely that it will work, but there are no guarantees.</p>\n", "LastActivityDate": "2014-03-25T02:17:32.443"}, "22624518": {"ParentId": "22623453", "CommentCount": "1", "CreationDate": "2014-03-25T02:43:19.683", "OwnerUserId": "1505939", "PostTypeId": "2", "Id": "22624518", "Score": "2", "Body": "<p>For the portable version of the inverse of signed-&gt;unsigned conversion, how about:</p>\n<pre><code>if ( ret &lt;= INT_MAX )\n    ret_as_signed = ret;\nelse\n    ret_as_signed = -(int)(UINT_MAX - ret) - 1;\n</code></pre>\n<p>You could probably generalize this using the templates in <code>&lt;limits&gt;</code>.</p>\n", "LastActivityDate": "2014-03-25T02:43:19.683"}, "bq_ids": {"n4140": {"so_22623453_22624277_0": {"section_id": 32, "quality": 0.9285714285714286, "length": 13}}, "n3337": {"so_22623453_22624277_0": {"section_id": 29, "quality": 0.9285714285714286, "length": 13}}, "n4659": {"so_22623453_22624277_0": {"section_id": 32, "quality": 0.7857142857142857, "length": 11}}}});