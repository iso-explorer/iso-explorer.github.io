post_cb({"20840556": {"ViewCount": "157", "Body": "<p>I believe I have it understod but I just want confirmation. If I have two functions,</p>\n<pre><code>function A()\n{\n    const Vector3D vectorA(1.0f);\n    ...\n}\n\nfunction B(float var)\n{\n    const Vector3D vectorB(1.0f + var);\n    ...\n}\n</code></pre>\n<p>In the case of function <code>A()</code>, will <code>vectorA</code> only be constructed once in the program, no matter how many <code>A()</code> calls? I believe the compiler implicitly declares it static yes? \nBut in the case of <code>B()</code>, <code>vectorB</code> needs to be reconstructed each function call?</p>\n", "AcceptedAnswerId": "20840609", "Title": "Const variable in C++ function body", "CreationDate": "2013-12-30T13:29:59.420", "Id": "20840556", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-12-30T13:53:36.717", "Score": "2", "OwnerUserId": "528590", "Tags": "<c++>", "AnswerCount": "4"}, "20840945": {"Id": "20840945", "PostTypeId": "2", "Body": "<p>The answer is <strong>no</strong>, however you are not <em>that</em> far off-track.</p>\n<p><code>static</code> is a very much overloaded keyword:</p>\n<ul>\n<li>a <code>static</code> method is one that is not called on an instance of a class</li>\n<li>a <code>static</code> attribute is one that exists only once for all instances of a class</li>\n<li>a <code>static</code> function has internal linkage</li>\n<li>a <code>static</code> variable, at namespace scope, has internal linkage</li>\n<li>a <code>static</code> variable, at function scope, is also called local static; it is built the first time the execution flow pass through its definition and its state is then preserved between calls to the function it belongs to</li>\n</ul>\n<p>Of all these uses, a single one can be (in effect) implicit: a <code>const</code> or <code>constexpr</code> variable at namespace scope has internal linkage (<em>as if it were static</em>) unless another storage qualifier is used (such as <code>extern</code>).</p>\n<blockquote>\n<p id=\"so_20840556_20840945_0\"><strong>\u00a73.5 Program and linkage [basic.link]</strong></p>\n<p id=\"so_20840556_20840945_1\">3/ A name having namespace scope (3.3.6) has internal linkage if it is the name of</p>\n<ul>\n<li>a variable, function or function template that is explicitly declared <code>static</code>; or,</li>\n<li>a variable that is explicitly declared <code>const</code> or <code>constexpr</code> and neither explicitly declared extern nor previously declared to have external linkage; or</li>\n<li>a data member of an anonymous union.</li>\n</ul>\n</blockquote>\n<p>Do not that <code>const</code> or <code>constexpr</code> thus <em>never</em> imply <code>static</code>, but in the specific case highlighted in the second bullet point <em>for variables declared at namespace scope</em> have the same effect on linkage.</p>\n", "LastActivityDate": "2013-12-30T13:53:36.717", "CommentCount": "0", "CreationDate": "2013-12-30T13:53:36.717", "ParentId": "20840556", "Score": "1", "OwnerUserId": "147192"}, "20840609": {"Id": "20840609", "PostTypeId": "2", "Body": "<p>Both functions will create the variables every time they are called.  There is no implicit static.  Some compilers may choose to optimize but it is not part of the language specification.</p>\n", "LastActivityDate": "2013-12-30T13:32:54.480", "CommentCount": "7", "CreationDate": "2013-12-30T13:32:54.480", "ParentId": "20840556", "Score": "4", "OwnerUserId": "1778167"}, "20840614": {"Id": "20840614", "PostTypeId": "2", "Body": "<p>No in both the cases the objects will be created upon every call.<br>\nWhy should the compiler provide <code>static</code>ness  implicitly in the first case ?</br></p>\n", "LastActivityDate": "2013-12-30T13:33:17.403", "CommentCount": "0", "CreationDate": "2013-12-30T13:33:17.403", "ParentId": "20840556", "Score": "1", "OwnerUserId": "1634969"}, "bq_ids": {"n4140": {"so_20840556_20840945_1": {"length": 7, "quality": 0.875, "section_id": 7136}}, "n3337": {"so_20840556_20840945_1": {"length": 7, "quality": 0.875, "section_id": 6880}}, "n4659": {"so_20840556_20840945_1": {"length": 7, "quality": 0.875, "section_id": 8637}}}, "20840629": {"Id": "20840629", "PostTypeId": "2", "Body": "<p><code>In the case of function A(), will vectorA only be constructed once in the program, no matter how many A() calls?</code></p>\n<p>No. If you want only one construction of <code>vectorA</code>, you need to declare it as <code>static</code>:</p>\n<pre><code>const static Vector3D vectorA(1.0f);\n</code></pre>\n<p><code>I believe the compiler implicitly declares it static yes?</code></p>\n<p>Don't assume that.</p>\n", "LastActivityDate": "2013-12-30T13:34:07.297", "CommentCount": "0", "CreationDate": "2013-12-30T13:34:07.297", "ParentId": "20840556", "Score": "1", "OwnerUserId": "2432477"}});