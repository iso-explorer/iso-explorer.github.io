post_cb({"bq_ids": {"n4140": {"so_876213_876216_0": {"length": 15, "quality": 0.9375, "section_id": 5785}, "so_876213_876216_1": {"length": 12, "quality": 0.9230769230769231, "section_id": 6076}}, "n3337": {"so_876213_876216_0": {"length": 15, "quality": 0.9375, "section_id": 5558}, "so_876213_876216_1": {"length": 12, "quality": 0.9230769230769231, "section_id": 5844}}, "n4659": {"so_876213_876216_0": {"length": 15, "quality": 0.9375, "section_id": 7242}, "so_876213_876216_1": {"length": 12, "quality": 0.9230769230769231, "section_id": 7572}}}, "876265": {"Id": "876265", "PostTypeId": "2", "Body": "<p>The type char is one of the few types that has a size guaranteed by the ANSI standard and that size is 1 byte.  As far as I know C does not directly define the type byte.  However it would be just short of insane to have a type named byte which is not in fact a byte in size.  Therefore a simple cast should do the trick.</p>\n", "LastActivityDate": "2009-05-18T04:40:53.430", "CommentCount": "2", "CreationDate": "2009-05-18T04:40:53.430", "ParentId": "876213", "Score": "13", "OwnerUserId": "23283"}, "876213": {"ViewCount": "74058", "Body": "<p>What is the best way to convert an array of chars to bytes and vice versa?</p>\n<p>Solution:</p>\n<pre><code>void CharToByte(char* chars, byte* bytes, unsigned int count){\n    for(unsigned int i = 0; i &lt; count; i++)\n        bytes[i] = (byte)chars[i];\n}\n\nvoid ByteToChar(byte* bytes, char* chars, unsigned int count){\n    for(unsigned int i = 0; i &lt; count; i++)\n         chars[i] = (char)bytes[i];\n}\n</code></pre>\n", "Title": "Convert array of char[] to byte[] and vice versa? C++", "CreationDate": "2009-05-18T04:01:59.920", "LastActivityDate": "2009-05-18T14:49:15.520", "CommentCount": "0", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2009-05-18T04:18:02.693", "LastEditorDisplayName": "Jean", "OwnerDisplayName": "Jean", "Id": "876213", "Score": "11", "Tags": "<c++><char>", "AnswerCount": "4"}, "876263": {"Id": "876263", "PostTypeId": "2", "Body": "<p>There is no byte type in C++.  You could typedef 'unsigned char' to 'byte' if that makes it nicer.  Really thats all a byte is in C++ - an unsigned char.  Aside from that, yes I would cast...  but this cast is better:</p>\n<pre><code>unsigned_char_arr[i]= static_cast&lt;unsigned char&gt;(char_arr[i]);\n</code></pre>\n<p>or... just use the char array and cast it when it needs to be interpreted as an unsigned char...</p>\n", "LastActivityDate": "2009-05-18T04:40:20.373", "CommentCount": "1", "CreationDate": "2009-05-18T04:40:20.373", "ParentId": "876213", "Score": "3", "OwnerUserId": "67985"}, "876216": {"Id": "876216", "PostTypeId": "2", "Body": "<p>There is no byte type in C++, and according to the Standard:</p>\n<p>Edit:</p>\n<p>1.7:</p>\n<blockquote>\n<p id=\"so_876213_876216_0\">A byte is at least large enough to\n  contain any member of the basic\n  execution character set and is\n  composed of a contiguous sequence of\n  bits, the number of which is\n  implementation-defined.</p>\n</blockquote>\n<p>5.3.3:</p>\n<blockquote>\n<p id=\"so_876213_876216_1\">sizeof(char), sizeof(signed char) and\n  sizeof(unsigned char) are 1; the\n  result of sizeof applied to any other\n  fundamental type (3.9.1) is\n  implementation-defined.</p>\n</blockquote>\n", "LastEditorUserId": "12652", "LastActivityDate": "2009-05-18T05:16:27.273", "Score": "7", "CreationDate": "2009-05-18T04:05:23.123", "ParentId": "876213", "CommentCount": "2", "OwnerUserId": "12652", "LastEditDate": "2009-05-18T05:16:27.273"}, "876223": {"Id": "876223", "PostTypeId": "2", "Body": "<p>In almost every C++ implementation you'll come across, a <code>char</code> is exactly <s>a <code>byte</code></s> an octet.  This is not guaranteed by the C++ standard, but it's practically always the case.  A <code>char</code> is always <em>at least</em> 8 bits large, and the exact number of bits is given by the preprocessor constant <code>CHAR_BIT</code>.  Also, the <code>sizeof()</code> operator tells you the size of an object/type in terms of the number of <code>char</code>s, not the number of <s>bytes</s> octets, so if you were on some weird system with a 16-bit <code>char</code> and a 32-bit <code>int</code>, then <code>sizeof(int)</code> would be 2, not 4.</p>\n<p><strong>EDIT:</strong> Replaced byte by octet.  A <code>char</code> is guaranteed to be a byte by the C standard, but a byte is not guaranteed to be an octet, which is exactly 8 bits.  If you've ever read any French technical literature, they always use 'octet' instead of 'byte', and they have kilooctets (KO), megaoctets (MO), etc. instead of kilbytes and megabytes.</p>\n", "LastEditorUserId": "9530", "LastActivityDate": "2009-05-18T14:49:15.520", "Score": "1", "CreationDate": "2009-05-18T04:10:22.073", "ParentId": "876213", "CommentCount": "3", "OwnerUserId": "9530", "LastEditDate": "2009-05-18T14:49:15.520"}});