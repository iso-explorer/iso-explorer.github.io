post_cb({"14905508": {"ParentId": "14905499", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>You can, but restrictions apply. Pointer arithmetics is only valid within an array (or 1 past the end of an array).</p>\n<p>Here's some of the rules:</p>\n<h3>5.7 Additive operators [expr.add]</h3>\n<blockquote>\n<p id=\"so_14905499_14905508_0\">5) [...] If both the pointer operand and the result point to elements of the same array object, or one past\n  the last element of the array object, the evaluation shall not produce an overflow; otherwise, the behavior is\n  undefined.</p>\n</blockquote>\n<p>and</p>\n<blockquote>\n<p id=\"so_14905499_14905508_1\">6) When two pointers to elements of the same array object are subtracted, the result is the difference of the\n  subscripts of the two array elements. [...] Unless both pointers point to elements of the same array object, or\n  one past the last element of the array object, the behavior is undefined.</p>\n</blockquote>\n<p>pasted here for confirmation.</p>\n<p>So</p>\n<pre><code>int* x = new int;\nint* y = new int;\n</code></pre>\n<p>is okay, but:</p>\n<pre><code>y-x;\nx + 4;\ny - 1;\n</code></pre>\n<p>or even comparisons using binary comparison operators are undefined behavior.</p>\n<p>However <code>x+1</code> and <code>1+x</code> are okay (a single object counts as an array of size 1)</p>\n", "OwnerUserId": "673730", "LastEditorUserId": "673730", "LastEditDate": "2013-02-16T02:46:30.963", "Id": "14905508", "Score": "3", "CreationDate": "2013-02-16T00:20:32.267", "LastActivityDate": "2013-02-16T02:46:30.963"}, "14905499": {"CommentCount": "0", "ViewCount": "97", "CreationDate": "2013-02-16T00:19:27.497", "LastActivityDate": "2013-02-16T02:46:30.963", "Title": "Pointer Arithmetic confusion", "PostTypeId": "1", "Id": "14905499", "Score": "0", "Body": "<p>I know you can add a pointer to an int, and subtract two pointers, and a pointer and an int, but can you add a int to a pointer. So 5 + pointer.</p>\n", "Tags": "<c++><pointers>", "OwnerUserId": "1207457", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_14905499_14905508_0": {"section_id": 6142, "quality": 1.0, "length": 21}, "so_14905499_14905508_1": {"section_id": 6143, "quality": 0.9666666666666667, "length": 29}}, "n3337": {"so_14905499_14905508_0": {"section_id": 5906, "quality": 1.0, "length": 21}, "so_14905499_14905508_1": {"section_id": 5907, "quality": 0.9666666666666667, "length": 29}}, "n4659": {"so_14905499_14905508_0": {"section_id": 7638, "quality": 0.5238095238095238, "length": 11}, "so_14905499_14905508_1": {"section_id": 7639, "quality": 0.5333333333333333, "length": 16}}}, "14905547": {"ParentId": "14905499", "CommentCount": "1", "Body": "<p>Adding an <code>int</code> to a pointer is syntactically okay but there are so many issues  that you have to watch out for, e.g. overflow errors. </p>\n<p>Ideally, you should do it only within an array.</p>\n", "OwnerUserId": "278326", "PostTypeId": "2", "Id": "14905547", "Score": "0", "CreationDate": "2013-02-16T00:26:28.910", "LastActivityDate": "2013-02-16T00:26:28.910"}});