post_cb({"35370521": {"CommentCount": "9", "ViewCount": "73", "CreationDate": "2016-02-12T19:16:41.183", "LastActivityDate": "2016-02-12T19:16:41.183", "Title": "Why is an entity with C language linkage allowed to use a type without linkage?", "PostTypeId": "1", "Id": "35370521", "Score": "1", "Body": "<p>3.5 [basic.link] paragraph 8 from <em>N4567</em> says that</p>\n<blockquote>\n<p id=\"so_35370521_35370521_0\">... A type without linkage shall not be used as the type of a variable or function with external linkage unless</p>\n<ul>\n<li><strong>the entity has C language linkage (7.5), or</strong></li>\n<li>the entity is declared within an unnamed namespace (7.3.1), or</li>\n<li>the entity is not odr-used (3.2) or is defined in the same translation unit.</li>\n</ul>\n<p id=\"so_35370521_35370521_1\">[<em>Note</em>: In other words, a type without linkage contains a class or enumeration <strong>that cannot be named outside its translation unit</strong>...]</p>\n</blockquote>\n<p>If a type without linkage cannot be named outside its translation unit, <strong>how can a declaration in other translation units denote the same type</strong> in order to be a part of C language linkage?</p>\n", "Tags": "<c++><standards><language-lawyer><linkage>", "OwnerUserId": "5645940", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_35370521_35370521_1": {"section_id": 7141, "quality": 0.9285714285714286, "length": 13}, "so_35370521_35370521_0": {"section_id": 7141, "quality": 1.0, "length": 7}}, "n3337": {"so_35370521_35370521_1": {"section_id": 6885, "quality": 0.9285714285714286, "length": 13}, "so_35370521_35370521_0": {"section_id": 6885, "quality": 1.0, "length": 7}}, "n4659": {"so_35370521_35370521_1": {"section_id": 8642, "quality": 0.9285714285714286, "length": 13}, "so_35370521_35370521_0": {"section_id": 8642, "quality": 1.0, "length": 7}}}});