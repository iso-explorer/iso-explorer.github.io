post_cb({"28477393": {"CommentCount": "0", "AcceptedAnswerId": "28477465", "ClosedDate": "2015-02-12T12:29:25.530", "CreationDate": "2015-02-12T12:23:12.623", "LastActivityDate": "2015-02-12T12:28:44.107", "PostTypeId": "1", "ViewCount": "67", "Title": "Need enum type casting explanation in c++", "Id": "28477393", "Score": "0", "Body": "<p>Following is my test code</p>\n<pre><code>#include \"test.h\"\n#include &lt;iostream&gt;\n\ntypedef enum{\n    A = 0,\n    B\n } testEnum;\n\nint main()\n{\n    testEnum e = static_cast&lt;testEnum&gt;(3);\n    printf(\"My enum Value : %d\\n\", (int)e);\n    int stop = 0;\n}\n</code></pre>\n<p>programs out is <code>My enum Value : 3</code> \nNow in program i am type casting number 3 into <code>enum</code> and then printing it as <code>int</code>. My guess way this should give error or garbage value or 1 (as enum highest value). But out put is 3. Can somebody what are the rules and how it works. Thank you!</p>\n", "Tags": "<c++><enums>", "OwnerUserId": "3779480", "AnswerCount": "2"}, "28477465": {"ParentId": "28477393", "CommentCount": "2", "Body": "<p>Enum in an integral type (number). By type casting, you tell the compiler that you know the value is correct but there is no conversion occuring. You need to check the values/range yourself.</p>\n<p>Btw. it actually gives a garbage value: 3</p>\n", "OwnerUserId": "4538344", "PostTypeId": "2", "Id": "28477465", "Score": "1", "CreationDate": "2015-02-12T12:26:43.593", "LastActivityDate": "2015-02-12T12:26:43.593"}, "28477495": {"ParentId": "28477393", "CommentCount": "1", "Body": "<p>n3376 5.2.9/10</p>\n<blockquote>\n<p id=\"so_28477393_28477495_0\">A value of integral or enumeration type can be explicitly converted to\n  an enumeration type. The value is unchanged if the original value is\n  within the range of the enumeration values (7.2). Otherwise, the\n  resulting value is unspecified (and might not be in that range).</p>\n</blockquote>\n", "OwnerUserId": "1498580", "PostTypeId": "2", "Id": "28477495", "Score": "2", "CreationDate": "2015-02-12T12:28:44.107", "LastActivityDate": "2015-02-12T12:28:44.107"}, "bq_ids": {"n4140": {"so_28477393_28477495_0": {"section_id": 6036, "quality": 0.9583333333333334, "length": 23}}, "n3337": {"so_28477393_28477495_0": {"section_id": 5804, "quality": 0.9583333333333334, "length": 23}}, "n4659": {"so_28477393_28477495_0": {"section_id": 7535, "quality": 0.8333333333333334, "length": 20}}}});