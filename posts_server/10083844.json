post_cb({"10083844": {"CommentCount": "0", "ViewCount": "1279", "CreationDate": "2012-04-10T06:02:49.180", "LastActivityDate": "2012-04-10T06:31:31.660", "Title": "Passing NON-POD type to Variadic function is undefined behavior?", "AcceptedAnswerId": "10083921", "PostTypeId": "1", "Id": "10083844", "Score": "9", "Body": "<p><a href=\"http://www.viva64.com/en/b/0073/print/\" rel=\"noreferrer\">In this document</a>, the author said</p>\n<blockquote>\n<p id=\"so_10083844_10083844_0\">Only a POD-type can be an argument for the ellipsis \"...\" while std::string is not a POD-type.</p>\n</blockquote>\n<p>I'm understanding this as <code>Passing NON-POD type to Variadic function is undefined behavior</code>. Is it right?<br>\nThough, is he saying C/C++ standard? I tried to find it at n3242 C++ spec. But can not find.  </br></p>\n<p>I'd like to know I'm understanding rightly and this is a standard.</p>\n", "Tags": "<c++><c><standards><variadic-functions><pod>", "OwnerUserId": "252047", "AnswerCount": "1"}, "10083921": {"ParentId": "10083844", "PostTypeId": "2", "CommentCount": "10", "Body": "<p>It's specified in C++11 5.2.2/7:</p>\n<blockquote>\n<p id=\"so_10083844_10083921_0\">Passing a potentially-evaluated argument of class type having a non-trivial copy constructor, a non-trivial move contructor, or a non-trivial destructor, with no corresponding\n  parameter, is conditionally-supported with implementation-defined semantics.</p>\n</blockquote>\n<p>So it's up to each compiler whether to support it or not; portable code can't rely on any implementation defined behaviour. In older standards, it was simply undefined.</p>\n", "OwnerUserId": "204847", "LastEditorUserId": "221955", "LastEditDate": "2012-04-10T06:31:31.660", "Id": "10083921", "Score": "8", "CreationDate": "2012-04-10T06:10:09.660", "LastActivityDate": "2012-04-10T06:31:31.660"}, "bq_ids": {"n4140": {"so_10083844_10083921_0": {"section_id": 5994, "quality": 0.8947368421052632, "length": 17}}, "n3337": {"so_10083844_10083921_0": {"section_id": 5762, "quality": 0.8947368421052632, "length": 17}}, "n4659": {"so_10083844_10083921_0": {"section_id": 7496, "quality": 0.8947368421052632, "length": 17}}}});