post_cb({"12979625": {"ViewCount": "1275", "Body": "<p>I write a code like this:</p>\n<pre><code> void Print(const int &amp; dataArray[], const int &amp; arraySize) {  // problem \n    for(int i = 0; i&lt;arraySize; i++) {\n        cout &lt;&lt; dataArray[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n    }\n</code></pre>\n<p>in mian() function:</p>\n<pre><code>`\nint iArray[14] = { 7, 3, 32, 2, 55, 34, 6, 13, 29, 22, 11, 9, 1, 5 }; \nint numArrays = 14;\nPrint(iArray, numArrays);\n....\n`\n</code></pre>\n<p>the compiler says that arrays of references are illegal, why it is illegal ??\nI see the &lt;effective c++&gt;, it says recommend we use the const and reference, I just try to implement it(I'm a beginner), I also want to know in the <code>void Print(const int dataArray[], const int &amp; arraySize)</code> parameter I use const, &amp; to qualify the arraySize, is it right?(or is it much better than int arraySize or const int arraySize?), I want also use const,&amp; to dataArray[], but I failed. </p>\n", "Title": "error C2234: arrays of references are illegal", "CreationDate": "2012-10-19T17:44:12.483", "Id": "12979625", "CommentCount": "2", "LastEditDate": "2012-10-19T17:47:38.263", "PostTypeId": "1", "LastEditorUserId": "902497", "LastActivityDate": "2012-10-19T19:14:06.897", "Tags": "<c++>", "Score": "1", "OwnerUserId": "1760040", "ClosedDate": "2015-02-06T13:39:13.403", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_12979625_12980934_0": {"length": 7, "quality": 1.0, "section_id": 3222}, "so_12979625_12980934_1": {"length": 9, "quality": 1.0, "section_id": 6077}}, "n3337": {"so_12979625_12980934_0": {"length": 7, "quality": 1.0, "section_id": 3096}, "so_12979625_12980934_1": {"length": 9, "quality": 1.0, "section_id": 5845}}, "n4659": {"so_12979625_12980934_0": {"length": 7, "quality": 1.0, "section_id": 3979}, "so_12979625_12980934_1": {"length": 9, "quality": 1.0, "section_id": 7573}}}, "12980934": {"Id": "12980934", "PostTypeId": "2", "Body": "<p>Pedantically, the reason why arrays of references are illegal is because the Standard explicitly forbids them.</p>\n<h2>C++03:8.3.2/4</h2>\n<blockquote>\n<p id=\"so_12979625_12980934_0\">There shall be no references to references, <strong>no arrays of references</strong>,\n  and no pointers to references.</p>\n</blockquote>\n<p>Emphasis mine.</p>\n<p>One reason the Standard explicitly forbids arrays of references (maybe there are more) is because of how arrays are indexed.  Suppose you do:</p>\n<pre><code>Gizmo&amp; gizmos[] = {...};\nGizmo&amp;* g3 = &amp;gizmos[2];\n</code></pre>\n<p>There are several things wrong here.  First you have a pointer to a reference, which is illegal.  Second, in order to evaluate <code>gizmos[2]</code> the compiler must do an implicit conversion-to-pointer, and then do pointer arithmetic based on that.  How big is a <code>Gizmo&amp;</code>?</p>\n<p>According to the Standard, the <code>sizeof</code> a reference is, itself, unspecified.  However when <code>sizeof</code> is applied <em>to</em> a reference, the result is the size of the referred-to type.</p>\n<pre><code>C++03:5.3.3/2 Sizeof\n</code></pre>\n<blockquote>\n<p id=\"so_12979625_12980934_1\">When applied to a reference or a reference type, the result is the\n  size of the referenced type.</p>\n</blockquote>\n<p>Try running this code and see what happens:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing namespace std;\nstruct Gizmo { int n_[100]; };\n\nint main()\n{\n    typedef Gizmo&amp; GR;\n    size_t n = sizeof(GR);\n    cout &lt;&lt; n &lt;&lt; endl;\n}\n</code></pre>\n<p>When I run this on my machine, (MSVC10, Win7x64), the result is 400.</p>\n<p>This is why arrays of references are illegal.</p>\n", "LastActivityDate": "2012-10-19T19:14:06.897", "CommentCount": "2", "CreationDate": "2012-10-19T19:14:06.897", "ParentId": "12979625", "Score": "2", "OwnerUserId": "241536"}, "12979667": {"Id": "12979667", "PostTypeId": "2", "Body": "<p>An array requires its elements to be <em>default-constructible</em> and references are not, hence array of references are illegal. This:</p>\n<pre><code>const int &amp; dataArray[]\n</code></pre>\n<p>is an array of references. If you want a reference to an array instead you need this:</p>\n<pre><code>const int (&amp;dataArray)[]\n</code></pre>\n", "LastActivityDate": "2012-10-19T17:46:22.087", "CommentCount": "1", "CreationDate": "2012-10-19T17:46:22.087", "ParentId": "12979625", "Score": "6", "OwnerUserId": "927034"}});