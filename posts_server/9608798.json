post_cb({"bq_ids": {"n4140": {"so_9608798_9608888_0": {"length": 31, "quality": 0.8611111111111112, "section_id": 5485}}, "n3337": {"so_9608798_9608888_0": {"length": 35, "quality": 0.9722222222222222, "section_id": 5271}}, "n4659": {"so_9608798_9608888_0": {"length": 31, "quality": 0.8611111111111112, "section_id": 6920}}}, "9608798": {"ViewCount": "2301", "Body": "<p>First to provide some context, this is for an assignment involving semaphores. We are to find code for the dining philosophers problem, get it working, and then perform some analysis and manipulation. However, I am stuck with an error. </p>\n<p>The original code is taken from <a href=\"http://www.math-cs.gordon.edu/courses/cs322/projects/p2/dp/\" rel=\"nofollow\">http://www.math-cs.gordon.edu/courses/cs322/projects/p2/dp/</a>\nusing the C++ solution.</p>\n<p>The error I am receiving in Code::Blocks is </p>\n<pre><code>philosopher.cpp|206|error: 'Philosopher_run' was not declared in this scope|\n</code></pre>\n<p>and this error occurs in the line:</p>\n<pre><code>if ( pthread_create( &amp;_id, NULL, (void *(*)(void *)) &amp;Philosopher_run,\n         this ) != 0 )\n</code></pre>\n<p>I have looked up the pthread_create method but have been unable to fix this error. If anyone could explain how to correct this error to me, and also why this error is occurring, I would greatly appreciate it. I have tried to provide only the relevant code.</p>\n<pre><code>class Philosopher\n{\nprivate:\n    pthread_t   _id;\n    int     _number;\n    int     _timeToLive;\n\npublic:\n    Philosopher( void ) { _number = -1; _timeToLive = 0; };\n    Philosopher( int n, int t ) { _number = n; _timeToLive = t; };\n   ~Philosopher( void )     {};\n    void getChopsticks( void );\n    void releaseChopsticks( void );\n    void start( void );\n    void wait( void );\n    friend void Philosopher_run( Philosopher* p );\n};\n\nvoid Philosopher::start( void )\n// Start the thread representing the philosopher\n{\n    if ( _number &lt; 0 )\n    {\n    cerr &lt;&lt; \"Philosopher::start(): Philosopher not initialized\\n\";\n    exit( 1 );\n    }\n    if ( pthread_create( &amp;_id, NULL, (void *(*)(void *)) &amp;Philosopher_run,\n         this ) != 0 )\n    {\n    cerr &lt;&lt; \"could not create thread for philosopher\\n\";\n    exit( 1 );\n    }\n};\n\nvoid Philosopher_run( Philosopher* philosopher )\n</code></pre>\n", "AcceptedAnswerId": "9608888", "Title": "Friend method \"not declared in this scope\" in C++", "CreationDate": "2012-03-07T20:47:04.053", "Id": "9608798", "CommentCount": "0", "LastEditDate": "2012-09-15T13:21:07.570", "PostTypeId": "1", "LastEditorUserId": "387076", "LastActivityDate": "2012-09-15T13:21:07.570", "Score": "1", "OwnerUserId": "1211814", "Tags": "<c++><class><scope><friend>", "AnswerCount": "1"}, "9608888": {"Id": "9608888", "PostTypeId": "2", "Body": "<p>A friend declaration does not make the name of the friend visible without argument-dependant lookup.</p>\n<p><code>\u00a77.3.1.2 [namespace.memdef] p3</code></p>\n<blockquote>\n<p id=\"so_9608798_9608888_0\">[...] If a <code>friend</code> declaration in a nonlocal class first declares a class or function the friend class or function is a member of the innermost enclosing namespace. <strong>The name of the friend is not found by unqualified lookup or by qualified lookup until a matching declaration is provided in that namespace scope</strong> (either before or after the class definition granting friendship). [...]</p>\n</blockquote>\n<p>Meaning that you should put <code>void Philosopher_run( Philosopher* p );</code> either before the class (together with a forward declaration of <code>Philosopher</code>), or after the class (while keeping the friend declaration inside the class).</p>\n", "LastActivityDate": "2012-03-07T20:54:17.063", "CommentCount": "0", "CreationDate": "2012-03-07T20:54:17.063", "ParentId": "9608798", "Score": "3", "OwnerUserId": "500104"}});