post_cb({"17758659": {"ViewCount": "238", "Body": "<p>What is the difference between:</p>\n<pre><code>namespace A\n{\n    inline namespace B\n    {\n        ...\n    }\n\n    ...\n}\n\n...\n</code></pre>\n<p>and</p>\n<pre><code>namespace A\n{\n    namespace B\n    {\n        ...\n    }\n\n    using namespace B;\n\n    ...\n}\n\n...\n</code></pre>\n<p>That is, what is the difference between an inline namespace, and a non-inline namespace with a using directive placed in its enclosing namespace?</p>\n", "Title": "Difference in C++11 between inline namespace and using directive?", "CreationDate": "2013-07-20T04:30:24.753", "LastActivityDate": "2013-07-20T04:51:46.810", "CommentCount": "0", "PostTypeId": "1", "ClosedDate": "2013-07-20T05:14:25.283", "Id": "17758659", "Score": "1", "OwnerUserId": "1131467", "Tags": "<c++><c++11>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_17758659_17758778_0": {"length": 15, "quality": 0.9375, "section_id": 5480}, "so_17758659_17758778_1": {"length": 14, "quality": 0.9333333333333333, "section_id": 5480}, "so_17758659_17758778_2": {"length": 19, "quality": 0.95, "section_id": 5480}}, "n3337": {"so_17758659_17758778_0": {"length": 15, "quality": 0.9375, "section_id": 5266}, "so_17758659_17758778_2": {"length": 19, "quality": 0.95, "section_id": 5266}, "so_17758659_17758778_1": {"length": 14, "quality": 0.9333333333333333, "section_id": 5266}}, "n4659": {"so_17758659_17758778_0": {"length": 15, "quality": 0.9375, "section_id": 6914}, "so_17758659_17758778_2": {"length": 19, "quality": 0.95, "section_id": 6914}, "so_17758659_17758778_1": {"length": 14, "quality": 0.9333333333333333, "section_id": 6914}}}, "17758778": {"Id": "17758778", "PostTypeId": "2", "Body": "<p>Paraphrased from C++11 7.3.1p8:</p>\n<blockquote>\n<ul>\n<li><p id=\"so_17758659_17758778_0\">The inline namespace and its enclosing namespace are both added to the set of\n  associated namespaces used in argument-dependent lookup whenever one of them is.</p></li>\n<li><p id=\"so_17758659_17758778_1\">Each member of the inline namespace can subsequently be\n  explicitly instantiated or explicitly specialized as though it were a member of the enclosing namespace.</p></li>\n<li><p id=\"so_17758659_17758778_2\">Looking up a name in the enclosing namespace via explicit qualification will\n  include members of the inline namespace brought in by the using-directive even if there are declarations of that name in the enclosing namespace.</p></li>\n</ul>\n</blockquote>\n", "LastActivityDate": "2013-07-20T04:51:46.810", "Score": "0", "CreationDate": "2013-07-20T04:51:46.810", "ParentId": "17758659", "CommentCount": "0", "OwnerUserId": "1131467"}});