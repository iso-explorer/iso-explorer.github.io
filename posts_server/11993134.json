post_cb({"11993284": {"Id": "11993284", "PostTypeId": "2", "Body": "<p>From \u00a7 8.5 </p>\n<blockquote>\n<p id=\"so_11993134_11993284_0\">If no initializer is specified for an object, the object is\n  default-initialized; if no initialization is performed, an object with\n  automatic or dynamic storage duration has indeterminate value. [ Note:\n  objects with static or thread storage duration are zero-initialized,\n  see 3.6.2. \u2014end note ]</p>\n</blockquote>\n<p><strong>Update for future references</strong>: Further the meaning of default initialized is defined as</p>\n<blockquote>\n<p id=\"so_11993134_11993284_1\">To default-initialize an object of type T means:<br/> \u2014 <em>if T is a\n  (possibly cv-qualified) class type (Clause 9), the default constructor\n  for T is called (and the initialization is ill-formed if T has no\n  accessible default constructor)</em>;<br/> \u2014 if T is an array type, each\n  element is default-initialized;<br/> \u2014 otherwise, no initialization is\n  performed.<br/> If a program calls for the default initialization of\n  an object of a const-qualified type T, T shall be a class type with a\n  user-provided default constructor.<br/><br/></p>\n</blockquote>\n<p>Further it varies from value initialized referring this:-</p>\n<blockquote>\n<p id=\"so_11993134_11993284_2\">To value-initialize an object of type T means:<br/> \u2014 if T is a\n  (possibly cv-qualified) class type (Clause 9) with a user-provided\n  constructor (12.1), then the default constructor for T is called (and\n  the initialization is ill-formed if T has no accessible default\n  constructor);<br/> \u2014 if T is a (possibly cv-qualified) non-union class\n  type without a user-provided constructor, then the object is\n  zero-initialized and, if T\u2019s implicitly-declared default constructor\n  is non-trivial, that constructor is called.<br/> \u2014 if T is an array\n  type, then each element is value-initialized;<br/> \u2014 otherwise, the\n  object is zero-initialized.<br/></p>\n</blockquote>\n", "LastEditorUserId": "287783", "LastActivityDate": "2012-08-16T18:38:38.397", "Score": "6", "CreationDate": "2012-08-16T18:30:11.033", "ParentId": "11993134", "CommentCount": "0", "OwnerUserId": "287783", "LastEditDate": "2012-08-16T18:38:38.397"}, "bq_ids": {"n4140": {"so_11993134_11993284_1": {"length": 35, "quality": 0.9722222222222222, "section_id": 3286}, "so_11993134_11993284_0": {"length": 18, "quality": 0.72, "section_id": 3291}, "so_11993134_11993284_2": {"length": 32, "quality": 0.6956521739130435, "section_id": 3287}}, "n3337": {"so_11993134_11993284_1": {"length": 36, "quality": 1.0, "section_id": 3156}, "so_11993134_11993284_0": {"length": 20, "quality": 0.8, "section_id": 3161}, "so_11993134_11993284_2": {"length": 45, "quality": 0.9782608695652174, "section_id": 3157}}, "n4659": {"so_11993134_11993284_1": {"length": 22, "quality": 0.6111111111111112, "section_id": 4048}, "so_11993134_11993284_0": {"length": 18, "quality": 0.72, "section_id": 4053}, "so_11993134_11993284_2": {"length": 31, "quality": 0.6739130434782609, "section_id": 4049}}}, "11993134": {"ViewCount": "4139", "Body": "<p>Say I have this class:</p>\n<pre><code>//Awesome.h\nclass Awesome\n{\n    public:\n        Awesome();\n    private:\n        membertype member;\n}\n\n//Awesome.cpp\n#include \"Awesome.h\"\n\nAwesome::Awesome()\n:member()\n{\n}\n</code></pre>\n<p>If I omit the <code>member()</code> in the initialization list of the constructor of <code>Awesome</code>, will the constructor of <code>member</code> be called automatically? And is it only called when I don't include <code>member</code> in the initialization list?</p>\n", "AcceptedAnswerId": "11993284", "Title": "Are default constructors called automatically for member variables?", "CreationDate": "2012-08-16T18:19:56.480", "Id": "11993134", "CommentCount": "2", "FavoriteCount": "3", "PostTypeId": "1", "LastActivityDate": "2015-04-27T07:43:04.830", "Score": "5", "OwnerUserId": "1232685", "Tags": "<c++><constructor><header>", "AnswerCount": "2"}, "11993182": {"Id": "11993182", "PostTypeId": "2", "Body": "<p>Yes. When a variable is not given in the initalizer list, then it is default constructed automatically. </p>\n<p><em>Default contruction</em> means, that if <code>membertype</code> is a <code>class</code> or <code>struct</code>, then it will be default contructed, if it's a built-in array, then each element will be default constructed and if it's a build-in type, then <strong>no initialization</strong> will be performed (unless the <code>Awesome</code> object has static or thread-local storage duration). The last case means that the member variable can (and often will) contain unpredictable garbage in case the <code>Awesome</code> object is created on the stack or allocated on the heap. </p>\n", "LastEditorUserId": "1335865", "LastActivityDate": "2015-04-27T07:43:04.830", "Score": "11", "CreationDate": "2012-08-16T18:22:58.587", "ParentId": "11993134", "CommentCount": "0", "OwnerUserId": "1335865", "LastEditDate": "2015-04-27T07:43:04.830"}});