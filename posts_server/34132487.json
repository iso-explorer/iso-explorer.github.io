post_cb({"bq_ids": {"n4140": {"so_34132487_34137493_1": {"length": 107, "quality": 0.9469026548672567, "section_id": 7210}}, "n3337": {"so_34132487_34137493_1": {"length": 107, "quality": 0.9469026548672567, "section_id": 6954}}, "n4659": {"so_34132487_34137493_1": {"length": 103, "quality": 0.911504424778761, "section_id": 8719}}}, "34137493": {"Id": "34137493", "PostTypeId": "2", "Body": "<p>From C++ standard</p>\n<blockquote>\n<p id=\"so_34132487_34137493_0\">3.9.1 Fundamental types [basic.fundamental]</p>\n<p id=\"so_34132487_34137493_1\">Objects declared as characters (char) shall be large enough to store any member of the implementation's basic character set. If a character from this set is stored in a character object, the integral value of that character object is equal to the value of the single character literal form of that character. It is implementation-defined whether a char object can hold negative values. Characters can be explicitly declared unsigned or signed. <strong>Plain char, signed char, and unsigned char are three distinct types</strong>. A char, a signed char, and an unsigned char occupy the same amount of storage and have the same alignment requirements (basic.types); that is, they have the same object representation. For character types, all bits of the object representation participate in the value representation. For unsigned character types, all possible bit patterns of the value representation represent numbers. These requirements do not hold for other types. In any particular implementation, a plain char object can take on either the same values as a signed char or an unsigned char; which one is implementation-defined.</p>\n</blockquote>\n<p><code>char</code>, <code>unsigned char</code> and <code>signed char</code> are thus three distinct types and <code>boost::is_integral</code> should be specializable for those three types. One can expect gcc 4.4.7 or OP's environment to ignore that and I'll be looking for an explanation. Please see this temporary answer as an extended comment on OP's question.</p>\n<hr>\n<p><strong>EDIT</strong>: Cannot reproduce</p>\n<p><em>System</em>: Red Hat 6</p>\n<pre><code>$ uname -a\nLinux ysc 2.6.32-504.8.1.el6.x86_64 #1 SMP Wed Jan 28 21:11:36 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux$\n</code></pre>\n<p><em>Compiler</em>:</p>\n<pre><code>$ g++ --version\ng++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-16)\n</code></pre>\n<p><em>Source</em>:</p>\n<pre><code>$ cat main.cpp\n\n#include &lt;iostream&gt;\n\ntemplate&lt;typename T&gt;\nstruct trait\n{\n    static const int value = 0;\n};\n\ntemplate&lt;&gt;\nstruct trait&lt;char&gt;\n{\n    static const int value = 1;\n};\n\ntemplate&lt;&gt;\nstruct trait&lt;signed char&gt;\n{\n    static const int value = 2;\n};\n\ntemplate&lt;&gt;\nstruct trait&lt;unsigned char&gt;\n{\n    static const int value = 3;\n};\n\nint main()\n{\n  std::cout &lt;&lt; \"int:, \" &lt;&lt; trait&lt;int&gt;::value &lt;&lt; \"!\\n\";\n  std::cout &lt;&lt; \"char:, \" &lt;&lt; trait&lt;char&gt;::value &lt;&lt; \"!\\n\";\n  std::cout &lt;&lt; \"unsigned char:, \" &lt;&lt; trait&lt;unsigned char&gt;::value &lt;&lt; \"!\\n\";\n  std::cout &lt;&lt; \"signed char:, \" &lt;&lt; trait&lt;signed char&gt;::value &lt;&lt; \"!\\n\"; \n}\n</code></pre>\n<p><em>Compilation</em>:</p>\n<pre><code>$ g++ -Wall -Wextra main.cpp \n</code></pre>\n<p><em>Run</em>:</p>\n<pre><code>$ ./a.out \nint:, 0!\nchar:, 1!\nunsigned char:, 3!\nsigned char:, 2!\n</code></pre>\n<p>What does it produce on OP's environment?</p>\n</hr>", "LastEditorUserId": "15168", "LastActivityDate": "2015-12-08T01:08:13.307", "Score": "2", "CreationDate": "2015-12-07T15:41:30.367", "ParentId": "34132487", "CommentCount": "5", "OwnerUserId": "5470596", "LastEditDate": "2015-12-08T01:08:13.307"}, "34132487": {"ViewCount": "275", "Body": "<p>I try to include this file</p>\n<pre><code> boost/assign/list_of.hpp\n</code></pre>\n<p>but i have this compiler's error </p>\n<pre><code>/usr/include/boost/type_traits/is_integral.hpp:38: error: redefinition of struct boost::is_integral&lt;char&gt;\n/usr/include/boost/type_traits/is_integral.hpp:32: error: previous  definition of  struct boost::is_integral&lt;char&gt;\n</code></pre>\n<p>these definitions lines (32,38) in file is_integral.hpp are:</p>\n<pre><code>BOOST_TT_AUX_BOOL_TRAIT_CV_SPEC1(is_integral,signed char,true)\nBOOST_TT_AUX_BOOL_TRAIT_CV_SPEC1(is_integral,char,true)\n</code></pre>\n<p>how to solve compile problem? the compiler is  gcc version 4.4.7 20120313 OS is Red Hat Enterprise Linux Server release 6.5 (Santiago)</p>\n", "Title": "redefinition error in system header file because of \"signed char\" and \"char\"", "CreationDate": "2015-12-07T11:28:03.790", "LastActivityDate": "2015-12-08T01:08:13.307", "CommentCount": "17", "FavoriteCount": "1", "PostTypeId": "1", "Id": "34132487", "Score": "5", "OwnerUserId": "5481948", "Tags": "<c++><linux>", "AnswerCount": "1"}});