post_cb({"bq_ids": {"n4140": {"so_29858853_29858952_0": {"length": 36, "quality": 0.972972972972973, "section_id": 5855}}, "n3337": {"so_29858853_29858952_0": {"length": 36, "quality": 0.972972972972973, "section_id": 5625}}, "n4659": {"so_29858853_29858952_0": {"length": 36, "quality": 0.972972972972973, "section_id": 7334}}}, "29858946": {"Id": "29858946", "PostTypeId": "2", "Body": "<p>For this to work the class must be already delcared. If you put a <code>struct globalst;</code> somewhere in your code before your definition it will work fine. </p>\n<p>For example if you do</p>\n<pre><code>struct MyStruct;\n</code></pre>\n<p>then do</p>\n<pre><code>struct ::MyStruct {};\n</code></pre>\n<p>it should compile.</p>\n<p>Tested with MSVC 2013.</p>\n", "LastActivityDate": "2015-04-24T23:05:37.257", "CommentCount": "0", "CreationDate": "2015-04-24T23:05:37.257", "ParentId": "29858853", "Score": "1", "OwnerUserId": "4821282"}, "29858952": {"Id": "29858952", "PostTypeId": "2", "Body": "<p>If you define a class with a qualified name, the name must have been previously declared. [class]/11</p>\n<blockquote>\n<p id=\"so_29858853_29858952_0\">If a <em>class-head-name</em> contains a <em>nested-name-specifier</em>, the <em>class-specifier</em> shall refer to a class that was\n  previously declared directly in the class or namespace to which the <em>nested-name-specifier</em> refers, or in an\n  element of the inline namespace set (7.3.1) of that namespace (i.e., not merely inherited or introduced by\n  a <em>using-declaration</em>), and the <em>class-specifier</em> shall appear in a namespace enclosing the previous declaration.\n  In such cases, the <em>nested-name-specifier</em> of the <em>class-head-name</em> of the definition shall not begin with a\n  <em>decltype-specifier</em>.</p>\n</blockquote>\n", "LastActivityDate": "2015-04-24T23:06:03.400", "CommentCount": "1", "CreationDate": "2015-04-24T23:06:03.400", "ParentId": "29858853", "Score": "3", "OwnerUserId": "481267"}, "29858853": {"ViewCount": "614", "Body": "<p>According to <a href=\"http://en.cppreference.com/w/cpp/language/class\" rel=\"nofollow\">this page</a>, the class name can be \"optionally qualified\". Thus, I expect the following code to compile:</p>\n<pre><code>struct ::globalSt {};\n</code></pre>\n<p>In MSVC 2013u4, I get an error:</p>\n<blockquote>\n<p id=\"so_29858853_29858853_0\">Error 1   error C2039: 'globalSt' : is not a member of '`global namespace''</p>\n</blockquote>\n<p>Am I misinterpreting the reference or is that a MSVC bug?</p>\n", "AcceptedAnswerId": "29858952", "Title": "qualified names in C++ class declaration", "CreationDate": "2015-04-24T22:56:00.423", "Id": "29858853", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2015-04-24T23:08:14.073", "Score": "1", "OwnerUserId": "2549876", "Tags": "<c++><visual-c++><struct><msvc12>", "AnswerCount": "2"}});