post_cb({"23988851": {"ParentId": "23988716", "CommentCount": "2", "Body": "<p>The best simple definition I can think of is:\n<em>a Variable is trio of name, address and type (usually implies a size).</em></p>\n<p>Originally it was meant to hold a changeable value but some languages allow this value to be constant (write once).</p>\n", "OwnerUserId": "3005057", "PostTypeId": "2", "Id": "23988851", "Score": "0", "CreationDate": "2014-06-02T06:57:29.870", "LastActivityDate": "2014-06-02T06:57:29.870"}, "23988967": {"ParentId": "23988716", "CommentCount": "1", "Body": "<p>A variable is, as you say, the name of \"a something\". That \"a something\" is either a reference (to another object) or an object. Note that object here does not infer \"an instance of a class\", so an object could be a char, array of int, or pointer to void. </p>\n<p>This name is held by the compiler, and when code is generated, space somewhere is allocated for the variable [1], in a register or on the stack (local variables) or in \"data space\" (<code>static</code> or global variables). This gives the variable a location, an address (note that registers don't have addresses). </p>\n<p>[1] Variables can also be eliminated if the compiler finds that the variable isn't used [or, sometimes replaced, when for example a loop optimisation is changed from one form of loop to another]</p>\n", "OwnerUserId": "1919155", "PostTypeId": "2", "Id": "23988967", "Score": "0", "CreationDate": "2014-06-02T07:05:29.910", "LastActivityDate": "2014-06-02T07:05:29.910"}, "23988881": {"ParentId": "23988716", "CommentCount": "3", "Body": "<blockquote>\n<p id=\"so_23988716_23988881_0\">I'm assume from this two quotes that a variable is a name.</p>\n</blockquote>\n<p>No, from the quotes you provided, a variable is an object or a reference which has a name.</p>\n<blockquote>\n<p id=\"so_23988716_23988881_1\">It is because the variable is introduced by declaration of reference and every name that denotes entity introduced by a declaration.</p>\n</blockquote>\n<p>The declaration introduces both the variable (the object or reference), and its name. This doesn't imply that that variable is the name, just that both are introduced by the declaration.</p>\n", "OwnerUserId": "204847", "PostTypeId": "2", "Id": "23988881", "Score": "2", "CreationDate": "2014-06-02T06:59:42.200", "LastActivityDate": "2014-06-02T06:59:42.200"}, "31234708": {"ParentId": "23988716", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>The definition of the term variable is a bit ambiguous in this respect, but by looking at the various uses of the term variable in the c++ standard, it looks like a variable is a special kind of entity. It is either an object or a reference. However, not all objects or references are variables, only the ones introduced the way described in <strong>[basic]/6</strong>:</p>\n<blockquote>\n<p id=\"so_23988716_31234708_0\">A variable is introduced by the declaration of a reference other than\n  a non-static data member or of an object. The variable's name, if any,\n  denotes the reference or object.</p>\n</blockquote>\n<p>Note that some variables are unnamed, for example the parameter of the function f in the example below:</p>\n<pre><code>void f(int) {}\n\nint main() {}\n</code></pre>\n", "OwnerUserId": "1272610", "LastEditorUserId": "1272610", "LastEditDate": "2015-07-13T18:10:27.100", "Id": "31234708", "Score": "0", "CreationDate": "2015-07-05T20:30:02.910", "LastActivityDate": "2015-07-13T18:10:27.100"}, "23988716": {"CommentCount": "0", "ViewCount": "184", "PostTypeId": "1", "LastEditorUserId": "1090079", "CreationDate": "2014-06-02T06:48:32.527", "LastActivityDate": "2015-07-13T18:10:27.100", "Title": "What is the definition of a \"variable\"?", "FavoriteCount": "1", "LastEditDate": "2014-06-02T08:10:31.613", "Id": "23988716", "Score": "5", "Body": "<p>The standard states that </p>\n<blockquote>\n<p id=\"so_23988716_23988716_0\">An entity is a value, object, reference, function, enumerator, type,\n  class member, template, template specialization, namespace, parameter\n  pack, or this.</p>\n</blockquote>\n<p>This implies that a <em>\"variable\"</em> is not an entity.</p>\n<p>But further in the standard said:</p>\n<blockquote>\n<p id=\"so_23988716_23988716_1\">Every name that denotes an entity is introduced by a declaration.\n  Every name that denotes a label is introduced either by a goto\n  statement (6.6.4) or a labeled-statement (6.1).</p>\n</blockquote>\n<p>and </p>\n<blockquote>\n<p id=\"so_23988716_23988716_2\">A variable is introduced by the declaration of a reference other than\n  a non-static data member or of an object. The variable\u2019s name denotes\n  the reference or object.</p>\n</blockquote>\n<p>I'm assume from this two quotes that a <em>variable</em> is a name.</p>\n<p>It is because the <em>variable</em> is introduced by declaration of reference and every name that denotes entity introduced by a declaration. <strong>But what does a <em>variable</em>'s name mean?</strong> A <em>variable</em> is also a name by definition.</p>\n", "Tags": "<c++><variables><language-lawyer>", "OwnerUserId": "2786156", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_23988716_23988716_0": {"section_id": 7026, "quality": 0.9333333333333333, "length": 14}, "so_23988716_23988716_1": {"section_id": 7028, "quality": 0.875, "length": 14}, "so_23988716_23988716_2": {"section_id": 7029, "quality": 0.875, "length": 14}, "so_23988716_31234708_0": {"section_id": 7029, "quality": 0.875, "length": 14}, "so_23988716_23988881_1": {"section_id": 7139, "quality": 0.5454545454545454, "length": 6}}, "n3337": {"so_23988716_23988716_0": {"section_id": 6772, "quality": 0.9333333333333333, "length": 14}, "so_23988716_23988716_1": {"section_id": 6774, "quality": 0.875, "length": 14}, "so_23988716_23988716_2": {"section_id": 6775, "quality": 0.875, "length": 14}, "so_23988716_31234708_0": {"section_id": 6775, "quality": 0.875, "length": 14}, "so_23988716_23988881_1": {"section_id": 6883, "quality": 0.5454545454545454, "length": 6}}, "n4659": {"so_23988716_23988716_1": {"section_id": 8525, "quality": 0.875, "length": 14}, "so_23988716_23988716_0": {"section_id": 8523, "quality": 0.9333333333333333, "length": 14}, "so_23988716_23988716_2": {"section_id": 8526, "quality": 0.875, "length": 14}, "so_23988716_31234708_0": {"section_id": 8526, "quality": 0.875, "length": 14}}}});