post_cb({"42958730": {"CommentCount": "6", "ViewCount": "67", "PostTypeId": "1", "LastEditorUserId": "1816262", "CreationDate": "2017-03-22T17:27:37.700", "LastActivityDate": "2017-03-22T17:41:12.727", "Title": "Do assignments to the result of conditional expressions where the second and third operands are variables of the same type and value category persist?", "FavoriteCount": "2", "LastEditDate": "2017-03-22T17:41:12.727", "Id": "42958730", "Score": "3", "Body": "<p>Whilst learning about value categories, I found that the following snippet compiled and run just fine:</p>\n<pre><code>#include &lt;iostream&gt;\n\nint main() {\n    int x = 1;\n    int y = 2;\n    (true ? x : y) = 4;\n    std::cout &lt;&lt; x &lt;&lt; std::endl;\n}\n</code></pre>\n<p>Here's the output:</p>\n<pre><code>4\n</code></pre>\n<p>First, I checked whether this statement was legal C++, and I believe it is because of the following:</p>\n<blockquote>\n<p id=\"so_42958730_42958730_0\"><strong>N4296 5.16.4 Conditional operator [expr.cond]</strong></p>\n<p id=\"so_42958730_42958730_1\">If the second and third operands are glvalues of the same value\n  category and have the same type, the result is of that type and value\n  category and it is a bit-field if the second or the third operand is a\n  bit-field, or if both are bit-fields.</p>\n</blockquote>\n<p>Given that both <code>x</code> and <code>y</code> are lvalues (and therefore glvalues), the result of the conditional expression in both cases is an lvalue. On this basis, the expression seems valid. However what's not clear is whether this should have any effect.</p>\n<p>The reason I am not sure whether the conditional statements should have an effect is because the type of the second and third operand type is <code>int</code>. Even if this result <code>int</code> is an lvalue, that doesn't meant it has to refer to <code>x</code> or <code>y</code>. It could essentially be a dummy variable, leading to no effect, and be standard conforming. In other words, I see no reason for it to resolve to an <code>int&amp;</code> rather than a separate <code>int</code>.</p>\n<p><strong>My question is...</strong></p>\n<p>Is this behaviour correct and why?</p>\n<hr>\n<p><sub>I took a look at <a href=\"https://stackoverflow.com/questions/8535226/return-type-of-ternary-conditional-operator\">this question</a> beforehand, but don't believe it answers my question. The answers to this question refer to an older standard, with different wording, and don't answer my question about whether the result is an <code>int&amp;</code> to <code>x</code> or not.</sub></p>\n</hr>", "Tags": "<c++><language-lawyer><value-categories>", "OwnerUserId": "1816262", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_42958730_42958730_1": {"section_id": 6170, "quality": 1.0, "length": 21}}, "n3337": {"so_42958730_42958730_1": {"section_id": 5931, "quality": 1.0, "length": 21}}, "n4659": {"so_42958730_42958730_1": {"section_id": 7668, "quality": 1.0, "length": 21}}}});