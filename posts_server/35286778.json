post_cb({"bq_ids": {"n4140": {"so_35286778_35286778_0": {"section_id": 7094, "quality": 0.9615384615384616, "length": 25}}, "n3337": {"so_35286778_35286778_0": {"section_id": 6838, "quality": 0.5384615384615384, "length": 14}}, "n4659": {"so_35286778_35286778_0": {"section_id": 8595, "quality": 0.9230769230769231, "length": 24}}}, "35286778": {"CommentCount": "1", "ViewCount": "76", "CreationDate": "2016-02-09T08:04:30.160", "LastActivityDate": "2016-02-09T08:04:30.160", "Title": "Why is the lookup for T in this code successful?", "PostTypeId": "1", "Id": "35286778", "Score": "2", "Body": "<p>The lookup for <code>T</code> should fail</p>\n<pre><code>class A\n{\n    typedef int T;\n    void f(void)\n    {\n        class B {};\n        class C\n        {\n            class D : public B\n            {\n                void g(void)\n                {\n                    T a;\n                }\n            };\n        };\n    }\n};\n</code></pre>\n<p>because 3.4.1 paragraph 8 from N4567 says that</p>\n<blockquote>\n<p id=\"so_35286778_35286778_0\">For the members of a class <code>X</code>, a name used <strong>in a member function body</strong>,\n  in a default argument, in an <em>exception-specification</em>, in the\n  <em>brace-or-equal-initializer</em> of a non-static data member (9.2), or in the definition of a class member outside of the definition of <code>X</code>,\n  following the member\u2019s <em>declarator-id</em>, shall be declared in one of\n  the following ways:</p>\n<ul>\n<li>before its use in the block in which it is used or in an enclosing block (6.3), or</li>\n<li>shall be a member of class <code>X</code> or be a member of a base class of <code>X</code> (10.2), or</li>\n<li>if <code>X</code> is a nested class of class <code>Y</code> (9.7), shall be a member of <code>Y</code>, or shall be a member of a base class of <code>Y</code> (this lookup applies in turn to\n  <code>Y</code>\u2019s enclosing classes, starting with the innermost enclosing class),\n  or</li>\n<li>if <code>X</code> is a local class (9.8) or is a nested class of a local class, before the definition of class <code>X</code> in a block enclosing the definition\n  of class <code>X</code>, or</li>\n<li><strong>if <code>X</code> is a member of namespace <code>N</code>, or is a nested class of a class that is a member of <code>N</code>, or is a local class or a nested class within a\n  local class of a function that is a member of <code>N</code>, before the use of the\n  name, in namespace <code>N</code> or in one of <code>N</code>\u2019s enclosing namespaces.</strong></li>\n</ul>\n</blockquote>\n<p>To be more specific, the lookup for <code>T</code> is done as the following:</p>\n<ol>\n<li>before <code>T</code>'s use in <code>g</code></li>\n<li>shall be a member of class <code>D</code> or be a member of class <code>B</code></li>\n<li>shall be a member of class <code>C</code></li>\n<li>before the definition of class <code>D</code> in <code>f</code></li>\n<li><strong>???</strong></li>\n</ol>\n<p>The problem is that <code>D</code> is not </p>\n<ul>\n<li>a member of a namespace,</li>\n<li>a nested class of a class that is a member of a namespace,</li>\n<li>a local class,</li>\n<li>a nested class within a local class of a function that is a member of a namespace,</li>\n</ul>\n<p>but rather <strong>a nested class within a local class of a function that is a member of a class</strong>.</p>\n", "Tags": "<c++><scope><language-lawyer><name-lookup>", "OwnerUserId": "5645940", "AnswerCount": "0"}});