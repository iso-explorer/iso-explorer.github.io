post_cb({"bq_ids": {"n4140": {"so_36962583_36962635_1": {"length": 13, "quality": 0.6190476190476191, "section_id": 6039}, "so_36962583_36962583_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 4706}}, "n3337": {"so_36962583_36962635_1": {"length": 13, "quality": 0.6190476190476191, "section_id": 5807}, "so_36962583_36962583_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 4515}}, "n4659": {"so_36962583_36962635_1": {"length": 11, "quality": 0.5238095238095238, "section_id": 7548}, "so_36962583_36962583_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 7496}}}, "36962635": {"Id": "36962635", "PostTypeId": "2", "Body": "<p>C allows automatic conversions between <code>void*</code> and pointers of other types:</p>\n<blockquote>\n<p id=\"so_36962583_36962635_0\"><strong>6.3.2.3 Pointers</strong></p>\n<p id=\"so_36962583_36962635_1\">1 A pointer to void may be converted to or from a pointer to any object type. A pointer to any object type may be converted to a pointer to void and back again; the result shall compare equal to the original pointer.</p>\n</blockquote>\n<p>Hence, it is OK to use <code>ptr</code> in a call to a function that expects a <code>FILE*</code>.</p>\n<p>C++ allows automatic conversion from pointers of other types to <code>void*</code> but it does not allow automatic conversion from <code>void*</code> to pointers of other types.</p>\n<p>Hence you get the compiler error.</p>\n", "LastEditorUserId": "434551", "LastActivityDate": "2016-05-01T03:16:09.740", "Score": "3", "CreationDate": "2016-05-01T03:08:38.990", "ParentId": "36962583", "CommentCount": "1", "OwnerUserId": "434551", "LastEditDate": "2016-05-01T03:16:09.740"}, "36962593": {"Id": "36962593", "PostTypeId": "2", "Body": "<pre><code>   size_t retcode = fread((FILE*)ptr, size, nmemb, stream); /*i get an error on this line on stream */\n</code></pre>\n<p>That's the quick and dirty answer.  My question would be, if ptr is always a pointer to a <code>FILE</code>, then why declare the parameter as void*?</p>\n<p><a href=\"https://stackoverflow.com/questions/1736833/void-pointers-difference-between-c-and-c\">void pointers: difference between C and C++</a> has all the explanation you might ever desire.  I've flagged this question as a duplicate, but wanted to get you over this hump in the short term.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2016-05-01T03:09:11.153", "Score": "3", "CreationDate": "2016-05-01T02:59:31.963", "ParentId": "36962583", "CommentCount": "1", "OwnerUserId": "6273641", "LastEditDate": "2017-05-23T10:28:11.913"}, "36962583": {"ViewCount": "144", "Body": "<p>In C this part of code works fine but in C++ i get an error:</p>\n<blockquote>\n<p id=\"so_36962583_36962583_0\">argument of type \"void *\" is incompatible with parameter of type \"FILE\n  *\"</p>\n</blockquote>\n<p>How can i fix it? This is the relevant part of code:</p>\n<pre><code>static size_t read_callback(void *ptr, size_t size, size_t nmemb, void *stream)\n    {\n\n        curl_off_t nread;\n\n        size_t retcode = fread(ptr, size, nmemb, stream); /*i get an error on this line on stream */\n\n        nread = (curl_off_t)retcode;\n\n        fprintf(stderr, \"*** We read %\" CURL_FORMAT_CURL_OFF_T\n            \" bytes from file\\n\", nread);\n        return retcode;\n\n    }\n</code></pre>\n<p>The solution was simple actually in the end.So if it helps anyone i simply changed void* with FILE *ptr and FILE *stream and it worked</p>\n", "Title": "C code in C++ incompatible parameter error", "CreationDate": "2016-05-01T02:57:47.240", "LastActivityDate": "2016-05-02T15:38:34.100", "CommentCount": "3", "LastEditDate": "2016-05-02T15:38:34.100", "PostTypeId": "1", "LastEditorUserId": "6184828", "Id": "36962583", "Score": "0", "OwnerUserId": "6184828", "Tags": "<c++>", "AnswerCount": "2"}});