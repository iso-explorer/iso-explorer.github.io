post_cb({"bq_ids": {"n4140": {"so_24721713_24721776_0": {"length": 24, "quality": 0.6857142857142857, "section_id": 7174}, "so_24721713_24721713_0": {"length": 8, "quality": 1.0, "section_id": 7174}, "so_24721713_24721755_0": {"length": 41, "quality": 0.8723404255319149, "section_id": 7174}}, "n3337": {"so_24721713_24721776_0": {"length": 24, "quality": 0.6857142857142857, "section_id": 6918}, "so_24721713_24721713_0": {"length": 8, "quality": 1.0, "section_id": 6918}, "so_24721713_24721755_0": {"length": 41, "quality": 0.8723404255319149, "section_id": 6918}}, "n4659": {"so_24721713_24721776_0": {"length": 24, "quality": 0.6857142857142857, "section_id": 8682}, "so_24721713_24721713_0": {"length": 8, "quality": 1.0, "section_id": 8682}, "so_24721713_24721755_0": {"length": 41, "quality": 0.8723404255319149, "section_id": 8682}}}, "24721713": {"ViewCount": "71", "Body": "<blockquote>\n<p id=\"so_24721713_24721713_0\">A C++ program shall provide at most one definition of a replaceable\n  allocation or deallocation function.</p>\n</blockquote>\n<p>The program</p>\n<pre><code>int main(){ }\n</code></pre>\n<p>does not provide any definition, instead of <code>main</code>, but it is valid. \nWho is provide the definition of allocation or deallocation function?</p>\n", "AcceptedAnswerId": "24721755", "Title": "Allocation function definition", "CreationDate": "2014-07-13T10:30:34.343", "Id": "24721713", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2014-07-13T10:40:54.277", "Score": "0", "OwnerUserId": "2786156", "Tags": "<c++>", "AnswerCount": "2"}, "24721755": {"Id": "24721755", "PostTypeId": "2", "Body": "<p>As the quote says, a C++ program shall provide <em>at most</em> one of those functions. Yours provides none, so it's fine. In that case, it uses the default allocation and deallocation functions as provided by the standard library, as described in the sentences around your quote:</p>\n<blockquote>\n<p id=\"so_24721713_24721755_0\"><strong>The library provides default definitions for the global allocation and deallocation functions.</strong> Some global allocation and deallocation functions are replaceable (18.6.1). A C++ program shall provide at most one definition of a replaceable allocation or deallocation function. <strong>Any such function definition replaces the default version provided in the library (17.6.4.6).</strong> The following allocation and deallocation functions (18.6) are implicitly declared in global scope in each translation unit of a program.  </p>\n<pre><code>void* operator new(std::size_t);\nvoid* operator new[](std::size_t);\nvoid operator delete(void*);\nvoid operator delete[](void*);\n</code></pre>\n</blockquote>\n", "LastEditorUserId": "150634", "LastActivityDate": "2014-07-13T10:40:54.277", "Score": "2", "CreationDate": "2014-07-13T10:35:36.363", "ParentId": "24721713", "CommentCount": "2", "OwnerUserId": "150634", "LastEditDate": "2014-07-13T10:40:54.277"}, "24721776": {"Id": "24721776", "PostTypeId": "2", "Body": "<p>Im not sure I understood your question but the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3537.html\" rel=\"nofollow\">standard</a> also specifies the following:  </p>\n<blockquote>\n<p id=\"so_24721713_24721776_0\">Any such function definition replaces the default version provided in the library (17.6.4.6). The following allocation and\n  deallocation functions (18.6) are implicitly declared in global scope\n  in each translation unit of a program:<br>\n      void* operator new(std::size_t);<br>\n      void* operator new;<br>\n      void operator delete(void*);<br>\n      void operator delete;</br></br></br></br></p>\n</blockquote>\n<p>I hope this answers your question.  </p>\n", "LastActivityDate": "2014-07-13T10:38:43.713", "CommentCount": "0", "CreationDate": "2014-07-13T10:38:43.713", "ParentId": "24721713", "Score": "1", "OwnerUserId": "2959585"}});