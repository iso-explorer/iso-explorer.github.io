post_cb({"bq_ids": {"n4140": {"so_6440812_6440812_1": {"length": 5, "quality": 1.0, "section_id": 6076}, "so_6440812_6440946_0": {"length": 21, "quality": 0.9545454545454546, "section_id": 5344}, "so_6440812_6440983_0": {"length": 16, "quality": 1.0, "section_id": 7214}, "so_6440812_6440812_0": {"length": 21, "quality": 0.9545454545454546, "section_id": 5344}, "so_6440812_6440983_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 5344}}, "n3337": {"so_6440812_6440812_1": {"length": 5, "quality": 1.0, "section_id": 5844}, "so_6440812_6440946_0": {"length": 21, "quality": 0.9545454545454546, "section_id": 5141}, "so_6440812_6440983_0": {"length": 16, "quality": 1.0, "section_id": 6958}, "so_6440812_6440812_0": {"length": 21, "quality": 0.9545454545454546, "section_id": 5141}, "so_6440812_6440983_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 5141}}, "n4659": {"so_6440812_6440812_1": {"length": 5, "quality": 1.0, "section_id": 7572}, "so_6440812_6440946_0": {"length": 21, "quality": 0.9545454545454546, "section_id": 6767}, "so_6440812_6440983_0": {"length": 16, "quality": 1.0, "section_id": 8723}, "so_6440812_6440812_0": {"length": 21, "quality": 0.9545454545454546, "section_id": 6767}, "so_6440812_6440983_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 6767}}}, "6440812": {"ViewCount": "1308", "Body": "<p>This is also related to <code>char32_t</code> and any <code>intXX_t</code>. The specification points out that:</p>\n<p><code>2.14.3.2</code>: </p>\n<blockquote>\n<p id=\"so_6440812_6440812_0\">The value of a char16_t literal\n  containing a single c-char is equal to\n  its ISO 10646 code point value,\n  provided that the code point is\n  representable with a single 16-bit\n  code unit.</p>\n</blockquote>\n<p><code>5.3.3.1</code>:</p>\n<blockquote>\n<p id=\"so_6440812_6440812_1\">[..] in particular [..]\n  sizeof(char16_t), sizeof(char32_t),\n  and sizeof(wchar_t) are\n  implementation-defined</p>\n</blockquote>\n<p>I can not see anything about the <code>intXX_t</code> types, apart from the comment that they are \"optional\" (<code>18.4.1</code>).</p>\n<p>If a <code>char16_t</code> isn`t guaranteed to be 2 bytes, is it guaranteed to be 16 bit (even on architectures where 1 byte != 8 bit)?</p>\n", "AcceptedAnswerId": "6440983", "Title": "C++ What does the size of char16_t depend on?", "CreationDate": "2011-06-22T13:40:01.140", "Id": "6440812", "CommentCount": "2", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2012-06-19T20:49:38.733", "LastEditorUserId": "134841", "LastActivityDate": "2012-06-19T20:49:38.733", "Score": "11", "OwnerUserId": "547231", "Tags": "<c++><c++11><char16-t><char32-t>", "AnswerCount": "3"}, "6440983": {"Id": "6440983", "PostTypeId": "2", "Body": "<h3>3.9.1    Fundamental types   [basic.fundamental]</h3>\n<blockquote>\n<p id=\"so_6440812_6440983_0\">Types char16_t and char32_t denote distinct types with the same size, signedness, and alignment as uint_least16_t and uint_least32_t, respectively, in , called the underlying types.</p>\n</blockquote>\n<p>This means char16_t is at least 16 bits (but may be larger)</p>\n<p>But I also believe:</p>\n<blockquote>\n<p id=\"so_6440812_6440983_1\">The value of a char16_t literal containing a single c-char is equal to its ISO 10646 code point value, provided that the code point is representable with a single 16-bit code unit.</p>\n</blockquote>\n<p>provides the same guarantees (though less explicitly (as you have to know that ISO 10646 is UCS (Note UCS is compatible but not exactly the same as Unicode))).</p>\n", "LastEditorUserId": "14065", "LastActivityDate": "2011-06-22T14:38:22.980", "Score": "10", "CreationDate": "2011-06-22T13:50:42.283", "ParentId": "6440812", "CommentCount": "1", "OwnerUserId": "14065", "LastEditDate": "2011-06-22T14:38:22.980"}, "6441030": {"Id": "6441030", "PostTypeId": "2", "Body": "<p>It can't be guaranteed to be exactly 16 bits, since there are platforms which don't support types that small (for example, DSPs often can't address anything smaller than their word size, which may be 24, 32 or 64 bits). Your first quote guarantees that it will be at least 16 bits.</p>\n", "LastActivityDate": "2011-06-22T13:54:26.567", "CommentCount": "0", "CreationDate": "2011-06-22T13:54:26.567", "ParentId": "6440812", "Score": "2", "OwnerUserId": "204847"}, "6440946": {"Id": "6440946", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_6440812_6440946_0\">The value of a <code>char16_t</code> literal containing a single c-char is equal to its ISO 10646 code point value, provided that the code point is representable with a single 16-bit code unit.</p>\n</blockquote>\n<p>This is impossible to satisfy if <code>char16_t</code> isn't at least 16 bits wide, so by contradiction, it's guaranteed to be <em>at least</em> that wide.</p>\n", "LastEditorUserId": "166749", "LastActivityDate": "2011-06-22T13:55:30.700", "Score": "5", "CreationDate": "2011-06-22T13:48:40.063", "ParentId": "6440812", "CommentCount": "5", "OwnerUserId": "166749", "LastEditDate": "2011-06-22T13:55:30.700"}});