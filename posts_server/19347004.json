post_cb({"19347004": {"ViewCount": "2039", "Body": "<blockquote>\n<p id=\"so_19347004_19347004_0\">\"we can initializate objects of a class for which we have not define\n  any constructor using:</p>\n<ul>\n<li>memberwise initialization.</li>\n<li>copy initialization.</li>\n<li>default initialization.</li>\n</ul>\n<p id=\"so_19347004_19347004_1\">For example:</p>\n<pre><code>    struct Work {\n      string author;\n      string name;\n      int year;\n    };\n\n    Work s9 { \"Bethoven\",\n              \"Symphony No. 9 in D minor, Op. 125; Choral\",\n              1824\n            };                    // memberwise initialization\n\n    Work currently_playing {s9};  // copy initialization\n    Work none {};                 // default initialization\n</code></pre>\n</blockquote>\n<p>The C++ Programming Language 4th Ed. Chapter 17.3.1 </p>\n<p>For example:</p>\n<pre><code>   struct Data\n     {\n        int mMember1;\n        float mMember2;\n        char mMember3;\n     };\n\n     int main()\n     {\n         Data aData_1{1,0.3,33};\n         Data aData_2{aData_1};\n\n         return EXIT_SUCCESS;\n     }\n</code></pre>\n<p>This must work, althought I get a compiler error as much with GCC as with Clang. The error is \"cannot convert Data to int\" in both compilers. However, implementing the copy constructor this error disappear or without implenting it but using the round braces syntax. The problem is a little stupid and changing the curly for the round braces the problem get solved. But why the rules of TC++PL are not followed?, is a compilator issue or I'm misunderstanding something?. Thanks in advance.</p>\n", "AcceptedAnswerId": "19347160", "Title": "Copy constructor curly braces initialization", "CreationDate": "2013-10-13T15:42:17.310", "Id": "19347004", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2013-10-13T16:06:41.003", "LastEditorUserId": "365496", "LastActivityDate": "2013-10-13T16:14:01.070", "Score": "6", "OwnerUserId": "2054250", "Tags": "<c++><c++11><copy-constructor><uniform-initialization>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_19347004_19347160_0": {"length": 6, "quality": 1.0, "section_id": 3325}, "so_19347004_19347160_3": {"length": 10, "quality": 1.0, "section_id": 3325}, "so_19347004_19347160_1": {"length": 4, "quality": 0.8, "section_id": 3325}}, "n3337": {"so_19347004_19347160_0": {"length": 6, "quality": 1.0, "section_id": 3195}, "so_19347004_19347160_3": {"length": 9, "quality": 0.9, "section_id": 3195}, "so_19347004_19347160_1": {"length": 4, "quality": 0.8, "section_id": 3195}}, "n4659": {"so_19347004_19347160_0": {"length": 6, "quality": 1.0, "section_id": 4091}, "so_19347004_19347160_3": {"length": 10, "quality": 1.0, "section_id": 4091}, "so_19347004_19347160_1": {"length": 4, "quality": 0.8, "section_id": 4091}}}, "19347160": {"Id": "19347160", "PostTypeId": "2", "Body": "<p>I think the behaviour conforms with 8.5.4 (List initialization), sentence 3:</p>\n<blockquote>\n<p id=\"so_19347004_19347160_0\">List-initialization of an object or reference of type <code>T</code> is defined as follows:</p>\n<p id=\"so_19347004_19347160_1\">\u2014 If <code>T</code> is an aggregate, aggregate initialization is performed (8.5.1).</p>\n<p id=\"so_19347004_19347160_2\">[...]</p>\n<p id=\"so_19347004_19347160_3\">\u2014 Otherwise, if the initializer list has a single element of type <code>E</code> [...] the object or reference is initialized from that element;</p>\n</blockquote>\n<p>You were expecting the second item in my abbreviated quote to apply, but the first item takes precedence: Since <code>Data</code> is indeed an aggregate, the one-element-list clause is never considered.</p>\n<hr>\n<p>Your quote from the book appears to be a <a href=\"http://www.stroustrup.com/4th.html\">known error</a>. The language is allegedly going to be fixed to match the book in C++14.</p>\n</hr>", "LastEditorUserId": "596781", "LastActivityDate": "2013-10-13T16:14:01.070", "Score": "9", "CreationDate": "2013-10-13T15:57:06.700", "ParentId": "19347004", "CommentCount": "4", "OwnerUserId": "596781", "LastEditDate": "2013-10-13T16:14:01.070"}});