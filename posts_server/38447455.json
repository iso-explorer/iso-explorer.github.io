post_cb({"38447455": {"CommentCount": "10", "ViewCount": "139", "PostTypeId": "1", "LastEditorUserId": "251153", "CreationDate": "2016-07-18T23:35:41.793", "LastActivityDate": "2016-07-18T23:59:16.667", "Title": "Is it legal to initialize multiple overlapping fields in a union's member initializer list?", "AcceptedAnswerId": "38447623", "LastEditDate": "2016-07-18T23:59:16.667", "Id": "38447455", "Score": "6", "Body": "<p>I have this union:</p>\n<pre><code>union Foo\n{\n    uint32_t u32;\n    struct\n    {\n        uint32_t a : 10;\n        uint32_t b : 10;\n        uint32_t c : 10;\n        uint32_t d : 2;\n    };\n\n    Foo() : a(0), b(1), c(2), d(3)\n    {\n    }\n};\n</code></pre>\n<p>We have a tool that analyzes C++ code for potential bugs, and it has a false positive where it thinks that <code>u32</code> hasn't been initialized when I write this.</p>\n<p>I found that VC++ will let me write this member initializer list:</p>\n<pre><code>Foo() : u32(0), a(0), b(1), c(2), d(3)\n</code></pre>\n<p>It does shut up the tool, but it looks... mightily dubious. (Edit based on the comments: GCC and Clang won't accept it, so mightily dubious seems justified.)</p>\n<p>For structures, member initializers are executed in their order of definition in the structure. Is there something similar for unions that ensures that this doesn't end up zeroed because of <code>u32(0)</code>?</p>\n<p>We don't have great pretenses of portability. Right now, this project targets Windows, but it might target iOS and Android in the future. I can pretty much guarantee that it won't show up on strange and exotic platforms though.</p>\n<p>Of course, I can just set <code>a</code>, <code>b</code>, <code>c</code> and <code>d</code> in the constructor's body, which sidesteps the whole issue (or I can disable the warning), but it got me curious.</p>\n", "Tags": "<c++><language-lawyer>", "OwnerUserId": "251153", "AnswerCount": "1"}, "38447623": {"ParentId": "38447455", "CommentCount": "0", "Body": "<p>N4594</p>\n<p>12.6.2/\u00a7? (Under \u00a79):</p>\n<blockquote>\n<p id=\"so_38447455_38447623_0\">[ Note: [...] \u2014end note ] <strong>An attempt to\n  initialize more than one non-static data member of a union renders the program ill-formed.</strong> [ Note: [...] \u2014end note ]</p>\n</blockquote>\n", "OwnerUserId": "4932834", "PostTypeId": "2", "Id": "38447623", "Score": "5", "CreationDate": "2016-07-18T23:59:14.440", "LastActivityDate": "2016-07-18T23:59:14.440"}, "bq_ids": {"n4140": {"so_38447455_38447623_0": {"section_id": 435, "quality": 0.6470588235294118, "length": 11}}, "n3337": {"so_38447455_38447623_0": {"section_id": 427, "quality": 0.6470588235294118, "length": 11}}, "n4659": {"so_38447455_38447623_0": {"section_id": 454, "quality": 0.6470588235294118, "length": 11}}}});