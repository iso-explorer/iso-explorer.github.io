post_cb({"25529991": {"CommentCount": "2", "ViewCount": "216", "PostTypeId": "1", "LastEditorUserId": "3747990", "CreationDate": "2014-08-27T14:33:06.733", "LastActivityDate": "2014-08-27T14:36:00.953", "Title": "Where in the standard (C++11) is it said that the remainder operator works for integral type only?", "AcceptedAnswerId": "25530021", "LastEditDate": "2014-08-27T14:36:00.953", "Id": "25529991", "Score": "4", "Body": "<p>I would like a pointer in the standard (n3242/3291/3290) about where it is defined that the remainder operator doesn't apply to floating point type.</p>\n<p>The remainder operator <code>%</code> is defined in <strong>5.6.2</strong></p>\n<blockquote>\n<p id=\"so_25529991_25529991_0\">The binary / operator yields the quotient, and the binary % operator yields\n      the remainder from the division of the first expression by the second. If the\n      second operand of / or % is zero the behavior is undefined. For integral operands\n      the / operator yields the algebraic quotient with any fractional part discarded\n      if the quotient a/b is representable in the type of the result, (a/b)*b + a%b is\n      equal to a.</p>\n</blockquote>\n<p>I can't find where it is forbidden to use a floating point type. And the fact the standard explicitly treats <code>integral operands</code> as a special case could be interpreted as: the operator exists for other non-integral types.</p>\n<p>I know that MSVC and GCC doesn't accept it, and I looked at lots of answers about this issue, but I can't get a valid pointer in the C++ 11 standard.</p>\n", "Tags": "<c++><c++11><language-lawyer>", "OwnerUserId": "657700", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_25529991_25529991_0": {"section_id": 6137, "quality": 0.7058823529411765, "length": 24}, "so_25529991_25530021_0": {"section_id": 6135, "quality": 0.7727272727272727, "length": 17}}, "n3337": {"so_25529991_25529991_0": {"section_id": 5901, "quality": 0.7058823529411765, "length": 24}, "so_25529991_25530021_0": {"section_id": 5899, "quality": 0.7727272727272727, "length": 17}}, "n4659": {"so_25529991_25529991_0": {"section_id": 7634, "quality": 0.7058823529411765, "length": 24}, "so_25529991_25530021_0": {"section_id": 7632, "quality": 0.7727272727272727, "length": 17}}}, "25530021": {"ParentId": "25529991", "CommentCount": "1", "Body": "<p>C++11, 5.6/2:</p>\n<blockquote>\n<p id=\"so_25529991_25530021_0\">The operands of <code>*</code> and <code>/</code> shall have arithmetic or unscoped enumeration type; <strong>the operands of <code>%</code> shall have\n  integral or unscoped enumeration type</strong>. The usual arithmetic conversions are performed on the operands\n  and determine the type of the result.</p>\n</blockquote>\n<p>(Emphasis mine)</p>\n", "OwnerUserId": "1782465", "PostTypeId": "2", "Id": "25530021", "Score": "11", "CreationDate": "2014-08-27T14:34:51.407", "LastActivityDate": "2014-08-27T14:34:51.407"}});