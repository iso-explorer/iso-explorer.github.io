post_cb({"8193474": {"ParentId": "8192977", "CommentCount": "0", "Body": "<p>This is a single string that means <code>\"create table person (id integer primary key, firstname varchar(20), lastname varchar(30), age integer)\"</code>. But you can see that it is too long to get into one line. Therefore, it is splitted into several strings using <code>\"\"</code> (opening/quote closing quotes). In this case, you can use a line break inside the string in the code to improve its readability. If you do not insert these characters and just split the string using line breaks, your code will not compile.</p>\n", "OwnerUserId": "1033753", "PostTypeId": "2", "Id": "8193474", "Score": "0", "CreationDate": "2011-11-19T10:42:09.753", "LastActivityDate": "2011-11-19T10:42:09.753"}, "8193471": {"ParentId": "8192977", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>If two string literals are separated only by whitespace, then they are concatenated into one single string. It's part of the C and C++ standards if I'm not mistaken.</p>\n<p><strong>Edit</strong> The standard for C can be found <a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/standards.html\" rel=\"nofollow\">here</a>. The relevant part is section 6.4.5 (aptly named \"String literals\"), paragraph 4. I quote:</p>\n<blockquote>\n<p id=\"so_8192977_8193471_0\">In translation phase 6, the multibyte character sequences specified by\n  any sequence of  adjacent character and wide string literal tokens are\n  concatenated into a single multibyte character sequence.</p>\n</blockquote>\n<p>Later in paragraph 7 they have an example:</p>\n<blockquote>\n<p id=\"so_8192977_8193471_1\">EXAMPLE This pair of adjacent character string literals</p>\n<pre><code>\"\\x12\" \"3\"\n</code></pre>\n<p id=\"so_8192977_8193471_2\">produces a single character string literal containing the two\n  characters whose values are '\\x12' and '3', because escape sequences\n  are converted into single members of the execution character set just\n  prior to adjacent string literal concatenation.</p>\n</blockquote>\n<p>There should be similar text in the C++ standard, but I don't have it yet so can't say which section.</p>\n<p><strong>Edit 2</strong> Looking at the errors in the question, I would say that there is a missing or extra double-quote <code>\"</code> somewhere in the real source.</p>\n", "OwnerUserId": "440558", "LastEditorUserId": "440558", "LastEditDate": "2011-11-21T05:44:11.260", "Id": "8193471", "Score": "1", "CreationDate": "2011-11-19T10:41:46.910", "LastActivityDate": "2011-11-21T05:44:11.260"}, "bq_ids": {"n4140": {"so_8192977_8193471_1": {"section_id": 5362, "quality": 0.5714285714285714, "length": 4}, "so_8192977_8193471_0": {"section_id": 5313, "quality": 0.631578947368421, "length": 12}}, "n3337": {"so_8192977_8193471_1": {"section_id": 5158, "quality": 0.5714285714285714, "length": 4}, "so_8192977_8193471_0": {"section_id": 5110, "quality": 0.631578947368421, "length": 12}}, "n4659": {"so_8192977_8193471_1": {"section_id": 6788, "quality": 0.5714285714285714, "length": 4}, "so_8192977_8193471_0": {"section_id": 6737, "quality": 0.5789473684210527, "length": 11}}}, "8192977": {"CommentCount": "8", "ViewCount": "173", "PostTypeId": "1", "LastEditorUserId": "50049", "CreationDate": "2011-11-19T08:59:39.867", "LastActivityDate": "2011-11-21T05:44:11.260", "Title": "How to read this qtstring in qsqlquery.exec", "LastEditDate": "2011-11-20T03:44:38.520", "Id": "8192977", "Score": "0", "Body": "<p>I am learning qtsql but come across this qtstring in qtsql::query.exec()</p>\n<p>I never see this string before in C++. </p>\n<p>Can someone explain why there are some many quotation? And how to read this? Is this one string or five strings? If there are five strings, why there aren't any separators like a comma in between? Also query.exec is expecting a const &amp; QTstring. So if this is one string, is it same as \"create table person (id integer primary key, firstname varchar(20), lastname varchar(30), age integer)\"?</p>\n<pre><code>ret = query.exec(\"create table person \"\n              \"(id integer primary key, \"\n              \"firstname varchar(20), \"\n              \"lastname varchar(30), \"\n              \"age integer)\");\n</code></pre>\n<p>Thanks in advance.</p>\n<hr>\n<p>It doesn't compile, as I get this error</p>\n<p>[100%] Building CXX object CMakeFiles/utest_main.dir/utest_main.cpp.o /Users/chen/GitRepo/TickDatabase/utest_main.cpp: In function \u2018int main()\u2019: /Users/chen/GitRepo/TickDatabase/utest_main.cpp:25: error: \u2018firstname\u2019 was not declared in this scope /Users/chen/GitRepo/TickDatabase/utest_main.cpp:25: error: \u2018lastname\u2019 was not declared in this scope /Users/chen/GitRepo/TickDatabase/utest_main.cpp:25: error: \u2018age\u2019 was not declared in this scope make[2]: <strong>* [CMakeFiles/utest_main.dir/utest_main.cpp.o] Error 1 make[1]: *</strong> [CMakeFiles/utest_main.dir/all] Error </p>\n<p>But it also doesn't look like an error, since both these two sites are referring to this syntax:</p>\n<p><a href=\"http://www.developer.nokia.com/Community/Wiki/CS001505_-_Creating_a_database_table_in_Qt\" rel=\"nofollow\">http://www.developer.nokia.com/Community/Wiki/CS001505_-_Creating_a_database_table_in_Qt</a></p>\n<p><a href=\"http://doc.qt.nokia.com/stable/sql-cachedtable.html\" rel=\"nofollow\">http://doc.qt.nokia.com/stable/sql-cachedtable.html</a></p>\n<p>Anyone got any idea?</p>\n</hr>", "Tags": "<c++><sql><string><sqlite>", "OwnerUserId": "1028782", "AnswerCount": "2"}});