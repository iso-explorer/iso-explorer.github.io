post_cb({"24988365": {"ViewCount": "1177", "Body": "<p>If I want to replace all occurrences of <code>byte</code> with <code>unsigned char</code>, a simple <code>#define</code> will do it. Is there any way to do the reverse with a <code>#define</code>? Grouping two words with either single or double quotes doesn't work, nor escaping the space between them with a backslash. Is it even possible?</p>\n", "AcceptedAnswerId": "24988428", "Title": "Is it possible to #define two words to some expression, not just a single word?", "CreationDate": "2014-07-28T04:17:57.773", "Id": "24988365", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2014-08-12T01:54:40.643", "Score": "10", "OwnerUserId": "1099237", "Tags": "<c++><c><c-preprocessor>", "AnswerCount": "3"}, "24988416": {"Id": "24988416", "PostTypeId": "2", "Body": "<p>The #define syntax is defined by</p>\n<pre><code>#define identifier token-string\n</code></pre>\n<p>So the middle part should be an identifier, which could not contain space.</p>\n", "LastActivityDate": "2014-07-28T04:24:43.980", "CommentCount": "0", "CreationDate": "2014-07-28T04:24:43.980", "ParentId": "24988365", "Score": "3", "OwnerUserId": "1284053"}, "25255016": {"Id": "25255016", "PostTypeId": "2", "Body": "<p>Although the accepted answer is completely technically correct, it may not be immediately clear that the <code>#define</code> syntax given allows things like:</p>\n<pre><code>extern CString outputString;\n#define printf( ... ) { CString temp; temp.Format( __VA_ARGS__ ); outputString += temp; }\n</code></pre>\n<p>The only elements you really need understand here are the <code>...</code> and the <code>__VA_ARGS__</code>. They represent a list of zero or more tokens. So this is a restricted example of where <code>#define</code> will interpret (but essentially ignore) spaces, and allow you to change multiple words into something different.</p>\n<p>Although I've never done it myself, presumably if you have a function with default parameters, and calls to that function that appear to have a variable-length argument list (even though the true argument list is of fixed length) you can still use the <code>...</code> syntax and <code>__VA_ARGS__</code> to invoke a compatible function:</p>\n<pre><code>#define ThreeParamFunction( x, ... ) FiveParamFunction( foo, bar, (x), __VA_ARGS__ )\n</code></pre>\n", "LastActivityDate": "2014-08-12T01:54:40.643", "CommentCount": "0", "CreationDate": "2014-08-12T01:54:40.643", "ParentId": "24988365", "Score": "1", "OwnerUserId": "1099237"}, "24988428": {"Id": "24988428", "PostTypeId": "2", "Body": "<p>The identifier in a <code>#define</code> statement cannot contain spaces, at least in C.</p>\n<p>The controlling part of the C11 standard (though this is essentially the same in earlier iterations) is <code>6.10.3 Macro replacement /9-10</code> (combined below):</p>\n<blockquote>\n<p id=\"so_24988365_24988428_0\">A preprocessing directive of the form<br><br>\n<code># define identifier replacement-list new-line</code><br>\n<code># define identifier lparen identifier-listopt ) replacement-list new-line</code><br>\n<code># define identifier lparen ... ) replacement-list new-line</code><br>\n<code># define identifier lparen identifier-list , ... ) replacement-list new-line</code><br><br>\n  blah blah blah ...</br></br></br></br></br></br></br></p>\n</blockquote>\n<p>An <code>identifier</code> (as used in those directives) is specified in <code>6.4.2</code> of the same standard and does not list the space character as one of the allowed ones.</p>\n", "LastEditorUserId": "14860", "LastActivityDate": "2014-07-28T05:07:32.387", "Score": "6", "CreationDate": "2014-07-28T04:26:23.497", "ParentId": "24988365", "CommentCount": "0", "OwnerUserId": "14860", "LastEditDate": "2014-07-28T05:07:32.387"}, "bq_ids": {"n4140": {"so_24988365_24988428_0": {"length": 17, "quality": 0.6296296296296297, "section_id": 491}}, "n3337": {"so_24988365_24988428_0": {"length": 17, "quality": 0.6296296296296297, "section_id": 482}}, "n4659": {"so_24988365_24988428_0": {"length": 17, "quality": 0.6296296296296297, "section_id": 506}}}});