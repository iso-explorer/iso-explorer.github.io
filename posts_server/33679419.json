post_cb({"33679739": {"ParentId": "33679419", "CommentCount": "2", "Body": "<p>Presumably you're trying to print out the values in the object. cout doesn't know how to do this, and you have to teach it. \n        cout &lt;&lt; *this;\nmight do this if cout knew how to do it, but you can teach it. Here's an example that is more natural c++. (You should also consider a constructor).</p>\n<pre><code>    #include &lt;iostream&gt;\n    using namespace std;\n    class st\n    {\n        public:\n        int a,b;\n    };\n    std::ostream&amp; operator&lt;&lt;(std::ostream&amp; s, const st&amp; val)\n    {\n        return s &lt;&lt; \"a:\" &lt;&lt; val.a &lt;&lt; \" b:\" &lt;&lt; val.b ;\n    }\n    int main() {\n        st foo;\n        foo.a = 1;\n        foo.b = 2;\n        cout &lt;&lt; \"foo is \" &lt;&lt; foo &lt;&lt; endl;\n    }\n</code></pre>\n", "OwnerUserId": "5545102", "PostTypeId": "2", "Id": "33679739", "Score": "-1", "CreationDate": "2015-11-12T19:32:22.100", "LastActivityDate": "2015-11-12T19:32:22.100"}, "33679419": {"CommentCount": "2", "ViewCount": "234", "PostTypeId": "1", "LastEditorUserId": "241631", "CreationDate": "2015-11-12T19:13:37.253", "LastActivityDate": "2015-11-12T20:41:51.813", "Title": "Why am I getting an error when using &this?", "LastEditDate": "2015-11-12T19:20:02.907", "Id": "33679419", "Score": "3", "Body": "<p>I know that the <code>this</code> pointer is implicitly passed to member functions when they are called. When I try to get the address of <code>this</code> pointer (via <code>&amp;this</code>), though, I get the compiler error \"lvalue required\". Why is this? </p>\n<pre><code>class st\n{    \n  int a,b;\npublic :\n  void print()\n  {      \n    cout &lt;&lt; &amp;this; //gives lvalue required... why?\n\n    cout &lt;&lt; this; //will print address of object.\n  }   \n}\n</code></pre>\n", "Tags": "<c++>", "OwnerUserId": "5556116", "AnswerCount": "3"}, "33680926": {"ParentId": "33679419", "CommentCount": "0", "Body": "<p>Because this pointer is a rvalue. this pointer is a constant value, it is passed to the member function like a local variable, so it's value is stored in a memory location that would become invalid when returning from that function.</p>\n", "OwnerUserId": "2717254", "PostTypeId": "2", "Id": "33680926", "Score": "0", "CreationDate": "2015-11-12T20:41:51.813", "LastActivityDate": "2015-11-12T20:41:51.813"}, "33679487": {"ParentId": "33679419", "PostTypeId": "2", "CommentCount": "8", "Body": "<p><code>this</code> is not an lvalue but an prvalue.  From [class.this]:</p>\n<blockquote>\n<p id=\"so_33679419_33679487_0\">In the body of a non-static (9.3) member function, the keyword <strong>this is a prvalue</strong> expression whose value is the address of the object for which the function is called. The type of this in a member function of a class X is X*. If the member function is declared const, the type of this is const X*, if the member function is declared volatile, the type of this is volatile X*, and if the member function is declared const volatile, the type of this is const volatile X*.</p>\n</blockquote>\n<p><sup>Emphasis mine</sup></p>\n<p><code>&amp;</code> requires an <code>lvalue</code> so you cannot get the address of <code>this</code>.</p>\n", "OwnerUserId": "4342498", "LastEditorUserId": "4342498", "LastEditDate": "2015-11-12T19:31:51.233", "Id": "33679487", "Score": "5", "CreationDate": "2015-11-12T19:18:12.733", "LastActivityDate": "2015-11-12T19:31:51.233"}, "bq_ids": {"n4140": {"so_33679419_33679487_0": {"section_id": 5895, "quality": 0.9736842105263158, "length": 37}}, "n3337": {"so_33679419_33679487_0": {"section_id": 5666, "quality": 0.9736842105263158, "length": 37}}, "n4659": {"so_33679419_33679487_0": {"section_id": 7378, "quality": 0.9736842105263158, "length": 37}}}});