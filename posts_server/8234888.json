post_cb({"bq_ids": {"n4140": {"so_8234888_8235021_0": {"length": 17, "quality": 1.0, "section_id": 6517}}, "n3337": {"so_8234888_8235021_0": {"length": 17, "quality": 1.0, "section_id": 6272}}, "n4659": {"so_8234888_8235021_0": {"length": 17, "quality": 1.0, "section_id": 7999}}}, "8235021": {"Id": "8235021", "PostTypeId": "2", "Body": "<p>There's a note in <code>\u00a722.4.1.4.2/3</code> to that extent:</p>\n<blockquote>\n<p id=\"so_8234888_8235021_0\"><code>basic_filebuf</code> assumes that the mappings from internal to external characters is <code>1</code> to <code>N</code>: a <code>codecvt</code> facet that is used by <code>basic_filebuf</code> must be able to translate characters one internal character at a time</p>\n</blockquote>\n<p>Sounds like any locale that's good for IO streams is good for your use as well.</p>\n", "LastActivityDate": "2011-11-22T22:49:03.747", "CommentCount": "1", "CreationDate": "2011-11-22T22:49:03.747", "ParentId": "8234888", "Score": "3", "OwnerUserId": "273767"}, "8234888": {"ViewCount": "88", "Body": "<p>When using <code>std::codecvt</code>'s <code>in</code> method to decode an external byte sequence to an internal char sequence, is there a situation where the destination buffer of internal chars needs space for more than one internal char?</p>\n<p>Here is some code for reference:</p>\n<pre><code>// const std::locale&amp; loc;\n// mbstate_t state;\n// const char *extern_buf_ptr;\n// const char *extern_buf_eptr;\nconst std::codecvt&lt;wchar_t, char, mbstate_t&gt; *pcodecvt = &amp;std::use_facet&lt;std::codecvt&lt;wchar_t, char, mbstate_t&gt; &gt;(loc);\n\nwchar_t intern_char;\nwchar_t *tmp;\nstd::codecvt_base::result in_res = pcodecvt-&gt;in(state,\n        extern_buf_ptr, extern_buf_eptr, extern_buf_ptr,\n        &amp;intern_char, &amp;intern_char + 1, tmp);\n</code></pre>\n<p>This is a simplification of some template code that I have written to decode bytes read individually from a Winsock <code>SOCKET</code>, where the user desires \"unbuffered\" input. Basically, with each iteration of a loop, a byte is read into the external buffer. The loop terminates when <code>in_res</code> is not <code>std::codecvt_base::partial</code>.</p>\n<p>What I am wondering is: Is there a scenario where a call to <code>in()</code> would require space in the destination buffer for more than one internal character? I.e., is there a scenario that would make the above-described loop an infinite loop?</p>\n", "AcceptedAnswerId": "8235021", "Title": "Is there a codecvt decoding scenario where the destination buffer needs space for more than one internal character?", "CreationDate": "2011-11-22T22:36:26.443", "Id": "8234888", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2011-11-23T13:14:39.697", "LastEditorUserId": "196844", "LastActivityDate": "2011-11-23T13:14:39.697", "Score": "1", "OwnerUserId": "196844", "Tags": "<c++><character-encoding><codecvt>", "AnswerCount": "1"}});