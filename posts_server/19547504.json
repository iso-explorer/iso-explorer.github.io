post_cb({"19547526": {"ParentId": "19547504", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>All instances of <em>class</em> A will share the same instance of <code>var</code> regardless. If we look at the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\" rel=\"nofollow\">draft C++ standard</a> section <code>9.4.2</code> <em>Static data members</em> paragraph <em>1</em> says(<em>emphasis mine</em>):</p>\n<blockquote>\n<p id=\"so_19547504_19547526_0\">A static data member is not part of the subobjects of a class. If a static data member is declared thread_local there is one copy of the member per thread. <strong>If a static data member is not declared thread_local there is one copy of the data member that is shared by all the objects of the class.</strong></p>\n</blockquote>\n<p>furthermore paragraph <em>2</em> says:</p>\n<blockquote>\n<p id=\"so_19547504_19547526_1\">[...][ Note: Once the static data member has been defined, it exists even if no objects of its class have been created. [...]</p>\n</blockquote>\n", "OwnerUserId": "1708801", "LastEditorUserId": "1708801", "LastEditDate": "2013-10-23T16:54:59.907", "Id": "19547526", "Score": "2", "CreationDate": "2013-10-23T16:42:58.067", "LastActivityDate": "2013-10-23T16:54:59.907"}, "19547517": {"ParentId": "19547504", "CommentCount": "0", "Body": "<p>All instances will see the same address for a static variable as there is only a single instance of that variable (that's the whole point of a <code>static</code> variable). Obviously if there is only one instance, it can only exist in one place. And it doesn't matter if it is an <code>int</code> or a pointer, for the pointer you just have one instance of the pointer that you can use.</p>\n", "OwnerUserId": "2073257", "PostTypeId": "2", "Id": "19547517", "Score": "2", "CreationDate": "2013-10-23T16:42:40.613", "LastActivityDate": "2013-10-23T16:42:40.613"}, "19547528": {"ParentId": "19547504", "CommentCount": "0", "Body": "<p>All instances of a class will use the same copy and thereby address of the static variable. If doesn't matter if you declare it a pointer or not.</p>\n", "OwnerUserId": "909253", "PostTypeId": "2", "Id": "19547528", "Score": "3", "CreationDate": "2013-10-23T16:43:04.953", "LastActivityDate": "2013-10-23T16:43:04.953"}, "bq_ids": {"n4140": {"so_19547504_19547526_0": {"section_id": 5906, "quality": 1.0, "length": 31}, "so_19547504_19547526_1": {"section_id": 5907, "quality": 0.9333333333333333, "length": 14}}, "n3337": {"so_19547504_19547526_0": {"section_id": 5678, "quality": 1.0, "length": 31}, "so_19547504_19547526_1": {"section_id": 5679, "quality": 0.9333333333333333, "length": 14}}, "n4659": {"so_19547504_19547526_0": {"section_id": 7388, "quality": 1.0, "length": 31}, "so_19547504_19547526_1": {"section_id": 7389, "quality": 0.9333333333333333, "length": 14}}}, "19547504": {"CommentCount": "0", "ViewCount": "591", "CreationDate": "2013-10-23T16:41:38.930", "LastActivityDate": "2013-10-23T16:54:59.907", "Title": "Address of static variable in class", "AcceptedAnswerId": "19547526", "PostTypeId": "1", "Id": "19547504", "Score": "1", "Body": "<p>If I have a class with a static variable:</p>\n<pre><code>class A {\n  public:\n    ...\n  private:\n    static int var;\n}\n</code></pre>\n<p>Will multiple instances of <code>class A</code> use the same address for the static variable <code>var</code>?  If not, will defining the variable as a pointer result in the same address? I.e.:</p>\n<pre><code>class A {\n  public:\n    ...\n  private:\n    static int* var;\n}\n</code></pre>\n", "Tags": "<c++><static-members><memory-address>", "OwnerUserId": "813111", "AnswerCount": "3"}});