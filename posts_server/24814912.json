post_cb({"24814938": {"Id": "24814938", "PostTypeId": "2", "Body": "<p><em>Value-initialization</em> of a pointer initializes it to a null pointer value; therefore both initializer lists are equivalent.</p>\n<hr>\n<p>Pointers don't have class or array type, so value initialization for them is <em>zero initialization</em>. (8.5p8)</p>\n<p>Then, (8.5p6)</p>\n<blockquote>\n<p id=\"so_24814912_24814938_0\">To <em>zero-initialize</em> an object or reference of type <code>T</code> means:</p>\n<ul>\n<li>if <code>T</code> is a scalar type (3.9), the object is initialized to the value obtained by converting the integer literal <code>0</code> (zero) to <code>T</code></li>\n</ul>\n</blockquote>\n<p>This integer literal <code>0</code> is a <em>null pointer constant</em> (4.10p1), which when converted to a pointer type creates a <em>null pointer value</em>.</p>\n<hr>\n<p>Note that zero-initialization of variables with static and thread duration (3.6.2) also initializes pointers to null pointer values.</p>\n<hr>\n<p>Above paragraph references are from C++1y draft n3936, but they were the same in earlier drafts I checked also.</p>\n</hr></hr></hr>", "LastEditorUserId": "103167", "LastActivityDate": "2014-07-17T23:11:48.800", "Score": "7", "CreationDate": "2014-07-17T23:06:43.567", "ParentId": "24814912", "CommentCount": "3", "OwnerUserId": "103167", "LastEditDate": "2014-07-17T23:11:48.800"}, "bq_ids": {"n4140": {"so_24814912_24814938_0": {"length": 5, "quality": 1.0, "section_id": 3285}}, "n3337": {"so_24814912_24814938_0": {"length": 5, "quality": 1.0, "section_id": 3155}}, "n4659": {"so_24814912_24814938_0": {"length": 4, "quality": 0.8, "section_id": 653}}}, "24814912": {"ViewCount": "125", "Body": "<p>I have seen the related answers <a href=\"https://stackoverflow.com/a/3197557/391161\">here</a> and <a href=\"https://stackoverflow.com/a/1613383/391161\">here</a> on this, but I wanted confirmation, because none of them make this explicit. </p>\n<p>Suppose I have a class <code>Foo</code> and a member <code>bar</code> of type <code>int*</code>.</p>\n<p><strong>Are the following two initializations entirely equivalent?</strong></p>\n<pre><code>Foo::Foo() : bar(NULL) // null pointer constant by macro\n{\n}\n\nFoo::Foo() : bar() // value initialization\n{\n}\n</code></pre>\n", "AcceptedAnswerId": "24814938", "Title": "What exactly does value initialization of a pointer do in C++?", "CreationDate": "2014-07-17T23:03:53.990", "Id": "24814912", "CommentCount": "0", "LastEditDate": "2017-05-23T12:05:34.647", "PostTypeId": "1", "LastEditorUserId": "-1", "LastActivityDate": "2014-07-17T23:11:48.800", "Score": "4", "OwnerUserId": "391161", "Tags": "<c++>", "AnswerCount": "1"}});