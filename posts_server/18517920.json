post_cb({"bq_ids": {"n4140": {"so_18517920_18518409_0": {"length": 20, "quality": 1.0, "section_id": 234}}, "n3337": {"so_18517920_18518409_0": {"length": 20, "quality": 1.0, "section_id": 227}}, "n4659": {"so_18517920_18518409_0": {"length": 19, "quality": 0.95, "section_id": 244}}}, "18518409": {"Id": "18518409", "PostTypeId": "2", "Body": "<p>By specializing the way you are, you are not actually instantiating NULLPOSITION (or POSIZIONENULLA, check your code)</p>\n<p><strong>14.7.1.2</strong> </p>\n<blockquote>\n<p id=\"so_18517920_18518409_0\">in particular, the initialization (and any associated side-effects) of\n  a static data member does not occur unless the static data member is\n  itself used in a way that requires the definition of the static data\n  member to exist</p>\n</blockquote>\n<p>You might want to explicitely define the data member with another class, as in</p>\n<pre><code>template&lt;typename P&gt;\nclass PositionClass\n{\n    public:\n        typedef P position;\n        static const position NULLPOSITION;\n};\ntemplate &lt;typename T, class P&gt;\nclass SuperClass : public PositionClass&lt;P&gt;\n{\n    public:\n        typedef T type;\n};\n\nconst PositionClass&lt;int&gt;::position  PositionClass&lt;int&gt;::NULLPOSITION = 0;\n</code></pre>\n", "LastActivityDate": "2013-08-29T18:26:24.417", "CommentCount": "1", "CreationDate": "2013-08-29T18:26:24.417", "ParentId": "18517920", "Score": "0", "OwnerUserId": "2561388"}, "18517920": {"ViewCount": "1691", "Body": "<p>I have classes SuperClass and Subclass, where SubClass is inheriting from SuperClass.</p>\n<p>In SuperClass I have a constant property who's values depends on the SubClass using it. Howerver I need it to be declared in SuperClass as there are some other methods in SuperClass using it as well, but I need to initalize it in SubClass as the value of the constant changes depending on the SubClass type instantiated.</p>\n<p>From a <a href=\"https://stackoverflow.com/questions/18467376/c-virtual-variable-in-inheritance-class-hierarchy\">previous question on SO</a>, I know the best solution to this is using a trait class. However using such a solution would involve massive changes to my code. Therefore, I have chosen the approach here shown.</p>\n<p><strong>SuperClass.h</strong></p>\n<pre><code>#ifndef SUPERCLASS_H\n#define SUPERCLASS_H\n\n\n#include &lt;string&gt;\n\ntemplate &lt;class T, class P&gt;\nclass SuperClass\n{\n      public:\n\n       typedef T type;\n       typedef P position;\n\n       static const position NULLPOSITION;\n\n};\n\n#endif\n</code></pre>\n<p><strong>SubClass.h</strong></p>\n<pre><code>#ifndef SUBCLASS_H\n#define SUBCLASS_H\n\n#include &lt;string&gt;\n#include \"SuperClass.h\"\n\n\ntemplate &lt;class T&gt;\nclass SubClass:public SuperClass&lt;T,int&gt;\n{\n\n};\n\ntemplate&lt;class T&gt;\nconst typename SuperClass&lt;T,int&gt;::position SuperClass&lt;T,int&gt;::NULLPOSITION=0;\n\n#endif\n</code></pre>\n<p><strong>main.cpp</strong></p>\n<pre><code>#include &lt;cstdlib&gt;\n#include &lt;iostream&gt;\n#include \"SubClass.h\"\n\nusing namespace std;\n\nint main(int argc, char *argv[])\n{\n    SubClass&lt;int&gt; subClass;\n\n    system(\"PAUSE\");\n    return EXIT_SUCCESS;\n}\n</code></pre>\n<p>On compiling I get </p>\n<pre><code>invalid use of undefined type `class SuperClass&lt;T, int&gt;\n</code></pre>\n<p>and</p>\n<pre><code>declaration of `class SuperClass&lt;T, int&gt;\n</code></pre>\n<p>errors.\nWhat might be the issue?</p>\n", "AcceptedAnswerId": "18518426", "Title": "C++ - invalid use of undefined type ... - declaration of `class", "CreationDate": "2013-08-29T17:58:48.450", "Id": "18517920", "CommentCount": "4", "LastEditDate": "2017-05-23T12:22:14.813", "PostTypeId": "1", "LastEditorUserId": "-1", "LastActivityDate": "2013-08-30T22:23:40.923", "Score": "0", "OwnerUserId": "1815342", "Tags": "<c++><class><inheritance><declaration>", "AnswerCount": "2"}, "18518426": {"Id": "18518426", "PostTypeId": "2", "Body": "<p>The problem is your definition of <code>NULLPOSITION</code>. You have declared a static member <code>NULLPOSITION</code> for the template <code>SuperClass</code>, but have not defined it. Instead, you attempt to define the member for a partial explicit instantiation of it. You should delete the partial explicit instantiation definition, and define a regular template class static member definition for <code>NULLPOSITION</code> instead.</p>\n<p>To allow subclasses to provide a different initialization value for <code>NULLPOSITION</code>, this can be accomplished via a (perhaps optional) template parameter.</p>\n<pre><code>template &lt;class T, class P, P INIT&gt;\nclass SuperClass\n{\npublic:\n    typedef T type;\n    typedef P position;\n    static const position NULLPOSITION;\n};\n\ntemplate&lt;class T, class P, P INIT&gt;\nconst typename SuperClass&lt;T,P,INIT&gt;::position\n    SuperClass&lt;T,P,INIT&gt;::NULLPOSITION = INIT;\n\ntemplate &lt;class T&gt;\nclass SubClass:public SuperClass&lt;T,int, 0&gt;\n{\n};\n</code></pre>\n", "LastEditorUserId": "315052", "LastActivityDate": "2013-08-30T22:23:40.923", "Score": "2", "CreationDate": "2013-08-29T18:27:10.293", "ParentId": "18517920", "CommentCount": "0", "OwnerUserId": "315052", "LastEditDate": "2013-08-30T22:23:40.923"}});