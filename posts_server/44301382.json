post_cb({"bq_ids": {"n4140": {"so_44301382_44303239_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 1567}}, "n3337": {"so_44301382_44303239_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 1562}}, "n4659": {"so_44301382_44303239_0": {"length": 26, "quality": 1.0, "section_id": 1716}}}, "44303239": {"Id": "44303239", "PostTypeId": "2", "Body": "<p>This is expected behaviour for std::string. In the C++ standard, validity of string iterators is not garanteed after a modification of the string, contrary to other types with stronger requirements.</p>\n<p>In [string.require] (\u00a721.4.1), the standard states:</p>\n<blockquote>\n<p id=\"so_44301382_44303239_0\">References, pointers, and iterators referring to the elements of a\n  basic_\u00adstring sequence may be invalidated by the following uses of\n  that basic_\u00adstring object: [...] Calling non-const member functions,\n  except operator[], at, data, front, back, begin, rbegin, end, and\n  rend.</p>\n</blockquote>\n", "LastActivityDate": "2017-06-01T09:10:44.540", "CommentCount": "2", "CreationDate": "2017-06-01T09:10:44.540", "ParentId": "44301382", "Score": "1", "OwnerUserId": "7980658"}, "44301382": {"ViewCount": "41", "Body": "<p>I have a string-</p>\n<pre><code>std::string out;\n</code></pre>\n<p>and an iterator over that string-</p>\n<pre><code>std::string::iterator pos = out.begin();\n</code></pre>\n<p>if I do -</p>\n<pre><code>if(!out.empty() || pos &gt; out.begin())\n  out.erase(pos--);\n</code></pre>\n<p>It segfaults, with this error-</p>\n<pre><code>Program received signal SIGSEGV, Segmentation fault.\n            __memmove_ssse3 () at ../sysdeps/x86_64/multiarch/memcpy-ssse3.S:2821\n2821    ../sysdeps/x86_64/multiarch/memcpy-ssse3.S: No such file or directory.\n</code></pre>\n<p>What am I missing?</p>\n<p>For some context, I'm implementing line editing with ncurses and this code defines behaviour when backspace is pressed.</p>\n<p><em><strong>EDIT</strong></em></p>\n<p>It segfaults even after I move the decrement out of the call.</p>\n<p>here is an MCVE - </p>\n<pre><code>#include &lt;string&gt;\n#include &lt;ncurses.h&gt;\n\nint main()\n{\n\n  initscr();\n  cbreak();\n  keypad(stdscr, true);                           //Seems to be causing the error\n  std::string out;\n  std::string::iterator pos = out.begin();\n  short ch;\n  bool insert = false;\n  int y, x;\n\n  while(true)\n  {\n    ch = getch();                                 //Get next character\n\n    if(ch == '\\n')\n      break;                                      //End of line\n\n    else if(ch == KEY_BACKSPACE)                  //Backspace behaviour defined here\n    {\n      if(!out.empty())\n      {\n        out.erase(pos);                           //Character erased from string as per backspace\n        addch('\\b');                              //Erasure reflected on screen\n        std::string temp(pos, out.end());         //\n        getyx(stdscr, y, x);\n        mvaddstr(y, x - 1, temp.c_str());\n      }\n    }\n\n    else if(std::isalnum(ch) || std::ispunct(ch)) //Normal characters\n    {\n      if(!insert)                                 //If insert is off\n        out.insert(pos++, ch);                    //Character inserted normally\n      else                                        //Insert is on\n      {\n        *pos = ch;                                //Overwrite characters\n        pos++;\n      }\n    }\n  }\n  endwin();\n  return 0;\n}\n</code></pre>\n<p>Compile with</p>\n<pre><code>g++ -lncurses -std=c++11 \n</code></pre>\n<p><code>-Wall</code> gives no clues.</p>\n", "AcceptedAnswerId": "44303239", "Title": "std::string::erase() segfaults when given an iterator", "CreationDate": "2017-06-01T07:39:25.473", "Id": "44301382", "CommentCount": "3", "LastEditDate": "2017-06-01T09:04:14.263", "PostTypeId": "1", "LastEditorUserId": "6325886", "LastActivityDate": "2017-06-01T09:10:44.540", "Score": "0", "OwnerUserId": "6325886", "Tags": "<c++11><stl>", "AnswerCount": "1"}});