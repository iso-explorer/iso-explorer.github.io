post_cb({"28046126": {"ViewCount": "178", "Body": "<p>I read somewhere that since c++11, the destructors are implicitly declared <code>noexcept(true)</code>. </p>\n<p>From the standard section 12.4</p>\n<blockquote>\n<p id=\"so_28046126_28046126_0\">A declaration of a destructor that does not have an\n  exception-specification has the same exception specification as if had\n  been implicitly declared</p>\n</blockquote>\n<p>But nowhere in the standard could I find a section where in it says that destructors are implicitly <code>noexcept(true)</code>. Can anyone point me to the section where I can find this information?</p>\n", "AcceptedAnswerId": "28046305", "Title": "c++ standard section id where its mentioned that Destructors are implicitly no throw", "CreationDate": "2015-01-20T13:07:06.567", "Id": "28046126", "CommentCount": "0", "LastEditDate": "2015-01-20T13:18:39.143", "PostTypeId": "1", "LastEditorUserId": "2684539", "LastActivityDate": "2015-01-20T13:18:39.143", "Score": "6", "OwnerUserId": "602798", "Tags": "<c++><exception><c++11><destructor><language-lawyer>", "AnswerCount": "2"}, "28046310": {"Id": "28046310", "PostTypeId": "2", "Body": "<p>The description of how a special member's implicit exception specification is formed is in 15.4/14.  It's not very clear, but it basically says that a special member <strong>only</strong> throws those exceptions thrown by the special members of the bases and members it calls; this implies that a) if there are no bases or members, there won't be any exceptions, and b) if all bases and members don't throw exceptions, there won't be any exceptions. The end result is that destructors are <code>noexcept(true)</code> unless any member or base's destructor is not.</p>\n", "LastActivityDate": "2015-01-20T13:16:32.117", "CommentCount": "0", "CreationDate": "2015-01-20T13:16:32.117", "ParentId": "28046126", "Score": "3", "OwnerUserId": "8922"}, "bq_ids": {"n4140": {"so_28046126_28046305_0": {"length": 62, "quality": 0.9393939393939394, "section_id": 3376}}, "n3337": {"so_28046126_28046126_0": {"length": 8, "quality": 0.6666666666666666, "section_id": 3143}, "so_28046126_28046305_0": {"length": 50, "quality": 0.7575757575757576, "section_id": 3246}}, "n4659": {"so_28046126_28046126_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 416}}}, "28046305": {"Id": "28046305", "PostTypeId": "2", "Body": "<p>I believe you are looking for \u00a715.4/14 (emphasis mine):</p>\n<blockquote>\n<p id=\"so_28046126_28046305_0\">An inheriting constructor (12.9) and an implicitly declared special member function (Clause 12) have an\n  exception-specification. If <code>f</code> is an inheriting constructor or an implicitly declared default constructor, copy\n  constructor, move constructor, <strong>destructor</strong>, copy assignment operator, or move assignment operator, its implicit\n  exception-specification specifies the type-id <code>T</code> if and only if <code>T</code> is allowed by the exception-specification\n  of a function directly invoked by <code>f</code>\u2019s implicit definition; <code>f</code> allows all exceptions if any function it directly\n  invokes allows all exceptions, and f has the exception-specification noexcept(true) if every function it directly\n  invokes allows no exceptions. <em>[ Note:</em> <strong>It follows that <code>f</code> has the exception-specification <code>noexcept(true)</code>\n  if it invokes no other functions</strong>. <em>\u2014end note ]</em></p>\n</blockquote>\n", "LastActivityDate": "2015-01-20T13:16:19.920", "CommentCount": "4", "CreationDate": "2015-01-20T13:16:19.920", "ParentId": "28046126", "Score": "3", "OwnerUserId": "2069064"}});