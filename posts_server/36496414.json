post_cb({"36496414": {"CommentCount": "1", "ViewCount": "55", "PostTypeId": "1", "LastEditorUserId": "1608835", "CreationDate": "2016-04-08T09:43:20.760", "LastActivityDate": "2016-04-08T10:16:27.520", "Title": "Is it ok to write the unicode characters inside string literals in C++", "AcceptedAnswerId": "36497078", "LastEditDate": "2016-04-08T10:15:07.313", "Id": "36496414", "Score": "2", "Body": "<p>Is it ok to write the following code?</p>\n<pre><code>const char* str = \"\u00a7some-text\";\n</code></pre>\n<p>Will <code>str</code> contain the correct UTF-8 representation of the <code>\u00a7</code> character if the source files was saved in a UTF-8 encoding?</p>\n<p>Or is the only way to write it is to use <code>u8</code>-prefixed string literals?</p>\n", "Tags": "<c++><visual-studio><visual-c++><unicode>", "OwnerUserId": "1608835", "AnswerCount": "1"}, "36497078": {"ParentId": "36496414", "CommentCount": "8", "Body": "<p>Whether you can use Unicode characters in your source code (not just in string literals) is implementation-defined. The only way to be portable is to stick to characters in the \"basic source character set\" and use <code>u8\"\\u00a7some-text\"</code>.</p>\n<p>[lex.phases]/1:</p>\n<blockquote>\n<p id=\"so_36496414_36497078_0\"><strong>Physical source file characters are mapped, in an implementation-defined manner, to the basic source character set (introducing new-line characters for end-of-line indicators) if necessary. The set of physical source file characters accepted is implementation-defined.</strong> Any source file character not in the basic source character set (2.3) is replaced by the universal-character-name that designates that character. (An implementation may use any internal encoding, so long as an actual extended character encountered in the source file, and the same extended character expressed in the source file as a universal-character-name (e.g., using the \\uXXXX notation), are handled equivalently except where this replacement is reverted in a raw string literal.)</p>\n</blockquote>\n<p>The \"basic source character set\" is:</p>\n<blockquote>\n<p id=\"so_36496414_36497078_1\">The basic source character set consists of 96 characters: the space character, the control characters representing horizontal tab, vertical tab, form feed, and new-line, plus the following 91 graphical characters:</p>\n<p id=\"so_36496414_36497078_2\">a b c d e f g h i j k l m n o p q r s t u v w x y z</p>\n<p id=\"so_36496414_36497078_3\">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p>\n<p id=\"so_36496414_36497078_4\">0 1 2 3 4 5 6 7 8 9</p>\n<p id=\"so_36496414_36497078_5\">_ { } [ ] # ( ) &lt; &gt; % : ; . ? * + - / ^ &amp; | ~ ! = , \\ \" \u2019</p>\n</blockquote>\n", "OwnerUserId": "2491746", "PostTypeId": "2", "Id": "36497078", "Score": "1", "CreationDate": "2016-04-08T10:16:27.520", "LastActivityDate": "2016-04-08T10:16:27.520"}, "bq_ids": {"n4140": {"so_36496414_36497078_1": {"section_id": 5314, "quality": 0.9130434782608695, "length": 21}, "so_36496414_36497078_0": {"section_id": 5313, "quality": 0.9264705882352942, "length": 63}}, "n3337": {"so_36496414_36497078_1": {"section_id": 5111, "quality": 0.9130434782608695, "length": 21}, "so_36496414_36497078_0": {"section_id": 5110, "quality": 0.9264705882352942, "length": 63}}, "n4659": {"so_36496414_36497078_1": {"section_id": 6738, "quality": 0.8695652173913043, "length": 20}, "so_36496414_36497078_0": {"section_id": 6737, "quality": 0.9264705882352942, "length": 63}}}});