post_cb({"bq_ids": {"n4140": {"so_35979062_35979551_2": {"length": 10, "quality": 1.0, "section_id": 6536}, "so_35979062_35979551_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 6536}}, "n3337": {"so_35979062_35979551_2": {"length": 10, "quality": 1.0, "section_id": 6291}, "so_35979062_35979551_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 6291}}, "n4659": {"so_35979062_35979551_2": {"length": 9, "quality": 0.9, "section_id": 8018}, "so_35979062_35979551_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 8018}}}, "35979062": {"ViewCount": "184", "Body": "<p>could someone explain to me why my codes does not cause an infinite loop or crash when the user enters a char for the int menu variable when asked? I have tested it and it does work correctly but would have thought it would crash... many thanks! </p>\n<pre><code>int menu;\nint drawCheck = 0;\ncout &lt;&lt; \"Press 1 to play a friend\\n\"; \n\ncout &lt;&lt; \"Press 0 if for some reason you opened this and now dont want to play...\\n\";\ncin &gt;&gt; menu;\nwhile (menu!= 1)                        //User enters a number that isnt 1\n{\n    if(menu ==0)\n    {\n        exit(EXIT_SUCCESS);             //When user enters 0 the program will exit\n    }\n    cout &lt;&lt; \"Please enter either 1 to play a friend or 0 to exit: \";  //Will ask untill player enters either 1 or 0 \n    cin &gt;&gt; menu; \n}\n</code></pre>\n", "AcceptedAnswerId": "35979551", "Title": "Why does this code not crash the cin? char entered for an int variable c++", "CreationDate": "2016-03-14T03:25:44.127", "Id": "35979062", "CommentCount": "4", "LastEditDate": "2016-03-14T03:52:15.867", "PostTypeId": "1", "LastEditorUserId": "3922042", "LastActivityDate": "2016-03-14T04:35:25.223", "Score": "0", "OwnerUserId": "5896346", "Tags": "<c++><crash><char><int>", "AnswerCount": "1"}, "35979551": {"Id": "35979551", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_35979062_35979551_0\">I have tested it and it does work correctly...</p>\n</blockquote>\n<p>I'm not sure how you can claim that what it does is \"correct\"... what is correct if the user types a letter - to continue, or to terminate?  Why?</p>\n<p>Anyway, given...</p>\n<pre><code>int menu;\ncin &gt;&gt; menu;\n</code></pre>\n<p>From C++11 onwards, if parsing of an <code>int</code> from <code>cin</code> into <code>menu</code> fails, <code>menu</code> is set to zero, per 22.4.2.1.2/3:</p>\n<blockquote>\n<p id=\"so_35979062_35979551_1\">The numeric value to be stored can be one of:</p>\n<p id=\"so_35979062_35979551_2\">\u2014 zero, if the conversion function fails to convert the entire field. ios_base::failbit is assigned to err.</p>\n<p id=\"so_35979062_35979551_3\">...(other behaviours for successful parsing num that's in/out of range)...</p>\n</blockquote>\n<p>So, with C++11, entering a letter has the same impact on <code>menu</code> as entering <code>0</code>, resulting in your program exiting.</p>\n<p>Before C++11, the value of <code>menu</code> after failed parsing would be undefined (even if it had been initialised), making subsequent use of <code>menu</code> undefined behaviour.  You can't reason about how undefined behaviour will manifest, though - on some particular execution of the program - it might coincidentally happen to match what you'd hoped would happen.</p>\n", "LastActivityDate": "2016-03-14T04:28:35.210", "CommentCount": "1", "CreationDate": "2016-03-14T04:28:35.210", "ParentId": "35979062", "Score": "1", "OwnerUserId": "410767"}});