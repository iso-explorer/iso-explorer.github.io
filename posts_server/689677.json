post_cb({"689718": {"ParentId": "689677", "CommentCount": "2", "Body": "<p>The true reason for doing this dates back to a tool used on C code, called <a href=\"http://opengroup.org/onlinepubs/007908775/xcu/lint.html\" rel=\"noreferrer\">lint</a>.</p>\n<p>It analyzes code looking for possible problems and issuing warnings and suggestions. If a function returned a value which was then not checked, <code>lint</code> would warn in case this was accidental. To silence <code>lint</code> on this warning, you cast the call to <code>(void)</code>.</p>\n", "OwnerUserId": "27423", "Id": "689718", "PostTypeId": "2", "OwnerDisplayName": "Earwicker", "Score": "27", "CreationDate": "2009-03-27T13:13:13.510", "LastActivityDate": "2009-03-27T13:13:13.510"}, "29175731": {"ParentId": "689677", "CommentCount": "0", "Body": "<p>Also when verifying your code complies to MISTA (or other) standards, automatic tools such as LDRA will not allow you to call a function that has a return type without having it return a value unless you explicitly cast the returned value to (void)</p>\n", "OwnerUserId": "3304104", "PostTypeId": "2", "Id": "29175731", "Score": "1", "CreationDate": "2015-03-20T20:59:25.897", "LastActivityDate": "2015-03-20T20:59:25.897"}, "689677": {"CommentCount": "0", "AcceptedAnswerId": "689716", "PostTypeId": "1", "LastEditorUserId": "895245", "LastEditorDisplayName": "markh44", "CreationDate": "2009-03-27T13:00:59.153", "LastActivityDate": "2016-07-25T08:50:09.843", "AnswerCount": "8", "LastEditDate": "2016-07-25T08:50:09.843", "ViewCount": "27532", "FavoriteCount": "41", "Title": "Why cast unused return values to void?", "Id": "689677", "Score": "92", "Body": "<pre><code>int fn();\n\nvoid whatever()\n{\n    (void) fn();\n}\n</code></pre>\n<p>Is there any reason for casting an unused return value to void, or am I right in thinking it's a complete waste of time?</p>\n<p>Follow up: </p>\n<p>Well that seems pretty comprehensive.  I suppose it's better than commenting an unused return value since self documenting code is better than comments. Personally, I'll turn these warnings off since it's unnecessary noise.  </p>\n<p>I'll eat my words if a bug escapes because of it...</p>\n", "Tags": "<c++><c><void>", "OwnerUserId": "79047", "OwnerDisplayName": "markh44"}, "689692": {"ParentId": "689677", "CommentCount": "1", "Body": "<p>Cast to void is costless. It is only information for compiler how to treat it. </p>\n", "OwnerUserId": "58877", "Id": "689692", "PostTypeId": "2", "OwnerDisplayName": "klew", "Score": "2", "CreationDate": "2009-03-27T13:05:18.240", "LastActivityDate": "2009-03-27T13:05:18.240"}, "689725": {"ParentId": "689677", "CommentCount": "3", "Body": "<p>For the functionality of you program casting to void is meaningless. I would also argue that you should not use it to signal something to the person that is reading the code, as suggested in the answer by David. If you want to communicate something about your intentions, it is better to use a comment. Adding a cast like this will only look strange and raise questions about the possible reason. Just my opinion...</p>\n", "OwnerUserId": "42086", "Id": "689725", "PostTypeId": "2", "OwnerDisplayName": "Dani van der Meer", "Score": "5", "CreationDate": "2009-03-27T13:16:41.690", "LastActivityDate": "2009-03-27T13:16:41.690"}, "7172245": {"ParentId": "689677", "CommentCount": "6", "Body": "<p>In C, it is perfectly OK to cast to void. Virtually anyone will understand the intent of the statement.</p>\n<p>In C++, you have other tools at your disposal. Since C casts are usually frowned upon, and since the explicit cast to void will likely surprise your coworkers (it surprises mine), I have this function template somewhere</p>\n<pre><code>template &lt;typename T&gt;\nvoid use_expression(const T&amp;) {}\n</code></pre>\n<p>and I use</p>\n<pre><code>...\nuse_expression(foo());\n</code></pre>\n<p>where I would write <code>(void)foo()</code> in C.</p>\n", "OwnerUserId": "373025", "PostTypeId": "2", "Id": "7172245", "Score": "2", "CreationDate": "2011-08-24T08:00:26.387", "LastActivityDate": "2011-08-24T08:00:26.387"}, "bq_ids": {"n4140": {"so_689677_7160837_0": {"section_id": 6032, "quality": 0.7272727272727273, "length": 8}}, "n3337": {"so_689677_7160837_0": {"section_id": 5800, "quality": 0.7272727272727273, "length": 8}}, "n4659": {"so_689677_7160837_0": {"section_id": 7531, "quality": 0.6363636363636364, "length": 7}}}, "7160837": {"ParentId": "689677", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>Casting to <code>void</code> is used to suppress compiler warnings for unused variables and unsaved return values or expressions.</p>\n<p>The Standard(2003) says in \u00a75.2.9/4 says,</p>\n<blockquote>\n<p id=\"so_689677_7160837_0\">Any expression can be explicitly converted to type \u201ccv void.\u201d The expression value is <strong>discarded</strong>.</p>\n</blockquote>\n<p>So you can write :</p>\n<pre><code>//suppressing unused variable warnings\nstatic_cast&lt;void&gt;(unusedVar);\nstatic_cast&lt;const void&gt;(unusedVar);\nstatic_cast&lt;volatile void&gt;(unusedVar);\n\n//suppressing return value warnings\nstatic_cast&lt;void&gt;(fn());\nstatic_cast&lt;const void&gt;(fn());\nstatic_cast&lt;volatile void&gt;(fn());\n\n//suppressing unsaved expressions\nstatic_cast&lt;void&gt;(a + b * 10);\nstatic_cast&lt;const void&gt;( x &amp;&amp;y || z);\nstatic_cast&lt;volatile void&gt;( m | n + fn());\n</code></pre>\n<p>All forms are valid. I usually make it shorter as:</p>\n<pre><code>//suppressing  expressions\n(void)(unusedVar);\n(void)(fn());\n(void)(x &amp;&amp;y || z);\n</code></pre>\n<p>Its also okay. </p>\n", "OwnerUserId": "415784", "LastEditorUserId": "415784", "LastEditDate": "2011-08-24T07:07:45.190", "Id": "7160837", "Score": "18", "CreationDate": "2011-08-23T12:11:47.997", "LastActivityDate": "2011-08-24T07:07:45.190"}, "689716": {"CommentCount": "3", "CreationDate": "2009-03-27T13:12:34.150", "LastEditorUserId": "-1", "LastActivityDate": "2013-05-22T08:14:05.130", "ParentId": "689677", "LastEditDate": "2017-05-23T12:25:55.567", "OwnerDisplayName": "Richard Corden", "PostTypeId": "2", "Id": "689716", "Score": "63", "Body": "<p>David's <a href=\"https://stackoverflow.com/questions/689677/casting-unused-return-values-to-void/689688#689688\">answer</a> pretty much covers the motivation for this, to explicitly show other \"developers\" that you know this function returns but you're explicitly ignoring it.</p>\n<p>This is a way to ensure that where necessary error codes are always handled.</p>\n<p>I think for C++ this is probably the only place that I prefer to use C-style casts too, since using the full static cast notation just feels like overkill here.  Finally, if you're reviewing a coding standard or writing one, then it's also a good idea to explicitly state that calls to overloaded operators (not using function call notation) should be exempt from this too:</p>\n<pre><code>class A {};\nA operator+(A const &amp;, A const &amp;);\n\nint main () {\n  A a;\n  a + a;                 // Not a problem\n  (void)operator+(a,a);  // Using function call notation - so add the cast.\n</code></pre>\n", "OwnerUserId": "11698"}, "689688": {"ParentId": "689677", "CommentCount": "8", "Body": "<p>At work we use that to acknowledge that the function has a return value but the developer has asserted that it is safe to ignore it. Since you tagged the question as C++ you should be using <em>static_cast</em>:</p>\n<pre><code>static_cast&lt;void&gt;(fn());\n</code></pre>\n<p>As far as the compiler goes casting the return value to void has little meaning.</p>\n", "OwnerUserId": "22247", "Id": "689688", "PostTypeId": "2", "OwnerDisplayName": "David Holm", "Score": "33", "CreationDate": "2009-03-27T13:03:49.257", "LastActivityDate": "2009-03-27T13:03:49.257"}});