post_cb({"35335368": {"ParentId": "35335167", "PostTypeId": "2", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_35335167_35335368_0\">Are we not missing the following constructor in the class declaration\n  of Vector_container?</p>\n<pre><code>Vector_container(std::initializer_list&lt;double&gt; s) : v(s) { } // Vector of s elements\n</code></pre>\n</blockquote>\n<p>Of course you're right.</p>\n<p><a href=\"http://rextester.com/EBX76765\" rel=\"nofollow\">LIVE</a></p>\n<blockquote>\n<p id=\"so_35335167_35335368_1\">error: no matching constructor for initialization of\n  'Vector_container'<br>\n      Vector_container vc {10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0};</br></p>\n</blockquote>\n<p><a href=\"http://rextester.com/AIRGZ92021\" rel=\"nofollow\">LIVE with ctor taking initializer_list as parameter</a></p>\n", "OwnerUserId": "3309790", "LastEditorUserId": "3309790", "LastEditDate": "2016-02-11T09:40:08.590", "Id": "35335368", "Score": "1", "CreationDate": "2016-02-11T09:30:07.597", "LastActivityDate": "2016-02-11T09:40:08.590"}, "35335167": {"CommentCount": "2", "ViewCount": "120", "PostTypeId": "1", "LastEditorUserId": "3309790", "CreationDate": "2016-02-11T09:20:03.060", "LastActivityDate": "2016-02-11T09:40:08.590", "Title": "Abstract Type Initialization using Initializer list in C++", "AcceptedAnswerId": "35335368", "LastEditDate": "2016-02-11T09:27:18.337", "Id": "35335167", "Score": "2", "Body": "<p>I started reading the book 'The C++ Programming Language - 4th Edition' by Bjarne Struoustrup and found the following example bit confusing (Abstract Types - page 66):</p>\n<pre><code>class Container {\npublic:\n    virtual double&amp; operator[](int) = 0; // pure virtual function\n    virtual int size() const = 0; // const member function (\u00a73.2.1.1)\n    virtual ~Container() {} // destructor (\u00a73.2.1.2)\n};\n\nclass Vector_container : public Container { // Vector_container implements Container\nVector v;\npublic:\n    Vector_container(int s) : v(s) { } // Vector of s elements\n    ~Vector_container() {}\n    double&amp; operator[](int i) { return v[i]; }\n    int size() const { return v.size(); }\n};\n</code></pre>\n<p>Client code:</p>\n<pre><code>void use(Container&amp; c)\n{\n    const int sz = c.size();\n    for (int i=0; i!=sz; ++i)\n    cout &lt;&lt; c[i] &lt;&lt; '\\n';\n}\n\nvoid g()\n{\n    Vector_container vc {10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0};\n    use(vc);\n}\n</code></pre>\n<p>Are we not missing the following constructor in the class declaration of Vector_container?</p>\n<pre><code>Vector_container(std::initializer_list&lt;double&gt; s) : v(s) { } // Vector of s elements\n</code></pre>\n<p>Please correct me if I misunderstood anything here.</p>\n", "Tags": "<c++><c++11><constructor><initializer-list>", "OwnerUserId": "3088983", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_35335167_35335368_0": {"section_id": 438, "quality": 0.5714285714285714, "length": 4}}, "n3337": {"so_35335167_35335368_0": {"section_id": 429, "quality": 0.5714285714285714, "length": 4}}, "n4659": {"so_35335167_35335368_0": {"section_id": 458, "quality": 0.5714285714285714, "length": 4}}}});