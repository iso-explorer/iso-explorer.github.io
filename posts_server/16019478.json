post_cb({"bq_ids": {"n4140": {"so_16019478_16019528_0": {"length": 14, "quality": 0.8235294117647058, "section_id": 5361}}, "n3337": {"so_16019478_16019528_0": {"length": 14, "quality": 0.8235294117647058, "section_id": 5157}}, "n4659": {"so_16019478_16019528_0": {"length": 14, "quality": 0.8235294117647058, "section_id": 6789}}}, "16019478": {"ViewCount": "298", "Body": "<p>When I'm trying to cast <code>const char*</code> to <code>char*</code> it crashes:</p>\n<pre><code>int myfunc(const char*);\nconst char * str = \"test\";\nmyfunc( (char*)str ) // crash\n</code></pre>\n<p>How can I do that?</p>\n", "AcceptedAnswerId": "16019528", "Title": "Casting const char* to char* crashes", "CreationDate": "2013-04-15T15:49:57.440", "Id": "16019478", "CommentCount": "5", "LastEditDate": "2013-10-25T17:21:37.840", "PostTypeId": "1", "LastEditorUserId": "1708801", "LastActivityDate": "2013-10-25T17:21:37.840", "Score": "2", "OwnerUserId": "1857483", "Tags": "<c++><casting><string-literals>", "AnswerCount": "2"}, "16019528": {"Id": "16019528", "PostTypeId": "2", "Body": "<p><b>Update</b></p>\n<p>Attempting to modify a <em>string literal</em> is <a href=\"http://en.wikipedia.org/wiki/Undefined_behavior\" rel=\"nofollow\">undefined behavior</a>. If we look at the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\" rel=\"nofollow\">draft C++ standard</a> section <code>2.14.5</code> <em>String literals</em> paragraph <em>12</em> says:</p>\n<blockquote>\n<p id=\"so_16019478_16019528_0\">Whether all string literals are distinct (that is, are stored in nonoverlapping objects) is implementation defined. The effect of attempting to modify a string literal is undefined.</p>\n</blockquote>\n<p>Crashing is one of many possible results of <em>undefined behavior</em> it is also possible to have a program that appears to work properly. </p>\n<p>Alternatively you can create a <em>automatic</em> array as follows:</p>\n<pre><code>char str[] = \"test\" ;\n</code></pre>\n<p>which will have a copy of the <em>string literal</em> which you can then modify.</p>\n<p><b>Original</b></p>\n<p>If <code>myfunc</code> is modifying a string literal then you have undefined behavior which can easily lead to your program crashing.</p>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2013-10-25T17:20:11.553", "Score": "3", "CreationDate": "2013-04-15T15:52:10.087", "ParentId": "16019478", "CommentCount": "0", "LastEditDate": "2013-10-25T17:20:11.553", "OwnerUserId": "1708801"}, "16019524": {"Id": "16019524", "PostTypeId": "2", "Body": "<p>What you're doing is undefined behavior.</p>\n<p>You're not allowed to change the memory pointed to by <code>str</code>. If you need one you can change, declare it this way instead:</p>\n<pre><code>char str[] = \"test\";\n</code></pre>\n<p>This will create a mutable copy of the string literal <code>\"test\"</code> for you.</p>\n", "LastActivityDate": "2013-04-15T15:52:00.527", "Score": "4", "CreationDate": "2013-04-15T15:52:00.527", "ParentId": "16019478", "CommentCount": "0", "OwnerUserId": "224286"}});