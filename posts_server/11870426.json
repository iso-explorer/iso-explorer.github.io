post_cb({"bq_ids": {"n4140": {"so_11870426_11870715_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 5058}}, "n3337": {"so_11870426_11870715_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 4855}}, "n4659": {"so_11870426_11870715_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 6479}}}, "11870426": {"ViewCount": "3124", "Body": "<p>I am using C++ 11's <code>&lt;regex&gt;</code> support, and would like to check whether the beginning of a string matches a regular expression. [I can switch to Boost if that helps, but my impression is that they're basically the same.]</p>\n<p>Obviously if I have control of the actual textual representation of the expression, I can just stick a <code>^</code> at the beginning of it as an anchor.</p>\n<p>However, what if I just have a <code>regex</code> (or <code>basic_regex</code>) object? Can I modify the regular expression it represents to add the anchor? Or do I have to use <code>regex_search</code>, get the result, and check whether it starts at position 0?</p>\n", "AcceptedAnswerId": "11870715", "Title": "C++ 11 regex: checking if string starts with regex", "CreationDate": "2012-08-08T18:01:24.017", "Id": "11870426", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2012-08-09T19:34:35.500", "LastEditorUserId": "636019", "LastActivityDate": "2012-08-09T19:34:35.500", "Score": "9", "OwnerUserId": "362981", "Tags": "<c++><regex><boost><c++11><boost-regex>", "AnswerCount": "1"}, "11870715": {"Id": "11870715", "PostTypeId": "2", "Body": "<p>You could add the <code>std::regex_constants::match_continuous</code> flag when using <code>regex_search</code>, for example, the following prints \"1\" and \"0\":</p>\n<pre><code>#include &lt;regex&gt;\n#include &lt;string&gt;\n\nint main()\n{\n    std::regex rx (\"\\\\d+\");\n\n    printf(\"%d\\n\", std::regex_search(\"12345abc1234\", rx,\n                                     std::regex_constants::match_continuous));\n    printf(\"%d\\n\", std::regex_search(\"abc12345\", rx,\n                                     std::regex_constants::match_continuous));\n    return 0;\n}\n</code></pre>\n<hr>\n<p>The flag means (C++11 \u00a728.5.2/1 = Table 139):</p>\n<blockquote>\n<p id=\"so_11870426_11870715_0\">The expression shall only match a sub-sequence that begins at <code>first</code>.</p>\n</blockquote>\n</hr>", "LastActivityDate": "2012-08-08T18:20:09.257", "CommentCount": "1", "CreationDate": "2012-08-08T18:20:09.257", "ParentId": "11870426", "Score": "10", "OwnerUserId": "224671"}});