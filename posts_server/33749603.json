post_cb({"33749655": {"ParentId": "33749603", "CommentCount": "0", "Body": "<p>$12.7/4 Construction and destruction [class.cdtor] (bold by me)</p>\n<blockquote>\n<p id=\"so_33749603_33749655_0\">Member functions, including virtual functions (10.3), can be called\n  during construction or destruction (12.6.2). When a virtual function\n  is called directly or indirectly from a constructor or from a\n  destructor, including during the construction or destruction of the\n  class\u2019s non-static data members, and the object to which the call\n  applies is the object (call it x) under construction or destruction,\n  <strong>the function called is the final overrider in the constructor\u2019s or\n  destructor\u2019s class and not one overriding it in a more-derived class.</strong>\n  If the virtual function call uses an explicit class member access\n  (5.2.5) and the object expression refers to the complete object of x\n  or one of that object\u2019s base class subobjects but not x or one of its\n  base class subobjects, the behavior is undefined. [ Example:</p>\n<pre><code>struct V {\n  virtual void f();\n  virtual void g();\n};\nstruct A : virtual V {\n  virtual void f();\n};\nstruct B : virtual V {\n  virtual void g();\n  B(V*, A*);\n};\nstruct D : A, B {\n  virtual void f();\n  virtual void g();\n  D() : B((A*)this, this) { }\n};\nB::B(V* v, A* a) {\n  f(); // calls V::f, not A::f\n  g(); // calls B::g, not D::g\n  v-&gt;g(); // v is base of B, the call is well-defined, calls B::g\n  a-&gt;f(); // undefined behavior, a\u2019s type not a base of B\n}\n</code></pre>\n<p id=\"so_33749603_33749655_1\">\u2014end example ]</p>\n</blockquote>\n", "OwnerUserId": "3309790", "PostTypeId": "2", "Id": "33749655", "Score": "2", "CreationDate": "2015-11-17T05:15:40.550", "LastActivityDate": "2015-11-17T05:15:40.550"}, "bq_ids": {"n4140": {"so_33749603_33749655_0": {"section_id": 447, "quality": 0.9466666666666667, "length": 71}}, "n3337": {"so_33749603_33749655_0": {"section_id": 438, "quality": 0.9466666666666667, "length": 71}}, "n4659": {"so_33749603_33749655_0": {"section_id": 469, "quality": 0.9466666666666667, "length": 71}}}, "33749603": {"CommentCount": "0", "ViewCount": "32", "CreationDate": "2015-11-17T05:10:25.953", "LastActivityDate": "2015-11-17T05:15:40.550", "Title": "where is the section in the standard regarding \"virtual function call in base constructor\"", "AcceptedAnswerId": "33749655", "PostTypeId": "1", "Id": "33749603", "Score": "1", "Body": "<p>Virtual function calls inside a base constructor invoke the one of the base, not of the derived classes.</p>\n<p>In which section does the iso-cpp standard discuss this?</p>\n", "Tags": "<c++><standards>", "OwnerUserId": "855160", "AnswerCount": "1"}});