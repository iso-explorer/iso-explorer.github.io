post_cb({"34597959": {"CommentCount": "2", "ViewCount": "56", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2016-01-04T18:58:54.423", "LastActivityDate": "2016-01-04T19:00:46.413", "Title": "What guarantees does the C++ standard give for narrowing conversion from double to int?", "AcceptedAnswerId": "34597989", "LastEditDate": "2017-05-23T10:28:21.563", "Id": "34597959", "Score": "1", "Body": "<p>What guarantees does the C++ standard give for narrowing conversion from double to int types?\nIs it the same as Java as explained at <a href=\"https://stackoverflow.com/questions/31328190/rules-governing-narrowing-of-double-to-int\">Q31328190</a>: </p>\n", "Tags": "<c++><casting><standards><narrowing>", "OwnerUserId": "1531175", "AnswerCount": "1"}, "34597989": {"ParentId": "34597959", "CommentCount": "1", "CreationDate": "2016-01-04T19:00:46.413", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "34597989", "Score": "5", "Body": "<p>No, it's not the same as in Java. If the mathematical result of \"truncate the fractional part\" cannot be represented by the target type, the behaviour is undefined.</p>\n<p>From 4.9 [conv.fpint]/1 (\"Floating-integral conversions\"):</p>\n<blockquote>\n<p id=\"so_34597959_34597989_0\">A prvalue of a floating point type can be converted to a prvalue of an integer type. The conversion truncates; that is, the fractional part is discarded. The behavior is undefined if the truncated value cannot be represented in the destination type.</p>\n</blockquote>\n", "LastActivityDate": "2016-01-04T19:00:46.413"}, "bq_ids": {"n4140": {"so_34597959_34597989_0": {"section_id": 37, "quality": 0.9166666666666666, "length": 22}}, "n3337": {"so_34597959_34597989_0": {"section_id": 34, "quality": 0.9166666666666666, "length": 22}}, "n4659": {"so_34597959_34597989_0": {"section_id": 37, "quality": 0.8333333333333334, "length": 20}}}});