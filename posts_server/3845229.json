post_cb({"3845256": {"ParentId": "3845229", "CommentCount": "3", "CreationDate": "2010-10-02T10:22:12.127", "OwnerUserId": "165520", "PostTypeId": "2", "Id": "3845256", "Score": "1", "Body": "<p>C++03 14.3.2</p>\n<blockquote>\n<p id=\"so_3845229_3845256_0\">Template non-type arguments</p>\n<p id=\"so_3845229_3845256_1\">A template-argument for a non-type, non-template template-parameter shall be one of:</p>\n<p id=\"so_3845229_3845256_2\">\u2014  an integral constant-expression of integral or enumeration type; or</p>\n<p id=\"so_3845229_3845256_3\">\u2014  the name of a non-type template-parameter; or</p>\n<p id=\"so_3845229_3845256_4\">\u2014  the  address  of  an  object  or  function  with  external  linkage,  including  function  templates  and  function\n  template-ids  but  excluding  non-static  class  members,  expressed  as  &amp; id-expression  where  the  &amp; is\n  optional if the name refers to a function or array, or if the corresponding template-parameter is a reference; or\n  \u2014  a pointer to member expressed as described in 5.3.1 .</p>\n</blockquote>\n<p><code>defValue</code> [being a non-type argument] is neither of the above.</p>\n<p>Change <code>int defValue = 0;</code> to <code>const int defValue = 0</code> and your code will compile [see the first condition].</p>\n<p>Or directly write <code>Vec &lt;int,0&gt; vecWithDefVal;</code></p>\n", "LastActivityDate": "2010-10-02T10:22:12.127"}, "3845229": {"CommentCount": "0", "AcceptedAnswerId": "3845256", "PostTypeId": "1", "LastEditorUserId": "165520", "CreationDate": "2010-10-02T10:11:08.973", "LastActivityDate": "2011-12-21T16:49:20.997", "LastEditDate": "2010-10-02T16:12:29.573", "ViewCount": "1131", "FavoriteCount": "1", "Title": "templates value `defValue' cannot appear in a constant- expression", "Id": "3845229", "Score": "3", "Body": "<p>As i understood, template value need to be known in compilation time.\nso i write a little example just to see that i get it, but apperantly i didn't.\nso i get this:</p>\n<pre><code>`defValue' cannot appear in a constant-\n expression\n</code></pre>\n<p>can anyone please what is the problem and how it can be fixed?</p>\n<pre><code>#include &lt;iostream&gt;\ntemplate &lt;class T,T defaultVal, int dim=255&gt;\nclass Vec\n{\n    T _vec[dim];\n    int _dim;\n    public:\n    Vec () : _dim(dim)\n    {\n       for (int i=0;i&lt;_dim;++i)\n       {\n         _vec[i] = defaultVal;\n       }\n    }\n    ~Vec () {};\n// other operators and stuff\n};\n\nint main ()\n{\n    int defValue = 0;\n    Vec &lt; int,defValue &gt; vecWithDefVal;// here is the problem but i don't know why\n}\n</code></pre>\n", "Tags": "<c++><templates>", "OwnerUserId": "432679", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_3845229_3845256_1": {"section_id": 87, "quality": 1.0, "length": 5}, "so_3845229_3845256_2": {"section_id": 676, "quality": 0.8, "length": 4}, "so_3845229_3845256_4": {"section_id": 87, "quality": 0.9354838709677419, "length": 29}}, "n3337": {"so_3845229_3845256_1": {"section_id": 82, "quality": 1.0, "length": 5}, "so_3845229_3845256_2": {"section_id": 666, "quality": 0.8, "length": 4}, "so_3845229_3845256_4": {"section_id": 82, "quality": 0.9032258064516129, "length": 28}}, "n4659": {"so_3845229_3845256_2": {"section_id": 704, "quality": 0.8, "length": 4}}}, "3845236": {"ParentId": "3845229", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2010-10-02T10:13:29.470", "Score": "1", "LastEditorUserId": "129570", "LastEditDate": "2010-10-02T10:21:48.737", "Id": "3845236", "OwnerUserId": "129570", "Body": "<p>Templates can only be parametrised by types and compile-time constants of basic types.  So <code>Vec &lt; int,0 &gt; vecWithDefVal;</code> would be ok.</p>\n", "LastActivityDate": "2010-10-02T10:21:48.737"}});