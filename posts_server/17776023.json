post_cb({"17776023": {"CommentCount": "5", "ViewCount": "842", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2013-07-21T19:28:00.657", "LastActivityDate": "2013-07-21T20:03:33.310", "Title": "Some bytes are missing after reading an std::ifstream to a vector of lines", "AcceptedAnswerId": "17776162", "LastEditDate": "2017-05-23T11:53:06.560", "Id": "17776023", "Score": "5", "Body": "<p>For copying what I read from input file to vector, I used <code>std::copy()</code> as recommended in <a href=\"https://stackoverflow.com/questions/1675508/reading-an-stdifstream-to-a-vector-of-lines\">Reading an std::ifstream to a vector of lines</a>.</p>\n<p>The problem occurs if I use: </p>\n<pre><code>std::copy(std::istream_iterator&lt;unsigned char&gt;(inputfile),\n          std::istream_iterator&lt;unsigned char&gt;(),\n          std::back_inserter(myVector));\n</code></pre>\n<p>The 16th byte of my file is missing in the <code>myVector</code> variable.</p>\n<p>But if I use the following code:</p>\n<pre><code>inputfile.read((char*)&amp;myVector[0], sizeof(int)*getfilesize(nameOfFile));\n</code></pre>\n<p>Then the byte is not missing anymore. </p>\n<p>I am trying to parse WAV files and I lost too much time on this, I hope I will learn something new out of this. Can you please tell me what is wrong with the first version of the code above? </p>\n", "Tags": "<c++><istream-iterator>", "OwnerUserId": "1745372", "AnswerCount": "3"}, "17776228": {"ParentId": "17776023", "CommentCount": "2", "Body": "<p>Like RiaD said, <code>istream_iterator</code> performs formatted input via <code>operator &gt;&gt;</code>. The solution is to use unformatted reading on the underlying buffer. To do this, use <code>istreambuf_iterator</code>:</p>\n<pre><code>std::copy(std::istreambuf_iterator&lt;char&gt;(inputfile),\n          std::istreambuf_iterator&lt;char&gt;(),\n          std::back_inserter(myVector));\n</code></pre>\n", "OwnerUserId": "1968", "PostTypeId": "2", "Id": "17776228", "Score": "5", "CreationDate": "2013-07-21T19:49:34.523", "LastActivityDate": "2013-07-21T19:49:34.523"}, "17776162": {"ParentId": "17776023", "PostTypeId": "2", "CommentCount": "3", "Body": "<p><code>istream_iterator</code> uses <code>operator &gt;&gt;</code> to read elements, but <code>operator &gt;&gt;</code> skip whitespaces.</p>\n<p>You may try using <a href=\"http://www.cplusplus.com/reference/ios/noskipws/\" rel=\"nofollow\"><code>noskipws</code></a></p>\n<pre><code>inputfile &gt;&gt; noskipws;\n</code></pre>\n<p>\u00a7 24.6.1 p1. (my emphasis)</p>\n<blockquote>\n<p id=\"so_17776023_17776162_0\">The class template <code>istream_iterator</code> is an input iterator (24.2.3) that reads <strong>(using operator&gt;&gt;)</strong> successive\n  elements from the input stream for which it was constructed....</p>\n</blockquote>\n", "OwnerUserId": "768110", "LastEditorUserId": "768110", "LastEditDate": "2013-07-21T20:03:33.310", "Id": "17776162", "Score": "6", "CreationDate": "2013-07-21T19:43:39.790", "LastActivityDate": "2013-07-21T20:03:33.310"}, "bq_ids": {"n4140": {"so_17776023_17776162_0": {"section_id": 5694, "quality": 0.875, "length": 14}}, "n3337": {"so_17776023_17776162_0": {"section_id": 5477, "quality": 0.875, "length": 14}}, "n4659": {"so_17776023_17776162_0": {"section_id": 7139, "quality": 0.875, "length": 14}}}, "17776163": {"ParentId": "17776023", "CommentCount": "1", "Body": "<p>First of all wav file is a binary data, so you should treat it as such, you should open your file in binary mode:</p>\n<pre><code>ifstream ifs;\nifs.open (\"test.wav\", ifstream::in | ifstream::binary);\n</code></pre>\n<p>Then, you have to use ordinary read function that works as you stated.</p>\n<p><a href=\"http://www.cplusplus.com/reference/fstream/ifstream/\" rel=\"nofollow\">ifstream documentation</a> </p>\n", "OwnerUserId": "2556407", "PostTypeId": "2", "Id": "17776163", "Score": "1", "CreationDate": "2013-07-21T19:43:40.357", "LastActivityDate": "2013-07-21T19:43:40.357"}});