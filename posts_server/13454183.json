post_cb({"bq_ids": {"n4140": {"so_13454183_13454256_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 5347}, "so_13454183_13454256_0": {"length": 9, "quality": 0.9, "section_id": 5316}}, "n3337": {"so_13454183_13454256_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 5144}, "so_13454183_13454256_0": {"length": 9, "quality": 0.9, "section_id": 5113}}, "n4659": {"so_13454183_13454256_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 6772}, "so_13454183_13454256_0": {"length": 9, "quality": 0.9, "section_id": 6740}}}, "13454183": {"ViewCount": "109", "Body": "<p>I know that first 128 symbols of char type are <a href=\"http://en.wikipedia.org/wiki/ASCII\" rel=\"nofollow\">ASCII symbols</a>, I mean if you print them, they are figured as it is in ASCII table. Now what about the rest of them? The other 128 symbols are not strictly defined as I understand. On what it depends what will be printed if I print all possible char values like below? </p>\n<pre><code> char a = 0;\n for (int i = 0; i &lt; 256; i++)\n {\n    if (i == 128)\n       cout &lt;&lt; \"------------------------------\" &lt;&lt;endl;\n    cout &lt;&lt; a++ &lt;&lt;endl;\n }\n</code></pre>\n<p>Can I configure the output?</p>\n", "AcceptedAnswerId": "13454256", "Title": "C++ char type values are defined by OS?", "CreationDate": "2012-11-19T12:49:26.937", "Id": "13454183", "CommentCount": "3", "LastEditDate": "2012-11-19T12:50:55.527", "PostTypeId": "1", "LastEditorUserId": "46642", "LastActivityDate": "2012-11-19T12:59:49.460", "Score": "0", "OwnerUserId": "163394", "Tags": "<c++><unicode><char>", "AnswerCount": "2"}, "13454276": {"Id": "13454276", "PostTypeId": "2", "Body": "<p>Since the terminal interprets the bytes written by <code>std::cout</code>, you can usually configure your terminal to show the bytes as Latin-1, Latin-15, Cyrillic, or anything else you want.</p>\n<p>In your program, you cannot configure how it is shown on the display. The only thing you can do is, how the bytes are interpreted by your code. So, in order to use Latin-1, both your program and the terminal must aggree about the meaning of these bytes to be Latin-1.</p>\n", "LastActivityDate": "2012-11-19T12:54:23.473", "CommentCount": "0", "CreationDate": "2012-11-19T12:54:23.473", "ParentId": "13454183", "Score": "1", "OwnerUserId": "1741542"}, "13454256": {"Id": "13454256", "PostTypeId": "2", "Body": "<p>The first 128 values of <code>char</code> do not necessarily correspond with the ASCII characters. The values of <code>char</code> correspond to characters in the <em>execution character set</em> which is an implementation-defined set. The values of the members of this character set are locale-specific (\u00a72.3/3):</p>\n<blockquote>\n<p id=\"so_13454183_13454256_0\">The values of the members of the execution character sets and the sets of additional members are locale-specific.</p>\n</blockquote>\n<p>A character literal, such as <code>'a'</code>, has type <code>char</code> and value equal to that characters value in the execution character set. Likewise for string literals. If a character in your literals falls outside the implementation-defined execution character set, it has an implementation-defined value (\u00a72.14.4/5):</p>\n<blockquote>\n<p id=\"so_13454183_13454256_1\">If there is no such encoding, the universal-character-name is translated to an implementation-defined encoding.</p>\n</blockquote>\n<p>In many compilers, you can configure the execution character set. For example, with <code>g++</code>, you can use the <code>-fexec-charset</code> option.</p>\n<p>Once you output your text, the interpretation of it is up to the medium in which it is being viewed, such as a terminal.</p>\n", "LastEditorUserId": "150634", "LastActivityDate": "2012-11-19T12:59:49.460", "Score": "3", "CreationDate": "2012-11-19T12:53:23.257", "ParentId": "13454183", "CommentCount": "0", "OwnerUserId": "150634", "LastEditDate": "2012-11-19T12:59:49.460"}});