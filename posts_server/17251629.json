post_cb({"bq_ids": {"n4140": {"so_17251629_17251909_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 751}}, "n3337": {"so_17251629_17251909_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 739}}, "n4659": {"so_17251629_17251909_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 811}}}, "17251629": {"ViewCount": "437", "Body": "<p>I was wandering the C++ specifications (cplusplus.com) and found that there's nothing told about exception safety for std::unordered_map</p>\n<p>so basically if I write</p>\n<pre><code>map[\"foo\"]=5;\n</code></pre>\n<p>and an exception is thrown because I'm out of memory or bad_alloc, what can I assume about my map?</p>\n<ul>\n<li>It is left in a valid state? (basic guarantee)</li>\n<li>It is left unchanged? (strong guarantee)</li>\n<li>It is left in unvalid state ? (no guarantee)</li>\n</ul>\n", "AcceptedAnswerId": "17251909", "Title": "C++ unordered_map exception safety", "CreationDate": "2013-06-22T14:09:49.170", "Id": "17251629", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-06-22T14:40:28.587", "Score": "1", "OwnerUserId": "1829943", "Tags": "<c++11><unordered-map><exception-safety>", "AnswerCount": "1"}, "17251909": {"Id": "17251909", "PostTypeId": "2", "Body": "<p>23.2.4.1  Exception safety guarantees [associative.reqmts.except]</p>\n<blockquote>\n<p id=\"so_17251629_17251909_0\">2 For associative containers, if an exception is thrown by any\n  operation from within an insert or emplace function inserting a single\n  element, the insertion has no eftect.</p>\n</blockquote>\n<p>This paragraph applies to the indexing operator.  So:</p>\n<ul>\n<li>It is left unchanged. (strong guarantee)</li>\n</ul>\n", "LastActivityDate": "2013-06-22T14:40:28.587", "CommentCount": "1", "CreationDate": "2013-06-22T14:40:28.587", "ParentId": "17251629", "Score": "4", "OwnerUserId": "576911"}});