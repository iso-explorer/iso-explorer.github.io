post_cb({"45692735": {"Id": "45692735", "PostTypeId": "2", "Body": "<p>Whether or not this is a good idea, as an example, your code is fine..   </p>\n<p>You may replace the atomic type of <code>a</code> with a regular <code>int</code> (or any type for that matter).<br>\nThe C++ standard supports your case with the following phrase (\u00a7 1.10.1-6):</br></p>\n<blockquote>\n<p id=\"so_45689529_45692735_0\">Certain library calls synchronize with other library calls performed by another thread. For example, an atomic store-release synchronizes with a load-acquire that takes its value from the store</p>\n</blockquote>\n<p>Since <code>threadB</code> loads the value of <code>ready</code> stored by <code>threadA</code> (it is waiting for it in a loop), the <em>synchronizes-with</em> relationship is established.\nTherefore, <code>a.load()</code> observes the memory effects of <code>a.store()</code>.  Another way to say this is that <code>a.store()</code> <em>happens-before</em> <code>a.load()</code></p>\n", "LastActivityDate": "2017-08-15T12:20:14.423", "CommentCount": "1", "CreationDate": "2017-08-15T12:20:14.423", "ParentId": "45689529", "Score": "1", "OwnerUserId": "6651824"}, "bq_ids": {"n4140": {"so_45689529_45692735_0": {"length": 18, "quality": 0.9, "section_id": 5821}}, "n3337": {"so_45689529_45692735_0": {"length": 18, "quality": 0.9, "section_id": 5592}}, "n4659": {"so_45689529_45692735_0": {"length": 18, "quality": 0.9, "section_id": 7282}}}, "45689529": {"ViewCount": "59", "Body": "<p>Let's say we have this piece of code that it is correct (I hope at least) :</p>\n<pre><code>std::atomic&lt;int&gt; a;\nstd::atomic&lt;bool&gt; ready{false};\nvoid threadA() {\n    a.store(666, std::memory_order_relaxed);\n    ready.store(true, std::memory_order_release);\n}\n\nvoid threadB() {\n    while(!ready.load(std::memory_order_acquire));\n    process(a.load(std::memory_order_relaxed));\n}\n</code></pre>\n<p>My question is : In the case you are using a <code>int a;</code> instead of <code>std::atomic&lt;int&gt; a;</code>, it is correct as well? Or is there a problem of cache flushing / invalidation?</p>\n", "AcceptedAnswerId": "45692735", "Title": "mix atomic and non atomic variables and caches", "CreationDate": "2017-08-15T08:50:23.413", "Id": "45689529", "CommentCount": "4", "PostTypeId": "1", "LastActivityDate": "2017-08-15T12:20:14.423", "Score": "0", "OwnerUserId": "4950448", "Tags": "<c++><multithreading><c++11><atomic>", "AnswerCount": "1"}});