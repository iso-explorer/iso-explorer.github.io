post_cb({"748059": {"ParentId": "748014", "PostTypeId": "2", "CommentCount": "13", "CreationDate": "2009-04-14T15:09:35.060", "Score": "178", "LastEditorUserId": "4928", "LastEditDate": "2011-05-04T14:14:14.720", "Id": "748059", "OwnerUserId": "8701", "Body": "<p>NO </p>\n<p>This is what RAII is for, let the destructor do its job.  There is no harm in closing it manually, but it's not the C++ way, it's programming in C with classes.</p>\n<p>If you want to close the file before the end of a function you can always use a nested scope.</p>\n<p>In the standard (27.8.1.5 Class template basic_ifstream), <code>ifstream</code> is to be implemented with a <code>basic_filebuf</code> member holding the actual file handle.  It is held as a member so that when an ifstream object destructs, it also calls the destructor on <code>basic_filebuf</code>.  And from the standard (27.8.1.2), that destructor closes the file:</p>\n<blockquote>\n<p id=\"so_748014_748059_0\"><code>virtual \u02dcbasic_filebuf();</code></p>\n<p id=\"so_748014_748059_1\"><strong>Effects:</strong> Destroys an object of class <code>basic_filebuf&lt;charT,traits&gt;</code>. Calls <code>close()</code>.</p>\n</blockquote>\n", "LastActivityDate": "2011-05-04T14:14:14.720"}, "748014": {"CommentCount": "0", "AcceptedAnswerId": "748059", "PostTypeId": "1", "LastEditorUserId": "1950231", "CreationDate": "2009-04-14T14:59:26.160", "LastActivityDate": "2014-11-04T21:19:57.040", "LastEditDate": "2014-11-04T21:19:57.040", "ViewCount": "44739", "FavoriteCount": "25", "Title": "Do I need to manually close an ifstream?", "Id": "748014", "Score": "134", "Body": "<p>Do I need to manually call <code>close()</code> when I use a <code>std::ifstream</code>?</p>\n<p>For example, in the code:</p>\n<pre><code>std::string readContentsOfFile(std::string fileName) {\n\n  std::ifstream file(fileName.c_str());\n\n  if (file.good()) {\n      std::stringstream buffer;\n      buffer &lt;&lt; file.rdbuf();\n      file.close();\n\n      return buffer.str();\n  }\n  throw std::runtime_exception(\"file not found\");\n}\n</code></pre>\n<p>Do I need to call <code>file.close()</code> manually? Shouldn't <code>ifstream</code> make use of <a href=\"http://en.wikipedia.org/wiki/Resource_Acquisition_Is_Initialization\" rel=\"noreferrer\">RAII</a> for closing files?</p>\n", "Tags": "<c++><ifstream><raii>", "OwnerUserId": "61915", "AnswerCount": "4"}, "6699693": {"ParentId": "748014", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2011-07-14T20:45:00.663", "Score": "8", "LastEditorUserId": "1334550", "LastEditDate": "2012-11-17T04:26:22.527", "Id": "6699693", "OwnerUserId": "845378", "Body": "<p>I agree with @Martin. If you write to the file, the data may still be sitting on a buffer and may not get written to the file until <code>close()</code> is called. Without doing it manually, you have no idea whether there was an error or not. Not reporting errors to a user is a very bad practice.</p>\n", "LastActivityDate": "2012-11-17T04:26:22.527"}, "748196": {"ParentId": "748014", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2009-04-14T15:44:45.477", "Score": "42", "LastEditorUserId": "694865", "LastEditDate": "2012-02-14T19:58:05.153", "Id": "748196", "OwnerUserId": "14065", "Body": "<p>Do you need to close the file?<br>\nNO</br></p>\n<p>Should you close the file?<br>\nDepends.</br></p>\n<p>Do you care about the possible error conditions that could occur if the file fails to close correctly? Remember that close calls setstate(failbit) if it fails. The destructor will call close() for you automatically  because of <strong>RAII</strong> but will not leave you a way of testing the fail bit as the object no longer exists.</p>\n", "LastActivityDate": "2012-02-14T19:58:05.153"}, "bq_ids": {"n4140": {"so_748014_748059_1": {"section_id": 2420, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_748014_748059_1": {"section_id": 2405, "quality": 0.8571428571428571, "length": 6}}, "n4659": {"so_748014_748059_1": {"section_id": 2695, "quality": 0.7142857142857143, "length": 5}}}, "750914": {"ParentId": "748014", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2009-04-15T09:24:43.820", "Score": "4", "LastEditorUserId": "449684", "LastEditDate": "2011-04-29T13:26:58.793", "Id": "750914", "OwnerUserId": "74612", "Body": "<p>No, this is done automatically by the ifstream destructor. The only reason you should call it manually, is because the fstream instance has a big scope, for example if it is a member variable of a long living class instance.</p>\n", "LastActivityDate": "2011-04-29T13:26:58.793"}});