post_cb({"33016799": {"ParentId": "33015748", "CommentCount": "0", "Body": "<p>Just to add some practical infos:</p>\n<p>This is the warning you would get with:</p>\n<p>gcc -Wall test.c</p>\n<blockquote>\n<p id=\"so_33015748_33016799_0\">warning: control reaches end of non-void function [-Wreturn-type]</p>\n</blockquote>\n<p>its not saying anything about main (I hoped it will show something)</p>\n<p>And this is the backtrace if you would run the app in gdb:</p>\n<p><code>gdb ./a.out</code></p>\n<p>..</p>\n<pre><code>Program received signal SIGSEGV, Segmentation fault. 0x00007ffff7a8dffe in _IO_new_file_write (f=0x7ffff7dd4400 &lt;_IO_2_1_stdout_&gt;, data=0x7ffff7ff7000, n=5) at fileops.c:1261 1261    fileops.c: No such file or directory. (gdb) bt\n#0  0x00007ffff7a8dffe in _IO_new_file_write (f=0x7ffff7dd4400 &lt;_IO_2_1_stdout_&gt;, data=0x7ffff7ff7000, n=5) at fileops.c:1261\n#1  0x00007ffff7a8f4dc in new_do_write (to_do=5, data=0x7ffff7ff7000 \"WORK\\n\", fp=0x7ffff7dd4400 &lt;_IO_2_1_stdout_&gt;) at fileops.c:538\n#2  _IO_new_do_write (fp=fp@entry=0x7ffff7dd4400 &lt;_IO_2_1_stdout_&gt;, data=0x7ffff7ff7000 \"WORK\\n\", to_do=5) at fileops.c:511\n#3  0x00007ffff7a8f8b3 in _IO_new_file_overflow (f=0x7ffff7dd4400 &lt;_IO_2_1_stdout_&gt;, ch=10) at fileops.c:876\n#4  0x00007ffff7a84f72 in _IO_puts (str=0x4005d4 \"WORK\") at ioputs.c:42\n#5  0x000000000040053b in main ()\n</code></pre>\n", "OwnerUserId": "3876138", "PostTypeId": "2", "Id": "33016799", "Score": "0", "CreationDate": "2015-10-08T13:07:48.233", "LastActivityDate": "2015-10-08T13:07:48.233"}, "33016122": {"ParentId": "33015748", "CommentCount": "0", "Body": "<p>The better question is <em>what do you expect to happen with this code?</em></p>\n<p>You've got an infinitely recursive function that continually adds to the standard output stream. Of course you're getting an error- you're continually allocating \"WORK\" strings onto your stack, which is going to overflow. I'm not sure that happens when you push too much data into the standard output stream, but that can't be healthy either. </p>\n", "OwnerUserId": "1601255", "PostTypeId": "2", "Id": "33016122", "Score": "0", "CreationDate": "2015-10-08T12:41:06.613", "LastActivityDate": "2015-10-08T12:41:06.613"}, "33015945": {"ParentId": "33015748", "CommentCount": "0", "Body": "<p>What actually seems to happen is the real <a href=\"https://en.wikipedia.org/wiki/Stack_overflow\" rel=\"nofollow\">stack overflow</a>. You have a recursive function and it goes into infinite recursion, so at some time moment it runs out of stack.</p>\n", "OwnerUserId": "3216312", "PostTypeId": "2", "Id": "33015945", "Score": "1", "CreationDate": "2015-10-08T12:33:54.987", "LastActivityDate": "2015-10-08T12:33:54.987"}, "33015960": {"ParentId": "33015748", "CommentCount": "0", "Body": "<p>First, you eventually get a stack overflow because you have an endless recursion. What did you think would happen?</p>\n<p>Second, standard C++ doesn't allow you to call <code>main</code>. Your code is invalid and a compiler would be justified (and smart) in doing so.</p>\n", "OwnerUserId": "8922", "PostTypeId": "2", "Id": "33015960", "Score": "1", "CreationDate": "2015-10-08T12:34:29.300", "LastActivityDate": "2015-10-08T12:34:29.300"}, "33015952": {"ParentId": "33015748", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>The C++ standard 3.6.1/3 does not permit you to call main() inside main()</p>\n<blockquote>\n<p id=\"so_33015748_33015952_0\">The function main shall not be used (3.2) within a program. The linkage (3.5) of main is implementation defined. A program that declares main to be inline or static is illformed. The name main is not otherwise reserved. [Example: member functions, classes, and enumerations can be called main, as can entities in other namespaces. ]</p>\n</blockquote>\n<p>You are eventually getting a stack overflow.(<em>Actually it's an undefined behavior by calling main inside main</em>)</p>\n<p>The <strong>used(3.2)</strong> says:</p>\n<blockquote>\n<p id=\"so_33015748_33015952_1\">An object or non-overloaded function is used if its name appears in a\n  potentially-evaluated expression.</p>\n</blockquote>\n<p>And also see this:</p>\n<blockquote>\n<p id=\"so_33015748_33015952_2\"><strong>5.2.2.9</strong><br>\n  \"Recursive calls are permitted, <strong>except to the function named main</strong>\"</br></p>\n</blockquote>\n", "OwnerUserId": "1501794", "LastEditorUserId": "1501794", "LastEditDate": "2015-10-08T12:49:29.770", "Id": "33015952", "Score": "7", "CreationDate": "2015-10-08T12:34:14.537", "LastActivityDate": "2015-10-08T12:49:29.770"}, "bq_ids": {"n4140": {"so_33015748_33015952_2": {"section_id": 5996, "quality": 0.625, "length": 5}, "so_33015748_33016799_0": {"section_id": 3360, "quality": 0.5714285714285714, "length": 4}, "so_33015748_33015952_0": {"section_id": 7147, "quality": 0.8064516129032258, "length": 25}, "so_33015748_33015952_1": {"section_id": 7040, "quality": 0.75, "length": 6}}, "n3337": {"so_33015748_33015952_2": {"section_id": 5764, "quality": 0.875, "length": 7}, "so_33015748_33016799_0": {"section_id": 3230, "quality": 0.5714285714285714, "length": 4}, "so_33015748_33015952_0": {"section_id": 6891, "quality": 0.8064516129032258, "length": 25}, "so_33015748_33015952_1": {"section_id": 6785, "quality": 0.625, "length": 5}}, "n4659": {"so_33015748_33015952_2": {"section_id": 7497, "quality": 0.625, "length": 5}, "so_33015748_33016799_0": {"section_id": 4126, "quality": 0.5714285714285714, "length": 4}, "so_33015748_33015952_0": {"section_id": 8648, "quality": 0.7741935483870968, "length": 24}, "so_33015748_33015952_1": {"section_id": 8537, "quality": 0.75, "length": 6}}}, "33015748": {"CommentCount": "9", "ViewCount": "89", "PostTypeId": "1", "LastEditorUserId": "5423046", "CreationDate": "2015-10-08T12:25:31.910", "LastActivityDate": "2015-10-20T17:22:30.880", "Title": "when i try to call main it work for few times but then i got Segmentation fault", "AcceptedAnswerId": "33015952", "LastEditDate": "2015-10-20T17:22:30.880", "Id": "33015748", "Score": "2", "Body": "<p>why i m seeing segmentation fault?\nCode:</p>\n<pre><code>#include&lt;stdio.h&gt;\n int main()\n {\n  puts(\"WORK\");\n  main();\n }\n</code></pre>\n<p>[<img alt=\"how i run program\" src=\"https://i.stack.imgur.com/an4qb.png\">]\n[<img alt=\"screenshot of error\" src=\"https://i.stack.imgur.com/yJcAE.png\">]</img></img></p>\n", "Tags": "<c++>", "OwnerUserId": "5423046", "AnswerCount": "5"}});