post_cb({"26807391": {"Id": "26807391", "PostTypeId": "2", "Body": "<p>It is legal and will reserve no space. Though if the call is lower than its capacity the call will do nothing.</p>\n", "LastEditorUserId": "4027338", "LastActivityDate": "2014-11-07T18:54:50.063", "Score": "2", "CreationDate": "2014-11-07T18:07:34.970", "ParentId": "26807356", "CommentCount": "2", "OwnerUserId": "4027338", "LastEditDate": "2014-11-07T18:54:50.063"}, "26807444": {"Id": "26807444", "PostTypeId": "2", "Body": "<p>There's nothing to prohibit it. The effect of <code>reserve</code> is:</p>\n<blockquote>\n<p id=\"so_26807356_26807444_0\">After reserve(), capacity() is greater or equal to the argument of reserve if\n  reallocation happens; and equal to the previous value of capacity() otherwise. Reallocation happens\n  at this point if and only if the current capacity is less than the argument of reserve().<sup>1</sup></p>\n</blockquote>\n<p>Since the value of <code>capacity()</code> can never be less than 0 (it's unsigned), this can never have any effect; it can never cause a reallocation.</p>\n<hr>\n<p><sup>\n1. c++ standard, [vector.capacity]\n</sup></p>\n</hr>", "LastEditorUserId": "179910", "LastActivityDate": "2014-11-07T18:49:11.260", "Score": "20", "CreationDate": "2014-11-07T18:11:37.373", "ParentId": "26807356", "CommentCount": "3", "OwnerUserId": "179910", "LastEditDate": "2014-11-07T18:49:11.260"}, "26807790": {"Id": "26807790", "PostTypeId": "2", "Body": "<p>First of all, you should try to understand how Vector works. It is an array that reserve memory in order to use it when you need to store a new value trying to do the insert operation faster and efficient.</p>\n<p>With <code>std::vector::reserve()</code> you can determine the amount of memory that you want to reserve, in your case, zero. </p>\n<p>In case you want to add another value to your vector and the reserve space is zero, it will work with no problem at all, but the operation will be slower. It could be a problem if you want to do this for a lot of values, but probably you won't notice this if you do it just a few times.</p>\n", "LastEditorUserId": "908174", "LastActivityDate": "2014-11-07T18:44:35.223", "Score": "0", "CreationDate": "2014-11-07T18:32:23.997", "ParentId": "26807356", "CommentCount": "0", "OwnerUserId": "4211078", "LastEditDate": "2014-11-07T18:44:35.223"}, "26807418": {"Id": "26807418", "PostTypeId": "2", "Body": "<p>The <a href=\"http://en.cppreference.com/w/cpp/container/vector/reserve\" rel=\"nofollow\">documentation</a> provides a clear answer to this:</p>\n<blockquote>\n<p id=\"so_26807356_26807418_0\">Increase the capacity of the container to a value that's greater or equal to <code>new_cap</code>. If <code>new_cap</code> is greater than the current <code>capacity()</code>, new storage is allocated, otherwise the method does nothing.</p>\n</blockquote>\n<p><code>capacity()</code> returns a value that cannot be negative. Hence, passing zero for <code>new_cap</code> always falls into the second category - i.e. when the function does nothing.</p>\n", "LastActivityDate": "2014-11-07T18:09:32.760", "CommentCount": "1", "CreationDate": "2014-11-07T18:09:32.760", "ParentId": "26807356", "Score": "1", "OwnerUserId": "335858"}, "bq_ids": {"n4140": {"so_26807356_26807444_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 969}, "so_26807356_26807506_0": {"length": 23, "quality": 1.0, "section_id": 969}}, "n3337": {"so_26807356_26807444_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 958}, "so_26807356_26807506_0": {"length": 23, "quality": 1.0, "section_id": 958}}, "n4659": {"so_26807356_26807444_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 1031}, "so_26807356_26807506_0": {"length": 23, "quality": 1.0, "section_id": 1031}}}, "26807426": {"Id": "26807426", "PostTypeId": "2", "Body": "<pre><code>void reserve (size_type n);\n</code></pre>\n<p>If n is greater than the current vector capacity, the function causes the container to reallocate its storage increasing its capacity to n (or greater).</p>\n<p>In all other cases, the function call does not cause a reallocation and the vector capacity is not affected.</p>\n", "LastActivityDate": "2014-11-07T18:09:55.600", "CommentCount": "0", "CreationDate": "2014-11-07T18:09:55.600", "ParentId": "26807356", "Score": "1", "OwnerUserId": "4047092"}, "26807406": {"Id": "26807406", "PostTypeId": "2", "Body": "<p>Yes, it is a legal no-op.</p>\n<blockquote>\n<p id=\"so_26807356_26807406_0\">If <code>new_cap</code> is greater than the current <code>capacity()</code>, new storage is allocated, <strong>otherwise the method does nothing.</strong></p>\n</blockquote>\n<p>(<a href=\"http://en.cppreference.com/w/cpp/container/vector/reserve\" rel=\"noreferrer\">Source</a>, emphasis mine.)</p>\n<p>Since <code>capacity()</code> will always be &gt;= 0 (due to <code>size_type</code> being unsigned), passing a zero is guaranteed to do nothing.</p>\n", "LastActivityDate": "2014-11-07T18:08:56.003", "CommentCount": "0", "CreationDate": "2014-11-07T18:08:56.003", "ParentId": "26807356", "Score": "6", "OwnerUserId": "501250"}, "26807356": {"ViewCount": "1087", "Body": "<p>Is <code>std::vector::reserve(0);</code> legal and what will it do?</p>\n", "AcceptedAnswerId": "26807444", "Title": "Is std::vector::reserve(0); legal?", "CreationDate": "2014-11-07T18:06:02.193", "Id": "26807356", "CommentCount": "3", "LastEditDate": "2014-11-07T18:44:32.237", "PostTypeId": "1", "LastEditorUserId": "1030598", "LastActivityDate": "2014-11-07T18:54:50.063", "Score": "8", "OwnerUserId": "1030598", "Tags": "<c++><c++11><vector><stl>", "AnswerCount": "7"}, "26807506": {"Id": "26807506", "PostTypeId": "2", "Body": "<p>According to the C++ Standard</p>\n<blockquote>\n<p id=\"so_26807356_26807506_0\">After reserve(), capacity() is greater or equal to the argument of\n  reserve if reallocation happens; and equal to the previous value of\n  capacity() otherwise. <strong>Reallocation happens at this point if and only\n  if the current capacity is less than the argument of reserve()</strong>.</p>\n</blockquote>\n<p>So there simply will not be a reallocation if the argument of reserve is equal to 0. </p>\n<p>The function itself throws an exception only in one case</p>\n<blockquote>\n<p id=\"so_26807356_26807506_1\">Throws: length_error if n &gt; max_size().</p>\n</blockquote>\n<p>Take into account that <code>reserve( 0 )</code> is not equivalent to <code>resize( 0 )</code>. In the last case all elements of the vector will be removed.</p>\n", "LastEditorUserId": "2877241", "LastActivityDate": "2014-11-07T18:25:49.937", "Score": "2", "CreationDate": "2014-11-07T18:15:34.820", "ParentId": "26807356", "CommentCount": "0", "OwnerUserId": "2877241", "LastEditDate": "2014-11-07T18:25:49.937"}});