post_cb({"bq_ids": {"n4140": {"so_3736350_3736981_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 133}}, "n3337": {"so_3736350_3736981_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 127}}, "n4659": {"so_3736350_3736981_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 137}}}, "3736981": {"Id": "3736981", "PostTypeId": "2", "Body": "<p>This is not allowed by the C++ Standard (\u00a714.5.3/9):</p>\n<blockquote>\n<p id=\"so_3736350_3736981_0\">Friend declarations shall not declare partial specializations. [Example:</p>\n</blockquote>\n<pre><code>template&lt;class T&gt; class A { };\nclass X {\n    template &lt;class T&gt; friend class A&lt;T*&gt;;   //error\n};\n</code></pre>\n<blockquote>\n<p id=\"so_3736350_3736981_1\">--end example]</p>\n</blockquote>\n<p>So basically, you can either make all instantiations of <code>AB</code> friend of <code>D</code> or only one particular instantiation. <a href=\"https://www.ibm.com/support/knowledgecenter/SSQ2R2_8.5.1/com.ibm.tpf.toolkit.compilers.doc/ref/langref_zos/clrc13cplr042.htm#HDRCPLR042\" rel=\"nofollow noreferrer\">This IBM page</a> describes the different relationships that can be achieved when it comes to friends and templates: \"one-to-one\", \"one-to-many\", \"many-to-one\" and \"many-to-many\" (but not \"one-to-some\" as you asked).</p>\n", "LastEditorUserId": "5715272", "LastActivityDate": "2017-09-09T10:12:45.990", "Score": "8", "CreationDate": "2010-09-17T16:04:06.470", "ParentId": "3736350", "CommentCount": "2", "OwnerUserId": "20984", "LastEditDate": "2017-09-09T10:12:45.990"}, "3736350": {"ViewCount": "6866", "Body": "<p>I wana know if we can make a partial specialized class as a friend class.</p>\n<pre><code>template&lt; class A, class B &gt;\nclass AB{};\n\nclass C;\n\ntemplate &lt; class B &gt;\nclass AB&lt; C, B &gt;{};\n\nclass D{\n     template&lt; class E &gt; friend class AB&lt; D, E &gt;;\n}\n</code></pre>\n<p>How to achieve the above.</p>\n", "AcceptedAnswerId": "3736981", "Title": "how to declare a template class as a friend in c++", "CreationDate": "2010-09-17T14:43:52.170", "Id": "3736350", "CommentCount": "2", "LastEditDate": "2010-09-17T15:24:45.630", "PostTypeId": "1", "LastEditorUserId": "138832", "LastActivityDate": "2017-09-09T10:12:45.990", "Score": "9", "OwnerUserId": "138832", "Tags": "<c++>", "AnswerCount": "2"}, "19559757": {"Id": "19559757", "PostTypeId": "2", "Body": "<p>see the answer <a href=\"https://stackoverflow.com/a/12239435/595859\">here</a>, thanks to <a href=\"https://stackoverflow.com/users/16287/drew-dormann\">Drew Dormann</a></p>\n<pre><code>template &lt;class T, class C&gt;\nclass proxy {\n   friend C;\n</code></pre>\n<p>It worked for me.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2013-10-24T07:36:07.917", "Score": "1", "CreationDate": "2013-10-24T07:36:07.917", "ParentId": "3736350", "CommentCount": "0", "OwnerUserId": "595859", "LastEditDate": "2017-05-23T12:17:23.310"}});