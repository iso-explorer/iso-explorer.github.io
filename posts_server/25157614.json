post_cb({"25157729": {"ParentId": "25157614", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>As per <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1905.pdf\" rel=\"noreferrer\">Working Draft, Standard for Programming\nLanguage C++</a>, Chapter 2 Lexical conventions, 2.1 - 2) :</p>\n<blockquote>\n<p id=\"so_25157614_25157729_0\">Each instance of a new-line character and an immediately preceding\n  backslash character a backslash character () immediately followed by\n  a new-line character is deleted, splicing physical source lines to\n  form logical source lines. Only the last backslash on any physical\n  source line shall be eligible for being part of such a splice.</p>\n</blockquote>\n<p>This is also applicable to comments and this is still part of the final version.</p>\n", "OwnerUserId": "840960", "LastEditorUserId": "840960", "LastEditDate": "2014-08-06T10:19:51.403", "Id": "25157729", "Score": "5", "CreationDate": "2014-08-06T10:13:42.573", "LastActivityDate": "2014-08-06T10:19:51.403"}, "25157770": {"ParentId": "25157614", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Do you want to know for C or C++? (<strong>EDIT:</strong> In original question OP asked for C/C++)</p>\n<p>For C following section from <strong>ISO/IEC 9899:TC2 Committee Draft \u2014 May 6, 2005 WG14/N1124</strong> answers your question.</p>\n<p><strong>5.1.1.2 Translation phases</strong></p>\n<blockquote>\n<p id=\"so_25157614_25157770_0\">[2] Each instance of a backslash character () immediately followed by a\n  new-line character is deleted, splicing physical source lines to form\n  logical source lines. Only the last backslash on any physical source\n  line shall be eligible for being part of such a splice. A source file\n  that is not empty shall end in a new-line character, which shall not\n  be immediately preceded by a backslash character before any such\n  splicing takes place.</p>\n</blockquote>\n<p>For C++, you can refer to <a href=\"http://en.cppreference.com/w/cpp/language/translation_phases\" rel=\"nofollow\">Phase 2 at en.cppreference.com</a></p>\n<blockquote>\n<p id=\"so_25157614_25157770_1\">1) Whenever backslash appears at the end of a line (immediately\n  followed by the newline character), both backslash and newline are\n  deleted, combining two physical source lines into one logical source\n  line. This is a single-pass operation, a line ending in two\n  backslashes followed by an empty line does not combine three lines\n  into one). If a universal character name (\\uXXX) is formed on this\n  phase, the behavior is undefined.<br> 2) If a non-empty source file does\n  not end with a newline character after this step (whether it had no\n  newline originally, or it ended with a backslash) the behavior is\n  undefined (until C++11) a terminating newline character is added\n  (since C++11)</br></p>\n</blockquote>\n<p>If your current line is a single line comment, following line would be digested in continuation as a comment.</p>\n", "OwnerUserId": "2659313", "LastEditorUserId": "2659313", "LastEditDate": "2014-08-15T03:52:59.553", "Id": "25157770", "Score": "11", "CreationDate": "2014-08-06T10:15:19.783", "LastActivityDate": "2014-08-15T03:52:59.553"}, "25157614": {"CommentCount": "13", "AcceptedAnswerId": "25157708", "PostTypeId": "1", "LastEditorUserId": "832363", "CreationDate": "2014-08-06T10:08:34.817", "LastActivityDate": "2014-08-15T03:52:59.553", "LastEditDate": "2014-08-07T04:59:05.283", "ViewCount": "3073", "FavoriteCount": "3", "Title": "C++ single line comments followed by \\ transforms in multiline comment", "Id": "25157614", "Score": "45", "Body": "<p>Where is it documented in the C++ Standard the feature that if a line is commented using <code>//some comment\\</code> style (at the end of the line puts <code>\\</code>) the comment is transformed to multiline?</p>\n<p>Tested with g++ 4.8 and VS 2012</p>\n<pre><code>//some interesting stuff\\\nanother interesting stuff\\\netc\n</code></pre>\n", "Tags": "<c++><c>", "OwnerUserId": "832363", "AnswerCount": "6"}, "25157690": {"ParentId": "25157614", "CommentCount": "0", "Body": "<p>A <code>\\</code> followed by a new line is eliminated very early in the\ntranslation process, before the compiler starts looking for\ncomments and the end of comments, see \u00a72.2, Phases of\ntranslation.</p>\n", "OwnerUserId": "649665", "PostTypeId": "2", "Id": "25157690", "Score": "12", "CreationDate": "2014-08-06T10:12:08.177", "LastActivityDate": "2014-08-06T10:12:08.177"}, "25157822": {"ParentId": "25157614", "CommentCount": "4", "Body": "<p>It's in the C++ Standard, like everything about the C++ language. You can download a draft of the C++ Standard for free (for almost everybody except people involved in the design of the C++ language and compiler writers the draft is good enough), just google for \"C++ Standard Draft\". </p>\n", "OwnerUserId": "3255455", "PostTypeId": "2", "Id": "25157822", "Score": "-6", "CreationDate": "2014-08-06T10:17:17.773", "LastActivityDate": "2014-08-06T10:17:17.773"}, "25157694": {"ParentId": "25157614", "PostTypeId": "2", "CommentCount": "3", "Body": "<p><a href=\"http://www.cplusplus.com/forum/general/33653/\" rel=\"noreferrer\">http://www.cplusplus.com/forum/general/33653/</a></p>\n<p>You can add the \"\\\" anywhere in the code and newline will be ignored.</p>\n<p>As a better reference the 2.2 paragraph of the standard:</p>\n<blockquote>\n<p id=\"so_25157614_25157694_0\">Each instance of a backslash character () immediately followed by a new-line \n  character is deleted, splicing physical source lines to\n  form logical source lines. Only the last backslash on any physical\n  source line shall be eligible for being part of such a splice. If, as\n  a result, a character sequence that matches the syntax of a\n  universal-character-name is produced, the behavior is undefined. A\n  source file that is not empty and that does not end in a new-line\n  character, or that ends in a new-line character immediately preceded\n  by a backslash character before any such splicing takes place, shall\n  be processed as if an additional new-line character were appended to\n  the file.</p>\n</blockquote>\n<p>This is not clear regarding what happens if the last character in the\nfile is a backslash. In such a case, presumably the result of adding\nthe newline should not be a line splice but rather a backslash\npreprocessing-token (that will be diagnosed as an invalid token in\nphase 7), but that should be spelled out.</p>\n", "OwnerUserId": "2194336", "LastEditorUserId": "544557", "LastEditDate": "2014-08-06T10:20:59.477", "Id": "25157694", "Score": "7", "CreationDate": "2014-08-06T10:12:16.867", "LastActivityDate": "2014-08-06T10:20:59.477"}, "25157708": {"ParentId": "25157614", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>C++ standard, 2.2 - phases of translation. Phase 2 includes</p>\n<blockquote>\n<p id=\"so_25157614_25157708_0\">Each instance of a backslash character (<code>\\</code>) immediately followed by a new-line character is deleted,\n  splicing physical source lines to form logical source lines.</p>\n</blockquote>\n<p>and Phase 3 includes</p>\n<blockquote>\n<p id=\"so_25157614_25157708_1\">Each comment is replaced by one space character</p>\n</blockquote>\n<p>So the backslash at the end of the line is recognised before comments.</p>\n<p>Equivalent phases 2 and 3 for C can be found in C standard (5.1.1.2 Translation phases in my draft).</p>\n", "OwnerUserId": "2382136", "LastEditorUserId": "701092", "LastEditDate": "2014-08-06T12:01:13.740", "Id": "25157708", "Score": "94", "CreationDate": "2014-08-06T10:12:44.497", "LastActivityDate": "2014-08-06T12:01:13.740"}, "bq_ids": {"n4140": {"so_25157614_25157708_1": {"section_id": 5313, "quality": 1.0, "length": 6}, "so_25157614_25157729_0": {"section_id": 5313, "quality": 0.8235294117647058, "length": 28}, "so_25157614_25157708_0": {"section_id": 5313, "quality": 1.0, "length": 17}, "so_25157614_25157694_0": {"section_id": 5313, "quality": 0.9523809523809523, "length": 60}, "so_25157614_25157770_0": {"section_id": 5313, "quality": 0.9767441860465116, "length": 42}}, "n3337": {"so_25157614_25157708_1": {"section_id": 5110, "quality": 1.0, "length": 6}, "so_25157614_25157729_0": {"section_id": 5110, "quality": 0.8235294117647058, "length": 28}, "so_25157614_25157708_0": {"section_id": 5110, "quality": 1.0, "length": 17}, "so_25157614_25157694_0": {"section_id": 5110, "quality": 0.9841269841269841, "length": 62}, "so_25157614_25157770_0": {"section_id": 5110, "quality": 0.9767441860465116, "length": 42}}, "n4659": {"so_25157614_25157708_1": {"section_id": 6737, "quality": 1.0, "length": 6}, "so_25157614_25157729_0": {"section_id": 6737, "quality": 0.8235294117647058, "length": 28}, "so_25157614_25157770_0": {"section_id": 6737, "quality": 0.9767441860465116, "length": 42}, "so_25157614_25157694_0": {"section_id": 6737, "quality": 0.9523809523809523, "length": 60}, "so_25157614_25157708_0": {"section_id": 6737, "quality": 1.0, "length": 17}}}});