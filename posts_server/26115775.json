post_cb({"bq_ids": {"n4140": {"so_26115775_26117470_2": {"length": 10, "quality": 0.9090909090909091, "section_id": 6032}}, "n3337": {"so_26115775_26117470_2": {"length": 10, "quality": 0.9090909090909091, "section_id": 5800}}, "n4659": {"so_26115775_26117470_2": {"length": 9, "quality": 0.8181818181818182, "section_id": 7531}}}, "26115775": {"ViewCount": "894", "Body": "<p>As I understand, C++ standard says that casting to void is correct only in case of function-style casting (<em>ISO/IEC 14882:2003, 5.2.3</em>). </p>\n<p>But I can't find anything about <em>C-style</em> casting to void in <em>C++</em> standard. </p>\n<p>Is behavior of program only implementation-defined in this case ?</p>\n", "Title": "C++ cast to void", "CreationDate": "2014-09-30T08:07:01.580", "LastActivityDate": "2014-09-30T09:41:45.710", "CommentCount": "2", "LastEditDate": "2014-09-30T08:21:25.170", "PostTypeId": "1", "LastEditorUserId": "785593", "Id": "26115775", "Score": "1", "OwnerUserId": "3688510", "Tags": "<c++><casting><void>", "AnswerCount": "1"}, "26117470": {"Id": "26117470", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_26115775_26117470_0\">As I understand, C++ standard says that casting to <code>void</code> is correct only in case of function-style casting </p>\n</blockquote>\n<p>No, it can be done by <code>static_cast</code>, and therefore also by conversions using functional or cast notation.</p>\n<blockquote>\n<p id=\"so_26115775_26117470_1\">But I can't find anything about C-style casting to <code>void</code> in C++ standard.</p>\n</blockquote>\n<p>It's defined for <code>static_cast</code> by [expr.static.cast], 5.2.9/6:</p>\n<blockquote>\n<p id=\"so_26115775_26117470_2\">Any expression can be explicitly converted to type <em>cv</em> <code>void</code>, in which case it becomes a discarded-value\n  expression.</p>\n</blockquote>\n<p>[expr.cast], 5.4, describes how a C-style cast can use <code>static_cast</code>, so it's also valid for that style. [expr.type.conv], 5.2.3, described how functional style is equivalent to C-style, so it's also valid for that style.</p>\n<p><sub>(Note: section numbers refer to C++11 (ISO/IEC 14882:2011), not C++03 which you refer to, since that's the current version. Other versions may differ, but probably not much.)</sub></p>\n", "LastEditorUserId": "204847", "LastActivityDate": "2014-09-30T09:41:45.710", "Score": "4", "CreationDate": "2014-09-30T09:36:07.097", "ParentId": "26115775", "CommentCount": "0", "OwnerUserId": "204847", "LastEditDate": "2014-09-30T09:41:45.710"}});