post_cb({"bq_ids": {"n4140": {"so_13912507_13912507_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 713}}, "n3337": {"so_13912507_13912507_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 702}}, "n4659": {"so_13912507_13912507_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 742}}}, "13912507": {"ViewCount": "368", "Body": "<p>This member function, that has no defined effect in the standard (only remarks), would have limited use if not allowed to reallocate. But the only paragraph I found in the standard that seems to apply would be 23.2.1/11:</p>\n<blockquote>\n<p id=\"so_13912507_13912507_0\">\"Unless otherwise specified (either explicitly or by defining a function in terms of other functions), invoking a container member function or passing a container as an argument to a library function shall not invalidate iterators to, or change the values of, objects within that container.\"</p>\n</blockquote>\n<p>Since reallocations invalidate iterators, would this imply that shrink_to_fit cannot formally reallocate? If so, the function could only have effect on implementations where reducing capacity does not reallocate, if any...</p>\n", "AcceptedAnswerId": "13913052", "Title": "Is vector::shrink_to_fit allowed to reallocate?", "CreationDate": "2012-12-17T10:38:54.867", "Id": "13912507", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2012-12-18T22:13:43.617", "LastEditorUserId": "636019", "LastActivityDate": "2012-12-18T22:13:43.617", "Score": "8", "OwnerUserId": "1453330", "Tags": "<c++><c++11><std>", "AnswerCount": "1"}, "13913052": {"Id": "13913052", "PostTypeId": "2", "Body": "<p>I agree, the intention is obviously that <code>shrink_to_fit()</code> can reallocate, so it should be allowed to invalidate iterators.</p>\n<p>It would be possible to only honour the request if the implementation provides a <code>realloc()</code>-like feature for allocators that guaranteed not to move the memory when shrinking the block, which would not invalidate iterators. But I don't believe that's what's intended, as implied by the <a href=\"http://cplusplus.github.com/LWG/lwg-defects.html#2033\" rel=\"noreferrer\">recently-added requirement</a> that <code>T</code> is <code>MoveInsertable</code> into the vector, because that requirement is only relevant if the elements are moved to new locations, which would invalidate iterators.</p>\n<p>I think you should <a href=\"http://cplusplus.github.com/LWG/lwg-active.html#submit_issue\" rel=\"noreferrer\">submit an issue</a> to get it clarified that <code>shrink_to_fit()</code> can invalidate iterators. The issue would apply to <code>basic_string</code>, <code>deque</code> and <code>vector</code>.</p>\n", "LastEditorUserId": "981959", "LastActivityDate": "2012-12-17T12:14:24.617", "Score": "7", "CreationDate": "2012-12-17T11:14:58.233", "ParentId": "13912507", "CommentCount": "3", "OwnerUserId": "981959", "LastEditDate": "2012-12-17T12:14:24.617"}});