post_cb({"10930245": {"ParentId": "10930091", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>From the C++11 Standard (<a href=\"http://www.open-std.org/jtc1/sc22/wg21/\" rel=\"nofollow\">N3242 draft</a>)</p>\n<blockquote>\n<p id=\"so_10930091_10930245_0\">11.2 Accessibility of base classes and base class members</p>\n<p id=\"so_10930091_10930245_1\">2 In the absence of an access-specifier for a base class, public is\n  assumed when the derived class is defined with the class-key struct\n  and private is assumed when the class is defined with the class-key\n  class.</p>\n</blockquote>\n", "OwnerUserId": "151641", "LastEditorUserId": "151641", "LastEditDate": "2012-06-07T11:00:49.820", "Id": "10930245", "Score": "2", "CreationDate": "2012-06-07T10:45:02.247", "LastActivityDate": "2012-06-07T11:00:49.820"}, "10930239": {"ParentId": "10930091", "CommentCount": "0", "Body": "<p>From <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1905.pdf\" rel=\"nofollow\">C++ standard</a>, 11.2.2, page 208:</p>\n<blockquote>\n<p id=\"so_10930091_10930239_0\">In the absence of an access-speci\ufb01er for a base class, public is assumed when the derived class is declared struct and private is assumed when the class is declared class.</p>\n</blockquote>\n<p>So yes, you are correct: when the derived class is a <code>struct</code>, it inherits other classes as <code>public</code> unless you specify otherwise.</p>\n", "OwnerUserId": "335858", "PostTypeId": "2", "Id": "10930239", "Score": "2", "CreationDate": "2012-06-07T10:44:37.237", "LastActivityDate": "2012-06-07T10:44:37.237"}, "10930091": {"CommentCount": "3", "AcceptedAnswerId": "10930239", "PostTypeId": "1", "LastEditorUserId": "1135819", "CreationDate": "2012-06-07T10:34:05.647", "LastActivityDate": "2013-02-22T09:59:28.640", "LastEditDate": "2012-06-07T10:36:54.883", "ViewCount": "2238", "FavoriteCount": "1", "Title": "struct and class and inheritance (c++)", "Id": "10930091", "Score": "5", "Body": "<p>Could you ensure me, if all access specifiers (including inheritance) in <code>struct</code> are <code>public</code> ?</p>\n<p>In other words: are those equal?</p>\n<pre><code>class C: public B, public A { public:\n    C():A(1),B(2){}\n    //...\n};\n</code></pre>\n<p>and</p>\n<pre><code>struct C: B, A {\n    C():A(1),B(2){}\n    //...\n};\n</code></pre>\n", "Tags": "<c++><inheritance><struct>", "OwnerUserId": "544721", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_10930091_10930245_1": {"section_id": 6679, "quality": 1.0, "length": 19}, "so_10930091_10930149_0": {"section_id": 6666, "quality": 1.0, "length": 15}, "so_10930091_10930239_0": {"section_id": 6679, "quality": 0.8235294117647058, "length": 14}, "so_10930091_10930149_1": {"section_id": 6679, "quality": 1.0, "length": 19}, "so_10930091_10930245_0": {"section_id": 47, "quality": 0.7142857142857143, "length": 5}}, "n3337": {"so_10930091_10930245_1": {"section_id": 6434, "quality": 1.0, "length": 19}, "so_10930091_10930149_0": {"section_id": 6421, "quality": 1.0, "length": 15}, "so_10930091_10930239_0": {"section_id": 6434, "quality": 0.8235294117647058, "length": 14}, "so_10930091_10930149_1": {"section_id": 6434, "quality": 1.0, "length": 19}, "so_10930091_10930245_0": {"section_id": 359, "quality": 0.7142857142857143, "length": 5}}, "n4659": {"so_10930091_10930245_1": {"section_id": 8154, "quality": 1.0, "length": 19}, "so_10930091_10930149_0": {"section_id": 8141, "quality": 1.0, "length": 15}, "so_10930091_10930239_0": {"section_id": 8154, "quality": 0.8235294117647058, "length": 14}, "so_10930091_10930149_1": {"section_id": 8154, "quality": 1.0, "length": 19}, "so_10930091_10930245_0": {"section_id": 48, "quality": 0.7142857142857143, "length": 5}}}, "10930149": {"ParentId": "10930091", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Yes, they all are public.</p>\n<pre><code>struct A : B {\n  C c;\n  void foo() const {}\n}\n</code></pre>\n<p>is equivalent to </p>\n<pre><code>struct A : public B {\n public:\n  C c;\n  void foo() const {}\n}\n</code></pre>\n<p>For members, it is specified in \u00a711:</p>\n<blockquote>\n<p id=\"so_10930091_10930149_0\">Members of a class defined with the keyword class are private by default. Members of a class defined with the keywords struct or union are public by default.</p>\n</blockquote>\n<p>and for for base classes in \u00a711.2:</p>\n<blockquote>\n<p id=\"so_10930091_10930149_1\">In the absence of an access-specifier for a base class, public is assumed when the derived class is defined with the class-key struct and private is assumed when the class is defined with the class-key class.</p>\n</blockquote>\n<p>where the references are to the C++11 standard.</p>\n", "OwnerUserId": "661519", "LastEditorUserId": "661519", "LastEditDate": "2012-06-07T10:52:13.280", "Id": "10930149", "Score": "7", "CreationDate": "2012-06-07T10:37:36.157", "LastActivityDate": "2012-06-07T10:52:13.280"}});