post_cb({"27074757": {"Id": "27074757", "PostTypeId": "2", "Body": "<p>Simple example in \u00a713.3.3.1.4 [over.ics.ref]/p4:</p>\n<blockquote>\n<p id=\"so_27074630_27074757_0\">[ <em>Example</em>: a function with an \u201clvalue reference to <code>int</code>\u201d parameter\n  can be a viable candidate even if the corresponding argument is an\n  <code>int</code> bit-field. The formation of implicit conversion sequences treats\n  the <code>int</code> bit-field as an <code>int</code> lvalue and finds an exact match with\n  the parameter. If the function is selected by overload resolution, the\n  call will nonetheless be ill-formed because of the prohibition on\n  binding a non-<code>const</code> lvalue reference to a bit-field (8.5.3). \u2014<em>end\n  example</em> ]</p>\n</blockquote>\n", "LastActivityDate": "2014-11-22T06:32:06.723", "CommentCount": "1", "CreationDate": "2014-11-22T06:32:06.723", "ParentId": "27074630", "Score": "0", "OwnerUserId": "2756719"}, "bq_ids": {"n4140": {"so_27074630_27074630_0": {"length": 45, "quality": 1.0, "section_id": 607}, "so_27074630_27074757_0": {"length": 41, "quality": 0.8913043478260869, "section_id": 628}}, "n3337": {"so_27074630_27074630_0": {"length": 45, "quality": 1.0, "section_id": 597}, "so_27074630_27074757_0": {"length": 41, "quality": 0.8913043478260869, "section_id": 618}}, "n4659": {"so_27074630_27074630_0": {"length": 45, "quality": 1.0, "section_id": 633}, "so_27074630_27074757_0": {"length": 41, "quality": 0.8913043478260869, "section_id": 654}}}, "27074630": {"ViewCount": "220", "Body": "<p><code>N3797::13.3.3.1/2 [over.best.ics]</code> tells about an ill-formed implicit conversion as follows:</p>\n<blockquote>\n<p id=\"so_27074630_27074630_0\">Implicit conversion sequences are concerned only with the type,\n  cv-qualification, and value category of the argument and how these are\n  converted to match the corresponding properties of the parameter.\n  Other properties, such as the lifetime, storage class, alignment, or\n  accessibility of the argument and whether or not the argument is a\n  bit-field are ignored. So, although an implicit conversion sequence\n  can be defined for a given argument-parameter pair, <em>the conversion</em>\n  from the argument to the parameter <em>might still be ill-formed</em> in the\n  final analysis.</p>\n</blockquote>\n<p>I have no idead about how can we ever define such a conversion. The thing is all kind of conversions I know are well-formed conversion like user-defined conversion with <code>operatorn A(){ ... }</code>  or a standard conversion. Couldn't you provide an example of the ill-formed conversion?</p>\n", "AcceptedAnswerId": "27074757", "Title": "Example of ill-formed implicit conversion", "CreationDate": "2014-11-22T06:12:00.647", "Id": "27074630", "CommentCount": "1", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "LastActivityDate": "2014-11-22T06:32:06.723", "Score": "0", "Tags": "<c++><implicit-conversion>", "AnswerCount": "1"}});