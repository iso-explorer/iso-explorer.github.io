post_cb({"21482880": {"CommentCount": "1", "ViewCount": "57", "CreationDate": "2014-01-31T14:48:28.063", "LastActivityDate": "2014-02-01T11:57:48.097", "Title": "Static data initialised when my program EXITS", "AcceptedAnswerId": "21483076", "PostTypeId": "1", "Id": "21482880", "Score": "2", "Body": "<p>Sometimes I like to put initialisation code in the constructor of a static object, like this.</p>\n<pre><code>namespace\n{\n    struct Init {\n        Init ();\n    };\n\n    Init :: Init () {\n        // whatever\n    }\n\n    Init init;\n}\n</code></pre>\n<p>Yes, I know this is bad in general because you can't rely on the order of initialisations between translation units, but sometimes, for some things, it's okay.</p>\n<p>Anyway I don't like the syntax and today I tried out this.</p>\n<pre><code>namespace\n{\n    int init = [] () -&gt; int {\n        // whatever\n        return 0;\n    } ();\n}\n</code></pre>\n<p>When the program ran, the <code>whatever</code> code ran <strong>after</strong> <code>main()</code>!</p>\n<p>I know static initialisations like this happen in an arbitrary order, but I thought the specification required it <em>all</em>, in whatever order, to happen <em>before</em> <code>main()</code> enters.</p>\n<p>Is the compiler misbehaving or is there further subtlety?</p>\n<pre><code>#&gt; gcc -v\nUsing built-in specs.\nCOLLECT_GCC=gcc\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/i686-linux-gnu/4.8/lto-wrapper\nTarget: i686-linux-gnu\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu/Linaro 4.8.1-10ubuntu9' --with-bugurl=file:///usr/share/doc/gcc-4.8/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.8 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.8 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.8-i386 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.8-i386 --with-arch-directory=i386 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-targets=all --enable-multiarch --disable-werror --with-arch-32=i686 --with-multilib-list=m32,m64,mx32 --with-tune=generic --enable-checking=release --build=i686-linux-gnu --host=i686-linux-gnu --target=i686-linux-gnu\nThread model: posix\ngcc version 4.8.1 (Ubuntu/Linaro 4.8.1-10ubuntu9) \n</code></pre>\n", "Tags": "<c++><gcc>", "OwnerUserId": "458742", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_21482880_21483076_0": {"section_id": 7153, "quality": 0.9583333333333334, "length": 46}}, "n3337": {"so_21482880_21483076_0": {"section_id": 6897, "quality": 0.9583333333333334, "length": 46}}, "n4659": {"so_21482880_21483076_0": {"section_id": 8657, "quality": 0.6875, "length": 33}}}, "21483076": {"ParentId": "21482880", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>Found this in the standard (3.6.2 Initialization of non-local variables [basic.start.init], 4):</p>\n<blockquote>\n<p id=\"so_21482880_21483076_0\">It is implementation-defined whether the dynamic initialization of a\n  non-local variable with static storage duration is done before the\n  first statement of main.  If the initialization is deferred to some point in time\n  after the first statement of main, it shall occur before the first odr-use (3.2) of any \n  function or variable\n  defined in the same translation unit as the variable to be initialized.*<br>\n  * A non-local variable with static storage duration having initialization with side-effects must \n  be initialized even if it is not odr-used (3.2, 3.7.1).)</br></p>\n</blockquote>\n<p>Seems to say explicitly that in at least some cases, initialization can be deferred until after main enters.</p>\n", "OwnerUserId": "1105562", "LastEditorUserId": "341970", "LastEditDate": "2014-02-01T11:57:48.097", "Id": "21483076", "Score": "4", "CreationDate": "2014-01-31T14:58:43.720", "LastActivityDate": "2014-02-01T11:57:48.097"}});