post_cb({"14599754": {"CommentCount": "1", "ViewCount": "296", "PostTypeId": "1", "LastEditorUserId": "636019", "CreationDate": "2013-01-30T08:40:22.030", "LastActivityDate": "2013-02-04T02:41:44.670", "Title": "User-defined literals as variadic templates", "AcceptedAnswerId": "14601372", "LastEditDate": "2013-02-04T02:41:44.670", "Id": "14599754", "Score": "2", "Body": "<p>GCC 4.7.2 seems to have variadic-char-templated literal operators only implemented for numbers:</p>\n<pre><code>template&lt;char... chars&gt;\nconstexpr size_t operator \"\" _size() { return sizeof...(chars); }\n\nint main()\n{\n    std::cout &lt;&lt; 42_size;    // (1) works\n    std::cout &lt;&lt; \"foo\"_size; // (2) does not\n}\n</code></pre>\n<ul>\n<li>Is there a version of GCC that supports this code?</li>\n<li>Is (2) even part of the standard?</li>\n</ul>\n", "Tags": "<c++><gcc><c++11>", "OwnerUserId": "1522056", "AnswerCount": "1"}, "14601372": {"ParentId": "14599754", "CommentCount": "1", "CreationDate": "2013-01-30T10:10:24.510", "OwnerUserId": "1595323", "PostTypeId": "2", "Id": "14601372", "Score": "3", "Body": "<p>2.14.8.5 of C++11 standard declares</p>\n<blockquote>\n<p id=\"so_14599754_14601372_0\">If L is a user-defined-string-literal, let str be the literal without\n  its ud-suffix and let len be the number of code units in str (i.e.,\n  its length excluding the terminating null character). The literal L is\n  treated as a call of the form operator \"\" X (str, len)</p>\n</blockquote>\n<p>So rewrite your code as:</p>\n<pre><code>#include &lt;iostream&gt;\n\n// (1)\ntemplate&lt;char... chars&gt;\nconstexpr size_t operator \"\" _size() { return sizeof...(chars); }\n\n// (2)\nconstexpr size_t operator \"\" _size( const char* str, size_t sz ) { return sz; }\n\nint\nmain(void)\n{\n  std::cout &lt;&lt; 42_size &lt;&lt; std::endl;    // (1)\n  std::cout &lt;&lt; \"foo\"_size &lt;&lt; std::endl; // (2)\n\n  return 0;\n}\n</code></pre>\n<p>To explicitly specify correct form for (2)</p>\n", "LastActivityDate": "2013-01-30T10:10:24.510"}, "bq_ids": {"n4140": {"so_14599754_14601372_0": {"section_id": 5371, "quality": 0.7307692307692307, "length": 19}}, "n3337": {"so_14599754_14601372_0": {"section_id": 5167, "quality": 0.7307692307692307, "length": 19}}, "n4659": {"so_14599754_14601372_0": {"section_id": 6796, "quality": 0.7307692307692307, "length": 19}}}});