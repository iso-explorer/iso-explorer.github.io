post_cb({"bq_ids": {"n4140": {"so_27421419_27421507_0": {"length": 9, "quality": 1.0, "section_id": 3291}}, "n4659": {"so_27421419_27421507_0": {"length": 9, "quality": 1.0, "section_id": 4053}}}, "27421419": {"ViewCount": "163", "LastEditDate": "2014-12-11T11:12:38.417", "AcceptedAnswerId": "27421507", "Title": "Is passing an uninitialised variable in a function parameter list well-defined?", "CreationDate": "2014-12-11T11:09:27.463", "LastActivityDate": "2014-12-11T11:34:48.007", "CommentCount": "10", "Body": "<p>I have some code which essentially boils down to the following:</p>\n<pre><code>void bar(bool b, double f)\n{\n    if (b){\n        double g = f;\n    }\n}\n\nvoid foo()\n{\n    double f;\n    bool b = false;\n    bar(b, f);\n}\n</code></pre>\n<p>Is there any undefined behaviour here? I suspect there may be since I'm taking a value copy of the uninitialised <code>double</code> when passing <code>f</code> to <code>bar</code>. That said, I'm not making use of the passed <code>double</code> though since the <code>if</code> block will not run.</p>\n<p>Furthermore, would everything be fine if I were to pass the <code>double</code> by reference: </p>\n<pre><code>void bar(bool b, double&amp; f)\n</code></pre>\n<p>Then I'm not \"using\" an uninitialised variable but am simply referring to it.</p>\n", "PostTypeId": "1", "LastEditorUserId": "4082723", "Id": "27421419", "Score": "6", "OwnerUserId": "3415258", "Tags": "<c++><language-lawyer>", "AnswerCount": "1"}, "27421507": {"PostTypeId": "2", "LastEditDate": "2014-12-11T11:34:48.007", "LastEditorDisplayName": "user3920237", "LastActivityDate": "2014-12-11T11:34:48.007", "Score": "9", "Id": "27421507", "CreationDate": "2014-12-11T11:13:27.973", "ParentId": "27421419", "CommentCount": "0", "OwnerUserId": "2380830", "Body": "<p>Yes, the behaviour is undefined. You <em>are</em> taking a value copy of the uninitialised <code>double</code> when passing it in the function parameter list.</p>\n<p>Passing by reference <em>is</em> well-defined since all you're doing is binding that reference to that <code>double</code>. Of course, the behaviour of accessing that reference <em>would</em> be undefined. </p>\n<p>N4140:</p>\n<p>[dcl.init]</p>\n<blockquote>\n<p id=\"so_27421419_27421507_0\"><code>12</code> ...  If an indeterminate value is produced by an evaluation, the\n  behavior is undefined except in the following cases:</p>\n</blockquote>\n<p><em>(Irrelevant text omitted, pertaining to unsigned narrow character types)</em></p>\n"}});