post_cb({"bq_ids": {"n4140": {"so_19030789_19030839_0": {"length": 19, "quality": 1.0, "section_id": 423}}, "n3337": {"so_19030789_19030839_0": {"length": 19, "quality": 1.0, "section_id": 415}}, "n4659": {"so_19030789_19030839_0": {"length": 19, "quality": 1.0, "section_id": 441}}}, "19030839": {"Id": "19030839", "PostTypeId": "2", "Body": "<p>Yes, that's guaranteed by C++11 12.6/3 ([class.init]/3):</p>\n<blockquote>\n<p id=\"so_19030789_19030839_0\">When an array of class objects is initialized (either explicitly or implicitly) and the elements are initialized\n  by constructor, the constructor shall be called for each element of the array, <strong>following the subscript order</strong></p>\n</blockquote>\n", "LastActivityDate": "2013-09-26T14:20:13.717", "Score": "11", "CreationDate": "2013-09-26T14:20:13.717", "ParentId": "19030789", "CommentCount": "2", "OwnerUserId": "204847"}, "19030789": {"ViewCount": "207", "Body": "<p>Are there any guarantees in C++ about the order in which array elements are constructed?</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nstruct A {\n  A() { cout &lt;&lt; this &lt;&lt; endl; }\n};\n\nint main()\n{\n  cout &lt;&lt; \"[0] is \" &lt;&lt; new A[3];\n}\n</code></pre>\n<p>prints out</p>\n<pre><code>0x602010\n0x602011\n0x602012\n[0] is 0x602010\n</code></pre>\n<p>implying that the elements were constructed in the sequence [0], [1] and [2].  Is that order guaranteed by the language?</p>\n", "AcceptedAnswerId": "19030839", "Title": "C++ array elements order of construction", "CreationDate": "2013-09-26T14:17:37.550", "Id": "19030789", "CommentCount": "2", "LastEditDate": "2013-09-26T14:19:09.820", "PostTypeId": "1", "LastEditorUserId": "551045", "LastActivityDate": "2013-09-26T14:20:13.717", "Score": "6", "OwnerUserId": "1042861", "Tags": "<c++><arrays><constructor><order>", "AnswerCount": "1"}});