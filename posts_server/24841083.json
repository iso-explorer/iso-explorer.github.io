post_cb({"bq_ids": {"n4140": {"so_24841083_24841123_1": {"length": 68, "quality": 0.8, "section_id": 5313}, "so_24841083_24841123_0": {"length": 16, "quality": 1.0, "section_id": 6109}}, "n3337": {"so_24841083_24841123_1": {"length": 68, "quality": 0.8, "section_id": 5110}, "so_24841083_24841123_0": {"length": 16, "quality": 1.0, "section_id": 5875}}, "n4659": {"so_24841083_24841123_1": {"length": 68, "quality": 0.8, "section_id": 6737}, "so_24841083_24841123_0": {"length": 16, "quality": 1.0, "section_id": 7606}}}, "24841123": {"Id": "24841123", "PostTypeId": "2", "Body": "<blockquote>\n<h3>5.3.5 Delete <code>[expr.delete]</code></h3>\n<p id=\"so_24841083_24841123_0\">5 If the object being deleted has incomplete class type at the point of deletion and the complete class has a non-trivial destructor or a deallocation function, the behavior is undefined.</p>\n</blockquote>\n<p>Thus, you certainly would expect it to be UB, as <code>Widget::~Widget()</code> is non-trivial, and you would expect the safe-guard in boost to error out.</p>\n<p>Now, let's dig higher:</p>\n<blockquote>\n<h3>2.2 Phases of translation <code>[lex.phases]</code></h3>\n<p id=\"so_24841083_24841123_1\">8 Translated translation units and instantiation units are combined as follows: <em>[ Note: ... ]</em> Each translated translation unit is examined to produce a list of required instantiations. <em>[ Note: This may include instantiations which have been explicitly requested (14.7.2). \u2014end note ]</em> The definitions of the required templates are located. It is implementation-defined whether the source of the translation units containing these definitions is required to be available. <em>[ Note: An implementation could encode sufficient information into the translated translation unit so as to ensure the source is not required here. \u2014end note ]</em> <strong>All the required instantiations are performed to produce instantiation units.</strong> <em>[ Note: These are similar to translated translation units, but contain no references to uninstantiated templates and no template definitions. \u2014end note ]</em> The program is ill-formed if any instantiation fails.</p>\n</blockquote>\n<p>You are saved by <strong>phases of translation</strong>:<br>\nTranslate the translation unit, <strong>then</strong> instantiate templates...</br></p>\n", "LastEditorUserId": "3204551", "LastActivityDate": "2014-07-19T14:16:17.277", "Score": "4", "CreationDate": "2014-07-19T13:53:34.083", "ParentId": "24841083", "CommentCount": "5", "OwnerUserId": "3204551", "LastEditDate": "2014-07-19T14:16:17.277"}, "24841083": {"ViewCount": "114", "Body": "<p>Consider the following code snippet. The destructor of boost::scoped_ptr is invoked at the end of the main function. The destructor uses boost::checked_delete to deallocate the encapsulated Widget pointer.</p>\n<pre><code>#include &lt;boost/scoped_ptr.hpp&gt;\n#include &lt;iostream&gt;\n\nclass Widget;\nWidget *make_widget();\n\nint main()\n{  \n  boost::scoped_ptr&lt;Widget&gt; sp(make_widget());\n  // std::cout &lt;&lt; sizeof(Widget) &lt;&lt; std::endl;\n}\n\nclass Widget\n{\npublic:\n  Widget() {}\n  ~Widget() { std::cout &lt;&lt; \"Widget destructor called.\" &lt;&lt; std::endl; }\n};\n\nWidget *make_widget()\n{\n  return new Widget;\n}\n</code></pre>\n<p>I expected this code to fail to compile as the class Widget is incomplete at the point the destructor of <code>scoped_ptr&lt;Widget&gt;</code> is invoked. However this compiles cleanly on g++ 4.8 and Visual Studio 2010. Note the commented statement with the <code>sizeof(Widget)</code> expression in the main function. If I uncomment it, it will fail to compile implying that <code>Widget</code> must be incomplete at that point.</p>\n<p>What is the correct explanation for this behavior?</p>\n<p>EDIT: Some answers (now deleted) pointed to undefined behavior but I would have expected the use of checked_delete in <code>scoped_ptr</code>'s destructor to cause a compilation failure. FWIW, I'm using Boost 1.55.</p>\n", "Title": "When is a type considered complete?", "CreationDate": "2014-07-19T13:47:41.073", "LastActivityDate": "2014-07-19T14:16:17.277", "CommentCount": "3", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2014-07-19T14:11:38.320", "LastEditorUserId": "422131", "Id": "24841083", "Score": "8", "OwnerUserId": "422131", "Tags": "<c++><boost><smart-pointers><incomplete-type><scoped-ptr>", "AnswerCount": "1"}});