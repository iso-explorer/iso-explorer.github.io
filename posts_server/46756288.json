post_cb({"46756288": {"ViewCount": "41", "Body": "<p>I'm trying to compile a C++ library (with gcc 5.3.1-14ubuntu2) and got this type of error:</p>\n<pre><code>&gt; In file included from\n&gt; /root/pitchfork/workspace/unanimity/include/pacbio/consensus/ModelConfig.h:49:0,\n&gt;                  from /root/pitchfork/workspace/unanimity/src/models/P6C4NoCovModel.cpp:42:\n&gt; /root/pitchfork/workspace/unanimity/include/pacbio/data/internal/BaseEncoding.h:119:31:\n&gt; error: explicitly defaulted function 'constexpr\n&gt; PacBio::Data::detail::NCBI2na&amp;\n&gt; PacBio::Data::detail::NCBI2na::operator=(const\n&gt; PacBio::Data::detail::NCBI2na&amp;)' cannot be declared as constexpr\n&gt; because the implicit declaration is not constexpr:\n&gt;      inline constexpr NCBI2na&amp; operator=(const NCBI2na&amp;) = default;\n</code></pre>\n<p>The part of the code that cause trouble is :</p>\n<pre><code>class NCBI2na\n{\npublic:\n    static inline constexpr NCBI2na FromASCII(const char base) { return NCBI2na{base}; }\n    static inline constexpr NCBI2na FromRaw(const uint8_t raw) { return NCBI2na{raw}; }\n\npublic:\n    ~NCBI2na() = default;\n\n    inline constexpr NCBI2na(const NCBI2na&amp;) = default;\n    inline constexpr NCBI2na(NCBI2na&amp;&amp;) = default;\n\n    inline constexpr NCBI2na&amp; operator=(const NCBI2na&amp;) = default;\n    inline constexpr NCBI2na&amp; operator=(NCBI2na&amp;&amp;) = default;    \n};\n</code></pre>\n<p>The part of the code that seems to causes trouble is the \"= default\". This may alos be related </p>\n<p>I looked around but could not find a solution to this problem so far.\nHere are some similar questions that could help:</p>\n<p><a href=\"https://stackoverflow.com/questions/46726390/constexpr-defining-static-data-member-of-literal-type-that-is-declared-const\">constexpr defining static data member of literal type that is declared const</a>\n<a href=\"https://stackoverflow.com/questions/34097076/constructor-of-derived-class-cannot-be-constexpr-if-base-class-contains-array-me\">constructor of derived class cannot be constexpr if base class contains array member</a></p>\n", "AcceptedAnswerId": "46757212", "Title": "explicitly defaulted function cannot be declared as constexpr because the implicit declaration is not constexpr", "CreationDate": "2017-10-15T14:45:27.390", "Id": "46756288", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2017-10-15T16:25:25.933", "Score": "2", "OwnerUserId": "3690711", "Tags": "<c++><constexpr>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_46756288_46757212_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 5419}}, "n3337": {"so_46756288_46757212_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 5214}}, "n4659": {"so_46756288_46757212_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 6841}}}, "46757212": {"Id": "46757212", "PostTypeId": "2", "Body": "<p>This seems like a GCC bug. Assuming you compile as C++14, then the rules as written are these:</p>\n<p><a href=\"https://timsong-cpp.github.io/cppwp/n4140/dcl.constexpr#3\" rel=\"nofollow noreferrer\">[dcl.constexpr]/3</a></p>\n<blockquote>\n<p id=\"so_46756288_46757212_0\">The definition of a constexpr function shall satisfy the following\n  constraints:</p>\n<ul>\n<li>it shall not be virtual</li>\n<li>its return type shall be a literal type;</li>\n<li>each of its parameter types shall be a literal type;</li>\n<li>its function-body shall be = delete, = default, or ...</li>\n</ul>\n</blockquote>\n<p>All of the above are in fact satisfied in the code you've shown us. So your assignment operator definition is okay, and should be accepted as <code>constexpr</code>.</p>\n<hr>\n<p>This code (once the error inducing static functions are commented out), is accepted by <a href=\"https://wandbox.org/permlink/4HsjjoeiL6BOr7Uq\" rel=\"nofollow noreferrer\">GCC 5.4.0</a>. So you can definitely chalk it up to a compiler bug.</p>\n</hr>", "LastEditorUserId": "817643", "LastActivityDate": "2017-10-15T16:25:25.933", "Score": "1", "CreationDate": "2017-10-15T16:18:47.243", "ParentId": "46756288", "CommentCount": "3", "OwnerUserId": "817643", "LastEditDate": "2017-10-15T16:25:25.933"}});