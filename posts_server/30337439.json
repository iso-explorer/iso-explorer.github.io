post_cb({"bq_ids": {"n4140": {"so_30337439_30337439_3": {"length": 5, "quality": 1.0, "section_id": 5789}, "so_30337439_30337439_2": {"length": 31, "quality": 0.8611111111111112, "section_id": 5789}}, "n3337": {"so_30337439_30337439_3": {"length": 5, "quality": 1.0, "section_id": 5562}, "so_30337439_30337439_2": {"length": 31, "quality": 0.8611111111111112, "section_id": 5562}}, "n4659": {"so_30337439_30337439_3": {"length": 5, "quality": 1.0, "section_id": 7246}, "so_30337439_30337439_2": {"length": 31, "quality": 0.8611111111111112, "section_id": 7246}}}, "30337439": {"ViewCount": "179", "Body": "<p>From the November 2014 working draft of the C++14 standard:</p>\n<blockquote>\n<p id=\"so_30337439_30337439_0\">\u00a7 1.7 6</p>\n<p id=\"so_30337439_30337439_1\">c ISO/IEC N4296 5 [Example: A structure declared as </p>\n</blockquote>\n<pre><code>struct { \n    char a;\n    int b:5, \n    c:11, \n    :0, \n    d:8; \n    struct {int ee:8;} e; \n} \n</code></pre>\n<blockquote>\n<p id=\"so_30337439_30337439_2\">contains four separate\n  memory locations: The field a and bit-fields d and e.ee are each\n  separate memory locations, and can be modified concurrently without\n  interfering with each other. The bit-fields b and c together\n  constitute the fourth memory location. The bit-fields b and c cannot\n  be concurrently modified, but b and a, for example, can be. \u2014 end\n  example ]</p>\n</blockquote>\n<p>I assume that the <code>:0</code> acts as a separator of sorts, which is why <code>d</code> has a separate memory location while <code>b</code> and <code>c</code> do not. However, I do not understand what is meant by </p>\n<blockquote>\n<p id=\"so_30337439_30337439_3\">together constitute the fourth memory location</p>\n</blockquote>\n<p>Are <code>b</code> and <code>c</code> a <code>union</code>? E.g., equivalent to</p>\n<pre><code>union {\n    int b:5;\n    int c:11;\n};\n</code></pre>\n", "AcceptedAnswerId": "30337479", "Title": "Memory location of bit-fields", "CreationDate": "2015-05-19T22:46:43.973", "Id": "30337439", "CommentCount": "6", "PostTypeId": "1", "OwnerDisplayName": "user4912670", "LastActivityDate": "2015-05-19T22:52:43.330", "Score": "1", "Tags": "<c++><language-lawyer><bit-fields>", "AnswerCount": "1"}, "30337479": {"Id": "30337479", "PostTypeId": "2", "Body": "<p>No, they do not share any bit as they would in the <code>union</code> example.</p>\n<p>They just are considered one unit for the purposes of considering memory locations.</p>\n<p>Put another way, the following would be the bits in your example (potentially)</p>\n<pre><code>AAAAAAAA BBBBBCCCCCCCCCCC DDDDDDDD EEEEEEEE (ee sharing e)\n</code></pre>\n<p>The spaces are to show the memory locations and don't take up any space in memory.</p>\n", "LastEditorUserId": "16800", "LastActivityDate": "2015-05-19T22:52:43.330", "Score": "1", "CreationDate": "2015-05-19T22:51:18.107", "ParentId": "30337439", "CommentCount": "4", "OwnerUserId": "16800", "LastEditDate": "2015-05-19T22:52:43.330"}});