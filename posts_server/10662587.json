post_cb({"10662587": {"CreationDate": "2012-05-19T05:30:08.733", "ViewCount": "138", "Score": "-6", "Id": "10662587", "Title": "Pointer to deallocated location Is it a Undefined Behavior?", "CommentCount": "3", "Body": "<p>Pointer to deallocated location Is it a Undefined Behavior?</p>\n<p><a href=\"http://ideone.com/Qp3uY\" rel=\"nofollow\">http://ideone.com/Qp3uY</a></p>\n<pre><code>int *p = new int;\n\n*p = 10;\n\ndelete p;\n\n*p = 10;\n\ncout &lt;&lt; *p &lt;&lt; endl;\n</code></pre>\n", "Tags": "<c++><pointers><undefined-behavior>", "LastActivityDate": "2012-05-19T09:38:59.957", "PostTypeId": "1", "AnswerCount": "4", "OwnerUserId": "423903"}, "10662594": {"CommentCount": "2", "Body": "<p>Dereferencing a deleted pointer is an undefined operation.  Don't do it.</p>\n", "CreationDate": "2012-05-19T05:31:27.180", "ParentId": "10662587", "Id": "10662594", "LastActivityDate": "2012-05-19T05:31:27.180", "PostTypeId": "2", "Score": "4", "OwnerUserId": "198536"}, "10664042": {"CommentCount": "0", "Body": "<p>This is undefined behavior:</p>\n<blockquote>\n<p id=\"so_10662587_10664042_0\">If the argument given to a deallocation function in the standard library is a pointer that is not the null pointer value, the deallocation function shall deallocate the storage referenced by the pointer, rendering invalid all pointers referring to any part of the <em>deallocated storage</em>. The effect of using an invalid pointer value (including passing it to a deallocation function) is undefined. - C++ '03 3.7.3.2</p>\n</blockquote>\n", "CreationDate": "2012-05-19T09:38:59.957", "ParentId": "10662587", "Id": "10664042", "LastActivityDate": "2012-05-19T09:38:59.957", "PostTypeId": "2", "Score": "3", "OwnerUserId": "721269"}, "bq_ids": {"n4140": {"so_10662587_10664042_0": {"length": 30, "quality": 0.8571428571428571, "section_id": 7183}}, "n3337": {"so_10662587_10664042_0": {"length": 32, "quality": 0.9142857142857143, "section_id": 6927}}}, "10662626": {"CommentCount": "0", "Body": "<p>There mere existence of a pointer to a deallocated location is not undefined behavior in itself. Attempting to dereference that pointer does produce undefined behavior though.</p>\n", "CreationDate": "2012-05-19T05:37:41.597", "ParentId": "10662587", "Id": "10662626", "LastActivityDate": "2012-05-19T05:37:41.597", "PostTypeId": "2", "Score": "6", "OwnerUserId": "179910"}, "10662917": {"CommentCount": "0", "Body": "<p>When you allocate memory to make a new pointer, as you do in the first line</p>\n<pre><code>int *p = new int;\n</code></pre>\n<p>You're asking the operating system to produce some memory for you to use, for as long as you like. You can then put something in that spot, as you then do</p>\n<pre><code>*p = 10;\n</code></pre>\n<p>This memory is available for you to use as long as you want, and then you can tell the operating system you're done with it, by calling <code>delete</code>, as you do on the next line.</p>\n<pre><code>delete p;\n</code></pre>\n<p>The operating system now has the memory available to it, but it may or may not do something with that memory. If you allocate a bunch of other memory, it is <em>possible</em> that the new memory range includes this memory. The operating system may give away this memory to something else, or it may not - it's not going to tell you, that's why it is said to be <em>undefined behavior</em> to still use that place in memory.</p>\n<pre><code>*p = 10;\n</code></pre>\n<p>You then reuse this place of memory to set it to 10 again. Nothing else has happened in the meantime and this is a rather trivial program, so the operating system hasn't done anything else with that block of memory yet, so setting it in this case does not have any greater effect.</p>\n<pre><code>cout &lt;&lt; *p &lt;&lt; endl;\n</code></pre>\n<p>Again, the operating system owns the memory right now, but it isn't likely doing anything with it at this point; it's like staying in a hotel room after your stay is officially over. You may or may not be able to stay there, as you don't know whether the room is being used by another person afterward or if it is remaining empty. You could be thrown out, or you could be safe.</p>\n", "CreationDate": "2012-05-19T06:30:00.987", "ParentId": "10662587", "Id": "10662917", "LastActivityDate": "2012-05-19T06:30:00.987", "PostTypeId": "2", "Score": "0", "OwnerUserId": "1290655"}});