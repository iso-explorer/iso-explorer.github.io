post_cb({"bq_ids": {"n4140": {"so_26199545_26199701_1": {"section_id": 5440, "quality": 0.8571428571428571, "length": 6}, "so_26199545_26199701_0": {"section_id": 5959, "quality": 1.0, "length": 10}}, "n3337": {"so_26199545_26199701_1": {"section_id": 5235, "quality": 0.8571428571428571, "length": 6}, "so_26199545_26199701_0": {"section_id": 5728, "quality": 1.0, "length": 10}}, "n4659": {"so_26199545_26199701_1": {"section_id": 6867, "quality": 0.8571428571428571, "length": 6}, "so_26199545_26199701_0": {"section_id": 7440, "quality": 1.0, "length": 10}}}, "26199545": {"CommentCount": "9", "ViewCount": "621", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2014-10-05T04:09:29.510", "LastActivityDate": "2014-10-05T05:03:51.253", "Title": "C++11 decltype of member", "AcceptedAnswerId": "26199701", "LastEditDate": "2017-05-23T12:20:28.033", "Id": "26199545", "Score": "3", "Body": "<p>Why can't I do this:</p>\n<pre><code>class Foo {\n  void fn();\n  using fn_t = decltype(fn); //call to non-static member function without an object argument\n};\n</code></pre>\n<p>But I can do</p>\n<pre><code>class Foo {\n  static void fn();\n  using fn_t = decltype(fn);\n};\n</code></pre>\n<p><a href=\"https://stackoverflow.com/a/7928123/2556973\">This SO post</a> claims: </p>\n<blockquote>\n<p id=\"so_26199545_26199545_0\">Within unevaluated operands (operands of decltype, sizeof, noexcept, ...) you can name nonstatic data members also outside of member functions</p>\n</blockquote>\n", "Tags": "<c++><c++11>", "OwnerUserId": "2556973", "AnswerCount": "1"}, "26199701": {"ParentId": "26199545", "CommentCount": "3", "Body": "<p><code>fn</code> is a valid <em>id-expression</em> denoting a non-static member function. \u00a75.1.1 [expr.prim.general]/p13 (footnote omitted):</p>\n<blockquote>\n<p id=\"so_26199545_26199701_0\">An <em>id-expression</em> that denotes a non-static data member or non-static\n  member function of a class can only be used:</p>\n<ul>\n<li>as part of a class member access (5.2.5) in which the object expression refers to the member\u2019s class or a class derived from that\n  class, or</li>\n<li>to form a pointer to member (5.3.1), or</li>\n<li>if that <em>id-expression</em> denotes a non-static data member and it appears in an unevaluated operand.</li>\n</ul>\n</blockquote>\n<p>\u00a77.1.6.2 [dcl.type.simple]/p4:</p>\n<blockquote>\n<p id=\"so_26199545_26199701_1\">The operand of the <code>decltype</code> specifier is an unevaluated operand\n  (Clause 5).</p>\n</blockquote>\n<p>Since <code>decltype</code> is not one of the few contexts in which an <em>id-expression</em> denoting a non-static member function may be used, the program is ill-formed.</p>\n", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "26199701", "Score": "7", "CreationDate": "2014-10-05T04:47:47.280", "LastActivityDate": "2014-10-05T04:47:47.280"}});