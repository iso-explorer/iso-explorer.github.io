post_cb({"13554136": {"CommentCount": "0", "ViewCount": "36", "CreationDate": "2012-11-25T18:37:49.650", "LastActivityDate": "2012-11-25T18:41:32.967", "Title": "why does it call bool_function first?", "AcceptedAnswerId": "13554155", "PostTypeId": "1", "Id": "13554136", "Score": "0", "Body": "<p>I am curious about the following code, somebody could explain why does it call bool func first ? isn`t \"str\" more suitable for arg type string ?</p>\n<pre><code> void a(bool input)\n    {\n        cout&lt;&lt;\"I amd first\"&lt;&lt;endl;\n        cout&lt;&lt;input&lt;&lt;endl;\n    }\n\n    void a(const string &amp;input)\n    {\n        cout&lt;&lt;\"I amd second\"&lt;&lt;endl;\n        cout&lt;&lt;input&lt;&lt;endl;\n    }\n\n    int main( )\n    {\n        a(\"str\");  //  call  void a(bool input)\n\n        a(string(\"str\"));   //call  void a(const string &amp;input)\n\n        return 0; \n    }\n</code></pre>\n", "Tags": "<c++>", "OwnerUserId": "927727", "AnswerCount": "2"}, "13554155": {"ParentId": "13554136", "CommentCount": "1", "Body": "<p><code>\"str\"</code> is of type <code>const char[4]</code>, which decays immediately to <code>const char *</code>, and the conversion from any pointer type to <code>bool</code> is considered <em>before</em> non-explicit constructors to custom types.</p>\n<p>So, I'd say that the answer is \"because the standard says so\".</p>\n<p>The relevant passage should be 13.3.3.2 \u00b62:</p>\n<blockquote>\n<p id=\"so_13554136_13554155_0\">When comparing the basic forms of implicit conversion sequences (as defined in 13.3.3.1)</p>\n<ul>\n<li>a standard conversion sequence (13.3.3.1.1) is a better conversion sequence than a user-defined conversion sequence or an ellipsis conversion sequence [...]</li>\n</ul>\n</blockquote>\n", "OwnerUserId": "214671", "PostTypeId": "2", "Id": "13554155", "Score": "3", "CreationDate": "2012-11-25T18:40:37.147", "LastActivityDate": "2012-11-25T18:40:37.147"}, "13554168": {"ParentId": "13554136", "CommentCount": "1", "Body": "<p>I'd guess it is because when you call a(\"str\"), you're trying to call a function with parameters const char *. It will convert any type of pointer to bool before any other implicit conversion (::std::string etc).</p>\n", "OwnerUserId": "1008691", "PostTypeId": "2", "Id": "13554168", "Score": "1", "CreationDate": "2012-11-25T18:41:32.967", "LastActivityDate": "2012-11-25T18:41:32.967"}, "bq_ids": {"n4140": {"so_13554136_13554155_0": {"section_id": 638, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_13554136_13554155_0": {"section_id": 628, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_13554136_13554155_0": {"section_id": 666, "quality": 0.8888888888888888, "length": 8}}}});