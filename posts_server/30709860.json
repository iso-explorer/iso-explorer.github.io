post_cb({"30709915": {"ParentId": "30709860", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>You can't initialize data members like that in older versions of C++. Try this instead:</p>\n<pre><code>class test{\n    private:\n        int* p;\n        shared_ptr&lt;int&gt; a;\n    public:\n        test() : p(new int(10)), a(p) {}\n        void get_pointer();\n};\n</code></pre>\n", "OwnerUserId": "252000", "LastEditorUserId": "252000", "LastEditDate": "2015-06-08T13:05:27.880", "Id": "30709915", "Score": "3", "CreationDate": "2015-06-08T13:04:12.863", "LastActivityDate": "2015-06-08T13:05:27.880"}, "bq_ids": {"n4659": {"so_30709860_30710292_0": {"section_id": 7347, "quality": 0.9090909090909091, "length": 30}}}, "30709860": {"CommentCount": "1", "ViewCount": "135", "CreationDate": "2015-06-08T13:02:10.233", "LastActivityDate": "2015-06-08T13:22:35.177", "Title": "shared_ptr: \"is not a type\" error", "PostTypeId": "1", "Id": "30709860", "OwnerUserId": "4973686", "Body": "<p>I created a simple program to test smart pointers. I started with standard library but later I want to use boost. I have such compiling problem:</p>\n<pre><code>In file included from main.cpp:1:0:\ntest.hpp:14:21: error: \u2018p\u2019 is not a type\n   shared_ptr&lt;int&gt;a (p);\n                 ^\n</code></pre>\n<p>My files and makefile:</p>\n<p>test.hpp:</p>\n<pre><code>#include &lt;string&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;vector&gt;\n#include &lt;memory&gt;\n#include &lt;boost/filesystem.hpp&gt;\n\nusing namespace std;\n\nclass test{\n    private:\n        int* p = new int(10);\n        shared_ptr&lt;int&gt;a (p);\n    public:\n        test() {}\n        void get_pointer();\n};\n</code></pre>\n<p>test.cpp:</p>\n<pre><code>#include \"test.hpp\"\n\nvoid test::get_pointer()\n{\n    printf(\"%s\\n\",*a.get());\n}\n</code></pre>\n<p>main.cpp:</p>\n<pre><code>#include \"test.hpp\"\n#include &lt;memory&gt;\nusing namespace std;\nint main()\n{\n    test tescik;\n    tescik.get_pointer();\n    int b;\n    scanf(\"%d\",&amp;b);\n    return 0;\n}\n</code></pre>\n<p>makefile:</p>\n<pre><code>tester: main.cpp test.cpp\n    g++ -o tester -std=c++11 main.cpp test.cpp -lboost_system -lboost_filesystem -lglfw3 -lGLU -lGL -lX11 -lXxf86vm -lXcursor -lrt -lm -lXinerama -lXrandr -lpthread -lXi -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_video -lopencv_objdetect\n</code></pre>\n<p>I know I overextended compilation settings (opengl and boost), but I'll use them later. Any ideas why so simple program doesn't work?</p>\n", "Tags": "<c++><shared-ptr>", "Score": "0", "AnswerCount": "2"}, "30710292": {"ParentId": "30709860", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_30709860_30710292_0\">A brace-or-equal-initializer shall appear only in the declaration of a data member. (For static data members,\n  see 9.4.2; for non-static data members, see 12.6.2). A brace-or-equal-initializer for a non-static data member\n  shall not directly or indirectly cause the implicit definition of a defaulted default constructor for the enclosing\n  class or the exception specification of that constructor.</p>\n</blockquote>\n<p>You've used parentheses to initialize a data member directly in its declaration. Use a brace or an equal initializer, or move the initialization in the initializer list of the constructor.</p>\n<p>Personally, I recommend to always use brace initialization (except maybe right now with auto because there's going to be a breaking change soon), because it's the only kind of initialization that can be used anywhere.</p>\n", "OwnerUserId": "2356414", "PostTypeId": "2", "Id": "30710292", "Score": "1", "CreationDate": "2015-06-08T13:22:35.177", "LastActivityDate": "2015-06-08T13:22:35.177"}});