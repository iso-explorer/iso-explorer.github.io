post_cb({"bq_ids": {"n4140": {"so_21182296_21183844_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 5361}}, "n3337": {"so_21182296_21183844_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 5157}}, "n4659": {"so_21182296_21183844_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 6789}}}, "21183844": {"Id": "21183844", "PostTypeId": "2", "Body": "<p>You have a C-style string declared here:</p>\n<pre><code>char * ch = \"acbcccdc\";\n</code></pre>\n<p>that is passed as an argument to the <code>replace</code> function. In it you are trying to modify a character from the string at the line:</p>\n<pre><code>*str = c2;\n</code></pre>\n<p>which is also where your program stops. </p>\n<p>The Standard, at section \u00a72.14.5/12, clearly specifies:</p>\n<blockquote>\n<p id=\"so_21182296_21183844_0\">The effect of attempting to modify a string literal is undefined.</p>\n</blockquote>\n<p>Therefore your program's behavior is <em>undefined</em>.</p>\n<p>Since you are using C++, and not C, I recommend to use <code>std::string</code> instead. With it you would have avoided this, and many other problems. Not to mention that most of your code will look cleaner. Just look at the <code>std::string</code> counterpart for your <code>replace</code> function:</p>\n<pre><code>int replace(std::string&amp; str, char c1, char c2) {\n    int cc = std::count(str.begin(), str.end(), c1);\n    std::replace(str.begin(), str.end(), c1, c2);\n    return cc;\n}\n</code></pre>\n", "LastEditorUserId": "493122", "LastActivityDate": "2014-01-17T10:47:44.553", "Score": "1", "CreationDate": "2014-01-17T10:41:21.683", "ParentId": "21182296", "CommentCount": "0", "OwnerUserId": "493122", "LastEditDate": "2014-01-17T10:47:44.553"}, "21182296": {"ViewCount": "167", "Body": "<p>My code:</p>\n<pre><code>void simple();\n/*\n * Write a function that has this prototype\n *         int replace(char * str, char c1, char c2);\n * Have the function replace every occurrence of c1 in the string str with c2, and\n * have the function return the number of replacements it makes.\n */\nint replace(char * str, char c1, char c2);\n\ncSeven::cSeven() {\n\n}\n\ncSeven::~cSeven() {\n\n}\n\nvoid cSeven::show() {\n    exes();\n}\n\nvoid cSeven::exes() {\n    char * ch = \"acbcccdc\";\n    int occ = replace(ch, 'c', 'b');\n    cout &lt;&lt; occ;\n}\n\nint replace(char * str, char c1, char c2) {\n    int cc = 0;\n    while (*str) {\n        if (*str == c1) {\n            cout&lt;&lt;*str&lt;&lt;endl;\n            *str = c2;\n            cout&lt;&lt;*str&lt;&lt;endl;\n            cc++;\n        }\n        str++;\n    }\n    return cc;\n}\n</code></pre>\n<p>The program stopped at the \"*str = c2;\", I could't see anything wrong with it. Could anybody shed the light on this?? Thanks</p>\n", "AcceptedAnswerId": "21182861", "Title": "C++ Why does this program does not give any output?", "CreationDate": "2014-01-17T09:30:48.947", "Id": "21182296", "CommentCount": "6", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2014-01-17T09:33:38.903", "LastEditorUserId": "554807", "LastActivityDate": "2014-01-17T10:47:44.553", "ClosedDate": "2014-01-17T13:19:27.723", "Score": "-9", "OwnerUserId": "1000128", "Tags": "<c++>", "AnswerCount": "2"}, "21182861": {"Id": "21182861", "PostTypeId": "2", "Body": "<p>You're attempting to modify a string literal. You are not allowed to do that.<br>\nYour compiler should have warned you about the line</br></p>\n<pre><code>char * ch = \"acbcccdc\";\n</code></pre>\n<p>If it didn't, you need to increase the warning level</p>\n<p>Replace that line with</p>\n<pre><code>char ch[] = \"acbcccdc\";\n</code></pre>\n<p>so you work on a mutable copy of the string instead.</p>\n", "LastActivityDate": "2014-01-17T09:56:43.243", "CommentCount": "1", "CreationDate": "2014-01-17T09:56:43.243", "ParentId": "21182296", "Score": "1", "OwnerUserId": "404970"}});