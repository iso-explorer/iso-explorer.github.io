post_cb({"bq_ids": {"n4140": {"so_46873142_46873181_0": {"length": 24, "quality": 0.96, "section_id": 5930}, "so_46873142_46873181_1": {"length": 5, "quality": 1.0, "section_id": 3263}}, "n3337": {"so_46873142_46873181_0": {"length": 24, "quality": 0.96, "section_id": 5702}, "so_46873142_46873181_1": {"length": 5, "quality": 1.0, "section_id": 3135}}, "n4659": {"so_46873142_46873181_0": {"length": 24, "quality": 0.96, "section_id": 7415}, "so_46873142_46873181_1": {"length": 5, "quality": 1.0, "section_id": 4021}}}, "46873142": {"ViewCount": "76", "Body": "<pre><code>#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    class c1{\n        int i;\n\n        public:\n        int bv;\n        void seti(int i){\n            c1::i=i;\n                        }\n        int geti(){return i;}\n        int accessbv(c1 inst1);\n    };\n    int c1::accessbv (c1 inst1){\n        cout&lt;&lt;\"here in the base accesing inst1's bv\"&lt;&lt;inst1.bv;\n    }\n</code></pre>\n<p>I want to access inst1's member variable bv.The above code doesnt compile. What should i do?\nAlso i have observed one thing ,if the class c1's defintion is global it is working the way i want it to. Why is it behaving this way? </p>\n", "AcceptedAnswerId": "46873181", "Title": "What should i do to access member variable of an object?", "CreationDate": "2017-10-22T10:43:56.507", "Id": "46873142", "CommentCount": "6", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2017-11-10T05:08:01.963", "Score": "1", "OwnerUserId": "8667423", "Tags": "<c++>", "AnswerCount": "2"}, "46873642": {"Id": "46873642", "PostTypeId": "2", "Body": "<p>To expand on StoryTeller's answser here is an example of explaining what it means by your comment to his answer:</p>\n<blockquote>\n<p id=\"so_46873142_46873642_0\">can you clarify the first statement \"An enclosing function has no special access to members of the local class; it obeys the usual access rules (Clause [class.access]).\" and add something about no functions allowed inside another function rule.</p>\n</blockquote>\n<pre><code>void someFunc() {\n    class foo {\n    private:\n        int x;\n    public:\n        int getX() const { return x; }\n        void setX( int val ) { x = val; }\n    };\n}\n</code></pre>\n<p>Here <code>foo</code> is a local class that is declared in <code>someFunc()</code>. The scope or body of <code>someFunc</code> has no means of accessing <code>foo</code>'s internals. Since the above functions are declared &amp; defined within <code>foo</code>'s scope this is valid.</p>\n<p>Trying to do this:</p>\n<pre><code>void someFunc() {\n    class boo {\n    private:\n        int x;\n    public:\n        int getX() const;\n        void setX( int val );\n    };\n\n    // These are illegal. You can not define a function within a function\n    // even when they belong to a class.\n\n    // These two functions can not be defined here because this is\n    // considered re-declaring them out side of their class within local scope of a function. \n    // These will give you a compiler error: local function definitions are illegal\n    int boo::getX() const { return x; }\n    void boo::setX( int val ) { x = val; }\n} \n</code></pre>\n<p>Results in a compiler error.</p>\n<p>Here <code>someFunc()</code> has no way of accessing <code>boo</code>'s scope through its scope resolution operator for its member variables. It can not access <code>boo::x</code>.</p>\n<p>It is illegal to declare a function within a function this can not be done because of the stack pointer for function scope. Functions are not like while &amp; for loops or switch statements which can be nested. A function's scope is a single translation unit within an object file after it's been compiled. You can have an empty scope within a function as that is valid, but you can not declare - define a function within another. </p>\n", "LastEditorUserId": "1757805", "LastActivityDate": "2017-11-10T05:08:01.963", "Score": "1", "CreationDate": "2017-10-22T11:42:44.657", "ParentId": "46873142", "CommentCount": "0", "OwnerUserId": "1757805", "LastEditDate": "2017-11-10T05:08:01.963"}, "46873181": {"Id": "46873181", "PostTypeId": "2", "Body": "<p>Just because the class is local, doesn't mean the rules for defining functions change. The C++ standard even goes as far as to state it explicitly.</p>\n<p><a href=\"https://timsong-cpp.github.io/cppwp/n4140/class.local#2\" rel=\"nofollow noreferrer\">[class.local]/2</a>, emphasis mine:</p>\n<blockquote>\n<p id=\"so_46873142_46873181_0\">An enclosing function has no special access to members of the local\n  class; it obeys the usual access rules (Clause [class.access]). <strong>Member\n  functions of a local class shall be defined within their class\n  definition, if they are defined at all.</strong></p>\n</blockquote>\n<p>\"The rules\" mentioned above is simply what is stated in the function definition related section of the standard, <a href=\"https://timsong-cpp.github.io/cppwp/n4140/dcl.fct.def.general#2\" rel=\"nofollow noreferrer\">[dcl.fct.def.general]/2</a>:</p>\n<blockquote>\n<p id=\"so_46873142_46873181_1\">... A function shall be defined only in namespace or class scope.</p>\n</blockquote>\n<p>And that's it.</p>\n", "LastEditorUserId": "817643", "LastActivityDate": "2017-10-22T11:47:16.170", "Score": "2", "CreationDate": "2017-10-22T10:47:44.370", "ParentId": "46873142", "CommentCount": "4", "OwnerUserId": "817643", "LastEditDate": "2017-10-22T11:47:16.170"}});