post_cb({"bq_ids": {"n4140": {"so_25827435_25827463_0": {"length": 30, "quality": 1.0, "section_id": 3327}}, "n3337": {"so_25827435_25827463_0": {"length": 29, "quality": 0.9666666666666667, "section_id": 3197}}, "n4659": {"so_25827435_25827463_0": {"length": 27, "quality": 0.9, "section_id": 4093}}}, "25827435": {"ViewCount": "1889", "Body": "<p>For example</p>\n<pre><code>struct A\n{\n    vector&lt;unique_ptr&lt;int&gt;&gt; m_vector { make_unique&lt;int&gt;(1), make_unique&lt;int&gt;(2) };\n};\n</code></pre>\n<p>I try above but failed. Any way to initialize a vector of unique_ptr?</p>\n", "AcceptedAnswerId": "25827463", "Title": "Any way to initialize a vector of unique_ptr?", "CreationDate": "2014-09-13T20:33:33.950", "Id": "25827435", "CommentCount": "2", "PostTypeId": "1", "LastActivityDate": "2014-09-13T20:37:25.307", "Score": "3", "OwnerUserId": "1899020", "Tags": "<c++><c++11><initialization>", "AnswerCount": "1"}, "25827463": {"Id": "25827463", "PostTypeId": "2", "Body": "<p>You can't move from an initializer list because the elements are <code>const</code>.  \u00a78.5.4 [dcl.init.list]/p5:</p>\n<blockquote>\n<p id=\"so_25827435_25827463_0\">An object of type <code>std::initializer_list&lt;E&gt;</code> is constructed from an\n  initializer list as if the implementation allocated an array of <code>N</code>\n  elements of type <code>const E</code>, where N is the number of elements in the\n  initializer list. Each element of that array is copy-initialized with\n  the corresponding element of the initializer list, and the\n  <code>std::initializer_list&lt;E&gt;</code> object is constructed to refer to that\n  array.</p>\n</blockquote>\n<p>You can only copy, but you can't copy a <code>unique_ptr</code> since it's move-only.</p>\n<p>You'd have to use <code>push_back</code> or <code>emplace_back</code> etc. to fill the vector after you construct it.</p>\n", "LastActivityDate": "2014-09-13T20:37:25.307", "CommentCount": "1", "CreationDate": "2014-09-13T20:37:25.307", "ParentId": "25827435", "Score": "6", "OwnerUserId": "2756719"}});