post_cb({"4696553": {"CommentCount": "0", "ViewCount": "210", "PostTypeId": "1", "LastEditorUserId": "4370109", "CreationDate": "2011-01-14T22:13:42.887", "LastActivityDate": "2016-03-04T17:27:35.240", "Title": "Is there a limit to the number of #defines that the gcc and VC++ preprocessors can handle?", "AcceptedAnswerId": "4696585", "LastEditDate": "2016-03-04T17:27:35.240", "Id": "4696553", "Score": "5", "Body": "<p>In discussing design possibilities for a project that has a very large number of constants and bit patterns to be defined, the question came up about how many #defines can a standard compiler handle?  I assume it is a very large number, but we were curious to know if there is an actual upper bound.</p>\n", "Tags": "<visual-c++><gcc><c-preprocessor>", "OwnerUserId": "14450", "AnswerCount": "3"}, "4696585": {"ParentId": "4696553", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>For a \"standard compiler\":</p>\n<p>5.2.4.1: \"Translation limits\"</p>\n<blockquote>\n<p id=\"so_4696553_4696585_0\">The implementation shall be able to\n  translate and execute at least one\n  program that contains at least one\n  instance of every one of the following\n  limits</p>\n<p id=\"so_4696553_4696585_1\">...</p>\n<p id=\"so_4696553_4696585_2\">4095 macro identifiers simultaneously\n  defined in one preprocessing\n  translation unit</p>\n</blockquote>\n<p>Note the slightly odd way of phrasing the requirement. Implementations <em>could</em> satisfy it by having a single \"golden program\" which they recognise and compile as a special case, although that would be akin to rigging benchmarks. In practice you can read the standard as saying that if your implementation imposes a limit other than available memory, then that limit <em>should</em> be at least 4095. Beyond 4095 you are relying on implementation-specific behavior to an extent.</p>\n<p>Some compilers (Microsoft) impose some implementation limits which are less than the standard says. These are listed somewhere on MSDN I think, but possibly only for C++. As far as C goes, since I'm quoting C99 it might not be relevant to MSVC anyway.</p>\n<p>For GCC and MSVC in particular, it shouldn't be too hard to test whether a given implementation imposes an arbitrary limit, perhaps easier than finding it documented :-) Auto-generate files containing nothing but great long lists of <code>#define</code>, see what the preprocessor makes of them.</p>\n", "OwnerUserId": "13005", "LastEditorUserId": "13005", "LastEditDate": "2011-01-14T22:59:21.920", "Id": "4696585", "Score": "7", "CreationDate": "2011-01-14T22:17:43.420", "LastActivityDate": "2011-01-14T22:59:21.920"}, "4696578": {"ParentId": "4696553", "CommentCount": "0", "Body": "<p>I have never heard of anyone running out.  Ever.</p>\n", "OwnerUserId": "116908", "PostTypeId": "2", "Id": "4696578", "Score": "2", "CreationDate": "2011-01-14T22:16:47.117", "LastActivityDate": "2011-01-14T22:16:47.117"}, "bq_ids": {"n4140": {"so_4696553_4696585_2": {"section_id": 47, "quality": 0.7777777777777778, "length": 7}}, "n3337": {"so_4696553_4696585_2": {"section_id": 491, "quality": 0.5555555555555556, "length": 5}}, "n4659": {"so_4696553_4696585_2": {"section_id": 48, "quality": 0.7777777777777778, "length": 7}}}, "4696730": {"ParentId": "4696553", "CommentCount": "3", "Body": "<p>The C preprocessor doesn't expand <code>#define</code> before they are actually used. So in a typical implementation the only limit you might encounter is memory to store all that. But this memory for storing the internal representation of the macros will basically at most be something proportional to the size of the files that the compiler reads.</p>\n<p>(Well you could do multiple inclusion of files also...)</p>\n<p>You could make explode a preprocessing run by expanding deeply nested macros, I guess. Something like</p>\n<pre><code>#define EXP1(X) X X\n#define EXP2(X) EXP1(X) EXP1(X)\n#define EXP3(X) EXP2(X) EXP2(X)\n.\n.\n#define EXP64(X) EXP63(X) EXP63(X)\nEXP64(A)\n</code></pre>\n<p>should do the trick, since it gives you 2^64 copies of A, or so. AFAIR, these macro definitions are even within the bounds that the standard imposes.</p>\n", "OwnerUserId": "366377", "PostTypeId": "2", "Id": "4696730", "Score": "0", "CreationDate": "2011-01-14T22:39:01.100", "LastActivityDate": "2011-01-14T22:39:01.100"}});