post_cb({"32661149": {"Id": "32661149", "PostTypeId": "2", "Body": "<p>[temp.deduct.type]/p5:</p>\n<blockquote>\n<p id=\"so_32661088_32661149_0\">The non-deduced contexts are:</p>\n<ul>\n<li>[...]</li>\n<li>A function parameter pack that does not occur at the end of the <em>parameter-declaration-list</em>.</li>\n</ul>\n</blockquote>\n<p>To get deduction, you'll have to do</p>\n<pre><code>template &lt;typename... Args&gt;\nvoid f(Args... args)\n{\n}\n</code></pre>\n<p>and slice off the last argument in the body, or make <code>last</code> <code>first</code> instead:</p>\n<pre><code>template &lt;typename... Args&gt;\nvoid f(int first, Args... args)\n{\n}\n</code></pre>\n<p>It's hard to give more specific advice since we don't know what this function template is supposed to do.</p>\n", "LastActivityDate": "2015-09-18T21:16:42.210", "CommentCount": "0", "CreationDate": "2015-09-18T21:16:42.210", "ParentId": "32661088", "Score": "5", "OwnerUserId": "2756719"}, "bq_ids": {"n4140": {"so_32661088_32661153_0": {"length": 9, "quality": 0.9, "section_id": 336}}, "n3337": {"so_32661088_32661153_0": {"length": 8, "quality": 0.8, "section_id": 293}}, "n4659": {"so_32661088_32661153_0": {"length": 9, "quality": 0.9, "section_id": 345}}}, "32661088": {"ViewCount": "378", "Body": "<p>I have this function:</p>\n<pre><code>template &lt;typename... Args&gt;\nvoid f(Args... args, int last)\n{\n}\n</code></pre>\n<p>Template deduction fails if I call it without explicit template parameters:</p>\n<pre><code>f(2, 2); // candidate expects 1 argument, 2 provided\n</code></pre>\n<p>But giving the explicit template parameters for the parameter pack works:</p>\n<pre><code>f&lt;int&gt;(2, 2); // compiles fine\n</code></pre>\n<p>Even though logically speaking, the compiler should be able to deduce that the parameter pack consists of all but the last argument types. How would I fix this?</p>\n", "AcceptedAnswerId": "32661149", "Title": "Template deduction fails with argument after parameter pack", "CreationDate": "2015-09-18T21:10:30.217", "Id": "32661088", "CommentCount": "0", "LastEditDate": "2016-03-25T12:11:13.780", "PostTypeId": "1", "LastEditorUserId": "3235496", "LastActivityDate": "2016-03-25T12:11:13.780", "Score": "3", "OwnerUserId": "5350740", "Tags": "<c++><templates><c++11><template-deduction>", "AnswerCount": "2"}, "32661153": {"Id": "32661153", "PostTypeId": "2", "Body": "<p>From [temp.deduct.type]:</p>\n<blockquote>\n<p id=\"so_32661088_32661153_0\">The non-deduced contexts are:<br>\n  [...] \u2014 A function parameter pack that does not occur at the end of the <em>parameter-declaration-list</em>.</br></p>\n</blockquote>\n<p>Your parameter pack, <code>args</code>, is a non-deduced context since it's not the last parameter. Non-deduced contexts, like the name suggests, cannot be deduced - which leads to a template deduction failure. </p>\n<p>When you explicitly provide the template parameters (via <code>f&lt;int&gt;(2, 2)</code>), no deduction has to take place, so the code is fine, you are simply explicitly calling <code>f&lt;int&gt;(int, int)</code>. </p>\n", "LastActivityDate": "2015-09-18T21:16:55.437", "CommentCount": "0", "CreationDate": "2015-09-18T21:16:55.437", "ParentId": "32661088", "Score": "1", "OwnerUserId": "2069064"}});