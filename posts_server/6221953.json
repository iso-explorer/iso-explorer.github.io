post_cb({"6221967": {"ParentId": "6221953", "CommentCount": "0", "Body": "<p><code>continue</code> is a keyword in C++, so you cannot have a variable with that name.</p>\n", "OwnerUserId": "129570", "PostTypeId": "2", "Id": "6221967", "Score": "5", "CreationDate": "2011-06-03T00:57:55.117", "LastActivityDate": "2011-06-03T00:57:55.117"}, "6221992": {"ParentId": "6221953", "CommentCount": "0", "Body": "<p>continue is used to short-circuit loops, e.g.:</p>\n<pre><code>for (i = 0; i &lt; 10; ++i)\n{\n    if (f(i))\n    {\n        continue; // skip the rest of the loop\n    }\n\n    do_something_interesting_with(i);\n}\n</code></pre>\n", "OwnerUserId": "780719", "PostTypeId": "2", "Id": "6221992", "Score": "3", "CreationDate": "2011-06-03T01:02:32.983", "LastActivityDate": "2011-06-03T01:02:32.983"}, "6221953": {"CommentCount": "7", "ViewCount": "198", "PostTypeId": "1", "ClosedDate": "2013-12-07T04:53:12.617", "LastEditorUserId": "27615", "CreationDate": "2011-06-03T00:54:15.627", "LastActivityDate": "2011-06-03T12:10:17.810", "LastEditDate": "2011-06-03T10:12:40.843", "FavoriteCount": "1", "Title": "What doesn't my C++ program work when I try to use recursion?", "Id": "6221953", "Score": "-2", "Body": "<hr>\n<p>I need help with the following c++ code, trying to add a <code>continue</code> at the end of the program so that it will make a user specified dimension for rectangle and ask the user to redo the program again.</p>\n<p>Compile and ran it without the silly if and else statement at the final part of the program, and it works. But with the <code>continue</code> / recursion it failed miserably. lolz. me = noob.</p>\n<hr>\n<pre><code>int main()\n{\n\n\n    int height, width, tmp, tmp2;\n\n    char continue;\n\n    cout &lt;&lt; \"Please Enter The Height Of A Rectangle (whole numbers only): \";\nheight:\n    cin &gt;&gt; height;\n    if(height&lt;1)\n    {\n        cout &lt;&lt; \"   Please Enter A Height Of Between 1 And 20: \";\n        goto height;\n    }\n    cout &lt;&lt; \"Please Enter The Width Of A Rectangle  (whole numbers only): \";\nwidth:\n    cin &gt;&gt; width;\n    if(width&lt;1)\n    {\n        cout &lt;&lt; \"   Please Enter A Width Of Between 1 And 38: \";\n        goto width;\n    }\n\n    cout &lt;&lt; ' ';                                         // Add a space at the start (to neaten top)\n    for(tmp=0; tmp!=width; tmp++) cout &lt;&lt; \"__\";          // Top Of Rectangle\n    for(tmp=0; tmp!=(height-1); tmp++)\n    {\n        cout &lt;&lt; \"\\n|\";   // Left Side Of Rectangle\n        for(tmp2=0; tmp2!=width; tmp2++) cout &lt;&lt; \"  \";    // Create A Gap Between Sides\n        cout &lt;&lt; \"|\";\n    }                                  // Right Side Of Rectangle\n    cout &lt;&lt; \"\\n|\";                                       // Left Side Of Bottom Of Rectangle  to neaten bottom)\n    for(tmp=0; tmp!=width; tmp++) cout &lt;&lt; \"__\";          // Bottom Of Rectangle\n    cout &lt;&lt; '|';                                         // Right Side Of Bottom Of Rectangle (to neaten bottom)\n\n    cout &lt;&lt; \"Type 'y' if you would like to continue and any other combination to quit.\";\ncontinue:\n    cin &gt;&gt; continue;\n    if(continue == 'y')\n    {\n        main();\n        cout &lt;&lt; \"\\n\\n\";\n        system(\"PAUSE\");\n        return 0;\n    }\n    else\n        cout &lt;&lt; \"\\n\\n\";\n    system(\"PAUSE\");\n    return 0;\n}\n</code></pre>\n</hr></hr>", "Tags": "<c++><recursion><continue>", "OwnerUserId": "352258", "AnswerCount": "6"}, "6221975": {"ParentId": "6221953", "CommentCount": "0", "Body": "<p>continue is a c++ keyword, use a different name for it </p>\n<p>instead of </p>\n<pre><code>char continue;\n</code></pre>\n<p>try</p>\n<pre><code>char cont;\n</code></pre>\n", "OwnerUserId": "190952", "PostTypeId": "2", "Id": "6221975", "Score": "2", "CreationDate": "2011-06-03T00:59:05.130", "LastActivityDate": "2011-06-03T00:59:05.130"}, "6221987": {"ParentId": "6221953", "CommentCount": "1", "Body": "<p>In addition to <code>continue</code> being a reserved word, it is illegal to call <code>main</code> in C++. From the '03 standard, \u00a73.6.1/3:</p>\n<blockquote>\n<p id=\"so_6221953_6221987_0\">The function <code>main</code> shall not be used within a program. The linkage of <code>main</code> is implementation-defined. A program that declares <code>main</code> to be <code>inline</code> or <code>static</code> is ill-formed. The name <code>main</code> is not otherwise reserved. [<em>Example</em>: member functions, classes, and enumerations can be called <code>main</code>, as can entities in other namespaces. ]</p>\n</blockquote>\n", "OwnerUserId": "636019", "PostTypeId": "2", "Id": "6221987", "Score": "4", "CreationDate": "2011-06-03T01:01:20.590", "LastActivityDate": "2011-06-03T01:01:20.590"}, "6221978": {"ParentId": "6221953", "CommentCount": "1", "Body": "<p>You should put your code in a a while loop.</p>\n<pre><code>int main()\n{\n    //  declaration of variables here\n\n    do\n    {\n        // code here\n\n        cout &lt;&lt; \"Type 'y' if you would like to continue and any other combination to quit.\";\n        cin &gt;&gt; doYouWantToContinue; // change the keyword!\n    }\n    while (doYouWantToContinue == 'y');\n}\n</code></pre>\n", "OwnerUserId": "641874", "PostTypeId": "2", "Id": "6221978", "Score": "5", "CreationDate": "2011-06-03T00:59:32.243", "LastActivityDate": "2011-06-03T00:59:32.243"}, "bq_ids": {"n4140": {"so_6221953_6221987_0": {"section_id": 7147, "quality": 0.8333333333333334, "length": 25}}, "n3337": {"so_6221953_6221987_0": {"section_id": 6891, "quality": 0.8333333333333334, "length": 25}}, "n4659": {"so_6221953_6221987_0": {"section_id": 8648, "quality": 0.8, "length": 24}}}, "6222004": {"ParentId": "6221953", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>My 2\u00a2: throw away all this stuff, and rewrite it keeping in mind that</p>\n<ol>\n<li><code>goto</code>s and labels are bad;</li>\n<li>they should be replaced with loops (probably <code>do</code>...<code>while</code> in your case);</li>\n<li>declaring variables/labels with reserved/already used names is bad (and in most cases it's illegal);</li>\n<li>recursing in <code>main</code> is bad (actually, it's illegal according to the standard);</li>\n<li>good indentation is not optional (even if the compiler won't mind).</li>\n<li><code>#include</code>s are <em>not</em> optional.</li>\n</ol>\n<p>And maybe move the user input/validation logic in a separate function to avoid code duplication.</p>\n", "OwnerUserId": "214671", "LastEditorUserId": "214671", "LastEditDate": "2011-06-03T01:10:19.510", "Id": "6222004", "Score": "0", "CreationDate": "2011-06-03T01:04:55.707", "LastActivityDate": "2011-06-03T01:10:19.510"}});