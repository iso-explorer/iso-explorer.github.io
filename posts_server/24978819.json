post_cb({"24979030": {"Id": "24979030", "PostTypeId": "2", "Body": "<p>It is not a reference to a reference, after the reference declaration, using the name in an expression behaves as using the name of the object itself.</p>\n<blockquote>\n<p id=\"so_24978819_24979030_0\">5 Expressions    6. If an expression initially has the type \u201creference to T\u201d (8.3.2, 8.5.3), the type is adjusted to \u201cT\u201d prior to any\n  further analysis, the expression designates the object or function denoted by the reference, and the expression is an lvalue.</p>\n</blockquote>\n<p>So when you do this:</p>\n<pre><code>int &amp;ref_ref_i=ref_i;\n</code></pre>\n<p><code>ref_ref</code> is actually a reference to the original variable <code>i</code>.</p>\n<p>If you tried to do something like this instead:</p>\n<pre><code>int i = 6;\nint &amp;ri = i;\nint &amp;&amp;ri = ri;\n</code></pre>\n<p>You would get a compiler error, like the the quote you wrote suggests.</p>\n<p>Note: This answer applies to C++ 2003 and prior standards only and does not take into account rvalue references.</p>\n", "LastEditorUserId": "1707560", "LastActivityDate": "2014-07-27T08:35:40.070", "Score": "1", "CreationDate": "2014-07-27T07:56:51.413", "ParentId": "24978819", "CommentCount": "3", "OwnerUserId": "1707560", "LastEditDate": "2014-07-27T08:35:40.070"}, "24978819": {"ViewCount": "449", "Body": "<p>According to ISO C++ 2003 standard section 8.3.2 </p>\n<blockquote>\n<p id=\"so_24978819_24978819_0\">\"references to references are not allowed\"</p>\n</blockquote>\n<p>But I have tried following code in Visual C++ and Ideone, and both compilers are running this code successfully.</p>\n<p><a href=\"http://ideone.com/idHmyb\" rel=\"noreferrer\">Ideone GCC C++4.3.2</a></p>\n<pre><code>int main() \n{\n    int i=2;\n    int &amp;ref_i=i;\n    int &amp;ref_ref_i=ref_i; // should be an error according to c++ 2003 standard\n\n    cout&lt;&lt;i&lt;&lt;endl&lt;&lt;ref_i&lt;&lt;endl&lt;&lt;ref_ref_i;  \n    return 0;\n}\n</code></pre>\n<p>I am really confused after looking at this behavior of compilers; can someone explain this?</p>\n", "AcceptedAnswerId": "24978892", "Title": "Reference to reference is not allowed in ISO C++ 2003 standard, but why it is allowed by compilers?", "CreationDate": "2014-07-27T07:24:37.860", "Id": "24978819", "CommentCount": "0", "LastEditDate": "2014-07-27T07:50:52.390", "PostTypeId": "1", "LastEditorUserId": "15168", "LastActivityDate": "2014-07-27T17:08:01.960", "Score": "6", "OwnerUserId": "3625742", "Tags": "<c++><visual-c++><gcc><reference>", "AnswerCount": "4"}, "24979327": {"Id": "24979327", "PostTypeId": "2", "Body": "<p>References to references are illegal in C++03, but you are not creating one.</p>\n<p>The following code attempts to create a reference to reference:</p>\n<pre><code>int main(){\n    int c = 0;\n    typedef int &amp; IREF;\n    int &amp; c1 = c;\n    IREF &amp; c2 = c1;\n    int &amp; &amp; c3 = c1;\n}\n</code></pre>\n<p>...and <a href=\"http://coliru.stacked-crooked.com/a/88b2a4606591ca28\" rel=\"nofollow\">fails miserably</a> when g++ is put in C++03 mode:</p>\n<pre><code>&gt; g++-4.9 -std=c++03 -O2 -Wall -pedantic -pthread main.cpp\nmain.cpp: In function 'int main()':\nmain.cpp:5:12: error: cannot declare reference to 'IREF {aka int&amp;}'\n     IREF &amp; c2 = c1;\n            ^\nmain.cpp:6:13: error: cannot declare reference to 'int&amp;', which is not a typedef or a template type argument\n     int &amp; &amp; c3 = c1;\n             ^\n</code></pre>\n<p>As noted in another answer, C++11 added new reference collapsing rules to make <code>IREF &amp; c2 = c1;</code> well-formed but not <code>int &amp; &amp; c3 = c1;</code>, <code>int &amp;</code> being neither a <em>typedef-name</em> nor a <em>decltype-specifier</em>.</p>\n", "LastEditorUserId": "2756719", "LastActivityDate": "2014-07-27T17:08:01.960", "Score": "2", "CreationDate": "2014-07-27T08:41:01.587", "ParentId": "24978819", "CommentCount": "1", "OwnerUserId": "2756719", "LastEditDate": "2014-07-27T17:08:01.960"}, "24979090": {"Id": "24979090", "PostTypeId": "2", "Body": "<p>After you have done:</p>\n<pre><code>int i=2;\nint &amp;ref_i=i;\n</code></pre>\n<p>then <code>i</code> and <code>ref_i</code> are alternative names for the same variable. It's not useful to say that one of them is a reference and one of them isn't, as there is no possible program that can distinguish \"which is which\".</p>\n<p>That code is identical in effect to:</p>\n<pre><code>int ref_i = 2;\nint &amp;i = ref_i;\n</code></pre>\n", "LastActivityDate": "2014-07-27T08:05:46.307", "CommentCount": "0", "CreationDate": "2014-07-27T08:05:46.307", "ParentId": "24978819", "Score": "0", "OwnerUserId": "1505939"}, "bq_ids": {"n4140": {"so_24978819_24979030_0": {"length": 17, "quality": 0.85, "section_id": 5938}, "so_24978819_24978892_0": {"length": 23, "quality": 0.8846153846153846, "section_id": 3223}}, "n3337": {"so_24978819_24979030_0": {"length": 17, "quality": 0.85, "section_id": 5710}, "so_24978819_24978892_0": {"length": 22, "quality": 0.8461538461538461, "section_id": 3097}}, "n4659": {"so_24978819_24979030_0": {"length": 17, "quality": 0.85, "section_id": 7422}, "so_24978819_24978892_0": {"length": 23, "quality": 0.8846153846153846, "section_id": 3980}}}, "24978892": {"Id": "24978892", "PostTypeId": "2", "Body": "<p>You do not create a reference-to-reference in your code.</p>\n<p>It is just another <code>int&amp;</code>, i.e. both are references to an <code>int</code></p>\n<p>(T.C. <a href=\"https://stackoverflow.com/a/24979327/3510483\">shows an example</a> of an illegal C++03 reference to reference)</p>\n<hr>\n<p>The C++11 Standard section \u00a7 8.3.2 explicitly shows this by an example (disallowing references of references, of course, did not change between C++03 and C++11, but reference collapsing is new in C++11) :</p>\n<blockquote>\n<p id=\"so_24978819_24978892_0\">If a typedef-name (7.1.3 , 14.1) or a decltype-specifier (7.1.6.2) denotes a type TR that is a reference to a type T, an attempt to create the type \u201clvalue reference to cv TR\u201d creates the type \u201clvalue reference to T\u201d, while an attempt to create the type \u201crvalue reference to cv TR\u201d creates the type TR.</p>\n</blockquote>\n<pre><code>int i;\ntypedef int&amp; LRI;\ntypedef int&amp;&amp; RRI; \n\nLRI&amp; r1 = i; // r1 has the type int&amp;\nconst LRI&amp; r2 = i; // r2 has the type int&amp; \nconst LRI&amp;&amp; r3 = i; // r3 has the type int&amp;\n</code></pre>\n</hr>", "LastEditorUserId": "-1", "LastActivityDate": "2014-07-27T09:14:02.663", "Score": "14", "CreationDate": "2014-07-27T07:37:38.020", "ParentId": "24978819", "CommentCount": "3", "OwnerUserId": "3510483", "LastEditDate": "2017-05-23T11:53:24.403"}});