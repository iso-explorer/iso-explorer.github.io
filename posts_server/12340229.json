post_cb({"12340240": {"ParentId": "12340229", "CommentCount": "0", "Body": "<p>Yes, undefined behavior can result in a memory leak, and that's what happens when you remove the <code>virtual</code> destructor.</p>\n<h3>C++03 5.3.5)</h3>\n<blockquote>\n<p id=\"so_12340229_12340240_0\">3) [...] In the first alternative (delete object ), if the static type of\n  the operand is different from its dynamic type, the static type shall\n  be a base class of the operand\u2019s dynamic type and the static type\n  shall have a virtual destructor or the behavior is undefined. [...]</p>\n</blockquote>\n", "OwnerUserId": "673730", "PostTypeId": "2", "Id": "12340240", "Score": "5", "CreationDate": "2012-09-09T15:11:33.173", "LastActivityDate": "2012-09-09T15:11:33.173"}, "12340229": {"CommentCount": "2", "ViewCount": "237", "PostTypeId": "1", "LastEditorUserId": "977063", "CreationDate": "2012-09-09T15:10:21.927", "LastActivityDate": "2012-09-09T19:27:22.917", "Title": "C++ virtual desctructor and memory leaks", "LastEditDate": "2012-09-09T19:27:22.917", "Id": "12340229", "Score": "0", "Body": "<p>I have the weirdest memory leak and I have no idea why.\nI have an abstract class as follows:</p>\n<pre><code>class ClassA\n{\npublic:\n    virtual ~ ClassA (){}\n    virtual void notify(ClassB*) = 0;\n    virtual void add(ClassB*) = 0;\n}; \n\nclass ClassC : public ClassA\n{\npublic:\n    void notify(ClassB*)\n    { \n        //some cout statements\n    }\n    void add(ClassB*)\n    { \n        //some cout statements\n    }\n};\n\nint main()\n{\n    ClassA *f = new ClassC();\n    delete f;\n}\n</code></pre>\n<p>Now when I compile the code and run Valgrind, it get no leaks. However, when I remove the ClassA destructor (or make it non-virtual), Valgrind reports 32 bytes as definitely lost memory. I have no idea why this happens, since my destructor is doing nothing and there are no member variables. Any ideas?</p>\n<p>EDIT: I've compiled in Ubuntu 64bit with g++</p>\n", "Tags": "<c++><memory-leaks><polymorphism><destructor><valgrind>", "OwnerUserId": "977063", "AnswerCount": "2"}, "12340562": {"ParentId": "12340229", "CommentCount": "5", "Body": "<p>It is indeed UB as other answer stated. </p>\n<p>I believed those 32 bytes lost are from ClassC hidden pointer(s) to vtable. </p>\n<p>Compare sizeof for ClassA and ClassC in your example...</p>\n<p>Classes with virtual stuff are usually bigger than sum of its members....</p>\n", "OwnerUserId": "1463922", "PostTypeId": "2", "Id": "12340562", "Score": "1", "CreationDate": "2012-09-09T15:55:14.180", "LastActivityDate": "2012-09-09T15:55:14.180"}, "bq_ids": {"n4140": {"so_12340229_12340240_0": {"section_id": 6107, "quality": 0.88, "length": 22}}, "n3337": {"so_12340229_12340240_0": {"section_id": 5873, "quality": 0.88, "length": 22}}, "n4659": {"so_12340229_12340240_0": {"section_id": 7604, "quality": 0.88, "length": 22}}}});