post_cb({"25741357": {"Id": "25741357", "PostTypeId": "2", "Body": "<p>You can do it this way --</p>\n<pre><code>#include &lt;stdio.h&gt;\n\nclass A{\n\npublic:\nstatic void fun()\n{\n    printf(\"Hello World\\n\");\n}\n};\n\nint main()\n{\n    A::fun();\n}\n</code></pre>\n<p><strong>Advantage:</strong></p>\n<ol>\n<li>No need to create object.</li>\n<li>By adding header of this class you can call this function from anywhere.  </li>\n</ol>\n", "LastActivityDate": "2014-09-09T09:41:00.513", "CommentCount": "0", "CreationDate": "2014-09-09T09:41:00.513", "ParentId": "25741239", "Score": "0", "OwnerUserId": "998591"}, "25741239": {"ViewCount": "139", "Body": "<p>I have tried this:</p>\n<pre><code>class A{\n    void fun()\n    {\n        cout&lt;&lt;\"Hello World\";\n    }\n};\n\nint main()\n{\n    A* obj;\n    obj-&gt;fun();\n}\n</code></pre>\n<p>It prints \"Hello World\". but I havent allocated any memory. </p>\n", "Title": "Can we call a member function of a class without allocating memory?", "CreationDate": "2014-09-09T09:34:36.983", "LastActivityDate": "2014-09-09T09:55:25.913", "CommentCount": "8", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2014-09-09T09:55:25.913", "LastEditorUserId": "1783706", "Id": "25741239", "Score": "1", "OwnerUserId": "3443347", "Tags": "<c++>", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_25741239_25741356_0": {"length": 8, "quality": 0.5714285714285714, "section_id": 7192}, "so_25741239_25741602_0": {"length": 11, "quality": 1.0, "section_id": 5890}}, "n3337": {"so_25741239_25741356_0": {"length": 13, "quality": 0.9285714285714286, "section_id": 5}, "so_25741239_25741602_0": {"length": 11, "quality": 1.0, "section_id": 5661}}, "n4659": {"so_25741239_25741356_0": {"length": 8, "quality": 0.5714285714285714, "section_id": 8701}, "so_25741239_25741602_0": {"length": 11, "quality": 1.0, "section_id": 7373}}}, "25741289": {"Id": "25741289", "PostTypeId": "2", "Body": "<p>The code in question has <strong>undefined behavior</strong>, using an indeterminate value for the pointer.</p>\n<p>It might crash, or do anything, including that it might work.</p>\n<p>If a member function doesn't need an instance, make it a <code>static</code> member function; then you can call it like <code>A::fun()</code>.</p>\n", "LastActivityDate": "2014-09-09T09:37:22.477", "CommentCount": "1", "CreationDate": "2014-09-09T09:37:22.477", "ParentId": "25741239", "Score": "8", "OwnerUserId": "464581"}, "25741602": {"Id": "25741602", "PostTypeId": "2", "Body": "<p>\u00a79.3.1 [class.mfct.non-static]/p2:</p>\n<blockquote>\n<p id=\"so_25741239_25741602_0\">If a non-static member function of a class <code>X</code> is called for an object\n  that is not of type <code>X</code>, or of a type derived from <code>X</code>, the behavior\n  is undefined.</p>\n</blockquote>\n", "LastActivityDate": "2014-09-09T09:52:48.553", "CommentCount": "0", "CreationDate": "2014-09-09T09:52:48.553", "ParentId": "25741239", "Score": "0", "OwnerUserId": "2756719"}, "25741356": {"PostTypeId": "2", "Body": "<p>It is an undefined behavior since the pointer has an undefined value. Even if you try to assign the value 0 to <code>obj</code> then also the <code>obj-&gt;fun()</code> will be undefined and will result in undefined behavior.</p>\n<p>The C++ standard says:</p>\n<blockquote>\n<p id=\"so_25741239_25741356_0\">If the object to which the lvalue refers is not an object of type T\n  and is not an object of a type derived from T, or if the object is\n  uninitialized, a program that necessitates this conversion has\n  undefined behavior.</p>\n</blockquote>\n", "LastActivityDate": "2014-09-09T09:40:51.957", "LastEditorUserId": "1501794", "OwnerDisplayName": "user3414693", "Id": "25741356", "Score": "0", "CreationDate": "2014-09-09T09:40:51.957", "ParentId": "25741239", "CommentCount": "0", "OwnerUserId": "1501794"}});