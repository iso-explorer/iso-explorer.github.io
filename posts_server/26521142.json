post_cb({"26521167": {"ParentId": "26521142", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>NULL is usually defined as integer 0. And \u00a74.7/4 from the C++ Standard says (Integral Conversion):</p>\n<blockquote>\n<p id=\"so_26521142_26521167_0\">If the source type is bool, the value <code>false</code> is converted to zero and\n  the value <code>true</code> is converted to one.</p>\n</blockquote>\n<p>Conversion between <code>bool</code> and integer is implicit in C++. The rest is obvious. Typical programmer would replace this as simple:</p>\n<pre><code>if( __some_bool__ ) {\n    // do something\n}\n</code></pre>\n", "OwnerUserId": "735446", "LastEditorUserId": "735446", "LastEditDate": "2014-10-23T04:14:24.417", "Id": "26521167", "Score": "6", "CreationDate": "2014-10-23T04:08:57.703", "LastActivityDate": "2014-10-23T04:14:24.417"}, "26521142": {"CommentCount": "0", "ViewCount": "53", "CreationDate": "2014-10-23T04:05:23.937", "LastActivityDate": "2014-10-23T04:14:24.417", "Title": "How does `if ( __some_bool__ != NULL )` behave?", "AcceptedAnswerId": "26521167", "PostTypeId": "1", "Id": "26521142", "Score": "0", "Body": "<p>I was refactoring some code, when I came across some code that looked like this:</p>\n<pre><code>if( __some_bool__ != NULL ) {\n    .....do something......\n    }\n</code></pre>\n<p>Where <code>__some_bool__</code> is a <code>bool</code>. I don't mean the <code>BOOL</code> that's <code>typedef</code>'d in the Windows headers.</p>\n<p>This is most definitely <strong>NOT</strong> what (the programmer who wrote this) intended. But, before actually fixing it, I'd like to make sure I'm not breaking anything.</p>\n<p>How will that evaluate? does <code>false</code> == <code>NULL</code>? What kind of coercion is going on?</p>\n", "Tags": "<c++><visual-c++><conditional-statements><comparison-operators>", "OwnerUserId": "625687", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_26521142_26521167_0": {"section_id": 33, "quality": 1.0, "length": 11}}, "n3337": {"so_26521142_26521167_0": {"section_id": 30, "quality": 1.0, "length": 11}}, "n4659": {"so_26521142_26521167_0": {"section_id": 33, "quality": 1.0, "length": 11}}}});