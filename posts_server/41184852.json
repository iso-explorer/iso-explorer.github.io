post_cb({"41184852": {"CommentCount": "4", "ViewCount": "140", "CreationDate": "2016-12-16T12:52:03.003", "LastActivityDate": "2016-12-16T13:07:00.993", "Title": "C++ Constructor by Value", "AcceptedAnswerId": "41185071", "PostTypeId": "1", "Id": "41184852", "Score": "7", "Body": "<p>Assuming I have the following (invalid) code:</p>\n<pre><code>struct A {\n  A(A) {};\n};\n</code></pre>\n<p>MSVC gives me:</p>\n<pre><code>error C2652: 'A' : illegal copy constructor: first parameter must not be a 'A' \n</code></pre>\n<p>Why does the compiler detect this as copy constructor, and not a regular constructor?</p>\n<p>Chapter 12.8.2 of the C++ Standard says:</p>\n<blockquote>\n<p id=\"so_41184852_41184852_0\">A non-template constructor for class\n  X\n  is a copy constructor if its first parameter is of type\n  <strong>X&amp;</strong>\n  ,\n  <strong>const X&amp;</strong>\n  ,\n  <strong>volatile X&amp;</strong>\n  or\n  <strong>const volatile X&amp;</strong></p>\n</blockquote>\n<p>I would expect that the compiler detects the above method as regular constructor, just like</p>\n<pre><code>struct A {\n  A(B) {};\n};\n</code></pre>\n<p>whereas B is another class.</p>\n<p>Where is this behaviour defined?</p>\n", "Tags": "<c++><language-lawyer>", "OwnerUserId": "1608816", "AnswerCount": "1"}, "41185071": {"ParentId": "41184852", "LastEditDate": "2016-12-16T13:07:00.993", "CommentCount": "5", "CreationDate": "2016-12-16T13:04:40.143", "OwnerUserId": "4672588", "LastEditorUserId": "4672588", "PostTypeId": "2", "Id": "41185071", "Score": "5", "Body": "<p>N4140 <a href=\"https://timsong-cpp.github.io/cppwp/n4140/class.copy#6\" rel=\"nofollow noreferrer\">[class.copy]/6</a></p>\n<blockquote>\n<p id=\"so_41184852_41185071_0\">A declaration of a constructor for a class <code>X</code> is ill-formed if its first parameter is of type (optionally cv-qualified) <code>X</code> and either there are no other parameters or else all other parameters have default arguments. </p>\n</blockquote>\n", "LastActivityDate": "2016-12-16T13:07:00.993"}, "bq_ids": {"n4140": {"so_41184852_41184852_0": {"section_id": 451, "quality": 1.0, "length": 13}, "so_41184852_41185071_0": {"section_id": 455, "quality": 1.0, "length": 21}}, "n3337": {"so_41184852_41184852_0": {"section_id": 442, "quality": 1.0, "length": 13}, "so_41184852_41185071_0": {"section_id": 446, "quality": 1.0, "length": 21}}, "n4659": {"so_41184852_41184852_0": {"section_id": 474, "quality": 1.0, "length": 13}, "so_41184852_41185071_0": {"section_id": 478, "quality": 1.0, "length": 21}}}});