post_cb({"bq_ids": {"n4140": {"so_24501731_24501759_0": {"length": 17, "quality": 0.8095238095238095, "section_id": 2471}}, "n3337": {"so_24501731_24501759_0": {"length": 17, "quality": 0.8095238095238095, "section_id": 2456}}, "n4659": {"so_24501731_24501759_0": {"length": 16, "quality": 0.7619047619047619, "section_id": 2733}}}, "24501759": {"Id": "24501759", "PostTypeId": "2", "Body": "<p>Yes, as per [ofstream.cons]</p>\n<pre><code>explicit basic_ofstream(const char* s,\n    ios_base::openmode mode = ios_base::out);\n</code></pre>\n<blockquote>\n<p id=\"so_24501731_24501759_0\">Effects: Constructs an object of class basic_ofstream, initializing the base class with <code>basic_ostream(&amp;sb)</code> and initializing sb with <code>basic_filebuf&lt;charT,traits&gt;())</code>, then calls <strong><code>rdbuf()-&gt;open(s, mode|ios_base::out)</code></strong>. If that function returns a null pointer, <code>calls setstate(failbit)</code>.</p>\n</blockquote>\n<p>Note that it isn't <code>app</code> that has this guarantee but the call to the underlying streambuf itself; any flags you pass to the constructor/<code>open</code> are always ored with <code>out</code> (and likewise with <code>in</code> for <code>ifstream</code>).</p>\n", "LastActivityDate": "2014-07-01T02:41:41.330", "CommentCount": "0", "CreationDate": "2014-07-01T02:41:41.330", "ParentId": "24501731", "Score": "4", "OwnerUserId": "657267"}, "24501731": {"ViewCount": "74", "Body": "<p>A:</p>\n<p><code>std::ofstream(\"test.txt\", std::ios_base::app);</code></p>\n<p>B:</p>\n<p><code>std::ofstream(\"test.txt\", std::ios_base::app|std::ios_base::out);</code></p>\n<p>Does the C++ standard guarantee A is identical to B?</p>\n", "AcceptedAnswerId": "24501759", "Title": "Does `ios_base::app` guarantee `ios_base::out` is implicitly specified?", "CreationDate": "2014-07-01T02:38:19.067", "Id": "24501731", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2014-07-01T02:41:41.330", "Score": "3", "OwnerUserId": "508343", "Tags": "<c++><file><io><standards><fstream>", "AnswerCount": "1"}});