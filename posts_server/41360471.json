post_cb({"bq_ids": {"n4140": {"so_41360471_41360643_0": {"length": 38, "quality": 0.95, "section_id": 740}}, "n3337": {"so_41360471_41360643_0": {"length": 38, "quality": 0.95, "section_id": 729}}, "n4659": {"so_41360471_41360643_0": {"length": 38, "quality": 0.95, "section_id": 798}}}, "41360471": {"ViewCount": "62", "Body": "<pre><code>std::multimap&lt;int,std::string&gt; mymap;\nmymap.emplace(1, \"hello \");\nmymap.emplace(1, \"world!\");\nstd::cout &lt;&lt; mymap.size() &lt;&lt; \"\\n\";\n</code></pre>\n<p>Will this echo 1 or 2? I.e., can I use emplace to add new pairs to a multimap, without affecting older pairs with the same key?</p>\n", "Title": "Does std::multimap::emplace overwrite old keys?", "CreationDate": "2016-12-28T10:52:14.460", "LastActivityDate": "2016-12-28T11:01:13.280", "CommentCount": "2", "PostTypeId": "1", "Id": "41360471", "Score": "-2", "OwnerUserId": "4727359", "Tags": "<c++><multimap>", "AnswerCount": "3"}, "41360528": {"Id": "41360528", "PostTypeId": "2", "Body": "<p>Best to check on your own. From definition <code>std::multimap</code> allowes to have same key for different values, <code>std::map</code> doesn't. Output is: <code>2</code>, so it's allowed to have 2 different values under same key in multimap.</p>\n<p>IdeONE: <a href=\"https://ideone.com/eRkBmV\" rel=\"nofollow noreferrer\">https://ideone.com/eRkBmV</a></p>\n", "LastActivityDate": "2016-12-28T10:55:41.700", "CommentCount": "0", "CreationDate": "2016-12-28T10:55:41.700", "ParentId": "41360471", "Score": "0", "OwnerUserId": "6367382"}, "41360643": {"Id": "41360643", "PostTypeId": "2", "Body": "<p>From <strong>[associative.reqmts]/4</strong> (emphasis mine):</p>\n<blockquote>\n<p id=\"so_41360471_41360643_0\">An associative container supports unique keys if it may contain at most one element for each key. Otherwise, it supports equivalent keys. The set and map classes support unique keys; <strong>the multiset and multimap classes support equivalent keys</strong>. For multiset and multimap, insert, emplace, and erase preserve the relative ordering of equivalent elements</p>\n</blockquote>\n<p>In fact the whole point of <code>multimap</code> is to be able to store multiple elements with the same key, as opposed to <code>map</code>.</p>\n", "LastActivityDate": "2016-12-28T11:01:13.280", "CommentCount": "1", "CreationDate": "2016-12-28T11:01:13.280", "ParentId": "41360471", "Score": "0", "OwnerUserId": "1490355"}, "41360505": {"Id": "41360505", "PostTypeId": "2", "Body": "<p>By trial on <a href=\"http://cpp.sh/\" rel=\"nofollow noreferrer\">http://cpp.sh/</a> this outputs 2, emplace does not overwrite old pairs with the same key.</p>\n", "LastActivityDate": "2016-12-28T10:54:33.787", "CommentCount": "0", "CreationDate": "2016-12-28T10:54:33.787", "ParentId": "41360471", "Score": "0", "OwnerUserId": "4727359"}});