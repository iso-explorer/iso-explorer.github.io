post_cb({"bq_ids": {"n4140": {"so_25984156_25984194_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 2546}}, "n3337": {"so_25984156_25984194_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 2511}}, "n4659": {"so_25984156_25984194_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 3282}}}, "25984156": {"ViewCount": "64", "Body": "<p>I am implementing a linked list and I was wondering what I should return from its <code>remove()</code> function if the list is empty. I looked in on the standard linked list class and its remove methods invoke undefined behavior when the list is empty. That is not what I want to let happen. Is there an appropriate exception in the standard library that one should throw?</p>\n", "AcceptedAnswerId": "25984194", "Title": "What should I throw if someone requests to remove a non-existent element?", "CreationDate": "2014-09-22T22:40:45.517", "Id": "25984156", "CommentCount": "2", "PostTypeId": "1", "LastActivityDate": "2014-09-22T23:07:52.930", "Score": "0", "OwnerUserId": "1594090", "Tags": "<c++><linked-list>", "AnswerCount": "1"}, "25984194": {"Id": "25984194", "PostTypeId": "2", "Body": "<p>You could throw <a href=\"http://en.cppreference.com/w/cpp/error/out_of_range\" rel=\"nofollow\"><code>std::out_of_range</code></a>. Or you might even create a subclass of it and throw your own exception class.</p>\n<p>From the standard (n3797):</p>\n<blockquote>\n<p id=\"so_25984156_25984194_0\">19.2.5.1 The class <code>out_of_range</code> defines the type of objects thrown as exceptions to report an argument value not in its expected range.</p>\n</blockquote>\n", "LastEditorUserId": "680982", "LastActivityDate": "2014-09-22T23:07:52.930", "Score": "2", "CreationDate": "2014-09-22T22:45:16.287", "ParentId": "25984156", "CommentCount": "2", "OwnerUserId": "680982", "LastEditDate": "2014-09-22T23:07:52.930"}});