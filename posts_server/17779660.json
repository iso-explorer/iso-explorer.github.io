post_cb({"bq_ids": {"n4140": {"so_17779660_17779731_1": {"length": 23, "quality": 1.0, "section_id": 6374}, "so_17779660_17779731_2": {"length": 5, "quality": 0.8333333333333334, "section_id": 6385}, "so_17779660_17779731_3": {"length": 19, "quality": 0.9047619047619048, "section_id": 6385}}, "n3337": {"so_17779660_17779731_1": {"length": 23, "quality": 1.0, "section_id": 6131}, "so_17779660_17779731_2": {"length": 5, "quality": 0.8333333333333334, "section_id": 6142}, "so_17779660_17779731_3": {"length": 19, "quality": 0.9047619047619048, "section_id": 6142}}, "n4659": {"so_17779660_17779731_1": {"length": 23, "quality": 1.0, "section_id": 7885}, "so_17779660_17779731_2": {"length": 5, "quality": 0.8333333333333334, "section_id": 7897}, "so_17779660_17779731_3": {"length": 19, "quality": 0.9047619047619048, "section_id": 7897}}}, "17779716": {"Id": "17779716", "PostTypeId": "2", "Body": "<p>The locale is responsible for deleting the facet.</p>\n", "LastActivityDate": "2013-07-22T03:58:57.713", "CommentCount": "1", "CreationDate": "2013-07-22T03:58:57.713", "ParentId": "17779660", "Score": "2", "OwnerUserId": "94155"}, "17786214": {"Id": "17786214", "PostTypeId": "2", "Body": "<p>Not answering your question as others have already done it. But, it's really not required to construct the locale everytime.   </p>\n<pre><code>std::string get_curr_date_time() {\n    namespace bpt = boost::posix_time;\n    namespace bdt = boost::date_time;\n    std::ostringstream os;\n    auto date = bdt::second_clock&lt;bpt::ptime&gt;::universal_time();\n    const static std::locale currlocale (os.getloc(), new bpt::time_facet(\"%Y%m%d%H%M%S\"));\n    boost::posix_time::time_facet* facet = new boost::posix_time::time_facet(\"%a, %d %b %Y %H:%M:%S GMT\");\n\n    os.imbue(currlocale);\n    os &lt;&lt; date;\n    return os.str();\n}\n</code></pre>\n", "LastActivityDate": "2013-07-22T11:18:06.513", "CommentCount": "0", "CreationDate": "2013-07-22T11:18:06.513", "ParentId": "17779660", "Score": "5", "OwnerUserId": "124797"}, "17779660": {"ViewCount": "3570", "Body": "<p>I have a function that uses the Boost.DateTime library for generating the current GMT/UTC date and time string (<a href=\"http://coliru.stacked-crooked.com/view?id=92230ebf4090c76339ce86ae8d5ead19-f674c1a6d04c632b71a62362c0ccfc51\">live example</a>).</p>\n<pre><code>std::string get_curr_date() {\n    auto date = boost::date_time::second_clock&lt;boost::posix_time::ptime&gt;::universal_time();\n\n    boost::posix_time::time_facet* facet = new boost::posix_time::time_facet(\"%a, %d %b %Y %H:%M:%S GMT\");\n\n    std::ostringstream os;\n    os.imbue(std::locale(os.getloc(), facet));\n    os &lt;&lt; date;\n\n    return os.str();\n}\n</code></pre>\n<p>This is mostly based on <a href=\"http://www.boost.org/doc/libs/1_54_0/doc/html/date_time/date_time_io.html\">Boost.DateTime's example</a>:</p>\n<pre><code>//example to customize output to be \"LongWeekday LongMonthname day, year\"\n//                                  \"%A %b %d, %Y\"\ndate d(2005,Jun,25);\ndate_facet* facet(new date_facet(\"%A %B %d, %Y\"));\nstd::cout.imbue(std::locale(std::cout.getloc(), facet));\nstd::cout &lt;&lt; d &lt;&lt; std::endl;\n// \"Saturday June 25, 2005\"\n</code></pre>\n<p>My code worked nicely, but now I'm feeling uneasy because of these particular lines containing <code>new</code>:</p>\n<ul>\n<li><p><code>boost::posix_time::time_facet* facet = new boost::posix_time::time_facet(\"%a, %d %b %Y %H:%M:%S GMT\");</code></p></li>\n<li><p><code>date_facet* facet(new date_facet(\"%A %B %d, %Y\"));</code></p></li>\n</ul>\n<p>As you can see, there is no <code>delete</code> in Boost.DateTime's so I somehow presumed that it is imperative for me to <code>delete</code> the <code>date_facet</code>. I used <code>std::unique_ptr</code> to wrap the <code>new</code>ed <code>time_facet</code> object.</p>\n<pre><code>std::unique_ptr&lt;boost::posix_time::time_facet&gt; facet(new boost::posix_time::time_facet(\"%a, %d %b %Y %H:%M:%S GMT\"));\n</code></pre>\n<p>However, I am getting segfault errors, as you can see in <a href=\"http://coliru.stacked-crooked.com/view?id=212ceaaedd5104de70130e2b289261e2-f674c1a6d04c632b71a62362c0ccfc51\">here</a>. I have also tried manually <code>delete</code>ing the <code>new</code>ed pointer, and am still getting the same errors (sorry, can't reproduce error in Coliru).</p>\n<p>The <code>time_facet</code> pointer is passed as an argument when constructing an <code>std::locale</code> object, so I'm confused who's the one responsible for <code>delete</code>ing the facet.</p>\n<p>So here is the core of my question:</p>\n<ul>\n<li><strong>Am I required to <code>delete</code> the <code>time_facet</code></strong> or is the <code>std::locale</code> object responsible for <code>delete</code>ing it?</li>\n</ul>\n<hr/>\n<p>Please note that <code>boost::posix_time::time_facet</code> is derived from <code>boost::date_time::date_facet</code> which is, in turn, derived from <code>std::locale::facet</code>. This question might generalized to <code>std::locale::facet</code>, though my problem is specific to <code>time_facet</code>.</p>\n<p>Here are some docs on <code>std::locale</code>'s constructors:</p>\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/4121792d.aspx\">MSDN</a></li>\n<li><a href=\"http://en.cppreference.com/w/cpp/locale/locale/locale\">cppreference.com</a></li>\n</ul>\n", "AcceptedAnswerId": "17779731", "Title": "Who is responsible for deleting the facet?", "CreationDate": "2013-07-22T03:50:40.910", "Id": "17779660", "CommentCount": "0", "FavoriteCount": "5", "PostTypeId": "1", "LastEditDate": "2014-12-26T00:06:50.257", "LastEditorUserId": "1619294", "LastActivityDate": "2014-12-26T00:06:50.257", "Score": "20", "OwnerUserId": "1619294", "Tags": "<c++><c++11><locale>", "AnswerCount": "3"}, "17779731": {"Id": "17779731", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_17779660_17779731_0\">Am I required to delete the time_facet or is the std::locale object\n  responsible for deleteing the it?</p>\n</blockquote>\n<p>You're not required to delete the <code>time_facet</code> so long as <code>time_facet</code> derives from <code>std::locale::facet</code>, which it should. The <code>std::locale::facet</code> is a base class that all facets should derive from that implement a form of reference counting. The standard says this:</p>\n<p>\u00a7 22.3.1.6</p>\n<blockquote>\n<p id=\"so_17779660_17779731_1\">Once a facet reference is obtained from a locale object by calling\n  <code>use_facet&lt;&gt;</code>, that reference remains usable, and the results from\n  member functions of it may be cached and re-used, as long as some\n  locale object refers to that facet.</p>\n</blockquote>\n<p>Once all references of the facet are not being used, the destructor of <code>std::locale</code> will manage and delete references to the facet if its ref count is 0.</p>\n<p>This is all specified in \u00a722.3.1.1.2 in the C++11 standard. Where it states:</p>\n<blockquote>\n<p id=\"so_17779660_17779731_2\">The refs argument to the constructor is used for lifetime management.</p>\n<p id=\"so_17779660_17779731_3\">\u2014 For <code>refs == 0</code>, the implementation performs <code>delete\n  static_cast&lt;locale::facet*&gt;(f)</code> (where f is a pointer to the facet)\n  when the last locale object containing the facet is destroyed; for\n  <code>refs == 1</code>, the implementation never destroys the facet.</p>\n</blockquote>\n", "LastEditorUserId": "1381108", "LastActivityDate": "2013-07-22T04:20:48.393", "Score": "19", "CreationDate": "2013-07-22T04:01:01.983", "ParentId": "17779660", "CommentCount": "0", "OwnerUserId": "1381108", "LastEditDate": "2013-07-22T04:20:48.393"}});