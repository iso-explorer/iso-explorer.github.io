post_cb({"bq_ids": {"n4140": {"so_4121296_4121323_0": {"length": 7, "quality": 0.875, "section_id": 3290}}, "n3337": {"so_4121296_4121323_0": {"length": 7, "quality": 0.875, "section_id": 3160}}, "n4659": {"so_4121296_4121323_0": {"length": 7, "quality": 0.875, "section_id": 4052}}}, "4121323": {"Id": "4121323", "PostTypeId": "2", "Body": "<p>The declaration</p>\n<pre><code>InStruct i; \n</code></pre>\n<p>does not invoke value initialization</p>\n<blockquote>\n<p id=\"so_4121296_4121323_0\">$8.5.3/10 - \"An object whose\n  initializer is an empty set of\n  parentheses, i.e., (), shall be\n  value-initialized.\"</p>\n</blockquote>\n<p>If you want to value-initialize, you would require an expression something like</p>\n<pre><code>assert(InStruct().Int == 0);\n</code></pre>\n", "LastEditorUserId": "418110", "LastActivityDate": "2010-11-08T04:50:18.527", "Score": "0", "CreationDate": "2010-11-08T04:38:19.733", "ParentId": "4121296", "CommentCount": "12", "OwnerUserId": "418110", "LastEditDate": "2010-11-08T04:50:18.527"}, "4371507": {"Id": "4371507", "PostTypeId": "2", "Body": "<p>Try <a href=\"http://ideone.com/hKRvN\" rel=\"nofollow\">it</a> now! - Ideone supports GCC-4.5.1</p>\n", "LastActivityDate": "2010-12-06T22:18:58.970", "CommentCount": "0", "CreationDate": "2010-12-06T22:18:58.970", "ParentId": "4121296", "Score": "0", "OwnerUserId": "405039"}, "4121296": {"ViewCount": "576", "Body": "<p>My question is related to <a href=\"https://stackoverflow.com/users/165520/prasoon-saurav\">Prasoon</a>'s <a href=\"https://stackoverflow.com/questions/3931312/value-initialization-and-non-pod-types\">question</a> about non POD types and value initialization.</p>\n<p>I tried the following code on online compilers like Ideone and Codepad but the executables gave runtime error on both the sites.</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;cassert&gt;\n\nstruct Struct {\n    std::string String;\n    int Int;\n    bool k;\n};\n\nstruct InStruct:Struct\n{\n   InStruct():Struct(){}\n};\n\nint main()\n{\n   InStruct i;\n   assert ( i.Int == 0);\n   std::cout &lt;&lt; \"Hello\";\n}\n</code></pre>\n<p>Ideone Output <a href=\"http://ideone.com/crcSI\" rel=\"nofollow noreferrer\">here</a><br>\nCodepad Output <a href=\"http://codepad.org/B0YeAsm8\" rel=\"nofollow noreferrer\">here</a></br></p>\n<p>Does that mean neither of them support C++03 value initialization feature?</p>\n", "AcceptedAnswerId": "4121396", "Title": "Do Ideone and Codepad really not support C++03?", "CreationDate": "2010-11-08T04:33:43.727", "Id": "4121296", "CommentCount": "0", "LastEditDate": "2017-05-23T12:19:04.390", "PostTypeId": "1", "LastEditorUserId": "-1", "LastActivityDate": "2012-02-15T10:52:47.013", "Score": "7", "OwnerUserId": "500323", "Tags": "<c++><value-initialization><codepad>", "AnswerCount": "3"}, "4121396": {"Id": "4121396", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_4121296_4121396_0\">Does that mean neither of them support C++03 value initialization feature?</p>\n</blockquote>\n<p>Yes.</p>\n<p>Prior to version 4.4, GCC did not completely support value initialization (<a href=\"https://svn.boost.org/trac/boost/browser/trunk/boost/config/compiler/gcc.hpp\" rel=\"nofollow\">the Boost GCC compatibility header</a> explains this and has links to the relevant GCC defect reports; see line 77).</p>\n<p>If your code needs to be portable, you should be very careful relying on value initialization; GCC did not support it fully until recently and Visual C++ does not fully support it even in its latest version, Visual C++ 2010.</p>\n", "LastEditorUserId": "151292", "LastActivityDate": "2010-11-08T04:59:51.653", "Score": "4", "CreationDate": "2010-11-08T04:54:33.893", "ParentId": "4121296", "CommentCount": "0", "OwnerUserId": "151292", "LastEditDate": "2010-11-08T04:59:51.653"}});