post_cb({"47239853": {"ParentId": "47237933", "CommentCount": "0", "CreationDate": "2017-11-11T15:55:40.960", "OwnerUserId": "187690", "PostTypeId": "2", "Id": "47239853", "Score": "5", "Body": "<p>The language specification explicitly says</p>\n<blockquote>\n<p id=\"so_47237933_47239853_0\"><strong>8.3.2 References</strong><br>\n<strong>5</strong> [...] The declaration of a reference shall contain an initializer (8.6.3) except when the declaration contains an explicit <code>extern</code> specifier (7.1.1), is a class member (9.2) declaration within a class definition, or is the declaration of\n  a parameter or a return type (8.3.5); see 3.1.</br></p>\n</blockquote>\n<p>Your situation is directly covered by this quote. In other words, references are not excepted from the general declaration-definition rule. You can create a non-defining declaration for a reference defined (and initialized) elsewhere.</p>\n<p>Nobody prohibits you from including an initializer into a reference declaration with an explicit <code>extern</code> keyword. However, as usual, it will turn a non-defining declaration into a <em>definition</em>.</p>\n", "LastActivityDate": "2017-11-11T15:55:40.960"}, "47238007": {"ParentId": "47237933", "CommentCount": "0", "CreationDate": "2017-11-11T12:42:34.557", "OwnerUserId": "598696", "PostTypeId": "2", "Id": "47238007", "Score": "5", "Body": "<blockquote>\n<p id=\"so_47237933_47238007_0\">Why Compiler doesn't give an error for <code>extern</code> reference?</p>\n</blockquote>\n<p>Because <code>extern int &amp;c;</code> is not a definition, but merely a <strong>declaration</strong>. It's informing the compiler that <code>c</code> will be defined somewhere else in the program. </p>\n<p>The <a href=\"http://en.cppreference.com/w/cpp/language/storage_duration\" rel=\"noreferrer\">cppreference page on \"storage class specifiers\"</a> explains the meaning of <code>extern</code> in this scenario.</p>\n", "LastActivityDate": "2017-11-11T12:42:34.557"}, "47237933": {"CommentCount": "5", "AcceptedAnswerId": "47238009", "PostTypeId": "1", "LastEditorUserId": "6935629", "CreationDate": "2017-11-11T12:35:16.867", "LastActivityDate": "2017-11-13T05:41:52.337", "LastEditDate": "2017-11-13T05:41:52.337", "ViewCount": "217", "FavoriteCount": "1", "Title": "Why does \"extern int &c;\" working fine?", "Id": "47237933", "Score": "6", "Body": "<p>In C++, reference variable must be initialized.\n    int &amp;a; // Error</p>\n<pre><code>static int &amp;b; // Error\n</code></pre>\n<p>But </p>\n<pre><code>extern int &amp;c; // No error\n</code></pre>\n<p>Why Compiler doesn't give an error for <code>extern</code> specifier reference?</p>\n", "Tags": "<c++><variables><reference><extern>", "OwnerUserId": "6935629", "AnswerCount": "3"}, "47238009": {"ParentId": "47237933", "CommentCount": "0", "CreationDate": "2017-11-11T12:42:42.853", "OwnerUserId": "902109", "PostTypeId": "2", "Id": "47238009", "Score": "12", "Body": "<p>The <code>extern</code> keyword is a directive for the compiler that you are now declaring a symbol that will be filled in during linking, taken from another object file.\nThe initialization is EXPECTED to happen where the actual symbol is defined.</p>\n<p>If you have an a.c file with</p>\n<pre><code>int foo;\nint &amp;bar = foo;\n</code></pre>\n<p>And a b.c file with</p>\n<pre><code>extern int &amp;bar;\n</code></pre>\n<p>When you compile the file b.c into b.o the compiler will leave the symbol for <code>bar</code> empty. When linking the program, the linker will need to find the exported symbol <code>bar</code> in a.o and will then replace the blank symbol in b.o with the <code>bar</code> from a.o</p>\n<p>If the linker can't find the required symbol anywhere in the linked object files - a Linker error (not compiler error) will be issued.</p>\n", "LastActivityDate": "2017-11-11T12:42:42.853"}, "bq_ids": {"n4140": {"so_47237933_47239853_0": {"section_id": 3222, "quality": 0.7857142857142857, "length": 22}}, "n3337": {"so_47237933_47239853_0": {"section_id": 3096, "quality": 0.7857142857142857, "length": 22}}, "n4659": {"so_47237933_47239853_0": {"section_id": 3979, "quality": 0.7857142857142857, "length": 22}}}});