post_cb({"25672020": {"Id": "25672020", "PostTypeId": "2", "Body": "<p>You have included the implementation in the <code>setup_quest_tree.h</code> header file</p>\n<pre><code>#include \"setup_quest_tree.cpp\"\n</code></pre>\n<p>and included it in several translation units.<br>\nTo fix this, at least in <code>setup_quest_tree.cpp</code> just include the declarations from <code>setup_quest_tree.h</code>, and remove that <code>#include \"setup_quest_tree.cpp\"</code> statement from <code>setup_quest_tree.h</code> should fix your linker errors.</br></p>\n<p>You have to provide exclusively <strong>one</strong> definition (implementation) for your class (see also <a href=\"https://stackoverflow.com/a/4955288/1413395\">this answer</a> for <em>\"Is is a good practice to put the definition of C++ classes into the header file?\"</em>).</p>\n<p>If you put it there, just since you don't know how to add the <code>setup_quest_tree.cpp</code> to your program, check <a href=\"https://stackoverflow.com/questions/12573816/what-is-an-undefined-reference-unresolved-external-symbol-error-and-how-do-i-fix\">this Q&amp;A</a> please to learn more about the linking process.</p>\n<hr>\n<p>Here's the relevant section from the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3376.pdf\" rel=\"nofollow noreferrer\">current c++ standard</a></p>\n<blockquote>\n<h3>3.2 One definition rule [basic.def.odr]</h3>\n<p id=\"so_25671850_25672020_0\"><sup>1</sup> No translation unit shall contain more than one definition of any variable, function, class type, enumeration\n  type, or template.</p>\n</blockquote>\n</hr>", "LastEditorUserId": "-1", "LastActivityDate": "2014-09-04T18:47:19.523", "Score": "0", "CreationDate": "2014-09-04T17:53:26.890", "ParentId": "25671850", "CommentCount": "0", "LastEditDate": "2017-05-23T12:15:10.283", "OwnerUserId": "1413395"}, "25671850": {"ViewCount": "103", "Body": "<p>I've seen many posts on LNK2005 error, but decided to ask my own anyway.\nHere is the error code:</p>\n<pre><code>1&gt;setup_quest_tree.obj : error LNK2005: \"private: void __thiscall quest_tree::enter_one(class quest_tree::quest_node * &amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)\" (?enter_one@quest_tree@@AAEXAAPAVquest_node@1@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z) already defined in mainFunction.obj\n1&gt;setup_quest_tree.obj : error LNK2005: \"void __cdecl setup_quest_tree(void)\" (?setup_quest_tree@@YAXXZ) already defined in mainFunction.obj\n1&gt;C:\\Users\\Timothy\\Documents\\Visual Studio 2008\\Projects\\ttbag\\Debug\\TTBAG.exe : fatal error LNK1169: one or more multiply defined symbols found\n</code></pre>\n<p>I'm trying to get the program to compile but am running into linker errors while doing so, probably because I've included quest_tree.h twice, but when I got rid of one of the declarations of quest_tree.h in setup_quest_tree.cpp I run into this error:</p>\n<pre><code>1&gt;c:\\users\\timothy\\documents\\visual studio 2008\\projects\\ttbag\\ttbag\\setup_quest_tree.cpp(8) : error C2065: 'quest_tree' : undeclared identifier\n</code></pre>\n<p>There are many files so I am only including the ones for my project that are related to the error.</p>\n<p><strong>setup_quest_tree.cpp:</strong></p>\n<pre><code>#ifndef SETUP_QUEST_NODES_CPP\n#define SETUP_QUEST_NODES_CPP\n\n#include &lt;string&gt;\n#include \"quest_tree.h\"\n\nvoid setup_quest_tree() {\n    quest_tree quest_tree_obj;  //start out with two quest nodes\n\n    std::string welcome_message = \"debug-welcome message\";\n    quest_tree_obj.enter(welcome_message);\n}\n\n#endif\n</code></pre>\n<p><strong>setup_quest_tree.h:</strong></p>\n<pre><code>#ifndef SETUP_QUEST_TREE_H\n#define SETUP_QUEST_TREE_H\n\n#include \"quest_tree.h\"\n#include \"setup_quest_tree.cpp\"\n\n//function declarations\nvoid setup_quest_tree (quest_tree &amp;quest_tree_obj);\n\n#endif /* SETUP_QUEST_TREE_H */\n</code></pre>\n<p><strong>mainFunction.cpp (just the include statements):</strong></p>\n<pre><code>#define DEBUG_LINES_ON\n\n#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;time.h&gt;\n\n#include \"weather.h\"\n#include \"item.h\"\n#include \"map.h\"\n#include \"person.h\"\n#include \"location.h\"\n#include \"bag.h\"\n#include \"equipped_items.h\"\n#include \"global_vars.h\"\n#include \"setup_quest_tree.h\"\n\n\nint main() { ...\n</code></pre>\n<p><strong>quest_tree.h:</strong></p>\n<pre><code>#ifndef QUEST_TREE_H\n#define QUEST_TREE_H\n\n#include &lt;string&gt;\n#include &lt;cstdlib&gt;\n\nclass quest_tree {\n\nprivate:\n\n    // the basic node of the tree. Do way to read from file?\n    class quest_node {\n    private:\n        quest_node *quest_nodes;    // pointer to array of quests that activate upon quest activation\n    public:\n        //std::string word; // we will replace this with our own data variable\n\n        std::string note_to_player; //note that is shown upon quest activation\n\n        /*\n        quest_node(){   // default constructor\n            note_to_player = \"\";\n        }\n        */\n        quest_node(short int num_nodes = 2){\n            quest_nodes = new quest_node[num_nodes];    // problem: not declared in quest_tree but rather in quest_node\n            note_to_player = \"\";\n        }\n\n\n\n    friend class quest_tree;\n    };\n\n    // the top of the tree\n    quest_node * root;\n\n    // Enter a new node into the tree or sub-tree\n    void enter_one(quest_node *&amp;node, const std::string&amp; note_to_player);\n\npublic:\n    quest_tree() {root = NULL;} // constructor\n\n    // Add a new note_to_player to our tree\n    void enter(std::string&amp; note_to_player) {\n        enter_one(root, note_to_player);\n    }\n};\n\n\nvoid quest_tree::enter_one(quest_node *&amp;new_node, const std::string&amp; note_to_player)\n{\n    // see if we have reached the end\n    if (new_node == NULL) {\n        new_node = new quest_node;\n\n        for (short int index = 0; index &lt; (sizeof(new_node-&gt;quest_nodes)/sizeof(new_node-&gt;quest_nodes[0])); index++) {  // initialize quest_nodes\n            new_node-&gt;quest_nodes[index] = NULL;\n        }\n        new_node-&gt;note_to_player = note_to_player;\n    }\n    if (new_node-&gt;note_to_player == note_to_player)\n        return;\n/*\n    if (new_node-&gt;note_to_player &lt; note_to_player)\n        enter_one(new_node-&gt;right, word);\n    else \n        enter_one(new_node-&gt;left, word)\n*/\n}\n\n#endif /* QUEST_TREE_H */\n</code></pre>\n", "Title": "error LNK2005: quest_tree::enter_one(class quest_tree::quest_node * &,class std::basic_string<char,struct std::char_traits<char>", "CreationDate": "2014-09-04T17:43:54.520", "LastActivityDate": "2014-09-04T18:47:19.523", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "Id": "25671850", "Score": "0", "OwnerUserId": "3078423", "Tags": "<c++>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_25671850_25672020_0": {"length": 14, "quality": 1.0, "section_id": 7038}}, "n3337": {"so_25671850_25672020_0": {"length": 14, "quality": 1.0, "section_id": 6784}}, "n4659": {"so_25671850_25672020_0": {"length": 14, "quality": 1.0, "section_id": 8535}}}});