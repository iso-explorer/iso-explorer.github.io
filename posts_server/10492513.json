post_cb({"10492537": {"Id": "10492537", "PostTypeId": "2", "Body": "<p>The fact that that memory address is popped from the top of the stack when it goes out of scope only means that it is freed, not overwritten. That is why you are getting the output \"5\".</p>\n", "LastActivityDate": "2012-05-08T04:26:08.243", "CommentCount": "0", "CreationDate": "2012-05-08T04:26:08.243", "ParentId": "10492513", "Score": "1", "OwnerUserId": "953105"}, "bq_ids": {"n4140": {"so_10492513_10492522_0": {"length": 26, "quality": 1.0, "section_id": 5768}}, "n3337": {"so_10492513_10492522_0": {"length": 26, "quality": 1.0, "section_id": 5541}}, "n4659": {"so_10492513_10492522_0": {"length": 26, "quality": 1.0, "section_id": 7225}}}, "10492522": {"Id": "10492522", "PostTypeId": "2", "Body": "<p>Returning an pointer to an local variable in the function is an <strong>Undefined Behavior</strong>.     </p>\n<p>Undefined Behavior does not warranty a segmentation fault. It merely means that any behavior is possible and the program can behave in any way.   </p>\n<p>It is a common misconception that Undefined Behavior means the code should produce a segmentation fault, the truth is that standard does not require any specific behavior in cases where the code invokes an Undefined Behavior and hence the name.   </p>\n<p><strong>C++ Standard section 1.3.24 states:</strong></p>\n<blockquote>\n<p id=\"so_10492513_10492522_0\">Permissible undefined behavior ranges from ignoring the situation completely with unpredictable results, to behaving during translation or program execution in a documented manner characteristic of the environment (with or without the issuance of a diagnostic message), to terminating a translation or execution (with the issuance of a diagnostic message). </p>\n</blockquote>\n", "LastActivityDate": "2012-05-08T04:24:23.073", "CommentCount": "0", "CreationDate": "2012-05-08T04:24:23.073", "ParentId": "10492513", "Score": "3", "OwnerUserId": "452307"}, "10492518": {"Id": "10492518", "PostTypeId": "2", "Body": "<p>No, it's supposed to result in undefined behavior.</p>\n", "LastActivityDate": "2012-05-08T04:23:45.710", "CommentCount": "0", "CreationDate": "2012-05-08T04:23:45.710", "ParentId": "10492513", "Score": "2", "OwnerUserId": "541686"}, "10492513": {"ViewCount": "156", "Body": "<p>Isn't this supposed to produce a segfault?\nWhen I run the code the output is 5. Example: <a href=\"http://ideone.com/gV2Nv\" rel=\"nofollow\">http://ideone.com/gV2Nv</a></p>\n<pre><code>#include &lt;iostream&gt;\nusing std::cout;\nusing std::endl;\n\nint* foo(int a) {\n  int b = a;\n  int* c = &amp;b; \n  return c;\n}\n\nint main() {\n  int* a = foo(5);\n  cout &lt;&lt; *a &lt;&lt; endl; \n  return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "10492522", "Title": "This pointer assignment should produce a segfault?", "CreationDate": "2012-05-08T04:22:52.570", "Id": "10492513", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2012-05-08T04:26:08.243", "Score": "0", "OwnerUserId": "710805", "Tags": "<c++><pointers><segmentation-fault>", "AnswerCount": "3"}});