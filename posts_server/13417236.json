post_cb({"13417236": {"ViewCount": "1331", "Body": "<p>I have a C++ STL list of objects in my app that is built on startup and never altered afterwards; is it the case that two independent iterators that point to the same list node always compare equal ?</p>\n", "Title": "compare C++ STL list iterators", "CreationDate": "2012-11-16T13:06:32.390", "LastActivityDate": "2012-11-16T13:28:00.480", "CommentCount": "0", "LastEditDate": "2012-11-16T13:28:00.480", "PostTypeId": "1", "LastEditorUserId": "1709762", "Id": "13417236", "Score": "4", "OwnerUserId": "1321924", "Tags": "<c++><list><stl>", "AnswerCount": "2"}, "13417340": {"Id": "13417340", "PostTypeId": "2", "Body": "<p>Yes. One of the requirements for forward iterators is:</p>\n<blockquote>\n<p id=\"so_13417236_13417340_0\">C++11 22.4.5/6: If <code>a</code> and <code>b</code> are both dereferenceable, then <code>a == b</code> if and only if <code>*a</code> and <code>*b</code> are bound to the same object.</p>\n</blockquote>\n<p>All iterators over standard containers are (at least) forward iterators. </p>\n", "LastActivityDate": "2012-11-16T13:12:44.287", "Score": "10", "CreationDate": "2012-11-16T13:12:44.287", "ParentId": "13417236", "CommentCount": "1", "OwnerUserId": "204847"}, "bq_ids": {"n4140": {"so_13417236_13417340_0": {"length": 6, "quality": 0.75, "section_id": 5578}}, "n3337": {"so_13417236_13417340_0": {"length": 6, "quality": 0.75, "section_id": 5360}}, "n4659": {"so_13417236_13417340_0": {"length": 6, "quality": 0.75, "section_id": 7025}}}, "13417293": {"Id": "13417293", "PostTypeId": "2", "Body": "<p>Yes, according to cplusplus.com:</p>\n<p><a href=\"http://www.cplusplus.com/reference/std/iterator/ForwardIterator/\" rel=\"nofollow\">http://www.cplusplus.com/reference/std/iterator/ForwardIterator/</a></p>\n<blockquote>\n<p id=\"so_13417236_13417293_0\">Accepts equality/inequality comparisons.<br>\n  Equal iterators imply the same element is pointed</br></p>\n</blockquote>\n<p>(I'm not really a fan of this site but I'd trust it here.)</p>\n<hr>\n<p>cppreference.com agrees and states more than that, namely all InputIterators (that can be read from) are EqualityComparable, see:</p>\n<p><a href=\"http://en.cppreference.com/w/cpp/concept/InputIterator\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/concept/InputIterator</a></p>\n</hr>", "LastActivityDate": "2012-11-16T13:10:19.713", "Score": "2", "CreationDate": "2012-11-16T13:10:19.713", "ParentId": "13417236", "CommentCount": "0", "OwnerUserId": "399317"}});