post_cb({"23983916": {"CommentCount": "7", "AcceptedAnswerId": "23984111", "PostTypeId": "1", "LastEditorUserId": "1473751", "CreationDate": "2014-06-01T20:00:14.527", "LastActivityDate": "2015-06-07T18:28:19.287", "LastEditDate": "2014-06-02T19:06:08.000", "ViewCount": "443", "FavoriteCount": "1", "Title": "Can't set value of static object field (error LNK2001: unresolved external symbol)", "Id": "23983916", "Score": "1", "Body": "<p>I have seemingly simple and straightforward segment of code that is a simplified version of a problem I have been having in a game I am writing.  I am trying to set a static field in one class to another value from my main method. \nHowever this code will not and I don't understand why.  </p>\n<p>I get the error </p>\n<blockquote>\n<p id=\"so_23983916_23983916_0\">1&gt;Source.obj : error LNK2001: unresolved external symbol \"public:\n  static class A * B::a\" (?a@B@@2PAVA@@A)</p>\n</blockquote>\n<pre><code>class A\n{\npublic:\n    A()\n    {\n\n    }\n};\n\nclass B\n{\npublic:\n    static A* a;\n};\n\nint main()\n{\n    B::a = new A;\n}\n</code></pre>\n<p>What is the rule saying that I have to define my static class member outside the class to get it linked?</p>\n", "Tags": "<c++><static><compiler-errors>", "OwnerUserId": "1797963", "AnswerCount": "2"}, "23984128": {"ParentId": "23983916", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>You did not define the static data member. You only declared it in the class definition. Add the following line</p>\n<pre><code>A * B::a;\n</code></pre>\n<p>before the main.</p>\n<p>Or you could initialize it with using operator new. </p>\n<pre><code>A * B::a = new A;\n</code></pre>\n<p>As for your question </p>\n<blockquote>\n<p id=\"so_23983916_23984128_0\">What is the rule saying that I have to define my static class member\n  outside the class to get it linked?</p>\n</blockquote>\n<p>then according to paragraph #2 of section 9.4.2 Static data members of the C++ Standard</p>\n<blockquote>\n<p id=\"so_23983916_23984128_1\">2 The declaration of a static data member in its class definition <strong>is\n  not a definition</strong> and may be of an incomplete type other than\n  cv-qualified void. <strong>The definition for a static data member shall\n  appear in a namespace scope enclosing the member\u2019s class definition.</strong></p>\n</blockquote>\n", "OwnerUserId": "2877241", "LastEditorUserId": "2877241", "LastEditDate": "2014-06-01T21:30:14.917", "Id": "23984128", "Score": "-2", "CreationDate": "2014-06-01T20:23:25.827", "LastActivityDate": "2014-06-01T21:30:14.917"}, "23984111": {"ParentId": "23983916", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>As from your comment</p>\n<blockquote>\n<p id=\"so_23983916_23984111_0\">but what is the rule that defines that?</p>\n</blockquote>\n<p>From the <a href=\"http://en.cppreference.com/w/cpp/language/definition\" rel=\"nofollow\">c++ reference</a> it says</p>\n<blockquote>\n<h3>Definitions and ODR</h3>\n<p id=\"so_23983916_23984111_1\">Definitions are declarations that fully define the entity introduced by the declaration. Every declaration is a definition, except for the following:<br>\n  ...<br>\n  4) Declaration of a static data member inside a class definition</br></br></p>\n</blockquote>\n<pre><code>struct S {    // defines S\n    int n;        // defines S::n\n    static int i; // declares, but doesn't define S::i\n};\nint S::i = 0; // defines and initializes S::i\n</code></pre>\n<p>As an additional reference you can also check here <a href=\"http://en.wikipedia.org/wiki/One_Definition_Rule\" rel=\"nofollow\">Wikipedia, <strong>One Definition Rule</strong></a></p>\n<p><strong>UPDATE:</strong><br>\nI finally found the current (2nd June 2014) <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2011/n3242.pdf\" rel=\"nofollow\">latest freely available standard reference</a> (a copy of the currently released standard is available for about 30$ I think):</br></p>\n<blockquote>\n<h3>\u00a7 9.4.2</h3>\n<p id=\"so_23983916_23984111_2\"><strong><em>2</em></strong> The declaration of a static data member in its class de\ufb01nition is not a de\ufb01nition and may be of an incomplete\n  type other than cv-quali\ufb01ed void. The de\ufb01nition for a static data member shall appear in a namespace\n  scope enclosing the member\u2019s class de\ufb01nition. In the de\ufb01nition at namespace scope, the name of the static\n  data member shall be quali\ufb01ed by its class name using the :: operator. The initializer expression in the\n  de\ufb01nition of a static data member is in the scope of its class</p>\n</blockquote>\n", "OwnerUserId": "1413395", "LastEditorUserId": "1413395", "LastEditDate": "2015-06-07T18:28:19.287", "Id": "23984111", "Score": "3", "CreationDate": "2014-06-01T20:20:59.623", "LastActivityDate": "2015-06-07T18:28:19.287"}, "bq_ids": {"n4140": {"so_23983916_23984128_1": {"section_id": 5907, "quality": 0.9285714285714286, "length": 26}, "so_23983916_23984111_2": {"section_id": 5907, "quality": 0.7843137254901961, "length": 40}}, "n3337": {"so_23983916_23984128_1": {"section_id": 5679, "quality": 0.9285714285714286, "length": 26}, "so_23983916_23984111_2": {"section_id": 5679, "quality": 0.7843137254901961, "length": 40}}, "n4659": {"so_23983916_23984128_1": {"section_id": 7389, "quality": 0.8571428571428571, "length": 24}, "so_23983916_23984111_2": {"section_id": 7389, "quality": 0.7647058823529411, "length": 39}}}});