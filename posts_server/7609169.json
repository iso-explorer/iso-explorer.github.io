post_cb({"bq_ids": {"n4140": {"so_7609169_7609294_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 955}}, "n3337": {"so_7609169_7609294_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 943}}}, "7609294": {"PostTypeId": "2", "Body": "<p>The C++ working draft ( www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3126.pdf ) says at 23.4.1:</p>\n<blockquote>\n<p id=\"so_7609169_7609294_0\">The elements of a vector are stored contiguously, meaning that if v is\n  a vector where T is some type other than bool, then it\n  obeys the identity &amp;v[n] == &amp;v[0] + n for all 0 &lt;= n &lt; v.size().</p>\n</blockquote>\n", "LastActivityDate": "2011-09-30T10:46:50.160", "Id": "7609294", "CommentCount": "0", "CreationDate": "2011-09-30T10:46:50.160", "ParentId": "7609169", "Score": "3", "OwnerUserId": "882675"}, "7609203": {"PostTypeId": "2", "Body": "<p>Yes, C++ vectors are always contiguous, regardless of size. </p>\n<p><strong>But</strong> that doesn't mean that they don't move around in memory as you shrink or expand them...</p>\n", "LastActivityDate": "2011-09-30T10:58:43.383", "LastEditorUserId": "1737", "Id": "7609203", "CommentCount": "0", "CreationDate": "2011-09-30T10:40:15.197", "ParentId": "7609169", "Score": "5", "OwnerUserId": "1737", "LastEditDate": "2011-09-30T10:58:43.383"}, "7609169": {"ViewCount": "1872", "Body": "<blockquote>\n<p id=\"so_7609169_7609169_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/849168/are-stdvector-elements-guaranteed-to-be-contiguous\">Are std::vector elements guaranteed to be contiguous?</a> </br></p>\n</blockquote>\n<p>I have come across a technique in which people use a vector in C++ to receive or send data for MPI operations as it is said to store elements contiguously in memory.</p>\n<p>However, I remain skeptical of whether this approach would remain robust for a vector of any size, especially when the vector grows to a certain size, where this assumption could break down.</p>\n<p>Below is an example of what I am talking about :</p>\n<pre><code>MPI_Recv( &amp;partials[0] , partials.size() , mpi_partial , 0, \n         DALG_ELIMINATE_REQ_MSG ,MPI_COMM_WORLD , &amp;status );\n</code></pre>\n", "Title": "Are C++ Vectors always contiguous?", "CreationDate": "2011-09-30T10:36:14.407", "LastActivityDate": "2011-09-30T10:58:43.383", "CommentCount": "12", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2017-05-23T12:02:08.520", "LastEditorUserId": "-1", "Id": "7609169", "ClosedDate": "2011-10-02T00:33:03.783", "Score": "2", "OwnerUserId": "651473", "Tags": "<c++><vector><contiguous>", "AnswerCount": "3"}, "7609229": {"PostTypeId": "2", "Body": "<p>Basically, yes. All implementations I know of are, and the standard requires vector's to have O[1] lookup which basically requires a contiguous block of memory.</p>\n<p>Standard \"you shouldn't rely on implementation details\" disclaimer.</p>\n", "LastActivityDate": "2011-09-30T10:42:20.490", "Id": "7609229", "CommentCount": "1", "CreationDate": "2011-09-30T10:42:20.490", "ParentId": "7609169", "Score": "1", "OwnerUserId": "481760"}});