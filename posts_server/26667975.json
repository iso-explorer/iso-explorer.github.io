post_cb({"bq_ids": {"n4140": {"so_26667975_26667997_0": {"length": 6, "quality": 1.0, "section_id": 361}, "so_26667975_26667975_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 456}}, "n3337": {"so_26667975_26667997_0": {"length": 6, "quality": 1.0, "section_id": 351}, "so_26667975_26667975_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 447}}, "n4659": {"so_26667975_26667997_0": {"length": 6, "quality": 1.0, "section_id": 373}, "so_26667975_26667975_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 479}}}, "26667997": {"Id": "26667997", "PostTypeId": "2", "Body": "<p>You may not define an implicitly declared constructor by the compiler.</p>\n<p>From the C++ Standard (12 Special member functions)</p>\n<blockquote id=\"so_26667975_26667997_0\">\n<ol>\n<li>... Programs <strong>shall not</strong> define implicitly-declared special member functions</li>\n</ol>\n</blockquote>\n", "LastActivityDate": "2014-10-31T05:19:55.540", "Score": "3", "CreationDate": "2014-10-31T05:19:55.540", "ParentId": "26667975", "CommentCount": "5", "OwnerUserId": "2877241"}, "26667975": {"ViewCount": "429", "Body": "<p>Code:</p>\n<pre><code>struct A\n{ \n    ~A(){ };\n};\n\nA::A(){ }; //error: definition of implicitly declared default constructor\n\nint main()\n{\n    A a;\n}\n</code></pre>\n<p><strong><a href=\"http://coliru.stacked-crooked.com/a/19b0756ca4ae8f54\" rel=\"nofollow\">DEMO</a></strong></p>\n<p>Why does the code produces the error? I expected that the program compiles fine. The Standard says <code>N3797::12.8/7 [class.copy]</code>:</p>\n<blockquote>\n<p id=\"so_26667975_26667975_0\">If the class definition does not explicitly declare a copy\n  constructor, one is declared implicitly. If the class definition\n  declares a move constructor or move assignment operator, the\n  implicitly declared copy constructor is defined as deleted; otherwise,\n  it is defined as defaulted (8.4). <em>The latter case is deprecated if the</em>\n<em>class has</em> a user-declared copy assignment operator or a <em>user-declared</em>\n<em>destructor</em>.</p>\n</blockquote>\n<p>It's a bug or my misunderstanding?</p>\n", "AcceptedAnswerId": "26667997", "Title": "Why does a class with a user-declared destructor have an implicitly defaulted constructor?", "CreationDate": "2014-10-31T05:18:00.777", "Id": "26667975", "CommentCount": "7", "LastEditDate": "2016-05-06T16:45:17.747", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "LastEditorUserId": "540815", "LastActivityDate": "2016-05-06T16:45:17.747", "Score": "0", "Tags": "<c++><constructor><default-constructor>", "AnswerCount": "2"}, "26668049": {"Id": "26668049", "PostTypeId": "2", "Body": "<pre><code>struct A\n{ \n  ~A(){ };\n   A();\n};\n\nA::A(){ }; //here you can define default constructor\n\nint main()\n{\n A a;\n}\n</code></pre>\n<p>you have defined explicit destructor not constructor , add constructor declarartion and define it as  outside clas</p>\n", "LastActivityDate": "2014-10-31T05:25:21.550", "Score": "3", "CreationDate": "2014-10-31T05:25:21.550", "ParentId": "26667975", "CommentCount": "0", "OwnerUserId": "2951452"}});