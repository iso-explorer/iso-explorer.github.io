post_cb({"8049403": {"CommentCount": "0", "ViewCount": "1842", "PostTypeId": "1", "OwnerDisplayName": "user478571", "CreationDate": "2011-11-08T11:04:30.273", "LastActivityDate": "2011-11-08T11:50:54.737", "LastEditDate": "2011-11-08T11:50:08.333", "AcceptedAnswerId": "8049579", "LastEditorDisplayName": "user478571", "Title": "Operations on file | get and put pointer", "Id": "8049403", "Score": "4", "Body": "<p>I have some questions on manipulating on a file ;</p>\n<p>a.) I am a bit confused about get and put pointer in c++. Do I show correct position of get pointer and put pointer.</p>\n<pre><code>MyFile . seekg ( 0 , ios :: beg ) ;\nMyFile . seekp ( -10 , ios :: end ) ; \n\nindex :0 1 2 3 4 5 6 7 8 9 10  ...          -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0  \n        __________________________________________________________________\n       ^                                      ^               \n       ^                                      ^                                  \n       ^                                      ^\n   get Pointer                               put pointer\n\nMyfile . get ( character ) ;          \nMyFile . write ( SomeString, 4 ) ;\nMyFile . flush ( ) ;\n\nindex :0 1 2 3 4 5 6 7 8 9 10  ...          -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0  \n        __________________________________________________________________\n         ^                                             ^               \n         ^                                             ^                         \n         ^                                             ^\n      get Pointer                                  put pointer\n</code></pre>\n<p>i.) Are Seekg and seekp always guarentee that get an put pointer always shows correct position ?<br>\n  ii.) If you know more about this topic, can you show/give me some point(s) I should be careful when I use them, ( if there is )</br></p>\n<p>b.)   Is </p>\n<pre><code>   FileIN . seekg ( 1, ifstream :: cur ) ;\n</code></pre>\n<p>equal to </p>\n<pre><code>   FileIN . seekg ( 1, ios :: cur ) ; \n</code></pre>\n<p>Platform : linux \nFile format : binary</p>\n", "Tags": "<c++><database><file>", "AnswerCount": "1"}, "8049579": {"ParentId": "8049403", "PostTypeId": "2", "CommentCount": "11", "Body": "<p>a) It's wrong. File streams maintain <em>one</em> file pointer, for both input and output. Both <code>seekg</code> and <code>seekp</code> do the same thing. The reason there are two different functions is that the interface of iostreams is generic, it can be used for devices which do have separate put and get pointers.</p>\n<p>Quote from the standard [filebuf]:</p>\n<blockquote>\n<p id=\"so_8049403_8049579_0\">In particular:</p>\n<p id=\"so_8049403_8049579_1\">\u2014 If the file is not open for reading the input sequence cannot be read.</p>\n<p id=\"so_8049403_8049579_2\">\u2014 If the file is not open for writing the output sequence cannot be written.</p>\n<p id=\"so_8049403_8049579_3\">\u2014 <strong>A joint file position is maintained for both the input sequence and the output sequence.</strong></p>\n</blockquote>\n<p>b) Yes, they are the same.</p>\n<p><strong>EDIT:</strong></p>\n<pre><code>index :0 1 2 3 4 5 6 7 8 9 10  ...          -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0  \n       _____________________________________________________________________\n       ^ file-pointer\n\nMyFile . seekg ( 0 , ios :: beg ) ;\n\nindex :0 1 2 3 4 5 6 7 8 9 10  ...          -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0  \n       _____________________________________________________________________\n       ^ file-pointer\n\nMyFile . seekp ( -10 , ios :: end ) ; \n\nindex :0 1 2 3 4 5 6 7 8 9 10  ...          -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0  \n       _____________________________________________________________________\n                                             ^ file-pointer\n\nMyfile . get ( character ) ;\n// you must sync/flush if your last operation was input and you switch to output,\n// or your last operation was output and you switch to input.\nMyFile . sync ( ) ;\n\nindex :0 1 2 3 4 5 6 7 8 9 10  ...          -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0  \n       _____________________________________________________________________\n                                                 ^ file-pointer\n\nMyFile . write ( SomeString, 4 ) ;\nMyFile . flush ( ) ;\nindex :0 1 2 3 4 5 6 7 8 9 10  ...          -10 -9 -8 -7 -6 -5 -4 -3 -2 -1 0  \n       _____________________________________________________________________\n                                                             ^ file-pointer\n</code></pre>\n", "OwnerUserId": "277176", "LastEditorUserId": "277176", "LastEditDate": "2011-11-08T11:50:54.737", "Id": "8049579", "Score": "3", "CreationDate": "2011-11-08T11:19:31.840", "LastActivityDate": "2011-11-08T11:50:54.737"}, "bq_ids": {"n4140": {"so_8049403_8049579_2": {"section_id": 2413, "quality": 1.0, "length": 7}, "so_8049403_8049579_1": {"section_id": 2413, "quality": 1.0, "length": 7}, "so_8049403_8049579_3": {"section_id": 2413, "quality": 1.0, "length": 9}}, "n3337": {"so_8049403_8049579_2": {"section_id": 2398, "quality": 1.0, "length": 7}, "so_8049403_8049579_1": {"section_id": 2398, "quality": 1.0, "length": 7}, "so_8049403_8049579_3": {"section_id": 2398, "quality": 1.0, "length": 9}}, "n4659": {"so_8049403_8049579_2": {"section_id": 2688, "quality": 1.0, "length": 7}, "so_8049403_8049579_1": {"section_id": 2688, "quality": 1.0, "length": 7}, "so_8049403_8049579_3": {"section_id": 2688, "quality": 1.0, "length": 9}}}});