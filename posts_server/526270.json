post_cb({"526270": {"CommentCount": "1", "ViewCount": "1147", "OwnerDisplayName": "dalle", "CreationDate": "2009-02-08T20:04:28.470", "LastActivityDate": "2009-02-08T23:45:00.187", "PostTypeId": "1", "AcceptedAnswerId": "526682", "Title": "Standard behavior of tellp on empty ostringstream", "Id": "526270", "Score": "3", "Body": "<p>I have a question on the standard behavior of calling <code>tellp</code> on an empty <code>ostringstream</code>. I have a function foo which calls <code>tellp</code> the first thing:</p>\n<pre><code>void foo(std::ostream&amp; os)\n{\n    std::ostream::pos_type pos = os.tellp();\n    // do some stuff.\n}\n\nint main()\n{\n    std::ostringstream os;\n    foo(os);\n}\n</code></pre>\n<p>In Visual Studio 2005, calling this function with a newly created and empty <code>ostringstream</code> results in the <code>pos</code> variable to be set to an invalid <code>pos_type</code>, which in Visual Studio 2005 is set to <code>pos_type(_BADOFF)</code>.</p>\n<p><code>ofstream</code> does not have the same behavior, where <code>tellp</code> returns <code>pos_type(0)</code>, which is a valid <code>pos_type</code>.</p>\n<p>Is this standard conforming behavior? Is this behavior consistent with other compilers?</p>\n", "Tags": "<c++><standards-compliance><stringstream>", "OwnerUserId": "19100", "AnswerCount": "1"}, "526682": {"ParentId": "526270", "CommentCount": "1", "Body": "<p>27.6.2.4:</p>\n<pre><code>pos_type tellp();\n</code></pre>\n<blockquote>\n<p id=\"so_526270_526682_0\">Returns: if fail() != false, returns\n  pos_type(-1) to indicate failure.\n  Otherwise, returns\n  rdbuf()-&gt;pubseekoff(0, <em>cur</em>, <em>out</em>).</p>\n</blockquote>\n<p>And <em>pubseekoff</em> returns -1 on fail. But am not sure why this happens for you in the case of <em>ostringstream</em>, maybe was too tired to find the words about <em>undefined</em> or <em>implementation-dependent</em>. Using my common sense I would say that for <em>ostringstream</em> this should give 0, for default constructed ostream -1, and for ostream with freshly opened file 0.</p>\n", "OwnerUserId": "61574", "PostTypeId": "2", "Id": "526682", "Score": "1", "CreationDate": "2009-02-08T23:45:00.187", "LastActivityDate": "2009-02-08T23:45:00.187"}, "bq_ids": {"n4140": {"so_526270_526682_0": {"section_id": 2247, "quality": 0.8333333333333334, "length": 10}}, "n3337": {"so_526270_526682_0": {"section_id": 2235, "quality": 0.8333333333333334, "length": 10}}, "n4659": {"so_526270_526682_0": {"section_id": 2520, "quality": 0.8333333333333334, "length": 10}}}});