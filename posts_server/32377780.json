post_cb({"32378382": {"ParentId": "32377780", "CommentCount": "1", "Body": "<p>In both the cases default constructor provided by compiler will be called. Most likely c++ compiler initializes value to some garbage value. c++ compiler will not initialize the value to 0 in case of default constructor being called, unless already the memory is dumped with zeros. I tried this scenario , I did not see any difference in the value assigned for a and b in both the objects.</p>\n", "OwnerUserId": "4666800", "PostTypeId": "2", "Id": "32378382", "Score": "0", "CreationDate": "2015-09-03T14:26:32.947", "LastActivityDate": "2015-09-03T14:26:32.947"}, "32377780": {"CommentCount": "0", "ViewCount": "590", "PostTypeId": "1", "LastEditorUserId": "1977152", "CreationDate": "2015-09-03T14:00:08.883", "LastActivityDate": "2015-09-03T14:26:32.947", "Title": "Implicit vs. Explicit Default Constructor Call", "AcceptedAnswerId": "32377854", "LastEditDate": "2015-09-03T14:04:46.080", "Id": "32377780", "Score": "2", "Body": "<p>Assuming my knowledge of both the below methods for creating an object calling the default constructor(provided by the compiler) is true.</p>\n<pre><code>class A\n{\n    int a,b;\n    //No programmer defined constructor\n}\n...\nA o1; //Implicit Call I believe\nA o2 = A(); //Explicit Call\n</code></pre>\n<p>Why does <code>A o2 = A();</code> causes the members(a,b) of object <code>o2</code> to initialize itself with default values(0) but not <code>A o;</code>(they are initialized with garbage values) ? Is it undefined behavior? </p>\n", "Tags": "<c++><default-constructor>", "OwnerUserId": "1977152", "AnswerCount": "2"}, "32377854": {"ParentId": "32377780", "CommentCount": "0", "Body": "<p>Quotes are from Standard p8.5/1</p>\n<p>There is no user-defined constructor here, so, compiler will use the default one. And default constructor will not initialize members with zeros.</p>\n<blockquote>\n<p id=\"so_32377780_32377854_0\">If no initializer is specified for an object, the object is\n  default-initialized.</p>\n<p id=\"so_32377780_32377854_1\">To default-initialize an object of type T means:</p>\n<p id=\"so_32377780_32377854_2\">If T is a (possibly cv-qualified) class type (Clause 9), constructors\n  are considered. The applicable constructors are enumerated (13.3.1.3),\n  and the best one for the initializer () is chosen through overload\n  resolution (13.3). The constructor thus selected is called, with an\n  empty argument list, to initialize the object.</p>\n</blockquote>\n<p>In second case will be value-initialization.</p>\n<blockquote>\n<p id=\"so_32377780_32377854_3\">An object whose initializer is an empty set of parentheses, i.e., (),\n  shall be value-initialized.</p>\n<p id=\"so_32377780_32377854_4\">To value-initialize an object of type T means:</p>\n<p id=\"so_32377780_32377854_5\">if T is a (possibly cv-qualified) class type without a user-provided\n  or deleted default constructor, then the object is zero-initialized\n  and the semantic constraints for default-initialization are checked,\n  and if T has a non-trivial default constructor, the object is\n  default-initialized;</p>\n<p id=\"so_32377780_32377854_6\">To zero-initialize an object or reference of type T means:</p>\n<p id=\"so_32377780_32377854_7\">if T is a (possibly cv-qualified) non-union class type, each\n  non-static data member and each base-class subobject is\n  zero-initialized and padding is initialized to zero bits;</p>\n</blockquote>\n", "OwnerUserId": "1498580", "PostTypeId": "2", "Id": "32377854", "Score": "2", "CreationDate": "2015-09-03T14:03:23.630", "LastActivityDate": "2015-09-03T14:03:23.630"}, "bq_ids": {"n4140": {"so_32377780_32377854_6": {"section_id": 3285, "quality": 1.0, "length": 5}, "so_32377780_32377854_1": {"section_id": 3286, "quality": 1.0, "length": 4}, "so_32377780_32377854_3": {"section_id": 3290, "quality": 1.0, "length": 7}, "so_32377780_32377854_0": {"section_id": 3291, "quality": 1.0, "length": 5}, "so_32377780_32377854_5": {"section_id": 3287, "quality": 1.0, "length": 20}, "so_32377780_32377854_7": {"section_id": 3285, "quality": 1.0, "length": 17}, "so_32377780_32377854_2": {"section_id": 3296, "quality": 0.6551724137931034, "length": 19}, "so_32377780_32377854_4": {"section_id": 3287, "quality": 1.0, "length": 4}}, "n3337": {"so_32377780_32377854_6": {"section_id": 3155, "quality": 1.0, "length": 5}, "so_32377780_32377854_1": {"section_id": 3156, "quality": 1.0, "length": 4}, "so_32377780_32377854_3": {"section_id": 3160, "quality": 1.0, "length": 7}, "so_32377780_32377854_0": {"section_id": 3161, "quality": 1.0, "length": 5}, "so_32377780_32377854_7": {"section_id": 3155, "quality": 1.0, "length": 17}, "so_32377780_32377854_2": {"section_id": 3166, "quality": 0.6551724137931034, "length": 19}, "so_32377780_32377854_4": {"section_id": 3157, "quality": 1.0, "length": 4}}, "n4659": {"so_32377780_32377854_0": {"section_id": 4053, "quality": 1.0, "length": 5}, "so_32377780_32377854_5": {"section_id": 4049, "quality": 1.0, "length": 20}, "so_32377780_32377854_3": {"section_id": 4052, "quality": 1.0, "length": 7}, "so_32377780_32377854_6": {"section_id": 653, "quality": 0.8, "length": 4}, "so_32377780_32377854_7": {"section_id": 4047, "quality": 0.9411764705882353, "length": 16}, "so_32377780_32377854_2": {"section_id": 4048, "quality": 0.8620689655172413, "length": 25}}}});