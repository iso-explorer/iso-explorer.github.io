post_cb({"bq_ids": {"n4140": {"so_11128020_11128519_0": {"length": 29, "quality": 0.90625, "section_id": 5966}}, "n3337": {"so_11128020_11128519_0": {"length": 29, "quality": 0.90625, "section_id": 5735}}, "n4659": {"so_11128020_11128519_0": {"length": 29, "quality": 0.90625, "section_id": 7460}}}, "11128519": {"Id": "11128519", "PostTypeId": "2", "Body": "<p>It's a bug in the compiler. The code compiles fine with MSVC 2012 RC. I believe the pertinent bug is <a href=\"http://connect.microsoft.com/VisualStudio/feedback/details/736295/incorrect-name-lookup-in-a-lambda-expression-defined-inside-a-class-member-function\" rel=\"nofollow\">this one</a>.</p>\n<p>And the pertinent part of the standard is [expr.prim.lambda] 5.1.2 clause 7:</p>\n<blockquote>\n<p id=\"so_11128020_11128519_0\">The lambda-expression\u2019s compound-statement yields the function-body\n  (8.4) of the function call operator, but <strong>for purposes of name lookup</strong>\n  (3.4), determining the type and value of this (9.3.2) and transforming\n  id-expressions referring to non-static class members into class member\n  access expressions using (*this) (9.3.1), <strong>the compound-statement is\n  considered</strong> in the context of the lambda-expression.</p>\n</blockquote>\n", "LastEditorUserId": "906773", "LastActivityDate": "2012-06-20T21:38:40.083", "Score": "2", "CreationDate": "2012-06-20T21:30:31.413", "ParentId": "11128020", "CommentCount": "1", "LastEditDate": "2012-06-20T21:38:40.083", "OwnerUserId": "906773"}, "11128020": {"ViewCount": "130", "Body": "<p>I'm using MSVC10.</p>\n<p>I have a class <code>C</code> which is nested in class <code>B</code>, which in turn is nested in class <code>A</code>.  <code>B</code> has a member variable of type <code>C</code>, and <code>A</code> has a <code>vector</code> of <code>B</code>s.  Like so:</p>\n<pre><code>class A\n{\n  class B\n  {\n    string foo_;\n    class C\n    {\n      string bar_;\n    } c_;\n  };\n  vector&lt;B&gt; b_;\n};\n</code></pre>\n<p>Within <code>A</code> I have a member function which uses <code>for_each</code> with a lambda, to iterate over the <code>vector&lt;B&gt;</code>.</p>\n<p>In that lambda I try to get a reference to the <code>B</code> and the <code>C</code> (separately):</p>\n<pre><code>void A::Run()\n{\n    for_each(b_.begin(), b_.end(), [](std::vector&lt;B&gt;::value_type&amp; that)\n    {\n        const B&amp; b = that;\n        cout &lt;&lt; b.foo_;\n        const B::C&amp; c = b.c_;   //  'B' : is not a class or namespace name\n        // const A::B::C&amp; c = b.c_; &lt;-- THIS COMPILES\n        cout &lt;&lt; c.bar_;\n    });\n}\n</code></pre>\n<p>The code: <code>const B::C&amp; c = b.c_;</code> results in a compiler error, \"'B' : is not a class or namespace name\" <em>even though</em> the compiler had no problem accepting <code>const B&amp; b = that;</code></p>\n<p>Is this syntax allowed by the language?</p>\n<p>If I change it to:  <code>const A::B::C&amp; c = b.c_;</code> the compiler accepts it.</p>\n<p>Here is a complete example for you to play with:</p>\n<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nvoid foo() {}\n\nclass A\n{\npublic: \n    void Run();\n\n    struct B\n    {\n        std::string foo_;\n        struct C\n        {\n            std::string bar_;\n        } c_;\n    };\n\n    std::vector&lt;B&gt; b_;\n};\n\nvoid A::Run()\n{\n    for_each(b_.begin(), b_.end(), [](std::vector&lt;B&gt;::value_type&amp; that)\n    {\n        const B&amp; b = that;\n        cout &lt;&lt; b.foo_;\n        const B::C&amp; c = b.c_;   //  'B' : is not a class or namespace name\n        // const A::B::C&amp; c = b.c_; &lt;-- THIS COMPILES\n        cout &lt;&lt; c.bar_;\n    });\n}\n\nint main()\n{\n    A a;\n    a.Run();\n}\n</code></pre>\n", "AcceptedAnswerId": "11128519", "Title": "Unable To Resolve Name In Lambda When Naming Nested Class", "CreationDate": "2012-06-20T20:52:12.137", "Id": "11128020", "CommentCount": "2", "PostTypeId": "1", "LastActivityDate": "2012-06-20T21:38:40.083", "Score": "3", "OwnerUserId": "241536", "Tags": "<c++><visual-studio-2010><lambda><c++11>", "AnswerCount": "1"}});