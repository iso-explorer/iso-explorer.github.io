post_cb({"7538448": {"CommentCount": "0", "ViewCount": "5314", "LastActivityDate": "2011-09-24T10:56:09.757", "Body": "<p>There is code:</p>\n<pre><code>#include &lt;iostream&gt;\nint main(){\n  unsigned char a = 4, b = 255;\n  int g = (unsigned char)a + (unsigned char)b;\n  std::cout &lt;&lt; g &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>\n<p>Result:</p>\n<pre><code>259\n</code></pre>\n<p>Why the result is 259, not 3? If there are added two unsigned char variables, there should be overflow, result should be 3 and then it should convert from unsigned char 3 to int 3.</p>\n", "PostTypeId": "1", "AcceptedAnswerId": "7538470", "FavoriteCount": "2", "Title": "Adding two unsigned char variables and result is int", "Id": "7538448", "Score": "10", "CreationDate": "2011-09-24T10:32:29.090", "Tags": "<c++>", "OwnerUserId": "738811", "AnswerCount": "2"}, "7538470": {"ParentId": "7538448", "LastEditDate": "2017-05-23T12:31:59.197", "CommentCount": "0", "CreationDate": "2011-09-24T10:36:32.410", "OwnerUserId": "28169", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "7538470", "Score": "14", "Body": "<p>The addition operation will first <a href=\"https://stackoverflow.com/questions/tagged/integer-promotion\">promote</a> its operands to <code>int</code>, before doing the addition. This is how C works. If you want to truncate, you need to assign it back into a narrower type, such as <code>unsigned char</code>.</p>\n", "LastActivityDate": "2011-09-24T10:52:17.853"}, "bq_ids": {"n4140": {"so_7538448_7538579_0": {"section_id": 21, "quality": 0.5882352941176471, "length": 20}}, "n3337": {"so_7538448_7538579_0": {"section_id": 18, "quality": 0.5882352941176471, "length": 20}}, "n4659": {"so_7538448_7538579_0": {"section_id": 21, "quality": 0.5882352941176471, "length": 20}}}, "7538579": {"ParentId": "7538448", "CommentCount": "0", "Body": "<p>Integer arithmetic is never performed on data types smaller than <code>int</code>. For example, for types smaller than <code>int</code> e.g. if two types <code>char</code> and <code>short int</code> are added, they are promoted to <code>int</code> before any arithmetic operation and result is an integer type. If one of the types happened to be larger than int e.g <code>long long int</code> and <code>int</code> then int gets promoted to <code>long long int</code> and the result is <code>long long int</code>.</p>\n<blockquote>\n<p id=\"so_7538448_7538579_0\">(\u00a7 4.5/1) - An rvalue of type char, signed char, unsigned char, short\n  int, or unsigned short\n      int can be converted to an rvalue of type int if int can represent\n  all the values of the source type; otherwise, the source rvalue can be\n  converted to an rvalue of type unsigned int.</p>\n</blockquote>\n", "OwnerUserId": "187543", "PostTypeId": "2", "Id": "7538579", "Score": "6", "CreationDate": "2011-09-24T10:56:09.757", "LastActivityDate": "2011-09-24T10:56:09.757"}});