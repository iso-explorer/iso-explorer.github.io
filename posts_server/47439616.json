post_cb({"bq_ids": {"n4140": {"so_47439616_47439700_1": {"length": 14, "quality": 1.0, "section_id": 26}, "so_47439616_47439700_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 6146}}, "n3337": {"so_47439616_47439700_1": {"length": 14, "quality": 1.0, "section_id": 23}, "so_47439616_47439700_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 5909}}, "n4659": {"so_47439616_47439700_1": {"length": 14, "quality": 1.0, "section_id": 26}, "so_47439616_47439700_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 7642}}}, "47439700": {"Id": "47439700", "PostTypeId": "2", "Body": "<p>From <strong>Shift operators</strong> <a href=\"https://timsong-cpp.github.io/cppwp/n4659/expr.shift#1\" rel=\"nofollow noreferrer\">[expr.shift]</a></p>\n<blockquote>\n<p id=\"so_47439616_47439700_0\">The operands shall be of integral or unscoped enumeration type and integral promotions are performed.\n  The type of the result is that of the promoted left operand</p>\n</blockquote>\n<p><code>bool</code> is an integral type so the code is well formed (<code>bool</code> is promoted to <code>int</code> and result is an <code>int</code>).</p>\n<p>From <a href=\"https://timsong-cpp.github.io/cppwp/n4659/conv.prom#6\" rel=\"nofollow noreferrer\">[conv.prom]</a>, we show what integers the booleans get promoted to:</p>\n<blockquote>\n<p id=\"so_47439616_47439700_1\">A prvalue of type <code>bool</code> can be converted to a prvalue of type <code>int</code>, with <code>false</code> becoming zero and true becoming <code>one</code> </p>\n</blockquote>\n<p>Afterwards, the shift behaves normally. (Thanks, @chris)</p>\n", "LastEditorUserId": "27678", "LastActivityDate": "2017-11-22T19:25:46.183", "Score": "9", "CreationDate": "2017-11-22T16:33:11.777", "ParentId": "47439616", "CommentCount": "7", "OwnerUserId": "27678", "LastEditDate": "2017-11-22T19:25:46.183"}, "47439616": {"ViewCount": "288", "Body": "<p>I'm using someone else's code that was written with an older compiler that mapped a special <code>BOOL</code> type to an <code>unsigned int</code>, but in my compiler it's mapped to a true <code>bool</code>. In some places in his code he uses the bitwise shift operator <code>&lt;&lt;</code> on the <code>bool</code> type, which I had never seen before and my compiler surprised me when it didn't complain.</p>\n<p>Is that valid C++? Does the <code>bool</code> automatically get promoted to an <code>int</code> or <code>uint</code>?</p>\n<p>I saw <a href=\"https://stackoverflow.com/questions/24542/using-bitwise-operators-for-booleans-in-c\">this related question</a>, which provided some clarity on another issue, but it doesn't address the shift operators.</p>\n", "AcceptedAnswerId": "47439700", "Title": "Can you bitwise shift a bool in C++?", "CreationDate": "2017-11-22T16:29:25.347", "Id": "47439616", "CommentCount": "8", "PostTypeId": "1", "LastActivityDate": "2017-11-22T19:25:46.183", "Score": "11", "OwnerUserId": "1666676", "Tags": "<c++><bit-shift>", "AnswerCount": "1"}});