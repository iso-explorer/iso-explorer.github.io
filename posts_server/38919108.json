post_cb({"bq_ids": {"n4140": {"so_38919108_38919187_0": {"length": 26, "quality": 0.9629629629629629, "section_id": 2730}}, "n3337": {"so_38919108_38919187_0": {"length": 26, "quality": 0.9629629629629629, "section_id": 2691}}, "n4659": {"so_38919108_38919187_0": {"length": 26, "quality": 0.9629629629629629, "section_id": 3468}}}, "38919108": {"ViewCount": "44", "Body": "<p>I am currently creating a program which calls native code from within a java environment (NDK).\nI have a function that is going to be called a few times from my java code. In this function I create a detached thread that will act as a timer to stop a particular function in my native code.\nThe code looks like this:</p>\n<pre><code>void myNativeFunction(){\n    std::thread timerTrial(&amp;FluidMechanics::Impl::endTrial,this);\n    timerTrial.detach();\n}\n\nvoid endTrial(){\n    //code here\n    return ;\n}\n</code></pre>\n<p>The thing is that when endTrial returns I was wondering whether my thread was going to be terminated and all resources freed when I return. Indeed myNativeFunction will be called again a couple of times shortly after that so I don't want to mess up my ressources and memory.</p>\n", "AcceptedAnswerId": "38919187", "Title": "detached thread end of execution", "CreationDate": "2016-08-12T13:24:33.493", "Id": "38919108", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2016-08-12T13:28:45.830", "Score": "1", "OwnerUserId": "1820086", "Tags": "<c++><multithreading>", "AnswerCount": "1"}, "38919187": {"Id": "38919187", "PostTypeId": "2", "Body": "<p>Yes. Any thread specific resources will be automatically released when the <em>detached</em> thread returns.</p>\n<p><em>C++11 draft, N3690, \u00a7 30.3.1.7, 10, detach()</em></p>\n<blockquote>\n<p id=\"so_38919108_38919187_0\">The thread represented by *this continues execution without the\n  calling thread blocking. When detach() returns, *this no longer\n  represents the possibly continuing thread of execution. <strong>When the\n  thread previously represented by *this ends execution, the\n  implementation shall release any owned resources.</strong></p>\n</blockquote>\n<p>(emphasis mine).</p>\n", "LastActivityDate": "2016-08-12T13:28:45.830", "CommentCount": "1", "CreationDate": "2016-08-12T13:28:45.830", "ParentId": "38919108", "Score": "1", "OwnerUserId": "1275169"}});