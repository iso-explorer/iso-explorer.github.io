post_cb({"46578158": {"CommentCount": "8", "AcceptedAnswerId": "46578210", "PostTypeId": "1", "LastEditorUserId": "963864", "CreationDate": "2017-10-05T05:01:24.340", "LastActivityDate": "2017-10-07T20:10:21.293", "LastEditDate": "2017-10-07T20:10:21.293", "ViewCount": "47", "FavoriteCount": "1", "Title": "Regarding fork system call in linux", "Id": "46578158", "Score": "4", "Body": "<p>Okay I am working with the following C/C++ code in linux:</p>\n<pre><code>int main() {\n    printf(\"hello\");\n    Pid = fork();\n    if (pid &gt; 0)\n            printf(\"I\u2019m the parent!\");\n    else\n            printf(\"I\u2019m the child\");\n    return 0;\n}\n</code></pre>\n<p>Here is my output:\n<a href=\"https://i.stack.imgur.com/uN7if.png\" rel=\"nofollow noreferrer\"><img alt=\"program output screenshot\" src=\"https://i.stack.imgur.com/uN7if.png\"/></a></p>\n<p>My notes from my CS prof say the following: </p>\n<blockquote>\n<p id=\"so_46578158_46578158_0\">After a new child process is created, both processes will execute the\n  next instruction following the <code>fork()</code> system call. Please note that\n  Unix will make an exact copy of the parent's address space and give it\n  to the child. Therefore, the parent and child processes have separate\n  address spaces.</p>\n</blockquote>\n<p>For this reason, I am extremely confused as to why it would not only output the current directory again but also the \"hello\" again? the only possible reason I could think that it would do this is the line that says it \"copies the address space\" is simply re-running all the commands before the fork but that doesn't make any sense.</p>\n", "Tags": "<c++><printf><fork><stdout><stdio>", "OwnerUserId": "5517485", "AnswerCount": "1"}, "46578210": {"ParentId": "46578158", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>When you use <code>printf</code>, the output is buffered. So, do a <code>fflush</code> or <code>\\n</code> right after <code>printf</code>.</p>\n<p>Adding the <code>fflush</code> or <code>\\n</code> though forces the buffer to be flushed and outputted to the screen. This happens before the fork and hence is only printed once.</p>\n<p><strong>C99 7.19.2p2</strong></p>\n<blockquote>\n<p id=\"so_46578158_46578210_0\">Whether the last line requires a terminating new-line character is\n  implementation-defined.</p>\n<p id=\"so_46578158_46578210_1\"><strong>It doesn't define what happens if a terminating new-line character\n  isn't provided. Since the standard doesn't define the behavior, the\n  behavior is undefined.</strong></p>\n</blockquote>\n", "OwnerUserId": "6935629", "LastEditorUserId": "6935629", "LastEditDate": "2017-10-05T05:25:21.127", "Id": "46578210", "Score": "5", "CreationDate": "2017-10-05T05:06:44.173", "LastActivityDate": "2017-10-05T05:25:21.127"}, "bq_ids": {"n4140": {"so_46578158_46578210_0": {"section_id": 5313, "quality": 0.75, "length": 6}}, "n3337": {"so_46578158_46578210_0": {"section_id": 5110, "quality": 0.75, "length": 6}}, "n4659": {"so_46578158_46578210_0": {"section_id": 6737, "quality": 0.75, "length": 6}}}});