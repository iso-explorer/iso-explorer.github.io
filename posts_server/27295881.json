post_cb({"bq_ids": {"n4140": {"so_27295881_27296006_0": {"length": 7, "quality": 0.875, "section_id": 3269}}, "n3337": {"so_27295881_27296006_0": {"length": 7, "quality": 0.875, "section_id": 3141}}, "n4659": {"so_27295881_27296006_0": {"length": 7, "quality": 0.875, "section_id": 4027}}}, "27296006": {"Id": "27296006", "PostTypeId": "2", "Body": "<p><code>__func__</code> is indeed neither a string literal nor a macro. Its specification from C++11 8.4.1/8 is</p>\n<blockquote>\n<p id=\"so_27295881_27296006_0\">The function-local predefined variable <code>__func__</code> is defined as if a definition of the form</p>\n</blockquote>\n<pre><code>static const char __func__[] = \"function-name \";\n</code></pre>\n<blockquote>\n<p id=\"so_27295881_27296006_1\">had been provided</p>\n</blockquote>\n<p>So you'll have to treat it like a static array, not a string literal; in particular, you can't concatenate it with other literals.</p>\n<pre><code>printf(\"%s%s\", __func__, \" try #1\\n\");\nprintf(\"%s try #2\\n\", __func__);\nstd::string message = __func__ + std::string(\" try #3\");\n</code></pre>\n", "LastActivityDate": "2014-12-04T14:03:11.163", "Score": "5", "CreationDate": "2014-12-04T14:03:11.163", "ParentId": "27295881", "CommentCount": "0", "OwnerUserId": "204847"}, "27295881": {"ViewCount": "161", "Body": "<p>I am trying to concatinate __ func__ and literal string in C++ and I am getting an error on GCC (with or without of C++11 standart). Like, for example, here:</p>\n<pre><code>#include &lt;cstdio&gt;\n\nint main(void)\n{\n        printf(\"%s\", __func__ \" try #1\\n\");\n        printf(__func__ \" try #2\\n\");\n        return 0;\n}\n</code></pre>\n<p>Looks like __ func__ is not actually a string literal macros. Does anyone knows why that is happening and, maybe, way to solve it?</p>\n", "AcceptedAnswerId": "27295960", "Title": "C++ Concatinating __func__ and const char literal", "CreationDate": "2014-12-04T13:57:24.673", "Id": "27295881", "CommentCount": "8", "PostTypeId": "1", "LastActivityDate": "2014-12-04T14:07:52.463", "Score": "0", "OwnerUserId": "4324545", "Tags": "<c++><function><macros>", "AnswerCount": "2"}, "27295960": {"Id": "27295960", "PostTypeId": "2", "Body": "<p>Technically, <code>__func__</code> is a <em>predefined identifier</em>. It's <strong>never</strong> implemented as a macro.</p>\n<p>It has the type <code>static const char __func__[]</code> and so therefore you can't concatenate it the way you have. Of course, you <em>can</em> add it to a <code>std::string</code> though.</p>\n<p>Use</p>\n<p><code>printf(\"%s try #1\\n\", __func__);</code></p>\n<p>instead.</p>\n", "LastEditorUserId": "2380830", "LastActivityDate": "2014-12-04T14:07:52.463", "Score": "2", "CreationDate": "2014-12-04T14:00:47.060", "ParentId": "27295881", "CommentCount": "1", "LastEditDate": "2014-12-04T14:07:52.463", "OwnerUserId": "2380830"}});