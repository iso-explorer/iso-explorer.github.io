post_cb({"bq_ids": {"n4140": {"so_33263625_33263995_0": {"length": 6, "quality": 1.0, "section_id": 5430}}, "n3337": {"so_33263625_33263995_0": {"length": 6, "quality": 1.0, "section_id": 5225}}, "n4659": {"so_33263625_33263995_0": {"length": 6, "quality": 1.0, "section_id": 6858}}}, "33263995": {"Id": "33263995", "PostTypeId": "2", "Body": "<p>Both <a href=\"http://melpon.org/wandbox/permlink/HgPXqnuKESHDQoW9\" rel=\"nofollow\">clang</a> and <a href=\"http://melpon.org/wandbox/permlink/KtpcUvfGELsD3S4C\" rel=\"nofollow\">gcc</a> reject this code using <code>-pedantic-errors</code>. clang provides the following error:</p>\n<pre><code>error: 'const' is not permitted on a declaration of a type [-Werror,-Wmissing-declarations]\nconst struct omg;\n^\n\nerror: 'volatile' is not permitted on a declaration of a type [-Werror,-Wmissing-declarations]\n</code></pre>\n<p>the draft C++ standard section 7.1.6.1 The cv-qualifiers [dcl.type.cv] says:</p>\n<blockquote>\n<p id=\"so_33263625_33263995_0\">[...]If a cv-qualifier appears in a decl-specifier-seq, the init-declarator-list of the declaration shall\n  not be empty.[...]</p>\n</blockquote>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2015-10-21T16:05:29.520", "Score": "4", "CreationDate": "2015-10-21T15:59:48.487", "ParentId": "33263625", "CommentCount": "3", "OwnerUserId": "1708801", "LastEditDate": "2015-10-21T16:05:29.520"}, "33263625": {"ViewCount": "147", "Body": "<p>As far as I can see in the standard, the following code is valid. It compiles in MSVC1025.</p>\n<pre><code>const struct omg;\nstruct omg volatile;\n\nint main()\n{\n    return 0;\n}\n</code></pre>\n<p>The qualifiers <code>const</code> and <code>volatile</code> seem purposeless in those declarations. They do not help nor hurt neither the compiler nor the programmer.</p>\n<p>The standard does not seem bent on weeding out these \"empty ambiguities\". In the case of the empty declaration <code>;</code>, it is explicitly allowed.</p>\n<p>Are there other cases of tokens that, after preprocessing, are irrelevant for the meaning of the expression?</p>\n", "AcceptedAnswerId": "33263995", "Title": "C++ standard ambiguity", "CreationDate": "2015-10-21T15:43:05.500", "Id": "33263625", "CommentCount": "6", "PostTypeId": "1", "LastActivityDate": "2015-10-21T16:05:29.520", "Score": "8", "OwnerUserId": "2549876", "Tags": "<c++><language-lawyer>", "AnswerCount": "1"}});