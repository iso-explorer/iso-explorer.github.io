post_cb({"bq_ids": {"n4140": {"so_23920931_23921069_3": {"length": 5, "quality": 1.0, "section_id": 6693}, "so_23920931_23921069_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 369}}, "n3337": {"so_23920931_23921069_3": {"length": 5, "quality": 1.0, "section_id": 6448}, "so_23920931_23921069_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 359}}, "n4659": {"so_23920931_23921069_3": {"length": 5, "quality": 1.0, "section_id": 8168}, "so_23920931_23921069_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 7330}}}, "23921069": {"Id": "23921069", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_23920931_23921069_0\">friend of class array is the base class for the class diagonal_matrix</p>\n</blockquote>\n<p>Class <code>array</code> has no friends. It is  this class <code>array</code> that is a friend of class <code>matrix</code>, becuase it si <code>matrix</code> that has stated</p>\n<pre><code>class matrix\n{\npublic:\n    friend class arry;  // this is my friend\n    matrix(int , int);\n    ~matrix();\n};\n</code></pre>\n<p>You asked for </p>\n<blockquote>\n<p id=\"so_23920931_23921069_1\">advices on how to continue with my code</p>\n</blockquote>\n<p>Start from declaring a friendship in class <code>array</code>.</p>\n<blockquote>\n<p id=\"so_23920931_23921069_2\">and I'd like to know if derived classes inherit the friends of the\n  base class</p>\n</blockquote>\n<p>If base class declares <code>class A</code> as it's friend it is not a friend to derived class unless this derived class will declare <code>class A</code> a friend too.</p>\n<p>C++ Standard n3337 <strong>\u00a7</strong> 11.3/10 Friends</p>\n<blockquote>\n<p id=\"so_23920931_23921069_3\">Friendship is neither inherited nor transitive.</p>\n</blockquote>\n", "LastEditorUserId": "1141471", "LastActivityDate": "2014-05-28T23:58:07.597", "Score": "1", "CreationDate": "2014-05-28T20:19:08.203", "ParentId": "23920931", "CommentCount": "0", "LastEditDate": "2014-05-28T23:58:07.597", "OwnerUserId": "1141471"}, "23920931": {"ViewCount": "253", "Body": "<p>I stumbled across what seems to me a very interesting problem. I am not asking for a solution to this problem, only advices on how to continue with my code and I'd like to know if derived classes inherit the friends of the base class.</p>\n<p>This is the problem:</p>\n<blockquote>\n<p id=\"so_23920931_23920931_0\">Class matrix, friend of class array is the base class for the class\n  diagonal_matrix. The derived class must contain a parameterized\n  constructor through which to highlight the transmission of parameters\n  towards the constructor from the base class, destructor and a method\n  to check if the matrix is square and diagonal ( all elements other\n  than the ones from the principal diagonal are equal to zero).\n  Illustrate the concept of virtual function (pure if it's more natural\n  in implementation).</p>\n</blockquote>\n<p>This is what I wrote so far (not very creative today on how to continue):</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass arry\n{\nprivate:\n    int *vec;\n    int n;\npublic:\n    int i,nrelem;\n    arry(){};\n    ~arry();\n    void readArray(int);\n\n};\narry::~arry()\n{\n    n=0;\n    delete [] vec;\n}\nvoid arry::readArray(int elem)\n {\n    n=elem;\n    vec=new int[n];\n   for(i=1;i&lt;=elem;i++)\n   {\n       cout&lt;&lt;\"vec[\"&lt;&lt;i&lt;&lt;\"]=\";\n       cin&gt;&gt;vec[i];\n   }\n}\n\nclass matrix\n{\npublic:\n    friend class arry;\n    matrix(int , int);\n    ~matrix();\n    };\n\nint main()\n{\n    return 0;\n} \n</code></pre>\n", "Title": "Class inheritance and friendship project", "CreationDate": "2014-05-28T20:09:28.133", "LastActivityDate": "2015-10-26T14:40:31.237", "CommentCount": "3", "LastEditDate": "2015-10-26T14:40:31.237", "PostTypeId": "1", "LastEditorUserId": "3204551", "Id": "23920931", "Score": "0", "OwnerUserId": "3640527", "Tags": "<c++><class><inheritance><friend><access-control>", "AnswerCount": "1"}});