post_cb({"21082845": {"ParentId": "21078243", "CommentCount": "0", "Body": "<p>Keep in mind that pass-by-value may in some cases enable a broader spectrum of compiler optimizations. Chandler Carruth (of Clang fame) spoke on some of the difficulties optimizing compilers face when dealing with references/pointers to objects in his <a href=\"http://youtu.be/eR34r7HOU14?t=39m1s\" rel=\"nofollow\">keynote at C++ Now 2013</a>.</p>\n", "OwnerUserId": "1105266", "PostTypeId": "2", "Id": "21082845", "Score": "1", "CreationDate": "2014-01-13T02:05:42.830", "LastActivityDate": "2014-01-13T02:05:42.830"}, "21078409": {"ParentId": "21078243", "CommentCount": "0", "Body": "<p>When passing primitive types like float, it doesn't help anything to pass by const reference. Passing by value accomplishes pretty much the same thing - any change made to the value of the parameter will not affect the value in the calling function (if calling by value) - no change can be made to the parameter (if calling by const reference).</p>\n<p>With classes, however, passing a const class reference would be much more efficient than passing it by value (which would have to make a copy of the object).</p>\n", "OwnerUserId": "2376156", "PostTypeId": "2", "Id": "21078409", "Score": "0", "CreationDate": "2014-01-12T18:12:07.273", "LastActivityDate": "2014-01-12T18:12:07.273"}, "21078243": {"CommentCount": "1", "ViewCount": "164", "PostTypeId": "1", "LastEditorUserId": "702561", "CreationDate": "2014-01-12T17:59:01.983", "LastActivityDate": "2014-01-13T02:05:42.830", "Title": "Is writing foo(const float&) wasted effort?", "AcceptedAnswerId": "21078268", "LastEditDate": "2014-01-12T18:09:46.003", "Id": "21078243", "Score": "4", "Body": "<p>When passing primitive types like int or float, is it wasted effort to write something like this:</p>\n<pre><code>foo(const float&amp;);\n</code></pre>\n<p>rather than just passing by value:</p>\n<pre><code>foo(float);\n</code></pre>\n", "Tags": "<c++>", "OwnerUserId": "702561", "AnswerCount": "4"}, "21078268": {"ParentId": "21078243", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>For floats? <a href=\"https://stackoverflow.com/q/738952/560648\">Yes, pretty much.</a></p>\n<p>There's simply nothing to gain here: floats are small and the copy will not be slower than the creation of a pointer to implement the reference.</p>\n", "OwnerUserId": "560648", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T10:33:22.767", "Id": "21078268", "Score": "3", "CreationDate": "2014-01-12T18:00:51.803", "LastActivityDate": "2014-01-12T18:00:51.803"}, "21078418": {"ParentId": "21078243", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>It depends on the implementation of references. As per Standard (\u00a78.3.2/4):</p>\n<blockquote>\n<p id=\"so_21078243_21078418_0\">It is unspecified whether or not a reference requires storage (3.7).</p>\n</blockquote>\n<p>references could, theoretically, save you from the copy of the <code>float</code>. That, of course, will be vain if references are implemented as pointers. Therefore the answer is implementation dependent.</p>\n<p>Most of the time this kind of <em>micro-optimizations</em> don't make much sense. I highly doubt the bottle neck of your application is in the copy of that <code>float</code>.</p>\n", "OwnerUserId": "493122", "LastEditorUserId": "493122", "LastEditDate": "2014-01-12T18:18:16.733", "Id": "21078418", "Score": "2", "CreationDate": "2014-01-12T18:12:41.877", "LastActivityDate": "2014-01-12T18:18:16.733"}, "bq_ids": {"n4140": {"so_21078243_21078418_0": {"section_id": 3221, "quality": 1.0, "length": 5}}, "n3337": {"so_21078243_21078418_0": {"section_id": 3095, "quality": 1.0, "length": 5}}, "n4659": {"so_21078243_21078418_0": {"section_id": 3978, "quality": 1.0, "length": 5}}}});