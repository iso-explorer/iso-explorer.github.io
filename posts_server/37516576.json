post_cb({"37516576": {"CommentCount": "9", "ViewCount": "60", "CreationDate": "2016-05-30T01:34:20.653", "LastActivityDate": "2016-05-30T03:22:15.927", "Title": "Writing to file With FStream Not Working", "AcceptedAnswerId": "37516764", "PostTypeId": "1", "Id": "37516576", "Score": "0", "Body": "<p>I am attempting to make a program where people put in their preferences file what they would want to do for that week. I made a huge if else statement and need help with my else statement. My else statement is fair to the users/members as their list is randomly picked and the file is created. However, the else statement creates the file, but does not write any of the roles to it. Here is the code :</p>\n<pre><code>else {\n\n    string positions[23] =\n    {   \"Day_Clean\" \"Dinner_Cook\" \"Dinner_Cook\" \"Dinner_Clean\" \"Dinner_Clean\" \"HEB_Shop\" \"Costco_Shop\" \"Silver_Fridge\" \"Stove_Micowave\" \"Appliance_Clean\" \"LH_Bathrooms\" \"Laundry_Room\" \"Upstairs_Commons\" \"Bikeroom_Entrance_Stairs\" \"Little_House_Commons\" \"Porch_Grounds\" \"Recycling\" \"Gardening\" \"Condi_Fridge_Personal_Fridge\" \"Freezer\" \"Downstairs_Bathroom_1\" \"Downstairs_Bathroom_2\" \"Upstairs_Bathroom\" \"Big_House_Hallways\"  };\n      ofstream randomPrefs;\n  randomPrefs.open(foo);\n\n  int randomPrefloopcount;\n  do {\n  int randomPrefs1 = rand() % 25;\n  randomPrefs &lt;&lt; positions[randomPrefs1] &lt;&lt; \"\\n\";\n\n  randomPrefloopcount++;\n} while(randomPrefloopcount &lt;= 24);\n  randomPrefs.close();\n</code></pre>\n<p>The files are created, but they are all blank. Please help!</p>\n", "Tags": "<c++><arrays><string>", "OwnerUserId": "6397843", "AnswerCount": "2"}, "37516693": {"ParentId": "37516576", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2016-05-30T01:57:59.470", "Score": "0", "LastEditorUserId": "6374665", "LastEditDate": "2016-05-30T02:26:12.363", "Id": "37516693", "OwnerUserId": "225074", "Body": "<p>A simple program to verify a concept:</p>\n<pre><code>#include &lt;iostream&gt;\n\nint main()\n{\n  static const char *tokens[] = {\"Tory\" \"Grant\"};\n  static const char *mythbusters[] = {\"Adam\", \"Jamie\"};\n\n  // Print out the quantity of elements:\n  std::cout &lt;&lt; \"Elements in tokens: \" &lt;&lt; (sizeof(tokens) / sizeof(tokens[0])) &lt;&lt; \"\\n\";\n  std::cout &lt;&lt; \"Elements in mythbusters: \"\n            &lt;&lt; (sizeof(mythbusters) / sizeof(mythbusters[0]))\n            &lt;&lt; \"\\n\";\n  return 0;\n}\n</code></pre>\n<p>This will show you the difference between concatenation of string literals and specifying more than one literal.  </p>\n<p>Edit: Added '*' before tokens and mythbusters.</p>\n", "LastActivityDate": "2016-05-30T02:26:12.363"}, "37516764": {"ParentId": "37516576", "PostTypeId": "2", "CommentCount": "4", "CreationDate": "2016-05-30T02:09:44.900", "Score": "0", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:07:58.473", "Id": "37516764", "OwnerUserId": "6374665", "Body": "<p>As stated by Sam Varshavchik your problem lies between the number of elements in your array and your loop.</p>\n<p>Let's suppose your values never change, there is a safer way to declare and use an array like this in c++11.</p>\n<pre><code>#include &lt;array&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    constexpr std::size_t                           kArraySize{ 3 };\n    constexpr std::array&lt;const char *, kArraySize&gt;  kArray {\n          \"hehe\"\n        , \"hehe\"\n//      , \"hehe\" // this one would work since there is 3 elements defined\n//      , \"hehe\" // this one would fail to compile\n    };\n\n    for (auto element : kArray)\n    {\n        if (element != nullptr)\n        { std::cout &lt;&lt; \"element: \" &lt;&lt; element &lt;&lt; std::endl; }\n        else\n        { std::cout &lt;&lt; \"element is null\" &lt;&lt; std::endl; }\n    }\n}\n</code></pre>\n<p>std::array ensures that values not defined by user will be zero-initialized, in this case it means that they will be nullptr'ed.</p>\n<p>Specified in C++11 \u00a78.5/8:</p>\n<blockquote>\n<p id=\"so_37516576_37516764_0\">To value-initialize an object of type T means:</p>\n<p id=\"so_37516576_37516764_1\">\u2014 if T is a (possibly cv-qualified) class type without a user-provided\n  or deleted default constructor, then the object is zero-initialized \u2026,\n  and if T has a non-trivial default constructor, the object is\n  default-initialized;</p>\n</blockquote>\n<p>Quote stolen from this <a href=\"https://stackoverflow.com/a/18304935/6374665\">post</a>.</p>\n<p>Edit, applied to your code it will look like this:</p>\n<pre><code>else {\n    constexpr std::size_t                           kArraySize{ 23 };\n    constexpr std::array&lt;const char *, kArraySize&gt;  kPositions { \"Day_Clean\", \"Dinner_Cook\", \"Dinner_Cook\", \"Dinner_Clean\", \"Dinner_Clean\", \"HEB_Shop\", \"Costco_Shop\", \"Silver_Fridge\", \"Stove_Micowave\", \"Appliance_Clean\", \"LH_Bathrooms\", \"Laundry_Room\", \"Upstairs_Commons\", \"Bikeroom_Entrance_Stairs\", \"Little_House_Commons\", \"Porch_Grounds\", \"Recycling\", \"Gardening\", \"Condi_Fridge_Personal_Fridge\", \"Freezer\", \"Downstairs_Bathroom_1\", \"Downstairs_Bathroom_2\", \"Upstairs_Bathroom\", \"Big_House_Hallways\"  };\n\n    ofstream randomPrefs;\n    randomPrefs.open(foo);\n\n    std::size_t maxRandomLoop { 25 };\n    for (std::size_t i = 0 ; i &lt; maxRandomLoop ; ++i)\n    {\n        int randomPrefs1 = rand() % kArraySize;\n        if (kPositions[randomPrefs1] != nullptr)\n        { randomPrefs &lt;&lt; kPositions[randomPrefs1] &lt;&lt; \"\\n\"; }\n    }\n    randomPrefs.close();\n}\n</code></pre>\n<p>Re-edited, you forgot the commas in your array.</p>\n", "LastActivityDate": "2016-05-30T03:22:15.927"}, "bq_ids": {"n4140": {"so_37516576_37516764_0": {"section_id": 3287, "quality": 1.0, "length": 4}, "so_37516576_37516764_1": {"section_id": 3287, "quality": 1.0, "length": 16}}, "n3337": {"so_37516576_37516764_0": {"section_id": 3157, "quality": 1.0, "length": 4}, "so_37516576_37516764_1": {"section_id": 3157, "quality": 0.625, "length": 10}}, "n4659": {"so_37516576_37516764_1": {"section_id": 4049, "quality": 1.0, "length": 16}}}});