post_cb({"38269978": {"CommentCount": "3", "ViewCount": "55", "ClosedDate": "2016-07-08T15:23:33.970", "CreationDate": "2016-07-08T15:08:26.740", "LastActivityDate": "2016-07-08T15:08:26.740", "Title": "Why uniform_int_distribution with char template parameter is not allowed?", "PostTypeId": "1", "Id": "38269978", "Score": "6", "Body": "<p><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3690.pdf\">C++ Standard</a> in it's paragraph 26.5.1.1 states the following:</p>\n<blockquote>\n<p id=\"so_38269978_38269978_0\">Throughout this subclause 26.5, the effect of instantiating a template:</p>\n<p id=\"so_38269978_38269978_1\">e) that has a template type parameter named IntType is undefined unless the corresponding template argument is cv-unqualified and is one of <code>short</code>, <code>int</code>, <code>long</code>, <code>long long</code>, <code>unsigned short</code>, <code>unsigned int</code>, <code>unsigned long</code>, or <code>unsigned long long</code>.</p>\n<p id=\"so_38269978_38269978_2\">f) that has a template type parameter named UIntType is undefined unless the corresponding template argument is cv-unqualified and is one of <code>unsigned short</code>, <code>unsigned int</code>, <code>unsigned long</code>, or <code>unsigned long long</code> .</p>\n</blockquote>\n<p>So</p>\n<pre><code>std::uniform_int_distribution&lt;char&gt; r;\n</code></pre>\n<p>may cause UB, as well as the same thing with unsigned char, int8_t and uint8_t.</p>\n<p>GNU compilers allow to instantiate <code>uniform_int_distribution</code> with <code>char</code> and the above code works well. But Microsoft <a href=\"http://connect.microsoft.com/VisualStudio/feedbackdetail/view/856484/std-uniform-int-distribution-does-not-like-char\">rightfully</a> <a href=\"https://connect.microsoft.com/VisualStudio/feedback/details/793763\">claims</a>:</p>\n<blockquote>\n<p id=\"so_38269978_38269978_3\">We're trying to help user code stay out of the realm of undefined behavior by being strict instead of permissive.</p>\n</blockquote>\n<p>Visual studio does not compile the code, failing with errors:</p>\n<pre><code>error C2338: invalid template argument for uniform_int_distribution\nnote: see reference to class template instantiation 'std::uniform_int_distribution&lt;uint8_t&gt;' being compiled\n</code></pre>\n<p>What is the rationale behind these limitations? Will the Committee allow to instantiate  <code>uniform_int_distribution</code> with single-byte types in the future versions of the language?</p>\n", "Tags": "<c++><templates><c++11><standards>", "OwnerUserId": "1690777", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_38269978_38269978_2": {"section_id": 3487, "quality": 1.0, "length": 20}, "so_38269978_38269978_0": {"section_id": 3487, "quality": 0.8333333333333334, "length": 5}, "so_38269978_38269978_1": {"section_id": 3487, "quality": 1.0, "length": 25}}, "n3337": {"so_38269978_38269978_2": {"section_id": 3352, "quality": 1.0, "length": 20}, "so_38269978_38269978_0": {"section_id": 3352, "quality": 0.8333333333333334, "length": 5}, "so_38269978_38269978_1": {"section_id": 3352, "quality": 1.0, "length": 25}}, "n4659": {"so_38269978_38269978_2": {"section_id": 4250, "quality": 1.0, "length": 20}, "so_38269978_38269978_0": {"section_id": 4250, "quality": 0.8333333333333334, "length": 5}, "so_38269978_38269978_1": {"section_id": 4250, "quality": 1.0, "length": 25}}}});