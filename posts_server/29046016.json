post_cb({"bq_ids": {"n4140": {"so_29046016_29046016_0": {"length": 9, "quality": 0.6, "section_id": 1252}}, "n3337": {"so_29046016_29046016_0": {"length": 9, "quality": 0.6, "section_id": 1250}}, "n4659": {"so_29046016_29046016_0": {"length": 9, "quality": 0.6, "section_id": 1357}}}, "29046016": {"ViewCount": "69", "Body": "<p><code>N4296::25.2.4 [alg.foreach]</code> provides requirements for the function <code>std::for_each</code>:</p>\n<pre><code>template&lt;class InputIterator, class Function&gt; Function\nfor_each(InputIterator first, InputIterator last, Function f); \n</code></pre>\n<blockquote>\n<p id=\"so_29046016_29046016_0\">Requires: Function shall meet the requirements of MoveConstructible\n  (Table 20). [ Note: Function need not meet the requirements of\n  CopyConstructible (Table 21). \u2014end note ]</p>\n</blockquote>\n<p>OK, now what MoveConstructible is is the following:</p>\n<pre><code>Expression                    Post-condition\nT u = rv;      u is equivalent to the value of rv before the construction\nT(rv)          T(rv) is equivalent to the value of rv before the construction\n\nrv\u2019s state is unspecified [ Note:rv must still meet the requirements of the\nlibrary component that is using it. The operations listed in those requirements \nmust work as specified whether rv has been moved from or not. \u2014end note ]\n</code></pre>\n<p>There was no any mention about the type Function must have <code>operator ()</code> member function, but in fact it must. Does the Standard mention it explicitly?</p>\n", "Title": "std::for_each function template", "CreationDate": "2015-03-14T06:07:46.147", "LastActivityDate": "2015-03-14T06:07:46.147", "CommentCount": "2", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "Id": "29046016", "Score": "0", "Tags": "<c++><foreach>", "AnswerCount": "0"}});