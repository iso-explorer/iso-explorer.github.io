post_cb({"bq_ids": {"n4140": {"so_34343619_34343710_0": {"length": 30, "quality": 0.967741935483871, "section_id": 6344}}, "n3337": {"so_34343619_34343710_0": {"length": 22, "quality": 0.7096774193548387, "section_id": 6101}}, "n4659": {"so_34343619_34343710_0": {"length": 30, "quality": 0.967741935483871, "section_id": 7853}}}, "34343710": {"Id": "34343710", "PostTypeId": "2", "Body": "<p>C++14 standard draft (n3797):</p>\n<blockquote>\n<h2>17.6.5.7/1</h2>\n<p id=\"so_34343619_34343710_0\">When the requirements for an algorithm state that it is \u201cstable\u201d without further elaboration, it means:<br>\n  \u2014 For the <em>merge</em> algorithms, for equivalent elements in the original two ranges, <strong>the elements from the first range</strong> (preserving their original order) <strong>precede the elements from the second range</strong> (preserving their original order).</br></p>\n</blockquote>\n", "LastActivityDate": "2015-12-17T20:31:30.210", "CommentCount": "1", "CreationDate": "2015-12-17T20:31:30.210", "ParentId": "34343619", "Score": "7", "OwnerUserId": "3410396"}, "34343619": {"ViewCount": "120", "Body": "<p><code>std::merge</code> preserves order of equal elements in its input lists.  Does it guarantee that elements from the first list come before equal elements from the second list, or does that guarantee only apply to equal elements within a single input list?</p>\n<p>Example:</p>\n<p>List1 has 1 element, <code>A</code>.\nList2 has 1 element, <code>B</code>.\nComparator considers <code>A</code> and <code>B</code> to be equal.</p>\n<p>If I <code>std::merge(list1.begin(), list1.end(), list2.begin(), list2.end(), out, comparator)</code>, is the relative order of <code>A</code> and <code>B</code> in the output defined?</p>\n<p>My opinion is the standard does not define order in this case.</p>\n", "AcceptedAnswerId": "34343710", "Title": "std::merge and equal element order", "CreationDate": "2015-12-17T20:25:16.007", "Id": "34343619", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2015-12-17T20:31:30.210", "Score": "5", "OwnerUserId": "5178843", "Tags": "<c++><c++11>", "AnswerCount": "1"}});