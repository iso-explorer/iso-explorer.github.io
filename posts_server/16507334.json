post_cb({"bq_ids": {"n4140": {"so_16507334_16507538_1": {"length": 18, "quality": 1.0, "section_id": 3244}}, "n3337": {"so_16507334_16507538_1": {"length": 18, "quality": 1.0, "section_id": 3117}}, "n4659": {"so_16507334_16507538_1": {"length": 18, "quality": 1.0, "section_id": 4002}}}, "16507334": {"ViewCount": "151", "Body": "<p>I was wondering how I can return a 2d array in my function. My code is something like this:</p>\n<pre><code>int[][] function ()\n{\n    int chessBoard[x][x];\n    memset(chessBoard,0,x*x*sizeof(int));\n    return chessBoard;      \n}\n</code></pre>\n<p>I get the error message: \"error: unexpected unqualified-id before '[' token\" on my first line. Any tips on how I can get my function to work properly?</p>\n", "Title": "How do I return a 2d array in my function?", "CreationDate": "2013-05-12T12:27:17.970", "LastActivityDate": "2013-05-12T13:53:00.503", "CommentCount": "3", "LastEditDate": "2013-05-12T12:29:12.150", "PostTypeId": "1", "LastEditorUserId": "218902", "Id": "16507334", "Score": "1", "OwnerUserId": "2374842", "Tags": "<c++><arrays><multidimensional-array>", "AnswerCount": "2"}, "16507496": {"Id": "16507496", "PostTypeId": "2", "Body": "<p>Use vector of vector instead:</p>\n<pre><code>template&lt;typename T, size_t N&gt;\nstd::vector&lt;std::vector&lt;T&gt; &gt; func()\n{\n  std::vector&lt;std::vector&lt;T&gt;&gt; data(N, std::vector&lt;T&gt;(N));\n  return data;\n}\n\nint main ( int argc, char ** argv)\n{\n  std::vector&lt;std::vector&lt;int&gt; &gt; f = func&lt;int, 10&gt;();   \n  return 0;\n}\n</code></pre>\n<p>If you are using C++11, you could try with <a href=\"http://en.cppreference.com/w/cpp/container/array\" rel=\"nofollow\">std::array</a>:</p>\n<pre><code>template&lt;typename T, size_t N&gt;\nstd::array&lt;std::array&lt;T, N&gt;, N&gt; func()\n{\n  return  std::array&lt;std::array&lt;T, N&gt;, N&gt;();\n}\n\nint main ( int argc, char ** argv)\n{\n  auto f = func&lt;int, 10&gt;();   \n  return 0;\n}\n</code></pre>\n", "LastActivityDate": "2013-05-12T12:45:03.297", "CommentCount": "0", "CreationDate": "2013-05-12T12:45:03.297", "ParentId": "16507334", "Score": "1", "OwnerUserId": "951757"}, "16507538": {"Id": "16507538", "PostTypeId": "2", "Body": "<p>Unfortunately, arrays cannot be returned from functions. It is clearly stated in the Standard.</p>\n<blockquote>\n<p id=\"so_16507334_16507538_0\"><strong>C++11 Standard \u00a7 8.3.5 Functions</strong><br/></p>\n<p id=\"so_16507334_16507538_1\">Functions shall not have a return type of\n  type array or function, although they may have a return type of type pointer or reference to such things.</p>\n</blockquote>\n<p>But modern C++ practices advise that you use STL containers to facilitate the confusing syntax and memory allocation. In your particular setup, we can replace your C-style arrays with a <code>std::vector</code>:</p>\n<pre><code>std::vector&lt; std::vector&lt;int&gt; &gt; function()\n{\n    return std::vector&lt; std::vector&lt;int&gt; &gt;(x, std::vector&lt;int&gt;(x));\n}\n</code></pre>\n", "LastEditorUserId": "701092", "LastActivityDate": "2013-05-12T13:53:00.503", "Score": "0", "CreationDate": "2013-05-12T12:48:55.473", "ParentId": "16507334", "CommentCount": "0", "OwnerUserId": "701092", "LastEditDate": "2013-05-12T13:53:00.503"}});