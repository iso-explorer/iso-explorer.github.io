post_cb({"4773351": {"ParentId": "4773334", "CommentCount": "2", "Body": "<blockquote>\n<p id=\"so_4773334_4773351_0\">But, why should we have to have a pointer data type? </p>\n</blockquote>\n<p>Because the size of the arguments to the function needs to be known when the function is compiled. I.e. the function needs to know how far up the list of arguments in memory to find <code>id</code> and <code>wage</code>.</p>\n<blockquote>\n<p id=\"so_4773334_4773351_1\">Cannot we use a char[] in the function parameter list?</p>\n</blockquote>\n<p>Yes you can, but it is still passed by pointer. None of the additional attributes the data has as part of being an array (such as <code>sizeof()</code> returning the total size of the array) are preserved inside the called function. The ability to use <code>[]</code> in the function signature is just an indicator for you that the item passed should be an array of some type (rather than a pointer to, say, a structure).</p>\n", "OwnerUserId": "82320", "PostTypeId": "2", "Id": "4773351", "Score": "3", "CreationDate": "2011-01-23T10:31:09.367", "LastActivityDate": "2011-01-23T10:31:09.367"}, "4773334": {"CommentCount": "1", "ViewCount": "328", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2011-01-23T10:26:47.520", "LastActivityDate": "2011-01-23T10:55:44.333", "Title": "C++ - pointer function parameter", "AcceptedAnswerId": "4773450", "LastEditDate": "2017-05-23T12:04:16.363", "Id": "4773334", "Score": "0", "Body": "<p>I asked a question here: <a href=\"https://stackoverflow.com/questions/4768310/c-class-issue\">C++ - class issue</a></p>\n<p>What I'm still not getting is the <em>pointer</em> parameter here:</p>\n<pre><code>void setInfo(char *strName,int id,double wage)\n</code></pre>\n<p>Where it is called by:</p>\n<pre><code>abder.setInfo(\"Abder-Rahman\",123,400);\n</code></pre>\n<p>I know that the name of the array is a pointer. But, why should we have to have a pointer data type? Cannot we use a <code>char[]</code> in the function parameter list? As I think I got an error when I tried that.</p>\n<p>Thanks.</p>\n", "Tags": "<c++><arrays><pointers>", "OwnerUserId": "588855", "AnswerCount": "4"}, "4773450": {"ParentId": "4773334", "CommentCount": "3", "Body": "<p>For reference, from the C++03 standard, <a href=\"http://www.open-std.org/jtc1/sc22/open/n2356/decl.html#dcl.fct\" rel=\"nofollow\">\u00a7 8.3.5</a> 3:</p>\n<blockquote>\n<p id=\"so_4773334_4773450_0\">After determining the type of each parameter, any parameter of type \u201carray of T\u201d or \u201cfunction returning T\u201d is adjusted to be \u201cpointer to T\u201d or \u201cpointer to function returning T,\u201d respectively.</p>\n</blockquote>\n<p>Furthermore, an array declared with <code>[]</code> is an incomplete object type (<a href=\"http://www.open-std.org/jtc1/sc22/open/n2356/decl.html#dcl.array\" rel=\"nofollow\">\u00a7 8.3.4</a> 1), though this shouldn't cause a problem when declaring a function parameter as it will be converted to a pointer.</p>\n", "OwnerUserId": "90527", "PostTypeId": "2", "Id": "4773450", "Score": "2", "CreationDate": "2011-01-23T10:55:44.333", "LastActivityDate": "2011-01-23T10:55:44.333"}, "4773368": {"ParentId": "4773334", "CommentCount": "2", "Body": "<p>char[] is also a pointer. And yes, you could use it. </p>\n", "OwnerUserId": "562598", "PostTypeId": "2", "Id": "4773368", "Score": "1", "CreationDate": "2011-01-23T10:36:48.500", "LastActivityDate": "2011-01-23T10:36:48.500"}, "bq_ids": {"n4140": {"so_4773334_4773450_0": {"section_id": 3241, "quality": 1.0, "length": 16}, "so_4773334_4773351_1": {"section_id": 6290, "quality": 0.6666666666666666, "length": 4}, "so_4773334_4773351_0": {"section_id": 5914, "quality": 0.5714285714285714, "length": 4}}, "n3337": {"so_4773334_4773450_0": {"section_id": 3114, "quality": 1.0, "length": 16}, "so_4773334_4773351_1": {"section_id": 6050, "quality": 0.6666666666666666, "length": 4}, "so_4773334_4773351_0": {"section_id": 5686, "quality": 0.5714285714285714, "length": 4}}, "n4659": {"so_4773334_4773450_0": {"section_id": 3997, "quality": 0.75, "length": 12}, "so_4773334_4773351_0": {"section_id": 7406, "quality": 0.5714285714285714, "length": 4}, "so_4773334_4773351_1": {"section_id": 7797, "quality": 0.6666666666666666, "length": 4}}}, "4773371": {"ParentId": "4773334", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>An array and a pointer are very much related - you can even use a pointer like an array, like</p>\n<pre><code>void foo(char *ptr) {\n    ptr[2] = 'x';\n}\n</code></pre>\n<p>In your case, you get a compilation error (or warning) because string literals (like <code>\"foo\"</code>) are considered const, i.e. they may not be modified, and since a function that doesn't take a const pointer doesn't make a promise not to change it, the compiler refuses to hand it a string literal.</p>\n<p>You'd need to do</p>\n<pre><code>void setInfo(const char *strName,int id,double wage)\n</code></pre>\n<p>In general, you should always use <code>const</code> for pointer and reference arguments unless you're planning to modify the object.</p>\n", "OwnerUserId": "345717", "LastEditorUserId": "345717", "LastEditDate": "2011-01-23T10:46:12.223", "Id": "4773371", "Score": "1", "CreationDate": "2011-01-23T10:37:54.830", "LastActivityDate": "2011-01-23T10:46:12.223"}});