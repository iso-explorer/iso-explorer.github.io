post_cb({"16781482": {"ParentId": "16781458", "CommentCount": "0", "Body": "<p>You put <code>main</code> inside your own namespace <code>standard</code>, which makes it a function belongs to your namespace, not a global function which <code>main</code> should be anymore.</p>\n<p>For C++ standard 3.6.1:</p>\n<blockquote>\n<p id=\"so_16781458_16781482_0\">A program shall <strong>contain a global function called main</strong>, which is the designated start of the program. It is implementation-defined whether a program in a freestanding environment is required to define a main function. [...]</p>\n</blockquote>\n", "OwnerUserId": "1760345", "PostTypeId": "2", "Id": "16781482", "Score": "1", "CreationDate": "2013-05-27T22:47:51.617", "LastActivityDate": "2013-05-27T22:47:51.617"}, "16781458": {"CommentCount": "0", "ViewCount": "154", "CreationDate": "2013-05-27T22:45:45.313", "LastActivityDate": "2013-05-27T22:49:41.873", "Title": "C++ LNK1561 error (when main() is included)", "AcceptedAnswerId": "16781475", "PostTypeId": "1", "Id": "16781458", "Score": "0", "Body": "<p>For some reason, even though I have a main() function defined, I am receiving a LNK1561 error.  </p>\n<p>My search.h file:</p>\n<pre><code>#pragma once\n\n#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nusing namespace std;\n\nnamespace standard{\nclass Search\n{\npublic:\n    bool sequential_find(int num);\n    bool recursive_binary_find(int num);\n    bool iterative_binary_find(int num);\n\n    void init_array();\n    void init_sorted_array();\n    void set_seed(int seed);\n    int getSize();\n\n    bool binSearch(int d, int low, int high);\n\n    // this is just for practice and debugging.\n    friend ostream&amp; operator&lt;&lt; (ostream&amp; out, const Search&amp; s)\n    {\n        // put the code in here.\n    }\n\n    Search(int size,int seed=0);\n    ~Search();\n\nprivate:\n\n    int size;\n    int* array;\n    static int* data;\n};\n}\n</code></pre>\n<p>And my search.cpp file:</p>\n<pre><code>#include \"Search.h\"\n\n    using namespace std;\n\n    namespace standard{\n\n        int main()\n        {\n            return 0;\n        }\n\n    //  Search::Search(int size,int seed=0)\n    //  {\n    //      \n    //  }\n\n        bool Search::sequential_find(int num)\n        {\n            for (int i=0; i&lt;getSize(); i++)\n            {\n                if(data[i] == num)\n                {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n\n        bool Search::recursive_binary_find(int num)\n        {\n            int high = getSize()-1;\n            int low = 0;\n            return binSearch(num, low, high);\n        }\n\n        bool Search::binSearch(int d, int low, int high)\n        {\n            if (low &gt; high)\n                return false;\n            int mid = (high+low)/2;\n            if (d == data[mid])\n                return true;\n            if (d &lt; data[mid])\n                return binSearch(d, low, mid-1);\n            else\n                return binSearch(d, mid+1, high);\n        }\n\n        bool Search::iterative_binary_find(int num)\n        {\n            int high = getSize()-1;\n            int low = 0;\n            while (low &lt;= high)\n            {\n                int mid = (high+low)/2;\n                if (num == data[mid])\n                    return true;\n                else if (num &lt; data[mid])\n                    high = mid-1;\n                else if (num &gt; data[mid])\n                    low = mid+1;\n            }\n            return false;\n        }\n\n        void Search::init_array()\n        {\n\n        }\n        void Search::init_sorted_array()\n        {\n\n        }\n        void Search::set_seed(int seed)\n        {\n\n        }\n        int Search::getSize()\n        {\n            return size;\n        }\n    }\n</code></pre>\n<p>Obviously I haven't done anything substantial in my main function, I am working on just getting it to compile at all.</p>\n", "Tags": "<c++><lnk>", "OwnerUserId": "1797274", "AnswerCount": "2"}, "16781475": {"ParentId": "16781458", "CommentCount": "2", "Body": "<p>You have put your <code>main()</code> function in the <code>standard</code> namespace. That's not the entry point of your program. The entry point of your program should be in the global namespace.</p>\n<p>Per paragraph 3.6.1/1 of the C++11 Standard:</p>\n<blockquote>\n<p id=\"so_16781458_16781475_0\">A program shall contain a <strong>global</strong> function called <code>main</code>, which is the designated start of the program. It\n  is implementation-defined whether a program in a freestanding environment is required to define a main\n  function.</p>\n</blockquote>\n<p>To fix the problem, just move your <code>main()</code> to the global namespace. Also notice, that <code>return 0</code> is not necessary. Flowing off the end of <code>main()</code> is equivalent to returning 0.</p>\n", "OwnerUserId": "1932150", "PostTypeId": "2", "Id": "16781475", "Score": "2", "CreationDate": "2013-05-27T22:47:24.263", "LastActivityDate": "2013-05-27T22:47:24.263"}, "bq_ids": {"n4140": {"so_16781458_16781475_0": {"section_id": 7145, "quality": 0.9333333333333333, "length": 14}, "so_16781458_16781482_0": {"section_id": 7145, "quality": 0.9333333333333333, "length": 14}}, "n3337": {"so_16781458_16781475_0": {"section_id": 6889, "quality": 0.9333333333333333, "length": 14}, "so_16781458_16781482_0": {"section_id": 6889, "quality": 0.9333333333333333, "length": 14}}, "n4659": {"so_16781458_16781482_0": {"section_id": 8646, "quality": 0.8, "length": 12}, "so_16781458_16781475_0": {"section_id": 8646, "quality": 0.8, "length": 12}}}});