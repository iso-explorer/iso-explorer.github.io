post_cb({"11309573": {"ParentId": "11309416", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>An element of vector must be:</p>\n<ul>\n<li>Copyable, i.e., have a constructor compatible with <code>T(const T&amp;)</code>.</li>\n<li>Assignable, i.e., have an <code>operator=</code> compatible with <code>operator=(const T&amp;)</code>.</li>\n<li>Default-constructible, i.e., have a constructor compatible with <code>T()</code>.</li>\n</ul>\n<p>While the error indicates the assignable requirement is violated, the code suggests otherwise. Every class gets a compiler-generated copy constructor and assignment operator unless they are defined manually, so your class actually should be assignable. However default constructor is only generated implicitly if there are no other constructors defined. You have a constructor, therefore also have to define a default constructor.</p>\n<p>As Mike noted, the requirements were reduced to only moveable in C++11, but you would need a compiler that already supports respective C++11 features and would have to have those features enabled. However the paths in the errors indicate Visual Studio 9.0, a.k.a Visual Studio 2008, which predates C++11, so the restriction applies.</p>\n<hr>\n<p>The copyable and assignable are satisfied by default unless you broke them. The specification says,</p>\n<ul>\n<li><p>In 12.8.4:</p>\n<blockquote>\n<p id=\"so_11309416_11309573_0\">If the class definition does not explicitly declare a copy constructor, one is declared implicitly.</p>\n</blockquote></li>\n<li><p>In 12.8.10: </p>\n<blockquote>\n<p id=\"so_11309416_11309573_1\">If the class definition does not explicitly declare a copy assignment operator, one is declared implicitly.</p>\n</blockquote></li>\n</ul>\n<p>In both cases it is only defined if all base classes and all members have accessible and non-ambiguous corresponding copy constructor respectively copy assignment operator.</p>\n</hr>", "OwnerUserId": "201725", "LastEditorUserId": "201725", "LastEditDate": "2015-07-20T15:38:23.087", "Id": "11309573", "Score": "19", "CreationDate": "2012-07-03T11:03:23.270", "LastActivityDate": "2015-07-20T15:38:23.087"}, "11309544": {"ParentId": "11309416", "CommentCount": "2", "Body": "<p>You need to add operator= and copy-constructor to class A</p>\n<pre><code>class A \n{\n    public:\n    A(int a,int b,int c);\n    A(const A&amp; element);\n    A&amp; operator=(const A&amp; element);     //which needs definition\n};\n</code></pre>\n", "OwnerUserId": "1233849", "PostTypeId": "2", "Id": "11309544", "Score": "1", "CreationDate": "2012-07-03T11:02:05.683", "LastActivityDate": "2012-07-03T11:02:05.683"}, "11309416": {"CommentCount": "4", "AcceptedAnswerId": "11309544", "CreationDate": "2012-07-03T10:54:16.390", "LastActivityDate": "2015-07-20T15:38:23.087", "PostTypeId": "1", "ViewCount": "7516", "FavoriteCount": "1", "Title": "std::vector<A> error C2582: 'operator =' function is unavailable in", "Id": "11309416", "Score": "3", "Body": "<p>im using simple vector push_back to object of Type A \nand getting this error ,\nthis is my code :</p>\n<pre><code>class A \n{\n    public:\n    A(int a,int b,int c);\n};\n\n\n#include \"A.h\"\n....\n....\n....\n....\nstd::vector&lt;A&gt;* vec_objects = new std::vector&lt;A&gt;();\n\nwhile(....some condition ...) \n{\n\n    A a(1,2,3)\n    vec_objects-&gt;push_back(a);\n}\n</code></pre>\n<p>getting this error:</p>\n<pre><code>c:\\program files\\microsoft visual studio 9.0\\vc\\include\\xutility(3159) : error C2582: 'operator =' function is unavailable in 'A'\n1&gt;        c:\\program files\\microsoft visual studio 9.0\\vc\\include\\xutility(3187) : see reference to function template instantiation 'void std::_Fill&lt;A*,_Ty&gt;(_FwdIt,_FwdIt,const _Ty &amp;)' being compiled\n1&gt;        with\n1&gt;        [\n1&gt;            _Ty=A,\n1&gt;            _FwdIt=A *\n1&gt;        ]\n1&gt;        c:\\program files\\microsoft visual studio 9.0\\vc\\include\\vector(1231) : see reference to function template instantiation 'void std::fill&lt;A*,_Ty&gt;(_FwdIt,_FwdIt,const _Ty &amp;)' being compiled\n1&gt;        with\n1&gt;        [\n1&gt;            _Ty=A,\n1&gt;            _FwdIt=A *\n1&gt;        ]\n1&gt;        c:\\program files\\microsoft visual studio 9.0\\vc\\include\\vector(1153) : while compiling class template member function 'void std::vector&lt;_Ty&gt;::_Insert_n(std::_Vector_const_iterator&lt;_Ty,_Alloc&gt;,unsigned int,const _Ty &amp;)'\n1&gt;        with\n1&gt;        [\n1&gt;            _Ty=A,\n1&gt;            _Alloc=std::allocator&lt;A&gt;\n1&gt;        ]\n1&gt;       \n</code></pre>\n<p>what i did wrong ?</p>\n", "Tags": "<c++><stdvector>", "OwnerUserId": "63898", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_11309416_11309573_0": {"section_id": 456, "quality": 1.0, "length": 10}, "so_11309416_11309573_1": {"section_id": 467, "quality": 1.0, "length": 11}}, "n3337": {"so_11309416_11309573_0": {"section_id": 447, "quality": 1.0, "length": 10}, "so_11309416_11309573_1": {"section_id": 458, "quality": 1.0, "length": 11}}, "n4659": {"so_11309416_11309573_0": {"section_id": 479, "quality": 1.0, "length": 10}, "so_11309416_11309573_1": {"section_id": 490, "quality": 1.0, "length": 11}}}, "11309609": {"ParentId": "11309416", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>There's nothing wrong with the code you've posted. It sounds like your real class (or a base class) declares a non-public assignment operator. This means that the class is not assignable, and so there are restrictions on how it can be used in standard containers. You will also have problems if it's not copyable - that is, if a non-public copy constructor is declared.</p>\n<p>In C++03, it can't be used at all. You will need to make it copy-constructible and assignable to use it in any standard container.</p>\n<p>In C++11, it can be stored in a <code>vector</code> as long as it's movable. <code>push_back</code> might not work if it's also uncopyable, in which case you can use <code>emplace_back(1,2,3)</code> or <code>push_back(std::move(a))</code>.</p>\n", "OwnerUserId": "204847", "LastEditorUserId": "204847", "LastEditDate": "2012-07-03T11:22:50.337", "Id": "11309609", "Score": "5", "CreationDate": "2012-07-03T11:05:51.570", "LastActivityDate": "2012-07-03T11:22:50.337"}});