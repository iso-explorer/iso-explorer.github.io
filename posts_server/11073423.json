post_cb({"11073815": {"Id": "11073815", "PostTypeId": "2", "Body": "<p>The spec says at 14.8.2.5p9</p>\n<blockquote>\n<p id=\"so_11073423_11073815_0\">If P has a form that contains <code>&lt;T&gt;</code> or <code>&lt;i&gt;</code>, then each argument <code>Pi</code> of the respective template argument list <code>P</code> is compared with the corresponding argument <code>Ai</code> of the corresponding template argument list of <code>A</code>. If the template argument list of <code>P</code> contains a pack expansion that is not the last template argument, the entire template argument list is a non-deduced context.</p>\n</blockquote>\n<p>Your <code>typelist&lt;T&gt;</code> unfortunately matches that pattern.</p>\n", "LastActivityDate": "2012-06-17T18:35:30.030", "CommentCount": "2", "CreationDate": "2012-06-17T18:35:30.030", "ParentId": "11073423", "Score": "5", "OwnerUserId": "34509"}, "bq_ids": {"n4140": {"so_11073423_11073815_0": {"length": 31, "quality": 1.0, "section_id": 340}, "so_11073423_11073669_0": {"length": 37, "quality": 0.8222222222222222, "section_id": 302}}, "n3337": {"so_11073423_11073815_0": {"length": 31, "quality": 1.0, "section_id": 330}, "so_11073423_11073669_0": {"length": 43, "quality": 0.9555555555555556, "section_id": 293}}, "n4659": {"so_11073423_11073815_0": {"length": 31, "quality": 1.0, "section_id": 349}, "so_11073423_11073669_0": {"length": 34, "quality": 0.7555555555555555, "section_id": 309}}}, "11073669": {"Id": "11073669", "PostTypeId": "2", "Body": "<p>AFAICT, the rules for matching partial specializations are the same as the rules type deduction of function parameters. And \u00a714.8.2.1/1 says the following:</p>\n<blockquote>\n<p id=\"so_11073423_11073669_0\">For a function parameter pack that occurs at the end of the\n  <em>parameter-declaration-list</em>, the type <code>A</code> of each remaining argument of\n  the call is compared with the type <code>P</code> of the <em>declarator-id</em> of the\n  function parameter pack. Each comparison deduces template arguments\n  for subsequent positions in the template parameter packs expanded by\n  the function parameter pack. For a function parameter pack that does\n  not occur at the end of the <em>parameter-declaration-list</em>, the type of\n  the parameter pack is a non-deduced context.</p>\n</blockquote>\n<p>So the packs <code>TL</code> and <code>IL</code> cannot be deduced in this case, and the partial specialization is not picked.</p>\n", "LastActivityDate": "2012-06-17T18:15:55.567", "CommentCount": "0", "CreationDate": "2012-06-17T18:15:55.567", "ParentId": "11073423", "Score": "2", "OwnerUserId": "46642"}, "11073423": {"ViewCount": "385", "Body": "<p>If this is possible, one can index into a variadic template parameter pack without recursion. However, GCC is <a href=\"http://ideone.com/pZh4f\" rel=\"noreferrer\">refusing to pick up my partial specialization</a> here:</p>\n<pre><code>template &lt;int I, typename List&gt;\nstruct element_impl;\n\ntemplate &lt;typename... TL, int... IL, typename T, int I, typename... TR, int... IR&gt;\nstruct element_impl&lt;I, typelist&lt;pair&lt;TL,IL&gt;..., pair&lt;T,I&gt;, pair&lt;TR,IR&gt;...&gt;&gt; {\n    typedef T type;\n};\n</code></pre>\n<blockquote>\n<p id=\"so_11073423_11073423_0\">prog.cpp: In instantiation of '<code>element&lt;0, typelist&lt;int, double, char,\n  float, long int&gt; &gt;</code>':<br>\n  prog.cpp:52:34:   instantiated from here<br>\n  prog.cpp:47:79: error: invalid use of incomplete type '<code>struct element_impl&lt;0, typelist&lt;pair&lt;int, 0&gt;, pair&lt;double, 1&gt;, pair&lt;char, 2&gt;, pair&lt;float, 3&gt;, pair&lt;long int, 4&gt; &gt;</code>'</br></br></p>\n</blockquote>\n<p>Is GCC buggy, or am I ignoring some limitation of variadic templates?</p>\n", "AcceptedAnswerId": "11073815", "Title": "Can I partially specialize a template with a pattern like foo<T..., int, U...>?", "CreationDate": "2012-06-17T17:37:38.720", "Id": "11073423", "CommentCount": "5", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2012-06-17T17:41:59.007", "LastEditorUserId": "809387", "LastActivityDate": "2012-06-17T18:35:30.030", "Score": "6", "OwnerUserId": "46642", "Tags": "<c++><templates><c++11><variadic-templates>", "AnswerCount": "2"}});