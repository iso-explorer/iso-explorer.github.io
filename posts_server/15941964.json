post_cb({"15942896": {"ParentId": "15941964", "CommentCount": "5", "Body": "<pre><code>#include &lt;iostream&gt;\n#include &lt;typeinfo&gt;\n\ntypedef const int cint;\n\ntemplate &lt;int a&gt; struct x\n{\n  static cint b = 0;\n};\n\ntemplate &lt;&gt; struct x&lt;42&gt;\n{\n  typedef cint b;\n};\n\ncint w = 17;\n\nint main ()\n{\n  cint (w)(42), (z)(x&lt;w&gt;::b);\n\n  std::cout &lt;&lt; typeid(z).name() &lt;&lt; std::endl;\n}\n</code></pre>\n<p>The first declaration in <code>main()</code> needs to be disambiguated, so a trial parse is performed. During this parse, the local <code>w</code> is unknown, since the parse is purely syntactic (things are only parsed, no semantic actions are performed). Consequently, <code>w</code> is a global constant, its value is 17, <code>x&lt;w&gt;::b</code> is a value, and <code>z</code> is a variable. </p>\n<p>During the real parse, semantic actions take place. Thus the name <code>w</code> is bound to the freshly declared local constant, its value is 42, <code>x&lt;w&gt;::b</code> becomes a type, and <code>z</code> is a function declaration.</p>\n", "OwnerUserId": "775806", "PostTypeId": "2", "Id": "15942896", "Score": "27", "CreationDate": "2013-04-11T07:22:22.783", "LastActivityDate": "2013-04-11T07:22:22.783"}, "bq_ids": {"n4140": {"so_15941964_15941964_0": {"section_id": 3923, "quality": 1.0, "length": 14}}, "n3337": {"so_15941964_15941964_0": {"section_id": 3783, "quality": 1.0, "length": 14}}, "n4659": {"so_15941964_15941964_0": {"section_id": 4809, "quality": 1.0, "length": 14}}}, "15941964": {"CommentCount": "2", "AcceptedAnswerId": "15942896", "CreationDate": "2013-04-11T06:20:31.733", "LastActivityDate": "2013-04-11T07:22:22.783", "PostTypeId": "1", "ViewCount": "536", "FavoriteCount": "6", "Title": "Example of C++11 template parameter misbind?", "Id": "15941964", "Score": "24", "Body": "<p>In 6.8.3 of the C++11 standard it says:</p>\n<blockquote>\n<p id=\"so_15941964_15941964_0\">If,\n  during parsing, a name in a template parameter is bound differently than it would be bound during a trial\n  parse, the program is ill-formed.</p>\n</blockquote>\n<p>What is an example of a program that is ill-formed as a result of this requirement?</p>\n", "Tags": "<c++><templates><c++11>", "OwnerUserId": "1131467", "AnswerCount": "1"}});