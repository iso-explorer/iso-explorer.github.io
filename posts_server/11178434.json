post_cb({"bq_ids": {"n4140": {"so_11178434_11178565_0": {"length": 15, "quality": 0.8823529411764706, "section_id": 5908}, "so_11178434_47771123_0": {"length": 14, "quality": 0.875, "section_id": 7033}}, "n3337": {"so_11178434_11178565_0": {"length": 15, "quality": 0.8823529411764706, "section_id": 5680}, "so_11178434_47771123_0": {"length": 14, "quality": 0.875, "section_id": 6779}}, "n4659": {"so_11178434_11178565_0": {"length": 15, "quality": 0.8823529411764706, "section_id": 7390}, "so_11178434_47771123_0": {"length": 14, "quality": 0.875, "section_id": 8530}}}, "11178538": {"Id": "11178538", "PostTypeId": "2", "Body": "<p><strong>First part of the question:</strong></p>\n<p>This line: <code>static const int TOTAL=100;</code> is a declaration followed by an initialisation.</p>\n<p><code>TOTAL</code> is an identifier. </p>\n<p><strong>Second part of the question</strong></p>\n<p><code>const int CodeTest::TOTAL</code> is required to initialize the variable.</p>\n", "LastActivityDate": "2012-06-24T15:07:17.830", "CommentCount": "2", "CreationDate": "2012-06-24T15:07:17.830", "ParentId": "11178434", "Score": "1", "OwnerUserId": "821110"}, "11178523": {"Id": "11178523", "PostTypeId": "2", "Body": "<p>The declaration in an implementation file <em>outside of the header</em> is required because otherwise every translation unit that includes this header would define its own object (that is, its own storage for the variable).</p>\n<p>This would violate the <a href=\"http://en.wikipedia.org/wiki/One_Definition_Rule\" rel=\"noreferrer\">One Definition Rule</a>. A consequence would be e.g. that if the variable was changed in one translation unit, this change would be invisible to other translation units. Now, this isn\u2019t that relevant since the variable is constant. However, taking its address would also yield different pointers in different translation units.</p>\n", "LastActivityDate": "2012-06-24T15:05:13.747", "CommentCount": "15", "CreationDate": "2012-06-24T15:05:13.747", "ParentId": "11178434", "Score": "10", "OwnerUserId": "1968"}, "11178434": {"ViewCount": "6237", "Body": "<p>I am new to C++.<br>\nI have a class like this:</br></p>\n<pre><code>class CodeTest\n{\nprivate:\n    static const int TOTAL=100;\n};\n</code></pre>\n<p>Is <code>TOTAL</code> a <em>declaration</em> or a <em>definition</em>?</p>\n<p>When I was reading Scott Meyer's book, it was mentioned that in the implementation file we need to define something like:</p>\n<pre><code>const int CodeTest::TOTAL;\n</code></pre>\n<p>Why is this required?</p>\n", "AcceptedAnswerId": "11178523", "Title": "static variable in the class declaration or definition?", "CreationDate": "2012-06-24T14:52:05.067", "Id": "11178434", "CommentCount": "7", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2012-06-24T14:58:16.537", "LastEditorUserId": "134841", "LastActivityDate": "2012-06-24T15:20:30.963", "Score": "11", "OwnerUserId": "916439", "Tags": "<c++><static-members>", "AnswerCount": "3"}, "11178565": {"Id": "11178565", "PostTypeId": "2", "Body": "<p>Since this stirred up some controversy, I looked in the standard, and @Nawaz is right, I was wrong.</p>\n<p><strong>9.4.2/2</strong></p>\n<blockquote>\n<p id=\"so_11178434_11178565_0\">If a <code>static</code> data member is of const integral type [...]. The member\n  shall still be defined in a namespace scope if it is used in the\n  program and the namespace scope definition shall not contain an\n  initializer.</p>\n</blockquote>\n<p>So what you have there is a declaration, and the variable is initialized to a value. Outside the class you <strong>must</strong> define the variable, but not assign a value to it.</p>\n<p>The part with <code>const</code> integral type only applies to this particular case - i.e. you <em>can</em> initialize said type inside the class, but all <code>static</code> data members <strong>must</strong> be defined outside.</p>\n<h3>To answer the question:</h3>\n<p>Regardless of whether the definition is or isn't required outside the class (depending on whether you <em>use</em> the member or not), whatever is inside the class (initialized or not) <strong>is just a declaration</strong>.</p>\n", "LastEditorUserId": "673730", "LastActivityDate": "2012-06-24T15:18:38.163", "Score": "4", "CreationDate": "2012-06-24T15:11:00.400", "ParentId": "11178434", "CommentCount": "5", "OwnerUserId": "673730", "LastEditDate": "2012-06-24T15:18:38.163"}});