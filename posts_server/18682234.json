post_cb({"bq_ids": {"n4140": {"so_18682234_18682255_2": {"length": 60, "quality": 0.9523809523809523, "section_id": 491}, "so_18682234_18682255_5": {"length": 17, "quality": 1.0, "section_id": 528}}, "n3337": {"so_18682234_18682255_2": {"length": 60, "quality": 0.9523809523809523, "section_id": 482}, "so_18682234_18682255_5": {"length": 17, "quality": 1.0, "section_id": 519}}, "n4659": {"so_18682234_18682255_2": {"length": 60, "quality": 0.9523809523809523, "section_id": 506}, "so_18682234_18682255_5": {"length": 17, "quality": 1.0, "section_id": 549}}}, "18682255": {"Id": "18682255", "PostTypeId": "2", "Body": "<p>The backslash is the line continuation symbol used in preprocessor directives. It tells the preprocessor to merge the following line with the current one. In other words it escapes the hard newline at the end of the line.</p>\n<p>In the specific example, it tells the preprocessor that </p>\n<pre><code>#define  is_module_error(_module_,_error_)    \\\n   ((_module_##_errors&lt;_error_)&amp;&amp;(_error_&lt;_module_##_errors_end))\n</code></pre>\n<p>should be interpreted as:</p>\n<pre><code>#define  is_module_error(_module_,_error_)  ((_module_##_errors&lt;_error_)&amp;&amp;(_error_&lt;_module_##_errors_end))\n</code></pre>\n<p>The relevant quote from the C99 draft standard (N1256) is the following:</p>\n<blockquote>\n<h3>6.10 Preprocessing directives</h3>\n<p id=\"so_18682234_18682255_0\">[...]</p>\n<p id=\"so_18682234_18682255_1\"><strong>Description</strong></p>\n<p id=\"so_18682234_18682255_2\">A preprocessing directive consists of a sequence of preprocessing tokens that satisfies the\n  following constraints: The first token in the sequence is a <code>#</code> preprocessing token that (at\n  the start of translation phase 4) is either the first character in the source file (optionally\n  after white space containing no new-line characters) or that follows white space\n  containing at least one new-line character. <strong><em>The last token in the sequence is the first new-line character that follows the first token in the sequence.</em></strong> A new-line character ends\n  the preprocessing directive even if it occurs within what would otherwise be an invocation of a function-like macro.</p>\n</blockquote>\n<p>Emphasis on the relevant sentence is mine.</p>\n<p>If you are also unsure of what the <code>##</code> symbol means, it is the <strong>token-pasting operator</strong>. From the already cited C99 document (emphasis mine):</p>\n<blockquote>\n<h3>6.10.3.3 The ## operator</h3>\n<p id=\"so_18682234_18682255_3\">[...]</p>\n<p id=\"so_18682234_18682255_4\"><strong>Semantics</strong></p>\n<p id=\"so_18682234_18682255_5\"><em><strong>If, in the replacement list of a function-like macro, a parameter is immediately preceded\n  or followed by a <code>##</code> preprocessing token, the parameter is replaced by the corresponding\n  argument\u2019s preprocessing token sequence</strong></em></p></blockquote>; however, if an argument consists of no preprocessing tokens, the parameter is replaced by a placemarker preprocessing token instead.\n\n<p>In the case at hand this means that, for example, wherever the preprocessor finds the following macro \"call\":</p>\n<pre><code>is_module_error(dangerous_module,blow_up_error)\n</code></pre>\n<p>it will replace it with this code fragment:</p>\n<pre><code>((dangerous_module_errors&lt;blow_up_error)&amp;&amp;(blow_up_error&lt;dangerous_module_errors_end))\n</code></pre>\n", "LastEditorUserId": "2633423", "LastActivityDate": "2013-09-08T09:56:42.427", "Score": "6", "CreationDate": "2013-09-08T09:30:40.317", "ParentId": "18682234", "CommentCount": "5", "OwnerUserId": "2633423", "LastEditDate": "2013-09-08T09:56:42.427"}, "18682234": {"ViewCount": "104", "Body": "<pre><code>#define  is_module_error(_module_,_error_)    \\\n   ((_module_##_errors&lt;_error_)&amp;&amp;(_error_&lt;_module_##_errors_end))\n\n#define  is_general_error(_error_)     is_module_error(general,_error_)\n#define  is_network_error(_error_)     is_module_error(network,_error_)\n</code></pre>\n<p>Can someone please explain to me what does the first define means?</p>\n<p>How is is evaluated?</p>\n<p>I don't understand what's the <code>\\</code> sign mean here?</p>\n", "AcceptedAnswerId": "18682255", "Title": "Unclear #define syntax in cpp using `\\` sign", "CreationDate": "2013-09-08T09:27:54.150", "Id": "18682234", "CommentCount": "2", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2015-11-30T16:53:29.800", "LastEditorUserId": "4370109", "LastActivityDate": "2015-11-30T16:53:29.800", "Score": "1", "OwnerUserId": "311130", "Tags": "<c++><c><c-preprocessor>", "AnswerCount": "1"}});