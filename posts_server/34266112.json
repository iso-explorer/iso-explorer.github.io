post_cb({"34266141": {"ParentId": "34266112", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>You must open the stream with the <em>at the end</em>, <em>in</em> and <em>out</em> bits set:</p>\n<pre><code>std::fstream out(\"file.bin\", ios::binary | ios_base::ate);\n</code></pre>\n<p>This will prevent your file to be <em>reset</em> at opening; then, using <code>seekp</code> and <a href=\"http://en.cppreference.com/w/cpp/io/basic_ostream\" rel=\"nofollow\"><em>unformatted output</em></a> functions you will be able to edit it in the middle.</p>\n<hr>\n<p>This example outputs <code>stackovstrlow</code>, showing how to chain all steps together:</p>\n<pre><code>#include &lt;fstream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    // create the bin file\n    {\n        std::string str(\"stackoverflow\\n\");\n        std::ofstream file(\"file.bin\", std::ios_base::binary);\n        file.write(str.c_str(), str.length() + 1);\n    }\n    // edit the bin file \"in the middle\"\n    {\n        std::fstream file(\"file.bin\", std::ios_base::in | std::ios_base::out | std::ios_base::ate);\n        file.seekp(7);\n        file.write(\"str\", 3);\n    }\n    // read and see what we've done\n    std::ifstream file(\"file.bin\", std::ios_base::binary);\n    std::vector&lt;char&gt; v(14);\n    file.read(v.data(), 14);\n    std::string str(v.cbegin(), v.cend());\n    std::cout &lt;&lt; str;\n}\n</code></pre>\n</hr>", "OwnerUserId": "2508150", "LastEditorUserId": "2508150", "LastEditDate": "2015-12-14T15:13:15.757", "Id": "34266141", "Score": "4", "CreationDate": "2015-12-14T11:40:08.040", "LastActivityDate": "2015-12-14T15:13:15.757"}, "34266569": {"ParentId": "34266112", "CommentCount": "0", "Body": "<p>Seeking on file streams is supposed to work although not always. Notably, seeking does fail if the encoding used by the <code>imbue()</code>ed <code>std::locale()</code> is variable width. Quoting from 27.9.1.5 [filebuf.virtuals] paragraph 13:</p>\n<blockquote>\n<p id=\"so_34266112_34266569_0\"><em>Effects</em>: Let <code>width</code> denote <code>a_codecvt.encoding()</code>. If <code>is_open() == false</code>, or <code>off != 0 &amp;&amp; width &lt;= 0</code>, then the positioning operation fails. ...</p>\n</blockquote>\n<p>Assuming the file was opened OK, it would imply a <code>std::locale</code> with a non-fixed width encoding was used. The approach to avoid this issue is to use the C-locale before opening the file. For example:</p>\n<pre><code>std::fstream stream;\nstream.imbue(std::locale::classic());\nstream.open(\"file.bin\", std::ios_base::binary | std::ios_base::in | std::ios_base::out);\n</code></pre>\n", "OwnerUserId": "1120273", "PostTypeId": "2", "Id": "34266569", "Score": "2", "CreationDate": "2015-12-14T12:01:31.787", "LastActivityDate": "2015-12-14T12:01:31.787"}, "bq_ids": {"n4140": {"so_34266112_34266569_0": {"section_id": 2445, "quality": 0.9230769230769231, "length": 12}}, "n3337": {"so_34266112_34266569_0": {"section_id": 2430, "quality": 0.9230769230769231, "length": 12}}, "n4659": {"so_34266112_34266569_0": {"section_id": 2721, "quality": 0.9230769230769231, "length": 12}}}, "34266112": {"CommentCount": "1", "ViewCount": "461", "CreationDate": "2015-12-14T11:38:35.153", "LastActivityDate": "2015-12-14T15:13:15.757", "Title": "fstream seekp() not working when the file is opened in ios::in and out mode", "AcceptedAnswerId": "34266141", "PostTypeId": "1", "Id": "34266112", "Score": "1", "Body": "<p>I want to replace some certain portion (in the middle) in a binary file. If I use <code>ostream out(\"file.bin\",ios::binary)</code> ,it will delete the old file and creat a new one. But if I use <code>fstream out(\"file.bin\",ios::binary|ios::in|ios::out)</code> ,<code>seekp()</code> will not go to the right place and <code>tellp()</code> always return -1. So is there any way to replace some certain portion in a file? </p>\n<p>Thank you in advance.</p>\n", "Tags": "<c++>", "OwnerUserId": "5671606", "AnswerCount": "2"}});