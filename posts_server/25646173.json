post_cb({"25646173": {"CommentCount": "3", "ViewCount": "209", "PostTypeId": "1", "LastEditorUserId": "3235496", "CreationDate": "2014-09-03T13:51:49.020", "LastActivityDate": "2014-09-04T07:08:27.133", "Title": "gcc fails with template recursion, while clang does not", "AcceptedAnswerId": "25646326", "LastEditDate": "2014-09-04T07:08:27.133", "Id": "25646173", "Score": "3", "Body": "<p>Comparing clang 3.4.2 and gcc 4.9, which is correct for the following code?</p>\n<pre><code>#include &lt;iostream&gt;\n\ntemplate&lt;typename T&gt;\nstruct SelfRec {\n    static const int value = SelfRec&lt;T&gt;::value;\n};\n\nint main() {\n    std::cout &lt;&lt; SelfRec&lt;int&gt;::value &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>\n<p>clang prints 0, gcc gives typical reached template max depth error.</p>\n", "Tags": "<c++><templates><recursion><clang><gcc4.9>", "OwnerUserId": "4004359", "AnswerCount": "2"}, "25646326": {"ParentId": "25646173", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>What could be the meaning of such code?  You say Clang prints 0, which is not shocking given that it compiled, but what does the zero mean?  Where did it come from?</p>\n<p>Note that the <code>static const int value</code> is not a global static variable but exists for each <code>T</code>.  And there are infinitely many <code>T</code>s, so value should indeed recurse forever.  I don't blame GCC for failing to compile this, in fact it's probably for the best.</p>\n", "OwnerUserId": "4323", "LastEditorUserId": "4323", "LastEditDate": "2014-09-04T00:16:46.620", "Id": "25646326", "Score": "3", "CreationDate": "2014-09-03T13:59:08.127", "LastActivityDate": "2014-09-04T00:16:46.620"}, "bq_ids": {"n4140": {"so_25646173_25646388_0": {"section_id": 249, "quality": 0.8636363636363636, "length": 19}}, "n3337": {"so_25646173_25646388_0": {"section_id": 240, "quality": 0.8636363636363636, "length": 19}}, "n4659": {"so_25646173_25646388_0": {"section_id": 256, "quality": 0.8181818181818182, "length": 18}}}, "25646388": {"ParentId": "25646173", "CommentCount": "0", "Body": "<p>According to \u00a7 14.7.2/15 this is undefined behavior:</p>\n<blockquote>\n<p id=\"so_25646173_25646388_0\">15\n  There is an implementation-defined quantity that specifies the\n  limit on the total depth of recursive instan- tiations, which could\n  involve more than one template. The result of an infinite recursion in\n  instantiation is undefined.</p>\n</blockquote>\n<p>So I agree with user657267 that either compiler can be \"correct\". I got the answer from <a href=\"https://news.ycombinator.com/item?id=7435448\" rel=\"nofollow\">hacker news</a> although I use standard n3337.</p>\n", "OwnerUserId": "4004359", "PostTypeId": "2", "Id": "25646388", "Score": "2", "CreationDate": "2014-09-03T14:02:20.837", "LastActivityDate": "2014-09-03T14:02:20.837"}});