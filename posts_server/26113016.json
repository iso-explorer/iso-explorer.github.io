post_cb({"26113270": {"ParentId": "26113016", "CommentCount": "4", "CreationDate": "2014-09-30T05:19:08.740", "OwnerUserId": "481267", "PostTypeId": "2", "Id": "26113270", "Score": "4", "Body": "<p>You can initialize <code>int&amp;</code> with <code>int</code> because the standard says:</p>\n<blockquote>\n<p id=\"so_26113016_26113270_0\">A variable declared to be a <code>T&amp;</code> or <code>T&amp;&amp;</code>, that is, \u201creference to type <code>T</code>\u201d (8.3.2), shall be initialized by an object,\n  or function, of type <code>T</code> or by an object that can be converted into a <code>T</code>.</p>\n</blockquote>\n<p>(N3936, 8.5.3/1)</p>\n<p>There is no \"standard conversion\" from <code>T</code> to <code>T&amp;</code>, and</p>\n<blockquote>\n<p id=\"so_26113016_26113270_1\">When a parameter of reference type binds directly (8.5.3) to an argument expression, the implicit conversion\n  sequence is the <strong>identity conversion</strong>, unless the argument expression has a type that is a derived class of the\n  parameter type, in which case the implicit conversion sequence is a derived-to-base Conversion (13.3.3.1).</p>\n</blockquote>\n<p>(N3936, 13.3.3.1.4/1; emphasis mine)</p>\n", "LastActivityDate": "2014-09-30T05:19:08.740"}, "26113016": {"CommentCount": "3", "ViewCount": "67", "PostTypeId": "1", "LastEditorUserId": "3747990", "CreationDate": "2014-09-30T04:51:27.430", "LastActivityDate": "2014-09-30T06:32:05.073", "LastEditDate": "2014-09-30T06:32:05.073", "AcceptedAnswerId": "26113270", "OwnerDisplayName": "user2953119", "Title": "Formal differences T, T& and T&&", "Id": "26113016", "Score": "2", "Body": "<p>I'm looking for a normative reference to the Standard.</p>\n<p>We can declare a variable of reference type as follows:</p>\n<pre><code>int a = 5;\nint &amp;b = a;\n</code></pre>\n<p>Formally, the type of <code>a</code> is <code>int</code>, but the type of <code>b</code> is <code>int&amp;</code>. So why can we initialize <code>int&amp;</code> with <code>int</code>? I was looking for a standard conversion for these types, but it seems there isn't. </p>\n", "Tags": "<c++><reference>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_26113016_26113270_1": {"section_id": 625, "quality": 0.9285714285714286, "length": 26}, "so_26113016_26113270_0": {"section_id": 3317, "quality": 0.9230769230769231, "length": 12}}, "n3337": {"so_26113016_26113270_1": {"section_id": 615, "quality": 0.9285714285714286, "length": 26}, "so_26113016_26113270_0": {"section_id": 3187, "quality": 0.9230769230769231, "length": 12}}, "n4659": {"so_26113016_26113270_1": {"section_id": 651, "quality": 0.9285714285714286, "length": 26}, "so_26113016_26113270_0": {"section_id": 502, "quality": 0.5384615384615384, "length": 7}}}});