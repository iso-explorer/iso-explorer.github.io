post_cb({"bq_ids": {"n4140": {"so_23802294_23810181_5": {"length": 5, "quality": 1.0, "section_id": 6732}, "so_23802294_23810181_1": {"length": 7, "quality": 0.875, "section_id": 5762}, "so_23802294_23810181_4": {"length": 5, "quality": 0.8333333333333334, "section_id": 6774}, "so_23802294_23810181_2": {"length": 5, "quality": 0.8333333333333334, "section_id": 6755}, "so_23802294_23810181_3": {"length": 4, "quality": 1.0, "section_id": 6773}, "so_23802294_23810181_0": {"length": 14, "quality": 0.9333333333333333, "section_id": 5762}}, "n3337": {"so_23802294_23810181_1": {"length": 7, "quality": 0.875, "section_id": 5535}, "so_23802294_23810181_5": {"length": 5, "quality": 1.0, "section_id": 6487}, "so_23802294_23810181_4": {"length": 5, "quality": 0.8333333333333334, "section_id": 6529}, "so_23802294_23810181_2": {"length": 5, "quality": 0.8333333333333334, "section_id": 6510}, "so_23802294_23810181_3": {"length": 4, "quality": 1.0, "section_id": 6528}, "so_23802294_23810181_0": {"length": 14, "quality": 0.9333333333333333, "section_id": 5535}}, "n4659": {"so_23802294_23810181_1": {"length": 7, "quality": 0.875, "section_id": 7218}, "so_23802294_23810181_2": {"length": 5, "quality": 0.8333333333333334, "section_id": 8249}, "so_23802294_23810181_3": {"length": 4, "quality": 1.0, "section_id": 8267}}}, "23810181": {"Id": "23810181", "PostTypeId": "2", "Body": "<p>The C++ standard (n3797) includes the C standard library by reference, see s1.2/2. </p>\n<blockquote>\n<p id=\"so_23802294_23810181_0\">The library described in Clause 7 of ISO/IEC 9899:1999 and Clause 7 of ISO/IEC 9899:1999/Cor.1:2001\n  and Clause 7 of ISO/IEC 9899:1999/Cor.2:2003 is hereinafter called the C standard library.</p>\n<p id=\"so_23802294_23810181_1\">With the qualifications noted in Clauses 18 through 30 and in C.4, the C standard library is a subset of the C++ standard\n  library.</p>\n</blockquote>\n<p>The standard contains no mention of that symbol, and I would not expect it be defined, since it appears to be specific to Standard C. By not defining that symbol, C++ is not bound by the contents of Annex F.</p>\n<p>Instead the C++ standard contains multiple mentions of IEC 559 in a rather more C++-like form. For example, </p>\n<blockquote>\n<p id=\"so_23802294_23810181_2\">Shall be true for all specializations in which <code>is_iec559 != false</code></p>\n</blockquote>\n<p>There is a specific mention in 18.3.2.4/56.</p>\n<blockquote>\n<p id=\"so_23802294_23810181_3\">static constexpr bool is_iec559;</p>\n<p id=\"so_23802294_23810181_4\">True if and only if the type adheres to IEC 559 standard.218</p>\n<p id=\"so_23802294_23810181_5\">Meaningful for all floating point types.</p>\n</blockquote>\n<p>I think it would be fair to say that C++ includes all the same capabilities (or lack of them), but adapted to the C++ world.</p>\n", "LastEditorUserId": "1105562", "LastActivityDate": "2015-08-23T01:34:40.580", "Score": "4", "CreationDate": "2014-05-22T14:47:55.817", "ParentId": "23802294", "CommentCount": "6", "OwnerUserId": "1105562", "LastEditDate": "2015-08-23T01:34:40.580"}, "23802294": {"ViewCount": "513", "Body": "<p>According to C++11 standard [c.math], the <code>&lt;cmath&gt;</code> header is same as Standard C library header <code>&lt;math.h&gt;</code>.<br>\n(Of course, there are several differences, --- namespace, overloads etc. --- but these can be ignored here.)<br>\nAnd according to C99 standard annex F, \"An implementation that defines <code>__STDC_IEC_559__</code> shall conform to the specifications in\" the annex F.</br></br></p>\n<p>Ex. The <code>atan2</code> may cause a domain error if both arguments are zero, but It must not if <code>__STDC_IEC_559__</code> is defined.</p>\n<p>In C99, many behavior is also dependent on whether <code>__STDC_IEC_559__</code> is defined or not.</p>\n<p>However, it seems that <code>__STDC_IEC_559__</code> is not mentioned anywhere in C++11 standard.<br>\nIf so, shall a C++ implementation conform to the specifications in the annex F?</br></p>\n<p>I think that <code>std::numeric_limits&lt;T&gt;::is_iec559()</code> is a substitute, but it seems to mention about only type.</p>\n", "AcceptedAnswerId": "23810181", "Title": "Why does the C++ standard not mention __STDC_IEC_559__?", "CreationDate": "2014-05-22T09:04:25.703", "Id": "23802294", "CommentCount": "1", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2014-05-22T15:05:30.093", "LastEditorUserId": "21475", "LastActivityDate": "2015-08-23T01:34:40.580", "Score": "10", "OwnerUserId": "1873224", "Tags": "<c++><c++11>", "AnswerCount": "1"}});