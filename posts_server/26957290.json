post_cb({"bq_ids": {"n4140": {"so_26957290_26957354_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 6082}}, "n3337": {"so_26957290_26957354_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 5850}}, "n4659": {"so_26957290_26957354_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 7578}}}, "26957354": {"Id": "26957354", "PostTypeId": "2", "Body": "<p>No, this is not allowed. The grammar for <em>new-expression</em>s in [expr.new]/1 specifies</p>\n<blockquote>\n<p id=\"so_26957290_26957354_0\"><em>noptr-new-declarator</em>:<br>  \u00a0\u00a0\u00a0\u00a0  <code>[</code> <em>expression</em> <code>]</code> <em>attribute-specifier-seq</em> <sub>opt</sub><br>   \u00a0\u00a0\u00a0\u00a0 \u00a0  <em>noptr-new-declarator</em> [ <em>constant-expression</em> ] <em>attribute-specifier-seq</em><sub>opt</sub></br></br></p>\n</blockquote>\n<p>Clearly there is no <em>expression</em> between the brackets in your code. And it woudn't make sense either: How could you allocate an array of unknown length?</p>\n<p>If you need an array whose size is to be changed dynamically, use <a href=\"http://en.cppreference.com/w/cpp/container/vector\"><code>std::vector</code></a>.</p>\n", "LastEditorUserId": "3647361", "LastActivityDate": "2014-11-16T13:25:24.057", "Score": "5", "CreationDate": "2014-11-16T13:16:54.933", "ParentId": "26957290", "CommentCount": "2", "OwnerUserId": "3647361", "LastEditDate": "2014-11-16T13:25:24.057"}, "26957433": {"Id": "26957433", "PostTypeId": "2", "Body": "<p>C++ compiler offen defines extension allowing to declare array of size = 0. Usualy it can be useful for declaring last field in a structure so you can choose length of such array during structure allocation.</p>\n<pre><code>struct A\n{\n    float something;\n    char arr[];\n};\n</code></pre>\n<p>So if you like to allocate such A with let say arr to have 7 elements, you do:</p>\n<pre><code>A* p = (A*)malloc( sizeof(A) + sizeof(char)*7) ;\n</code></pre>\n<p>You should note that sizeof(A) is equal to sizeof(float), so for compiler your arr field is 0 sized.</p>\n<p>Now you can use your arr field up to 7 indexes:</p>\n<pre><code>p-&gt;arr[3]='d';\n</code></pre>\n", "LastActivityDate": "2014-11-16T13:24:46.997", "CommentCount": "1", "CreationDate": "2014-11-16T13:24:46.997", "ParentId": "26957290", "Score": "1", "OwnerUserId": "1178823"}, "26957290": {"ViewCount": "198", "Body": "<p>Does the following construction valid according to the C++ standards and what can I do with the arr after this statement?</p>\n<pre><code>char* arr = new char[];\n</code></pre>\n<p>Thanks in advance.</p>\n", "AcceptedAnswerId": "26957354", "Title": "Allocate array without specifying size", "CreationDate": "2014-11-16T13:12:02.187", "Id": "26957290", "CommentCount": "5", "LastEditDate": "2016-03-18T10:34:17.817", "PostTypeId": "1", "LastEditorUserId": "3647361", "LastActivityDate": "2016-03-18T10:34:17.817", "Score": "2", "OwnerUserId": "1608835", "Tags": "<c++><arrays><language-lawyer><new-operator>", "AnswerCount": "2"}});