post_cb({"12898267": {"PostTypeId": "2", "ParentId": "12898227", "Body": "<p>The function pointer is essentially a memory address like any other pointer in C++. So when comparing pointers you are always comparing memory addresses not values which means that it doesn't matter what those pointers point to as long as both pointers are of the same type.</p>\n", "CreationDate": "2012-10-15T14:54:26.430", "Score": "2", "LastEditDate": "2012-10-15T20:18:57.267", "CommentCount": "0", "Id": "12898267", "OwnerUserId": "1348324", "LastEditorUserId": "1348324", "LastActivityDate": "2012-10-15T20:18:57.267"}, "12898227": {"AcceptedAnswerId": "12898289", "OwnerUserId": "965369", "LastActivityDate": "2012-10-15T20:18:57.267", "CreationDate": "2012-10-15T14:52:07.330", "Score": "14", "LastEditDate": "2012-10-15T15:14:51.960", "CommentCount": "6", "Title": "Comparing function pointers", "AnswerCount": "3", "PostTypeId": "1", "Tags": "<c++>", "Body": "<p>How can I compare function pointers in C++? Is it stable?</p>\n<p>For example, would something like this be valid:</p>\n<pre><code>if(pFnc == &amp;myFnc){\n//Do something\n}\n</code></pre>\n", "Id": "12898227", "ViewCount": "4830", "LastEditorUserId": "560648"}, "12898284": {"PostTypeId": "2", "ParentId": "12898227", "Body": "<p>Both <code>pFnc</code> and <code>myFnc</code> have to be defined. The correct comparison would be:</p>\n<pre><code>if(pFnc == myFnc)\n{\n    //Do something\n}\n</code></pre>\n", "CreationDate": "2012-10-15T14:55:31.357", "Score": "0", "CommentCount": "11", "Id": "12898284", "OwnerUserId": "68304", "LastActivityDate": "2012-10-15T14:55:31.357"}, "12898289": {"PostTypeId": "2", "ParentId": "12898227", "Body": "<h2>C++03 5.10/1 [expr.eq]:</h2>\n<blockquote>\n<p id=\"so_12898227_12898289_0\">The == (equal to) and the != (not equal to) operators have the same\n  semantic restrictions, conversions, and result type as the relational\n  operators except for their lower precedence and truth-value result.\n  [Note: a &lt; b\n  == c &lt; d is true whenever a &lt; b and c &lt; d have the same truth-value. ] <strong>Pointers to objects or functions of the same type (after pointer conversions) can be compared for equality</strong>. Two pointers of the same\n  type compare equal if and only if they are both null, both point to\n  the same function, or both represent the same address (3.9.2).</p>\n</blockquote>\n<p>Emphasis mine.</p>\n", "CreationDate": "2012-10-15T14:55:44.630", "Score": "14", "LastEditDate": "2012-10-15T14:58:04.647", "CommentCount": "5", "Id": "12898289", "OwnerUserId": "241536", "LastEditorUserId": "673730", "LastActivityDate": "2012-10-15T14:58:04.647"}, "bq_ids": {"n3337": {"so_12898227_12898289_0": {"quality": 0.9074074074074074, "length": 49, "section_id": 5917}}}});