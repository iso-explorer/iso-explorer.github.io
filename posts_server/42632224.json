post_cb({"bq_ids": {"n4140": {"so_42632224_42632606_2": {"length": 14, "quality": 0.875, "section_id": 5316}, "so_42632224_42632606_1": {"length": 12, "quality": 0.7058823529411765, "section_id": 5794}, "so_42632224_42632606_0": {"length": 50, "quality": 0.8333333333333334, "section_id": 5785}}, "n3337": {"so_42632224_42632606_2": {"length": 14, "quality": 0.875, "section_id": 5113}, "so_42632224_42632606_1": {"length": 12, "quality": 0.7058823529411765, "section_id": 5567}, "so_42632224_42632606_0": {"length": 50, "quality": 0.8333333333333334, "section_id": 5558}}, "n4659": {"so_42632224_42632606_2": {"length": 14, "quality": 0.875, "section_id": 6740}, "so_42632224_42632606_1": {"length": 12, "quality": 0.7058823529411765, "section_id": 7253}, "so_42632224_42632606_0": {"length": 50, "quality": 0.8333333333333334, "section_id": 7242}}}, "42632224": {"ViewCount": "129", "Body": "<p>In C++ primer book, in the primitive built-in types section is says:</p>\n<blockquote>\n<p id=\"so_42632224_42632224_0\">A <code>char</code> is guaranteed to be big enough to hold numeric values corresponding to the characters in the machine's basic character set. That is, a <code>char</code> is the same size as a single machine byte.</p>\n</blockquote>\n<p>Is this basic character refering to the ASCII table?</p>\n", "Title": "machine's basic character set", "CreationDate": "2017-03-06T17:45:05.093", "LastActivityDate": "2017-03-06T18:08:21.533", "CommentCount": "5", "PostTypeId": "1", "Id": "42632224", "Score": "1", "OwnerUserId": "5951795", "Tags": "<c++><character-encoding><char>", "AnswerCount": "1"}, "42632606": {"Id": "42632606", "PostTypeId": "2", "Body": "<p>The standard does not guarantee that the basic character set shall be ASCII. And in fact other character sets have existed and still exist on specific systems such as EBCDIC.</p>\n<p>The only guarantees are</p>\n<blockquote>\n<p id=\"so_42632224_42632606_0\">1.7 The C++ memory model [intro.memory]<br/>\n  1 The fundamental storage unit in the C++ memory model is the byte. A byte is at least large enough to contain\n  any member of the basic execution character set (2.3) and the eight-bit code units of the Unicode UTF-8\n  encoding form and is composed of a contiguous sequence of bits, the number of which is implementationdefined.\n  The least significant bit is called the low-order bit; the most significant bit is called the high-order\n  bit. The memory available to a C++ program consists of one or more sequences of contiguous bytes. Every\n  byte has a unique address.</p>\n<p id=\"so_42632224_42632606_1\">1.8 The C++ object model [intro.object]<br/>...<br/>\n  5 Unless it is a bit-field (9.6), a most derived object shall have a non-zero size and shall occupy one or more\n  bytes of storage.</p>\n<p id=\"so_42632224_42632606_2\">2.3 Character sets [lex.charset]<br/>...the value of each character after 0 in the\n  above list of decimal digits shall be one greater than the value of the previous.</p>\n</blockquote>\n<p>So the C++ standard guarantees that a <code>char</code> has at least 8 bits and that the digit codes have consecutive values. All other character set properties are implementation dependant.</p>\n", "LastActivityDate": "2017-03-06T18:08:21.533", "CommentCount": "0", "CreationDate": "2017-03-06T18:08:21.533", "ParentId": "42632224", "Score": "2", "OwnerUserId": "3545273"}});