post_cb({"1611771": {"CommentCount": "2", "AcceptedAnswerId": "1611795", "PostTypeId": "1", "LastEditorUserId": "2246344", "CreationDate": "2009-10-23T06:54:48.157", "LastActivityDate": "2014-08-11T09:11:42.077", "LastEditDate": "2014-08-11T09:11:42.077", "ViewCount": "1716", "FavoriteCount": "2", "Title": "Deleting object with private destructor", "Id": "1611771", "Score": "9", "Body": "<p>How is that possible that it is allowed to delete object with private destructor in the following code? I've reduced real program to the following sample, but it still compiles and works.</p>\n<pre><code>class SomeClass;\n\nint main(int argc, char *argv[])\n{\n  SomeClass* boo = 0; // in real program it will be valid pointer\n  delete boo; // how it can work?\n\n  return -1;\n}\n\nclass SomeClass\n{\nprivate:\n  ~SomeClass() {}; // ! private destructor !\n};\n</code></pre>\n", "Tags": "<c++><memory-management><private-members>", "OwnerUserId": "194510", "AnswerCount": "3"}, "1611789": {"ParentId": "1611771", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>This code causes undefined behavior (UB). It is UB in C++ to <code>delete</code> an object of incomplete type having a non-trivial destructor. And in your code the type <code>SomeClass</code> is incomplete at the point of <code>delete</code>, and it has a non-trivial destructor. Compilers usually issue a warning about this, since in C++ formally this is not a constraint violation.</p>\n<p>So, strictly speaking, your code doesn't \"work\". It simply <em>compiles</em> and does something <em>undefined</em> when run. </p>\n<p>The compiler is just not required to catch this error. The reason for this is that this could be perfectly fine if your object has a <em>trivial</em> destructor. The compiler has no way of knowing what kind of destructor this type will eventually have, so it can't say for sure whether this is an error or not.</p>\n", "OwnerUserId": "187690", "LastEditorUserId": "187690", "LastEditDate": "2009-10-23T13:37:01.673", "Id": "1611789", "Score": "7", "CreationDate": "2009-10-23T07:00:20.733", "LastActivityDate": "2009-10-23T13:37:01.673"}, "1611795": {"ParentId": "1611771", "PostTypeId": "2", "CommentCount": "11", "Body": "<p>You are trying to delete object of incomplete class type. C++ Standard says that you'll get undefined behavior in this case (5.3.5/5):</p>\n<blockquote>\n<p id=\"so_1611771_1611795_0\">If the object being deleted has incomplete class type at the point of deletion and the complete class has a non-trivial destructor or a deallocation function, the behavior is undefined.</p>\n</blockquote>\n<p>To detect such cases you could use <a href=\"http://www.boost.org/doc/libs/1_40_0/libs/utility/checked_delete.html\" rel=\"noreferrer\"><code>boost::checked_delete</code></a>:</p>\n<pre><code>template&lt;typename T&gt; \ninline void checked_delete( T* p )\n{\n    typedef char type_must_be_complete[ sizeof(T)? 1: -1 ];\n    (void) sizeof(type_must_be_complete);\n    delete p;\n}\n</code></pre>\n", "OwnerUserId": "123111", "LastEditorUserId": "123111", "LastEditDate": "2009-10-23T09:49:19.677", "Id": "1611795", "Score": "15", "CreationDate": "2009-10-23T07:01:15.820", "LastActivityDate": "2009-10-23T09:49:19.677"}, "1611794": {"ParentId": "1611771", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>Because <code>SomeClass</code> type is not completely declared when invoking <code>operator delete</code>.</p>\n<p>Deleting such a pointer is undefined behavior, but in practice most compilers would just free the memory (if the pointer was non-NULL) and not call the destructor.</p>\n<p>For example, g++ will give you a warning about this issue:</p>\n<pre><code>foo.cpp: In function 'int main(int, char**)':\nfoo.cpp:6: warning: possible problem detected in invocation of delete operator:\nfoo.cpp:5: warning: 'boo' has incomplete type\nfoo.cpp:1: warning: forward declaration of 'struct SomeClass'\nfoo.cpp:6: note: neither the destructor nor the class-specific operator delete will be called, even if they are declared when the class is defined.\n</code></pre>\n", "OwnerUserId": "101361", "LastEditorUserId": "101361", "LastEditDate": "2009-10-23T10:08:36.007", "Id": "1611794", "Score": "4", "CreationDate": "2009-10-23T07:01:13.883", "LastActivityDate": "2009-10-23T10:08:36.007"}, "bq_ids": {"n4140": {"so_1611771_1611795_0": {"section_id": 6109, "quality": 1.0, "length": 16}}, "n3337": {"so_1611771_1611795_0": {"section_id": 5875, "quality": 1.0, "length": 16}}, "n4659": {"so_1611771_1611795_0": {"section_id": 7606, "quality": 1.0, "length": 16}}}});