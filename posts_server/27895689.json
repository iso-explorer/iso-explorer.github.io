post_cb({"27898834": {"ParentId": "27895689", "CommentCount": "4", "Body": "<pre><code>// Exactly one class may have the name:\nstruct A; // Declaration of a new class.\nstruct A { }; // Definition, but not a declaration of a new name. Doesn't count.\n\n// Aside from the class, exactly one variable may share the name:\nextern int A; // Declaration of a variable.\nint A; // Definition of a variable.\n</code></pre>\n", "OwnerUserId": "153285", "PostTypeId": "2", "Id": "27898834", "Score": "1", "CreationDate": "2015-01-12T09:32:00.327", "LastActivityDate": "2015-01-12T09:32:00.327"}, "27898519": {"ParentId": "27895689", "CommentCount": "1", "Body": "<p><code>struct A;</code> is a declaration.  However, <code>struct A { };</code> is a <em>definition</em>.</p>\n", "OwnerUserId": "319799", "PostTypeId": "2", "Id": "27898519", "Score": "0", "CreationDate": "2015-01-12T09:11:46.700", "LastActivityDate": "2015-01-12T09:11:46.700"}, "bq_ids": {"n4140": {"so_27895689_27895689_0": {"section_id": 7047, "quality": 0.9655172413793104, "length": 28}}, "n3337": {"so_27895689_27895689_0": {"section_id": 6792, "quality": 0.9655172413793104, "length": 28}}, "n4659": {"so_27895689_27895689_0": {"section_id": 8544, "quality": 0.9655172413793104, "length": 28}}}, "27895689": {"CommentCount": "2", "ViewCount": "120", "OwnerDisplayName": "user2953119", "CreationDate": "2015-01-12T05:13:08.760", "LastActivityDate": "2015-01-12T09:32:00.327", "PostTypeId": "1", "AcceptedAnswerId": "27898834", "Title": "Declarations of a class name and a variable with the same name", "Id": "27895689", "Score": "1", "Body": "<p>The Standard <code>N4296::3.3.1/4 [basic.scope.declarative]</code>:</p>\n<blockquote>\n<p id=\"so_27895689_27895689_0\"><em>exactly one</em> declaration shall declare a class name or enumeration name\n  that is not a typedef name and the other declarations shall all refer\n  to the same variable or enumerator, or all refer to functions and\n  function templates; in this case the class name or enumeration name is\n  hidden (3.3.10).</p>\n</blockquote>\n<p>I understand that the rule is talking about hiding the name of the class if there is a variable/function declaration with the same name in the same declrartive region. But the the <em>exactly one</em> is a bit confusing. The following namespace is perfectly valid:</p>\n<pre><code>namespace A\n{\n    struct A;\n    struct A { };\n    int A;\n}\n</code></pre>\n<p><strong><a href=\"http://coliru.stacked-crooked.com/a/662d588ebd77a21b\" rel=\"nofollow\">DEMO</a></strong></p>\n<p>although we declared the <code>struct A</code> twice (two declarations of a struct and one of a variable). What's wrong? What did I lose in the rule?</p>\n", "Tags": "<c++><declaration>", "AnswerCount": "2"}});