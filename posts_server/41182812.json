post_cb({"41184270": {"ParentId": "41182812", "CommentCount": "0", "Body": "<p>This is well-formed (i.e., MSVC bug) but unlikely to be what you actually want. <a href=\"https://timsong-cpp.github.io/cppwp/namespace.memdef#3\" rel=\"nofollow noreferrer\">[namespace.memdef]/3</a>, footnote omitted:</p>\n<blockquote>\n<p id=\"so_41182812_41184270_0\">If a <code>friend</code> declaration in a non-local class first declares a class,\n  function, class template or function template the friend is a member\n  of the innermost enclosing namespace. The <code>friend</code> declaration does\n  not by itself make the name visible to unqualified lookup\n  ([basic.lookup.unqual]) or qualified lookup ([basic.lookup.qual]).</p>\n</blockquote>\n<p><code>friend class CodeCompletionTypeContextAnalyzer;</code> declares <code>CodeCompletionTypeContextAnalyzer</code> to be a member of the unnamed namespace, but that name is not visible to name lookup.</p>\n<p>Then, <code>class CodeCompletionTypeContextAnalyzer { /* ... */ };</code> declares (and defines) a <em>different</em> class also called <code>CodeCompletionTypeContextAnalyzer</code> as a \nmember of the global namespace; this class is not a friend of <code>ExprParentFinder</code>.</p>\n<p>Because the unnamed namespace's <code>CodeCompletionTypeContextAnalyzer</code> isn't visible to name lookup, the only <code>CodeCompletionTypeContextAnalyzer</code> that can be found is the second one, and there is no ambiguity.</p>\n", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "41184270", "Score": "2", "CreationDate": "2016-12-16T12:18:45.977", "LastActivityDate": "2016-12-16T12:18:45.977"}, "bq_ids": {"n4140": {"so_41182812_41184270_0": {"section_id": 5485, "quality": 0.9032258064516129, "length": 28}}, "n3337": {"so_41182812_41184270_0": {"section_id": 5271, "quality": 0.6451612903225806, "length": 20}}, "n4659": {"so_41182812_41184270_0": {"section_id": 6920, "quality": 0.9032258064516129, "length": 28}}}, "41182812": {"CommentCount": "8", "ViewCount": "131", "CreationDate": "2016-12-16T10:53:55.867", "LastActivityDate": "2016-12-16T12:18:45.977", "Title": "Visual C++ reports an ambiguous symbol error for non-ambiguous class", "AcceptedAnswerId": "41184270", "PostTypeId": "1", "Id": "41182812", "Score": "3", "Body": "<p>Consider the following C++ code,</p>\n<pre><code>namespace {\n  class ExprParentFinder {\n    friend class CodeCompletionTypeContextAnalyzer;\n  };\n}\n\nclass CodeCompletionTypeContextAnalyzer {\npublic:\n  CodeCompletionTypeContextAnalyzer() {}\n};\n\nint main() {\n  CodeCompletionTypeContextAnalyzer TypeAnalyzer;\n  return 0;\n}\n</code></pre>\n<p>This compiles fine with Clang/GCC. However, MSVC chokes, and reports</p>\n<blockquote>\n<p id=\"so_41182812_41182812_0\">1&gt;  ConsoleApplication2.cpp</p>\n<p id=\"so_41182812_41182812_1\">1&gt; consoleapplication2.cpp(29): error C2872: 'CodeCompletionTypeContextAnalyzer': ambiguous symbol</p>\n<p id=\"so_41182812_41182812_2\">1&gt;  consoleapplication2.cpp(23): note: could be 'CodeCompletionTypeContextAnalyzer'</p>\n<p id=\"so_41182812_41182812_3\">1&gt;  consoleapplication2.cpp(19): note: or '`anonymous-namespace'::CodeCompletionTypeContextAnalyzer'</p>\n</blockquote>\n<p>Is <code>CodeCompletionTypeContextAnalyzer TypeAnalyzer</code> really ambiguous here from a C++ standards point of view, or is this an MSVC bug. If so, what's causing this error.</p>\n<p>The work around is to change the code to</p>\n<pre><code>int main() {\n  ::CodeCompletionTypeContextAnalyzer TypeAnalyzer;\n  return 0;\n}\n</code></pre>\n", "Tags": "<c++><visual-c++><clang><language-lawyer>", "OwnerUserId": "1020773", "AnswerCount": "1"}});