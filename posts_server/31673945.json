post_cb({"31680747": {"ParentId": "31673945", "CommentCount": "0", "Body": "<p>Your code is most definitely NOT perfectly valid without any pitfalls. </p>\n<p>A backslash at the end of the line is used to merge two source code lines. A backslash at the end of the line but with a space in between is most likely a failed attempt to merge two source code lines and therefore deserves a pretty hard warning. </p>\n<p>Now in your case, the backslash is just there to confuse people. Which is much worse, so remove it. </p>\n", "OwnerUserId": "3255455", "PostTypeId": "2", "Id": "31680747", "Score": "0", "CreationDate": "2015-07-28T15:25:19.960", "LastActivityDate": "2015-07-28T15:25:19.960"}, "31673945": {"CommentCount": "5", "ViewCount": "785", "CreationDate": "2015-07-28T10:40:03.477", "LastActivityDate": "2015-07-28T19:46:55.897", "Title": "clang: backslash and newline separated by space in single line comment", "AcceptedAnswerId": "31674194", "PostTypeId": "1", "Id": "31673945", "Score": "0", "Body": "<p>Why this (<a href=\"http://rextester.com/XCXKS73869\" rel=\"nofollow\">live</a>):</p>\n<pre><code>int main()\n{\n    // my pretty comment /\\   \n    //\n    // \n\n\n}\n</code></pre>\n<p>gives the warning on clang:</p>\n<pre><code>warning: backslash and newline separated by space [-Wbackslash-newline-escape]\n</code></pre>\n<p>?</p>\n<p>Looks like that code is perfectly valid without any pitfalls.</p>\n", "Tags": "<c++><clang>", "OwnerUserId": "2451677", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_31673945_31674194_0": {"section_id": 5313, "quality": 0.9855072463768116, "length": 68}}, "n3337": {"so_31673945_31674194_0": {"section_id": 5110, "quality": 0.8695652173913043, "length": 60}}, "n4659": {"so_31673945_31674194_0": {"section_id": 6737, "quality": 0.9855072463768116, "length": 68}}}, "31674194": {"ParentId": "31673945", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>From the C++14 draft <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4296.pdf\" rel=\"nofollow\">[4296]</a>:</p>\n<p><strong>2.2 Phases of translation [lex.phases]</strong></p>\n<blockquote id=\"so_31673945_31674194_0\">\n<ol start=\"2\">\n<li>Each instance of a backslash character () immediately followed by a new-line character is deleted, splicing physical source lines to\n  form logical source lines. Only the last backslash on any physical\n  source line shall be eligible for being part of such a splice. Except\n  for splices reverted in a raw string literal, if a splice results in a\n  character sequence that matches the syntax of a\n  universal-character-name, the behavior is undefined. A source file\n  that is not empty and that does not end in a new-line character, or\n  that ends in a new-line character immediately preceded by a backslash\n  character before any such splicing takes place, shall be processed as\n  if an additional new-line character were appended to the file.</li>\n</ol>\n</blockquote>\n<p>Exactly the first sentence of it gives your warning. </p>\n<p>In your example code:</p>\n<pre><code>int main()\n{\n    // my pretty comment /\\\n    int x;\n    int y = x;    \n}\n</code></pre>\n<p>the <code>int x;</code> line will be joined into a comment in the line above and will be removed in next phases of translation. So you got a error:</p>\n<blockquote>\n<p id=\"so_31673945_31674194_1\">error: use of undeclared identifier 'x'</p>\n</blockquote>\n<p>However</p>\n<pre><code>int main()\n{\n    // my pretty comment /\\   \n    //\n}\n</code></pre>\n<p>is valid and will not cause a error. You may note that <code>g++</code> (without <code>-Wall</code>) will not give a warning here. It looks like useless warning but I think compiler may treat it as possible fail of the new line character escaping. So, it is just better to give you warning here.</p>\n<blockquote>\n<p id=\"so_31673945_31674194_2\">Do we need this warning there ?</p>\n</blockquote>\n<p>Actually, no, we don't need it here. But it is just a diagnostic warning and it is better to have such warning to be able to detect possible problems than not to have it at all.</p>\n<p>I think, here is also a reason such as:</p>\n<ol>\n<li><p>People don't usually escape <code>spaces</code>. Why? :)</p></li>\n<li><p>For multi-line comments here are <code>/*</code> and <code>*/</code> sequences.</p></li>\n</ol>\n", "OwnerUserId": "1750757", "LastEditorUserId": "1750757", "LastEditDate": "2015-07-28T19:46:55.897", "Id": "31674194", "Score": "3", "CreationDate": "2015-07-28T10:52:45.407", "LastActivityDate": "2015-07-28T19:46:55.897"}});