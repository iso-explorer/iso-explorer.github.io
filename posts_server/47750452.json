post_cb({"bq_ids": {"n4140": {"so_47750452_47750630_0": {"length": 12, "quality": 1.0, "section_id": 3289}}, "n3337": {"so_47750452_47750630_0": {"length": 12, "quality": 1.0, "section_id": 3159}}, "n4659": {"so_47750452_47750630_0": {"length": 12, "quality": 1.0, "section_id": 4051}}}, "47750534": {"Id": "47750534", "PostTypeId": "2", "Body": "<p>In the <em>one</em> translation unit where this variable is defined:</p>\n<pre><code>Correspondent* Correspondent::correspondent[maxCorrespondents]{};\n</code></pre>\n<p>That's it. This aggregate initializes the array, which in turn default initializes each pointer. And since pointers are fundamental types, that will do zero initialization, setting them all to <code>nullptr</code>.</p>\n", "LastActivityDate": "2017-12-11T10:11:17.930", "Score": "1", "CreationDate": "2017-12-11T10:11:17.930", "ParentId": "47750452", "CommentCount": "0", "OwnerUserId": "817643"}, "47750630": {"Id": "47750630", "PostTypeId": "2", "Body": "<p>Objects with static storage duration are always zero-initialized. So <code>correspondent</code> array will be filled with zeros without writing any additional code. From <strong>[dcl.init].10</strong></p>\n<blockquote>\n<p id=\"so_47750452_47750630_0\">Every object of static storage duration is zero-initialized at program startup before any other initialization takes place.</p>\n</blockquote>\n<p>Also it might be a good idea to use <code>::std::array</code> wrapper and to introduce a type alias to avoid duplication in array declaration and definition:</p>\n<pre><code>class Correspondent\n{\n    private: using Correspondents = ::std::array&lt;Correspondent *, maxCorrespondents&gt;;\n    private: static Correspondents correspondents;\n};\n\nCorrespondent::Correspondents Correspondent::correspondents;\n</code></pre>\n", "LastActivityDate": "2017-12-11T10:16:50.977", "Score": "1", "CreationDate": "2017-12-11T10:16:50.977", "ParentId": "47750452", "CommentCount": "0", "OwnerUserId": "7860670"}, "47750452": {"ViewCount": "66", "Body": "<p>\nI'm trying to initialize a pointer array of same class objects. Here's the class:\n</p>\n<pre><code>class Correspondent{\n    private:\n        static Correspondent *correspondent[maxCorrespondents];\n}\n</code></pre>\n<p>\nI tried in contsructor. but it got initialized every time.</p>\n<pre><code>Correspondent::Correspondent(string n,string c) {\n    name = n;\n    country = c;\n    for(int i=0;i&lt;=maxCorrespondents;i++){\n        correspondent[i] = NULL;\n    }\n}\n</code></pre>\n", "AcceptedAnswerId": "47750534", "Title": "How to initialize static pointer array of objects of same class with nullptr?", "CreationDate": "2017-12-11T10:07:14.670", "Id": "47750452", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2017-12-11T10:16:50.977", "Score": "1", "OwnerUserId": "8848268", "Tags": "<c++><arrays><class><pointers>", "AnswerCount": "2"}});