post_cb({"11216266": {"ParentId": "11216155", "CommentCount": "0", "Body": "<p>No. In a pure portable C++ program, the <code>argv</code> argument, if present, has no <code>const</code> modifiers.</p>\n<p><strong>Edit:</strong> See section 3.6.1.2 of the C++11 draft standard, which (in the version I have before me) states:</p>\n<blockquote>\n<p id=\"so_11216155_11216266_0\">An implementation shall not predefine the main function. This function\n  shall not be overloaded. It shall have a return type of type int, but\n  otherwise its type is implementation-defined. All implementations\n  shall allow both of the following definitions of main:</p>\n<p id=\"so_11216155_11216266_1\"><code>int main(){ /*...*/ }</code></p>\n<p id=\"so_11216155_11216266_2\">and</p>\n<p id=\"so_11216155_11216266_3\"><code>int main(int argc, char* argv[]) { /* ...  */ }</code></p>\n</blockquote>\n", "OwnerUserId": "265530", "PostTypeId": "2", "Id": "11216266", "Score": "11", "CreationDate": "2012-06-26T21:32:49.167", "LastActivityDate": "2012-06-26T21:32:49.167"}, "11216155": {"CommentCount": "0", "AcceptedAnswerId": "11216266", "PostTypeId": "1", "LastEditorUserId": "636019", "CreationDate": "2012-06-26T21:25:15.297", "LastActivityDate": "2012-06-26T22:23:49.360", "LastEditDate": "2012-06-26T21:30:31.610", "ViewCount": "1415", "FavoriteCount": "1", "Title": "Is int main(int, char const* const*) well formed?", "Id": "11216155", "Score": "6", "Body": "<p>According to the C++11 standard, is the following program well-formed and portable C++?</p>\n<pre><code>int main(int argc, char const* const* argv) {}\n</code></pre>\n", "Tags": "<c++><c++11>", "OwnerUserId": "559931", "AnswerCount": "2"}, "11216777": {"ParentId": "11216155", "CommentCount": "5", "Body": "<p>Depends on what you mean by portable. An evil C++ implementation could reject it on the grounds that its signature, <code>int(int,char const*const*)</code>, is different from one of the required allowed signatures, <code>int()</code> and <code>int(int,char**)</code>. (An evil implementation could seemingly reject <code>auto main(int argc,char* argv[]) -&gt; int</code> or, indeed, any definition of <code>main</code> where the body isn't <code>{ /* ... */ }</code>)</p>\n<p>However this isn't typical. I don't know of any implementations where adding a const would cause a problem calling <code>main</code>, and since C++11 added the bit about 'similar' types you won't violate the strict aliasing rule when accessing a <code>char**</code> object through a <code>char const * const *</code> variable.</p>\n<p>So while a conforming implementation could technically reject it, I think it will be portable to any implementation you might care to use.</p>\n", "OwnerUserId": "365496", "PostTypeId": "2", "Id": "11216777", "Score": "3", "CreationDate": "2012-06-26T22:23:49.360", "LastActivityDate": "2012-06-26T22:23:49.360"}, "bq_ids": {"n4140": {"so_11216155_11216266_0": {"section_id": 7146, "quality": 0.75, "length": 18}}, "n3337": {"so_11216155_11216266_0": {"section_id": 6890, "quality": 0.9166666666666666, "length": 22}}, "n4659": {"so_11216155_11216266_0": {"section_id": 8647, "quality": 0.75, "length": 18}}}});