post_cb({"21349017": {"ParentId": "21348952", "CommentCount": "0", "Body": "<p>This is called the \"functional notation\", and it is a form of explicit type conversion (\"casting\"). C++11, 5.2.3:</p>\n<blockquote>\n<p id=\"so_21348952_21349017_0\">5.2.3 Explicit type conversion (functional notation)</p>\n<ol>\n<li>A simple-type-specifier (7.1.6.2) or typename-specifier (14.6) followed by a parenthesized expression-list constructs a value of the specified type given the expression list. If the expression list is a single expression, the type conversion expression is equivalent (in definedness, and if defined in meaning) to the corresponding cast expression (5.4). If the type specified is a class type, the class type shall be complete. If the expression list specifies more than a single value, the type shall be a class with a suitably declared constructor (8.5, 12.1), and the expression T(x1, x2, ...) is equivalent in effect to the declaration T t(x1, x2, ...); for some invented temporary variable t, with the result being the value of t as a prvalue.</li>\n</ol>\n</blockquote>\n", "Id": "21349017", "PostTypeId": "2", "OwnerDisplayName": "user529758", "Score": "5", "CreationDate": "2014-01-25T09:53:14.033", "LastActivityDate": "2014-01-25T09:53:14.033"}, "21349003": {"ParentId": "21348952", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2014-01-25T09:51:23.637", "Score": "4", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:16:16.623", "Id": "21349003", "OwnerUserId": "2589776", "Body": "<p><code>int(x)</code> is a <a href=\"http://www.cplusplus.com/doc/tutorial/typecasting/\" rel=\"nofollow noreferrer\">functional notation for type-casting</a>.</p>\n<blockquote>\n<p id=\"so_21348952_21349003_0\">C++ is a strong-typed language. Many conversions, specially those that imply a different interpretation of the value, require an explicit conversion, known in C++ as type-casting. There exist two main syntaxes for generic type-casting: <strong>functional</strong> and c-like:</p>\n<p id=\"so_21348952_21349003_1\">The functionality of these generic forms of type-casting is enough for most needs with fundamental data types.</p>\n</blockquote>\n<p>Example:</p>\n<pre><code>double x = 10.3;\nint y;\ny = int (x);    // functional notation\ny = (int) x;    // c-like cast notation \n</code></pre>\n<p>Check out <a href=\"https://stackoverflow.com/questions/4775781/what-is-the-difference-between-c-like-casting-functional-casting\">what is the difference between c-like casting &amp; functional casting?</a> for more info.</p>\n", "LastActivityDate": "2014-01-25T09:57:27.260"}, "21348966": {"ParentId": "21348952", "PostTypeId": "2", "CommentCount": "9", "CreationDate": "2014-01-25T09:46:30.817", "Score": "3", "LastEditorUserId": "267482", "LastEditDate": "2014-01-25T10:12:07.270", "Id": "21348966", "OwnerUserId": "267482", "Body": "<p>This is an alternative syntax of the type cast operator to make it look like a copy constructor syntax and thus be syntactically appropriate in the places where copy constructor does. <code>int(x)</code> and <code>(int)x</code> have the same effect.</p>\n", "LastActivityDate": "2014-01-25T10:12:07.270"}, "bq_ids": {"n4140": {"so_21348952_21349017_0": {"section_id": 367, "quality": 0.6666666666666666, "length": 4}}, "n3337": {"so_21348952_21349017_0": {"section_id": 356, "quality": 0.6666666666666666, "length": 4}}, "n4659": {"so_21348952_21349017_0": {"section_id": 379, "quality": 0.6666666666666666, "length": 4}}}, "21348952": {"CommentCount": "1", "ViewCount": "192", "PostTypeId": "1", "LastEditorUserId": "2589776", "CreationDate": "2014-01-25T09:44:32.833", "LastActivityDate": "2014-01-25T10:14:38.780", "Title": "what does int(x) do?", "AcceptedAnswerId": "21349017", "LastEditDate": "2014-01-25T10:02:20.973", "Id": "21348952", "Score": "3", "Body": "<p>I've seen these, what appear to be functions in c++ code but I have no idea what they do or what they are, they appear to do similar things to typecasts, but they don't look like typecasts, so what are they?</p>\n<p>They look like this: <code>int(x)</code> where <code>x</code> is some numeric input, I've been looking around online but I haven't been able to find any information about them (probably because I don't know what they're called).</p>\n<p>Any help?</p>\n", "Tags": "<c++>", "OwnerUserId": "1351298", "AnswerCount": "3"}});