post_cb({"46552626": {"ParentId": "46552534", "CommentCount": "2", "Body": "<p>Because <code>T foo</code> is parsed as the declaration of an object, and instantiation of a template cannot change a declaration of an object to a declaration of a function.</p>\n<p>C++ standard/[temp.spec]:</p>\n<blockquote>\n<p id=\"so_46552534_46552626_0\">If a function declaration acquired its function type through a dependent type (17.7.2.1) without using the\n  syntactic form of a function declarator, the program is ill-formed.</p>\n</blockquote>\n", "OwnerUserId": "5632316", "PostTypeId": "2", "Id": "46552626", "Score": "1", "CreationDate": "2017-10-03T20:10:35.797", "LastActivityDate": "2017-10-03T20:10:35.797"}, "bq_ids": {"n4140": {"so_46552534_46552626_0": {"section_id": 86, "quality": 0.625, "length": 10}}, "n3337": {"so_46552534_46552626_0": {"section_id": 81, "quality": 0.625, "length": 10}}, "n4659": {"so_46552534_46552626_0": {"section_id": 241, "quality": 0.9375, "length": 15}}}, "46552534": {"CommentCount": "6", "AcceptedAnswerId": "46552626", "PostTypeId": "1", "LastEditorUserId": "4324224", "CreationDate": "2017-10-03T20:04:16.933", "LastActivityDate": "2017-10-03T20:12:18.573", "LastEditDate": "2017-10-03T20:12:18.573", "ViewCount": "61", "FavoriteCount": "0", "Title": "Why can't I declare a type of friend function by template parameter but can with alias", "Id": "46552534", "Score": "3", "Body": "<p>Consider the code:</p>\n<pre><code>template &lt;class T&gt;\nclass Bar {\n    int foobar;\n    using X = T();\n    friend X foo;\n};\n\nvoid foo() {\n    Bar&lt;void&gt; bar;\n    bar.foobar = 1;\n    static_cast&lt;void&gt;(bar);\n}\n\nint main() {}\n</code></pre>\n<p>Compiles fine in both <a href=\"https://wandbox.org/permlink/qDdOcircf2OSQnTf\" rel=\"nofollow noreferrer\">gcc</a> and <a href=\"https://wandbox.org/permlink/mVOoSNN8cHxrDYFc\" rel=\"nofollow noreferrer\">clang</a>. But seemingly equivalent code:</p>\n<pre><code>template &lt;class T&gt;\nclass Bar {\n    int foobar;\n    friend T foo;\n};\n\nvoid foo() {\n    Bar&lt;void()&gt; bar;\n    bar.foobar = 1;\n    static_cast&lt;void&gt;(bar);\n}\n\nint main() {}\n</code></pre>\n<p>causes error in both <a href=\"https://wandbox.org/permlink/WI1EAhztaQFFlbIo\" rel=\"nofollow noreferrer\">gcc</a> and <a href=\"https://wandbox.org/permlink/SKpKfTMc5zRKqOSg\" rel=\"nofollow noreferrer\">clang</a>. How come the template parameter doesn't work here equivalently to alias?</p>\n", "Tags": "<c++><templates><friend>", "OwnerUserId": "4324224", "AnswerCount": "1"}});