post_cb({"14970747": {"CommentCount": "7", "ViewCount": "551", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2013-02-20T01:26:11.123", "LastActivityDate": "2013-02-20T02:46:20.933", "Title": "Is the complexity of vector::clear unspecified?", "AcceptedAnswerId": "14971184", "LastEditDate": "2017-05-23T12:10:47.957", "Id": "14970747", "Score": "12", "Body": "<p>Per a discussion from <a href=\"https://stackoverflow.com/questions/14970349/is-stdvectorprimitiveclear-a-constant-time-operation/14970508#14970508\">Is `std::vector&lt;primitive&gt;::clear()` a constant time operation?</a>, it was noted that the C++ standard does not appear to specify the running time of <code>vector::clear</code>.</p>\n<p>It specifies the running time of <code>list::clear</code> (linear; \u00a723.3.5.4.5), <code>.clear</code> for both ordered (table 102) and unordered associative containers (table 103) (both linear). However, <code>vector::clear</code> appears to be missing (though other <code>vector</code> members, like <code>.data</code> and <code>.swap</code> appear to have specified complexity).</p>\n<p>Is it really unspecified, or did I miss something?</p>\n", "Tags": "<c++><vector><language-lawyer>", "OwnerUserId": "1204143", "AnswerCount": "1"}, "14971184": {"ParentId": "14970747", "LastEditDate": "2017-05-23T10:24:51.703", "CommentCount": "2", "CreationDate": "2013-02-20T02:12:03.827", "OwnerUserId": "1932150", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "14971184", "Score": "7", "Body": "<blockquote>\n<p id=\"so_14970747_14971184_0\">Is it really unspecified, or did I miss something?</p>\n</blockquote>\n<p><strong>Yes</strong>. At the moment, it is really unspecified. </p>\n<p><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/lwg-active.html#2231\" rel=\"nofollow noreferrer\">There is an <strong>open library issue</strong> for this</a>, whose text contains a link to a relevant Q&amp;A on StackOverflow. The answer by <a href=\"https://stackoverflow.com/users/981959/jonathan-wakely\">Jonathan Wakely</a> to that question clarifies what has been going on.</p>\n<p>According to the linked proposal, the complexity requirement of <code>clear()</code> should be made <strong>linear</strong> for all sequence containers. However, one must keep in mind that complexity requirements are just <strong>upper bounds</strong>. Per Paragraph 17.5.1.4/7 of the C++11 Standard:</p>\n<blockquote>\n<p id=\"so_14970747_14971184_1\">Complexity requirements specified in the library clauses are upper bounds, and implementations that provide better complexity guarantees satisfy the requirements.</p>\n</blockquote>\n<p>This <em>allows</em> for possible optimizations, but does not mandate them. </p>\n<p>Even when the linked proposal will be  accepted, we will not be allowed to assume that <code>clear()</code> has O(1) complexity for sequence containers of non-class elements, even though this seems to be a natural and common optimization strategy (and the answer by <a href=\"https://stackoverflow.com/users/335858/dasblinkenlight\">dasblinkenlight</a> to <strong><a href=\"https://stackoverflow.com/questions/11235975/what-is-the-complexity-of-stdvectortclear-when-t-is-a-primitive-type\">this question on SO</a></strong> confirms it). </p>\n<p>Implementations will be allowed to adopt this strategy (per 17.5.1.4/7), but they won't be <em>required</em> to do so, because nowhere in the Standard such a constraint is (nor is it proposed to be) specified.</p>\n", "LastActivityDate": "2013-02-20T02:46:20.933"}, "bq_ids": {"n4140": {"so_14970747_14971184_1": {"section_id": 6224, "quality": 1.0, "length": 14}}, "n3337": {"so_14970747_14971184_1": {"section_id": 5984, "quality": 1.0, "length": 14}}, "n4659": {"so_14970747_14971184_1": {"section_id": 7727, "quality": 1.0, "length": 14}}}});