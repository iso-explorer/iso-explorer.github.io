post_cb({"bq_ids": {"n4140": {"so_13667057_13703139_0": {"length": 8, "quality": 0.5714285714285714, "section_id": 7141}}, "n3337": {"so_13667057_13703139_0": {"length": 8, "quality": 0.5714285714285714, "section_id": 6885}}, "n4659": {"so_13667057_13703139_0": {"length": 8, "quality": 0.5714285714285714, "section_id": 8642}}}, "13667057": {"ViewCount": "543", "Body": "<p>The code below compiles fine with clang, but does not compile with <a href=\"http://gcc.gnu.org/\" rel=\"nofollow\">GCC</a> (tried 4.1.2, 4.5.4 and 4.7.2):</p>\n<pre><code>template &lt;typename T&gt;\nstruct A\n{\n    struct B { };\n};\n\ntemplate &lt;typename T&gt;\nbool operator==(typename A&lt;T&gt;::B const&amp; b, T const&amp;  t);\n\nenum { BAR };\n\ntemplate &lt;typename T&gt;\nbool test()\n{\n    return 0 == BAR;\n}\n</code></pre>\n<p>The error message from GCC 4.7.2 is:</p>\n<pre><code>a.cpp: In instantiation of \u2018struct A&lt;&lt;anonymous enum&gt; &gt;\u2019:\na.cpp:12:6:   required by substitution of \u2018template&lt;class T&gt; bool operator==(const typename A&lt;T&gt;::B&amp;, const T&amp;) [with T = &lt;anonymous enum&gt;]\u2019\na.cpp:19:17:   required from here\na.cpp:6:12: error: \u2018&lt;anonymous enum&gt;\u2019 is/uses anonymous type\na.cpp:6:12: error:   trying to instantiate \u2018template&lt;class T&gt; struct A&lt;T&gt;::B\u2019\na.cpp:6:12: error: \u2018&lt;anonymous enum&gt;\u2019 is/uses anonymous type\na.cpp:6:12: error:   trying to instantiate \u2018template&lt;class T&gt; struct A&lt;T&gt;::B\u2019\n</code></pre>\n<p>Is <a href=\"http://gcc.gnu.org/\" rel=\"nofollow\">GCC</a> correct in rejecting the code, or am I hitting its bug?</p>\n<p>P.S. I've seen this error while trying to build one of opensource projects. I tried to make smallest possible example that reproduces it.</p>\n", "Title": "GCC bug or UB? Should this code compile?", "CreationDate": "2012-12-02T06:44:21.533", "LastActivityDate": "2012-12-04T12:59:45.433", "CommentCount": "17", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2012-12-04T12:59:45.433", "LastEditorUserId": "1289709", "Id": "13667057", "Score": "16", "OwnerUserId": "1869492", "Tags": "<c++><gcc><gcc4.7>", "AnswerCount": "1"}, "13703139": {"Id": "13703139", "PostTypeId": "2", "Body": "<p>It is not valid C++ according to the original standard:</p>\n<p>14.3.1 of the standard says:</p>\n<blockquote>\n<p id=\"so_13667057_13703139_0\">2 A local type, a type with no linkage, an unnamed type or a\n  type compounded from any of these types shall not be used as a \n  template argument for a template type-parameter.  [Example: ...</p>\n</blockquote>\n<p>However I believe this was restriction was removed by the latest C++11 standard. That may explain why some compilers accept it while others reject it.</p>\n", "LastActivityDate": "2012-12-04T12:40:45.077", "CommentCount": "2", "CreationDate": "2012-12-04T12:40:45.077", "ParentId": "13667057", "Score": "1", "OwnerUserId": "139509"}});