post_cb({"bq_ids": {"n4140": {"so_24137006_24137006_0": {"length": 49, "quality": 0.9607843137254902, "section_id": 7192}}, "n3337": {"so_24137006_24137006_0": {"length": 49, "quality": 0.9607843137254902, "section_id": 6936}}, "n4659": {"so_24137006_24137006_0": {"length": 49, "quality": 0.9607843137254902, "section_id": 8701}}}, "24137006": {"ViewCount": "1074", "Body": "<p>This discussion came up in comments on <a href=\"https://stackoverflow.com/questions/24136120/what-is-wrong-with-using-arrays-dynamically-allocated-in-c\">another post</a>.</p>\n<p>Sample code:</p>\n<pre><code>#include &lt;string&gt;\n\nvoid func()\n{\n    std::string* foo;\n    foo = new std::string[125];\n\n    throw 1;\n\n    delete [] foo;\n}\n\nint main()\n{\n     try { func(); }\n     catch(int x) {}\n}\n</code></pre>\n<p>Does this program cause undefined behaviour? It was claimed that it is UB under <strong>\u00a73.8 p4</strong>, which is:</p>\n<blockquote>\n<p id=\"so_24137006_24137006_0\">A program may end the lifetime of any object by reusing the storage which the object occupies or by explicitly calling the destructor for an object of a class type with a non-trivial destructor. For an object of a class type with a non-trivial destructor, the program is not required to call the destructor explicitly before the storage which the object occupies is reused or released; however, if there is no explicit call to the destructor or if a delete-expression (5.3.5) is not used to release the storage, the destructor shall not be implicitly called and any program that depends on the side effects produced by the destructor has undefined behavior.</p>\n</blockquote>\n", "Title": "Does a memory leak cause undefined behaviour?", "CreationDate": "2014-06-10T09:09:14.337", "LastActivityDate": "2014-06-12T07:15:27.730", "CommentCount": "2", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2017-05-23T12:05:09.013", "Tags": "<c++><language-lawyer><undefined-behavior>", "Id": "24137006", "LastEditorUserId": "-1", "Score": "18", "OwnerUserId": "1505939", "ClosedDate": "2014-06-10T22:35:18.230", "AnswerCount": "0"}});