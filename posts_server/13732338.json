post_cb({"bq_ids": {"n4140": {"so_13732338_13732423_0": {"length": 4, "quality": 1.0, "section_id": 2247}}, "n3337": {"so_13732338_13732423_0": {"length": 4, "quality": 1.0, "section_id": 2235}}, "n4659": {"so_13732338_13732423_0": {"length": 4, "quality": 1.0, "section_id": 2520}}}, "34948562": {"Id": "34948562", "PostTypeId": "2", "Body": "<p>To be precise, <code>eofbit</code> won't cause <code>tellg()</code> to return <code>-1</code>. But the fact that you read <em>past</em> EOF sets the <code>failbit</code>, and <code>tellg()</code> will return <code>-1</code> if <code>badbit</code> or <code>failbit</code> are set.</p>\n<p>The solution is to clear the status flags before calling <code>tellg()</code>:</p>\n<pre><code>iss.clear();\niss.tellg();  // should work\n</code></pre>\n", "LastActivityDate": "2016-01-22T14:03:28.327", "Score": "1", "CreationDate": "2016-01-22T14:03:28.327", "ParentId": "13732338", "CommentCount": "0", "OwnerUserId": "485343"}, "13732338": {"ViewCount": "522", "Body": "<p>The following code works with gcc 4.4.<br>\nBut gcc 4.7 will give assertion failure.</br></p>\n<pre><code>#include &lt;assert.h&gt;\n#include &lt;iostream&gt;\n#include &lt;sstream&gt;\n\nusing namespace std;\n\nint main()\n{\n\n    string input(\"abcdefg\");\n    stringstream iss(input);\n    ostringstream oss;\n    oss &lt;&lt; iss.rdbuf();\n\n    assert (!iss.eof());\n    (void) iss.peek();\n    assert (iss.eof());\n\n    // the following assertion will fail with gcc 4.7\n    assert( streamoff(iss.tellg()) ==\n            streamoff(input.length()) );\n\n    return 0;\n}\n</code></pre>\n<p>In gcc 4.7, if the istream has reached EOF, tellg() will return -1. no pubseekoff() nor seekoff() will be called\nIn gcc 4.4 it is not a problem.</p>\n<p>Which is the supposed to be behavior, gcc 4.4 or gcc 4.7? Why?</p>\n", "AcceptedAnswerId": "13732423", "Title": "GCC 4.7 istream::tellg() returns -1 after reaching EOF", "CreationDate": "2012-12-05T20:59:38.460", "Id": "13732338", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2016-01-22T14:03:28.327", "Score": "6", "OwnerUserId": "835887", "Tags": "<c++><istream>", "AnswerCount": "2"}, "13732423": {"Id": "13732423", "PostTypeId": "2", "Body": "<p>According to C++11 section 27.7.2.3p40,</p>\n<blockquote>\n<p id=\"so_13732338_13732423_0\">if <code>fail() != false</code>, returns <code>pos_type(-1)</code></p>\n</blockquote>\n<p>So gcc 4.7 has the correct behavior for the current version of C++ (assuming that <code>peek()</code> at end of stream causes <code>failbit</code> to be set, and it does during sentry construction, since <code>skipws</code> is set by default).</p>\n<p>Looking at the wording of C++03, it is the same.  27.6.1.3p37.  So the behavior you describe in gcc 4.4 is a bug.</p>\n", "LastEditorUserId": "103167", "LastActivityDate": "2012-12-05T21:17:53.670", "Score": "5", "CreationDate": "2012-12-05T21:04:44.983", "ParentId": "13732338", "CommentCount": "0", "LastEditDate": "2012-12-05T21:17:53.670", "OwnerUserId": "103167"}});