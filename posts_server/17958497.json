post_cb({"17979242": {"ParentId": "17958497", "CommentCount": "1", "CreationDate": "2013-07-31T19:30:30.823", "OwnerUserId": "34509", "PostTypeId": "2", "Id": "17979242", "Score": "4", "Body": "<p>GCC is right according to C++11. In C++14, this will be allowed. See <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#482\" rel=\"nofollow noreferrer\">http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#482</a></p>\n", "LastActivityDate": "2013-07-31T19:30:30.823"}, "17958497": {"CommentCount": "0", "ViewCount": "1497", "PostTypeId": "1", "LastEditorUserId": "1131467", "CreationDate": "2013-07-30T22:22:00.473", "LastActivityDate": "2013-09-25T00:18:49.900", "Title": "C++11 gcc: explicit qualification in declaration? Standard ref?", "FavoriteCount": "1", "LastEditDate": "2013-07-30T22:32:53.487", "Id": "17958497", "Score": "6", "Body": "<p>When the following C++11 program is compiled with gcc 4.7:</p>\n<pre><code>extern int i;\nint ::i;\n\nint main()\n{\n}\n</code></pre>\n<p>gcc complains that:</p>\n<pre><code>error: explicit qualification in declaration of `i`\n</code></pre>\n<p>Is this non-conformant behaviour?  Where in the standard is this program deemed ill-formed?</p>\n<p>8.3p1 seems to indicate that it should be allowed:</p>\n<blockquote>\n<p id=\"so_17958497_17958497_0\">If the\n  qualifier is the global :: scope resolution operator, the declarator-id refers to a name declared in the global\n  namespace scope.</p>\n</blockquote>\n<p><strong>Update:</strong></p>\n<p>From N3485 8.3p1:</p>\n<blockquote>\n<p id=\"so_17958497_17958497_1\">A list of declarators appears after an optional (Clause 7) decl-specifier-seq (7.1). Each declarator contains\n  exactly one declarator-id; it names the identifier that is declared. An unqualified-id occurring in a declarator-\n  id shall be a simple identifier except for the declaration of some special functions (12.3, 12.4, 13.5) and for the\n  declaration of template specializations or partial specializations (14.7). When the declarator-id is qualified,\n  the declaration shall refer to a previously declared member of the class or namespace to which the qualifier\n  refers (or, in the case of a namespace, of an element of the inline namespace set of that namespace (7.3.1))\n  or to a specialization thereof; the member shall not merely have been introduced by a using-declaration\n  in the scope of the class or namespace nominated by the nested-name-specifier of the declarator-id. The\n  nested-name-specifier of a qualified declarator-id shall not begin with a decltype-specifier. [ Note: If the\n  qualifier is the global :: scope resolution operator, the declarator-id refers to a name declared in the global\n  namespace scope. \u2014 end note ] The optional attribute-specifier-seq following a declarator-id appertains to\n  the entity that is declared.</p>\n</blockquote>\n", "Tags": "<c++><gcc><c++11>", "OwnerUserId": "1131467", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_17958497_17958497_1": {"section_id": 3208, "quality": 0.8877551020408163, "length": 87}, "so_17958497_17958497_0": {"section_id": 3208, "quality": 1.0, "length": 12}}, "n3337": {"so_17958497_17958535_0": {"section_id": 3082, "quality": 0.8857142857142857, "length": 31}, "so_17958497_17958497_1": {"section_id": 3082, "quality": 0.8877551020408163, "length": 87}, "so_17958497_17958497_0": {"section_id": 3082, "quality": 1.0, "length": 12}}, "n4659": {"so_17958497_17958497_1": {"section_id": 3965, "quality": 0.8061224489795918, "length": 79}, "so_17958497_17958497_0": {"section_id": 3965, "quality": 1.0, "length": 12}}}, "17958535": {"ParentId": "17958497", "PostTypeId": "2", "CommentCount": "9", "CreationDate": "2013-07-30T22:24:46.410", "Score": "12", "LastEditorUserId": "947836", "LastEditDate": "2013-07-30T22:50:43.337", "Id": "17958535", "OwnerUserId": "947836", "Body": "<p>And the very next sentence says (in n3337):</p>\n<blockquote>\n<p id=\"so_17958497_17958535_0\">A <strong>declarator-id shall not be quali\ufb01ed</strong> except for the de\ufb01nition of a member function or static data member outside of its\n  class, the de\ufb01nition or explicit instantiation of a function or variable member of a namespace outside of its\n  namespace, or the de\ufb01nition of an explicit specialization outside of its namespace, or the declaration of a\n  friend function that is a member of another class or namespace.</p>\n</blockquote>\n<p>A definition of a global variable is not mentioned among the exceptions.</p>\n", "LastActivityDate": "2013-07-30T22:50:43.337"}});