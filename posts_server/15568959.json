post_cb({"15568959": {"CommentCount": "10", "AcceptedAnswerId": "15568997", "PostTypeId": "1", "LastEditorUserId": "560648", "CreationDate": "2013-03-22T11:14:47.970", "LastActivityDate": "2013-03-23T10:09:58.663", "LastEditDate": "2013-03-22T11:23:57.153", "ViewCount": "442", "FavoriteCount": "2", "Title": "Is a declaration valid inside an if block with no actual block?", "Id": "15568959", "Score": "11", "Body": "<p>Is the following code valid? If so, what is the scope of <code>x</code>?</p>\n<pre><code>int main()\n{\n   if (true) int x = 42;\n}\n</code></pre>\n<p>My intuition says that there is no scope created by the <code>if</code> because no actual block (<code>{}</code>) follows it.</p>\n", "Tags": "<c++><language-lawyer>", "OwnerUserId": "560648", "AnswerCount": "2"}, "15569078": {"ParentId": "15568959", "PostTypeId": "2", "CommentCount": "5", "Body": "<p>My Visual studio says that time of life of your variable x is pretty small - \njust while we are inside operator if,\nso x vill be destroyed when we are out of if condition, and there is absolutely no meaning to \ndeclare variables like this.</p>\n", "OwnerUserId": "2053532", "LastEditorUserId": "46642", "LastEditDate": "2013-03-22T11:20:22.013", "Id": "15569078", "Score": "2", "CreationDate": "2013-03-22T11:20:09.947", "LastActivityDate": "2013-03-22T11:20:22.013"}, "bq_ids": {"n4140": {"so_15568959_15568997_0": {"section_id": 3882, "quality": 0.7857142857142857, "length": 11}, "so_15568959_15568997_1": {"section_id": 3882, "quality": 0.7, "length": 7}, "so_15568959_15568997_2": {"section_id": 3877, "quality": 0.5333333333333333, "length": 8}}, "n3337": {"so_15568959_15568997_0": {"section_id": 3742, "quality": 0.7857142857142857, "length": 11}, "so_15568959_15568997_1": {"section_id": 3742, "quality": 0.7, "length": 7}, "so_15568959_15568997_2": {"section_id": 3737, "quality": 0.5333333333333333, "length": 8}}, "n4659": {"so_15568959_15568997_2": {"section_id": 4761, "quality": 0.5333333333333333, "length": 8}, "so_15568959_15568997_1": {"section_id": 4771, "quality": 0.7, "length": 7}, "so_15568959_15568997_0": {"section_id": 4771, "quality": 0.7857142857142857, "length": 11}}}, "15568997": {"ParentId": "15568959", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>GCC 4.7.2 shows us that, while the code is <em>valid</em>, <a href=\"https://ideone.com/MOnO5C\">the scope of <code>x</code> is still simply the conditional</a>.</p>\n<h3>Scope</h3>\n<p>This is due to:</p>\n<blockquote>\n<p id=\"so_15568959_15568997_0\"><code>[C++11: 6.4/1]:</code> <em>[..]</em> The substatement in a <em>selection-statement</em> (each substatement, in the <code>else</code> form of the <code>if</code> statement) implicitly defines a block scope. <em>[..]</em></p>\n</blockquote>\n<p>Consequently, your code is equivalent to the following:</p>\n<pre><code>int main()\n{\n   if (true) {\n      int x = 42;\n   }\n}\n</code></pre>\n<h3>Validity</h3>\n<p>It's <em>valid</em> in terms of the grammar because the production for selection statements is thus (by <code>[C++11: 6.4/1]</code>):</p>\n<blockquote>\n<p id=\"so_15568959_15568997_1\"><em>selection-statement</em>:<br>\n  \u00a0\u00a0<strong><code>if</code> ( <em>condition</em> ) <em>statement</em></strong><br>\n  \u00a0\u00a0<code>if</code> ( <em>condition</em> ) <em>statement</em> <code>else</code> <em>statement</em><br>\n  \u00a0\u00a0<code>switch</code> ( <em>condition</em> ) <em>statement</em></br></br></br></p>\n</blockquote>\n<p>and <code>int x = 42;</code> is a <em>statement</em> (by <code>[C++11: 6/1]</code>):</p>\n<blockquote>\n<p id=\"so_15568959_15568997_2\"><em>statement</em>:<br>\n  \u00a0\u00a0<em>labeled-statement</em><br>\n  \u00a0\u00a0<em>attribute-specifier-seq</em><sub>opt</sub> <em>expression-statement</em><br>\n  \u00a0\u00a0<em>attribute-specifier-seq</em><sub>opt</sub> <em>compound-statement</em><br>\n  \u00a0\u00a0<em>attribute-specifier-seq</em><sub>opt</sub> <em>selection-statement</em><br>\n  \u00a0\u00a0<em>attribute-specifier-seq</em><sub>opt</sub> <em>iteration-statement</em><br>\n  \u00a0\u00a0<em>attribute-specifier-seq</em><sub>opt</sub> <em>jump-statement</em><br>\n  \u00a0\u00a0<strong><em>declaration-statement</em></strong><br>\n  \u00a0\u00a0<em>attribute-specifier-seq</em><sub>opt</sub> <em>try-block</em></br></br></br></br></br></br></br></br></p>\n</blockquote>\n", "OwnerUserId": "560648", "LastEditorUserId": "560648", "LastEditDate": "2013-03-22T11:21:18.917", "Id": "15568997", "Score": "25", "CreationDate": "2013-03-22T11:16:06.677", "LastActivityDate": "2013-03-22T11:21:18.917"}});