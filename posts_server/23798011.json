post_cb({"23798087": {"Id": "23798087", "PostTypeId": "2", "Body": "<p>23.2.4 paragraph 9 specifies:</p>\n<blockquote>\n<p id=\"so_23798011_23798087_0\">The insert and emplace members shall not affect the validity of iterators and references to the container,\n  and the erase members shall invalidate only iterators and references to the erased elements.</p>\n</blockquote>\n<p>So inserting into a <code>std::map</code> cannot move or copy any elements other than the element being inserted.</p>\n", "LastActivityDate": "2014-05-22T04:54:13.780", "CommentCount": "3", "CreationDate": "2014-05-22T04:54:13.780", "ParentId": "23798011", "Score": "0", "OwnerUserId": "16406"}, "bq_ids": {"n4140": {"so_23798011_23798087_0": {"length": 15, "quality": 0.9375, "section_id": 745}}, "n3337": {"so_23798011_23798087_0": {"length": 15, "quality": 0.9375, "section_id": 734}}, "n4659": {"so_23798011_23798087_0": {"length": 15, "quality": 0.9375, "section_id": 803}}}, "23798011": {"ViewCount": "46", "Body": "<p>It is pretty clear that in most of <code>std::set&lt;T&gt;</code> implementations insertion of an element causes just one call of the copy ctor of the <code>T</code> class. But theoretically it is possible that data structure is implemented in some weird way and up to <code>c * log N</code> elements of the set are getting copied for some reasons (during the single insertion). </p>\n<p>So my question is: does C++ standard put any constraints on that? If not, how can I sleep well knowing that code like one below can just start taking few years to run with the new version of gcc:</p>\n<pre><code>std::map&lt;int, std::map&lt;int, int&gt;&gt; myMap;\n\nfor (int i = 0; i &lt; 1000000; ++i) {\n    myMap[rand()][rand()] = rand();\n}\n</code></pre>\n", "Title": "C++: How many times copy ctor may be called when element is added to the std::set/map or std::unordered_set/map", "CreationDate": "2014-05-22T04:46:49.980", "LastActivityDate": "2014-05-22T04:54:13.780", "CommentCount": "1", "PostTypeId": "1", "Id": "23798011", "Score": "0", "OwnerUserId": "1350936", "Tags": "<c++><std>", "AnswerCount": "1"}});