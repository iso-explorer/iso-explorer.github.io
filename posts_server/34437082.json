post_cb({"34437307": {"Id": "34437307", "PostTypeId": "2", "Body": "<p>N4567 \u00a7 8.3.4 Arrays [dcl.array]p1 (emphasis mine)</p>\n<blockquote>\n<p id=\"so_34437082_34437307_0\">In a declaration <code>T D</code> where <code>D</code> has the form</p>\n<p id=\"so_34437082_34437307_1\"><code>D1 [ constant-expression</code><sub><code>opt</code></sub><code>] attribute-speci\ufb01er-seq</code><sub><code>opt</code></sub></p>\n<p id=\"so_34437082_34437307_2\">and the type of the identi\ufb01er in the declaration <code>T D1</code> is \u201c<em>derived-declarator-type-list</em> <code>T</code>\u201d, then the type of the <em>identi\ufb01er</em> of D is an array type; [...] <strong>T is called the <em>array element type</em>; this type shall not be a reference type, the (possibly cv-quali\ufb01ed) type void, a function type or an abstract class type</strong>. </p>\n</blockquote>\n<p>So, the language rule just forbids you from creating the type \"array of abstrct class type\".  </p>\n", "LastActivityDate": "2015-12-23T14:00:01.277", "CommentCount": "0", "CreationDate": "2015-12-23T14:00:01.277", "ParentId": "34437082", "Score": "5", "OwnerUserId": "4672588"}, "bq_ids": {"n4140": {"so_34437082_34437307_2": {"length": 22, "quality": 0.88, "section_id": 3228}}, "n3337": {"so_34437082_34437307_2": {"length": 22, "quality": 0.88, "section_id": 3101}}, "n4659": {"so_34437082_34437307_2": {"length": 18, "quality": 0.72, "section_id": 3985}}}, "34437082": {"ViewCount": "86", "Body": "<p>Consider following program (See live demo <a href=\"http://melpon.org/wandbox/permlink/M0yyRCUZLg0Atb9T\" rel=\"nofollow\">here.</a>)</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;type_traits&gt;\nint main()\n{\n    struct T{ virtual void foo()=0;};\n    std::cout&lt;&lt;std::boolalpha;\n    std::cout&lt;&lt;std::is_array&lt;int[3]&gt;::value&lt;&lt;'\\n';\n    std::cout&lt;&lt;std::is_array&lt;T&gt;::value&lt;&lt;'\\n';\n    std::cout&lt;&lt;std::is_array&lt;T1[2]&gt;::value&lt;&lt;'\\n';\n    std::cout&lt;&lt;std::is_array&lt;T[3]&gt;::value&lt;&lt;'\\n'; // why uncommenting this line causes compile time error?\n}\n</code></pre>\n<p>I know that it isn't possible to create the object of abstract class. Here T is abstract, so it isn't possible to create the object of struct T.\nBut consider the following statement</p>\n<pre><code>std::cout&lt;&lt;std::is_array&lt;T[3]&gt;::value&lt;&lt;'\\n';\n</code></pre>\n<p>Why it gives me an error? The statement only checks whether a given type is array or not. Does that mean that If T is array \n&amp; value of the static member <code>value</code> evaluates to <code>true</code> then array of objects will be created? <strong>But, why array is required to be created here? \nwhat is the need to create an array If I am not able to use that array? Isn't this just wastage of memory?</strong></p>\n<p>Then why following statement doesn't give any compiler error?</p>\n<pre><code>std::cout&lt;&lt;std::is_array&lt;T&gt;::value&lt;&lt;'\\n';\n</code></pre>\n<p>What I am understanding wrong here? Please help me.</p>\n", "AcceptedAnswerId": "34437143", "Title": "confusion about evaluation of is_array template class", "CreationDate": "2015-12-23T13:46:23.853", "Id": "34437082", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2015-12-23T14:08:29.810", "Score": "1", "OwnerUserId": "3777958", "Tags": "<c++><object><abstract-class><evaluation><class-template>", "AnswerCount": "2"}, "34437143": {"Id": "34437143", "PostTypeId": "2", "Body": "<p>You can't have an array of abstract class type. Thus, you get a compiler error.</p>\n<blockquote>\n<p id=\"so_34437082_34437143_0\">But, why array is required to be created here? what is the need to\n  create an array If I am not able to use that array? Isn't this just\n  wastage of memory?</p>\n</blockquote>\n<p>The array is not created, you pass its type as a template argument. The compiler sees that this is an array of abstract class objects and it complains.</p>\n", "LastEditorUserId": "2352671", "LastActivityDate": "2015-12-23T14:08:29.810", "Score": "2", "CreationDate": "2015-12-23T13:51:06.223", "ParentId": "34437082", "CommentCount": "3", "OwnerUserId": "2352671", "LastEditDate": "2015-12-23T14:08:29.810"}});