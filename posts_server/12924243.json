post_cb({"bq_ids": {"n4140": {"so_12924243_12924268_2": {"length": 10, "quality": 1.0, "section_id": 6307}, "so_12924243_12924268_3": {"length": 8, "quality": 1.0, "section_id": 6313}, "so_12924243_12924268_1": {"length": 13, "quality": 0.9285714285714286, "section_id": 6307}, "so_12924243_12924268_0": {"length": 8, "quality": 1.0, "section_id": 6307}}, "n3337": {"so_12924243_12924268_2": {"length": 10, "quality": 1.0, "section_id": 6064}, "so_12924243_12924268_3": {"length": 8, "quality": 1.0, "section_id": 6070}, "so_12924243_12924268_1": {"length": 13, "quality": 0.9285714285714286, "section_id": 6064}, "so_12924243_12924268_0": {"length": 8, "quality": 1.0, "section_id": 6064}}, "n4659": {"so_12924243_12924268_2": {"length": 9, "quality": 0.9, "section_id": 6756}, "so_12924243_12924268_3": {"length": 8, "quality": 1.0, "section_id": 7823}, "so_12924243_12924268_1": {"length": 12, "quality": 0.8571428571428571, "section_id": 6756}, "so_12924243_12924268_0": {"length": 5, "quality": 0.625, "section_id": 7844}}}, "12924243": {"ViewCount": "2926", "Body": "<blockquote>\n<p id=\"so_12924243_12924243_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier\">What are the rules about using an underscore in a C++ identifier?</a> </br></p>\n</blockquote>\n<p>I'm interested in the relevant sections from the standard (if any). </p>\n", "AcceptedAnswerId": "12924268", "Title": "Are identifiers starting with an underscore reserved according to the latest C++ standard?", "CreationDate": "2012-10-16T22:11:05.240", "LastActivityDate": "2012-10-21T02:30:16.020", "CommentCount": "2", "LastEditDate": "2017-05-23T10:30:17.893", "PostTypeId": "1", "Tags": "<c++><c++11><standards>", "Id": "12924243", "AnswerCount": "2", "Score": "1", "OwnerUserId": "140367", "ClosedDate": "2012-10-17T13:47:15.757", "LastEditorUserId": "-1"}, "12924268": {"Id": "12924268", "PostTypeId": "2", "Body": "<p>Yes, when the underscore is followed by another underscore or an uppercase letter (i.e. for preprocessor #defines or macros), or if the identifier is in the global namespace (\u00a717.6.4.3.2):</p>\n<blockquote>\n<p id=\"so_12924243_12924268_0\">Certain sets of names and function signatures are always reserved to the implementation:</p>\n<p id=\"so_12924243_12924268_1\">\u2014 Each name that contains a double underscore _ _ or begins with an underscore followed by an uppercase letter (2.12) is reserved to the implementation for any use.</p>\n<p id=\"so_12924243_12924268_2\">\u2014 Each name that begins with an underscore is reserved to the implementation for use as a name in the global namespace.</p>\n</blockquote>\n<p>Note that the first point means that if two underscores appear <em>anywhere</em> in the identifier, even in the middle or at the end, the name is reserved. Also, I would add (\u00a717.6.4.3.5, emphasis mine):</p>\n<blockquote>\n<p id=\"so_12924243_12924268_3\"><strong>Literal suffix identifiers</strong> that <em>do not</em> start with an underscore are reserved for future standardization.</p>\n</blockquote>\n", "LastEditorUserId": "726361", "LastActivityDate": "2012-10-17T02:57:30.110", "Score": "7", "CreationDate": "2012-10-16T22:13:37.707", "ParentId": "12924243", "CommentCount": "7", "LastEditDate": "2012-10-17T02:57:30.110", "OwnerUserId": "726361"}, "12924274": {"Id": "12924274", "PostTypeId": "2", "Body": "<p>They are not reserved like <code>for</code> but you should not use them, since compiler developers may use them to name their own functions, so it may conflict with your function. So if you use <code>my_class::_function</code> then there should be no error, but write a global function like <code>void _function()</code> may generate a duplicate with one compiler!</p>\n", "LastActivityDate": "2012-10-16T22:14:08.297", "CommentCount": "1", "CreationDate": "2012-10-16T22:14:08.297", "ParentId": "12924243", "Score": "0", "OwnerUserId": "1425813"}});