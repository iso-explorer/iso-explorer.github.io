post_cb({"38336578": {"CommentCount": "2", "ViewCount": "63", "CreationDate": "2016-07-12T18:39:56.493", "LastActivityDate": "2016-07-12T18:56:05.443", "Title": "In C++, is there a difference in memory usage between \"enum class\" versus \"enum\"?", "AcceptedAnswerId": "38336740", "PostTypeId": "1", "Id": "38336578", "Score": "1", "Body": "<p>I understand the benefits of using the strongly typed \"enum class\" over \"enum\", but a classmate and I are wondering if one or the other takes up more memory.</p>\n", "Tags": "<c++11><enums>", "OwnerUserId": "4714106", "AnswerCount": "1"}, "38336740": {"ParentId": "38336578", "PostTypeId": "2", "CommentCount": "2", "Body": "<p><code>enum class</code>s are still just integral values with no additional overhead. However an <code>enum class</code>'s underlying type defaults to <code>int</code> while regular <code>enum</code> the type is unspecified and the implementation is free to select a minimal integral type. So in theory if you don't specify the underlying type an <code>enum class</code> may be bigger than a plain <code>enum</code>.</p>\n<h1>C++ specification 7.2.5 - Enumeration Deceleration</h1>\n<p><code>enum class</code></p>\n<blockquote>\n<p id=\"so_38336578_38336740_0\">The underlying type can be explicitly specified using enum-base; if not explicitly specified, the underlying type of a scoped enumeration type is <code>int</code>.</p>\n</blockquote>\n<p><code>enum</code></p>\n<blockquote>\n<p id=\"so_38336578_38336740_1\">If no initializer is specified for the first enumerator, the initializing value has an unspecified integral\n  type.</p>\n</blockquote>\n", "OwnerUserId": "3848", "LastEditorUserId": "3848", "LastEditDate": "2016-07-12T18:56:05.443", "Id": "38336740", "Score": "2", "CreationDate": "2016-07-12T18:49:13.160", "LastActivityDate": "2016-07-12T18:56:05.443"}, "bq_ids": {"n4140": {"so_38336578_38336740_0": {"section_id": 5464, "quality": 0.8125, "length": 13}, "so_38336578_38336740_1": {"section_id": 5464, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_38336578_38336740_0": {"section_id": 5251, "quality": 0.9375, "length": 15}, "so_38336578_38336740_1": {"section_id": 5251, "quality": 1.0, "length": 9}}, "n4659": {"so_38336578_38336740_0": {"section_id": 6898, "quality": 0.8125, "length": 13}, "so_38336578_38336740_1": {"section_id": 6898, "quality": 0.8888888888888888, "length": 8}}}});