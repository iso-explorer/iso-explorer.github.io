post_cb({"10880507": {"CommentCount": "5", "AcceptedAnswerId": "10880584", "PostTypeId": "1", "LastEditorUserId": "9990", "CreationDate": "2012-06-04T11:29:56.100", "LastActivityDate": "2016-02-19T13:36:26.067", "LastEditDate": "2012-06-04T16:52:10.847", "ViewCount": "1022", "FavoriteCount": "2", "Title": "Can string-based user-defined literals be strongly typed?", "Id": "10880507", "Score": "10", "Body": "<p>The new user-defined literal concept in C++ suggests some very interesting uses of string-literals, such as:</p>\n<pre><code>\"Goodbye %s world\"_fmt(\"cruel\");\n\"Goodbye %s world\"_fmt(123); // Error: arg 1 must be convertible to const char*\n\nR\"(point = \\((\\d+), (\\d+)\\))\"_re; // Builds DFA at compile-time.\n\ntypedef table&lt;\n    column&lt;\"CustId\"_name   , std::string&gt;,\n    column&lt;\"FirstName\"_name, std::string&gt;,\n    column&lt;\"LastName\"_name , std::string&gt;,\n    column&lt;\"DOB\"_name      , date       &gt;\n&gt; Customer;\n</code></pre>\n<p>However, when I build these kinds of constructs in gcc, e.g.:</p>\n<pre><code>template &lt;char... Chars&gt; Name&lt;Chars...&gt; operator \"\" _name() {\n    return Name&lt;Chars...&gt;();\n}\n\nauto a = 123_name;    // OK\nauto b = \"abc\"_name;  // Error\n</code></pre>\n<p>I get the following error:</p>\n<pre><code>\u2026unable to find string literal operator \u2018operator\"\" _name\u2019 with \u2018const char [4]\u2019, \u2018long unsigned int\u2019 arguments\n</code></pre>\n<p>From reading around, I'm guessing that the variadic-template form is not available to UDLs derived from string literals.</p>\n<ol>\n<li>Is it in fact the case that string literals cannot be resolved using the variadic template form?</li>\n<li>If so, does anyone have any insight into why such a useful form of UDL was left out of the standard?</li>\n</ol>\n", "Tags": "<c++><c++11><variadic-templates><user-defined-literals>", "OwnerUserId": "9990", "AnswerCount": "2"}, "10880584": {"ParentId": "10880507", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>You are right. String literals cannot be used with the variadic template form (\u00a72.14.8/5):</p>\n<blockquote>\n<p id=\"so_10880507_10880584_0\">If <code>L</code> is a <em>user-defined-string-literal</em>, let <em>str</em> be the literal\n  without its <em>ud-suffix</em> and let <em>len</em> be the number of code units in\n  <em>str</em> (i.e., its length excluding the terminating null character). The literal <code>L</code> is treated as a call of the form</p>\n<pre><code>operator \"\" X (str, len)\n</code></pre>\n</blockquote>\n<p>I have shuffled through the proposal papers (the latest of which I could find was <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2750.pdf\">N2750</a>) and could not find an explanation for not allowing the use of the variadic template form.</p>\n", "OwnerUserId": "46642", "LastEditorUserId": "46642", "LastEditDate": "2012-06-04T11:42:54.837", "Id": "10880584", "Score": "8", "CreationDate": "2012-06-04T11:36:43.907", "LastActivityDate": "2012-06-04T11:42:54.837"}, "bq_ids": {"n4140": {"so_10880507_10880584_0": {"section_id": 5371, "quality": 0.8260869565217391, "length": 19}}, "n3337": {"so_10880507_10880584_0": {"section_id": 5167, "quality": 0.8260869565217391, "length": 19}}, "n4659": {"so_10880507_10880584_0": {"section_id": 6796, "quality": 0.8260869565217391, "length": 19}}}, "35506653": {"ParentId": "10880507", "CommentCount": "0", "Body": "<p>N3599, which allows this, has been implemented in gcc and clang.</p>\n<pre><code>template&lt;class CharT, CharT... chars&gt;\nint operator \"\"_suffix(){\n    return 42;\n}\n</code></pre>\n", "OwnerUserId": "1370600", "PostTypeId": "2", "Id": "35506653", "Score": "2", "CreationDate": "2016-02-19T13:36:26.067", "LastActivityDate": "2016-02-19T13:36:26.067"}});