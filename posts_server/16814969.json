post_cb({"16815004": {"ParentId": "16814969", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>From <a href=\"http://www.cplusplus.com/reference/istream/istream/getline/\" rel=\"nofollow\">here</a>:</p>\n<blockquote>\n<p id=\"so_16814969_16815004_0\">Internally, the function accesses the input sequence by first\n  constructing a sentry object (with noskipws set to true). Then (if\n  good), it extracts characters from its associated stream buffer object\n  as if calling its member functions sbumpc or sgetc, and finally\n  destroys the sentry object before returning.</p>\n</blockquote>\n<p>It seems that the buffer is filled until there is a problem. (See DyP's comments)</p>\n", "OwnerUserId": "1460626", "LastEditorUserId": "1460626", "LastEditDate": "2013-05-29T13:44:18.917", "Id": "16815004", "Score": "0", "CreationDate": "2013-05-29T13:18:36.850", "LastActivityDate": "2013-05-29T13:44:18.917"}, "16814969": {"CommentCount": "1", "ViewCount": "530", "CreationDate": "2013-05-29T13:16:52.720", "LastActivityDate": "2013-05-29T13:45:49.397", "Title": "ifstream getline does not find delim", "AcceptedAnswerId": "16815635", "PostTypeId": "1", "Id": "16814969", "Score": "0", "Body": "<p>If the ifstream::getline call does not find the delimeter I know it sets failbit but does it also clear out the buffer or does it leave the buffer intact and just set the fail bit to let you know?</p>\n", "Tags": "<c++><ifstream><getline>", "OwnerUserId": "802302", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_16814969_16815635_0": {"section_id": 1946, "quality": 1.0, "length": 34}, "so_16814969_16815635_1": {"section_id": 2225, "quality": 0.6219512195121951, "length": 51}}, "n3337": {"so_16814969_16815635_0": {"section_id": 1935, "quality": 1.0, "length": 34}, "so_16814969_16815635_1": {"section_id": 2213, "quality": 0.6219512195121951, "length": 51}}, "n4659": {"so_16814969_16815635_1": {"section_id": 2498, "quality": 0.6219512195121951, "length": 51}, "so_16814969_16815635_0": {"section_id": 2217, "quality": 1.0, "length": 34}}}, "16815635": {"ParentId": "16814969", "CommentCount": "0", "Body": "<p>There seems to be some confusion about the different states of an input stream (and rightly so, they <em>are</em> confusing):</p>\n<p>C++ Standard, table 124</p>\n<blockquote id=\"so_16814969_16815635_0\">\n<ul>\n<li><code>badbit</code> indicates a loss of integrity in an input or output sequence (such as an irrecoverable read error from a file);</li>\n<li><code>eofbit</code> indicates that an input operation reached the end of an input sequence;</li>\n<li><code>failbit</code> indicates that an input operation failed to read the expected characters, or\n  that an output operation failed to generate the desired characters.</li>\n</ul>\n</blockquote>\n<p>That is, <code>failbit</code> is set when <code>basic_istream::getline(char_type* s, std::streamsize count, char_type delim)</code> extracts <code>count-1</code> characters without finding the delimiter (<code>-1</code> for the terminating <code>\\0</code> stored). This does not indicate the stream is <code>bad</code>, but it rather indicates that <code>getline</code> has failed to find the delimiter.</p>\n<p>Description of <code>basic_istream::getline</code> in the C++ Standard:\n[istream.unformatted]/18</p>\n<blockquote id=\"so_16814969_16815635_1\">\n<ul>\n<li>Effects: [...] After constructing a sentry object [= preparation for input and error checks], extracts characters and stores them into successive locations of an array whose first element is designated by <code>s</code>. <strong>Characters are extracted and stored until one of the following occurs</strong>:\n  <ol>\n<li>end-of-file occurs on the input sequence (in which case the function calls <code>setstate(eofbit)</code>);</li>\n<li><code>traits::eq(c, delim)</code> [= delimiter found] for the next available input character <code>c</code> (in which case the input character is extracted but not stored);</li>\n<li><code>n</code> is less than one or <code>n - 1</code> characters are stored (in which case the function calls <code>setstate(failbit)</code>).\n  [...]</li>\n</ol></li>\n<li>These conditions are tested in the order shown.</li>\n<li>If the function extracts no characters, it calls <code>setstate(failbit)</code> [...]</li>\n<li>In any case, if <code>n</code> is greater than zero, it then stores a null character [...] into the next successive location of the array.</li>\n</ul>\n</blockquote>\n<p>[emphasis and omissions mine]</p>\n", "OwnerUserId": "420683", "PostTypeId": "2", "Id": "16815635", "Score": "0", "CreationDate": "2013-05-29T13:45:49.397", "LastActivityDate": "2013-05-29T13:45:49.397"}});