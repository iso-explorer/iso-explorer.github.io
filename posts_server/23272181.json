post_cb({"bq_ids": {"n4140": {"so_23272181_23272181_7": {"length": 26, "quality": 0.9629629629629629, "section_id": 391}, "so_23272181_23272181_0": {"length": 7, "quality": 1.0, "section_id": 391}, "so_23272181_23273284_18": {"length": 32, "quality": 0.8, "section_id": 391}, "so_23272181_23273284_7": {"length": 33, "quality": 0.6, "section_id": 391}}, "n3337": {"so_23272181_23272181_7": {"length": 26, "quality": 0.9629629629629629, "section_id": 382}, "so_23272181_23272181_0": {"length": 7, "quality": 1.0, "section_id": 382}, "so_23272181_23273284_18": {"length": 32, "quality": 0.8, "section_id": 382}, "so_23272181_23273284_7": {"length": 33, "quality": 0.6, "section_id": 382}}, "n4659": {"so_23272181_23273284_11": {"length": 8, "quality": 0.5714285714285714, "section_id": 408}, "so_23272181_23272181_7": {"length": 18, "quality": 0.6666666666666666, "section_id": 408}, "so_23272181_23273284_0": {"length": 8, "quality": 0.5714285714285714, "section_id": 408}, "so_23272181_23272181_0": {"length": 7, "quality": 1.0, "section_id": 408}, "so_23272181_23273284_18": {"length": 24, "quality": 0.6, "section_id": 408}}}, "23273284": {"Id": "23273284", "PostTypeId": "2", "Body": "<p>The clause \"If a conversion function is a member function,\" was added to the working draft in <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2798.pdf\">N2798</a> as part of the Concepts wording per <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2773.pdf\">N2773 Proposed Wording for Concepts</a>. N2798 12.3.2/1 reads (I'll use <strong>bold</strong> to show additions, and <strike>strikeout</strike> to show removals):</p>\n<blockquote>\n<p id=\"so_23272181_23273284_0\"><sup>1</sup> A member function of a class <code>X</code> <strong>having no parameters, or an associated function of a concept whose sole parameter is of type <code>X</code>,</strong> with a name of the form</p>\n<p id=\"so_23272181_23273284_1\"><em>conversion-function-id:</em></p>\n<blockquote>\n<p id=\"so_23272181_23273284_8\"><code>operator</code> <em>conversion-type-id</em></p>\n</blockquote>\n<p id=\"so_23272181_23273284_3\"><em>conversion-type-id:</em></p>\n<blockquote>\n<p id=\"so_23272181_23273284_9\"><em>type-specifier-seq <strong>attribute-specifier<sub>opt</sub></strong> conversion-declarator<sub>opt</sub></em></p>\n</blockquote>\n<p id=\"so_23272181_23273284_5\"><em>conversion-declarator:</em></p>\n<blockquote>\n<p id=\"so_23272181_23273284_10\"><em>ptr-operator conversion-declarator<sub>opt</sub></em></p>\n</blockquote>\n<p id=\"so_23272181_23273284_7\">specifies a conversion from <code>X</code> to the type specified by the <em>conversion-type-id</em>. Such <strike>member</strike> functions are called conversion functions. <strike>Classes, enumerations, and <em>typedef-names</em> shall not be declared in the <em>type-specifier-seq</em>. Neither parameter types nor</strike> <strong>No</strong> return type can be specified. <strong>If a conversion function is a member function,\n  t</strong><strike>T</strike>he type of <strike>a</strike> <strong>the</strong> conversion function (8.3.5) is \u201cfunction taking no parameter returning <em>conversion-type-id</em>\u201d<strong>; if a conversion function is an associated function, the type of the conversion function is \u201cfunction taking a parameter of type <code>X</code> returning <em>conversion-type-id</em>\u201d</strong>. A conversion function is never used to convert ...</p>\n</blockquote>\n<p>The Concepts wording was removed in draft <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2960.pdf\">N2960</a>. The \"If a conversion function is a member function,\" should have also been removed at that time since it is now vestigal. Pertinent portion of N2960 \u00a712.3.2/1:</p>\n<blockquote>\n<p id=\"so_23272181_23273284_11\"><sup>1</sup> A member function of a class <code>X</code> having no parameters, <strike>or an associated function of a concept whose sole parameter is of type X,</strike> with a name of the form</p>\n<p id=\"so_23272181_23273284_12\"><em>conversion-function-id:</em></p>\n<blockquote>\n<p id=\"so_23272181_23273284_19\"><code>operator</code> <em>conversion-type-id</em></p>\n</blockquote>\n<p id=\"so_23272181_23273284_14\"><em>conversion-type-id:</em></p>\n<blockquote>\n<p id=\"so_23272181_23273284_20\"><em>type-specifier-seq attribute-specifier<sub>opt</sub> conversion-declarator<sub>opt</sub></em></p>\n</blockquote>\n<p id=\"so_23272181_23273284_16\"><em>conversion-declarator:</em></p>\n<blockquote>\n<p id=\"so_23272181_23273284_21\"><em>ptr-operator conversion-declarator<sub>opt</sub></em></p>\n</blockquote>\n<p id=\"so_23272181_23273284_18\">specifies a conversion from <code>X</code> to the type specified by the <em>conversion-type-id</em>. Such functions are called conversion functions. No return type can be specified. If a conversion function is a member function, the type of the conversion function (8.3.5) is \u201cfunction taking no parameter returning <em>conversion-type-id</em>\u201d<strike>; if a conversion function is an associated function, the type of the conversion function is \u201cfunction taking a parameter of type <code>X</code> returning <em>conversion-type-id</em>\u201d</strike>. ...</p>\n</blockquote>\n", "LastEditorUserId": "923854", "LastActivityDate": "2014-04-24T15:55:31.283", "Score": "47", "CreationDate": "2014-04-24T15:27:49.173", "ParentId": "23272181", "CommentCount": "7", "OwnerUserId": "923854", "LastEditDate": "2014-04-24T15:55:31.283"}, "23272181": {"ViewCount": "1748", "Body": "<p>C++11 Standard \u00a712.3.2/1 (emphasis mine):</p>\n<blockquote>\n<p id=\"so_23272181_23272181_0\">A <strong>member function</strong> of a class X having no parameters with a name of the form</p>\n<p id=\"so_23272181_23272181_1\"><em>conversion-function-id</em>:  </p>\n<blockquote>\n<p id=\"so_23272181_23272181_8\">operator <em>conversion-type-id</em></p>\n</blockquote>\n<p id=\"so_23272181_23272181_3\"><em>conversion-type-id</em>:  </p>\n<blockquote>\n<p id=\"so_23272181_23272181_9\"><em>type-specifier-seq</em> conversion-declarator  </p>\n</blockquote>\n<p id=\"so_23272181_23272181_5\"><em>conversion-declarator</em>:  </p>\n<blockquote>\n<p id=\"so_23272181_23272181_10\"><em>ptr-operator conversion-declarator</em> </p>\n</blockquote>\n<p id=\"so_23272181_23272181_7\">specifies a conversion from X to the type specified by the <em>conversion-type-id</em>. Such functions are called\n  conversion functions. No return type can be specified. <strong>If a conversion function is a member function</strong>, the\n  type of the conversion function (8.3.5) is \u201cfunction taking no parameter returning <em>conversion-type-id</em>\u201d.</p>\n</blockquote>\n<p>Is a conversion function always a member function, or there are cases where this is not true?</p>\n", "AcceptedAnswerId": "23273284", "Title": "There seems to be a contradiction in \u00a712.3.2/1 in the C++11 Standard", "CreationDate": "2014-04-24T14:41:47.243", "Id": "23272181", "CommentCount": "8", "FavoriteCount": "2", "PostTypeId": "1", "LastActivityDate": "2014-04-24T15:55:31.283", "Score": "32", "OwnerUserId": "1162978", "Tags": "<c++><c++11><language-lawyer>", "AnswerCount": "2"}, "23273213": {"Id": "23273213", "PostTypeId": "2", "Body": "<p>A conversion function is always a (non-<code>static</code>) member function.</p>\n<p>The \"if\" wording was not present in C++98 or C++03. I can find no reference to it in the defect reports list either. It's strange.</p>\n<hr>\n<p>As R. Martinho Fernandes <a href=\"https://stackoverflow.com/questions/23272181/there-seems-to-be-a-contradiction-in-12-3-2-1-in-the-c11-standard/23273213#comment35616734_23272181\">commented</a> the wording is strange, but not contradictory.</p>\n</hr>", "LastEditorUserId": "-1", "LastActivityDate": "2014-04-24T15:24:40.510", "Score": "6", "CreationDate": "2014-04-24T15:24:40.510", "ParentId": "23272181", "CommentCount": "0", "OwnerUserId": "464581", "LastEditDate": "2017-05-23T12:09:11.970"}});