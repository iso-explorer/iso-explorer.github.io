post_cb({"bq_ids": {"n4140": {"so_16434614_16434677_0": {"length": 31, "quality": 1.0, "section_id": 5906}}, "n3337": {"so_16434614_16434677_0": {"length": 31, "quality": 1.0, "section_id": 5678}}, "n4659": {"so_16434614_16434677_0": {"length": 31, "quality": 1.0, "section_id": 7388}}}, "16434614": {"ViewCount": "68", "Body": "<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass MyClass\n{\nprivate:\n    static int x;\nstatic int calc(int a, int b)\n{\n    cout &lt;&lt; \"chekcing !! \";\n    return b * a;\n}\n};\nint MyClass::x = 1;\nint main()\n{\n MyClass::calc(1,2);\n MyClass::x += 3;\n return 0 ;\n}\n</code></pre>\n<p>Question : As far i know Static members are not a part of class , then why do we have a check of access specifier ?</p>\n", "AcceptedAnswerId": "16434677", "Title": "Why Check of Access Specification for Static Data memebers", "CreationDate": "2013-05-08T07:04:31.000", "Id": "16434614", "CommentCount": "6", "PostTypeId": "1", "LastActivityDate": "2013-05-09T04:31:59.697", "Score": "1", "OwnerUserId": "2341698", "Tags": "<c++><static>", "AnswerCount": "1"}, "16434677": {"Id": "16434677", "PostTypeId": "2", "Body": "<ul>\n<li>Each <code>static</code> member is shared across all the instances of that class. So they don't belong to one particular class instance but they belong to the class itself.</li>\n<li><em><strong>Access specification rules are per class</strong></em></li></ul> not per object\n\n<p>From above, it is logical that the access specification rules apply to <code>static</code> members.</p>\n<p>Your confusion stems from the fact that if you check size of a class with static member there is no overhead dues to the presence of the static member. This behavior is correct. The static members do not contribute towards the size of the class but they are still a part of the class and the standard explicitly says so.</p>\n<hr>\n<p><strong>Reference:</strong><br>\n<strong>9.4.2 Static data members:</strong><br>\n<strong>\u00a71:</strong></br></br></p>\n<blockquote>\n<p id=\"so_16434614_16434677_0\"><strong>A static data member is not part of the subobjects of a class.</strong> If a static data member is declared <code>thread_local</code> there is one copy of the member per thread. If a static data member is not declared <code>thread_local</code> <strong>there is one copy of the data member that is shared by all the objects of the class.</strong></p>\n</blockquote>\n</hr>", "LastEditorUserId": "452307", "LastActivityDate": "2013-05-08T07:20:46.317", "Score": "6", "CreationDate": "2013-05-08T07:08:08.023", "ParentId": "16434614", "CommentCount": "1", "OwnerUserId": "452307", "LastEditDate": "2013-05-08T07:20:46.317"}});