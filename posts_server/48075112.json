post_cb({"48075112": {"Tags": "<c++><language-lawyer><c++17>", "ViewCount": "295", "LastEditDate": "2018-01-03T10:05:05.600", "AnswerCount": "1", "FavoriteCount": "1", "Title": "What does \"there is no smaller array object that satisfies these constraints\" mean?", "CommentCount": "1", "LastEditorUserId": "3980929", "AcceptedAnswerId": "48075216", "Score": "11", "CreationDate": "2018-01-03T10:02:22.757", "Id": "48075112", "LastActivityDate": "2018-01-03T10:23:22.123", "Body": "<p>The draft n4659 for C++17 describes the general principes of the language in chapter 4. In chapter 4.5, The C++ object model [intro.object], I cannot understand the meaning of one sentence (emphasize mine)</p>\n<blockquote>\n<p id=\"so_48075112_48075112_0\">3 If a complete object is created (8.3.4) in storage associated with another object e of type \u201carray of N\n  unsigned char\u201d or of type \u201carray of N std::byte\u201d (21.2.1), that array provides storage for the created\n  object if:<br/>\n  (3.1) \u2014 the lifetime of e has begun and not ended, and<br/>\n  (3.2) \u2014 the storage for the new object fits entirely within e, and<br/>\n  (3.3) \u2014 <strong>there is no smaller array object that satisfies these constraints.</strong><br/></p>\n</blockquote>\n<p>while examples show that an array can provide storage for elements much shorter than the array:</p>\n<pre><code>struct A { unsigned char a[32]; };\nstruct B { unsigned char b[16]; };\nA a;\nB *b = new (a.a + 8) B; // a.a provides storage for *b\nint *p = new (b-&gt;b + 4) int; // b-&gt;b provides storage for *p\n</code></pre>\n<p>here <code>*p</code> uses only 4 bytes (assuming <code>sizeof(int)</code> is 4) in a 16 bytes array. So, what is the meaning of 3.3?</p>\n", "PostTypeId": "1", "OwnerUserId": "3545273"}, "48075216": {"ParentId": "48075112", "LastActivityDate": "2018-01-03T10:23:22.123", "OwnerUserId": "817643", "Id": "48075216", "CreationDate": "2018-01-03T10:07:56.567", "LastEditorUserId": "817643", "Body": "<p>The meaning if 3.3 is to differentiate <code>a[32]</code> from <code>b[16]</code>. The former doesn't provide storage for <code>*p</code> because the latter does. It identifies the smallest unique array object that provides the region of storage where the object resides.</p>\n<p>Without 3.3 the definition would be transitive. <code>a[32]</code> would provide storage for <code>*p</code> because it ultimately provides storage for <code>b[16]</code>.</p>\n<hr>\n<p>Regarding <code>*p</code> using 4 bytes. It's important to note that the region <code>[b-&gt;b + 4, b-&gt;b +8)</code>, while being the storage where <code>*p</code> resides, is not the array object providing the storage (that region isn't an array object at all). That smallest array object would be <code>b-&gt;b</code>.</p>\n</hr>", "LastEditDate": "2018-01-03T10:23:22.123", "PostTypeId": "2", "CommentCount": "0", "Score": "9"}, "bq_ids": {"n4659": {"so_48075112_48075112_0": {"length": 33, "section_id": 7249, "quality": 0.9166666666666666}}}});