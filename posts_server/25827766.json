post_cb({"bq_ids": {"n4140": {"so_25827766_25827822_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 5964}}, "n3337": {"so_25827766_25827822_0": {"length": 10, "quality": 0.7692307692307693, "section_id": 5733}}, "n4659": {"so_25827766_25827822_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 7454}}}, "25827786": {"Id": "25827786", "PostTypeId": "2", "Body": "<p>The <code>operator ()</code> of a lambda is implicitly <code>const</code> unless the lambda is declared <code>mutable</code> - and you can't modify the data members in a <code>const</code> member function. This happens regardless of the type of the capture.</p>\n", "LastEditorUserId": "2756719", "LastActivityDate": "2014-09-13T21:23:14.950", "Score": "8", "CreationDate": "2014-09-13T21:16:40.573", "ParentId": "25827766", "CommentCount": "0", "LastEditDate": "2014-09-13T21:23:14.950", "OwnerUserId": "2756719"}, "25827822": {"Id": "25827822", "PostTypeId": "2", "Body": "<p>Inside a lambda, captured variables are immutable by default. That doesn't depend on the captured variables or the way they were captured in any way. Rather, the function call operator of the closure type is declared <code>const</code>:</p>\n<blockquote>\n<p id=\"so_25827766_25827822_0\">This function call operator or operator template is declared <code>const</code>\n  (9.3.1) if and only if the lambda-expression\u2019s\n  <em>parameter-declaration-clause</em> is not followed by <code>mutable</code>.</p>\n</blockquote>\n<p>Therefore, if you want to make the captured variables modifiable inside the body, just change the lambda to</p>\n<pre><code>auto add = [val] (int a) mutable -&gt; int {\n    val += 2;\n    return a+val;\n};\n</code></pre>\n<p>so the <code>const</code>-specifier is removed.</p>\n", "LastEditorUserId": "3647361", "LastActivityDate": "2014-11-04T21:08:48.323", "Score": "9", "CreationDate": "2014-09-13T21:20:08.673", "ParentId": "25827766", "CommentCount": "0", "LastEditDate": "2014-11-04T21:08:48.323", "OwnerUserId": "3647361"}, "25827766": {"ViewCount": "2274", "Body": "<p>I have a program as below:</p>\n<pre><code>int main()\n{\n    int val = 4;\n    auto add = [val](int a)-&gt;int{\n        val += 2;\n        return a+val;\n    };\n    cout &lt;&lt; add(3) &lt;&lt; endl;\n    cout &lt;&lt; val &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n<p>There's a compiling error in Xcode: Cannot assign to a variable captured by copy in a non-mutable lambda.</p>\n<p>My question is: if we choose to use the copy (using \"=\" or value name), can't this value be assigned a new value or changed?</p>\n", "AcceptedAnswerId": "25827822", "Title": "C++ lambda copy value in capture-list", "CreationDate": "2014-09-13T21:13:55.710", "Id": "25827766", "CommentCount": "1", "LastEditDate": "2014-09-13T21:17:38.263", "PostTypeId": "1", "LastEditorUserId": "420683", "LastActivityDate": "2014-11-04T21:08:48.323", "Score": "8", "OwnerUserId": "1993552", "Tags": "<c++><c++11><lambda>", "AnswerCount": "2"}});