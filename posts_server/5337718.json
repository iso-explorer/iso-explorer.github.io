post_cb({"bq_ids": {"n4140": {"so_5337718_5337718_1": {"length": 12, "quality": 0.8, "section_id": 5845}, "so_5337718_5337718_0": {"length": 9, "quality": 1.0, "section_id": 5845}, "so_5337718_5337718_2": {"length": 4, "quality": 0.6666666666666666, "section_id": 740}, "so_5337718_5337718_3": {"length": 10, "quality": 0.5555555555555556, "section_id": 5845}}, "n3337": {"so_5337718_5337718_1": {"length": 12, "quality": 0.8, "section_id": 5615}, "so_5337718_5337718_0": {"length": 9, "quality": 1.0, "section_id": 5615}, "so_5337718_5337718_2": {"length": 4, "quality": 0.6666666666666666, "section_id": 729}, "so_5337718_5337718_3": {"length": 10, "quality": 0.5555555555555556, "section_id": 5615}}, "n4659": {"so_5337718_5337718_1": {"length": 12, "quality": 0.8, "section_id": 7324}, "so_5337718_5337718_2": {"length": 4, "quality": 0.6666666666666666, "section_id": 798}, "so_5337718_5337718_0": {"length": 9, "quality": 1.0, "section_id": 7324}, "so_5337718_5337718_3": {"length": 10, "quality": 0.5555555555555556, "section_id": 7324}}}, "5337718": {"ViewCount": "236", "Body": "<blockquote>\n<p id=\"so_5337718_5337718_0\">A class is a type. Its name becomes a class-name (9.1) within its\n  scope.</p>\n<pre><code>    class-name:\n           identi\ufb01er\n           simple-template-id\n</code></pre>\n<p id=\"so_5337718_5337718_1\">Class-speci\ufb01er s and elaborated-type-speci\ufb01er s (7.1.6.3)\n  are used to make class-names. An object of a class consists of a (possibly empty)\n  sequence of members and base class objects.</p>\n<pre><code>    class-speci\ufb01er:\n           class-head { member-speci\ufb01cationopt }\n    class-head:\n           class-key attribute-speci\ufb01er-seqopt\n    class-head-name\n    class-virt-speci\ufb01er-seqopt\n    base-clauseopt\n    class-key attribute-speci\ufb01er-seqopt\n    base-clauseopt\n\n        class-head-name:\n           nested-name-speci\ufb01eropt class-name\n      class-virt-speci\ufb01er-seq:\n           class-virt-speci\ufb01er\n           class-virt-speci\ufb01er-seq class-virt-speci\ufb01er\n      class-virt-speci\ufb01er:\n           final\n           explicit\n      class-key:\n           class\n           struct\n           union   \n</code></pre>\n<p id=\"so_5337718_5337718_2\">A class-virt-speci\ufb01er-seq shall contain\n  at most one of each\n  class-virt-speci\ufb01er .    </p>\n<p id=\"so_5337718_5337718_3\">A class-speci\ufb01er whose class  head omits\n  the class-head-name de\ufb01nes an unnamed\n  class. [   Note: An unnamed class thus\n  can\u2019t be final  or explicit. \u2014 end\n  note ]</p>\n</blockquote>\n<p>HERE: they used the --&gt; final, explicit as class-virt-speci\ufb01er:</p>\n<p>for this shall i use like this :</p>\n<pre><code> 1) struct A{ void f();};\n    struct B final : A{void f();};\n    int main() {   return 0; }\n 2) struct A{ void f();};\n    struct B explicit : A{void f();};\n   int main() {   return 0; }\n   etc...\n</code></pre>\n<p>Can any one tell the correct usage of thi ...if it is wrong </p>\n<p>AND :Please tell me which compiler is going to support this feature.(I know VC++,GCC 4.6.0 is supporting many features)\nBut GCC is not supporting the above feature..Please suggest me what to do to check this?</p>\n", "AcceptedAnswerId": "5338050", "Title": "Is this program is correct -->using C++0x N3242", "CreationDate": "2011-03-17T10:19:30.603", "Id": "5337718", "CommentCount": "0", "LastEditDate": "2011-03-17T14:04:57.317", "PostTypeId": "1", "LastEditorUserId": "2368", "LastActivityDate": "2011-03-17T14:04:57.317", "Score": "2", "OwnerUserId": "526255", "Tags": "<c++><c++11>", "AnswerCount": "1"}, "5338050": {"Id": "5338050", "PostTypeId": "2", "Body": "<p>It looks like it would be ok, but I don't think any compiler implements this yet.</p>\n<p>It is also subject to change, as there is a request to remove this:</p>\n<p><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3234.pdf\" rel=\"nofollow\">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3234.pdf</a></p>\n", "LastActivityDate": "2011-03-17T10:56:24.653", "CommentCount": "0", "CreationDate": "2011-03-17T10:56:24.653", "ParentId": "5337718", "Score": "1", "OwnerUserId": "597607"}});