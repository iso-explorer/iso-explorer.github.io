post_cb({"bq_ids": {"n4140": {"so_41033384_41034562_1": {"length": 4, "quality": 1.0, "section_id": 5497}, "so_41033384_41033666_0": {"length": 27, "quality": 0.9310344827586207, "section_id": 6975}}, "n3337": {"so_41033384_41033666_0": {"length": 27, "quality": 0.9310344827586207, "section_id": 6721}, "so_41033384_41034562_1": {"length": 4, "quality": 1.0, "section_id": 5283}}, "n4659": {"so_41033384_41033666_0": {"length": 27, "quality": 0.9310344827586207, "section_id": 8474}, "so_41033384_41034562_1": {"length": 4, "quality": 1.0, "section_id": 6931}}}, "41033384": {"ViewCount": "194", "Body": "<pre><code>#include &lt;iostream&gt;\n\nclass ZZ\n{\npublic:\n    void print1()\n    {\n        std::cout &lt;&lt; \"hello\\n\";\n    }\n};\n\nclass YY : public ZZ\n{\npublic:\n    void print()\n    {\n        using ZZ::print1;\n        print1();\n    }\n};\n\nint main()\n{\n    YY temp;\n    temp.print();\n    getchar();\n    return 0;\n}\n</code></pre>\n<p>If I compile the code, I would get the error:\n<code>error: 'ZZ' is not a namespace or unscoped enum using ZZ::print1;</code>. I'm confused. </p>\n<hr>\n<p>If I define another namespace in this file, like this:</p>\n<pre><code>namespace tt{\n   int a;\n}\n</code></pre>\n<p>And I use this in the derived function <code>print</code>, like this:</p>\n<pre><code>void print()\n{\n    using namespace tt;\n    a = 1;\n}\n</code></pre>\n<p>The code will be compiled successfully.But I think <code>ZZ</code> is a namespace as well because if I use the <code>ZZ</code> like this:</p>\n<pre><code>public:\n   using ZZ::print1;\n   void print()\n   {\n       print1();\n   }\n</code></pre>\n<p>This code will be compiled successfully as well.</p>\n<hr>\n<p>So I don't know why this error happened when I use <code>using ZZ::print1</code> in the derived function <code>print</code>.</p>\n</hr></hr>", "AcceptedAnswerId": "41033666", "Title": "Why this error happened? When using base class function in derived class function", "CreationDate": "2016-12-08T06:45:26.403", "Id": "41033384", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2016-12-08T08:10:33.750", "Score": "0", "OwnerUserId": "5633490", "Tags": "<c++>", "AnswerCount": "3"}, "41033666": {"Id": "41033666", "PostTypeId": "2", "Body": "<p>C++ standard N3936 states:</p>\n<blockquote>\n<p id=\"so_41033384_41033666_0\">The scope\n  resolution operator :: (5.1) can be used to refer to a direct or indirect base member explicitly. This allows\n  access to a name that has been redeclared in the derived class. A derived class can itself serve as a base class\n  subject to access control;</p>\n</blockquote>\n<p><code>ZZ</code> is not a namespace but a class. Fix it by changing </p>\n<pre><code>using ZZ::print1;\nprint1();\n</code></pre>\n<p>to </p>\n<pre><code>ZZ::print1();\n</code></pre>\n<p>Read this <a href=\"https://stackoverflow.com/questions/357307/how-to-call-a-parent-class-function-from-derived-class-function\">How to call a parent class function from derived class function?</a></p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2016-12-08T07:12:53.957", "Score": "0", "CreationDate": "2016-12-08T07:04:22.063", "ParentId": "41033384", "CommentCount": "0", "LastEditDate": "2017-05-23T12:24:33.003", "OwnerUserId": "1465553"}, "41033531": {"Id": "41033531", "PostTypeId": "2", "Body": "<p>As @Cheers already pointed out, you don't need to use \"using_declaration\" here, as the function will anyhow available to derived class, because of its \"public\" access specification.</p>\n<p>If you still want to use it, then you should move the using outside to function scope. (<a href=\"http://en.cppreference.com/w/cpp/language/using_declaration#In_class_definition\" rel=\"nofollow noreferrer\">http://en.cppreference.com/w/cpp/language/using_declaration#In_class_definition</a>)</p>\n", "LastEditorUserId": "7265896", "LastActivityDate": "2016-12-08T07:46:32.153", "Score": "-1", "CreationDate": "2016-12-08T06:55:22.357", "ParentId": "41033384", "CommentCount": "0", "LastEditDate": "2016-12-08T07:46:32.153", "OwnerUserId": "7265896"}, "41034562": {"Id": "41034562", "PostTypeId": "2", "Body": "<p>Just because you can use <code>ZZ::</code> syntax does not meat that <code>ZZ</code> is a namespace. The <code>::</code> is a scope resolution operator that can be used with namespace scopes as well as with class scopes or enumeration scopes. In your case <code>ZZ::</code> refers to the scope of class <code>ZZ</code>.</p>\n<p>Also, the language specification states that </p>\n<blockquote>\n<p id=\"so_41033384_41034562_0\"><strong>7.3.3 The <em>using</em> declaration</strong></p>\n<p id=\"so_41033384_41034562_1\"><strong>8</strong> A <em>using-declaration</em> for a class member shall be a <em>member-declaration</em>.</p>\n</blockquote>\n<p>which means that a using-declaration that refers to a class member cannot appear in local scope. It can only be used in class scope.</p>\n<p>This is why using-declaration in your last code sample compiles successfully.</p>\n", "LastEditorUserId": "187690", "LastActivityDate": "2016-12-08T08:10:33.750", "Score": "1", "CreationDate": "2016-12-08T08:04:00.380", "ParentId": "41033384", "CommentCount": "0", "LastEditDate": "2016-12-08T08:10:33.750", "OwnerUserId": "187690"}});