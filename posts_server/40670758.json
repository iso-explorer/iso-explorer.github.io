post_cb({"bq_ids": {"n4140": {"so_40670758_40670911_0": {"length": 6, "quality": 0.75, "section_id": 4633}}, "n3337": {"so_40670758_40670911_0": {"length": 6, "quality": 0.75, "section_id": 4444}}, "n4659": {"so_40670758_40670911_0": {"length": 6, "quality": 0.75, "section_id": 6003}}}, "40670876": {"Id": "40670876", "PostTypeId": "2", "Body": "<p><code>Integer::display()</code> takes one parameter. You should specify it as the placeholder, otherwise the signature of functor generated from <a href=\"http://en.cppreference.com/w/cpp/utility/functional/bind\" rel=\"nofollow noreferrer\">std::bind</a> will be regarded as taking nothing, which doesn't match the signature of <code>function&lt;Json(Json)&gt;</code>.</p>\n<pre><code>auto f = bind(&amp;Integer::display, this, std::placeholders::_1);\n//                                     ~~~~~~~~~~~~~~~~~~~~~\nx[\"display\"] = f;\n</code></pre>\n<p><a href=\"http://cpp.sh/6tl3l\" rel=\"nofollow noreferrer\">LIVE</a></p>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2016-11-18T07:08:38.913", "Score": "2", "CreationDate": "2016-11-18T06:42:11.660", "ParentId": "40670758", "CommentCount": "0", "OwnerUserId": "3309790", "LastEditDate": "2016-11-18T07:08:38.913"}, "40670911": {"Id": "40670911", "PostTypeId": "2", "Body": "<p>Your problem lies here:</p>\n<pre><code>auto f = bind(&amp;Integer::display, this);\n</code></pre>\n<p><code>Integer::display</code> takes <code>Json const&amp;</code> and you bind it with no explicit arguments. My gcc rejects such a bind expression, but both cpp.sh's compiler and my clang let this compile, possibly incorrectly because the language standard states that:</p>\n<blockquote>\n<p id=\"so_40670758_40670911_0\"><code>*INVOKE* (fd, w1, w2, ..., wN)</code> [func.require] shall be a valid\n  expression for some values <em>w1, w2, ..., wN</em>, where \n  <code>N == sizeof...(bound_args)</code></p>\n</blockquote>\n<p>You can fix your problem by making your bound function object <code>f</code> proper - just add a placeholder for the <code>Json</code> argument:</p>\n<pre><code>auto f = bind(&amp;Integer::display, this, placeholders::_1);\n</code></pre>\n<p><a href=\"http://cpp.sh/577l5\" rel=\"nofollow noreferrer\">demo</a></p>\n", "LastEditorUserId": "2456565", "LastActivityDate": "2016-11-18T06:50:52.737", "Score": "2", "CreationDate": "2016-11-18T06:44:38.997", "ParentId": "40670758", "CommentCount": "0", "OwnerUserId": "2456565", "LastEditDate": "2016-11-18T06:50:52.737"}, "40670758": {"ViewCount": "115", "Body": "<p>I am unable to compile a simple program in C++11.\nYou can have a look at it here <a href=\"http://cpp.sh/9muxf\" rel=\"nofollow noreferrer\">http://cpp.sh/9muxf</a>.</p>\n<pre><code>#include &lt;functional&gt;\n#include &lt;iostream&gt;\n#include &lt;exception&gt;\n#include &lt;tuple&gt;\n#include &lt;map&gt;\n\nusing namespace std;\n\ntypedef int Json;\ntypedef string String;\n\nclass Integer/*: public PluginHelper*/\n{\npublic:\n    Json display(const Json&amp; in)\n    {\n        cout &lt;&lt; \"bad\" &lt;&lt; endl;\n        return Json();\n    }\n\n    map&lt;String, function&lt;Json(Json)&gt;&gt;* getSymbolMap()\n    {\n        static map&lt;String, function&lt;Json(Json)&gt;&gt; x;\n        auto f = bind(&amp;Integer::display, this);\n        x[\"display\"] = f;\n        return nullptr;\n    }\n};\n</code></pre>\n<p>The issue is coming at line <code>x[\"display\"] = f;</code></p>\n<p>You be of great help if you make me understand what is happening here :).\nCan <code>std::function</code> not be copied?</p>\n", "AcceptedAnswerId": "40670911", "Title": "C++ std::function operator=", "CreationDate": "2016-11-18T06:34:38.513", "Id": "40670758", "CommentCount": "5", "PostTypeId": "1", "LastActivityDate": "2016-11-18T07:08:38.913", "Score": "0", "OwnerUserId": "733213", "Tags": "<c++><c++11><stdmap><std-function><stdbind>", "AnswerCount": "2"}});