post_cb({"31068720": {"ParentId": "31068646", "CommentCount": "1", "Body": "<p>The constructor <code>string::string(const char *)</code> requires that the argument point to the first element of a null-terminated array of characters. You are violating that requirement.</p>\n<p>For reference, [string.cons]:</p>\n<blockquote>\n<pre><code>basic_string(const charT* s, const Allocator&amp; a = Allocator());\n</code></pre>\n<p id=\"so_31068646_31068720_0\"><em>Requires:</em> <code>s</code> points to an array of at least <code>traits::length(s) + 1</code> elements of <code>charT</code>.</p>\n</blockquote>\n<p>(It is <code>traits::length(s)</code>) that requires null termination of the array, see  [char.traits.require].)</p>\n", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "31068720", "Score": "1", "CreationDate": "2015-06-26T08:44:53.880", "LastActivityDate": "2015-06-26T08:44:53.880"}, "31068646": {"CommentCount": "6", "ViewCount": "62", "PostTypeId": "1", "LastEditorUserId": "3854322", "CreationDate": "2015-06-26T08:39:51.293", "LastActivityDate": "2015-06-26T09:36:40.210", "Title": "Why can't I construct a string with a NULL char* in C++?", "LastEditDate": "2015-06-26T09:36:40.210", "Id": "31068646", "Score": "-1", "Body": "<p>In C++, why does the following code throw a runtime error? Could someone explain this for me?</p>\n<pre><code>char* p = NULL; \nstring str(p); \n</code></pre>\n<p>I tried this in VS2013 and Codeblocks, but both got a runtime error.</p>\n", "Tags": "<c++>", "OwnerUserId": "5052185", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_31068646_31068720_0": {"section_id": 1575, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_31068646_31068720_0": {"section_id": 1641, "quality": 0.8571428571428571, "length": 6}}, "n4659": {"so_31068646_31068720_0": {"section_id": 1728, "quality": 0.8571428571428571, "length": 6}}}, "31068891": {"ParentId": "31068646", "CommentCount": "1", "Body": "<p>The constructor of the string class expects a pointer to a valid string. And a null-pointer isn't. But the run-time library might or might not check whether the given pointer is null. So, in one environment the code might simply crash and in another the run-time library might handle the error in another way, for example by throwing an exception.</p>\n<p>Note the by</p>\n<pre><code>char* p = NULL;\n</code></pre>\n<p>you have not created an empty string, but a pointer with a value of zero, thus pointing to an illegal address. If you wanted to create a pointer to an empty string you should have written:</p>\n<pre><code>char* p = \"\";\n</code></pre>\n", "OwnerUserId": "5049516", "PostTypeId": "2", "Id": "31068891", "Score": "0", "CreationDate": "2015-06-26T08:53:42.500", "LastActivityDate": "2015-06-26T08:53:42.500"}});