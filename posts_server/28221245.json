post_cb({"28221486": {"ParentId": "28221245", "CommentCount": "2", "Body": "<p>C++11 [class.base.init]/8:</p>\n<blockquote>\n<p id=\"so_28221245_28221486_0\">In a non-delegating constructor, if a given non-static data member or base class is not designated by a <em>mem-initializer-id</em> (including the case where there is no <em>mem-initializer-list</em> because the constructor has no <em>ctor-initializer</em>) and the entity is not a virtual base class of an abstract class (10.4), then</p>\n<p id=\"so_28221245_28221486_1\">\u2014 if the entity is a non-static data member that has a <em>brace-or-equal-initializer</em>, the entity is initialized as specified in 8.5;</p>\n<p id=\"so_28221245_28221486_2\">\u2014 ...</p>\n</blockquote>\n<p>So, in your case, a default-initialized <code>Foo</code> has <code>_a == 9</code> and <code>_b == 3</code> since neither <code>_a</code> or <code>_b</code> appear in the (absent) <em>mem-initializer-list</em>. <code>Foo(7)</code> will have <code>_a == 7</code> and <code>_b == 3</code>, since <code>_b</code> does not appear in the <em>mem-initializer-list</em>.</p>\n", "OwnerUserId": "923854", "PostTypeId": "2", "Id": "28221486", "Score": "2", "CreationDate": "2015-01-29T18:01:16.473", "LastActivityDate": "2015-01-29T18:01:16.473"}, "bq_ids": {"n4140": {"so_28221245_28221486_1": {"section_id": 435, "quality": 1.0, "length": 8}, "so_28221245_28221486_0": {"section_id": 435, "quality": 0.6538461538461539, "length": 17}}, "n3337": {"so_28221245_28221486_1": {"section_id": 427, "quality": 1.0, "length": 8}, "so_28221245_28221486_0": {"section_id": 427, "quality": 0.9615384615384616, "length": 25}}, "n4659": {"so_28221245_28221486_1": {"section_id": 454, "quality": 0.875, "length": 7}, "so_28221245_28221486_0": {"section_id": 454, "quality": 0.6538461538461539, "length": 17}}}, "28221245": {"CommentCount": "1", "ViewCount": "29", "PostTypeId": "1", "LastEditorUserId": "112755", "CreationDate": "2015-01-29T17:47:47.967", "LastActivityDate": "2015-01-29T18:15:18.970", "Title": "how does member declaration with assignment relate to ctors?", "AcceptedAnswerId": "28221486", "LastEditDate": "2015-01-29T18:15:18.970", "Id": "28221245", "Score": "0", "Body": "<p>Sorry - I'm sure I'm just not finding any answers because I don't know the nomenclature!</p>\n<pre><code>class Foo\n{\npublic:\n  Foo() { }   // default ctor\n  explicit Foo(int a) : _a(a) { }   // semi-explicit - but what is _b's value??\nprotected:\n  int _a = 9;  // HOW DOES THIS RELATE TO EACH OF THE CTORS?!\n  int _b = 3;  // HOW DOES THIS RELATE TO EACH OF THE CTORS?!\n};\n</code></pre>\n<p>By explicitly specifying a default ctor w/o specifying _a or _b, do the declared assignments happen (_a = 9, _b = 3) or do those only happen if I <em>don't</em> create a default ctor (or I declare as Foo() = default;)?</p>\n", "Tags": "<c++11><constructor>", "OwnerUserId": "112755", "AnswerCount": "1"}});