post_cb({"25345530": {"ParentId": "25345511", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2014-08-17T01:28:10.447", "Score": "2", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T10:28:16.603", "Id": "25345530", "OwnerUserId": "3002139", "Body": "<p>The <a href=\"http://en.cppreference.com/w/cpp/language/explicit_cast\" rel=\"nofollow noreferrer\">C-style cast</a> <code>(int *)</code> performs a <a href=\"http://en.cppreference.com/w/cpp/language/const_cast\" rel=\"nofollow noreferrer\"><code>const_cast</code></a> on <code>b</code>. Why this is bad has been explained <a href=\"https://stackoverflow.com/questions/20602859/behavior-of-const-cast-in-c\">plenty</a> <a href=\"https://stackoverflow.com/questions/25209838/is-this-undefined-behavior-with-const-cast\">of</a> times on SO.</p>\n", "LastActivityDate": "2014-08-17T01:28:10.447"}, "25345511": {"CommentCount": "2", "ViewCount": "61", "ClosedDate": "2017-07-31T19:41:58.827", "CreationDate": "2014-08-17T01:24:30.900", "LastActivityDate": "2014-08-17T01:29:42.100", "Title": "Why the deference of pointer to a const is changed while the const is still const?", "PostTypeId": "1", "Id": "25345511", "Score": "-1", "Body": "<pre><code>const int c= 7 ;\nconst int * b= &amp;c ;\nint *a = (int *)b ;\n*a = 6; \ncout&lt;&lt;*a&lt;&lt;endl;\ncout&lt;&lt;*b&lt;&lt;endl;\ncout&lt;&lt;c&lt;&lt;endl;\n</code></pre>\n<p>I run it by g++ complier , and the output is :\n6 \n6\n7\nI know it's inadvisable, but I am confused with it. I think the pointer b points to c , which is const , but why *b is changed to 6 while c is still equal to 7 ?  they refer to the same stuff , why different?<br>\ncould you explain how this code works internally ?</br></p>\n", "Tags": "<c++>", "OwnerUserId": "3013527", "AnswerCount": "2"}, "25345538": {"ParentId": "25345511", "CommentCount": "0", "CreationDate": "2014-08-17T01:29:42.100", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "25345538", "Score": "4", "Body": "<p>\u00a77.1.6.1 [dcl.type.cv]/p4:</p>\n<blockquote>\n<p id=\"so_25345511_25345538_0\">Except that any class member declared <code>mutable</code> (7.1.1) can be modified,\n  any attempt to modify a <code>const</code> object during its lifetime (3.8) results\n  in undefined behavior.</p>\n</blockquote>\n<p>Undefined behavior means anything can happen. As far as the language is concerned, your program may appear to run correctly, may crash, may produce incorrect results, may chomp up your hard drive, or may blow up the planet. </p>\n<p>In this particular case, it is likely that the compiler simply generated code that prints out <code>7</code> directly, assuming that <code>c</code> is <code>7</code>, which it is allowed to do since <code>c</code> is <code>const</code>.</p>\n", "LastActivityDate": "2014-08-17T01:29:42.100"}, "bq_ids": {"n4140": {"so_25345511_25345538_0": {"section_id": 5433, "quality": 0.9444444444444444, "length": 17}}, "n3337": {"so_25345511_25345538_0": {"section_id": 5228, "quality": 0.9444444444444444, "length": 17}}, "n4659": {"so_25345511_25345538_0": {"section_id": 6861, "quality": 0.9444444444444444, "length": 17}}}});