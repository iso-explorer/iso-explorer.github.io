post_cb({"4842082": {"ParentId": "4842056", "CommentCount": "1", "Body": "<p>Static variables are stored in a special memory area called BSS, while instances of a class are stored in a heap or on a stack. So, static members are stored separately.</p>\n", "OwnerUserId": "595273", "PostTypeId": "2", "Id": "4842082", "Score": "-1", "CreationDate": "2011-01-30T09:10:26.127", "LastActivityDate": "2011-01-30T09:10:26.127"}, "4842120": {"ParentId": "4842056", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>No.</p>\n<p>static members don't belong to the instances of class. they don't increase instances and class size even by 1 bit!</p>\n<pre><code>struct A\n{\n    int i;\n    static int j;\n};\nstruct B\n{\n    int i;\n};\nstd::cout &lt;&lt; (sizeof(A) == sizeof(B)) &lt;&lt; std::endl;\n</code></pre>\n<p>Output:</p>\n<pre><code>1\n</code></pre>\n<p>That is, size of <code>A</code> and <code>B</code> is exactly same. static members are more like global objects accessed through <code>A::j</code>. </p>\n<p>See demonstration at ideone : <a href=\"http://www.ideone.com/YeYxe\" rel=\"noreferrer\">http://www.ideone.com/YeYxe</a></p>\n<hr>\n<p>$9.4.2/1 from the C++ Standard (2003),</p>\n<blockquote>\n<p id=\"so_4842056_4842120_0\"><strong>A static data member is not part of\n  the subobjects of a class. There is\n  only one copy of a static data member\n  shared by all the objects of the\n  class.</strong></p>\n</blockquote>\n<p>$9.4.2/3 and 7 from the Standard,</p>\n<blockquote>\n<p id=\"so_4842056_4842120_1\"><strong>once the static data member has been\n  defined, it exists even if no objects\n  of its class have been created.</strong></p>\n<p id=\"so_4842056_4842120_2\"><strong>Static data members are initialized\n  and destroyed exactly like non-local\n  objects (3.6.2, 3.6.3)</strong>.</p>\n</blockquote>\n<p>As I said, static members are more like  global objects!</p>\n</hr>", "OwnerUserId": "415784", "LastEditorUserId": "415784", "LastEditDate": "2011-01-30T09:27:40.717", "Id": "4842120", "Score": "27", "CreationDate": "2011-01-30T09:18:58.977", "LastActivityDate": "2011-01-30T09:27:40.717"}, "4842072": {"ParentId": "4842056", "CommentCount": "1", "Body": "<p>The C++ standard doesn't explicitly state when static memory is allocated, as long as it is available on first use.  That said, it is most likely allocated during program initialization, thus guaranteeing its presence as soon as it is required, without needing special-case code to detect and perform allocation on access.</p>\n<p>The purpose of putting static data into a class is the same as putting any other data into classes.  By putting the data into a class structure, you are defining an encapsulating namespace, as well as being able to control access using accessor and mutator methods; this, in turn, will allow you to validate data going into the static memory store, and to ensure consistency throughout the use of this data.</p>\n", "OwnerUserId": "415892", "PostTypeId": "2", "Id": "4842072", "Score": "7", "CreationDate": "2011-01-30T09:08:51.873", "LastActivityDate": "2011-01-30T09:08:51.873"}, "bq_ids": {"n4140": {"so_4842056_4842120_2": {"section_id": 5911, "quality": 0.7272727272727273, "length": 8}, "so_4842056_4842120_1": {"section_id": 5907, "quality": 0.9285714285714286, "length": 13}, "so_4842056_4842120_0": {"section_id": 5906, "quality": 0.9375, "length": 15}}, "n3337": {"so_4842056_4842120_2": {"section_id": 5683, "quality": 0.7272727272727273, "length": 8}, "so_4842056_4842120_1": {"section_id": 5679, "quality": 0.9285714285714286, "length": 13}, "so_4842056_4842120_0": {"section_id": 5678, "quality": 0.9375, "length": 15}}, "n4659": {"so_4842056_4842120_2": {"section_id": 7393, "quality": 0.7272727272727273, "length": 8}, "so_4842056_4842120_1": {"section_id": 7389, "quality": 0.9285714285714286, "length": 13}, "so_4842056_4842120_0": {"section_id": 7388, "quality": 0.9375, "length": 15}}}, "4842056": {"CommentCount": "0", "AcceptedAnswerId": "4842120", "PostTypeId": "1", "LastEditorUserId": "240733", "CreationDate": "2011-01-30T09:04:31.607", "LastActivityDate": "2011-01-30T09:27:40.717", "LastEditDate": "2011-01-30T09:15:27.677", "ViewCount": "12666", "FavoriteCount": "5", "Title": "Do static members of a class occupy memory if no object of that class is created?", "Id": "4842056", "Score": "13", "Body": "<p>Say I have a class and I have a static member in it, but I don't create any objects of that type. Will the memory be occupied for the static variable? If it would be occupied, what is the point of putting it in a class?</p>\n", "Tags": "<c++><class><static>", "OwnerUserId": "379888", "AnswerCount": "3"}});