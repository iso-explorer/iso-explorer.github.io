post_cb({"19483844": {"ParentId": "19483804", "CommentCount": "1", "Body": "<p>Optional arguments must be the last. I.e. non-optional arguments cannot follow an optional one.</p>\n<p>How would you call</p>\n<pre><code>T foo( T s = 0, const vector &lt; T &gt; &amp;v)\n</code></pre>\n<p>with <em>just</em> a <code>v</code>, and no <code>s</code>? </p>\n<p>How would the compiler spot this if </p>\n<ul>\n<li><code>s</code> and <code>v</code> had the same type, or</li>\n<li>there was an overload of <code>foo</code> taking just a <code>const vector&lt;T&gt;&amp;</code>?</li>\n</ul>\n", "OwnerUserId": "85371", "PostTypeId": "2", "Id": "19483844", "Score": "5", "CreationDate": "2013-10-20T22:56:01.823", "LastActivityDate": "2013-10-20T22:56:01.823"}, "19483804": {"CommentCount": "1", "ViewCount": "115", "PostTypeId": "1", "LastEditorUserId": "63550", "CreationDate": "2013-10-20T22:50:22.630", "LastActivityDate": "2015-06-23T22:02:02.027", "Title": "Default parameter and templates", "AcceptedAnswerId": "19483844", "LastEditDate": "2015-06-23T22:02:02.027", "Id": "19483804", "Score": "1", "Body": "<p>Why does this function give me an error:</p>\n<pre><code>template &lt; typename T &gt;\nT foo( T s = 0, const vector &lt; T &gt; &amp;v)\n{\n    ...\n}\n</code></pre>\n<blockquote>\n<p id=\"so_19483804_19483804_0\">error: default argument missing for parameter 2 of \u2018template summable sum(summable, const std::vector&amp;)\u2019</p>\n</blockquote>\n<p>And why doesn't the following?:</p>\n<pre><code>template &lt; typename T &gt;\nT foo( const vector &lt; T &gt; &amp;v, T s = 0)\n{\n    ...\n}\n</code></pre>\n", "Tags": "<c++><templates><default-value>", "OwnerUserId": "1596786", "AnswerCount": "3"}, "19483845": {"ParentId": "19483804", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>If argument has a default value, than all following arguments need to have default value as well.</p>\n<p>Rationale is given in other answers, so I'll give you a quote from C++11 standard:</p>\n<blockquote>\n<p id=\"so_19483804_19483845_0\"><strong>8.3.6 Default arguments [dcl.fct.default]</strong></p>\n<p id=\"so_19483804_19483845_1\">4 (...) In a given function declaration, each parameter subsequent to a\n  parameter with a default argument shall have a default argument\n  supplied in this or a previous declaration or shall be a function\n  parameter pack.</p>\n</blockquote>\n", "OwnerUserId": "1126943", "LastEditorUserId": "1126943", "LastEditDate": "2013-10-20T23:16:32.513", "Id": "19483845", "Score": "2", "CreationDate": "2013-10-20T22:56:05.340", "LastActivityDate": "2013-10-20T23:16:32.513"}, "bq_ids": {"n4140": {"so_19483804_19483845_1": {"section_id": 3255, "quality": 1.0, "length": 18}}, "n3337": {"so_19483804_19483845_1": {"section_id": 3127, "quality": 1.0, "length": 18}}, "n4659": {"so_19483804_19483845_1": {"section_id": 4013, "quality": 1.0, "length": 18}}}, "19483848": {"ParentId": "19483804", "CommentCount": "0", "Body": "<p>Arguments with defaults need to be the last arguments.  In the first, you have s with a default of 0, then v with no default.  You cannot have an argument with no default following an argument with a default.</p>\n<p>How would you call such as argument using its defaults? <code>foo(/*default*/,vector)</code> ?</p>\n", "OwnerUserId": "138719", "PostTypeId": "2", "Id": "19483848", "Score": "0", "CreationDate": "2013-10-20T22:56:53.600", "LastActivityDate": "2013-10-20T22:56:53.600"}});