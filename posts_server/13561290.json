post_cb({"bq_ids": {"n4140": {"so_13561290_13561330_0": {"length": 22, "quality": 1.0, "section_id": 3893}, "so_13561290_13561346_0": {"length": 9, "quality": 1.0, "section_id": 3893}}, "n3337": {"so_13561290_13561330_0": {"length": 22, "quality": 1.0, "section_id": 3753}, "so_13561290_13561346_0": {"length": 9, "quality": 1.0, "section_id": 3753}}, "n4659": {"so_13561290_13561330_0": {"length": 22, "quality": 1.0, "section_id": 4779}, "so_13561290_13561346_0": {"length": 9, "quality": 1.0, "section_id": 4779}}}, "13561330": {"Id": "13561330", "PostTypeId": "2", "Body": "<p>The MS compiler seems to do it right. Here's what the standard says (6.4.2/5):</p>\n<blockquote>\n<p id=\"so_13561290_13561330_0\">If no case constant matches the condition, and if there is a <code>default</code> label, control\n  passes to the statement labeled by the <code>default</code> label. If no case matches and if there is no <code>default</code> then none of the statements in the switch is executed.</p>\n</blockquote>\n", "LastActivityDate": "2012-11-26T08:47:21.417", "CommentCount": "0", "CreationDate": "2012-11-26T08:47:21.417", "ParentId": "13561290", "Score": "2", "OwnerUserId": "596781"}, "13561346": {"Id": "13561346", "PostTypeId": "2", "Body": "<p>[stmt.switch] states:</p>\n<blockquote>\n<p id=\"so_13561290_13561346_0\">If no case matches and if there is no default then none of the\n  statements in the switch is executed.</p>\n</blockquote>\n<p>So yes, VS follows the standard in this regard.</p>\n", "LastActivityDate": "2012-11-26T08:48:30.300", "CommentCount": "0", "CreationDate": "2012-11-26T08:48:30.300", "ParentId": "13561290", "Score": "0", "OwnerUserId": "1782465"}, "13561325": {"Id": "13561325", "PostTypeId": "2", "Body": "<p>It can cause a segmentation fault only if skipped case breaks your code. Otherwise no compiler should emit code that will generate a segmentation fault.</p>\n<p>Example that will generate a fault:</p>\n<pre><code> switch(flag) {\n     case Type1: p = malloc(200); break;\n     case Type2: p = malloc(100); break;\n }\n memcpy(p, source, 10);\n</code></pre>\n", "LastActivityDate": "2012-11-26T08:47:02.523", "CommentCount": "3", "CreationDate": "2012-11-26T08:47:02.523", "ParentId": "13561290", "Score": "1", "OwnerUserId": "390913"}, "13561290": {"ViewCount": "606", "Body": "<p>I'm a big fan of skipping the \"default:\" label in a enum-switch-case. So I get compiler warnings, when the enum has a new value which is not handled by the switch-case.</p>\n<p>Now a colleague stated, that when passing an integer to this switch-case which is not covered by the enumeration I will get a segmentation fault.</p>\n<p>At least the gcc we re using handles it correctly. Also the <a href=\"http://msdn.microsoft.com/en-us/library/k0t5wee3.aspx\" rel=\"nofollow\">Visual Studio documentation</a> says: If \"none of the constants match the constants in the case labels and default label is not present &gt;&gt;&gt; Control is transferred to the statement after the switch statement.\"</p>\n<p>Is this the standard and thus the behaviour of all (or at least the most) compilers?</p>\n", "AcceptedAnswerId": "13561330", "Title": "Invalid values in Switch-Case without default label", "CreationDate": "2012-11-26T08:43:36.803", "Id": "13561290", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2012-11-26T08:48:30.300", "Score": "0", "OwnerUserId": "494725", "Tags": "<c++><switch-statement>", "AnswerCount": "3"}});