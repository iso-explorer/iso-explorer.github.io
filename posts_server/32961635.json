post_cb({"bq_ids": {"n4140": {"so_32961635_32961635_0": {"length": 19, "quality": 0.95, "section_id": 435}}, "n3337": {"so_32961635_32961635_0": {"length": 19, "quality": 0.95, "section_id": 427}}, "n4659": {"so_32961635_32961635_0": {"length": 19, "quality": 0.95, "section_id": 454}}}, "32961635": {"ViewCount": "108", "Body": "<p>Looking for an explanation of some fact in the standard I found this:</p>\n<blockquote>\n<p id=\"so_32961635_32961635_0\">An abstract class (10.4) is never a most derived class, thus its\n  constructors never initialize virtual base classes, therefore the\n  corresponding mem-initializers may be omitted.</p>\n</blockquote>\n<p>This is from the paragraph <code>12.6.2</code> of the final working draft. Since, It's embedded in <em>Note</em> and no example is provided, I don't know how it should be treated. So, I tried the example:</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct B{\n    ~B(){}\n    B(){ std::cout &lt;&lt; \"B()\" &lt;&lt; std::endl; }\n    B(int){ std::cout &lt;&lt; \"B(int)\" &lt;&lt; std::endl; }\n};\n\nstruct A : virtual B\n{\n    int s;\n    virtual void foo() = 0;\n    A(int a) : B(a) { std::cout &lt;&lt; \"A(int)\" &lt;&lt; std::endl; }\n};\n\nstruct D : A{ \n    D() : A(10){ }\n    virtual void foo(){ }    \n} d;\n\nint main()\n{\n}\n</code></pre>\n<p>and got the output</p>\n<pre><code>B()\nA(int)\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/b16c68226f072ced\" rel=\"nofollow\">http://coliru.stacked-crooked.com/a/b16c68226f072ced</a></p>\n<p>in spite of specifying the <code>B</code>'s constructor in the <em>ctor-initializer</em>. Is that what they mean?</p>\n", "Title": "Virtual base class initialization", "CreationDate": "2015-10-06T04:16:33.460", "LastActivityDate": "2015-10-06T04:22:42.697", "CommentCount": "2", "FavoriteCount": "1", "PostTypeId": "1", "Id": "32961635", "Score": "2", "OwnerUserId": "4671213", "Tags": "<c++><constructor>", "AnswerCount": "1"}, "32961694": {"Id": "32961694", "PostTypeId": "2", "Body": "<p>In this example, <code>D</code> is the most derived class and will construct B using the default (no parameter) constructor.</p>\n<p>An abstract class is never most derived because you have to derive from it in order to instantiate it.</p>\n", "LastActivityDate": "2015-10-06T04:22:42.697", "CommentCount": "0", "CreationDate": "2015-10-06T04:22:42.697", "ParentId": "32961635", "Score": "1", "OwnerUserId": "5231607"}});