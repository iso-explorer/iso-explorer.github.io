post_cb({"2315885": {"ViewCount": "487", "Body": "<p>Is <code>using namespace std;</code> a standard C++ function?</p>\n", "Title": "Is 'using namespace std;' a standard C++ function?", "CreationDate": "2010-02-23T03:16:38.827", "LastActivityDate": "2010-02-23T08:53:13.017", "CommentCount": "0", "LastEditDate": "2010-02-23T08:53:13.017", "PostTypeId": "1", "LastEditorUserId": "168225", "Id": "2315885", "Score": "2", "OwnerUserId": "69467", "Tags": "<c++><namespaces>", "AnswerCount": "3"}, "2316075": {"Id": "2316075", "PostTypeId": "2", "Body": "<p>No function is part of the C++ language; it's something you write or something which is already written as library and made available to you (like Standard C++ Library). Such libraries have functions and variables put up inside segregations called <strong>namespaces</strong>. To call a function within a namespace, you follow the syntax <code>namespace::function_name()</code> syntax.</p>\n<p>E.g. <code>std::cout &lt;&lt; \"Hi!\";</code></p>\n<p>While you always call a function with the function's name followed by parenthesis within with you pass arguments to the function, if any. Like <code>function_name(args);</code>. So to what you've asked: <strong>No, it isn't a function.</strong></p>\n<p><code>using namespace std</code> is a <em>directive</em> (you can think of it as a declaration to the compiler saying whatever is inside the <em>std</em> namespace can be used without any qualifiers from here on till the end of this compilation unit (.cpp + headers associated within) i.e.</p>\n<p><code>std::cout &lt;&lt; \"Hello!\";</code> can be used as <code>cout &lt;&lt; \"Hello!\";</code> from there on.</p>\n", "LastActivityDate": "2010-02-23T04:18:24.197", "CommentCount": "0", "CreationDate": "2010-02-23T04:18:24.197", "ParentId": "2315885", "Score": "0", "OwnerUserId": "183120"}, "2315890": {"Id": "2315890", "PostTypeId": "2", "Body": "<p>No. It's what's called a <code>using directive</code>. I's outlined in \u00a77.3.4 in the standard:</p>\n<blockquote>\n<p id=\"so_2315885_2315890_0\">A using-directive specifies that the names in the nominated namespace can be used in the scope in which the using-directive appears after the using-directive. During unqualified name lookup (3.4.1), the names appear as if they were declared in the nearest enclosing namespace which contains both the using-directive and the nominated namespace.</p>\n</blockquote>\n<p>Essentially, it takes everything in the namespace you specify and moves in into the namespace the directive was used.</p>\n", "LastActivityDate": "2010-02-23T03:18:34.770", "CommentCount": "13", "CreationDate": "2010-02-23T03:18:34.770", "ParentId": "2315885", "Score": "15", "OwnerUserId": "87234"}, "2315900": {"Id": "2315900", "PostTypeId": "2", "Body": "<p>It is not a function. </p>\n<p>In the following </p>\n<pre><code> using namespace std; \n</code></pre>\n<p>the keyword <code>using</code> is used as a directive to introduce an entire namespace (<code>std</code> in this case).</p>\n<p><strong>Note</strong>: Always prefer <code>using</code> <em>declaration</em> over <code>using</code> <em>directive</em></p>\n", "LastActivityDate": "2010-02-23T03:22:13.143", "CommentCount": "0", "CreationDate": "2010-02-23T03:22:13.143", "ParentId": "2315885", "Score": "0", "OwnerUserId": "165520"}, "bq_ids": {"n4140": {"so_2315885_2315890_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 5510}}, "n3337": {"so_2315885_2315890_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 5296}}, "n4659": {"so_2315885_2315890_0": {"length": 28, "quality": 0.9655172413793104, "section_id": 6945}}}});