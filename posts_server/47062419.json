post_cb({"47062483": {"ParentId": "47062419", "CommentCount": "12", "CreationDate": "2017-11-01T19:41:22.597", "OwnerUserId": "114421", "PostTypeId": "2", "Id": "47062483", "Score": "5", "Body": "<p>Don't confuse the pointer's value with what it points <em>to</em>.  After the delete, the pointer's value is unchanged.  It isn't set to <code>nullptr</code> or anything like that.  The thing it points <em>to</em> is undefined.  All to often, it ends up pointing to exactly what it did before, which leads to all manner of interesting bugs.</p>\n", "LastActivityDate": "2017-11-01T19:41:22.597"}, "47063551": {"ParentId": "47062419", "CommentCount": "0", "CreationDate": "2017-11-01T20:57:09.607", "OwnerUserId": "1505939", "PostTypeId": "2", "Id": "47063551", "Score": "4", "Body": "<p>A few other answers incorrectly say \"the value doesn't change\". However it does:  before the deletion it was valid, and after the deletion it is invalid; this is a change.</p>\n<p>Further, the representation of the value may change too. For example the implementation could set <code>a</code> to be null, or some pattern that the debugger will recognize to help with detecting invalid uses of variables.</p>\n", "LastActivityDate": "2017-11-01T20:57:09.607"}, "47062647": {"ParentId": "47062419", "CommentCount": "14", "CreationDate": "2017-11-01T19:52:22.267", "OwnerUserId": "2877241", "PostTypeId": "2", "Id": "47062647", "Score": "6", "Body": "<p>According to the C++ Standard (6.7 Storage duration)</p>\n<blockquote>\n<p id=\"so_47062419_47062647_0\">4 When the end of the duration of a region of storage is reached, the\n  values of all pointers representing the address of any part of that\n  region of storage <strong>become invalid pointer values</strong> (6.9.2).\n  Indirection through an invalid pointer value and passing an invalid\n  pointer value to a deallocation function have undefined behavior. Any\n  other use of an invalid pointer value has implementation-defined\n  behavior.</p>\n</blockquote>\n<p>So after this expression statement</p>\n<pre><code>delete a;\n</code></pre>\n<p>the value of the pointer <code>a</code> is not changed but has became invalid. Neither object exists at this address.</p>\n", "LastActivityDate": "2017-11-01T19:52:22.267"}, "47062419": {"CommentCount": "14", "ViewCount": "290", "CreationDate": "2017-11-01T19:37:13.700", "LastActivityDate": "2017-11-01T20:57:09.607", "Title": "What does a deleted pointer point to?", "FavoriteCount": "1", "PostTypeId": "1", "Id": "47062419", "Score": "6", "Body": "<pre><code>int*a=nullptr; //NULL before C++11\na=new int(1);\ndelete a;\n</code></pre>\n<p>What does <code>a</code> point to now? Does it point to <code>nullptr</code> or does it point to the address it was pointing to before it was deleted?</p>\n", "Tags": "<c++><c++11>", "OwnerUserId": "8340131", "AnswerCount": "4"}, "47062455": {"ParentId": "47062419", "CommentCount": "0", "CreationDate": "2017-11-01T19:39:42.920", "OwnerUserId": "721269", "PostTypeId": "2", "Id": "47062455", "Score": "3", "Body": "<p>It doesn't point to anything. There is nothing useful you can do with its value now.</p>\n", "LastActivityDate": "2017-11-01T19:39:42.920"}, "bq_ids": {"n4140": {"so_47062419_47062647_0": {"section_id": 7183, "quality": 0.6097560975609756, "length": 25}}, "n4659": {"so_47062419_47062647_0": {"section_id": 8671, "quality": 0.926829268292683, "length": 38}}}});