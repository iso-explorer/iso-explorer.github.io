post_cb({"29729671": {"CommentCount": "3", "ViewCount": "336", "CreationDate": "2015-04-19T12:10:41.000", "LastActivityDate": "2015-04-19T12:40:22.863", "Title": "this pointer in lambda-capture by reference", "AcceptedAnswerId": "29729981", "PostTypeId": "1", "Id": "29729671", "Score": "1", "Body": "<pre><code>struct CL\n{\n    int i;\n    void fnc()\n    {\n        [&amp;this](){i=1;};  // (1) error\n        [&amp;](){i=1;};      // (2) ok\n    }\n};\n</code></pre>\n<p>Here is 1st case which doesn't work, but second case does. Why is that?<br>\nI see Standard 5.1.2/1:</br></p>\n<blockquote>\n<p id=\"so_29729671_29729671_0\"><em>capture:</em><br>\n<em>identifier</em><br>\n<em>&amp; identifier</em><br>\n<em>this</em></br></br></br></p>\n</blockquote>\n<p>(i.e. <em>&amp;this</em> doesn't exist)  </p>\n<p>And 5.1.2/15:</p>\n<blockquote>\n<p id=\"so_29729671_29729671_1\">An entity is captured by reference if it is implicitly or explicitly\n  captured but not captured by copy</p>\n</blockquote>\n<p>In second case \"this\" doesn't captured by copy according 5.1.2/14:</p>\n<blockquote>\n<p id=\"so_29729671_29729671_2\"><strong>An entity is captured by copy if it is implicitly captured and the\n  capture-default is =</strong> or if it is explicitly captured with a capture\n  that does not include an &amp;</p>\n</blockquote>\n<p>But how can I capture \"this\" pointer by value <em>explicitly</em>? Or is it possible only implicitly with <em>default-capture</em> &amp; ?</p>\n", "Tags": "<c++><c++11><lambda>", "OwnerUserId": "3514538", "AnswerCount": "1"}, "29729981": {"ParentId": "29729671", "CommentCount": "0", "CreationDate": "2015-04-19T12:40:22.863", "OwnerUserId": "1670129", "PostTypeId": "2", "Id": "29729981", "Score": "5", "Body": "<p>Formally, <code>[&amp;]</code> does indeed capture <code>this</code> by reference, per <strong>5.1.2/16</strong> \"An entity is <em>captured by reference</em> if it is implicitly or explicitly captured but not captured by copy.\" But that doesn't matter, because</p>\n<blockquote>\n<p id=\"so_29729671_29729981_0\"><strong>5.1.2/18</strong> ... If <code>this</code> is captured, each odr-use of <code>this</code> is transformed into an access to the corresponding unnamed data member of the closure type, cast (5.4) to the type of <code>this</code>. [Note: The cast ensures that the transformed expression is a prvalue. \u2014end note]</p>\n</blockquote>\n<p>So for <code>this</code>, capture-by-copy and capture-by-reference are indistinguishable. For all practical purposes, <code>this</code> is always captured by copy.</p>\n", "LastActivityDate": "2015-04-19T12:40:22.863"}, "bq_ids": {"n4140": {"so_29729671_29729671_2": {"section_id": 5974, "quality": 0.7272727272727273, "length": 8}, "so_29729671_29729981_0": {"section_id": 5977, "quality": 0.7916666666666666, "length": 19}, "so_29729671_29729671_1": {"section_id": 5975, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_29729671_29729671_2": {"section_id": 5742, "quality": 0.9090909090909091, "length": 10}, "so_29729671_29729981_0": {"section_id": 5745, "quality": 0.7916666666666666, "length": 19}, "so_29729671_29729671_1": {"section_id": 5743, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_29729671_29729981_0": {"section_id": 7474, "quality": 0.75, "length": 18}, "so_29729671_29729671_2": {"section_id": 7473, "quality": 0.7272727272727273, "length": 8}, "so_29729671_29729671_1": {"section_id": 7475, "quality": 0.8888888888888888, "length": 8}}}});