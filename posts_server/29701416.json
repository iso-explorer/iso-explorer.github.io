post_cb({"bq_ids": {"n4140": {"so_29701416_29701482_0": {"length": 35, "quality": 0.8974358974358975, "section_id": 6086}}, "n3337": {"so_29701416_29701482_0": {"length": 35, "quality": 0.8974358974358975, "section_id": 5854}}, "n4659": {"so_29701416_29701482_0": {"length": 34, "quality": 0.8717948717948718, "section_id": 7582}}}, "29701482": {"Id": "29701482", "PostTypeId": "2", "Body": "<p>A <code>new</code> expression always returns a pointer. A <code>new</code> expression for an array yields, according to [expr.new], emphasis mine:</p>\n<blockquote>\n<p id=\"so_29701416_29701482_0\">When the allocated object is an array (that is, the noptr-new-declarator syntax is used or the new-type-id or\n  type-id denotes an array type), the new-expression <strong>yields a pointer to the initial element (if any) of the array</strong>.\n  [ Note: both <code>new int</code> and <code>new int[10]</code> have type <code>int*</code> and the type of <code>new int[i][10]</code> is <code>int (*)[10]</code>\n  \u2014end note ] The attribute-specifier-seq in a noptr-new-declarator appertains to the associated array type.</p>\n</blockquote>\n<p>That line is creating a new array of <code>HashEntry*</code> of size <code>TABLE_SIZE</code>. The return type of that expression is a pointer to the initial element, which is of type <code>HashEntry*</code>. Hence <code>HashEntry**</code>.</p>\n", "LastActivityDate": "2015-04-17T14:04:53.963", "CommentCount": "0", "CreationDate": "2015-04-17T14:04:53.963", "ParentId": "29701416", "Score": "5", "OwnerUserId": "2069064"}, "29701416": {"ViewCount": "77", "Body": "<p>I came across a Hash Map implementation in C++. The constructor of HashMap was containing below code. What is the line <code>new HashEntry*[TABLE_SIZE]</code> says. I've never seen such a construct before. How does it return a pointer to pointer?</p>\n<pre><code>class HashMap {\n    private:\n          HashEntry **table;\n    public:\n          HashMap() {\n                table = new HashEntry*[TABLE_SIZE];\n                for (int i = 0; i &lt; TABLE_SIZE; i++)\n                      table[i] = NULL;\n          }\n};\n</code></pre>\n", "AcceptedAnswerId": "29701482", "Title": "How does new datatype*[10] returns a pointer to pointer?", "CreationDate": "2015-04-17T14:01:46.613", "Id": "29701416", "CommentCount": "7", "LastEditDate": "2015-04-17T14:13:25.660", "PostTypeId": "1", "LastEditorUserId": "2069064", "LastActivityDate": "2015-04-17T14:13:25.660", "Score": "0", "OwnerUserId": "3880254", "Tags": "<c++><arrays><pointers><new-operator>", "AnswerCount": "1"}});