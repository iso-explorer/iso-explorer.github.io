post_cb({"40323377": {"ParentId": "40322496", "CommentCount": "0", "Body": "<p>Let\u2019s put aside the question if this is a good idea or not. Is it at all possible? This is what the standard says about the #include directive:</p>\n<p><strong>C++14 Standard, 16.2/2 [cpp.include]</strong></p>\n<blockquote>\n<p id=\"so_40322496_40323377_0\">A preprocessing directive of the form</p>\n<p id=\"so_40322496_40323377_1\">#include &lt; h-char-sequence&gt; new-line</p>\n<p id=\"so_40322496_40323377_2\">searches a sequence of implementation-de\ufb01ned places for a header identi\ufb01ed uniquely by the speci\ufb01ed\n  sequence between the &lt; and &gt; delimiters, and causes the replacement of that directive by the entire contents\n  of the header. How the places are speci\ufb01ed or the header identi\ufb01ed is implementation-de\ufb01ned.</p>\n</blockquote>\n<p>The \u201ch-char sequence\u201d allows characters from the source character set:</p>\n<p><strong>2.3 [lex.charset]</strong></p>\n<blockquote>\n<p id=\"so_40322496_40323377_3\">a b c d e f g h i j k l m n o p q r s t u v w x y z</p>\n<p id=\"so_40322496_40323377_4\">A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p>\n<p id=\"so_40322496_40323377_5\">0 1 2 3 4 5 6 7 8 9</p>\n<p id=\"so_40322496_40323377_6\">_ { } [ ] # ( ) &lt; &gt; % : ; . ? * + - / ^ &amp; | \u223c ! = , \\ \" \u2019</p>\n</blockquote>\n<p>Nothing in this wording says anything about where included files have to be located physically. Also all characters required for useful URIs are allowed.</p>\n<p><strong>The problem</strong></p>\n<p>No C++ compiler I am aware of and certainly none of the major three (Clang, GCC, MSVC) implements this feature.</p>\n<p><strong>Todo</strong></p>\n<p>Relying on additional tools is not going to work. In that case just cloning the repository in question is too easy and familiar a task.</p>\n<p>So, here is what you\u2019ll have to do:</p>\n<ul>\n<li><p>Get the source code to the relevant compilers, implement URI support for #include (don\u2019t forget caching or compile times will be glacial) and get it accepted as an official feature of the respective compiler.</p></li>\n<li><p>Implement support in the relevant build systems. For a start I suggest at least make, CMake and GNU Autotools.</p></li>\n<li><p>Do lots of marketing to convince the C++ community to use this feature.</p></li>\n</ul>\n", "OwnerUserId": "6646408", "PostTypeId": "2", "Id": "40323377", "Score": "2", "CreationDate": "2016-10-29T20:30:52.857", "LastActivityDate": "2016-10-29T20:30:52.857"}, "40322496": {"CommentCount": "2", "ViewCount": "81", "CreationDate": "2016-10-29T18:50:18.320", "LastActivityDate": "2016-10-29T20:30:52.857", "Title": "How to Include a C++ file from a public directory on a web server directly to the IDE?", "FavoriteCount": "1", "PostTypeId": "1", "Id": "40322496", "Score": "-2", "Body": "<p><strong>Overview:</strong>\nIn web programming, external code files doesn't have to be in the same directory or even in the same computer. For example I could use:</p>\n<pre><code>&lt;script src=\"file.js\"&gt;&lt;/script&gt;\n</code></pre>\n<p>to include file.js from the same directory. Or</p>\n<pre><code>&lt;script src=\"https://www.domain.com/file.js\"&gt;&lt;/script&gt;\n</code></pre>\n<p>to include file.js from a web server.</p>\n<p>Currently, I'm writing a C++ library on GitHub (it's just a group of lightweight C++ files) and I want it to be available for everyone to directly include it even without manually saving it; I want the precompiler to manage the temporary downloading.\nUnfortunately, the below code doesn't work:</p>\n<pre><code>#include \"https://www.domain.com/file.h\"\n</code></pre>\n<p><strong>Note:</strong> The question is a \"<em>How to?</em>\" not \"<em>Is it possible?</em>\" and if you believe it is unachievable, I assume you can not prove your answer; So, please leave it unanswered. Else, all solutions are appreciated</p>\n", "Tags": "<c++><http><include><cdn><precompiler>", "OwnerUserId": "6201515", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_40322496_40323377_2": {"section_id": 504, "quality": 0.7391304347826086, "length": 17}}, "n3337": {"so_40322496_40323377_2": {"section_id": 495, "quality": 0.7391304347826086, "length": 17}}, "n4659": {"so_40322496_40323377_2": {"section_id": 525, "quality": 0.7391304347826086, "length": 17}}}});