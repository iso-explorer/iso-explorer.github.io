post_cb({"33975641": {"CommentCount": "12", "ViewCount": "94", "CreationDate": "2015-11-28T19:42:16.240", "LastActivityDate": "2015-11-28T19:42:16.240", "Title": "Allocation function with a non-throwing exception specification", "FavoriteCount": "1", "PostTypeId": "1", "Id": "33975641", "Score": "2", "Body": "<p>3.7.4.1[basic.stc.dynamic.allocation]/3 has the following sentence:</p>\n<blockquote>\n<p id=\"so_33975641_33975641_0\">If an allocation function declared with a non-throwing\n  <em>exception-specification</em> (15.4) fails to allocate storage, it shall\n  return a null pointer.</p>\n</blockquote>\n<p>I don't know exactly what this sentence is trying to convey, as the two allocation functions shown in \u00a73.7.4/2 (see below) don't have exception specifications.</p>\n<blockquote>\n<p id=\"so_33975641_33975641_1\"><code>void* operator new(std::size_t);</code><br>\n<code>void* operator new[](std::size_t);</code></br></p>\n</blockquote>\n<p>And AFAICT, if I replace <code>operator new</code>, with one containing an <em>exception-specification</em>, in global scope, the code will not compile.</p>\n", "Tags": "<c++><memory-management><language-lawyer><c++14>", "OwnerUserId": "1042389", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_33975641_33975641_1": {"section_id": 7181, "quality": 0.8333333333333334, "length": 5}, "so_33975641_33975641_0": {"section_id": 7178, "quality": 0.9166666666666666, "length": 11}}, "n3337": {"so_33975641_33975641_1": {"section_id": 6074, "quality": 0.6666666666666666, "length": 4}, "so_33975641_33975641_0": {"section_id": 6922, "quality": 0.9166666666666666, "length": 11}}, "n4659": {"so_33975641_33975641_1": {"section_id": 8307, "quality": 1.0, "length": 6}, "so_33975641_33975641_0": {"section_id": 8686, "quality": 0.75, "length": 9}}}});