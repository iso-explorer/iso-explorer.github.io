post_cb({"42764064": {"ParentId": "42763741", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>The two links which you have referred are different in the sense that one shows the use of a local const reference and other shows the use of a class member const reference.</p>\n<p>When we create local const references and refer to a temporary object then in this compiler extends the life of the temporary till the scope of local const reference.</p>\n<p>Class member const reference pointing to temporary will lead to unexpected results as the life of the temporary object will not be extended beyond the constructor invoked to initialize class member reference. As explained in one of the answers the temporary will only survive till completion of the constructor.</p>\n<p>Quoting the answer from:\n<a href=\"https://stackoverflow.com/questions/2784262/does-a-const-reference-prolong-the-life-of-a-temporary\">Does a const reference prolong the life of a temporary?</a></p>\n<blockquote>\n<p id=\"so_42763741_42764064_0\">The lifetime extension is not transitive through a function argument. \u00a712.2/5 [class.temporary]:</p>\n<p id=\"so_42763741_42764064_1\">The second context is when a reference is bound to a temporary. The temporary to which the reference is bound or the temporary that is the complete object to a subobject of which the temporary is bound persists for the lifetime of the reference except as specified below. A temporary bound to a reference member in a constructor\u2019s ctor-initializer (\u00a712.6.2 [class.base.init]) persists until the constructor exits. A temporary bound to a reference parameter in a function call (\u00a75.2.2 [expr.call]) persists until the completion of the full expression containing the call.</p>\n</blockquote>\n<p>If you analyze it correctly you will realize that in both cases the life of temporary is extended till the scope from where the references are initialized is valid. As soon as the scope from where reference goes out of scope the temporary becomes invalid. </p>\n<p>For local const reference, scope is inside a function from where it is being initialized to a temp.\nFor class member const reference, scope is constructor where it is being initialized to a temp.</p>\n<p>You should also read this GOTW article:\n<a href=\"https://herbsutter.com/2008/01/01/gotw-88-a-candidate-for-the-most-important-const/\" rel=\"nofollow noreferrer\">https://herbsutter.com/2008/01/01/gotw-88-a-candidate-for-the-most-important-const/</a></p>\n", "OwnerUserId": "2112844", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:25:21.577", "Id": "42764064", "Score": "2", "CreationDate": "2017-03-13T12:50:00.740", "LastActivityDate": "2017-03-13T12:59:45.607"}, "bq_ids": {"n4140": {"so_42763741_42764064_1": {"section_id": 382, "quality": 0.8, "length": 40}}, "n3337": {"so_42763741_42764064_1": {"section_id": 373, "quality": 0.8, "length": 40}}, "n4659": {"so_42763741_42764064_1": {"section_id": 397, "quality": 0.58, "length": 29}}}, "42763741": {"CommentCount": "4", "ViewCount": "152", "PostTypeId": "1", "LastEditorUserId": "963864", "CreationDate": "2017-03-13T12:32:45.430", "LastActivityDate": "2017-06-24T19:48:27.577", "Title": "Prolonging life of a temporary object using const reference", "LastEditDate": "2017-06-24T19:48:27.577", "Id": "42763741", "Score": "0", "Body": "<p>I need a few clarification regarding const reference.\nFrom <a href=\"https://stackoverflow.com/questions/12741147/assign-return-value-from-function-to-a-reference-c\">this link</a>:<br/></p>\n<pre><code>const Foo &amp;myFoo = FuncBar();\n</code></pre>\n<p>const reference extended the life of the local object. But when I checked <a href=\"https://stackoverflow.com/questions/2784262/does-a-const-reference-prolong-the-life-of-a-temporary\">this link</a> although they used a const reference<br/></p>\n<pre><code>Sandbox(const string&amp; n) : member(n) {}\n</code></pre>\n<p>the lifetime of string \"four\" did not increase. <br/></p>\n<pre><code>Sandbox sandbox(string(\"four\"));\n</code></pre>\n<p>They used the sentence </p>\n<blockquote>\n<p id=\"so_42763741_42763741_0\">Only local const references prolong the lifespan.\n  <br/></p>\n</blockquote>\n<p>Then in the second link isn't the string \"four\" local to the main function and shouldn't the const reference <code>n</code> prolong its life?<br>\nSo why isn't the lifetime getting prolonged in the second link? </br></p>\n", "Tags": "<c++><pass-by-reference><lifetime><temporary-objects><reference-binding>", "OwnerUserId": "3762146", "AnswerCount": "1"}});