post_cb({"18183881": {"ParentId": "18168207", "LastEditDate": "2013-08-12T10:25:01.593", "CommentCount": "1", "CreationDate": "2013-08-12T09:42:11.067", "OwnerUserId": "1137388", "LastEditorUserId": "1137388", "PostTypeId": "2", "Id": "18183881", "Score": "2", "Body": "<p>Can I suggest a workaround?</p>\n<p>Remove the default template argument for <code>function3</code> (and <code>function4</code>):</p>\n<pre><code>template&lt;typename F&gt;\nint function3(F f = [](int i){return 0;})\n{\n    return 0;\n}\n</code></pre>\n<p>You can call it like this:</p>\n<pre><code>function3&lt;func1&gt;();\n</code></pre>\n<p>but I guess you want to be able to call like this:</p>\n<pre><code>function3();\n</code></pre>\n<p>Don't you? Then, create another overload of <code>function3</code> which is a function and not a template function:</p>\n<pre><code>int function3(func1 f = [](int i){return 0;})\n{\n    return function3&lt;func1&gt;(f);\n}\n</code></pre>\n", "LastActivityDate": "2013-08-12T10:25:01.593"}, "18168207": {"CommentCount": "3", "ViewCount": "272", "CreationDate": "2013-08-11T02:36:29.873", "LastActivityDate": "2013-08-12T10:25:01.593", "Title": "lambda closure type and default argument in function template", "PostTypeId": "1", "Id": "18168207", "Score": "4", "Body": "<p>The following code seems ok according to <strong>[expr.prim.lambda]</strong>:</p>\n<pre><code>#include&lt;functional&gt;\n\ntypedef int(*func1)(int);\ntypedef std::function&lt;int(int)&gt; func2;\n\nint function(int)\n{\n    return 0;\n}\n\ntemplate&lt;typename F = func1&gt;\nint function1(F f = function)\n{\n    return 0;\n}\n\ntemplate&lt;typename F = func2&gt;\nint function2(F f = function)\n{\n    return 0;\n}\n\ntemplate&lt;typename F = func1&gt;\nint function3(F f = [](int i){return 0;})\n{\n    return 0;\n}\n\ntemplate&lt;typename F = func2&gt;\nint function4(F f = [](int i){return 0;})\n{\n    return 0;\n}\n</code></pre>\n<p>However, gcc (4.8.1) complains about <code>function3</code> and <code>function4</code> and shows the error</p>\n<blockquote>\n<p id=\"so_18168207_18168207_0\">default argument for template parameter for class enclosing\n  '__lambda'</p>\n</blockquote>\n<p>Can someone explain this error?</p>\n", "Tags": "<c++><gcc><c++11>", "OwnerUserId": "1003615", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_18168207_18168207_0": {"section_id": 7104, "quality": 0.7142857142857143, "length": 5}}, "n3337": {"so_18168207_18168207_0": {"section_id": 6848, "quality": 0.7142857142857143, "length": 5}}, "n4659": {"so_18168207_18168207_0": {"section_id": 8605, "quality": 0.7142857142857143, "length": 5}}}});