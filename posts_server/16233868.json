post_cb({"16233954": {"ParentId": "16233868", "LastEditDate": "2013-04-26T10:19:49.173", "CommentCount": "4", "CreationDate": "2013-04-26T10:12:08.843", "OwnerUserId": "12711", "LastEditorUserId": "12711", "PostTypeId": "2", "Id": "16233954", "Score": "8", "Body": "<p>Yes, a pointer is permitted to point to the location just past the end of the array.  However you aren't permitted to deference such a pointer.</p>\n<blockquote>\n<p id=\"so_16233868_16233954_0\">C99 6.5.6/8 Additive operators (emphasis added)</p>\n<p id=\"so_16233868_16233954_1\">if the expression P points to the last element of an array object, the\n  expression (P)+1 points one past the last element of the array object,\n  and if the expression Q points one past the last element of an array\n  object, the expression (Q)-1 points to the last element of the array\n  object. If both the pointer operand and the result point to elements\n  of the same array object, <strong>or one past the last element of the array\n  object</strong>, the evaluation shall not produce an overflow; otherwise, the\n  behavior is undefined. If the result points one past the last element\n  of the array object, it shall not be used as the operand of a unary *\n  operator that is evaluated.</p>\n</blockquote>\n<p>And, specifically for comparision operations on pointers:</p>\n<blockquote>\n<p id=\"so_16233868_16233954_2\">C99 6.5.8/5 Relational operators</p>\n<p id=\"so_16233868_16233954_3\">If the expression P points to an element of an array object and the\n  expression Q points to the last element of the same array object, the\n  pointer expression Q+1 compares greater than P. In all other cases,\n  the behavior is undefined.</p>\n</blockquote>\n", "LastActivityDate": "2013-04-26T10:19:49.173"}, "16233868": {"CommentCount": "0", "CreationDate": "2013-04-26T10:07:19.417", "PostTypeId": "1", "AcceptedAnswerId": "16233954", "LastEditorUserId": "7586", "LastActivityDate": "2017-08-15T13:22:36.487", "LastEditDate": "2017-08-15T13:22:36.487", "ViewCount": "932", "FavoriteCount": "3", "Title": "pointer comparisons \"<\" with one past the last element of an array object", "Id": "16233868", "Score": "8", "Body": "<p>I know the pointer comparisons with <code>&lt;</code> is allowed in C standard only when the pointers point at the same memory space (like array).</p>\n<p>if we take an array:</p>\n<pre><code>int array[10];\nint *ptr = &amp;array[0];\n</code></pre>\n<p>is comparing  <code>ptr</code> to <code>array+10</code> allowed? Is the <code>array+10</code> pointer considered outside the array memory and so the comparison is not allowed?</p>\n<p>example</p>\n<pre><code>for(ptr=&amp;array[0]; ptr&lt;(array+10); ptr++) {...}\n</code></pre>\n", "Tags": "<c++><c><pointers><comparison>", "OwnerUserId": "1003575", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_16233868_16233954_1": {"section_id": 6142, "quality": 0.8032786885245902, "length": 49}, "so_16233868_16233954_3": {"section_id": 6143, "quality": 0.6818181818181818, "length": 15}}, "n3337": {"so_16233868_16233954_1": {"section_id": 5906, "quality": 0.8032786885245902, "length": 49}, "so_16233868_16233954_3": {"section_id": 5907, "quality": 0.6818181818181818, "length": 15}}, "n4659": {"so_16233868_16233954_3": {"section_id": 7638, "quality": 0.5454545454545454, "length": 12}}}, "16233990": {"ParentId": "16233868", "CommentCount": "5", "Body": "<p>Yes, that is allowed, and C++ relies heavily on it (C doesn't use it quite as much, but in C++, a very common way to denote ranges is by have a pointer (or more generally, an iterator) pointing to the first element, and another pointing one <em>past</em> the end of the range.</p>\n<p>It is legal for such a pointer to exist, and to compare it against the rest of the array.</p>\n<p>But it is not legal to ever dereference the pointer.</p>\n", "OwnerUserId": "33213", "PostTypeId": "2", "Id": "16233990", "Score": "4", "CreationDate": "2013-04-26T10:14:08.740", "LastActivityDate": "2013-04-26T10:14:08.740"}});