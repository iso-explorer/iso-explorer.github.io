post_cb({"bq_ids": {"n4140": {"so_27396640_27396905_1": {"length": 9, "quality": 0.9, "section_id": 6299}}, "n3337": {"so_27396640_27396905_1": {"length": 9, "quality": 0.9, "section_id": 6056}}, "n4659": {"so_27396640_27396905_1": {"length": 9, "quality": 0.9, "section_id": 7808}}}, "27396640": {"ViewCount": "296", "Body": "<p>[util.smartptr.shared.io] in the C++11 standard mandates an <code>operator&lt;&lt;</code> for\n<code>shared_ptr</code>s:</p>\n<pre><code>template&lt;class E, class T, class Y&gt;\nbasic_ostream&lt;E, T&gt;&amp; operator&lt;&lt; (basic_ostream&lt;E, T&gt;&amp; os, shared_ptr&lt;Y&gt; const&amp; p);\n</code></pre>\n<p>However unless I'm missing it, I see nothing similar in [unique.ptr], and the\nreference on <a href=\"http://en.cppreference.com/w/cpp/memory/unique_ptr\">en.cppreference.com</a> agrees. Is there a reason for the\ndifference?</p>\n", "AcceptedAnswerId": "27396905", "Title": "Why is there no operator<< for std::unique_ptr?", "CreationDate": "2014-12-10T08:48:10.010", "Id": "27396640", "CommentCount": "5", "FavoriteCount": "2", "PostTypeId": "1", "LastActivityDate": "2014-12-10T09:25:52.290", "Score": "9", "OwnerUserId": "1505451", "Tags": "<c++><c++11><language-lawyer><unique-ptr>", "AnswerCount": "1"}, "27396905": {"Id": "27396905", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_27396640_27396905_0\">Is there a reason for the difference?</p>\n</blockquote>\n<p>No, there isn't. Just as with <code>make_unique</code> this is an \"oversight\" and should be added in future (if someone can be bothered to send a proposal).<br>\nIn the meantime you can output <code>ptr.get()</code> instead, or - if not afraid of undefined behavior:</br></p>\n<pre><code>#if __cplusplus &lt;= 201600 // Some time in future\nnamespace std {\n    template &lt;class E, class T, class Y, class D&gt;\n    basic_ostream&lt;E, T&gt;&amp; operator&lt;&lt; (basic_ostream&lt;E, T&gt;&amp; os,\n                                     unique_ptr&lt;Y, D&gt; const&amp; p) {\n        return os &lt;&lt; p.get();\n    }\n}\n#endif\n</code></pre>\n<hr>\n<p>That is undefined according to [namespace.std]:</p>\n<blockquote>\n<p id=\"so_27396640_27396905_1\">The behavior of a C++ program is undefined if it adds declarations or definitions to \n  namespace <code>std</code> [\u2026] unless\n  otherwise specified.</p>\n</blockquote>\n<p>... and the above is not specifically allowed for this matter. However, this kind of undefined behavior is fine and can be invoked without any impacts whatsoever.</p>\n</hr>", "LastEditorUserId": "3647361", "LastActivityDate": "2014-12-10T09:25:52.290", "Score": "7", "CreationDate": "2014-12-10T09:03:18.077", "ParentId": "27396640", "CommentCount": "16", "OwnerUserId": "3647361", "LastEditDate": "2014-12-10T09:25:52.290"}});