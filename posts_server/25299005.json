post_cb({"25299022": {"CommentCount": "0", "Body": "<p><code>delete</code> can only delete memory allocated with <code>new</code>.</p>\n<p>for memory allocated with <code>calloc</code> deallocate it using <code>free</code>.</p>\n<p>and no, you can't just use a pointer to somewhere <em>inside</em> the allocated memory.</p>\n<hr>\n<p>in C++, deal with simple character strings by using <code>std::string</code> from the <code>&lt;string&gt;</code> header.</p>\n<p>it takes care of memory management for you.</p>\n</hr>", "CreationDate": "2014-08-14T02:14:02.863", "ParentId": "25299005", "Id": "25299022", "LastActivityDate": "2014-08-14T02:14:02.863", "PostTypeId": "2", "Score": "3", "OwnerUserId": "464581"}, "25299017": {"LastActivityDate": "2014-08-14T02:48:11.860", "CommentCount": "0", "Body": "<p>It is undefined behavior. A crash, if you are lucky.</p>\n<p>According to C++ standard (Working Draft, N3291=11-0061)</p>\n<blockquote>\n<p id=\"so_25299005_25299017_0\"><strong>3.7.4.2 Deallocation functions [basic.stc.dynamic.deallocation]</strong></p>\n<p id=\"so_25299005_25299017_1\">...</p>\n<p id=\"so_25299005_25299017_2\">The value of the\n  first argument supplied to a deallocation function may be a null pointer value; if so, and if the deallocation\n  function is one supplied in the standard library, the call has no effect. Otherwise, the behavior is undefined\n  if the value supplied to operator <code>delete(void*)</code> in the standard library is not one of the values returned\n  by a previous invocation of either operator <code>new(std::size_t)</code> or operator <code>new(std::size_t, constvstd::nothrow_t&amp;)</code> in the standard library ...</p>\n</blockquote>\n<p>There are several problems here. First, you should use <code>free</code> if you used <code>calloc</code>.</p>\n<p>Then, you should pass to <code>free</code> the same pointer you got from <code>calloc</code>.</p>\n<p><code>calloc</code> allocates memory as one continuous block, and the entire block gets deallocated with <code>free</code>, not a part of it.</p>\n<p>See <a href=\"http://www.cplusplus.com/reference/cstdlib/calloc/\" rel=\"nofollow\">http://www.cplusplus.com/reference/cstdlib/calloc/</a>.</p>\n", "CreationDate": "2014-08-14T02:13:30.420", "LastEditDate": "2014-08-14T02:48:11.860", "ParentId": "25299005", "Id": "25299017", "LastEditorUserId": "3246555", "PostTypeId": "2", "Score": "4", "OwnerUserId": "3246555"}, "25299005": {"CreationDate": "2014-08-14T02:12:27.340", "ViewCount": "72", "Id": "25299005", "AcceptedAnswerId": "25299017", "Score": "0", "Title": "Deallocating memory using a pointer to an element in an array", "CommentCount": "1", "Body": "<p>I have the following C++ code:</p>\n<pre><code>int main(){\n    unsigned char *abc = (unsigned char *)calloc(100,1);\n    unsigned char *def = &amp;abc[50];\n    delete def;\n}\n</code></pre>\n<p>Would this deallocate all the memory allocated by the call to calloc, or just the memory starting at the memory location where <code>def</code> points to?</p>\n", "Tags": "<c++><pointers><memory-management>", "LastActivityDate": "2014-08-14T02:48:11.860", "PostTypeId": "1", "AnswerCount": "4", "OwnerUserId": "3427787"}, "25299046": {"CommentCount": "0", "Body": "<p>Isn't *abc undefined there?  delete def; wouldn't do anything if there is nothing to delete!</p>\n", "CreationDate": "2014-08-14T02:16:49.080", "ParentId": "25299005", "Id": "25299046", "LastActivityDate": "2014-08-14T02:16:49.080", "PostTypeId": "2", "Score": "0", "OwnerUserId": "3435157"}, "bq_ids": {"n4140": {"so_25299005_25299017_2": {"length": 36, "quality": 0.9473684210526315, "section_id": 7182}}, "n3337": {"so_25299005_25299017_2": {"length": 36, "quality": 0.9473684210526315, "section_id": 6926}}}, "25299018": {"LastActivityDate": "2014-08-14T02:18:42.523", "CommentCount": "0", "Body": "<p>It wouldn't necessarily deallocate anything as it has undefined behavior.  You can only call <code>delete</code> on a pointer which was allocated with <code>new</code>.  Not only was the memory allocated with <code>calloc</code> instead of <code>new</code>, but you are also not passing a pointer to what <code>calloc</code> returned, but to some other position within that block of memory.</p>\n", "CreationDate": "2014-08-14T02:13:37.187", "LastEditDate": "2014-08-14T02:18:42.523", "ParentId": "25299005", "Id": "25299018", "LastEditorUserId": "951890", "PostTypeId": "2", "Score": "1", "OwnerUserId": "951890"}});