post_cb({"17342262": {"ParentId": "17341948", "CommentCount": "0", "Body": "<p>No matter the object is stored on the stack or heap, <code>val</code> always in the same memory address of demo's object as it's the first member.</p>\n<p>\u00a71.8.6</p>\n<blockquote>\n<p id=\"so_17341948_17342262_0\">Unless an object is a bit-field or a base class subobject of zero size, <strong>the address of that object is the address of the first byte it occupies</strong>. Two distinct objects that are neither bit-fields nor base class subobjects of zero size shall have distinct addresses.</p>\n</blockquote>\n", "OwnerUserId": "951757", "PostTypeId": "2", "Id": "17342262", "Score": "1", "CreationDate": "2013-06-27T11:44:29.200", "LastActivityDate": "2013-06-27T11:44:29.200"}, "17341948": {"CommentCount": "1", "ViewCount": "42", "CreationDate": "2013-06-27T11:30:02.867", "LastActivityDate": "2013-06-27T11:44:29.200", "Title": "Understanding the stack in the context of heap objects", "AcceptedAnswerId": "17342012", "PostTypeId": "1", "Id": "17341948", "Score": "0", "Body": "<p>Take the simple code below. <code>d</code> is a pointer on the stack that points to a <code>demo</code> object on the heap. The object contains <code>val</code>. This appears to be a stack variable in the context of the class, but the object is allocated on the heap . . . . so where exactly is <code>val</code>?</p>\n<pre><code>class demo\n{\n    int val;\n\npublic:\n    demo() : val(5) {};\n};\n\ndemo* d = new demo();\n</code></pre>\n", "Tags": "<c++><memory><memory-management>", "OwnerUserId": "276193", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_17341948_17342262_0": {"section_id": 5795, "quality": 0.8214285714285714, "length": 23}}, "n3337": {"so_17341948_17342262_0": {"section_id": 5568, "quality": 0.8214285714285714, "length": 23}}, "n4659": {"so_17341948_17342262_0": {"section_id": 7254, "quality": 0.8214285714285714, "length": 23}}}, "17342012": {"ParentId": "17341948", "CommentCount": "0", "Body": "<p>The variable <code>val</code> is located on the heap, as it is part of an object located on the heap. Each thread has its own stack, but individual objects do not. <code>val</code> would be located on the stack only if <code>d</code> were declared statically.</p>\n", "OwnerUserId": "2460632", "PostTypeId": "2", "Id": "17342012", "Score": "2", "CreationDate": "2013-06-27T11:33:08.303", "LastActivityDate": "2013-06-27T11:33:08.303"}});