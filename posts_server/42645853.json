post_cb({"42646077": {"ParentId": "42645853", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>I believe that this is covered by <code>[class.abstract]/6</code> (N4140):</p>\n<blockquote>\n<p id=\"so_42645853_42646077_0\">Member functions can be called from a constructor (or destructor) of an abstract class; the effect of making a\n  virtual call (10.3) to a pure virtual function directly or indirectly for the object being created (or destroyed)\n  from such a constructor (or destructor) is undefined.</p>\n</blockquote>\n<p>So even though you have provided a definition for the pure virtual function, it's still technically UB. </p>\n<p>There is a Core Working Group issue which addresses this <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_closed.html#230\" rel=\"nofollow noreferrer\">here</a>. It seems that the rules are unlikely to change to make this well-defined.</p>\n", "OwnerUserId": "496161", "LastEditorUserId": "496161", "LastEditDate": "2017-03-07T10:48:39.540", "Id": "42646077", "Score": "5", "CreationDate": "2017-03-07T10:41:10.223", "LastActivityDate": "2017-03-07T10:48:39.540"}, "bq_ids": {"n4140": {"so_42645853_42646077_0": {"section_id": 7023, "quality": 0.9615384615384616, "length": 25}}, "n3337": {"so_42645853_42646077_0": {"section_id": 6769, "quality": 0.9615384615384616, "length": 25}}, "n4659": {"so_42645853_42646077_0": {"section_id": 8520, "quality": 0.9615384615384616, "length": 25}}}, "42645853": {"CommentCount": "4", "ViewCount": "73", "PostTypeId": "1", "LastEditorUserId": "464581", "CreationDate": "2017-03-07T10:31:13.173", "LastActivityDate": "2017-05-30T23:52:53.250", "Title": "Calling class T's implementation of pure virtual from T constructor without qualification?", "AcceptedAnswerId": "42646077", "LastEditDate": "2017-05-30T23:52:53.250", "Id": "42645853", "Score": "2", "Body": "<p>Considering that a virtual call of a <code>T</code> member function (directly or indirectly) from a constructor of a class <code>T</code>, can at most go down to <code>T</code>'s implementation, does the following code, with <em>unqualified call</em>, have Undefined Behavior or not?</p>\n<p>Note, to avoid noise: if you believe that member functions are not called virtually when invoked from a constructor, then please don't answer or comment here, but raise that issue in a separate SO question. Thank you.</p>\n<pre><code>struct Baze\n{\n    virtual void foo();\n    virtual void bar() = 0;\n    Baze(){ foo(); bar(); }\n};\n\nvoid Baze::foo() {}\nvoid Baze::bar() {}\n\nstruct Derived: Baze\n{\n    void bar() override {}\n};\n\nint main()\n{\n    Derived{};\n}\n</code></pre>\n", "Tags": "<c++><constructor><virtual-functions><pure-virtual>", "OwnerUserId": "464581", "AnswerCount": "1"}});