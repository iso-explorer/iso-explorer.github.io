post_cb({"bq_ids": {"n4140": {"so_21354522_21354634_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 3299}}, "n3337": {"so_21354522_21354634_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 3169}}, "n4659": {"so_21354522_21354634_0": {"length": 17, "quality": 0.7391304347826086, "section_id": 4065}}}, "21354522": {"ViewCount": "45", "Body": "<p>Is the following legal?</p>\n<pre><code>class Aggregate {\npublic:\n    int a;\n    int b;\n};\n\nclass Class {\npublic:\n    Class():\n        m_aggregate{\n            3,\n            // Here, m_aggregate.a is fully constructed, but m_aggregate is not\n            m_aggregate.a + 5\n        } {\n    }\n    Aggregate m_aggregate;\n};\n</code></pre>\n<p>Is it legal to use elements of an aggregate after their lifetime has begun, but before the completion of the constructor of the aggregate as a whole?</p>\n<p>Testing with gcc 4.8.2 seems to behave correctly...</p>\n", "AcceptedAnswerId": "21354634", "Title": "Can aggregate initialization refer to a previous element in the aggregate?", "CreationDate": "2014-01-25T18:29:09.577", "Id": "21354522", "CommentCount": "2", "LastEditDate": "2014-01-25T18:51:23.617", "PostTypeId": "1", "LastEditorUserId": "852254", "LastActivityDate": "2014-01-25T18:51:23.617", "Score": "3", "OwnerUserId": "852254", "Tags": "<c++><language-lawyer>", "AnswerCount": "1"}, "21354634": {"Id": "21354634", "PostTypeId": "2", "Body": "<p>I don't think that's legitimate. It is true that the elements of the braced list are initialized in order (i.e. the evaluation of list elements is sequenced, cf. 8.5.4/4), but the aggregate is only constructed <em>after</em> the list has been fully constructed. Cf. 8.5.1:</p>\n<blockquote>\n<p id=\"so_21354522_21354634_0\">When an aggregate is initialized by an initializer list, as specified in 8.5.4, the elements of the initializer list are taken as initializers for the members of the aggregate, in increasing subscript or member order. Each member is copy-initialized from the corresponding initializer-clause.</p>\n</blockquote>\n<p>In order to copy-initialize from something, the original needs to exist first.</p>\n", "LastActivityDate": "2014-01-25T18:39:03.360", "CommentCount": "2", "CreationDate": "2014-01-25T18:39:03.360", "ParentId": "21354522", "Score": "5", "OwnerUserId": "596781"}});