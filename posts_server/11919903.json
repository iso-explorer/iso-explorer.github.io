post_cb({"11925398": {"ParentId": "11919903", "CommentCount": "2", "Body": "<p>They're part of the standard library, so they're provided by libstdc++, not the compiler front-end, and there's support for most of  in libstdc++.</p>\n<p>The few that are missing were added late in the C++0x process by <a href=\"http://open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3142.html\" rel=\"nofollow\">N3142</a> but libstdc++ still provides the older forms such as <code>has_trivial_default_constructor</code> instead of <code>is_trivially_default_constructible</code>.</p>\n<p>As for when, \"it depends\". See <a href=\"http://gcc.gnu.org/ml/libstdc++/2012-08/msg00037.html\" rel=\"nofollow\">http://gcc.gnu.org/ml/libstdc++/2012-08/msg00037.html</a> and the following replies.</p>\n", "OwnerUserId": "981959", "PostTypeId": "2", "Id": "11925398", "Score": "2", "CreationDate": "2012-08-12T19:52:58.017", "LastActivityDate": "2012-08-12T19:52:58.017"}, "11919903": {"CommentCount": "11", "AcceptedAnswerId": "11925398", "PostTypeId": "1", "LastEditorUserId": "414271", "CreationDate": "2012-08-12T05:16:23.980", "LastActivityDate": "2012-08-12T19:52:58.017", "LastEditDate": "2012-08-12T19:19:21.467", "ViewCount": "1316", "FavoriteCount": "2", "Title": "Support for Type Properties in g++", "Id": "11919903", "Score": "5", "Body": "<p>When can we expect support for the <a href=\"http://en.cppreference.com/w/cpp/types#Type_properties_2\" rel=\"nofollow\">standard type properties</a> in g++? libstdc++ provides support for most of the type properties, with some requiring support from <a href=\"http://gcc.gnu.org/onlinedocs/gcc-4.7.1/gcc/Type-Traits.html#Type-Traits\" rel=\"nofollow\">special GNU extensions</a>. However, it would be nice to have complete support for <code>&lt;type_traits&gt;</code>, and I am wondering when that will be. I tried inquiring the libstdc++ mailing list, but unfortunately received no response.</p>\n<p>If you are wondering which type properties are lacking support, here are some of them:</p>\n<blockquote>\n<p id=\"so_11919903_11919903_0\">Missing is_trivially_copyable, is_assignable, is_copy_assignable,\n  is_move_assignable, is_trivially_constructible,\n  is_trivially_default_constructible, is_trivially_copy_constructible,\n  is_trivially_move_constructible, is_trivially_assignable,\n  is_trivially_default_assignable, is_trivially_copy_assignable,\n  is_trivially_move_assignable, is_trivially_destructible,\n  is_nothrow_assignable, is_nothrow_copy_assignable,\n  is_nothrow_move_assignable, is_nothrow_destructible</p>\n</blockquote>\n<p>Source: search for \"Type properties\" <a href=\"http://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.200x\" rel=\"nofollow\">here</a>.</p>\n<p>Thanks for your help!</p>\n", "Tags": "<c++><gcc><c++11><g++><typetraits>", "OwnerUserId": "414271", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_11919903_11919903_0": {"section_id": 4706, "quality": 0.8888888888888888, "length": 16}}, "n3337": {"so_11919903_11919903_0": {"section_id": 4515, "quality": 0.8888888888888888, "length": 16}}, "n4659": {"so_11919903_11919903_0": {"section_id": 6103, "quality": 0.8888888888888888, "length": 16}}}});