post_cb({"3939934": {"ParentId": "3939810", "CommentCount": "4", "Body": "<p>Where and when exactly are you accessing <code>Bar::foo</code>?  If it's statically linked into the DLL, then it should be initialized before <code>DllMain()</code>'s 'process attach' is called.</p>\n<p>Are you setting a different entry point for the DLL than the default of <code>_DllMainCRTStartup</code>?</p>\n", "OwnerUserId": "12711", "PostTypeId": "2", "Id": "3939934", "Score": "1", "CreationDate": "2010-10-15T06:22:03.743", "LastActivityDate": "2010-10-15T06:22:03.743"}, "3944239": {"ParentId": "3939810", "CommentCount": "0", "Body": "<p>What code is noticing that <code>Bar::foo</code> isn't initialized yet? If it's another bit of static initialization in the DLL then you're probably running into C++'s static initialization order problem:</p>\n<ul>\n<li>from the C++ FAQ: <a href=\"http://www.parashift.com/c++-faq-lite/ctors.html#faq-10.14\" rel=\"nofollow\">What's the \"static initialization order fiasco\"?</a></li>\n</ul>\n", "OwnerUserId": "12711", "PostTypeId": "2", "Id": "3944239", "Score": "1", "CreationDate": "2010-10-15T16:34:59.900", "LastActivityDate": "2010-10-15T16:34:59.900"}, "3940455": {"ParentId": "3939810", "CommentCount": "0", "Body": "<p>Why don't you define a static method in bar which returns a reference to Foo, and in that static method, have a static instance of Foo, such that when it's first called (irrespective of where), it will get correctly initialised?</p>\n<pre><code>class Bar\n{\n  public:\n    static Foo&amp; foo()\n    {\n      static Foo inst;\n      return inst;\n    }\n};\n</code></pre>\n", "OwnerUserId": "266198", "PostTypeId": "2", "Id": "3940455", "Score": "1", "CreationDate": "2010-10-15T08:01:27.603", "LastActivityDate": "2010-10-15T08:01:27.603"}, "3939853": {"ParentId": "3939810", "CommentCount": "2", "Body": "<blockquote>\n<p id=\"so_3939810_3939853_0\">$3.6.2/2- \"Variables with static\n  storage duration (3.7.1) or thread\n  storage duration (3.7.2) <strong>shall be\n  zero-initialized (8.5) before any\n  other initialization takes place.\"</strong></p>\n</blockquote>\n<p>That explains why you get that value of 0</p>\n<blockquote>\n<p id=\"so_3939810_3939853_1\">$3.6.2/4- \"It is\n  implementation-defined whether the\n  dynamic initialization of a non-local\n  variable with static storage duration\n  is done before the first statement of\n  main. <strong>If the initialization is\n  deferred to some point in time after\n  the first statement of main, it shall\n  occur before the first use of any\n  function or variable defined in the\n  same translation unit as the variable\n  to be initialized.</strong>\"</p>\n</blockquote>\n<p>So what you are trying to do leads to undefined behavior as you are attempting to access a variable with static storage duration which has not yet been initialized as no code in that translation unit has been used as yet.</p>\n", "OwnerUserId": "418110", "PostTypeId": "2", "Id": "3939853", "Score": "7", "CreationDate": "2010-10-15T06:04:38.253", "LastActivityDate": "2010-10-15T06:04:38.253"}, "3939810": {"CommentCount": "0", "ViewCount": "1374", "PostTypeId": "1", "LastEditorUserId": "881229", "CreationDate": "2010-10-15T05:54:10.223", "LastActivityDate": "2016-06-13T19:06:06.743", "Title": "Static member object initialization failure", "FavoriteCount": "1", "LastEditDate": "2016-06-13T19:06:06.743", "Id": "3939810", "Score": "6", "Body": "<p>I have a static library with the following code:</p>\n<p>h file:</p>\n<pre><code>class Foo\n{\npublic:\n   Foo()\n   {\n       a = 4;\n   }\n\n   int a;\n};\n\n\nclass Bar\n{\npublic:\n    static const Foo foo;\n};\n</code></pre>\n<p>cpp file:</p>\n<pre><code>const Bar::foo = Foo();\n</code></pre>\n<p>My problem is that Bar::foo does not get initialized with a=4 until some time <em>after</em> main(). Before then a=0. I'm trying to access Bar::foo from a DLL which statically links to the library above. And my application links to that DLL but does not access Bar::foo directly. I'm using Visual Studio 2008.</p>\n<p>Does anyone know what could be going on?</p>\n", "Tags": "<c++>", "OwnerUserId": "476560", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_3939810_3939853_1": {"section_id": 7153, "quality": 0.9166666666666666, "length": 33}, "so_3939810_3939853_0": {"section_id": 7151, "quality": 0.8125, "length": 13}}, "n3337": {"so_3939810_3939853_1": {"section_id": 6897, "quality": 0.9166666666666666, "length": 33}, "so_3939810_3939853_0": {"section_id": 6895, "quality": 0.8125, "length": 13}}, "n4659": {"so_3939810_3939853_1": {"section_id": 8657, "quality": 0.6111111111111112, "length": 22}, "so_3939810_3939853_0": {"section_id": 4051, "quality": 0.5625, "length": 9}}}});