post_cb({"18574969": {"ParentId": "18574882", "LastEditDate": "2013-09-02T14:05:31.033", "CommentCount": "0", "CreationDate": "2013-09-02T13:56:59.230", "OwnerUserId": "1394283", "LastEditorUserId": "1394283", "PostTypeId": "2", "Id": "18574969", "Score": "0", "Body": "<p>It is the <em>member-initialization-list</em>. It permits to pass the correct parameters and chose the good constructor for the members of the class and the constructor of the base classes.</p>\n<p>The standard says:</p>\n<blockquote>\n<p id=\"so_18574882_18574969_0\"><strong>12.6.2 Initializing bases and members [class.base.init]</strong></p>\n<p id=\"so_18574882_18574969_1\">In the definition of a constructor for a class, <strong>initializers for direct and virtual base subobjects and non-static data members</strong> can be specified by a <em>ctor-initializer</em>, which has the form</p>\n<pre><code>ctor-initializer:\n   : mem-initializer-list\n</code></pre>\n</blockquote>\n<p>Any members or base class not specified in the <em>member-initialization-list</em> will use its default constructor.</p>\n<p>In you case, you are passing <code>nh_</code> to the constructor of <code>image_transport::ImageTransport</code> to initialize <code>it_</code>.</p>\n", "LastActivityDate": "2013-09-02T14:05:31.033"}, "18574882": {"CommentCount": "3", "ViewCount": "275", "PostTypeId": "1", "ClosedDate": "2013-09-02T20:57:32.997", "LastEditorUserId": "2307070", "CreationDate": "2013-09-02T13:52:05.033", "LastActivityDate": "2014-12-08T10:34:53.393", "LastEditDate": "2014-12-08T10:34:53.393", "AcceptedAnswerId": "18574948", "Title": "Please help understand the C++ : operator", "Id": "18574882", "Score": "0", "Body": "<p>Please could someone explain to me what this operator does in C++ at a function?</p>\n<pre><code>class simplecanny\n{\n    ros::NodeHandle nh_;\n    ros::NodeHandle n;\n    ros::Publisher pub ;\n    image_transport::ImageTransport it_;    \n    image_transport::Subscriber image_sub_; //image subscriber \n    image_transport::Publisher image_pub_; //image publisher(we subscribe to ardrone image_raw)\n    std_msgs::String msg;\n    public:\n    *** simplecanny()\n        : it_(nh_) ***\n    {\n        image_sub_ = it_.subscribe(\"/ardrone/image_raw\", 1, &amp;simplecanny::imageCb, this);\n        image_pub_= it_.advertise(\"/arcv/Image\",1); \n    }\n\n    ~simplecanny()\n    {\n        cv::destroyWindow(WINDOW);\n    }\n\n    ...\n</code></pre>\n<p>At the <code>simplecanny() : it_(nh_)</code> constructor, Im not familiar with the <code>: it_(nh_)</code> part. What does it do? Is that a case of operator overloading?</p>\n<p>Thanks in advance!</p>\n", "Tags": "<c++><opencv><operators><ros>", "OwnerUserId": "1348221", "AnswerCount": "6"}, "18574967": {"ParentId": "18574882", "CommentCount": "0", "Body": "<p>The single colon (<code>:</code>) is no operator but a part of the language, indication the start of an initialization list. The initialization list can be used only in constructors and is used to initialize the object's member variables and superclass subobjects. In your case, the member variable <code>it_</code> is initialized with <code>nh_</code>. You might want to look up initialization lists and constructors in the texbook of your choice.</p>\n", "OwnerUserId": "1838266", "PostTypeId": "2", "Id": "18574967", "Score": "0", "CreationDate": "2013-09-02T13:56:51.723", "LastActivityDate": "2013-09-02T13:56:51.723"}, "18574964": {"ParentId": "18574882", "CommentCount": "1", "Body": "<p>Call the superclass constructor in the subclass' initialization list.</p>\n", "OwnerUserId": "487305", "PostTypeId": "2", "Id": "18574964", "Score": "0", "CreationDate": "2013-09-02T13:56:42.547", "LastActivityDate": "2013-09-02T13:56:42.547"}, "18578343": {"ParentId": "18574882", "CommentCount": "0", "Body": "<p>The column represents a start of an initialization list. It is used for setting up the variables of objects. Its another important and useful feature is invocation of desired constructor of based  class which this class derives. The detailed answer and reason why it is introduced to C++ can be found at <a href=\"http://www.learncpp.com/cpp-tutorial/101-constructor-initialization-lists/\" rel=\"nofollow\">Constructor initialization lists</a> and <a href=\"http://www.learncpp.com/cpp-tutorial/114-constructors-and-initialization-of-derived-classes/\" rel=\"nofollow\">invocation of desired constructor of based class</a></p>\n", "OwnerUserId": "2708714", "PostTypeId": "2", "Id": "18578343", "Score": "0", "CreationDate": "2013-09-02T17:35:12.477", "LastActivityDate": "2013-09-02T17:35:12.477"}, "18574948": {"ParentId": "18574882", "CommentCount": "1", "Body": "<p>This is called the constructor initializer list.  It gives the parameters to be passed to the constructors of the base classes and members of the class.</p>\n<p>In your example, it is passing <code>nh_</code> to the constructor of <code>it_</code>.</p>\n<p>Any base class or member that does not appear in this list is constructed using their respective default constructors.</p>\n", "OwnerUserId": "951890", "PostTypeId": "2", "Id": "18574948", "Score": "5", "CreationDate": "2013-09-02T13:55:49.117", "LastActivityDate": "2013-09-02T13:55:49.117"}, "18574972": {"ParentId": "18574882", "LastEditDate": "2017-05-23T10:25:17.303", "CommentCount": "0", "CreationDate": "2013-09-02T13:57:05.033", "OwnerUserId": "1951468", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "18574972", "Score": "0", "Body": "<p>It is a constructor initialization list. You can read more on the subject at <a href=\"https://stackoverflow.com/questions/4589237/c-initialization-lists\">In this specific case, is there a difference between using a member initializer list and assigning values in a constructor?</a></p>\n", "LastActivityDate": "2013-09-02T13:57:05.033"}, "bq_ids": {"n4140": {"so_18574882_18574969_1": {"section_id": 428, "quality": 1.0, "length": 15}}, "n3337": {"so_18574882_18574969_1": {"section_id": 420, "quality": 1.0, "length": 15}}, "n4659": {"so_18574882_18574969_1": {"section_id": 446, "quality": 1.0, "length": 15}}}});