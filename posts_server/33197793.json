post_cb({"33197793": {"ViewCount": "32", "Body": "<p>Supposing we have a 2-d array <code>a[n][m]</code>. Instead of <code>a[i][j]</code> I can use                        <code>*(*a + i * n + j)</code>.</p>\n<p>How can I access an element of  N-dimensional array using pointers? i.e What can I use instead of <code>a[i][j]...[k]</code>?</p>\n<p>For example, I tried doing the following, but this doesn't work:</p>\n<pre><code>#include&lt;iostream&gt;\n#include&lt;conio.h&gt; \nusing namespace std;\nint main() {\n    const int n1 = 5, n2 = 5, n3 = 5;\n    int array[n1][n2][n3];\n    for (int i = 0; i &lt; n1; i++)\n    for (int j = 0; j &lt; n2; j++)\n    for (int k = 0; k &lt; n3; k++)\n        array[i][j][k] = n1*n2*n3;\n\n    cout &lt;&lt; array[1][2][4]&lt;&lt;endl;\n    cout &lt;&lt; *(*array + n1 + n2 * 2 + 4);\n\n    _getch();\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "33197955", "Title": "how to access the N-d array element using pointers", "CreationDate": "2015-10-18T12:12:33.440", "Id": "33197793", "CommentCount": "3", "LastEditDate": "2015-10-18T12:34:52.810", "PostTypeId": "1", "LastEditorUserId": "5267636", "LastActivityDate": "2015-10-18T12:34:52.810", "Score": "-2", "OwnerUserId": "5267636", "Tags": "<c++><pointers><multidimensional-array>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_33197793_33197955_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 5986}, "so_33197793_33197955_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 3233}}, "n3337": {"so_33197793_33197955_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 5754}, "so_33197793_33197955_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 3106}}, "n4659": {"so_33197793_33197955_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 7486}, "so_33197793_33197955_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 3990}}}, "33197955": {"Id": "33197955", "PostTypeId": "2", "Body": "<p>Quote from <a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf\" rel=\"nofollow\">N1256</a> 6.5.2.1 Array subscripting</p>\n<blockquote>\n<p id=\"so_33197793_33197955_0\">The definition of the subscript operator []\n  is that <strong><code>E1[E2]</code></strong> is identical to <strong><code>(*((E1)+(E2)))</code></strong>.</p>\n</blockquote>\n<p>From this, I can say that all of the followings are equivalent:</p>\n<pre><code>a[i][j][k]\n(*(a + i))[j][k]\n(*((*(a + i)) + j))[k]\n(*((*((*(a + i)) + j)) + k))\n</code></pre>\n<p>Note: The added code is C++, not C. For C++, <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf\" rel=\"nofollow\">N3337</a> 5.2.1 Subscripting says that:</p>\n<blockquote>\n<p id=\"so_33197793_33197955_1\">The expression <code>E1[E2]</code> is identical (by definition) to <code>*((E1)+(E2)) </code></p>\n</blockquote>\n", "LastActivityDate": "2015-10-18T12:32:33.000", "CommentCount": "0", "CreationDate": "2015-10-18T12:32:33.000", "ParentId": "33197793", "Score": "1", "OwnerUserId": "4062354"}});