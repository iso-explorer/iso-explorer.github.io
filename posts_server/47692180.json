post_cb({"bq_ids": {"n4140": {"so_47692180_47692337_0": {"length": 10, "quality": 0.6666666666666666, "section_id": 1248}, "so_47692180_47692337_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 1247}}, "n3337": {"so_47692180_47692337_0": {"length": 10, "quality": 0.6666666666666666, "section_id": 1246}, "so_47692180_47692337_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 1245}}, "n4659": {"so_47692180_47692337_0": {"length": 10, "quality": 0.6666666666666666, "section_id": 1353}, "so_47692180_47692337_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 1352}}}, "47692337": {"Id": "47692337", "PostTypeId": "2", "Body": "<p>The standard itself doesn't place any such hard requirement. But one may infer it is indirectly encouraged (<a href=\"https://timsong-cpp.github.io/cppwp/n4659/alg.any_of\" rel=\"noreferrer\">[alg.any_of]</a>): </p>\n<blockquote>\n<pre><code>template &lt;class InputIterator, class Predicate&gt;\n  bool any_of(InputIterator first, InputIterator last, Predicate pred);\ntemplate &lt;class ExecutionPolicy, class ForwardIterator, class Predicate&gt;\n  bool any_of(ExecutionPolicy&amp;&amp; exec, ForwardIterator first, ForwardIterator last,\n              Predicate pred);\n</code></pre>\n<p id=\"so_47692180_47692337_0\"><em>Returns</em>: false if [first, last) is empty or if there is no iterator i in the range [first, last) such that pred(*i) is true, and true\n  otherwise.</p>\n<p id=\"so_47692180_47692337_1\"><em>Complexity</em>: At most last - first applications of the predicate.</p>\n</blockquote>\n<p>While a perfectly conforming implementation may apply the predicate <em>exactly</em> <code>last-first</code> times, the wording to me sounds like it would be encouraged to exit as soon as possible.</p>\n<p>Note that it's virtually impossible to ask the same of the overload that accepts an <code>ExecutionPolicy</code>. Since then the order of evaluation is not known.</p>\n<p>On a less formal note, any implementation of the sequential version that <em>does not</em> exit the moment the predicate is true, puts the credentials of its author into question.</p>\n", "LastEditorUserId": "817643", "LastActivityDate": "2017-12-07T10:05:33.440", "Score": "34", "CreationDate": "2017-12-07T10:00:44.480", "ParentId": "47692180", "CommentCount": "14", "OwnerUserId": "817643", "LastEditDate": "2017-12-07T10:05:33.440"}, "47692180": {"ViewCount": "1545", "Body": "<p>Given the following code,</p>\n<pre><code>std::vector&lt;int&gt; numbers = {1, 2, 3, 4, 5};\nstd::any_of(std::begin(numbers), std::end(numbers), \n            [](int number) { return number &gt; 3; } );\n</code></pre>\n<p>is std::any_of required (by the standard) to return as soon as it reaches 4?</p>\n", "AcceptedAnswerId": "47692337", "Title": "Is std::any_of required to follow short circuit logic?", "CreationDate": "2017-12-07T09:52:38.007", "LastActivityDate": "2017-12-07T10:12:56.253", "CommentCount": "4", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2017-12-07T09:59:14.400", "LastEditorUserId": "2380830", "Id": "47692180", "Score": "28", "OwnerUserId": "5755738", "Tags": "<c++><c++11><stl><language-lawyer>", "AnswerCount": "1"}});