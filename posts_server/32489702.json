post_cb({"bq_ids": {"n4140": {"so_32489702_32490017_4": {"length": 8, "quality": 1.0, "section_id": 5420}, "so_32489702_32490017_7": {"length": 9, "quality": 1.0, "section_id": 5420}, "so_32489702_32490017_6": {"length": 9, "quality": 1.0, "section_id": 5420}, "so_32489702_32490017_10": {"length": 6, "quality": 1.0, "section_id": 5420}, "so_32489702_32490017_5": {"length": 12, "quality": 1.0, "section_id": 5420}, "so_32489702_32490017_9": {"length": 14, "quality": 1.0, "section_id": 5420}, "so_32489702_32490017_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 5420}, "so_32489702_32490017_2": {"length": 5, "quality": 1.0, "section_id": 5420}, "so_32489702_32490017_8": {"length": 17, "quality": 1.0, "section_id": 5420}, "so_32489702_32490017_1": {"length": 5, "quality": 1.0, "section_id": 369}}, "n3337": {"so_32489702_32490017_6": {"length": 8, "quality": 0.8888888888888888, "section_id": 5215}, "so_32489702_32490017_10": {"length": 5, "quality": 0.8333333333333334, "section_id": 425}, "so_32489702_32490017_5": {"length": 7, "quality": 0.5833333333333334, "section_id": 5215}, "so_32489702_32490017_9": {"length": 11, "quality": 0.7857142857142857, "section_id": 5215}, "so_32489702_32490017_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 5215}, "so_32489702_32490017_1": {"length": 5, "quality": 1.0, "section_id": 359}, "so_32489702_32490017_2": {"length": 5, "quality": 1.0, "section_id": 5215}, "so_32489702_32490017_4": {"length": 8, "quality": 1.0, "section_id": 5215}}, "n4659": {"so_32489702_32490017_7": {"length": 9, "quality": 1.0, "section_id": 6842}, "so_32489702_32490017_6": {"length": 9, "quality": 1.0, "section_id": 6842}, "so_32489702_32490017_10": {"length": 6, "quality": 1.0, "section_id": 6842}, "so_32489702_32490017_2": {"length": 5, "quality": 1.0, "section_id": 6842}, "so_32489702_32490017_9": {"length": 14, "quality": 1.0, "section_id": 6842}, "so_32489702_32490017_5": {"length": 11, "quality": 0.9166666666666666, "section_id": 6842}, "so_32489702_32490017_1": {"length": 5, "quality": 1.0, "section_id": 6842}, "so_32489702_32490017_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 6842}, "so_32489702_32490017_8": {"length": 17, "quality": 1.0, "section_id": 6842}, "so_32489702_32490017_4": {"length": 7, "quality": 0.875, "section_id": 6842}}}, "32489702": {"ViewCount": "360", "Body": "<p>I have to following code:</p>\n<pre><code>class IP4Address\n{\n    public:\n    constexpr IP4Address();\n    constexpr IP4Address(uint32_t a_IP, uint16_t a_Port);\n\n    private:\n    uint32_t m_IP;\n    uint16_t m_Port;\n};\n\nconstexpr IP4Address::IP4Address():\n    IP4Address(0, 0)\n{\n\n}\n\nconstexpr IP4Address::IP4Address(uint32_t a_IP, uint16_t a_Port):\n    m_IP(a_IP),\n    m_Port(a_Port)\n{\n\n}\n</code></pre>\n<p>Which results in the following errors (Visual Studio 2015):</p>\n<pre><code>error C2476: 'constexpr' constructor does not initialize all members\nnote: 'IP4Address::m_IP' was not initialized by the constructor\nnote: 'IP4Address::m_Port' was not initialized by the constructor\n</code></pre>\n<p>Is this invalid C++? Am I doing something wrong? Or is this possibly a compiler bug?</p>\n", "AcceptedAnswerId": "32490017", "Title": "constexpr with delegating constructors", "CreationDate": "2015-09-09T21:49:03.130", "Id": "32489702", "CommentCount": "3", "LastEditDate": "2015-09-10T08:09:59.753", "PostTypeId": "1", "LastEditorUserId": "2534689", "LastActivityDate": "2015-09-10T08:09:59.753", "Score": "1", "OwnerUserId": "2534689", "Tags": "<c++><visual-c++><visual-studio-2015>", "AnswerCount": "1"}, "32490017": {"Id": "32490017", "PostTypeId": "2", "Body": "<p>This is a bug in MSVC 2015. The C++ 11 documentation <code>\u00a77.1.5 4</code> says in a pretty clear manner:</p>\n<blockquote>\n<p id=\"so_32489702_32490017_0\"><strong>4. The definition of a constexpr constructor shall satisfy the following constraints</strong>:</p>\n<p id=\"so_32489702_32490017_1\"><em>4.1</em> the class shall not have any virtual base classes</p>\n<p id=\"so_32489702_32490017_2\"><em>4.2</em> each of the parameter types shall be a literal type</p>\n<p id=\"so_32489702_32490017_3\"><em>4.3</em> its function-body shall not be a function-try-block;</p>\n<p id=\"so_32489702_32490017_4\">In addition, either its function-body shall be = delete, or it shall satisfy the following constraints:</p>\n<p id=\"so_32489702_32490017_5\"><em>4.4</em> either its function-body shall be = default, or the compound-statement of its function-body shall satisfy the constraints for a function-body of a constexpr function;</p>\n<p id=\"so_32489702_32490017_6\"><em>4.5</em> every non-variant non-static data member and base class sub-object shall be initialized</p>\n<p id=\"so_32489702_32490017_7\"><em>4.6</em> if the class is a union having variant members (9.5), exactly one of them shall be initialized;</p>\n<p id=\"so_32489702_32490017_8\"><em>4.7</em> if the class is a union-like class, but is not a union, for each of its anonymous union members having variant members, exactly one of them shall be initialized;</p>\n<p id=\"so_32489702_32490017_9\"><em>4.8</em> for a non-delegating constructor, every constructor selected to initialize non-static data members and base class sub-objects shall be\n  a constexpr constructor;</p>\n<p id=\"so_32489702_32490017_10\"><em>4.9</em> for a delegating constructor, the target constructor shall be a constexpr constructor.</p>\n</blockquote>\n<p>Your class matches all criterias. <a href=\"http://goo.gl/IaZNDe\" rel=\"nofollow\">Clang</a> and <a href=\"http://goo.gl/Cfv5Ax\" rel=\"nofollow\">GCC</a> also accept your source so I would be surprised if I overlooked something.</p>\n", "LastActivityDate": "2015-09-09T22:18:14.923", "Score": "4", "CreationDate": "2015-09-09T22:18:14.923", "ParentId": "32489702", "CommentCount": "0", "OwnerUserId": "1385931"}});