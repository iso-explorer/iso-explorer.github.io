post_cb({"13027522": {"ParentId": "13027504", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>If any one of them will be true, it will not proceed further. That is call <a href=\"http://en.wikipedia.org/wiki/Short-circuit_evaluation\" rel=\"nofollow\">Short Circuit Evaluation</a>. </p>\n<p>If <code>foo()</code> resolves to true, the next method <code>bar()</code> will not be executed in the if statement. The condition will resolve to true. </p>\n<p>Check <a href=\"http://msdn.microsoft.com/en-us/library/6373h346%28v=vs.110%29.aspx\" rel=\"nofollow\">|| Operator (C# Reference) - MSDN</a></p>\n<p>The operation</p>\n<pre><code>x || y\n</code></pre>\n<p>corresponds to the operation</p>\n<pre><code>x | y\n</code></pre>\n<blockquote>\n<p id=\"so_13027504_13027522_0\">except that if x is true, y is not evaluated because the OR operation\n  is true regardless of the value of y. This concept is known as\n  <strong>\"short-circuit\" evaluation</strong>.</p>\n</blockquote>\n", "OwnerUserId": "961113", "LastEditorUserId": "961113", "LastEditDate": "2012-10-23T09:43:08.677", "Id": "13027522", "Score": "1", "CreationDate": "2012-10-23T09:37:24.607", "LastActivityDate": "2012-10-23T09:43:08.677"}, "13027504": {"CommentCount": "1", "ViewCount": "122", "CreationDate": "2012-10-23T09:36:22.177", "LastActivityDate": "2012-10-23T09:48:14.450", "Title": "Do all logical OR separated checks in an if get processed prior to execution of the code within?", "AcceptedAnswerId": "13027523", "PostTypeId": "1", "Id": "13027504", "Score": "-1", "Body": "<p>Suppose I had an if statement in a method like so:</p>\n<pre><code>if ( foo() || bar() ) {\n    return true;\n}\n</code></pre>\n<p>Would both <code>foo()</code> and <code>bar()</code> both be processed entirely before assessing whether to execute the code within, or as soon as one condition satisfies the if?</p>\n<p>My reason for asking is that my equivalents of the <code>foo()</code> and <code>bar()</code> methods are fairly computationally expensive functions, and if <code>foo()</code> alone satisfied the if conditions I would not want to execute <code>bar()</code>. As such, my current code is along the lines of:</p>\n<pre><code>if ( foo() ) {\n    return true;\n}\nif ( bar() ) {\n    return true;\n}\n</code></pre>\n<p>Is this necessary, or would the logical OR separated function behave as a require?</p>\n", "Tags": "<c#><java><c++><if-statement><logical-operators>", "OwnerUserId": "1565247", "AnswerCount": "3"}, "13027523": {"ParentId": "13027504", "CommentCount": "1", "Body": "<p><code>&amp;&amp;</code> and <code>||</code> are <strong>short-circuiting</strong> in all 3 languages AFAIK, so if <code>foo()</code> evaluates to <code>true</code>, <code>bar()</code> will not be called.</p>\n<p>5.15 Logical OR operator [expr.log.or]</p>\n<blockquote>\n<p id=\"so_13027504_13027523_0\">1) The || operator groups left-to-right. The operands are both contextually converted to bool (Clause 4). It\n  returns true if either of its operands is true, and false otherwise. Unlike <code>|</code>, <code>||</code> guarantees left-to-right\n  evaluation; moreover, <strong>the second operand is not evaluated if the first operand evaluates to <code>true</code></strong>. (emphasis mine)</p>\n</blockquote>\n", "OwnerUserId": "673730", "PostTypeId": "2", "Id": "13027523", "Score": "7", "CreationDate": "2012-10-23T09:37:26.773", "LastActivityDate": "2012-10-23T09:37:26.773"}, "bq_ids": {"n4140": {"so_13027504_13027523_0": {"section_id": 6165, "quality": 0.8787878787878788, "length": 29}}, "n3337": {"so_13027504_13027523_0": {"section_id": 5926, "quality": 0.8787878787878788, "length": 29}}, "n4659": {"so_13027504_13027523_0": {"section_id": 7662, "quality": 0.8787878787878788, "length": 29}}}, "13027748": {"ParentId": "13027504", "CommentCount": "1", "Body": "<p>I got little curious and wrote a small program to ascertain what should happen.</p>\n<pre><code>class Program\n    {\n        static void Main(string[] args)\n        {\n\n            if (foo() || bar())\n            {\n                Console.WriteLine(\"Either Foo or Bar returned true\");\n            }\n            Console.ReadKey();\n        }\n        public static bool foo()\n        {\n            Console.WriteLine(\"I am in Foo\");\n            return true;\n        }\n        public static bool bar()\n        {\n            Console.WriteLine(\"I am in Bar\");\n            return false;\n        }\n\n    }\n</code></pre>\n<p>This just returned </p>\n<pre><code>I am in Foo\nEither Foo or Bar returned true\n</code></pre>\n<p>Means, if first evaluation is true, it will NOT go for second evaluation and it goes left to right.</p>\n<p>-Milind</p>\n", "OwnerUserId": "1680392", "PostTypeId": "2", "Id": "13027748", "Score": "1", "CreationDate": "2012-10-23T09:48:14.450", "LastActivityDate": "2012-10-23T09:48:14.450"}});