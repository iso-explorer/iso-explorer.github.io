post_cb({"bq_ids": {"n4140": {"so_47138819_47138978_0": {"length": 19, "quality": 1.0, "section_id": 653}}, "n3337": {"so_47138819_47138978_0": {"length": 19, "quality": 1.0, "section_id": 643}}, "n4659": {"so_47138819_47138978_0": {"length": 19, "quality": 1.0, "section_id": 681}}}, "47138819": {"ViewCount": "78", "Body": "<p>I want to overload \"-&gt;\" operator globally for pointers. Is it possible?</p>\n<pre><code>A *var1 = new A(21);\nint x = var1-&gt;someInt;\n</code></pre>\n<p>In that code it has to be triggered when reaching \"var1\"s \"someInt\" variable.</p>\n<p>Actually I am trying to check the pointer before reaching its members. Also, I am trying to implement this system on a written code, so I don't want to change too much thing in the actual code.</p>\n", "Title": "Global Operator \"->\" overload C++", "CreationDate": "2017-11-06T14:08:57.147", "LastActivityDate": "2017-11-06T19:32:15.230", "CommentCount": "3", "LastEditDate": "2017-11-06T19:32:15.230", "PostTypeId": "1", "LastEditorUserId": "6188535", "Id": "47138819", "Score": "0", "OwnerUserId": "6188535", "Tags": "<c++><operator-overloading>", "AnswerCount": "2"}, "47138978": {"Id": "47138978", "PostTypeId": "2", "Body": "<p>As described in C++17 standard draft in section 16.5.6 (emphasis mine):</p>\n<blockquote>\n<p id=\"so_47138819_47138978_0\">An operator function shall either be a non-static member function or\n  be a non-member function that has <strong>at least one parameter whose type\n  is a class, a reference to a class, an enumeration, or a reference to\n  an enumeration</strong>.</p>\n</blockquote>\n<p>Hence, it is not possible to overload an operator which doesn't take any arguments.</p>\n", "LastActivityDate": "2017-11-06T14:17:33.803", "CommentCount": "0", "CreationDate": "2017-11-06T14:17:33.803", "ParentId": "47138819", "Score": "2", "OwnerUserId": "5440453"}, "47138982": {"Id": "47138982", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_47138819_47138982_0\">I want to overload \"-&gt;\" operator globally. Is it possible?</p>\n</blockquote>\n<p>No it is impossible.</p>\n<p>Perhaps you might define a \"root\" class in your library or program (which would define that operator <code>-&gt;</code>), and have all your classes inherit from it.</p>\n<p>BTW, I am not sure you will be able to define your <code>isPointerValid</code> function in all cases (including the address of valid automatic variables of any class type), and efficiently.</p>\n<p>There are many cases where you could not define such a function (e.g. <code>union</code>-s used in <a href=\"https://en.wikipedia.org/wiki/Tagged_union\" rel=\"nofollow noreferrer\">tagged union</a> types; you don't easily know what member of a union is currently active. arbitrary casts; ...); .</p>\n<p>For existing code and classes, the builtin meaning of <code>-&gt;</code> (which you usually cannot redefine) has already been used to compile the code using them.</p>\n", "LastEditorUserId": "841108", "LastActivityDate": "2017-11-06T14:41:02.723", "Score": "2", "CreationDate": "2017-11-06T14:17:47.217", "ParentId": "47138819", "CommentCount": "2", "OwnerUserId": "841108", "LastEditDate": "2017-11-06T14:41:02.723"}});