post_cb({"bq_ids": {"n4140": {"so_5722307_5722393_0": {"section_id": 7019, "quality": 1.0, "length": 7}}, "n3337": {"so_5722307_5722393_0": {"section_id": 6765, "quality": 1.0, "length": 7}}, "n4659": {"so_5722307_5722393_0": {"section_id": 8516, "quality": 1.0, "length": 7}}}, "5722439": {"ParentId": "5722307", "CommentCount": "0", "Body": "<p>The first question is already answered -- the standard simply disallows it.</p>\n<p>The second question is:</p>\n<blockquote>\n<p id=\"so_5722307_5722439_0\">On android, I see that I have to\n  define the function inline like this,</p>\n</blockquote>\n<pre><code>inline void Base::funcFoo() {}\n</code></pre>\n<blockquote>\n<p id=\"so_5722307_5722439_1\">instead of just,</p>\n</blockquote>\n<pre><code>void Base::funcFoo() {}\n</code></pre>\n<blockquote>\n<p id=\"so_5722307_5722439_2\">what is the\n  diference in implicit inlining and\n  explicit inlining here? what is the\n  compiler doing different?</p>\n</blockquote>\n<p>The difference is that the first variant can be placed in a header file, which can be included by more than one source file. The second variant must be place in exactly one source file.</p>\n", "OwnerUserId": "623133", "PostTypeId": "2", "Id": "5722439", "Score": "0", "CreationDate": "2011-04-19T20:41:48.090", "LastActivityDate": "2011-04-19T20:41:48.090"}, "5722307": {"CommentCount": "4", "ViewCount": "196", "PostTypeId": "1", "LastEditorUserId": "128645", "CreationDate": "2011-04-19T20:30:05.070", "LastActivityDate": "2011-04-19T20:45:49.567", "Title": "why does the standard disallow \"virtual void funcFoo() = 0 { }\"?", "AcceptedAnswerId": "5722454", "LastEditDate": "2011-04-19T20:31:52.707", "Id": "5722307", "Score": "0", "Body": "<p>[<em>I couldn't find a proper answer to this. Kindly point me to proper links if this is already answered.</em>]</p>\n<p>I know that it illegal to do something like this,</p>\n<pre><code>class Base\n{\npublic:\n    virtual void funcFoo() = 0 {}   //illegal. should be defined outside the class body\n    virtual ~Base() {}\n};\n</code></pre>\n<p>But this works fine on VS2008.\nI want to know why this is disallowed by the standard?</p>\n<p>On android, I see that I <strong>have to</strong> define the function <strong>inline</strong> like this,</p>\n<pre><code>inline void Base::funcFoo() {}\n</code></pre>\n<p>instead of just,</p>\n<pre><code>void Base::funcFoo() {}\n</code></pre>\n<p>what is the diference in implicit inlining and explicit inlining here? what is the compiler doing different?</p>\n", "Tags": "<c++><pure-virtual>", "OwnerUserId": "663318", "AnswerCount": "3"}, "5722393": {"ParentId": "5722307", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>That is ill-formed according to section \u00a710.4/2 which says (in the note) that,</p>\n<blockquote>\n<p id=\"so_5722307_5722393_0\"><strong>a function declaration cannot provide both a pure-specifier and a definition</strong></p>\n</blockquote>\n<pre><code>[Example:\n\nstruct C {\n   virtual void f() = 0 { }; // ill-formed\n};\n\n\u2014end example]\n</code></pre>\n<p>Hope it answers your question.</p>\n<p>Now please refer to the first comment (below) made by @John Dibling, as unfortunately the answer to your \"why\" question isn't in the Standard, IF <code>\"that is ill-formed\"</code> isn't an acceptable answer to you. The language grammar simply doesn't allow it.:-)</p>\n", "OwnerUserId": "415784", "LastEditorUserId": "415784", "LastEditDate": "2011-04-19T20:45:49.567", "Id": "5722393", "Score": "4", "CreationDate": "2011-04-19T20:36:32.810", "LastActivityDate": "2011-04-19T20:45:49.567"}, "5722454": {"ParentId": "5722307", "CommentCount": "1", "Body": "<p>I don't think there is much of an answer to this. It came up once before (possibly on Usenet instead of SO -- I don't remember), so I did some looking. I didn't really come up with much of anything. As far as I can tell, that's how Bjarne originally devised it. Although it could be changed, I couldn't find any proposals to the committee that it be changed, nor any indication that the committee has even debated, discussed, or considered it at all. My guess would be that it's considered \"good enough\" the way it is, so nobody's willing to put in much (any?) effort to change it.</p>\n", "OwnerUserId": "179910", "PostTypeId": "2", "Id": "5722454", "Score": "1", "CreationDate": "2011-04-19T20:43:28.367", "LastActivityDate": "2011-04-19T20:43:28.367"}});