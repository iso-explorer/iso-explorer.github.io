post_cb({"bq_ids": {"n4140": {"so_22668264_22668324_0": {"length": 19, "quality": 1.0, "section_id": 5352}}, "n3337": {"so_22668264_22668324_0": {"length": 19, "quality": 1.0, "section_id": 5149}}, "n4659": {"so_22668264_22668324_0": {"length": 18, "quality": 0.9473684210526315, "section_id": 6777}}}, "22668264": {"ViewCount": "11250", "Body": "<p>Is this legal under C++11?</p>\n<pre><code>string s = R\"(This is the first line\nAnd this is the second line)\";\n</code></pre>\n<p>... being equivalent to:</p>\n<pre><code>string s = \"This is the first line\\nAnd this is the second line\";\n</code></pre>\n", "AcceptedAnswerId": "22668324", "Title": "In C++11, can raw string literals have multiple lines?", "CreationDate": "2014-03-26T17:09:29.760", "Id": "22668264", "CommentCount": "1", "FavoriteCount": "2", "PostTypeId": "1", "LastActivityDate": "2017-02-05T16:12:42.337", "Score": "29", "OwnerUserId": "442528", "Tags": "<c++><string><c++11>", "AnswerCount": "1"}, "22668324": {"Id": "22668324", "PostTypeId": "2", "Body": "<p>Yes, that is perfectly valid. See <a href=\"http://en.cppreference.com/w/cpp/language/string_literal\" rel=\"noreferrer\">here</a>.</p>\n<p>Also, from the (draft) standard 2.14.5/4:</p>\n<blockquote>\n<p id=\"so_22668264_22668324_0\">A source-file new-line in a raw string literal results in a new-line\n  in the resulting execution <em>string-literal</em>. Assuming no whitespace at the beginning of lines in the\n  following example, the assert will succeed:</p>\n<pre><code>const char *p = R\"(a\\\nb\nc)\";\nassert(std::strcmp(p, \"a\\\\\\nb\\nc\") == 0);\n</code></pre>\n</blockquote>\n", "LastEditorUserId": "56338", "LastActivityDate": "2017-02-05T16:12:42.337", "Score": "32", "CreationDate": "2014-03-26T17:13:08.920", "ParentId": "22668264", "CommentCount": "5", "OwnerUserId": "4086", "LastEditDate": "2017-02-05T16:12:42.337"}});