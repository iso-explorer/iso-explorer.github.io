post_cb({"27698364": {"CommentCount": "2", "AcceptedAnswerId": "27698788", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2014-12-30T01:14:23.973", "LastActivityDate": "2014-12-30T02:16:43.257", "LastEditDate": "2017-05-23T12:22:49.103", "ViewCount": "135", "FavoriteCount": "1", "Title": "C++11: Difference between Test* test = new Test; and Test* test = new Test();", "Id": "27698364", "Score": "1", "Body": "<p>Under C++11, if 'Test' is an ordinary class, is there any difference between:</p>\n<pre><code>Test* test = new Test;\n//and\nTest* test = new Test();\n</code></pre>\n<p>Note: this is the same question <a href=\"https://stackoverflow.com/questions/620137/do-the-parentheses-after-the-type-name-make-a-difference-with-new\">Do the parentheses after the type name make a difference with new?</a> asked again, because the old thread is before C++11, while I'd like to ask if there's a difference under c++11 stadard.</p>\n<p>The accepted answer of that question says:</p>\n<ul>\n<li>In C++1998 there are 2 types of initialization: zero and default In</li>\n<li>C++2003 a 3rd type of initialization, value initialization was added.</li>\n</ul>\n<p>I understand that C++11 only has 2 initialization, default and value. So i fancy the answer are a bit different?</p>\n", "Tags": "<c++11><constructor><initialization><new-operator>", "OwnerUserId": "826203", "AnswerCount": "1"}, "27698788": {"ParentId": "27698364", "CommentCount": "2", "Body": "<p>C++11 has zero-initialization, default-initialization, value-initialization (<strong>8.5/5</strong>, <strong>/6</strong> and <strong>/7</strong>, correspondingly), copy-initialization (<strong>8.5/14</strong>), direct-initialization (<strong>8.5/15</strong>) and list-initialization (<strong>8.5.4</strong>).</p>\n<p>With respect to <code>new</code> in particular:</p>\n<blockquote>\n<p id=\"so_27698364_27698788_0\"><strong>5.3.4/15</strong> A <em>new-expression</em> that creates an object of type <code>T</code> initializes that object as follows:</p>\n<p id=\"so_27698364_27698788_1\">\u2014 If the <em>new-initializer</em> is omitted, the object is default-initialized (8.5); if no initialization is performed, the object has indeterminate value.</p>\n<p id=\"so_27698364_27698788_2\">\u2014 Otherwise, the <em>new-initializer</em> is interpreted according to the initialization rules of 8.5 for direct-initialization.</p>\n</blockquote>\n", "OwnerUserId": "1670129", "PostTypeId": "2", "Id": "27698788", "Score": "1", "CreationDate": "2014-12-30T02:16:43.257", "LastActivityDate": "2014-12-30T02:16:43.257"}, "bq_ids": {"n4140": {"so_27698364_27698788_2": {"section_id": 6098, "quality": 1.0, "length": 7}, "so_27698364_27698788_1": {"section_id": 6098, "quality": 1.0, "length": 9}, "so_27698364_27698788_0": {"section_id": 6098, "quality": 0.875, "length": 7}}, "n3337": {"so_27698364_27698788_2": {"section_id": 5864, "quality": 1.0, "length": 7}, "so_27698364_27698788_1": {"section_id": 5864, "quality": 1.0, "length": 9}, "so_27698364_27698788_0": {"section_id": 5864, "quality": 0.875, "length": 7}}, "n4659": {"so_27698364_27698788_2": {"section_id": 7595, "quality": 1.0, "length": 7}, "so_27698364_27698788_1": {"section_id": 7595, "quality": 1.0, "length": 9}, "so_27698364_27698788_0": {"section_id": 7595, "quality": 0.875, "length": 7}}}});