post_cb({"bq_ids": {"n4140": {"so_12216793_12216934_0": {"length": 37, "quality": 0.8604651162790697, "section_id": 5974}}, "n3337": {"so_12216793_12216934_0": {"length": 39, "quality": 0.9069767441860465, "section_id": 5742}}, "n4659": {"so_12216793_12216934_0": {"length": 34, "quality": 0.7906976744186046, "section_id": 7473}}}, "12216934": {"Id": "12216934", "PostTypeId": "2", "Body": "<p>Yes, there is a difference.</p>\n<p><code>\u00a75.1.2 [expr.prim.lambda] p14</code></p>\n<blockquote>\n<p id=\"so_12216793_12216934_0\">An entity is <em>captured by copy</em> if it is implicitly captured and the <em>capture-default</em> is <code>=</code> or if it is explicitly captured with a capture that does not include an <code>&amp;</code>. For each entity captured by copy, an unnamed nonstatic data member is declared in the closure type. The declaration order of these members is unspecified. <strong>The type of such a data member is</strong> the type of the corresponding captured entity if the entity is not a reference to an object, or <strong>the referenced type</strong> otherwise.</p>\n</blockquote>\n<p>So, if you capture an identifier that names a reference by value, you get a copy of the referenced object.</p>\n", "LastActivityDate": "2012-08-31T14:00:32.100", "CommentCount": "6", "CreationDate": "2012-08-31T14:00:32.100", "ParentId": "12216793", "Score": "12", "OwnerUserId": "500104"}, "12216793": {"ViewCount": "249", "Body": "<p>For <code>foo</code> declared as <code>Foo&amp; foo = ...;</code>, is there any difference between capture-by-value and capture-by-reference semantics for lambdas?</p>\n", "AcceptedAnswerId": "12216934", "Title": "Is there a difference between [&foo]{ ... } capture and [foo]{ ... } capture if 'foo' is a reference variable?", "CreationDate": "2012-08-31T13:53:10.557", "Id": "12216793", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2012-08-31T13:56:13.720", "LastEditorUserId": "500104", "LastActivityDate": "2012-08-31T14:13:29.927", "Score": "13", "OwnerUserId": "152580", "Tags": "<c++><lambda><c++11>", "AnswerCount": "2"}, "12217151": {"Id": "12217151", "PostTypeId": "2", "Body": "<p>I think you have fallen to a common misconception... references are <em>aliases</em> to real objects. After initialization, any use of the reference is exactly equivalent to an use of the original object. If you consider this, the question makes little sense. If the reference <strong>is</strong> the object, then the behavior of <code>[foo](){}</code> will be exactly the same regardless of whether <code>foo</code> is an object or a reference to the object.</p>\n", "LastActivityDate": "2012-08-31T14:13:29.927", "CommentCount": "8", "CreationDate": "2012-08-31T14:13:29.927", "ParentId": "12216793", "Score": "16", "OwnerUserId": "36565"}});