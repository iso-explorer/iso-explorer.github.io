post_cb({"bq_ids": {"n4140": {"so_47354881_47355199_2": {"length": 17, "quality": 0.9444444444444444, "section_id": 7182}, "so_47354881_47355199_0": {"length": 15, "quality": 1.0, "section_id": 6110}, "so_47354881_47354881_1": {"length": 6, "quality": 0.6666666666666666, "section_id": 6106}, "so_47354881_47355199_1": {"length": 12, "quality": 0.8571428571428571, "section_id": 6111}, "so_47354881_47354936_0": {"length": 6, "quality": 0.6, "section_id": 6111}}, "n3337": {"so_47354881_47355199_2": {"length": 17, "quality": 0.9444444444444444, "section_id": 6926}, "so_47354881_47355199_0": {"length": 15, "quality": 1.0, "section_id": 5876}, "so_47354881_47354881_1": {"length": 6, "quality": 0.6666666666666666, "section_id": 5872}, "so_47354881_47355199_1": {"length": 12, "quality": 0.8571428571428571, "section_id": 5877}, "so_47354881_47354936_0": {"length": 6, "quality": 0.6, "section_id": 36}}, "n4659": {"so_47354881_47355199_2": {"length": 17, "quality": 0.9444444444444444, "section_id": 8690}, "so_47354881_47355199_0": {"length": 15, "quality": 1.0, "section_id": 7607}, "so_47354881_47354881_1": {"length": 6, "quality": 0.6666666666666666, "section_id": 7603}, "so_47354881_47355199_1": {"length": 14, "quality": 1.0, "section_id": 7608}, "so_47354881_47354936_0": {"length": 6, "quality": 0.6, "section_id": 7584}}}, "47355199": {"Id": "47355199", "PostTypeId": "2", "Body": "<p>For destructors, <a href=\"http://eel.is/c++draft/expr.delete#6.sentence-1\" rel=\"nofollow noreferrer\">[expr.delete]/6</a>:</p>\n<blockquote>\n<p id=\"so_47354881_47355199_0\">If the value of the operand of the <em>delete-expression</em> is not a null pointer value, the <em>delete-expression</em> will invoke the destructor (if any) for the object or the elements of the array being deleted.</p>\n</blockquote>\n<p>This technically doesn't say that if the operand <em>is</em> a null pointer value, the destructor isn't invoked. Probably a minor wording issue?</p>\n<p>For deallocation, <a href=\"http://eel.is/c++draft/expr.delete#7.sentence-3\" rel=\"nofollow noreferrer\">[expr.delete]/7</a>:</p>\n<blockquote>\n<p id=\"so_47354881_47355199_1\">If the value of the operand of the delete-expression is a null pointer value, <strong>it is unspecified</strong> whether a deallocation function will be called as described above.</p>\n</blockquote>\n<p>Unspecified deallocation, but likely no destruction. </p>\n<p>Note also, from <a href=\"http://eel.is/c++draft/basic#stc.dynamic.deallocation-3.sentence-2\" rel=\"nofollow noreferrer\">[basic.stc.dynamic.deallocation]/3</a>, which clarifies that even if the standard library deallocation function is called in this situation, there is no effect:</p>\n<blockquote>\n<p id=\"so_47354881_47355199_2\">The value of the first argument supplied to a deallocation function may be a null pointer value; if so, and if the deallocation function is one supplied in the standard library, the call has no effect.</p>\n</blockquote>\n", "LastEditorUserId": "2069064", "LastActivityDate": "2017-11-17T18:08:16.037", "Score": "5", "CreationDate": "2017-11-17T16:29:43.737", "ParentId": "47354881", "CommentCount": "1", "OwnerUserId": "2069064", "LastEditDate": "2017-11-17T18:08:16.037"}, "47354881": {"ViewCount": "143", "Body": "<p>C++03 Standard say's:</p>\n<blockquote>\n<p id=\"so_47354881_47354881_0\"><strong>5.3.5 Delete</strong></p>\n<p id=\"so_47354881_47354881_1\">[...] In either alternative, if the value of the operand of delete is the null pointer the operation has no effect.[...]</p>\n</blockquote>\n<pre><code>char *p = nullptr;\ndelete p; //no effect\n</code></pre>\n<p>It means, it is valid to delete null pointer in c++.</p>\n<p>What C++17 standard say about calling delete on nullptr pointer?</p>\n", "AcceptedAnswerId": "47354936", "Title": "What C++17 standard say about calling delete on nullptr?", "CreationDate": "2017-11-17T16:12:37.990", "Id": "47354881", "CommentCount": "4", "LastEditDate": "2017-11-17T17:37:38.390", "PostTypeId": "1", "LastEditorUserId": "6935629", "LastActivityDate": "2017-11-17T18:08:16.037", "Score": "1", "OwnerUserId": "6935629", "Tags": "<c++><language-lawyer><c++1z><delete-operator><nullptr>", "AnswerCount": "2"}, "47354936": {"Id": "47354936", "PostTypeId": "2", "Body": "<p>Yes it is valid, and it results in a noop. <a href=\"http://en.cppreference.com/w/cpp/language/delete\" rel=\"noreferrer\">reference</a></p>\n<blockquote>\n<p id=\"so_47354881_47354936_0\">If expression evaluates to a null pointer value, no destructors are called, and the deallocation function is not called. </p>\n</blockquote>\n", "LastActivityDate": "2017-11-17T16:15:44.273", "CommentCount": "0", "CreationDate": "2017-11-17T16:15:44.273", "ParentId": "47354881", "Score": "10", "OwnerUserId": "2296458"}});