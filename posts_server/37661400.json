post_cb({"37661400": {"Tags": "<c++><opencv><gcc>", "ViewCount": "119", "CreationDate": "2016-06-06T15:35:15.137", "Title": "Peculiar compile error: \u2018cap\u2019 does not name a type", "CommentCount": "3", "AnswerCount": "1", "Score": "0", "OwnerUserId": "3073656", "Id": "37661400", "LastActivityDate": "2016-06-06T16:04:59.817", "Body": "<p>I am getting a compile time error that seems to defy all my logic. The following three code snippets work, while the third does not. Why?</p>\n<p><strong>Works 1</strong></p>\n<pre><code>#include \"opencv2/opencv.hpp\"\n\ncv::VideoCapture cap(0); \n\nint main()\n{\n        return 0;\n}\n</code></pre>\n<p><strong>Works 2</strong></p>\n<pre><code>#include \"opencv2/opencv.hpp\"\n\nint main()\n{\n    cv::VideoCapture cap(0);\n    return 0;\n}\n</code></pre>\n<p><strong>Works 3</strong></p>\n<pre><code>#include \"opencv2/opencv.hpp\"\n\nint main()\n{\n    cv::VideoCapture cap; \n    cap.open(0);\n    return 0;\n}\n</code></pre>\n<p><strong>Does not work:</strong></p>\n<pre><code>#include \"opencv2/opencv.hpp\"\n\ncv::VideoCapture cap; \ncap.open(0);\n\nint main()\n{\n    return 0;\n}\n</code></pre>\n<p>The error I get is: </p>\n<blockquote>\n<p id=\"so_37661400_37661400_0\">error: \u2018cap\u2019 does not name a type  cap.open(0);</p>\n</blockquote>\n<p>GCC version: <code>6.1.1 20160501</code> \nOpenCV version: <code>3.1.0-3</code></p>\n<p>What could be wrong?</p>\n", "PostTypeId": "1"}, "37662025": {"ParentId": "37661400", "Score": "1", "CreationDate": "2016-06-06T16:04:59.817", "Id": "37662025", "OwnerUserId": "3740613", "LastActivityDate": "2016-06-06T16:04:59.817", "Body": "<p>You cannot put <code>cap.open(0)</code> outside of <code>main</code> as this is how C++ works. But <code>cap.open(0)</code> inside <code>main</code> will work just fine.  </p>\n<p>And as a general rule, you cannot write this kind of code outside a function, the compiler is simply not able to understand where to execute it during run-time.</p>\n", "PostTypeId": "2", "CommentCount": "0"}, "bq_ids": {"n4659": {"so_37661400_37661400_0": {"length": 4, "section_id": 180, "quality": 0.6666666666666666}}}});