post_cb({"8692841": {"ParentId": "8692013", "LastEditDate": "2012-01-01T12:36:27.593", "CommentCount": "1", "CreationDate": "2012-01-01T11:18:44.337", "OwnerUserId": "1120273", "LastEditorUserId": "140719", "PostTypeId": "2", "Id": "8692841", "Score": "6", "Body": "<p>Names starting with a leading underscore followed by a non-capital alphanumeric character and not including a double underscore are only reserved in the global namespace. The reason for this is that on some systems certain names need to get a leading underscore or are already used by the underlying operating system and/or its C library. Names in an anonymous namespace don't have this problem.</p>\n<p>That said, I'm always wondering why people are so keen to use ugly names! Unless I'm in standard library implementation mode (where I effectively have to use ugly names lest I conflict with user names) I'm always wondering if I'm doing something wrong using a leading underscore anywhere in my code! There are rare occasions where a leading underscore is needed (e.g. when calling <code>_exit()</code> or using <code>std::bind()</code>'s placeholders) but generally users shouldn't touch them: neither use nor define them.</p>\n", "LastActivityDate": "2012-01-01T12:36:27.593"}, "8692035": {"ParentId": "8692013", "LastEditDate": "2017-05-23T12:20:14.163", "CommentCount": "8", "CreationDate": "2012-01-01T05:57:24.223", "OwnerUserId": "415784", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "8692035", "Score": "3", "Body": "<p>Yes. But that quote doesn't address that (as you know it yourself).</p>\n<p>Here is what I think applies to that:</p>\n<blockquote>\n<p id=\"so_8692013_8692035_0\"><strong>17.4.3.1.3 External linkage</strong></p>\n<p id=\"so_8692013_8692035_1\">3 . Each name having two consecutive underscores (2.11) is reserved to the implementation for use as a name with both extern \"C\" and extern \"C++\" linkage.</p>\n</blockquote>\n<p>I think it applies to the variables declared with external linkage, in anonymous namespace, but it should be noted that it talks about <em>double</em> underscores. So:</p>\n<pre><code>namespace\n{\n   std::string __s1; //not allowed\n   std::string _s2;  //allowed (allowed, as I understand)\n}\n</code></pre>\n<p>A more general topic:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/228783/what-are-the-rules-about-using-an-underscore-in-a-c-identifier\">What are the rules about using an underscore in a C++ identifier?</a></li>\n</ul>\n", "LastActivityDate": "2012-01-01T06:16:15.127"}, "bq_ids": {"n4140": {"so_8692013_8692035_1": {"section_id": 6310, "quality": 0.5333333333333333, "length": 8}, "so_8692013_8692013_0": {"section_id": 6307, "quality": 0.8461538461538461, "length": 11}}, "n3337": {"so_8692013_8692035_1": {"section_id": 6067, "quality": 0.5333333333333333, "length": 8}, "so_8692013_8692013_0": {"section_id": 6064, "quality": 0.8461538461538461, "length": 11}}, "n4659": {"so_8692013_8692035_1": {"section_id": 7820, "quality": 0.5333333333333333, "length": 8}, "so_8692013_8692013_0": {"section_id": 6756, "quality": 0.6923076923076923, "length": 9}}}, "8692013": {"CommentCount": "4", "ViewCount": "207", "CreationDate": "2012-01-01T05:49:48.343", "LastActivityDate": "2012-01-01T12:36:27.593", "Title": "Can names inside an anonymous namespace in the global scope have leading underscores?", "FavoriteCount": "2", "PostTypeId": "1", "Id": "8692013", "Score": "8", "Body": "<p>According to the spec, global names with leading underscores are not allowed:</p>\n<blockquote>\n<p id=\"so_8692013_8692013_0\">17.4.3.1.2 Global names<br>\n  \u2014 Each name that begins with an underscore is reserved to the implementation for use as a name in the global namespace.</br></p>\n</blockquote>\n<p>Does this also apply for names defined in a top-level anonymous namespace?</p>\n", "Tags": "<c++>", "OwnerUserId": "75889", "AnswerCount": "2"}});