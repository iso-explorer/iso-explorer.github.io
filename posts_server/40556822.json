post_cb({"40556822": {"CommentCount": "7", "AcceptedAnswerId": "40556997", "CreationDate": "2016-11-11T21:55:03.487", "LastActivityDate": "2016-11-11T22:08:12.163", "Title": "Is \"template argument deduction for class templates\" supposed to deduce empty parameter packs for variadic class templates?", "ViewCount": "312", "PostTypeId": "1", "Id": "40556822", "Score": "8", "Body": "<p>The <em>\"Template argument deduction for class templates\"</em> proposal <em>(<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0091r2.html\" rel=\"noreferrer\">P0091R2</a>)</em> contains the following example:</p>\n<pre><code>template&lt;class ... Ts&gt; struct X { X(Ts...) };\nX x1{1}; // OK X&lt;int&gt;\nX x11; // OK X&lt;&gt;\n</code></pre>\n<p><em>(Apart from the fact that the constructor definition is missing a body)</em>, the example seems to suggest that a <strong>variadic class template</strong> constructed with zero argument will be deduced with an empty parameter pack.</p>\n<p>Unfortunately, the latest version of <strong>g++</strong> does not agree:</p>\n<pre><code>int main()\n{\n    X x1{1};\n    X x11;\n}\n</code></pre>\n<p></p>\n<pre><code> In function 'int main()':\n error: invalid use of template-name 'X' without an argument list\n X x11;\n ^\n note: class template argument deduction requires an initializer\n</code></pre>\n<p><a href=\"http://melpon.org/wandbox/permlink/nMMS06MRgelPhlO1\" rel=\"noreferrer\"><strong>example on wandbox</strong></a></p>\n<hr>\n<p>I could not find explicit wording in the proposal that clarifies this interaction. Is g++ wrong here?</p>\n</hr>", "Tags": "<c++><templates><language-lawyer><c++1z><template-deduction>", "OwnerUserId": "598696", "AnswerCount": "1"}, "bq_ids": {"n4659": {"so_40556822_40556997_0": {"section_id": 6891, "quality": 0.6363636363636364, "length": 7}}}, "40556997": {"ParentId": "40556822", "CommentCount": "3", "Body": "<p><a href=\"https://timsong-cpp.github.io/cppwp/dcl.type.class.deduct#1\" rel=\"nofollow noreferrer\">[dcl.type.class.deduct]/1</a>:</p>\n<blockquote>\n<p id=\"so_40556822_40556997_0\">If a placeholder for a deduced class type appears as a\n  <em>decl-specifier</em> in the <em>decl-specifier-seq</em> of a <em>simple-declaration</em>, the <em>init-declarator</em> of that declaration shall be of the form</p>\n<blockquote>\n<p id=\"so_40556822_40556997_2\"><em>declarator-id</em> <em>attribute-specifier-seq</em><sub>opt</sub> <em>initializer</em></p>\n</blockquote>\n</blockquote>\n<p>The initializer is not optional.</p>\n", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "40556997", "Score": "8", "CreationDate": "2016-11-11T22:08:12.163", "LastActivityDate": "2016-11-11T22:08:12.163"}});