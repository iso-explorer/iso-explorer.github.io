post_cb({"bq_ids": {"n4140": {"so_19200859_19202791_0": {"length": 36, "quality": 0.8780487804878049, "section_id": 1182}}, "n3337": {"so_19200859_19202791_0": {"length": 36, "quality": 0.8780487804878049, "section_id": 1180}}, "n4659": {"so_19200859_19202791_0": {"length": 25, "quality": 0.6097560975609756, "section_id": 1263}}}, "19200859": {"ViewCount": "423", "Body": "<p>Why c++ atomic operations has an overloaded version for volatile <code>atomic&lt;T&gt;</code>?</p>\n<p>When are we required declare <code>atomic&lt;T&gt;</code> as volatile and what is difference between <code>atomic&lt;T&gt;</code> and <code>volatile atomic&lt;T&gt;</code>?</p>\n", "Title": "atomic operation with volatile atomic variable", "CreationDate": "2013-10-05T17:49:02.667", "LastActivityDate": "2013-10-05T21:13:02.940", "CommentCount": "9", "LastEditDate": "2013-10-05T18:04:47.040", "PostTypeId": "1", "LastEditorUserId": "2279977", "Id": "19200859", "Score": "5", "OwnerUserId": "2279977", "Tags": "<c++><c++11><atomic>", "AnswerCount": "1"}, "19202791": {"Id": "19202791", "PostTypeId": "2", "Body": "<p>It's the same as with any other type: you need to volatile-qualify your atomic if you're performing atomic operations on a memory-mapped I/O register or otherwise require the semantics of volatile-qualified types (which are not related in any way to atomicity or to the inter-thread synchronization and memory ordering provided by atomic operations).</p>\n<p>The standard has this to say about the <code>volatile</code> overloads for atomics (<code>29.6.5[atomics.types.operations.req]/3</code>)</p>\n<blockquote>\n<p id=\"so_19200859_19202791_0\">[ Note: Many operations are volatile-qualified. The \u201cvolatile as device register\u201d semantics have not changed\n  in the standard. This qualification means that volatility is preserved when applying these operations to\n  volatile objects. It does not mean that operations on non-volatile objects become volatile. Thus, volatile\n  qualified operations on non-volatile objects may be merged under some conditions. \u2014end note ]</p>\n</blockquote>\n", "LastActivityDate": "2013-10-05T21:13:02.940", "CommentCount": "0", "CreationDate": "2013-10-05T21:13:02.940", "ParentId": "19200859", "Score": "3", "OwnerUserId": "273767"}});