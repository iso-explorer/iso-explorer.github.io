post_cb({"bq_ids": {"n4140": {"so_41404733_41404983_0": {"length": 73, "quality": 0.9605263157894737, "section_id": 758}}, "n3337": {"so_41404733_41404983_0": {"length": 73, "quality": 0.9605263157894737, "section_id": 746}}, "n4659": {"so_41404733_41404983_0": {"length": 72, "quality": 0.9473684210526315, "section_id": 818}}}, "41404733": {"ViewCount": "144", "Body": "<p>I constructed a std::unordered_map and use for loop to visit it.\nI found that the sequence of the iteration result shows the elements is put in the sequence that I created those elements, no matter how I inserted them. </p>\n<p>Is this part of C++ standard that unordered_map, when visited, the iteration sequence is the insertion sequence? Or this is implementation preference?</p>\n<p>I ask this question is, I wish to know if this feature, is something I can rely in my c++ code?</p>\n", "AcceptedAnswerId": "41404983", "Title": "loop a std::unordered_map, the sequence is always the sequence I insert elements?", "CreationDate": "2016-12-31T01:47:21.633", "Id": "41404733", "CommentCount": "3", "LastEditDate": "2017-03-17T13:35:46.333", "PostTypeId": "1", "LastEditorUserId": "560648", "LastActivityDate": "2017-03-17T13:35:46.333", "Score": "1", "OwnerUserId": "6164172", "Tags": "<c++><c++11><insert><sequence><unordered-map>", "AnswerCount": "1"}, "41404983": {"Id": "41404983", "PostTypeId": "2", "Body": "<p>No. The standard makes no guarantees about the order of elements in the unordered associative containers <sup>\u2020</sup> (unordered map, set and their multivalued versions) and you can not rely on any particular ordering in your code.</p>\n<p><sup>\u2020</sup> Except for a special case <a href=\"http://eel.is/c++draft/unord.req#6\" rel=\"nofollow noreferrer\">[unord.req]/6</a> (standard draft, emphasis mine):</p>\n<blockquote>\n<p id=\"so_41404733_41404983_0\">An unordered associative container supports unique keys if it may contain at most one element for each key. Otherwise, it supports equivalent keys. unordered_set and unordered_map support unique keys. unordered_multiset and unordered_multimap support equivalent keys. In containers that support equivalent keys, elements with equivalent keys are adjacent to each other in the iteration order of the container. Thus, although <strong>the absolute order of elements in an unordered container is not specified</strong>, its elements are grouped into equivalent-key groups such that all elements of each group have equivalent keys. Mutating operations on unordered containers shall preserve the relative order of elements within each equivalent-key group unless otherwise specified.</p>\n</blockquote>\n", "LastEditorUserId": "2079303", "LastActivityDate": "2016-12-31T03:04:02.277", "Score": "0", "CreationDate": "2016-12-31T02:45:53.050", "ParentId": "41404733", "CommentCount": "0", "OwnerUserId": "2079303", "LastEditDate": "2016-12-31T03:04:02.277"}});