post_cb({"bq_ids": {"n4140": {"so_47455800_47455800_0": {"section_id": 5871, "quality": 0.9565217391304348, "length": 22}}, "n3337": {"so_47455800_47455800_0": {"section_id": 5642, "quality": 0.9565217391304348, "length": 22}}, "n4659": {"so_47455800_47455800_0": {"section_id": 7354, "quality": 0.9565217391304348, "length": 22}}}, "47455800": {"CommentCount": "7", "ViewCount": "89", "PostTypeId": "1", "LastEditorUserId": "4832499", "CreationDate": "2017-11-23T12:39:57.413", "LastActivityDate": "2017-11-23T15:15:49.960", "Title": "How do you get the type of a member function", "FavoriteCount": "0", "LastEditDate": "2017-11-23T15:15:49.960", "Id": "47455800", "Score": "5", "Body": "<p>The question is inspired by a note in the standard <a href=\"http://eel.is/c++draft/class.mem#16\" rel=\"nofollow noreferrer\">[class.mem]</a></p>\n<blockquote>\n<p id=\"so_47455800_47455800_0\">The type of a non-static member function is an ordinary function type, and the type of a non-static data member is an ordinary object type. There are no special member function types or data member types.</p>\n</blockquote>\n<p>So, I decided to test it</p>\n<pre><code>struct S\n{\n    using Fn = void();\n    Fn foo;\n\n    static_assert(std::is_same_v&lt;decltype(foo), Fn&gt;);\n};\n</code></pre>\n<p>But its an error at <code>decltype(foo)</code>: <em>invalid use of non-static member fucntion</em>.</p>\n<p>How do you get the type of a member function? Or is the note just bogus?</p>\n<p>Note: It is valid to do this to data members</p>\n<pre><code>struct U\n{\n    int i;\n    static_assert(std::is_same_v&lt;decltype(i), int&gt;);\n};\n</code></pre>\n<p>Note2: I'm not looking for how to grab the type through a pointer-to-member</p>\n<pre><code>template&lt;typename&gt;\nstruct NotLikeThis;\ntemplate&lt;typename C, typename R, typename... Args&gt;\nstruct NotLikeThis&lt;R (C::*)(Args...)&gt;\n{\n    using type = R(Args...);\n};\n</code></pre>\n<p>The note from the standard is irrelevant to this.</p>\n", "Tags": "<c++><language-lawyer>", "OwnerUserId": "4832499", "AnswerCount": "0"}});