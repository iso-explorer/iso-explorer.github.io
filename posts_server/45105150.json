post_cb({"bq_ids": {"n4140": {"so_45105150_45105150_0": {"length": 19, "quality": 0.95, "section_id": 448}}, "n3337": {"so_45105150_45105150_0": {"length": 19, "quality": 0.95, "section_id": 439}}, "n4659": {"so_45105150_45105150_0": {"length": 20, "quality": 1.0, "section_id": 470}}}, "45105150": {"ViewCount": "44", "Body": "<p>From <a href=\"http://eel.is/c++draft/class.cdtor#4\" rel=\"nofollow noreferrer\">[class.cdtor]</a></p>\n<blockquote>\n<p id=\"so_45105150_45105150_0\">If the operand of <code>typeid</code> refers to the object under construction or destruction and the static type of the operand is neither the constructor or destructor's class nor one of its bases, the behavior is undefined.</p>\n</blockquote>\n<p>And along with it an example (modified for clarity)</p>\n<pre><code>struct V {\n  virtual void f();\n};\n\nstruct A : virtual V { };\n\nstruct B : virtual V {\n  B(V*, A*);\n};\n\nstruct D : A, B {\n  D() : B((A*)this, this) { }\n};\n\nB::B(V* v, A* a) {\n  typeid(*this);        // type_\u00adinfo for B\n  typeid(*v);           // well-defined: *v has type V, a base of B yields type_\u00adinfo for B\n  typeid(*a);           // undefined behavior: type A not a base of B\n}\n</code></pre>\n<p>This is well-defined</p>\n<pre><code>B::B(V*, A* a) {\n    typeid(decltype(*a));\n}\n</code></pre>\n<p>Why is there such a restriction?</p>\n<hr>\n<p>I have a hunch that this is related to <code>typeid</code> returning the dynamic type of an glvalue for polymorphic classes<sup>\u2020</sup>. But why does this restriction also apply for classes that are not polymorphic? </p>\n<pre><code>struct W {};\nstruct X : virtual W {};\nstruct Y : virtual W {\n  Y(W*, X*);\n};\nstruct Z : X, Y {\n  Z() : Y((X*)this, this) {}\n};\n\nY::Y(W* w, X* x) {\n    typeid(*x);  // undefined behavior, yet known at compile time to be typeid(X)\n}\n</code></pre>\n<p><sub>\u2020 Polymorphic refers to exactly classes that inherit or declare virtual functions. Virtual inheritance does not constitute as polymorphic.</sub></p>\n</hr>", "Title": "Restrictions on typeid for objects during construction or destruction", "CreationDate": "2017-07-14T14:14:04.693", "LastActivityDate": "2017-07-14T14:39:42.983", "CommentCount": "1", "LastEditDate": "2017-07-14T14:39:42.983", "PostTypeId": "1", "LastEditorUserId": "4832499", "Id": "45105150", "Score": "0", "OwnerUserId": "4832499", "Tags": "<c++><typeid>", "AnswerCount": "0"}});