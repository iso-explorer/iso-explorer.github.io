post_cb({"47336098": {"CommentCount": "0", "AcceptedAnswerId": "47336287", "ClosedDate": "2017-11-17T14:53:40.377", "CreationDate": "2017-11-16T17:46:49.643", "LastActivityDate": "2017-11-16T17:57:55.270", "PostTypeId": "1", "ViewCount": "47", "Title": "Do arithmetic operators have to promote integral arguments to int?", "Id": "47336098", "Score": "1", "Body": "<p><a href=\"http://en.cppreference.com/w/cpp/language/implicit_conversion#Integral_promotion\" rel=\"nofollow noreferrer\">cppreference says</a>:</p>\n<blockquote>\n<p id=\"so_47336098_47336098_0\">In particular, arithmetic operators do not accept types smaller than int as arguments, and integral promotions are automatically applied after lvalue-to-rvalue conversion, if applicable.</p>\n</blockquote>\n<p>All the major compilers (g++, clang, and msvc) <a href=\"https://godbolt.org/g/Gr4xqN\" rel=\"nofollow noreferrer\">say</a> that <code>decltype(a+b)</code> is <code>int</code> when both <code>a</code> and <code>b</code> are <code>short</code>.</p>\n<p>However, the standard says:</p>\n<blockquote>\n<p id=\"so_47336098_47336098_1\"><a href=\"http://eel.is/c++draft/conv.prom#1\" rel=\"nofollow noreferrer\">Integral promotions  [conv.prom]/1</a><br>\n  A prvalue of an integer type other than <code>bool</code>, <code>char16_\u00adt</code>, <code>char32_\u00adt</code>, or <code>wchar_\u00adt</code> whose integer conversion rank is less than the rank of <code>int</code> can be converted to a prvalue of type <code>int</code> [...].</br></p>\n<p id=\"so_47336098_47336098_2\"><a href=\"http://eel.is/c++draft/expr.arith.conv#1.5.1\" rel=\"nofollow noreferrer\">Usual arithmetic conversions [expr.arith.conv]/1.5.1</a><br>\n  -- If both operands have the same type, no further conversion is needed.</br></p>\n</blockquote>\n<p>I can only see that \"can be converted\" and I cannot find where it requires integral promotion for arithmetic operators.<br>\nIs the cppreference wrong here?</br></p>\n", "Tags": "<c++><language-lawyer>", "OwnerUserId": "343443", "AnswerCount": "1"}, "47336287": {"ParentId": "47336098", "CommentCount": "14", "Body": "<p>You were one line away from it. From [expr]/11 (N4659):</p>\n<blockquote>\n<p id=\"so_47336098_47336287_0\">Many binary operators that expect operands of arithmetic or enumeration type cause conversions and yield result types in a similar way. The purpose is to yield a common type, which is also the type of the result. This pattern is called the usual arithmetic conversions, which are defined as follows:</p>\n<p id=\"so_47336098_47336287_1\">...</p>\n<p id=\"so_47336098_47336287_2\">Otherwise, the integral promotions (7.6) <strong>shall be performed</strong> on both operands. Then the following rules shall be applied to the promoted operands:</p>\n</blockquote>\n<p>Emphasis added. [conv.prom] says that they can take place and how they work. [expr]/11 specifies one of the times when they <em>will</em> take place.</p>\n", "OwnerUserId": "734069", "PostTypeId": "2", "Id": "47336287", "Score": "3", "CreationDate": "2017-11-16T17:57:55.270", "LastActivityDate": "2017-11-16T17:57:55.270"}, "bq_ids": {"n4140": {"so_47336098_47336098_2": {"section_id": 5943, "quality": 0.8333333333333334, "length": 10}, "so_47336098_47336098_1": {"section_id": 21, "quality": 0.88, "length": 22}, "so_47336098_47336287_0": {"section_id": 5943, "quality": 0.9032258064516129, "length": 28}, "so_47336098_47336287_2": {"section_id": 5943, "quality": 1.0, "length": 12}}, "n3337": {"so_47336098_47336098_2": {"section_id": 5714, "quality": 0.8333333333333334, "length": 10}, "so_47336098_47336098_1": {"section_id": 18, "quality": 0.88, "length": 22}, "so_47336098_47336287_0": {"section_id": 5714, "quality": 0.9032258064516129, "length": 28}, "so_47336098_47336287_2": {"section_id": 5714, "quality": 1.0, "length": 12}}, "n4659": {"so_47336098_47336098_2": {"section_id": 7428, "quality": 0.8333333333333334, "length": 10}, "so_47336098_47336098_1": {"section_id": 21, "quality": 0.88, "length": 22}, "so_47336098_47336287_0": {"section_id": 7428, "quality": 0.9032258064516129, "length": 28}, "so_47336098_47336287_2": {"section_id": 7428, "quality": 1.0, "length": 12}}}});