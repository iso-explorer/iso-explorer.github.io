post_cb({"bq_ids": {"n4140": {"so_48141187_48141210_0": {"length": 28, "quality": 0.9333333333333333, "section_id": 3329}}, "n3337": {"so_48141187_48141210_0": {"length": 28, "quality": 0.9333333333333333, "section_id": 3199}}, "n4659": {"so_48141187_48141210_0": {"length": 28, "quality": 0.9333333333333333, "section_id": 4095}}}, "48141187": {"ViewCount": "267", "Body": "<p>List initialization (the <code>{...}</code> syntax) doesn't allow narrowing conversions. For example, trying to construct a <code>struct X { int i; };</code> with <code>X{3.14f}</code> holds a compilation error, as conversion from floating point values to integers is a narrowing conversion:</p>\n<pre><code>&lt;source&gt;:11:32: error: narrowing conversion of '3.1400001e+0f' from 'float' to 'int' inside { } [-Wnarrowing]\n     struct X { int i; } x{3.14f};\n                                ^\n</code></pre>\n<p>With that said, why is it possible to construct a <code>struct X { float f; };</code> with <code>X{3.14}</code>, where <code>3.14</code> is of type <code>double</code> (and conversion from <code>double</code> to <code>float</code> is considered a narrowing one)? Doing the following:</p>\n<pre><code>struct X { float f; } x{3.14};\n</code></pre>\n<p>Holds no compilation errors. This example can actually be narrowed down (huh) to a variable declaration:</p>\n<pre><code>float f{3.14};\n</code></pre>\n", "AcceptedAnswerId": "48141210", "Title": "Why does list initialization allow conversion from double to float values?", "CreationDate": "2018-01-07T20:20:58.570", "LastActivityDate": "2018-01-08T14:39:13.350", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2018-01-08T14:39:13.350", "LastEditorUserId": "3646096", "Id": "48141187", "Score": "9", "OwnerUserId": "3646096", "Tags": "<c++><c++11><list-initialization>", "AnswerCount": "1"}, "48141210": {"Id": "48141210", "PostTypeId": "2", "Body": "<p>In the list of what is considered a narrowing conversion, constant expressions that fit within the target type are an exception. So while in general double to float is narrowing, when your double is actually a literal this is permitted.</p>\n<p><a href=\"http://coliru.stacked-crooked.com/a/6949f04fa4a8df17\" rel=\"noreferrer\">http://coliru.stacked-crooked.com/a/6949f04fa4a8df17</a></p>\n<hr>\n<p>From the draft I have on hand (I think close to C++14):</p>\n<blockquote>\n<p id=\"so_48141187_48141210_0\">8.5.4 List-initialization<br>\n  (7.2) A narrowing conversion is an implicit conversion...<br>\n  ...from long double to double or float, or from double to float, except where the source is a constant\n  expression and the actual value after conversion is within the range of values that can be represented\n  (even if it cannot be represented exactly),</br></br></p>\n</blockquote>\n</hr>", "LastEditorUserId": "87234", "LastActivityDate": "2018-01-07T20:48:58.787", "Score": "11", "CreationDate": "2018-01-07T20:24:02.917", "ParentId": "48141187", "CommentCount": "9", "OwnerUserId": "87234", "LastEditDate": "2018-01-07T20:48:58.787"}});