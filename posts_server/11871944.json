post_cb({"11872108": {"ParentId": "11871944", "CommentCount": "0", "Body": "<p>Private members of a class will be accessible to any of that classes methods. A point to consider is static member functions which do not have a <code>this</code> pointer and only have access to static member variables. Friend functions and Friend classes are also able to access a classes private member variables.</p>\n", "OwnerUserId": "1342730", "PostTypeId": "2", "Id": "11872108", "Score": "1", "CreationDate": "2012-08-08T19:50:45.627", "LastActivityDate": "2012-08-08T19:50:45.627"}, "11871977": {"ParentId": "11871944", "CommentCount": "0", "Body": "<p>No, they are accessible from everywhere within the object, its just not accessible from outside.</p>\n", "OwnerUserId": "633001", "PostTypeId": "2", "Id": "11871977", "Score": "0", "CreationDate": "2012-08-08T19:42:24.950", "LastActivityDate": "2012-08-08T19:42:24.950"}, "11872232": {"ParentId": "11871944", "CommentCount": "0", "Body": "<p>Yes, it's plain wrong.</p>\n<p>From the standard (ISO/IEC 14882:2003 (E), \u00a711.0/1):</p>\n<blockquote>\n<p id=\"so_11871944_11872232_0\">A member of a class can be<br>\n  \u00a0\u00a0\u00a0\u00a0- private; that is, its name can be used only by members and friends of the class in which it is declared.<br/></br></p>\n</blockquote>\n<p>It says <em>members</em>, not <em>constructor</em>.</p>\n", "OwnerUserId": "492901", "PostTypeId": "2", "Id": "11872232", "Score": "2", "CreationDate": "2012-08-08T19:59:11.313", "LastActivityDate": "2012-08-08T19:59:11.313"}, "11871974": {"ParentId": "11871944", "CommentCount": "2", "Body": "<p>you can access private members from anywhere inside the class, but not from other classes or other subclasses.</p>\n", "OwnerUserId": "428916", "PostTypeId": "2", "Id": "11871974", "Score": "0", "CreationDate": "2012-08-08T19:42:21.033", "LastActivityDate": "2012-08-08T19:42:21.033"}, "11872022": {"ParentId": "11871944", "CommentCount": "0", "Body": "<p>You can reach them inside the object itself, not only constructor.</p>\n<p>And also you should have get and set methods to get or set it from outside the object in case you wonder how to be able.</p>\n", "Id": "11872022", "PostTypeId": "2", "OwnerDisplayName": "user1409350", "Score": "0", "CreationDate": "2012-08-08T19:45:39.103", "LastActivityDate": "2012-08-08T19:45:39.103"}, "11871944": {"CommentCount": "1", "ViewCount": "143", "PostTypeId": "1", "LastEditorUserId": "650233", "CreationDate": "2012-08-08T19:40:25.763", "LastActivityDate": "2012-08-08T19:59:11.313", "Title": "Accessing Private Member Data and Function", "AcceptedAnswerId": "11872232", "LastEditDate": "2012-08-08T19:57:40.557", "Id": "11871944", "Score": "-2", "Body": "<p>I have a quick question for an upcoming final. Are private member data and functions only accessible by the constructor?</p>\n<p>Answer and elaboration appreciated. </p>\n<p>Here's the question and answer that prompted me to come to you guys:</p>\n<p><strong>EDIT:</strong></p>\n<blockquote>\n<p id=\"so_11871944_11871944_0\">5) Be able to determine when a statement is an invalid attempt to access private member variables or functions.\n          - This is a give away, private functions and variables can only be accessed in the constructor.</p>\n</blockquote>\n<p>So this is wrong?</p>\n", "Tags": "<c++><oop><constructor>", "OwnerUserId": "1410654", "AnswerCount": "5"}, "bq_ids": {"n4140": {"so_11871944_11872232_0": {"section_id": 6664, "quality": 1.0, "length": 11}}, "n3337": {"so_11871944_11872232_0": {"section_id": 6419, "quality": 1.0, "length": 11}}, "n4659": {"so_11871944_11872232_0": {"section_id": 8139, "quality": 1.0, "length": 11}}}});