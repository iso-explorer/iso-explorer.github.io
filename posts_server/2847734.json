post_cb({"bq_ids": {"n4140": {"so_2847734_2847768_0": {"length": 7, "quality": 1.0, "section_id": 5450}}, "n3337": {"so_2847734_2847768_0": {"length": 7, "quality": 1.0, "section_id": 5244}}, "n4659": {"so_2847734_2847768_0": {"length": 7, "quality": 1.0, "section_id": 6877}}}, "2847734": {"ViewCount": "549", "Body": "<p>In answering <a href=\"https://stackoverflow.com/questions/2847410/goal-of-cs-auto-keyword/2847490#2847490\">this question</a> the question arose as to whether the traditional <strong>C</strong> meaning of the keyword <code>auto</code> (automatic storage) is still valid in <strong>C++0x</strong> now that it means type deduction.</p>\n<p>I remember that the old meaning of <code>auto</code> should remain where relevant but others disagreed. </p>\n<pre><code>auto char c = 42; // either compilation error or c = '*'\n</code></pre>\n<p>Looking at compilers I see the current division.</p>\n<ol>\n<li>Old meaning of auto is no longer allowed  \n\n<ul>\n<li>VS10</li>\n<li>g++  </li>\n</ul></li>\n<li>Old meaning of auto is used where relevant\n\n<ul>\n<li><a href=\"http://www.comeaucomputing.com/tryitout/\" rel=\"nofollow noreferrer\">Comeau</a></li>\n</ul></li>\n</ol>\n<p>Do you know which is the correct behaviour?</p>\n", "AcceptedAnswerId": "2847768", "Title": "Is `auto int i` valid C++0x?", "CreationDate": "2010-05-17T08:58:25.550", "Id": "2847734", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2017-05-23T10:27:38.223", "LastEditorUserId": "-1", "LastActivityDate": "2010-05-17T09:27:08.107", "Score": "3", "OwnerUserId": "3848", "Tags": "<c++><c++11><standards-compliance>", "AnswerCount": "1"}, "2847768": {"Id": "2847768", "PostTypeId": "2", "Body": "<p>No, it is not. In fact, \u00a77.1.6.\u200b4/3 gives the following example:</p>\n<pre><code>auto x = 5; // OK: x has type int\nconst auto *v = &amp;x, u = 6; // OK: v has type const int*, u has type const int\nstatic auto y = 0.0; // OK: y has type double\nauto int r; // error: auto is not a storage-class-specifier\n</code></pre>\n<p>As you can see, it results in an error. \u00a77.1.6.\u200b5 pretty much seals the deal with:</p>\n<blockquote>\n<p id=\"so_2847734_2847768_0\">A program that uses auto in a context not explicitly allowed in this section is ill-formed.</p>\n</blockquote>\n", "LastActivityDate": "2010-05-17T09:05:44.350", "CommentCount": "10", "CreationDate": "2010-05-17T09:05:44.350", "ParentId": "2847734", "Score": "15", "OwnerUserId": "87234"}});