post_cb({"2486140": {"ParentId": "2486128", "Score": "2", "CreationDate": "2010-03-21T06:07:32.073", "Id": "2486140", "OwnerUserId": "53744", "LastActivityDate": "2010-03-21T06:07:32.073", "Body": "<blockquote>\n<p id=\"so_2486128_2486140_0\">Can somebody explain , how compiler checks for overloaded methods ?</p>\n</blockquote>\n<p>The Java Language Specification, section 8.4.9, will contain the definitive (but very technical) answer:\n<a href=\"http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.4.9\" rel=\"nofollow noreferrer\">http://java.sun.com/docs/books/jls/third_edition/html/classes.html#8.4.9</a></p>\n", "PostTypeId": "2", "CommentCount": "0"}, "bq_ids": {"n4659": {"so_2486128_2486137_0": {"length": 4, "section_id": 2811, "quality": 0.6666666666666666}}}, "2486137": {"ParentId": "2486128", "Score": "9", "CreationDate": "2010-03-21T06:05:42.663", "LastActivityDate": "2010-03-21T08:16:48.030", "LastEditDate": "2010-03-21T08:16:48.030", "OwnerUserId": "75170", "LastEditorUserId": "49246", "Body": "<blockquote>\n<p id=\"so_2486128_2486137_0\">Why return type of a method is not considered in method overloading?</p>\n</blockquote>\n<p>The main reason is that if you <em>did</em> consider this, a lot of function calls become ambiguous if the return value is not assigned to something. For example, which function call is being invoked here?</p>\n<pre><code>public String x() { ... }\npublic int x() { ... }\n\n// ...\n\nx();  // &lt;-- Which one did you mean? It's impossible to tell if you\n      //     allow return types to be part of method overloads.\n</code></pre>\n<p>There are other reasons to not want to do this, too. That said, many languages <em>do</em> allow their signatures to differ only in return type; Haskell and Perl are two examples. If your language does allow this, it's not hard to see that all you'd need to support this is one more step in your method-resolution process: simply have an obvious way for the compiler to select one method or another. In the example above, perhaps we would define a priority (maybe the first method defined is the one that wins, for example, so our <code>x()</code> call would invoke <code>String x()</code>).</p>\n<p>Another thing to note is that the JVM <em>does</em> allow two methods whose signature differs only in return type to exist. (That's how Scala and other JVM languages that support this do it.</p>\n", "Id": "2486137", "PostTypeId": "2", "CommentCount": "3"}, "2486128": {"Tags": "<c#><c++><inheritance><programming-languages><lang>", "ViewCount": "183", "LastEditDate": "2010-04-28T10:03:07.457", "CreationDate": "2010-03-21T06:01:53.870", "LastEditorUserId": "202375", "Title": "Why aren't return types considered in Java method overloads?", "CommentCount": "0", "AcceptedAnswerId": "2486137", "Score": "1", "OwnerUserId": "202375", "Id": "2486128", "LastActivityDate": "2010-04-28T10:03:07.457", "Body": "<p>Why return type of a method is not considered in method overloading ?\nCan somebody explain , how compiler checks for overloaded methods ?</p>\n", "PostTypeId": "1", "AnswerCount": "2"}});