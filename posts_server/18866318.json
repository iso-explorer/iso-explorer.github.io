post_cb({"bq_ids": {"n4140": {"so_18866318_18866362_0": {"length": 20, "quality": 0.8333333333333334, "section_id": 5314}, "so_18866318_18866362_5": {"length": 40, "quality": 0.975609756097561, "section_id": 5314}}, "n3337": {"so_18866318_18866362_0": {"length": 20, "quality": 0.8333333333333334, "section_id": 5111}, "so_18866318_18866362_5": {"length": 40, "quality": 0.975609756097561, "section_id": 5111}}, "n4659": {"so_18866318_18866362_0": {"length": 18, "quality": 0.75, "section_id": 6738}, "so_18866318_18866362_5": {"length": 39, "quality": 0.9512195121951219, "section_id": 6738}}}, "18866362": {"Id": "18866362", "PostTypeId": "2", "Body": "<p>You need to use a proper editor. You are using <code>\u201d</code> and not <code>\"</code>. The former is a character which is not allowed in C++ source code, the latter is a regular double-quote.</p>\n<p>If I see your code, it seems you are using a <strong>word processor</strong> suitable for writing regular text (like letters, articles, etc.). Note that source code is different and you need to use an <strong>editor</strong>. I, for example, use <a href=\"http://de.wikipedia.org/wiki/Emacs\" rel=\"nofollow\"><code>emacs</code></a>, other alternatives are available. A (source code) editor would not try to replace the character you typed by something more appealing or capitalize words (which is I think happened for <code>Void</code>, <code>Int</code>, etc. - these need to be <code>void</code>, <code>int</code>, ...)</p>\n<p>The C++ standard defines the allowed characters in \u00a72.3:</p>\n<blockquote>\n<h3>2.3 Character sets [lex.charset]</h3>\n<p id=\"so_18866318_18866362_0\"><sup>1</sup> The basic source character set consists of 96 characters: the space character, the control characters repre- senting horizontal tab, vertical tab, form feed, and new-line, plus the following 91 graphical characters:<sup>14</sup></p>\n<p id=\"so_18866318_18866362_1\"><code>a b c d e f g h i j k l m n o p q r s t u v w x y z</code></p>\n<p id=\"so_18866318_18866362_2\"><code>A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</code></p>\n<p id=\"so_18866318_18866362_3\"><code>0 1 2 3 4 5 6 7 8 9</code></p>\n<p id=\"so_18866318_18866362_4\"><code>_ { } [ ] # ( ) &lt; &gt; % : ; . ? * + - / ^ &amp; | \u223c ! = , \\ \" \u2019</code></p>\n<p id=\"so_18866318_18866362_5\"><sup>14) The glyphs for the members of the basic source character set are intended to identify characters from the subset of ISO/IEC 10646 which corresponds to the ASCII character set. However, because the mapping from source file characters to the source character set (described in translation phase 1) is specified as implementation-defined, an implementation is required to document how the basic source characters are represented in source files.</sup></p>\n</blockquote>\n", "LastEditorUserId": "2073257", "LastActivityDate": "2013-09-18T07:51:29.257", "Score": "3", "CreationDate": "2013-09-18T07:36:28.933", "ParentId": "18866318", "CommentCount": "12", "OwnerUserId": "2073257", "LastEditDate": "2013-09-18T07:51:29.257"}, "18866318": {"ViewCount": "638", "Body": "<blockquote>\n<p id=\"so_18866318_18866318_0\">(a)   Define the class <code>Book</code> with all the basic attributes such as title, author, publisher, price etc. Define the default constructor, member functions <code>display_data()</code> for displaying the <code>Book</code> details. Use appropriate access control specifiers in this program.</p>\n</blockquote>\n<p>Output:</p>\n<pre><code>Line 16: error: stray '\\342' in program\ncompilation terminated due to -Wfatal-errors.\n</code></pre>\n<p>Source:</p>\n<pre><code>    #include &lt;iostream&gt;\n    #include &lt;string&gt;\n\n    using namespace std;\n    Class Book\n    {\n    Int ISBNNo;\n    Char Title[30];\n    Char Author[30];\n    Char pub[50];\n    Float price;\n\n    Public: Book()\n    {\n    ISBNNO=1001;\n    Strcpy(Title,\u201dC++ Programming\u201d);\n    Strcpy(Author, \u201cE.Balagurusamy\u201d);\n    Strcpy(pub, \u201cTata Press\u201d);\n    Price=300;\n    }\n\n    Void display_data()\n    {\n    Cout &lt;&lt;\u201dBook ISBNNO\u201d&lt;&lt; ISBNNO&lt;&lt;endl;\n    Cout &lt;&lt;\u201dBook Title\u201d&lt;&lt; Title&lt;&lt;endl;\n    Cout &lt;&lt;\u201dBook Author Name\u201d&lt;&lt; Author&lt;&lt;endl;\n    Cout &lt;&lt;\u201dBook Publisher\u201d&lt;&lt; pub&lt;&lt;endl;\n    Cout &lt;&lt;\u201dBook Price\u201d&lt;&lt; price&lt;&lt;endl;\n    }\n    };\n\n    Main()\n    {\n    Book B;\n    B.display_data();\n    getch();\n    }\n</code></pre>\n", "Title": "Compilation fails with \"error: stray '\\342' in program\"", "CreationDate": "2013-09-18T07:34:04.033", "Id": "18866318", "CommentCount": "11", "LastEditDate": "2013-09-18T08:05:35.450", "PostTypeId": "1", "LastEditorUserId": "2073257", "LastActivityDate": "2013-09-18T08:05:35.450", "Tags": "<c++>", "Score": "-3", "OwnerUserId": "2790454", "ClosedDate": "2013-09-18T13:24:48.967", "AnswerCount": "1"}});