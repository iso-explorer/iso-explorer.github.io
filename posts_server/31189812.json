post_cb({"31189812": {"CommentCount": "7", "ViewCount": "74", "PostTypeId": "1", "ClosedDate": "2015-07-02T16:35:29.377", "LastEditorUserId": "-1", "CreationDate": "2015-07-02T16:22:45.443", "LastActivityDate": "2015-07-02T16:22:45.443", "Title": "Why can std::bind take too many arguments?", "LastEditDate": "2017-05-23T11:50:27.950", "Id": "31189812", "Score": "6", "Body": "<p>After dealing with <a href=\"https://stackoverflow.com/questions/31172921\">some weird stuff</a> yesterday, the cause of my error was that <code>std::bind</code> can take more arguments than it needs to make the call</p>\n<pre><code>int f(int);\nauto b = std::bind(f);\nb(1,2,3,4,5,6); // 2-6 are discarded\n</code></pre>\n<p><a href=\"http://en.cppreference.com/w/cpp/utility/functional/bind\" rel=\"nofollow noreferrer\">cppreference</a> claims:</p>\n<blockquote>\n<p id=\"so_31189812_31189812_0\">If some of the arguments that are supplied in the call to g() are not matched by any placeholders stored in g, the unused arguments are evaluated and discarded.</p>\n</blockquote>\n<p>Searching through the standard I don't see anything that supports this.  The only thing that possibly makes this okay is:</p>\n<blockquote>\n<p id=\"so_31189812_31189812_1\">20.9.2/4 A forwarding call wrapper is a call wrapper that can be called with an arbitrary argument list and delivers the arguments to the wrapped callable object as references</p>\n</blockquote>\n<p>because, (I suppose) it doesn't say \"delivers <em>all</em> the arguments\" but I'm unconvinced.</p>\n<p>My \"Why\" in this question consists of two parts</p>\n<ol>\n<li><p>What reading of the standard makes it clear that <code>std::bind</code> is allowed to discard arguments?</p></li>\n<li><p>Why is this desirable behavior? It feels very not-c++ to me. I can't think of a non-contrived situation where I'd want this, but can think of times it would be a problem. Does it somehow make the implementation easier in a way I'm not seeing?</p></li>\n</ol>\n", "Tags": "<c++><language-lawyer><c++14>", "OwnerUserId": "1013719", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_31189812_31189812_1": {"section_id": 4563, "quality": 0.8823529411764706, "length": 15}}, "n3337": {"so_31189812_31189812_1": {"section_id": 4393, "quality": 0.8823529411764706, "length": 15}}, "n4659": {"so_31189812_31189812_1": {"section_id": 5934, "quality": 0.8823529411764706, "length": 15}}}});