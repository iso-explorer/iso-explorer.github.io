post_cb({"32716589": {"CommentCount": "3", "ViewCount": "166", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2015-09-22T12:14:16.777", "LastActivityDate": "2015-09-22T12:20:36.023", "Title": "Force function to be called only with specific types", "AcceptedAnswerId": "32716722", "LastEditDate": "2017-05-23T12:26:04.567", "Id": "32716589", "Score": "2", "Body": "<p>I was looking at <a href=\"https://stackoverflow.com/questions/32714895/enforcing-type-safety-when-casting-char-to-bool-in-c11\">enforcing type safety when casting char* to bool in C++11</a> and it was suggested that if you do</p>\n<pre><code>template&lt;typename T&gt;\nvoid foo(T) = delete;\n\nvoid foo(int f) {}\n</code></pre>\n<p>That <code>foo</code> will only work when given a explicit <code>int</code> argument.  I made a test case:</p>\n<pre><code>template&lt;typename T&gt;\nvoid foo(T) = delete;\n\nvoid foo(int f) {}\n\nint main()\n{\n    foo(1);\n    foo(3.0);\n    foo(short(5));\n    foo(float(7.0));\n    foo(long(9));\n}\n</code></pre>\n<p>I used coliru to compile the code with <code>g++ -std=c++14 -O2 -Wall -pedantic -pthread main.cpp &amp;&amp; ./a.out</code>(<a href=\"http://coliru.stacked-crooked.com/a/0f8de2e0746289f8\" rel=\"nofollow noreferrer\">live example</a>) and I got the following errors:</p>\n<pre><code>main.cpp: In function 'int main()':\nmain.cpp:9:12: error: use of deleted function 'void foo(T) [with T = double]'\n     foo(3.0);\n            ^\nmain.cpp:2:6: note: declared here\n void foo(T) = delete;\n      ^\nmain.cpp:10:17: error: use of deleted function 'void foo(T) [with T = short int]'\n     foo(short(5));\n                 ^\nmain.cpp:2:6: note: declared here\n void foo(T) = delete;\n      ^\nmain.cpp:11:19: error: use of deleted function 'void foo(T) [with T = float]'\n     foo(float(7.0));\n                   ^\nmain.cpp:2:6: note: declared here\n void foo(T) = delete;\n      ^\nmain.cpp:12:16: error: use of deleted function 'void foo(T) [with T = long int]'\n     foo(long(9));\n                ^\nmain.cpp:2:6: note: declared here\n void foo(T) = delete;\n      ^\n</code></pre>\n<p><sup>compiling with clang also produced similar errors</sup></p>\n<p>Now when I was reading about <code>= delete</code> on <a href=\"http://en.cppreference.com/w/cpp/language/function#Deleted_functions\" rel=\"nofollow noreferrer\">cppreference</a> it stated</p>\n<blockquote>\n<p id=\"so_32716589_32716589_0\">If the function is overloaded, overload resolution takes place first, and the program is only ill-formed if the deleted function was selected.</p>\n</blockquote>\n<p>So if cppreference is correct and my program is ill-formed does this just mean it will not compile or is it unspecified or undefined behavior?</p>\n", "Tags": "<c++><c++11><language-lawyer>", "OwnerUserId": "4342498", "AnswerCount": "1"}, "32716722": {"ParentId": "32716589", "CommentCount": "0", "Body": "<p>Your program is ill-formed. First, for each invocation of <code>foo</code>, we perform overload resolution. That will call:</p>\n<pre><code>foo(1);            // foo(int )\nfoo(3.0);          // foo&lt;T&gt;, T=double\nfoo(short(5));     // foo&lt;T&gt;, T=short\nfoo(float(7.0));   // foo&lt;T&gt;, T=float\nfoo(long(9));      // foo&lt;T&gt;, T=long\n</code></pre>\n<p>Four of those functions are explicitly <code>deleted</code> and, from [dcl.fct.def.delete]:</p>\n<blockquote>\n<p id=\"so_32716589_32716722_0\">A program that refers to a deleted function implicitly or explicitly, other than to declare it, is ill-formed.</p>\n</blockquote>\n<p>It's not undefined or unspecified behavior. It should simply not compile. </p>\n", "OwnerUserId": "2069064", "PostTypeId": "2", "Id": "32716722", "Score": "6", "CreationDate": "2015-09-22T12:20:36.023", "LastActivityDate": "2015-09-22T12:20:36.023"}, "bq_ids": {"n4140": {"so_32716589_32716722_0": {"section_id": 3277, "quality": 1.0, "length": 9}}, "n3337": {"so_32716589_32716722_0": {"section_id": 3148, "quality": 1.0, "length": 9}}, "n4659": {"so_32716589_32716722_0": {"section_id": 4035, "quality": 1.0, "length": 9}}}});