post_cb({"28006980": {"CommentCount": "1", "AcceptedAnswerId": "28007010", "ClosedDate": "2015-01-18T04:01:37.403", "CreationDate": "2015-01-18T03:56:28.663", "LastActivityDate": "2015-01-18T04:23:33.367", "PostTypeId": "1", "ViewCount": "40", "Title": "Why do I have to declare these reference paramaters const or pass by value?", "Id": "28006980", "Score": "0", "Body": "<pre><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\n\nusing namespace std;\n\nstatic const int NOT_FOUND = -1;\n\ntemplate &lt;class sequence, class T&gt;\nint binarySearch(sequence&amp; seq, int low, int high, T&amp; item)\n{\n    //..\n}\n\ntemplate &lt;class sequence, class T&gt;\nint binarySearch(const sequence&amp; seq, const T&amp; item)\n{\n    if (seq.size() == 0)\n        return NOT_FOUND;\n    return binarySearch(seq, 0, seq.size() - 1, item);\n}\n\nint main()\n{\n    vector&lt;int&gt; t1 = {0, 3 ,45, 94};\n    cout &lt;&lt; binarySearch(t1, 0);\n    //binarySearch(t1, 0, t1.size() - 1, 45);\n    return 0;\n}\n</code></pre>\n<p>Why does the compiler not accept:</p>\n<pre><code>template &lt;class sequence, class T&gt;\nint binarySearch(sequence&amp; seq, T&amp; item)\n</code></pre>\n<p>?</p>\n<p>Furthermore, why does the program as stated compile, but calling</p>\n<pre><code>binarySearch(t1, 0, t1.size() - 1, 45);\n</code></pre>\n<p>from main not compile?</p>\n<p>The compiler error in any case is \"No matching function for call to 'binarySearch'.</p>\n", "Tags": "<c++><templates>", "OwnerUserId": "1817031", "AnswerCount": "1"}, "28007010": {"ParentId": "28006980", "PostTypeId": "2", "CommentCount": "2", "CreationDate": "2015-01-18T04:01:31.273", "Score": "2", "LastEditorUserId": "583833", "LastEditDate": "2015-01-18T04:23:33.367", "Id": "28007010", "OwnerUserId": "583833", "Body": "<p>The problem is you cannot bind a temporary object to a non-const reference.</p>\n<pre><code>binarySearch(t1, 0);\n                 ^---- this is a temporary\n</code></pre>\n<p>If you stored <code>0</code> in a variable and used that, the <a href=\"http://coliru.stacked-crooked.com/a/299c607e8831be62\" rel=\"nofollow\">non-const version would work</a>.</p>\n<p>\u00a7 8.5.4</p>\n<blockquote>\n<p id=\"so_28006980_28007010_0\">\u2014 Otherwise, if T is a reference type, a prvalue temporary of the type referenced by T is copy-list-initialized or direct-list-initialized, depending on the kind of initialization for the reference, and the reference is bound to that temporary. [ Note: As usual, the binding will fail and the program is ill-formed if the reference type is an lvalue reference to a non-const type. \u2014end note</p>\n</blockquote>\n", "LastActivityDate": "2015-01-18T04:23:33.367"}, "bq_ids": {"n4140": {"so_28006980_28007010_0": {"section_id": 3325, "quality": 0.9, "length": 27}}, "n3337": {"so_28006980_28007010_0": {"section_id": 3195, "quality": 0.7, "length": 21}}, "n4659": {"so_28006980_28007010_0": {"section_id": 4091, "quality": 0.7, "length": 21}}}});