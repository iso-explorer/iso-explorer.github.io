post_cb({"bq_ids": {"n4140": {"so_3297831_3297831_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 1948}}, "n3337": {"so_3297831_3297831_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 1937}}, "n4659": {"so_3297831_3297831_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 2219}}}, "3297831": {"ViewCount": "2535", "Body": "<p>I'm trying to append some data to a file, but in some cases want to skip back a bit from the end to overwrite the tail end of the file. However, neither <code>seekp( pos )</code> nor <code>seekp( offset, relative )</code> is having any effect for me (except complaining when using a negative offset). Am I using them incorrectly or are they broken?</p>\n<p>A little example follows. Compiler: gcc version 4.4.4 (Debian 4.4.4-6)</p>\n<pre><code>    #include &lt;fstream&gt;\n    #include &lt;sstream&gt;\n    #include &lt;boost/date_time/posix_time/posix_time.hpp&gt;\n    using namespace std;\n    using namespace boost::posix_time;\n\n    int main(int nargs, char** pargs){\n    if( nargs &lt; 2 || nargs &gt; 3 ){\n     cerr&lt;&lt;\"Usage: \"&lt;&lt;pargs[0]&lt;&lt;\" file [pos]\"&lt;&lt;endl;\n     return 1;\n }\n\n const char* fname = pargs[1];\n ofstream f( fname, ios::binary|ios::out|ios::ate );\n if( !f.good() ){\n     cerr&lt;&lt;\"Unable to open file!\"&lt;&lt;endl;\n     return 1;\n }\n\n if( nargs == 3 ){\n     istringstream offss(pargs[2]);\n     streamoff off;\n     offss &gt;&gt; off;\n     cout &lt;&lt;\"Seeking to: \"&lt;&lt;off&lt;&lt;endl;\n     f.seekp( off, ios_base::end ); // using beg or cur instead doesn't help, nor does: seekp( off )\n     if( f.fail() ){\n  cerr&lt;&lt;\"Unable to seek!\"&lt;&lt;endl;\n  f.clear(); // clear error flags\n     }\n }\n\n f&lt;&lt;\"[appending some data at \"&lt;&lt;second_clock::local_time()&lt;&lt;\"]\\n\";\n\n return 0;\n    }\n</code></pre>\n<p>Now, if I seek using a 0 offset, it should place the output-position at the end of the file and writes should append, right? Well, it's having no effect for me (osf was not previously empty):</p>\n<pre><code>&gt; ./ostream_app_pos osf 0\nSeeking to: 0\n&gt; cat osf\n[appending some data at 2010-Jul-21 11:16:16]\n</code></pre>\n<p>The usual way of appending is to use <code>ios::app</code>. In this case, appending works, but trying to seek with a neg/pos offset has no effect, since (from gcc doc):</p>\n<blockquote>\n<p id=\"so_3297831_3297831_0\">ios::app Seek to end of file before each write.</p>\n</blockquote>\n<p>I also tried using neither <code>ios::ate</code> nor <code>ios::app</code> (presumably truncate mode), to the same effect as <code>ios::ate</code>.</p>\n<p>Sorry if this reads rather like a bug report, but I wanted to check whether there's something I've got wrong here in the usage of <code>seekp</code> and get an idea of whether it's compiler-specific.</p>\n", "AcceptedAnswerId": "3381388", "Title": "How to resume appending data to a file at a specific position? (std::ostream, streampos, tellp/seekp)", "CreationDate": "2010-07-21T09:24:19.340", "Id": "3297831", "CommentCount": "2", "LastEditDate": "2010-07-21T09:31:14.870", "PostTypeId": "1", "LastEditorUserId": "44952", "LastActivityDate": "2010-08-01T08:54:48.543", "Score": "3", "OwnerUserId": "314345", "Tags": "<c++><ofstream><seek>", "AnswerCount": "1"}, "3381388": {"Id": "3381388", "PostTypeId": "2", "Body": "<p>You need to open the file with both input and output attributes.<br>\nThe following code doesn't have the usual error handling, it is just to illustrate a technique.</br></p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n\nint main()\n{\n    const char *szFname = \"c:\\\\tmp\\\\tmp.txt\";\n    std::fstream fs(szFname, \n                    std::fstream::binary | \n                    std::fstream::in     | \n                    std::fstream::out);\n    fs.seekp(13, std::fstream::beg);\n    fs &lt;&lt; \"123456789\";\n\n    return 0;\n}\n</code></pre>\n<h1>================================================</h1>\n<pre><code>C:\\Dvl\\Tmp&gt;type c:\\tmp\\tmp.txt\nabdcefghijklmnopqrstuvwxyz\nC:\\Dvl\\Tmp&gt;Test.exe\nC:\\Dvl\\Tmp&gt;type c:\\tmp\\tmp.txt\nabdcefghijklm123456789wxyz\nC:\\Dvl\\Tmp&gt;\n</code></pre>\n", "LastActivityDate": "2010-08-01T08:54:48.543", "CommentCount": "1", "CreationDate": "2010-08-01T08:54:48.543", "ParentId": "3297831", "Score": "3", "OwnerUserId": "111432"}});