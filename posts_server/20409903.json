post_cb({"20409903": {"CommentCount": "0", "ViewCount": "175", "PostTypeId": "1", "LastEditorUserId": "701092", "CreationDate": "2013-12-05T20:22:38.037", "LastActivityDate": "2013-12-05T20:33:22.583", "Title": "Should we release the allocated resource for std::locale", "AcceptedAnswerId": "20410104", "LastEditDate": "2013-12-05T20:23:25.507", "Id": "20409903", "Score": "1", "Body": "<pre><code>const std::locale fmt2(std::locale::classic(),\n                       new boost::gregorian::date_input_facet(\"%m/%d/%Y\"));\n</code></pre>\n<p>In the second parameter, we use <code>new boost::gregorian::date_input_facet(\"%m/%d/%Y\")</code>.</p>\n<p>Question: Do I need to concern to release the allocated resource?</p>\n<p>Thank you</p>\n", "Tags": "<c++><boost>", "OwnerUserId": "391104", "AnswerCount": "4"}, "20410106": {"ParentId": "20409903", "CommentCount": "0", "Body": "<p>According to C++ References (std::locale, destructor):</p>\n<blockquote>\n<p id=\"so_20409903_20410106_0\">If the object is the last locale object containing a facet object for which it manages its storage, this may also be deleted.</p>\n</blockquote>\n", "OwnerUserId": "3067485", "PostTypeId": "2", "Id": "20410106", "Score": "1", "CreationDate": "2013-12-05T20:32:48.600", "LastActivityDate": "2013-12-05T20:32:48.600"}, "20410030": {"ParentId": "20409903", "CommentCount": "0", "Body": "<p>No, the constructed <code>locale</code> assumes ownership of the <code>Facet</code> and will delete it when needed.</p>\n", "OwnerUserId": "506413", "PostTypeId": "2", "Id": "20410030", "Score": "1", "CreationDate": "2013-12-05T20:29:06.823", "LastActivityDate": "2013-12-05T20:29:06.823"}, "20410104": {"ParentId": "20409903", "CommentCount": "0", "Body": "<p>No. The implementation is required to deallocate the memory itself (unless you specify otherwise):</p>\n<blockquote>\n<p id=\"so_20409903_20410104_0\">22.3.1.1.2 Class <code>locale::facet</code></p>\n<p id=\"so_20409903_20410104_1\">For <code>refs == 0</code>, the implementation performs <code>delete static_cast&lt;locale::facet*&gt;(f)</code> (where <code>f</code> is a pointer to the facet) when the last locale object containing the facet is destroyed; for <code>refs == 1</code>, the implementation never destroys the facet.</p>\n</blockquote>\n", "OwnerUserId": "701092", "PostTypeId": "2", "Id": "20410104", "Score": "1", "CreationDate": "2013-12-05T20:32:37.380", "LastActivityDate": "2013-12-05T20:32:37.380"}, "bq_ids": {"n4140": {"so_20409903_20410104_1": {"section_id": 6385, "quality": 0.9047619047619048, "length": 19}, "so_20409903_20410118_1": {"section_id": 6385, "quality": 0.9047619047619048, "length": 19}, "so_20409903_20410118_0": {"section_id": 6385, "quality": 0.8333333333333334, "length": 5}}, "n3337": {"so_20409903_20410104_1": {"section_id": 6142, "quality": 0.9047619047619048, "length": 19}, "so_20409903_20410118_1": {"section_id": 6142, "quality": 0.9047619047619048, "length": 19}, "so_20409903_20410118_0": {"section_id": 6142, "quality": 0.8333333333333334, "length": 5}}, "n4659": {"so_20409903_20410104_1": {"section_id": 7897, "quality": 0.9047619047619048, "length": 19}, "so_20409903_20410118_1": {"section_id": 7897, "quality": 0.9047619047619048, "length": 19}, "so_20409903_20410118_0": {"section_id": 7897, "quality": 0.8333333333333334, "length": 5}}}, "20410118": {"ParentId": "20409903", "CommentCount": "0", "Body": "<p>It appears that the lifetime management of facets is configurable. C++11 22.3.1.1.2\n /2 says:</p>\n<blockquote>\n<p id=\"so_20409903_20410118_0\">The <code>refs</code> argument to the constructor is used for lifetime management.</p>\n<p id=\"so_20409903_20410118_1\">\u2014  For <code>refs == 0</code>, the implementation performs <code>delete static_cast&lt;locale::facet*&gt;(f)</code> (where <code>f</code> is a pointer to the facet) when the last locale object containing the facet is destroyed; for <code>refs == 1</code>, the implementation never destroys the facet.</p>\n</blockquote>\n<p>So when you construct the facet, you can either ask the <code>locale</code> oject consuming it to take (shared) ownership of it, or retain ownership yourself.</p>\n<p>You'll have to check the Boost.Locale documentation to see how the Boost locale initializes its <code>std::locale::facet</code> base.</p>\n", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "20410118", "Score": "2", "CreationDate": "2013-12-05T20:33:22.583", "LastActivityDate": "2013-12-05T20:33:22.583"}});