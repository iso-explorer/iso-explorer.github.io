post_cb({"45481679": {"CommentCount": "7", "ViewCount": "69", "PostTypeId": "1", "LastEditorUserId": "304974", "CreationDate": "2017-08-03T10:32:39.787", "LastActivityDate": "2017-08-04T09:46:28.960", "Title": "Operator overloaded new when void * nullptr makes the program to crash", "AcceptedAnswerId": "45482711", "LastEditDate": "2017-08-04T09:46:28.960", "Id": "45481679", "Score": "-3", "Body": "<p>I have a code to test via GMOCK but facing a peculiar issue.</p>\n<p>There is a class that overloads new operator, the overloaded methods has a logic to return <strong>(void*) nullptr</strong> say when creating more that 2 objects.</p>\n<p>Now in the main code we have a for loop for 5 iterations - I was expecting that for 3rd iteration onwards <strong>new</strong> operator would return <strong>nullptr</strong> but the program actually crashes.</p>\n", "Tags": "<c++><gmock>", "OwnerUserId": "304974", "AnswerCount": "1"}, "45482711": {"ParentId": "45481679", "CommentCount": "2", "Body": "<p>Returning <code>nullptr</code> from your operator causes undefined behavior.<br>\nFrom 3.7.4.1 Allocation functions:</br></p>\n<blockquote>\n<p id=\"so_45481679_45482711_0\">(2) The allocation function attempts to allocate the requested amount of storage. If it is successful, it shall return the address of the start of a block of storage whose length in bytes shall be at least as large as\n  the requested size.</p>\n<p id=\"so_45481679_45482711_1\">(3) An allocation function that fails to allocate storage can invoke the currently installed new-handler function (18.6.2.3), if any. [ Note: A program-supplied allocation function can obtain the address of the currently\n  installed new_handler using the std::get_new_handler function (18.6.2.4). \u2014 end note ] If an allocation function declared with a non-throwing exception-specification (15.4) fails to allocate storage, it shall return\n  a null pointer. Any other allocation function that fails to allocate storage shall indicate failure only by throwing an exception of a type that would match a handler (15.3) of type std::bad_alloc (18.6.2.1).</p>\n</blockquote>\n<p>As you overload the throwing <code>new</code> operator you should not return <code>nullptr</code></p>\n", "OwnerUserId": "113662", "PostTypeId": "2", "Id": "45482711", "Score": "0", "CreationDate": "2017-08-03T11:20:31.413", "LastActivityDate": "2017-08-03T11:20:31.413"}, "bq_ids": {"n4140": {"so_45481679_45482711_1": {"section_id": 7178, "quality": 0.847457627118644, "length": 50}, "so_45481679_45482711_0": {"section_id": 7177, "quality": 0.9523809523809523, "length": 20}}, "n3337": {"so_45481679_45482711_1": {"section_id": 6922, "quality": 0.847457627118644, "length": 50}, "so_45481679_45482711_0": {"section_id": 6921, "quality": 0.9523809523809523, "length": 20}}, "n4659": {"so_45481679_45482711_1": {"section_id": 8686, "quality": 0.8135593220338984, "length": 48}, "so_45481679_45482711_0": {"section_id": 8685, "quality": 0.9523809523809523, "length": 20}}}});