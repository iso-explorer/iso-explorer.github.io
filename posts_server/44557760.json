post_cb({"44558040": {"ParentId": "44557760", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>You have a typo. This statement:</p>\n<pre><code>typedef Category iterator_catergory;\n</code></pre>\n<p>Should be this instead:</p>\n<pre><code>typedef Category iterator_category;\n</code></pre>\n<p>The standard specifies that unless <code>iterator_traits</code> contains all the required typedefs, it becomes an empty class. See [iterator.traits]/2:</p>\n<blockquote>\n<p id=\"so_44557760_44558040_0\">If Iterator has valid ([temp.deduct]) member types difference_\u00adtype,\n  value_\u00adtype, pointer, reference, and iterator_\u00adcategory,\n  iterator_\u00adtraits shall have the following as publicly\n  accessible members:</p>\n<pre><code>  using difference_type   = typename Iterator::difference_type;\n  using value_type        = typename Iterator::value_type;\n  using pointer           = typename Iterator::pointer;\n  using reference         = typename Iterator::reference;\n  using iterator_category = typename Iterator::iterator_category;\n</code></pre>\n<p id=\"so_44557760_44558040_1\">Otherwise, iterator_\u00adtraits shall have no members by any of\n  the above names.</p>\n</blockquote>\n", "OwnerUserId": "8163793", "LastEditorUserId": "65863", "LastEditDate": "2017-06-15T03:34:34.340", "Id": "44558040", "Score": "3", "CreationDate": "2017-06-15T03:29:39.293", "LastActivityDate": "2017-06-15T03:34:34.340"}, "44557760": {"CommentCount": "1", "AcceptedAnswerId": "44558040", "CreationDate": "2017-06-15T02:55:16.443", "LastActivityDate": "2017-06-15T03:34:34.340", "Title": "Implement std::iterator", "ViewCount": "92", "PostTypeId": "1", "Id": "44557760", "Score": "0", "Body": "<p>Because C++17 deprecates <code>std::iterator</code>, I need to implement my own. Turns out it is just an empty struct with some typedefs.</p>\n<pre><code>template &lt;class Category, class Type, class Diff = ptrdiff_t,\n    class Pointer = Type*, class Reference = Type&amp;&gt;\nstruct iterator {\n  typedef Category iterator_catergory;\n  typedef Type value_type;\n  typedef Diff difference_type;\n  typedef Pointer pointer;\n  typedef Reference reference;\n};\n\nstruct dummy_iter : iterator&lt;std::output_iterator_tag, int&gt; {}\n</code></pre>\n<p>This works:</p>\n<pre><code>printf(\"%d\\n\", std::is_same&lt;typename dummy_iter::pointer, int*&gt;::value);\n</code></pre>\n<p>However, it does not work with <code>std::iterator_traits</code>:</p>\n<pre><code>printf(\"%d\\n\", std::is_same&lt;typename std::iterator_traits&lt;dummy_iter&gt;::pointer, int*&gt;::value);\n\nerror: 'pointer' in 'struct std::iterator_traits&lt;dummy_iter&gt;' does not name a type\n</code></pre>\n", "Tags": "<c++><templates><c++1z>", "OwnerUserId": "6521181", "AnswerCount": "1"}, "bq_ids": {"n4659": {"so_44557760_44558040_0": {"section_id": 7031, "quality": 0.875, "length": 14}, "so_44557760_44558040_1": {"section_id": 7031, "quality": 0.8333333333333334, "length": 5}}}});