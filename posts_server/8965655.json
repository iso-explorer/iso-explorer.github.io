post_cb({"bq_ids": {"n4140": {"so_8965655_8965674_0": {"length": 11, "quality": 0.5238095238095238, "section_id": 5313}, "so_8965655_8965674_1": {"length": 6, "quality": 0.75, "section_id": 5362}}, "n3337": {"so_8965655_8965674_0": {"length": 11, "quality": 0.5238095238095238, "section_id": 5110}, "so_8965655_8965674_1": {"length": 6, "quality": 0.75, "section_id": 5158}}, "n4659": {"so_8965655_8965674_1": {"length": 6, "quality": 0.75, "section_id": 6799}}}, "8965691": {"Id": "8965691", "PostTypeId": "2", "Body": "<p>Your issue is that the preprocessor will (wisely) not replace tokens that are <em>inside string literals</em>.</p>\n<p>So you must either use a function like <code>printf</code> or a variable rather than the preprocessor, or pull the token out of the string like so:</p>\n<pre><code>#include &lt;iostream&gt;\n\n#define name \"George\"\n\nint main(int argc, char** argv) {\n    std::cout &lt;&lt; \"Hello I am \" &lt;&lt; name &lt;&lt; std::endl;\n}\n</code></pre>\n", "LastActivityDate": "2012-01-22T23:30:14.307", "CommentCount": "0", "CreationDate": "2012-01-22T23:30:14.307", "ParentId": "8965655", "Score": "3", "OwnerUserId": "383402"}, "8965711": {"Id": "8965711", "PostTypeId": "2", "Body": "<pre><code>#define name \"George\"\n\nprintf(\"Hello I am %s\\n\", name); \n</code></pre>\n<p>Here name will be replaced by \"George\"</p>\n", "LastActivityDate": "2012-01-22T23:32:12.277", "CommentCount": "0", "CreationDate": "2012-01-22T23:32:12.277", "ParentId": "8965655", "Score": "7", "OwnerUserId": "702638"}, "8965674": {"Id": "8965674", "PostTypeId": "2", "Body": "<pre><code>#define name \"George\"\n\nprintf(\"Hello I am \" name \"\\n\");\n</code></pre>\n<p>Adjacent string literals are concatenated in C and C++. </p>\n<p><strong>Quotes from C and C++ Standard:</strong></p>\n<p>For C (quoting C99, but C11 has something similar in 6.4.5p5):</p>\n<blockquote>\n<p id=\"so_8965655_8965674_0\">(C99, 6.4.5p5) \"In translation phase 6, the multibyte character sequences specified by any sequence of adjacent character and identically-prefixed string literal tokens are concatenated into a single multibyte character sequence.\"</p>\n</blockquote>\n<p>For C++:</p>\n<blockquote>\n<p id=\"so_8965655_8965674_1\">(C++11, 2.14.5p13) \"In translation phase 6 (2.2), adjacent string literals are concatenated.\" </p>\n</blockquote>\n<p>EDIT: as requested, add quotes from C and C++ Standard. Thanks to @MatteoItalia for the C++11 quote.</p>\n", "LastEditorUserId": "1119701", "LastActivityDate": "2012-01-22T23:58:14.893", "Score": "15", "CreationDate": "2012-01-22T23:27:47.507", "ParentId": "8965655", "CommentCount": "19", "OwnerUserId": "1119701", "LastEditDate": "2012-01-22T23:58:14.893"}, "8965655": {"ViewCount": "2105", "Body": "<p>The preprocessor can be used to replace certain keywords with other words using <code>#define</code>. For example I could do <code>#define name \"George\"</code> and every time the preprocessor finds 'name' in the program it will replace it with \"George\". </p>\n<p>However, this only seems to work with code. How could I do this with strings and text? For example if I print \"Hello I am name\" to the screen, I want 'name' to be replaced with \"George\" even though it is in a string and not code. </p>\n<p>I do not want to manually search the string for keywords and then replace them, but instead want to use the preprocessor to just switch the words.</p>\n<p>Is this possible? If so how?</p>\n<p>I am using C++ but C solutions are also acceptable.</p>\n", "AcceptedAnswerId": "8965674", "Title": "How can the C++ Preprocessor be used on strings?", "CreationDate": "2012-01-22T23:25:19.287", "Id": "8965655", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2016-04-06T18:32:17.807", "LastEditorUserId": "4370109", "LastActivityDate": "2016-04-06T18:32:17.807", "Score": "3", "OwnerUserId": "1526152", "Tags": "<c++><string><c-preprocessor>", "AnswerCount": "3"}});