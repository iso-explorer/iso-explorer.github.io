post_cb({"43197624": {"ParentId": "43197543", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2017-04-04T03:14:47.547", "Score": "1", "LastEditorUserId": "3309790", "LastEditDate": "2017-04-04T03:28:27.343", "Id": "43197624", "OwnerUserId": "3309790", "Body": "<blockquote>\n<p id=\"so_43197543_43197624_0\">suffice? (assuming I can correct any possible issues with ResolutionSetting being inaccessible).</p>\n</blockquote>\n<p>Yes suffice. <code>GameWindow::ResolutionSetting</code> is accessible in the initializer expression of the static member.</p>\n<p>So you can define them as:</p>\n<pre><code>const GameWindow::ResolutionSetting GameWindow::w640h480(640, 480);\nconst GameWindow::ResolutionSetting GameWindow::w1600h900{1600, 900};\nconst GameWindow::ResolutionSetting GameWindow::w1920h1080 = GameWindow::ResolutionSetting(1920, 1080);\n</code></pre>\n<p>From the standard, <a href=\"http://eel.is/c++draft/class.static.data#2\" rel=\"nofollow noreferrer\">$12.2.3.2/2 Static data members [class.static.data]</a>:</p>\n<blockquote>\n<p id=\"so_43197543_43197624_1\">The initializer expression in the definition of a static data member is in the scope of its class ([basic.scope.class]).</p>\n</blockquote>\n<p><a href=\"http://rextester.com/PYSWRN83000\" rel=\"nofollow noreferrer\">Minimal sample</a></p>\n", "LastActivityDate": "2017-04-04T03:28:27.343"}, "43197543": {"CommentCount": "0", "ViewCount": "73", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2017-04-04T03:02:31.577", "LastActivityDate": "2017-04-04T04:02:40.633", "Title": "Initialize static const member of a class, where the member is of a private type?", "AcceptedAnswerId": "43197624", "LastEditDate": "2017-05-23T11:46:24.413", "Id": "43197543", "Score": "1", "Body": "<pre><code>// gamewindow.hpp\n\n#include &lt;SFML/Graphics.hpp&gt;\n#include &lt;string&gt;\n#include &lt;cstdint&gt;\n\nclass GameWindow : public sf::RenderWindow\n{\npublic:\n    GameWindow(const uint32_t&amp;, const uint32_t&amp;, const std::string&amp;);\n    void toggleFullscreen();\n\n    static const ResolutionSetting w640h480,\n                                   w1600h900,\n                                   w1920h1080,\n                                   w2560h1440;\nprivate:\n    class ResolutionSetting\n    {\n    public:\n        ResolutionSetting(const uint32_t&amp; width, const uint32_t&amp; height)\n        : res(width, height) {}\n    private:\n        sf::Vector2u res;\n    };\n\n    std::string _title;\n    uint32_t _width;\n    uint32_t _height;\n};\n</code></pre>\n<p>I am attempting to initialize the public <code>ResolutionSetting</code> objects within the <code>GameWindow</code> class, where the <code>ResolutionSetting</code> class is defined to be a <code>private</code> class within <code>GameWindow</code>.</p>\n<p>I've seen <a href=\"https://stackoverflow.com/a/3531105/4562156\">this</a> post which details how to initialize <code>static</code> <code>const</code> members of classes, however this doesn't include the case when the type definition of said member is inaccessible from outside class scope (such as when the type is specified with <code>private</code> access rules).</p>\n<p>And how do I go about initializing these objects? Would:</p>\n<pre><code>const GameWindow::ResolutionSetting GameWindow::w640h480(640, 480);\n</code></pre>\n<p>or</p>\n<pre><code>const GameWindow::ResolutionSetting GameWindow::w640h480 = GameWindow::ResolutionSetting(640, 480);\n</code></pre>\n<p>suffice? (assuming I can correct any possible issues with <code>ResolutionSetting</code> being inaccessible).</p>\n", "Tags": "<c++><c++11><language-lawyer>", "OwnerUserId": "4562156", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_43197543_43197624_1": {"section_id": 5907, "quality": 0.8181818181818182, "length": 9}}, "n3337": {"so_43197543_43197624_1": {"section_id": 5679, "quality": 0.8181818181818182, "length": 9}}, "n4659": {"so_43197543_43197624_1": {"section_id": 7389, "quality": 0.8181818181818182, "length": 9}}}});