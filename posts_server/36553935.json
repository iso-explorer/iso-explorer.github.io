post_cb({"36553990": {"ParentId": "36553935", "PostTypeId": "2", "CommentCount": "4", "Body": "<blockquote>\n<p id=\"so_36553935_36553990_0\">Does a default_random_engine have a type?</p>\n</blockquote>\n<p>Yes. It is a typedef of one of the other engines.</p>\n<p>\u00a726.5.5 </p>\n<blockquote>\n<p id=\"so_36553935_36553990_1\">Remark: The choice of engine type named by this typedef is implementation-defined. [ Note: The\n  implementation may select this type on the basis of performance, size, quality, or any combination of\n  such factors, so as to provide at least acceptable engine behavior for relatively casual, inexpert, and/or\n  lightweight use. Because different implementations may select different underlying engine types, code\n  that uses this typedef need not generate identical sequences across implementations. \u2014 end note ]</p>\n</blockquote>\n<p>All of the random engines export the type <code>Engine::result_type</code> which is the return type of <code>Engine::result_type Engine::operator()</code>.</p>\n<p><code>result_type</code> is a typedef of the <code>UIntType</code> which is the first template argument.</p>\n<p>e.g.:</p>\n<pre><code>std::mersenne_twister_engine&lt;std::uint_fast32_t, \n                         32, 624, 397, 31, \n                         0x9908b0df, 11, \n                         0xffffffff, 7, \n                         0x9d2c5680, 15, \n                         0xefc60000, 18, 1812433253&gt;\n</code></pre>\n<p>In which the return type of <code>operator()</code> is <code>std::uint_fast32_t</code>.</p>\n", "OwnerUserId": "2015579", "LastEditorUserId": "2015579", "LastEditDate": "2016-04-11T16:35:57.380", "Id": "36553990", "Score": "1", "CreationDate": "2016-04-11T16:14:30.873", "LastActivityDate": "2016-04-11T16:35:57.380"}, "36553935": {"CommentCount": "2", "ViewCount": "75", "ClosedDate": "2016-04-11T19:12:40.570", "CreationDate": "2016-04-11T16:11:54.387", "LastActivityDate": "2016-04-11T16:35:57.380", "Title": "Does a default_random_engine have a type?", "PostTypeId": "1", "Id": "36553935", "Score": "-4", "Body": "<p>Well suppose i have a <code>default_random_engine</code> in C++ does the value he generates have a type?If so it is possible to do something like\n    <code>sum = sum + generator;</code>\nand suppose <code>sum</code> has a predefined type</p>\n", "Tags": "<c++>", "OwnerUserId": "5698082", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_36553935_36553990_1": {"section_id": 3581, "quality": 0.8846153846153846, "length": 46}}, "n3337": {"so_36553935_36553990_1": {"section_id": 3446, "quality": 0.8846153846153846, "length": 46}}, "n4659": {"so_36553935_36553990_1": {"section_id": 4346, "quality": 0.8653846153846154, "length": 45}}}});