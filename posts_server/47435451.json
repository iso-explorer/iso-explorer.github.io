post_cb({"47435451": {"CommentCount": "5", "ViewCount": "65", "PostTypeId": "1", "LastEditorUserId": "27678", "CreationDate": "2017-11-22T13:03:24.300", "LastActivityDate": "2017-11-22T13:31:49.510", "Title": "While loops crashing, not adding words to the array", "LastEditDate": "2017-11-22T13:31:36.423", "Id": "47435451", "Score": "-3", "Body": "<p>My program is supposed to ask the user to add a word that then will be added to the <code>string</code> array and after that, all words will be printed out. However, the program crashes in the while loop and strings don't get added to the array.</p>\n<pre><code>#include &lt;iostream&gt;\n\nint main()\n{\n    int counter = 0;\n    bool isRunning = true;\n\n    std::string listofthings[]\n    {\n    };\n\n    while(isRunning)\n    {\n        char play;\n        std::string word;\n        std::cout &lt;&lt; \"Enter a word\" &lt;&lt; std::endl;\n        std::cin &gt;&gt; word;\n        listofthings[counter] = word;\n        counter++;\n        std::cout &lt;&lt; \"Word added! q to Quit, any other key to continue\" &lt;&lt; std::endl;\n        std::cin &gt;&gt; play;\n        if(play == 'q')\n            isRunning = false;\n    }\n\n    int listnr = sizeof(listofthings)/sizeof(listofthings[0]);\n\n    for(int i = 0; i &lt; listnr; i++)\n    {\n        std::cout &lt;&lt; listofthings[i] &lt;&lt; std::endl;\n    }\n}\n</code></pre>\n", "Tags": "<c++><arrays><c++14>", "OwnerUserId": "7047330", "AnswerCount": "2"}, "47435756": {"ParentId": "47435451", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>The statement </p>\n<pre><code>std::string listofthings[]\n{\n};\n</code></pre>\n<p>Is ill-formed C++ because the language requires that the initializer for an array contain more than zero elements ([dcl.init.aggr]):</p>\n<blockquote>\n<p id=\"so_47435451_47435756_0\">An array of unknown size initialized with a brace-enclosed initializer-list containing <code>n</code> <em>initializer-clauses</em>,\n  where <code>n</code> shall be greater than zero, is defined as having <code>n</code> elements.</p>\n</blockquote>\n<p>You just got unlucky because it appears you're using clang, which allows an extension for zero-sized arrays. (clang will warn if you have <a href=\"http://clang.llvm.org/docs/DiagnosticsReference.html#wpedantic\" rel=\"nofollow noreferrer\"><code>-Wpedantic</code></a> or <a href=\"http://clang.llvm.org/docs/DiagnosticsReference.html#wzero-length-array\" rel=\"nofollow noreferrer\"><code>-Wzero-length-array</code></a> turned on)</p>\n<p>You should instead declare your array to have enough space for what you need, OR, <a href=\"https://stackoverflow.com/a/47435514/27678\">follow max66's advice and use a std::vector</a></p>\n", "OwnerUserId": "27678", "LastEditorUserId": "27678", "LastEditDate": "2017-11-22T13:24:31.503", "Id": "47435756", "Score": "3", "CreationDate": "2017-11-22T13:18:58.987", "LastActivityDate": "2017-11-22T13:24:31.503"}, "bq_ids": {"n4140": {"so_47435451_47435756_0": {"section_id": 3301, "quality": 1.0, "length": 15}}, "n3337": {"so_47435451_47435756_0": {"section_id": 3171, "quality": 1.0, "length": 15}}, "n4659": {"so_47435451_47435756_0": {"section_id": 4067, "quality": 0.9333333333333333, "length": 14}}}, "47435514": {"ParentId": "47435451", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>You defined <code>listofthings</code> as an empty C-style array (zero elements).</p>\n<pre><code>std::string listofthings[]\n{\n};\n</code></pre>\n<p>As <a href=\"https://stackoverflow.com/a/47435756/6022656\">pointed by AndyG</a>, the language require that a size grather than zero, so your program is ill-formed. </p>\n<p>So, when you use it, </p>\n<pre><code>listofthings[counter] = word;\n</code></pre>\n<p>the behavior is undefined and, in your case, the program crash.</p>\n<p>Suggestion: transform <code>listofthings</code> in a <code>std::vector</code></p>\n<pre><code>std::vector&lt;std::string&gt; listofthings;\n</code></pre>\n<p>and add elements using <code>emplace_back()</code> or <code>push_back()</code></p>\n<pre><code>listofthings.emplace_back(std::move(word));\n</code></pre>\n<p>There is no need of <code>counter</code> and <code>listnr</code> (you can use <code>listofthings.size()</code>) and the print cycle become</p>\n<pre><code>for ( auto const &amp; str : listofthings )\n   std::cout &lt;&lt; str &lt;&lt; std::endl;\n</code></pre>\n", "OwnerUserId": "6022656", "LastEditorUserId": "6022656", "LastEditDate": "2017-11-22T13:31:49.510", "Id": "47435514", "Score": "5", "CreationDate": "2017-11-22T13:06:22.553", "LastActivityDate": "2017-11-22T13:31:49.510"}});