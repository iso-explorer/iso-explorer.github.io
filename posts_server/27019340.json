post_cb({"27019413": {"ParentId": "27019340", "CommentCount": "5", "Body": "<p>Yes. The FOREACH is happening on a reference to a struct which has been created by the foo call, and gone out of scope after being passed through to bar()</p>\n", "OwnerUserId": "62032", "PostTypeId": "2", "Id": "27019413", "Score": "1", "CreationDate": "2014-11-19T14:31:07.340", "LastActivityDate": "2014-11-19T14:31:07.340"}, "27019340": {"CommentCount": "1", "ViewCount": "68", "CreationDate": "2014-11-19T14:27:02.543", "LastActivityDate": "2014-11-19T21:16:49.703", "Title": "Does this cause undefined behavior?", "AcceptedAnswerId": "27019413", "PostTypeId": "1", "Id": "27019340", "Score": "-1", "Body": "<p>Address sanitizer is complaining.</p>\n<pre><code>struct X\n{\n  iterator begin();\n  iterator end();\n};\n\nX foo();\n\nconst X&amp; bar(const X&amp; x)\n{\n  return x;\n}\n\nBOOST_FOREACH(const auto&amp; xitem, bar(foo()))\n{\n  //use xitem\n}\n</code></pre>\n", "Tags": "<c++><undefined-behavior><boost-foreach>", "OwnerUserId": "463758", "AnswerCount": "2"}, "27020187": {"ParentId": "27019340", "LastEditDate": "2014-11-19T21:16:49.703", "CommentCount": "2", "CreationDate": "2014-11-19T15:08:42.120", "OwnerUserId": "1741297", "LastEditorUserId": "1741297", "PostTypeId": "2", "Id": "27020187", "Score": "1", "Body": "<p>Yes, this causes undefined behavior.</p>\n<p>When you bind a const reference to a temporary, the lifetime of the temporary is extended to the scope of the bound reference. In your case, this is the function <code>bar</code>. Thus, you cannot access the temporary after the <code>bar</code> function exits.</p>\n<p><strong>Edit:</strong></p>\n<p>Looked it up in the standard and actually the lifetime of the temporary is extended to the full expression containing <code>bar</code>. So it depends on how <code>BOOST_FOREACH</code> is implemented whether your code is UB or not.</p>\n<p>From N3337 12.2.5</p>\n<blockquote>\n<p id=\"so_27019340_27020187_0\">A temporary bound to a reference parameter in a\n  function call (5.2.2) persists until the completion of the full\n  expression containing the call.</p>\n</blockquote>\n", "LastActivityDate": "2014-11-19T21:16:49.703"}, "bq_ids": {"n4140": {"so_27019340_27020187_0": {"section_id": 382, "quality": 0.8571428571428571, "length": 12}}, "n3337": {"so_27019340_27020187_0": {"section_id": 373, "quality": 0.8571428571428571, "length": 12}}, "n4659": {"so_27019340_27020187_0": {"section_id": 397, "quality": 0.7857142857142857, "length": 11}}}});