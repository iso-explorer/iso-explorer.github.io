post_cb({"30186270": {"Id": "30186270", "PostTypeId": "2", "Body": "<p>You are passing a single string. This</p>\n<pre><code>\"Foo\" \"Bar\"\n</code></pre>\n<p>is exactly equivalent to</p>\n<pre><code>\"FooBar\"\n</code></pre>\n<p>so your call is the same as</p>\n<pre><code>log_person(\"jim123456789\");\n</code></pre>\n<p>This is standard C++ and so is \"safe\" on any conforming implementation. See <em>2.14.5/13</em> in the C++11 standard:</p>\n<blockquote>\n<p id=\"so_30186249_30186270_0\"><strong>2.14.5 String literals</strong></p>\n<p id=\"so_30186249_30186270_1\">...</p>\n<p id=\"so_30186249_30186270_2\"><sup>13</sup>  In translation phase 6 (2.2), adjacent string literals are concatenated.... </p>\n</blockquote>\n", "LastEditorUserId": "661519", "LastActivityDate": "2015-05-12T09:11:07.483", "Score": "5", "CreationDate": "2015-05-12T09:02:34.353", "ParentId": "30186249", "CommentCount": "8", "LastEditDate": "2015-05-12T09:11:07.483", "OwnerUserId": "661519"}, "bq_ids": {"n4140": {"so_30186249_30186270_2": {"length": 6, "quality": 1.0, "section_id": 5362}}, "n3337": {"so_30186249_30186270_2": {"length": 6, "quality": 1.0, "section_id": 5158}}, "n4659": {"so_30186249_30186270_2": {"length": 6, "quality": 1.0, "section_id": 6799}}}, "30186249": {"ViewCount": "56", "Body": "<p>I am passing two strings as one parameter in XCode and using c++. I tried this in XCode and it works. But is this safe on all platforms?</p>\n<pre><code>#include &lt;iostream&gt;\n\nvoid log_person(const char* name_and_number){\n    printf(\"name and number : %s.\\n\", name_and_number);\n}\nint main(int argc, const char * argv[]) {\n    log_person(\"jim\" \"123456789\");\n    return 0;\n}\n</code></pre>\n", "Title": "Why can I pass a string parameter like this? Is this style safe?", "CreationDate": "2015-05-12T09:01:49.187", "LastActivityDate": "2015-05-12T09:54:33.660", "CommentCount": "0", "LastEditDate": "2015-05-12T09:32:58.450", "PostTypeId": "1", "LastEditorUserId": "661519", "Id": "30186249", "Score": "2", "OwnerUserId": "4436037", "Tags": "<c++><string>", "AnswerCount": "1"}});