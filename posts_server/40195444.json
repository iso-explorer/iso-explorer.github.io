post_cb({"40195444": {"CommentCount": "2", "ViewCount": "108", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2016-10-22T18:13:01.513", "LastActivityDate": "2016-10-22T19:58:05.637", "Title": "A defaulted default constructor, why is it not a user-provided default constructor?", "AcceptedAnswerId": "40195598", "LastEditDate": "2017-05-23T12:06:46.463", "Id": "40195444", "Score": "3", "Body": "<p>For example, <code>clang</code> does not compile this code, because, the defaulted default constructor for <code>struct A</code> below, <code>A() = default;</code> is not considered to be user-provided.</p>\n<pre><code>struct A{ A() = default; };\nconst A a;\n</code></pre>\n<p>But if you look at <a href=\"http://eel.is/c++draft/dcl.fct.def.general#1\" rel=\"nofollow noreferrer\">[dcl.fct.def.general]/1</a> you'll see:</p>\n<p>function-body:<br>\n\u00a0\u00a0\u00a0\u00a0\u00a0<em>ctor-initializer</em><sub><em>opt</em></sub> <em>compound-statement</em><br>\n\u00a0\u00a0\u00a0\u00a0\u00a0<em>function-try-block</em><br>\n\u00a0\u00a0\u00a0\u00a0<code>= default ;</code><br>\n\u00a0\u00a0\u00a0\u00a0<code>= delete ;</code></br></br></br></br></p>\n<p>That is, <code>= default;</code> is the <strong>function body</strong> for the default constructor <code>A::A()</code>, which is the same as saying that the definition <code>A() = default;</code> above is equivalent to <code>A(){}</code> as <code>{}</code>is the body for a default constructor.</p>\n<p>By the way, <code>g++</code> compiles the snippet above, but I know <code>g++</code> has other issues in this regard, according to <a href=\"https://stackoverflow.com/questions/21900237/do-i-really-need-to-implement-user-provided-constructor-for-const-objects#comment33170873_21900356\">this comment</a> by Jonathan Wakely.  </p>\n", "Tags": "<c++><c++14><language-lawyer>", "OwnerUserId": "5479741", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_40195444_40195598_0": {"section_id": 3274, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_40195444_40195598_0": {"section_id": 3145, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_40195444_40195598_0": {"section_id": 4032, "quality": 0.8888888888888888, "length": 8}}}, "40195598": {"ParentId": "40195444", "CommentCount": "5", "Body": "<p>Because the standard says so (<a href=\"http://eel.is/c++draft/dcl.fct.def#default-5\">[dcl.fct.def.default]/5</a>):</p>\n<blockquote>\n<p id=\"so_40195444_40195598_0\">A function is <em>user-provided</em> if it is user-declared and not\n  explicitly defaulted or deleted on its first declaration.</p>\n</blockquote>\n<p>Doing it this way allows you to maintain the triviality property with <code>= default;</code>. Otherwise, there's no way to give a class with another constructor a trivial default constructor.</p>\n", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "40195598", "Score": "7", "CreationDate": "2016-10-22T18:27:46.243", "LastActivityDate": "2016-10-22T18:27:46.243"}});