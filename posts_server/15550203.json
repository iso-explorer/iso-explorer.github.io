post_cb({"15550203": {"ViewCount": "629", "Body": "<p>I was posting an answer to a question - and commenting it occured to me, thanks to another poster by the name <strong>metal</strong> that </p>\n<p>C++ compiler allowed this:</p>\n<p><code>int *p = 0;</code> but not this <code>int *p = 1</code>. Is <code>0</code> considered a special number?</p>\n<p>Edit: @DavidHefferman said <code>Is 0 special? In the context of a pointer, yes it is.</code> - why?</p>\n", "AcceptedAnswerId": "15550366", "Title": "Why C++ compiler allows assigning 0 to pointers and no other number", "CreationDate": "2013-03-21T14:24:52.777", "Id": "15550203", "CommentCount": "7", "PostTypeId": "1", "ClosedDate": "2013-03-22T05:43:27.513", "LastActivityDate": "2013-03-21T14:31:38.730", "Score": "-1", "OwnerUserId": "1680957", "Tags": "<c++><compiler-construction>", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_15550203_15550366_0": {"length": 67, "quality": 0.881578947368421, "section_id": 39}}, "n3337": {"so_15550203_15550366_0": {"length": 73, "quality": 0.9605263157894737, "section_id": 36}}, "n4659": {"so_15550203_15550366_0": {"length": 67, "quality": 0.881578947368421, "section_id": 39}}}, "15550243": {"Id": "15550243", "PostTypeId": "2", "Body": "<p>0 is NULL, while 1 is an invalid address.</p>\n", "LastActivityDate": "2013-03-21T14:26:48.273", "Score": "0", "CreationDate": "2013-03-21T14:26:48.273", "ParentId": "15550203", "CommentCount": "0", "OwnerUserId": "978360"}, "15550366": {"Id": "15550366", "PostTypeId": "2", "Body": "<p>Section 4.10 of the standard, Pointer conversions [conv.ptr] says:</p>\n<blockquote>\n<p id=\"so_15550203_15550366_0\">A null pointer constant is an integral constant expression (5.19) prvalue of integer type that evaluates to zero\n  or a prvalue of type std::nullptr_t. A null pointer constant can be converted to a pointer type; the result\n  is the null pointer value of that type and is distinguishable from every other value of pointer to object or\n  pointer to function type. Such a conversion is called a null pointer conversion. Two null pointer values of the\n  same type shall compare equal. The conversion of a null pointer constant to a pointer to cv-qualified type is\n  a single conversion, and not the sequence of a pointer conversion followed by a qualification conversion (4.4).\n  A null pointer constant of integral type can be converted to a prvalue of type std::nullptr_t.</p>\n</blockquote>\n<p>So, yes, <code>0</code> is a special value in the context of pointers.</p>\n", "LastActivityDate": "2013-03-21T14:31:38.730", "Score": "3", "CreationDate": "2013-03-21T14:31:38.730", "ParentId": "15550203", "CommentCount": "3", "OwnerUserId": "505088"}, "15550314": {"Id": "15550314", "PostTypeId": "2", "Body": "<p>\"A null-pointer constant is an integral constant expression that evaluates to zero (such as 0 or 0L).\"</p>\n<p>See <a href=\"http://www.cplusplus.com/reference/cstring/NULL/\" rel=\"nofollow\">http://www.cplusplus.com/reference/cstring/NULL/</a></p>\n", "LastActivityDate": "2013-03-21T14:29:48.623", "Score": "1", "CreationDate": "2013-03-21T14:29:48.623", "ParentId": "15550203", "CommentCount": "1", "OwnerUserId": "1675168"}});