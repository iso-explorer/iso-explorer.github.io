post_cb({"18176159": {"Id": "18176159", "PostTypeId": "2", "Body": "<p>The first line is ambiguous in the formal grammar: Either it could be interpreted as a function declaration or a declaration and instantiation of an object with a no-arg constructor. The language opts to treat it as a function declaration since it is possible to forego the parentheses to invoke the no-arg constructor. </p>\n", "LastActivityDate": "2013-08-11T20:06:45.750", "CommentCount": "0", "CreationDate": "2013-08-11T20:06:45.750", "ParentId": "18176117", "Score": "0", "OwnerUserId": "129655"}, "18176272": {"Id": "18176272", "PostTypeId": "2", "Body": "<p>The first line is in fact a declaration. Even if it seems to be the same as your second, it is not...</p>\n<p>So </p>\n<pre><code>T name();\n</code></pre>\n<p><strong>declares</strong> a function <code>name</code> return an object of type <code>T</code>.</p>\n<p>The C++ standard states this ambiguity :</p>\n<blockquote>\n<p id=\"so_18176117_18176272_0\"><strong>6.8 Ambiguity resolution [stmt.ambig]</strong></p>\n<p id=\"so_18176117_18176272_1\">There is an ambiguity in the grammar involving expression-statements and declarations: An expression-statement with a function-style explicit type conversion as its leftmost subexpression can be indistinguishable from a declaration where the first declarator starts with a (. <strong>In those cases the statement is a declaration</strong>.</p>\n</blockquote>\n<p>This ambiguity is also called <a href=\"http://en.wikipedia.org/wiki/Most_vexing_parse\" rel=\"nofollow noreferrer\">The Most Vexing Parse</a>.</p>\n<hr>\n<p>There is a new way to solve this since the C++11, it is called the <a href=\"https://stackoverflow.com/questions/7612075/how-to-use-c11-uniform-initialization-syntax\"><strong>uniform initialization syntax</strong></a>.</p>\n<p>It works like :</p>\n<pre><code>T name{};\n</code></pre>\n</hr>", "LastEditorUserId": "-1", "LastActivityDate": "2013-08-11T20:26:59.837", "Score": "1", "CreationDate": "2013-08-11T20:19:02.603", "ParentId": "18176117", "CommentCount": "0", "OwnerUserId": "1394283", "LastEditDate": "2017-05-23T12:28:54.780"}, "18176135": {"Id": "18176135", "PostTypeId": "2", "Body": "<p>Something which looks like a function declaration <em>is</em> a function declaration. That is</p>\n<pre><code>T name();\n</code></pre>\n<p>declares a function called <code>name</code> taking no arguments and returning a <code>T</code>. This is called the <a href=\"http://en.wikipedia.org/wiki/Most_vexing_parse\">Most Vexing Parse</a>. There are two potential fixes to avoiding this problem: leaving the parenthesis off or using C++2011 \"uniform initialization\" (which is a gross misnomer):</p>\n<pre><code>T name{};\n</code></pre>\n", "LastActivityDate": "2013-08-11T20:04:27.223", "CommentCount": "0", "CreationDate": "2013-08-11T20:04:27.223", "ParentId": "18176117", "Score": "7", "OwnerUserId": "1120273"}, "bq_ids": {"n4140": {"so_18176117_18176272_1": {"length": 25, "quality": 1.0, "section_id": 3921}}, "n3337": {"so_18176117_18176272_1": {"length": 20, "quality": 0.8, "section_id": 3781}}, "n4659": {"so_18176117_18176272_1": {"length": 25, "quality": 1.0, "section_id": 4807}}}, "18176117": {"ViewCount": "295", "Body": "<p>In my program I have </p>\n<pre><code>stringstream strumien(); //1\nstringstream strumien;  // 2\nstrumien&lt;&lt;\"napis \"&lt;&lt;8&lt;&lt;endl;\n</code></pre>\n<p>and the first line generates the following error  </p>\n<blockquote>\n<p id=\"so_18176117_18176117_0\">invalid operands of types 'std::stringstream() {aka\n  std::basic_stringstream()}' and 'const char [7]' to binary\n  'operator&lt;&lt;'</p>\n</blockquote>\n<p>But the second one works properly. (of course always one of them is commented out)<br>\nSo what is the difference between them? Because I always thought that they are equal definitions of an object.</br></p>\n", "AcceptedAnswerId": "18176135", "Title": "What is the difference between stringstream object() and object?", "CreationDate": "2013-08-11T20:02:04.297", "Id": "18176117", "CommentCount": "2", "LastEditDate": "2013-08-11T20:25:39.473", "PostTypeId": "1", "LastEditorUserId": "488657", "LastActivityDate": "2013-08-11T20:26:59.837", "Score": "2", "OwnerUserId": "2672978", "Tags": "<c++>", "AnswerCount": "3"}});