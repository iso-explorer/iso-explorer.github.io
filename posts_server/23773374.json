post_cb({"bq_ids": {"n4140": {"so_23773374_23773551_0": {"length": 17, "quality": 0.8947368421052632, "section_id": 5994}}, "n3337": {"so_23773374_23773551_0": {"length": 17, "quality": 0.8947368421052632, "section_id": 5762}}, "n4659": {"so_23773374_23773551_0": {"length": 17, "quality": 0.8947368421052632, "section_id": 7496}}}, "23773374": {"ViewCount": "43", "Body": "<p>So, I've read a lot online for this error, but for some reason, I'm still getting it even after I have tried the suggested things.  If anyone could help me understand this and point out what's wrong, that would be awesome. </p>\n<pre><code>char * s = strtok(text, \",\");\nstring name = s;\nprintf(\"%s\", name);\n</code></pre>\n", "AcceptedAnswerId": "23773551", "Title": "Non-POD object error", "CreationDate": "2014-05-21T03:18:51.103", "Id": "23773374", "CommentCount": "4", "LastEditDate": "2014-05-21T03:48:39.140", "PostTypeId": "1", "LastEditorUserId": "631615", "LastActivityDate": "2014-05-21T03:48:39.140", "Score": "0", "OwnerUserId": "1642463", "Tags": "<c++>", "AnswerCount": "1"}, "23773551": {"Id": "23773551", "PostTypeId": "2", "Body": "<p>Given your example code the error you get is saying something like you cannot pass a non-POD object to an ellipses. This is because you are trying to pass a non-POD type to a variadic function, one that takes a variable number of arguments. In this case by calling <code>printf</code> which is declared something like the below</p>\n<pre><code>int printf ( const char * format, ... );\n</code></pre>\n<p>The ellipsis used as the last parameter allows you to pass 0 or more additional arguments to the function as you are doing in your code. The C++ standard <strong>does</strong> allow you to pass a non-POD type but compilers are not <strong>required</strong> to support it. This is covered in part by 5.2.2/7 of the standard.</p>\n<blockquote>\n<p id=\"so_23773374_23773551_0\">Passing a potentially-evaluated argument of class type having a non-trivial copy constructor, a non-trivial move contructor, or a non-trivial destructor, with no corresponding parameter, is conditionally-supported with implementation-defined semantics.</p>\n</blockquote>\n<p>This means it is up to each compiler maker to decide <strong>if</strong> they want to support it <strong>and</strong> how it will behave. Apparently your compiler does not support this and even if it did I wouldn't recommend using it.</p>\n", "LastActivityDate": "2014-05-21T03:41:08.263", "CommentCount": "0", "CreationDate": "2014-05-21T03:41:08.263", "ParentId": "23773374", "Score": "2", "OwnerUserId": "845568"}});