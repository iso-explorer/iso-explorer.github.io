post_cb({"24548034": {"ParentId": "24547961", "CommentCount": "1", "Body": "<p>change to:</p>\n<pre><code>template&lt;typename T&gt;\ntemplate&lt;typename U&gt;\nconst unsigned A&lt;T&gt;::B&lt;U&gt;::val;\n</code></pre>\n", "OwnerUserId": "2352671", "PostTypeId": "2", "Id": "24548034", "Score": "0", "CreationDate": "2014-07-03T07:53:00.617", "LastActivityDate": "2014-07-03T07:53:00.617"}, "bq_ids": {"n4140": {"so_24547961_24548280_3": {"section_id": 168, "quality": 1.0, "length": 6}, "so_24547961_24548280_0": {"section_id": 168, "quality": 1.0, "length": 7}, "so_24547961_24548280_1": {"section_id": 168, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_24547961_24548280_3": {"section_id": 162, "quality": 1.0, "length": 6}, "so_24547961_24548280_0": {"section_id": 162, "quality": 1.0, "length": 7}, "so_24547961_24548280_1": {"section_id": 162, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_24547961_24548280_3": {"section_id": 173, "quality": 1.0, "length": 6}, "so_24547961_24548280_0": {"section_id": 173, "quality": 1.0, "length": 7}, "so_24547961_24548280_1": {"section_id": 173, "quality": 0.8888888888888888, "length": 8}}}, "24547961": {"CommentCount": "3", "ViewCount": "74", "PostTypeId": "1", "LastEditorUserId": "1353535", "CreationDate": "2014-07-03T07:48:48.497", "LastActivityDate": "2017-09-18T09:27:24.200", "Title": "\"template definition of non-template\" error while using nested templates", "AcceptedAnswerId": "24548280", "LastEditDate": "2017-09-18T09:27:24.200", "Id": "24547961", "Score": "1", "Body": "<p>I'm trying to have a nested template structure with a static variable inside. I've reduced my code to this barebones example.</p>\n<pre><code>template&lt;typename T&gt; struct A\n{\n    template&lt;typename U&gt; struct B\n    {\n        static const unsigned val;\n    };\n};\n\ntemplate&lt;typename T&gt;\ntemplate&lt;typename U&gt;\nconst unsigned A&lt;T&gt;::template B&lt;U&gt;::val;\n</code></pre>\n<p>This is giving me the error</p>\n<pre><code>template definition of non-template \u2018const unsigned int A&lt;T&gt;::B&lt;U&gt;::val\u2019\nconst unsigned A&lt;T&gt;::template B&lt;U&gt;::val;\n</code></pre>\n<p>I'm not able to find what exactly is wrong with the syntax.</p>\n", "Tags": "<c++><templates>", "OwnerUserId": "1353535", "AnswerCount": "2"}, "24548280": {"ParentId": "24547961", "CommentCount": "0", "Body": "<p>You need to drop the <code>template</code> in the definition.  The symbol\n<code>B</code> is not dependent, at least in the sense of the standard;\nit's a locally declared name, since it is defined within the\ntemplate <code>A</code>.  See \u00a714.6: </p>\n<blockquote>\n<p id=\"so_24547961_24548280_0\">Three kinds of names can be used within a template definition:</p>\n<p id=\"so_24547961_24548280_1\">\u2014 The name of the template itself, and names declared within the template itself.</p>\n<p id=\"so_24547961_24548280_2\">\u2014 Names dependent on a template-parameter (14.6.2).</p>\n<p id=\"so_24547961_24548280_3\">\u2014 Names from scopes which are visible within the template definition.</p>\n</blockquote>\n", "OwnerUserId": "649665", "PostTypeId": "2", "Id": "24548280", "Score": "1", "CreationDate": "2014-07-03T08:07:28.753", "LastActivityDate": "2014-07-03T08:07:28.753"}});