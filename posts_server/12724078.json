post_cb({"12724110": {"ParentId": "12724078", "CommentCount": "0", "Body": "<p>Because operator <code>-&gt;</code> applies sequentially until it can't be applied any more.</p>\n<h3>13.5.6 Class member access [over.ref]</h3>\n<blockquote>\n<p id=\"so_12724078_12724110_0\">1) <code>operator-&gt;</code> shall be a non-static member function taking no\n  parameters. It implements class member access using <code>-&gt;\n  postfix-expression -&gt; id-expression</code> <strong>An expression <code>x-&gt;m</code> is interpreted\n  as <code>(x.operator-&gt;())-&gt;m</code> for a class object <code>x</code> of type <code>T</code> if\n  <code>T::operator-&gt;()</code> exists and if the operator is selected as the best\n  match function by the overload resolution mechanism (13.3).</strong> (emphasis mine)</p>\n</blockquote>\n<p>Which means, in your case, it translates to:</p>\n<pre><code>smPtr.operator-&gt;()-&gt;Show();\n          |           |\n      returns A*   call Show on the A*\n</code></pre>\n", "OwnerUserId": "673730", "PostTypeId": "2", "Id": "12724110", "Score": "4", "CreationDate": "2012-10-04T09:21:15.210", "LastActivityDate": "2012-10-04T09:21:15.210"}, "12724078": {"CommentCount": "0", "ViewCount": "119", "CreationDate": "2012-10-04T09:19:02.780", "LastActivityDate": "2012-10-04T09:22:20.873", "Title": "C++ Overloading -> operator, how does it work?", "AcceptedAnswerId": "12724110", "PostTypeId": "1", "Id": "12724078", "Score": "1", "Body": "<p>I was trying to implement a smart pointer class similar to the standard library auto_ptr and accordingly I had to overload the -&gt; operator for the same. Here is my code </p>\n<pre><code>template &lt;typename T&gt;\nclass SmartPtr\n{\n\n   T * operator -&gt; ()\n  {\n    return _pAct;\n  }\n\n private:\n T * _pAct;\n};\n</code></pre>\n<p>Rest of the implementation is not shown so as to avoid diversion from my query. </p>\n<p>Now I create a SmartPtr of class A and call a method Show() present in A on it : </p>\n<pre><code>SmartPtr smPtr(new A);\nsmPtr-&gt;Show();\n</code></pre>\n<p>Here is my query(don't know if its valid also)</p>\n<p>Since SmartPtr::operator-&gt;() return A*, the call to show should translate to (A*)Show. Why it translates to (A*)-&gt;Show() ?</p>\n<p>or in other words how does smPtr-&gt;Show() mean call Show() on whatever smPtr-&gt;() operator returns ?</p>\n", "Tags": "<c++><operator-overloading>", "OwnerUserId": "602798", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_12724078_12724110_0": {"section_id": 664, "quality": 0.8125, "length": 26}}, "n3337": {"so_12724078_12724110_0": {"section_id": 654, "quality": 0.8125, "length": 26}}, "n4659": {"so_12724078_12724110_0": {"section_id": 692, "quality": 0.8125, "length": 26}}}});