post_cb({"bq_ids": {"n4140": {"so_15823217_15823253_1": {"length": 7, "quality": 0.5384615384615384, "section_id": 45}, "so_15823217_15823253_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 6708}}, "n3337": {"so_15823217_15823253_1": {"length": 7, "quality": 0.5384615384615384, "section_id": 42}, "so_15823217_15823253_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 6463}}, "n4659": {"so_15823217_15823253_1": {"length": 8, "quality": 0.6153846153846154, "section_id": 8721}, "so_15823217_15823253_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 8183}}}, "15823253": {"Id": "15823253", "PostTypeId": "2", "Body": "<p>Yes.</p>\n<p><code>size_t</code> is defined to be an unsigned integer type large enough to contain the size of any object. <code>uintmax_t</code> is defined to be able to store any value of any unsigned integer type. So if <code>size_t</code> can store it, <code>uintmax_t</code> can store it.</p>\n<p>Definition of <code>size_t</code> from C++11 \u00a718.2:</p>\n<blockquote>\n<p id=\"so_15823217_15823253_0\">The type size_t is an implementation-defined unsigned integer type that is large enough to contain the size in bytes of any object.</p>\n</blockquote>\n<p>Definition of <code>uintmax_t</code> from C99 \u00a77.18.1.5 (it is included in C++ by normative reference):</p>\n<blockquote>\n<p id=\"so_15823217_15823253_1\">The following type designates an unsigned integer type capable of representing any value\n  of any unsigned integer type:</p>\n<pre><code>uintmax_t\n</code></pre>\n</blockquote>\n", "LastEditorUserId": "150634", "LastActivityDate": "2013-04-04T23:20:01.463", "Score": "27", "CreationDate": "2013-04-04T23:08:25.403", "ParentId": "15823217", "CommentCount": "5", "OwnerUserId": "150634", "LastEditDate": "2013-04-04T23:20:01.463"}, "15823217": {"ViewCount": "1047", "Body": "<p>Does the C++ standard guarantee (either by explicitly stating it or implicitly by logical deduction) that <code>std::uintmax_t</code> can hold all values of <code>std::size_t</code>?</p>\n<p>Or is it possible for <code>std::numeric_limits&lt;std::size_t&gt;::max()</code> to be larger than <code>std::numeric_limits&lt;std::uintmax_t&gt;::max()</code>?</p>\n", "AcceptedAnswerId": "15823253", "Title": "Does the C++ standard guarantee that std::uintmax_t can hold all values of std::size_t?", "CreationDate": "2013-04-04T23:04:01.430", "Id": "15823217", "CommentCount": "2", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2013-04-04T23:04:36.887", "LastEditorUserId": "150634", "LastActivityDate": "2013-04-04T23:20:01.463", "Score": "19", "OwnerUserId": "2228370", "Tags": "<c++><c++11>", "AnswerCount": "1"}});