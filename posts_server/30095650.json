post_cb({"bq_ids": {"n4140": {"so_30095650_30096649_0": {"length": 55, "quality": 0.9482758620689655, "section_id": 6142}}, "n3337": {"so_30095650_30096649_0": {"length": 55, "quality": 0.9482758620689655, "section_id": 5906}}}, "30095650": {"CreationDate": "2015-05-07T08:25:29.347", "ViewCount": "247", "Id": "30095650", "AcceptedAnswerId": "30096649", "Score": "2", "Title": "C++ implicit conversion of pointer type", "LastEditorUserId": "3688510", "CommentCount": "5", "Body": "<p>Consider this case:</p>\n<pre><code>int *ptr;\nint offset;\nptr = &lt;some_address&gt;;\noffset = 10;\n</code></pre>\n<p>Assume that <code>offset</code> is 32-bit variable. <code>ptr</code> has type <code>int*</code>, the target architecture is 64-bit (so <code>ptr</code> is 8-byte variable), <code>offset</code> has type <code>int</code>. What conversion will be performed when calculating value of expression<code>*(ptr + offset)</code>? Where can I read about it in the 2003 C++ standard?</p>\n", "Tags": "<c++><implicit-conversion><pointer-conversion>", "LastEditDate": "2015-05-07T09:06:37.417", "LastActivityDate": "2015-05-07T21:08:16.933", "PostTypeId": "1", "AnswerCount": "1", "OwnerUserId": "3688510"}, "30096649": {"LastActivityDate": "2015-05-07T21:08:16.933", "CreationDate": "2015-05-07T09:12:20.140", "CommentCount": "0", "Body": "<p>This is what the standard has to say about this [expr.add]/4:</p>\n<blockquote>\n<p id=\"so_30095650_30096649_0\">When an expression that has integral type is added to or subtracted from a pointer, the result has the type of the pointer operand. If the pointer operand points to an element of an array object84, and the array is large enough, the result points to an element offset from the original element such that the difference of the subscripts of the resulting and original array elements equals the integral expression. In other words, if the expression P points to the i-th element of an array object, the expressions (P)+N (equivalently, N+(P)) and (P)-N (where N has the value n) point to, respectively, the i + n-th and i =\u0338 n-th elements of the array object, provided they exist.</p>\n</blockquote>\n<p>In simpler words, this means that the address where <code>ptr</code> points to is incremented by <code>offset * sizeof(*ptr)</code> when you write <code>ptr + offset</code>.</p>\n", "Id": "30096649", "LastEditDate": "2015-05-07T21:08:16.933", "ParentId": "30095650", "OwnerUserId": "1978011", "PostTypeId": "2", "Score": "4", "LastEditorUserId": "1978011"}});