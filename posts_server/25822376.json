post_cb({"25822398": {"Id": "25822398", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_25822376_25822398_0\"><em>Why I can use private methods from template functions?</em></p>\n</blockquote>\n<p>You can't. \u00a714.6 [temp.res]/p4:</p>\n<blockquote>\n<p id=\"so_25822376_25822398_1\">If no valid specialization can be generated for a template, and that template is not instantiated, the template is ill-formed, no diagnostic required.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p id=\"so_25822376_25822398_2\"><em>I am interested why I cant see error before calling the function</em></p>\n</blockquote>\n<p>A compiler may defer the analysis until the function template is instantiated. Still, this is an implementation-defined behavior, and your code remains <em>ill-formed</em> (the continuation of \u00a714.6/p4):</p>\n<blockquote>\n<p id=\"so_25822376_25822398_3\">[ <em>Note</em>: If a template is instantiated, errors will be diagnosed according to the other rules in this Standard. <strong>Exactly when these errors are diagnosed is a quality of implementation issue</strong>. \u2014 <em>end note</em> ]</p>\n</blockquote>\n<p><a href=\"http://coliru.stacked-crooked.com/a/25f1d59d15afbd23\" rel=\"nofollow\">GCC demo</a> (issues an error only on instantiation)<br>\n<a href=\"http://coliru.stacked-crooked.com/a/764635c6a3306432\" rel=\"nofollow\">Clang demo</a> (issues an error without instantiation)</br></p>\n</hr>", "LastEditorUserId": "3953764", "LastActivityDate": "2015-06-27T19:53:14.930", "Score": "13", "CreationDate": "2014-09-13T10:41:40.667", "ParentId": "25822376", "CommentCount": "5", "OwnerUserId": "3953764", "LastEditDate": "2015-06-27T19:53:14.930"}, "bq_ids": {"n4140": {"so_25822376_25822398_1": {"length": 11, "quality": 1.0, "section_id": 175}, "so_25822376_25822398_3": {"length": 15, "quality": 0.7894736842105263, "section_id": 175}}, "n3337": {"so_25822376_25822398_1": {"length": 11, "quality": 1.0, "section_id": 169}, "so_25822376_25822398_3": {"length": 15, "quality": 0.7894736842105263, "section_id": 169}}, "n4659": {"so_25822376_25822398_1": {"length": 9, "quality": 0.8181818181818182, "section_id": 180}, "so_25822376_25822398_3": {"length": 15, "quality": 0.7894736842105263, "section_id": 180}}}, "25822376": {"ViewCount": "219", "Body": "<p>I have template class MyClass</p>\n<pre><code>template &lt;class T&gt;\nclass MyClass\n{\npublic:\n  MyClass() { }\nprivate:\n  void PrivateFunction() { \n    std::cout &lt;&lt; \"Message From Private Function\" &lt;&lt; std::endl; \n  }\n};\n</code></pre>\n<p>Now when I am trying to use PrivateFunction() inside another function compiler reports error, but when I am trying the same inside template function compiler doesn't show any error.</p>\n<ol>\n<li><p>Compiler doesn't report error.</p>\n<pre><code>template &lt;class T&gt;\nvoid f()\n{\n  MyClass&lt;int&gt; a;\n  a.PrivateFunction();\n}\n</code></pre></li>\n<li><p>Compiler reports error.</p>\n<pre><code>void f()\n{\n  MyClass&lt;int&gt; a;\n  a.PrivateFunction();\n}\n</code></pre></li>\n</ol>\n", "AcceptedAnswerId": "25822398", "Title": "Why I can use private methods from template functions", "CreationDate": "2014-09-13T10:39:14.383", "Id": "25822376", "CommentCount": "5", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2015-06-27T19:53:14.930", "Score": "4", "OwnerUserId": "4037465", "Tags": "<c++><function><class><templates>", "AnswerCount": "1"}});