post_cb({"bq_ids": {"n4140": {"so_22040875_22041210_0": {"length": 18, "quality": 1.0, "section_id": 5455}}, "n4659": {"so_22040875_22041210_0": {"length": 18, "quality": 1.0, "section_id": 6881}}}, "22041210": {"Id": "22041210", "PostTypeId": "2", "Body": "<p>The first works because of this rule, 7.1.6.4/11 of the <a href=\"http://isocpp.org/files/papers/N3797.pdf\">latest draft</a></p>\n<blockquote>\n<p id=\"so_22040875_22041210_0\">Once a <code>return</code> statement has been seen in a function, however, the return type\n  deduced from that statement can be used in the rest of the function, including in other <code>return</code> statements.</p>\n</blockquote>\n<p>So the return type is deduced as <code>int</code> from the first <code>return</code> statement; the second is just checked to make sure that it also gives <code>int</code>, assuming that the recursive call does.</p>\n<p>The second doesn't compile because the type of the expression depends on the return type; so the type can't be deduced.</p>\n", "Score": "11", "LastActivityDate": "2014-02-26T12:21:06.460", "CreationDate": "2014-02-26T12:21:06.460", "ParentId": "22040875", "CommentCount": "0", "OwnerUserId": "204847"}, "22040875": {"ViewCount": "346", "LastEditDate": "2014-02-26T12:12:47.517", "AcceptedAnswerId": "22041210", "Title": "Return type deduction in recursive function", "CreationDate": "2014-02-26T12:07:23.387", "LastActivityDate": "2014-02-26T12:21:06.460", "CommentCount": "4", "Body": "<p>Following code <a href=\"http://ideone.com/SlzDnZ\">compiles</a> :</p>\n<pre><code>auto foo(int i) {\n  if( i == 1 )\n    return i;\n  else \n    return foo(i-1)+i ; \n}\n</code></pre>\n<p>While following <a href=\"http://ideone.com/QWeLjj\">doesn't</a>, <sub><a href=\"http://coliru.stacked-crooked.com/a/2e16c855e9024f7a\"><strong><em>c++1y</em></strong></a></sub></p>\n<pre><code>auto foo(int i) {\n  return (i == 1) ? i : foo(i-1)+i ;  \n}\n</code></pre>\n<hr>\n<p>Why can't compiler deduce the return type in second case ? Am I missing something over here ? </p>\n<p>I know there's a sequence point after <code>(i == 1)</code> in second scenario, but that shouldn't be affecting compilation, right ?</p>\n</hr>", "PostTypeId": "1", "LastEditorUserId": "1870232", "Id": "22040875", "AnswerCount": "2", "Score": "8", "OwnerUserId": "1870232", "Tags": "<c++><c++14>", "FavoriteCount": "2"}, "22041002": {"Id": "22041002", "PostTypeId": "2", "Body": "<p>A recursive function can have an auto return type only if it has a non-recursive return statement before the recursive call. See <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3386.html\" rel=\"noreferrer\">Return type deduction for normal functions</a>.</p>\n", "Score": "6", "LastActivityDate": "2014-02-26T12:12:53.470", "CreationDate": "2014-02-26T12:12:53.470", "ParentId": "22040875", "CommentCount": "0", "OwnerUserId": "648078"}});