post_cb({"bq_ids": {"n4140": {"so_37934918_37939803_0": {"length": 21, "quality": 0.7, "section_id": 5941}}, "n3337": {"so_37934918_37939803_0": {"length": 21, "quality": 0.7, "section_id": 5712}}, "n4659": {"so_37934918_37939803_0": {"length": 21, "quality": 0.7, "section_id": 7425}}}, "37939803": {"Id": "37939803", "PostTypeId": "2", "Body": "<p>From the standard [Section 5, #7]</p>\n<blockquote>\n<p id=\"so_37934918_37939803_0\">In some contexts, unevaluated operands appear (5.2.8, 5.3.3, 5.3.7,\n  7.1.6.2). An unevaluated operand is not evaluated. [ Note: In an unevaluated operand, a non-static class member may be named (5.1) and\n  naming of objects or functions does not, by itself, require that a\n  definition be provided (3.2). \u2014 end note ]</p>\n</blockquote>\n<p>The contexts where its used are:</p>\n<ol>\n<li>Type identification [Section 5.2.8]</li>\n<li>Sizeof operator     [Section 5.3.3]</li>\n<li>noexcept            [Section 5.3.7]</li>\n<li>Type specifiers For eg <code>decltype(declval&lt;T&gt;())</code> [Section 7.1.6.2]</li>\n</ol>\n<p>So,in layman terms (From what I understand) it cannot be used as a standalone expression like <code>a + b;</code>.</p>\n<p>As per comment from Massa below:</p>\n<blockquote>\n<p id=\"so_37934918_37939803_1\">In those above mentioned contexts, the expression that denotes the\n  unevaluated operand is unfolded so that the type of its result (and,\n  in the case of sizeof, the size of that type) can be determined, but\n  the evaluation of the expression is never incorporated to the final\n  program. </p>\n<p id=\"so_37934918_37939803_2\">Example: <code>typeof(std::cout &lt;&lt; \"1\\n\") &amp;x = std::cout;</code> will never\n  generate the code to print \"1\\n\" to the standard output.</p>\n</blockquote>\n", "LastEditorUserId": "434233", "LastActivityDate": "2016-06-21T09:32:24.933", "Score": "1", "CreationDate": "2016-06-21T08:55:39.757", "ParentId": "37934918", "CommentCount": "2", "OwnerUserId": "434233", "LastEditDate": "2016-06-21T09:32:24.933"}, "37934918": {"ViewCount": "57", "Body": "<p><a href=\"http://en.cppreference.com/w/cpp/utility/declval\" rel=\"nofollow\">cppreference web site</a> introduces declval with : </p>\n<blockquote>\n<p id=\"so_37934918_37934918_0\">Note that because no definition exists for declval, it can only be used in unevaluated contexts</p>\n</blockquote>\n<p>I checked ISO C++11 standard, there's no phrase of \"unevaluated context\". Is this a concept in compiling principles, or something else?</p>\n<p>Thanks.</p>\n", "AcceptedAnswerId": "37939803", "Title": "C++11 declval: what is \"unevaluated context\"?", "CreationDate": "2016-06-21T03:07:26.467", "Id": "37934918", "CommentCount": "1", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2016-06-21T03:15:52.743", "LastEditorUserId": "1505939", "LastActivityDate": "2016-06-21T09:32:24.933", "Score": "1", "OwnerUserId": "5890784", "Tags": "<c++11><definition><evaluation>", "AnswerCount": "1"}});