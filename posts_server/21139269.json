post_cb({"bq_ids": {"n4140": {"so_21139269_21139270_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 3906}}, "n3337": {"so_21139269_21139270_1": {"length": 5, "quality": 0.8333333333333334, "section_id": 3766}}, "n4659": {"so_21139269_21139270_1": {"length": 4, "quality": 0.6666666666666666, "section_id": 4792}}}, "21139270": {"Id": "21139270", "PostTypeId": "2", "Body": "<p><strong>No, only once.</strong></p>\n<blockquote>\n<p id=\"so_21139269_21139270_0\"><code>[C++11: 6.5.4]:</code> For a range-based <code>for</code> statement of the form</p>\n<pre><code>for ( for-range-declaration : expression ) statement\n</code></pre>\n<p id=\"so_21139269_21139270_1\">let <em>range-init</em> be equivalent to the expression surrounded by parentheses</p>\n<pre><code>( expression )\n</code></pre>\n<p id=\"so_21139269_21139270_2\"><em>[..]</em> a range-based for statement is equivalent to</p>\n<pre><code>{\n   auto &amp;&amp; __range = range-init;\n   for ( auto __begin = begin-expr,\n              __end = end-expr;\n        __begin != __end;\n        ++__begin ) {\n      for-range-declaration = *__begin;\n      statement\n   }\n}\n</code></pre>\n<p id=\"so_21139269_21139270_3\"><em>[..]</em></p>\n</blockquote>\n<p>Interestingly, this relatively new passage is a rare example of the standard defining semantics in terms of code using pre-existing language features. I guess they got bored of writing terse technical language.</p>\n<p>It means we have to <em>deduce</em> the fact above from the code; in this case, fortunately, it's easy: <em>range-init</em> is evaluated once and bound to the universal reference <code>__range</code>.</p>\n", "LastActivityDate": "2014-01-15T13:52:36.440", "CommentCount": "2", "CreationDate": "2014-01-15T13:52:36.440", "ParentId": "21139269", "Score": "4", "OwnerUserId": "560648"}, "21139269": {"ViewCount": "118", "Body": "<p>When I do:</p>\n<pre><code>for (auto p : foo()) {\n   // ...\n}\n</code></pre>\n<p>is <code>foo()</code> evaluated on each iteration of the loop?</p>\n", "AcceptedAnswerId": "21139270", "Title": "Is the expression in a ranged-for statement evaluated on each iteration?", "CreationDate": "2014-01-15T13:52:36.440", "Id": "21139269", "CommentCount": "1", "PostTypeId": "1", "ClosedDate": "2014-01-15T13:59:40.073", "LastActivityDate": "2014-01-15T13:52:36.440", "Score": "1", "OwnerUserId": "560648", "Tags": "<c++><c++11>", "AnswerCount": "1"}});