post_cb({"3301152": {"CommentCount": "3", "ViewCount": "404", "PostTypeId": "1", "LastEditorUserId": "4370109", "CreationDate": "2010-07-21T15:44:07.593", "LastActivityDate": "2016-06-15T21:56:07.760", "Title": "Calling a C++ macro with fewer arguments", "AcceptedAnswerId": "3301211", "LastEditDate": "2016-06-15T21:56:07.760", "Id": "3301152", "Score": "1", "Body": "<p>Is it possible to call function-like-macros with less that all the parameters in linux?\nActually doing this only generates a warning in Visual Studio (warning 4003) and unassigned variables replaces with \"\".</p>\n<p>But compiling it using g++ generates an error in linux (\"error: macro *** requires ** arguments, but only ** given\").</p>\n<p>Is there any possible way to disable this or overcome it?</p>\n", "Tags": "<c++><macros><g++><c-preprocessor>", "OwnerUserId": "395573", "AnswerCount": "2"}, "3301211": {"ParentId": "3301152", "CommentCount": "2", "Body": "<p>The number of arguments in a macro invocation must exactly match the number of parameters in the macro definition.  So, no, you cannot invoke a macro with fewer arguments than it has parameters.</p>\n<p>To \"overcome\" it, you can define multiple differently named macros with different numbers of parameters.</p>\n<p>C++0x (which is not yet standard, but which your compiler might partially support) adds support for variadic macros which can be called with a variable number of arguments.</p>\n", "OwnerUserId": "151292", "PostTypeId": "2", "Id": "3301211", "Score": "2", "CreationDate": "2010-07-21T15:50:46.457", "LastActivityDate": "2010-07-21T15:50:46.457"}, "3301222": {"ParentId": "3301152", "CommentCount": "0", "Body": "<p>The standard (\u00a716.3 - Macro replacement) is clear that you have to pass the same number of arguments:</p>\n<blockquote>\n<p id=\"so_3301152_3301222_0\">\"If the identi\ufb01er-list in the macro\n  de\ufb01nition does not end with an\n  ellipsis, the number of arguments\n  (including those arguments consisting\n  of no preprocessing tokens) in an\n  invocation of a function-like macro\n  shall equal the number of parameters\n  in the macro de\ufb01nition.\"</p>\n</blockquote>\n<p>I don't know of any g++ option to override this.</p>\n", "OwnerUserId": "47773", "PostTypeId": "2", "Id": "3301222", "Score": "2", "CreationDate": "2010-07-21T15:51:41.837", "LastActivityDate": "2010-07-21T15:51:41.837"}, "bq_ids": {"n4140": {"so_3301152_3301222_0": {"section_id": 514, "quality": 0.8636363636363636, "length": 19}}, "n3337": {"so_3301152_3301222_0": {"section_id": 505, "quality": 0.8636363636363636, "length": 19}}, "n4659": {"so_3301152_3301222_0": {"section_id": 535, "quality": 0.8636363636363636, "length": 19}}}});