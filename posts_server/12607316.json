post_cb({"bq_ids": {"n4140": {"so_12607316_12609771_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 744}}, "n3337": {"so_12607316_12609771_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 733}}, "n4659": {"so_12607316_12609771_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 659}}}, "12607363": {"Id": "12607363", "PostTypeId": "2", "Body": "<p>In the iterators of all of the standard library containers, that is undefined behavior.  But if you are making your own iterator class, it doesn't have to be.</p>\n", "LastActivityDate": "2012-09-26T17:40:54.583", "CommentCount": "2", "CreationDate": "2012-09-26T17:40:54.583", "ParentId": "12607316", "Score": "8", "OwnerUserId": "440119"}, "12609771": {"Id": "12609771", "PostTypeId": "2", "Body": "<p>The iterator requirements are rather clear: In 24.2.6 [bidirectional.iterators], Table 110:</p>\n<blockquote>\n<p id=\"so_12607316_12609771_0\"><code>--r</code> (Expression) <code>X&amp;</code> (Return type) pre: there exists <code>s</code> such that <code>r == ++s</code>.</p>\n</blockquote>\n<p>Since there is no such <code>s</code> for <code>c.begin()</code>, it can't be decremented without violating the precondition.</p>\n", "LastActivityDate": "2012-09-26T20:24:01.963", "CommentCount": "0", "CreationDate": "2012-09-26T20:24:01.963", "ParentId": "12607316", "Score": "3", "OwnerUserId": "1120273"}, "12607316": {"ViewCount": "99", "Body": "<p>I am implementing decrement operator for my custom bidirectional iterator.  Is decrementing iterator pointing at 1st element of Range is defined behavior? Does it have some special value after decrementing,  like  Range.end()? </p>\n", "AcceptedAnswerId": "12609771", "Title": "--begin(container) - is defined behavier?", "CreationDate": "2012-09-26T17:37:56.073", "Id": "12607316", "CommentCount": "2", "LastEditDate": "2012-09-26T18:09:45.743", "PostTypeId": "1", "LastEditorUserId": "1173542", "LastActivityDate": "2012-09-26T20:24:01.963", "Score": "4", "OwnerUserId": "1173542", "Tags": "<c++><stl><iterator>", "AnswerCount": "2"}});