post_cb({"40437223": {"Id": "40437223", "PostTypeId": "2", "Body": "<p>The remedy is simple: you need to change <code>'yes'</code> and <code>'no'</code> to <code>\"yes\"</code> and <code>\"no\"</code>, as the latter two are string <em>literals</em> with an implicit nul-terminator.</p>\n<p>But let's consider why the compiler issues the error that it does.</p>\n<p>The single quotations are used to denote a <em>character literal</em>. Surprisingly perhaps, an implementation is allowed to permit character literals containing <em>more</em> than one <code>char</code>:</p>\n<p>C11++ standard, \u00a72.14.3/1 - Character literals</p>\n<blockquote>\n<p id=\"so_40436990_40437223_0\">An ordinary character literal that contains more than one c-char is a\n  multicharacter literal . A multicharacter literal has type int and\n  implementation-de\ufb01ned value.</p>\n</blockquote>\n<p>So <code>'yes'</code> and <code>'no'</code> have type <code>int</code>. Since the <code>std::string</code> class does not allow assignment to an <code>int</code> type it issues the error that you see.</p>\n", "LastActivityDate": "2016-11-05T10:36:52.820", "CommentCount": "2", "CreationDate": "2016-11-05T10:36:52.820", "ParentId": "40436990", "Score": "2", "OwnerUserId": "2380830"}, "40437028": {"Id": "40437028", "PostTypeId": "2", "Body": "<p>Your problem is in the line:  </p>\n<pre><code>if (turnChoice == 'yes' || turnChoice == 'no')\n</code></pre>\n<p>C++ and C denote single characters with the single quotation marks, not strings of characters. The compiler is thus attempting to convert your single quotation marks into an integer value. You must use double quotations for string literals. So change the above line to:</p>\n<pre><code>if (turnChoice == \"yes\" || turnChoice == \"no\")\n</code></pre>\n", "LastActivityDate": "2016-11-05T10:15:29.397", "CommentCount": "0", "CreationDate": "2016-11-05T10:15:29.397", "ParentId": "40436990", "Score": "7", "OwnerUserId": "4791654"}, "bq_ids": {"n4140": {"so_40436990_40437223_0": {"length": 14, "quality": 0.875, "section_id": 5343}}, "n3337": {"so_40436990_40437223_0": {"length": 14, "quality": 0.875, "section_id": 5140}}, "n4659": {"so_40436990_40437223_0": {"length": 14, "quality": 0.875, "section_id": 6765}}}, "40436990": {"ViewCount": "131", "Body": "<p>I am working on an assignment, so far I am asking the user whether they want to go first or not. I am wanting to check their input to make sure it matches the two values that I want.</p>\n<p>I am getting errors about conversion while using Visual Studio such as:</p>\n<p>'==': no conversion from 'int' to 'std::string'</p>\n<p>no operator \"==\" matches these operands</p>\n<p>Any support is greatly appreciated.</p>\n", "AcceptedAnswerId": "40437028", "Title": "C++ '==': no conversion from 'int' to 'std::string'", "CreationDate": "2016-11-05T10:11:00.733", "Id": "40436990", "CommentCount": "5", "LastEditDate": "2016-11-16T00:39:06.093", "PostTypeId": "1", "LastEditorUserId": "7118564", "LastActivityDate": "2016-11-16T00:39:06.093", "Score": "2", "OwnerUserId": "7118564", "Tags": "<c++>", "AnswerCount": "3"}, "40437014": {"Id": "40437014", "PostTypeId": "2", "Body": "<p>The issue is here:    <code>if (turnChoice == 'yes' || turnChoice == 'no')</code>\nYou should use double quotes around strings, like this: <code>if (turnChoice == \"yes\" || turnChoice == \"no\")</code>.</p>\n", "LastActivityDate": "2016-11-05T10:14:16.480", "CommentCount": "2", "CreationDate": "2016-11-05T10:14:16.480", "ParentId": "40436990", "Score": "2", "OwnerUserId": "4763963"}});