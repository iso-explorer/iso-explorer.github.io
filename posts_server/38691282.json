post_cb({"bq_ids": {"n4140": {"so_38691282_38691329_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 5914}}, "n3337": {"so_38691282_38691329_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 5686}}, "n4659": {"so_38691282_38691329_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 7406}}}, "38691329": {"Id": "38691329", "PostTypeId": "2", "Body": "<p>It is illegal for a union to contain a reference member. This is presumably because references are not objects and it's unspecified whether or not they occupy storage---so it makes little sense for a reference to share its storage with other variables.</p>\n<blockquote>\n<p id=\"so_38691282_38691329_0\">A union can have member functions (including constructors and destructors), but not virtual (10.3) functions.\n  A union shall not have base classes. A union shall not be used as a base class. If a union contains a non-\n  static data member of reference type the program is ill-formed.</p>\n</blockquote>\n<p>([class.union]/2)</p>\n", "LastActivityDate": "2016-08-01T05:03:37.560", "CommentCount": "2", "CreationDate": "2016-08-01T05:03:37.560", "ParentId": "38691282", "Score": "7", "OwnerUserId": "481267"}, "38691350": {"Id": "38691350", "PostTypeId": "2", "Body": "<p>In addition to @Brian:\nYou can make it compile by using e.g. <code>std::reference_wrapper</code> instead of a plain reference:</p>\n<pre><code>#include &lt;functional&gt;\n\nstruct MyStruct\n{\n    //Stuff\n    union { std::reference_wrapper&lt;double&gt; x; double* x_ptr; };\n    MyStruct(double&amp; value) : x(value) {}\n    //More stuff\n};\n\nint main()\n{\n    double value = 123;\n    MyStruct myStruct(value);\n}\n</code></pre>\n<p><kbd><a href=\"http://coliru.stacked-crooked.com/a/854677760453e0de\">live example</a></kbd></p>\n", "LastActivityDate": "2016-08-01T05:05:37.280", "CommentCount": "0", "CreationDate": "2016-08-01T05:05:37.280", "ParentId": "38691282", "Score": "7", "OwnerUserId": "678093"}, "38691282": {"ViewCount": "669", "Body": "<p>At work I've been using linux and the GCC compiler for C++11 and C++14. In some of the code at work, I've used a union to store both a reference and a pointer, as so: (Simplified to just the important parts)</p>\n<pre><code>struct MyStruct\n{\n    //Stuff\n    union { double&amp; x; double* x_ptr; };\n    MyStruct(double&amp; value) : x(value) {}\n    //More stuff\n};\n</code></pre>\n<p>I believe this code is clear, readable, unambiguous, and provides a convenient way to store references which can be shifted to something else. It provides easily understandable syntactic sugar without costing performance while improving readability. When I attempted to use code like this in visual studio 15, however, the code failed to compile due to \"an illegal union member of type double&amp;\".</p>\n<ol>\n<li>Is this code illegal under the standard, or just under Visual Studio 2015?</li>\n<li>Can I MAKE it compile in Visual Studio 2015, or submit a bug report/change request/something?</li>\n<li>Is use of a union in that way bad practice?</li>\n</ol>\n<p>Note: At my work, pretty much all code is written for Linux and compiled with GCC, and for my specific project, C++11 is guaranteed and GCC is the only compiler that's going to be used. </p>\n<p><strong>Edit:</strong> Please don't tell me that putting a reference inside a union \"has no meaning\". When a reference is stored inside a struct, it takes up the same amount of space as a pointer. In addition, the following compiles with clang:</p>\n<pre><code>struct MyStruct\n{\n    //This will compile\n    union \n    { \n        struct { double&amp; x; }; \n        double* x_ptr; \n    };\n    //This won't compile; WHY?\n    /*union \n    { \n        double&amp; x;\n        double* x_ptr; \n    };*/\n    MyStruct(double&amp; val) : x(val){}\n    void Repoint(double&amp; new_value) \n    { \n        x_ptr = &amp;new_value; \n    }\n};\n</code></pre>\n<p>Why does it compile when the reference is wrapped in an anonymous struct, but not when it's just in the union?</p>\n<p><kbd><a href=\"http://coliru.stacked-crooked.com/a/918a7b3d1652e112\" rel=\"nofollow\">live example</a></kbd></p>\n", "AcceptedAnswerId": "38691350", "Title": "Use of Union with reference", "CreationDate": "2016-08-01T04:58:11.593", "Id": "38691282", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2016-08-01T14:56:47.447", "LastEditorUserId": "4967403", "LastActivityDate": "2016-08-01T14:56:47.447", "Score": "4", "OwnerUserId": "4967403", "Tags": "<c++><c++11><syntax><visual-studio-2015><unions>", "AnswerCount": "2"}});