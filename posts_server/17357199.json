post_cb({"17357238": {"ParentId": "17357199", "CommentCount": "0", "Body": "<p>You can't in Standard C; labels are local to a single function.</p>\n<p>The nearest standard equivalent is the <a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/setjmp.html\"><code>setjmp()</code></a> and\n<a href=\"http://pubs.opengroup.org/onlinepubs/9699919799/functions/longjmp.html\"><code>longjmp()</code></a> pair of functions.</p>\n<p>GCC has <a href=\"http://gcc.gnu.org/onlinedocs/gcc-4.8.1/gcc/Labels-as-Values.html#Labels-as-Values\">extensions</a> to support labels more generally.</p>\n", "OwnerUserId": "15168", "PostTypeId": "2", "Id": "17357238", "Score": "12", "CreationDate": "2013-06-28T04:34:58.783", "LastActivityDate": "2013-06-28T04:34:58.783"}, "44843514": {"ParentId": "17357199", "CommentCount": "0", "Body": "<p>For gcc:</p>\n<pre><code>#include &lt;iostream&gt;\n\nvoid func(void* target){\n    std::cout &lt;&lt; \"func\" &lt;&lt;std::endl;\n    goto *target;\n}\n\n\nint main() {\n    void* target;\n    auto flag = true;\nl:\n    std::cout &lt;&lt; \"label\" &lt;&lt;std::endl;\n    target = &amp;&amp;l;\n    if (flag) {\n        flag = false;\n        func(target);\n  }\n}\n</code></pre>\n<p>Note that this can be an undefined behavior</p>\n", "OwnerUserId": "5998661", "PostTypeId": "2", "Id": "44843514", "Score": "2", "CreationDate": "2017-06-30T09:47:37.263", "LastActivityDate": "2017-06-30T09:47:37.263"}, "17357199": {"CommentCount": "8", "ViewCount": "11033", "CreationDate": "2013-06-28T04:30:36.487", "LastActivityDate": "2017-06-30T09:47:37.263", "Title": "Using Goto function across different functions", "PostTypeId": "1", "Id": "17357199", "Score": "10", "Body": "<p>How can I use goto function across different functions .For ex , </p>\n<pre><code>    main()\n    {\n      ....\n      REACH:\n      ......\n    }\n\n    void function()\n    {\n    goto REACH ;\n    }\n</code></pre>\n<p>How to implement such usage ?</p>\n", "Tags": "<c++><c><goto>", "OwnerUserId": "2423547", "AnswerCount": "3"}, "17357266": {"ParentId": "17357199", "CommentCount": "0", "Body": "<p>You can't in Standard C++. From $6.6.4/1 of the C++ Language Standard</p>\n<blockquote>\n<p id=\"so_17357199_17357266_0\">The goto statement unconditionally transfers control to the statement labeled by the identifier. The identifier shall be a label (6.1) located in the current function.</p>\n</blockquote>\n<p>...or in Standard C. From $6.8.6.1/1 of the C Language Standard</p>\n<blockquote>\n<p id=\"so_17357199_17357266_1\">The identifier in a goto statement shall name a label located somewhere in the enclosing\n  function. A goto statement shall not jump from outside the scope of an identifier having\n  a variably modified type to inside the scope of that identifier.</p>\n</blockquote>\n", "OwnerUserId": "845568", "PostTypeId": "2", "Id": "17357266", "Score": "11", "CreationDate": "2013-06-28T04:37:20.033", "LastActivityDate": "2013-06-28T04:37:20.033"}, "bq_ids": {"n4140": {"so_17357199_17357266_0": {"section_id": 3915, "quality": 0.8666666666666667, "length": 13}}, "n3337": {"so_17357199_17357266_0": {"section_id": 3775, "quality": 0.8666666666666667, "length": 13}}, "n4659": {"so_17357199_17357266_0": {"section_id": 4801, "quality": 0.8666666666666667, "length": 13}}}});