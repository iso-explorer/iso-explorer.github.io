post_cb({"bq_ids": {"n4140": {"so_26265618_26265976_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 72}}, "n3337": {"so_26265618_26265976_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 67}}}, "26265618": {"ViewCount": "240", "Body": "<p>I am using <a href=\"http://en.wikipedia.org/wiki/Curiously_recurring_template_pattern\" rel=\"nofollow\">CRTP</a> to implement something but am stuck on an error in XCode 4.5.2.  The following code is a simplified version that still replicates the error.  It occurs on the line where the method <code>Api::Enable</code> is defined and has something to do with the fact that there are no parameters when <code>Api::Enable</code> calls <code>this-&gt;T::Enable</code></p>\n<pre><code>enum Enum\n{\n    FOO,\n    BAR,\n    BAZ,\n};\n\ntemplate &lt;typename T&gt;\nclass Api\n{\npublic:\n    template &lt;Enum E, bool On&gt; void Enable() {static_cast&lt;T *&gt;(this)-&gt;Enable&lt;E, On&gt;();}\n};\n\nclass ApiImpl : public Api&lt;ApiImpl&gt;\n{\npublic:\n    template &lt;Enum E, bool On&gt; void Enable() {}\n};\n\nint main(int argc, const char * argv[])\n{\n    ApiImpl clsApi;\n    clsApi.Enable&lt;FOO, true&gt;();\n    return 0;\n}\n</code></pre>\n<p>Here is a screenshot of the error in Xcode: <a href=\"http://i.imgur.com/IxEOgQ6.png\" rel=\"nofollow\">http://i.imgur.com/IxEOgQ6.png</a>.  I get the same error whether I use \"Apple LLVM compiler 4.1\" or \"LLVM GCC 4.2\".  MSVC Express 2010 compiles without error.</p>\n<p>Note that adding a function parameter causes the error to disappear.  The following compiles fine:</p>\n<pre><code>enum Enum\n{\n    FOO,\n    BAR,\n    BAZ,\n};\n\ntemplate &lt;typename T&gt;\nclass Api\n{\npublic:\n    template &lt;Enum E , bool On&gt; void Enable(unsigned int X) {static_cast&lt;T *&gt;(this)-&gt;Enable&lt;E, On&gt;(X);}\n};\n\nclass ApiImpl : public Api&lt;ApiImpl&gt;\n{\npublic:\n    template &lt;Enum E, bool On&gt; void Enable(unsigned int) {}\n};\n\nint main(int argc, const char * argv[])\n{\n    ApiImpl clsApi;\n    clsApi.Enable&lt;FOO, true&gt;(0);\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "26265976", "Title": "CRTP error with XCode 4.5.2 - Parse Issue, expected expression", "CreationDate": "2014-10-08T20:14:15.023", "Id": "26265618", "CommentCount": "0", "LastEditDate": "2014-10-08T20:54:47.717", "PostTypeId": "1", "LastEditorUserId": "3959454", "LastActivityDate": "2014-10-08T20:54:47.717", "Score": "1", "OwnerUserId": "584675", "Tags": "<c++><xcode><templates><clang><xcode4.5>", "AnswerCount": "1"}, "26265976": {"PostTypeId": "2", "Body": "<p>You should use <code>template</code> keyword to resolve dependent template names:</p>\n<pre><code>template &lt;Enum E, bool On&gt; void Enable() {\n    static_cast&lt;T*&gt;(this)-&gt;template Enable&lt;E, On&gt;();\n}\n</code></pre>\n<p>C++11, <code>[temp.names]/4</code>:</p>\n<blockquote>\n<p id=\"so_26265618_26265976_0\">When the name of a member template specialization appears after . or -&gt; in a postfix-expression or after a\n  nested-name-specifier in a qualified-id, and the object expression of the postfix-expression is type-dependent\n  or the nested-name-specifier in the qualified-id refers to a dependent type, but the name is not a member of\n  the current instantiation (14.6.2.1), the member template name must be prefixed by the keyword template.\n  Otherwise the name is assumed to name a non-template.</p>\n</blockquote>\n<p>If <code>Enable()</code> is for example <code>template &lt;typename T&gt; void Enable(){}</code>, then clang shows an error: <code>error: use 'template' keyword to treat 'Enable' as a dependent template name</code>. </p>\n<p>I don't know why it produces that irrelevant message in your case (when template arguments are not types). I think this can be posted as bug report. (I tested on clang 3.6 - the same).</p>\n<p>Also, gcc 4.8 and 4.9 don't produce any errors on this code which I beleive is also incorrect.</p>\n", "LastActivityDate": "2014-10-08T20:54:10.493", "LastEditorUserId": "3959454", "Id": "26265976", "CommentCount": "0", "CreationDate": "2014-10-08T20:36:14.227", "ParentId": "26265618", "Score": "1", "OwnerUserId": "3959454", "LastEditDate": "2014-10-08T20:54:10.493"}});