post_cb({"28348900": {"ViewCount": "264", "Body": "<p>I want to define operators for a class I created, I want the operators to be inline I also want the definition be in the <code>.cpp</code> file while the declaration is in the <code>.h</code> file I tried to do this:</p>\n<p>Vector3D.h</p>\n<pre><code>class Vector3D\n{\n    ...\n};\n\ninline Vector3D operator+(Vector3D lv, const Vector3D&amp; rv);\ninline Vector3D operator-(Vector3D lv, const Vector3D&amp; rv);\n</code></pre>\n<p>Vector3D.cpp</p>\n<pre><code>...\ninline Vector3D operator+(Vector3D lv, const Vector3D&amp; rv)\n{\n    lv += rv;\n    return lv;\n}\n\ninline Vector3D operator-(Vector3D lv, const Vector3D&amp; rv)\n{\n    lv -= rv;\n    return lv;\n}\n</code></pre>\n<p>In the <code>_tmain</code> function the functions are called:</p>\n<pre><code>std::cout &lt;&lt; v1 &lt;&lt; \"+\" &lt;&lt; v2 &lt;&lt; \"=\" &lt;&lt; v1+v2 &lt;&lt; std::endl;\nstd::cout &lt;&lt; v1 &lt;&lt; \"-\" &lt;&lt; v2 &lt;&lt; \"=\" &lt;&lt; v1-v2 &lt;&lt; std::endl;\n</code></pre>\n<p>I get the errors:</p>\n<pre><code>1&gt;RotateShapes.obj : error LNK2019: unresolved external symbol \"class Vector3D __cdecl operator+(class Vector3D,class Vector3D const &amp;)\" (??H@YA?AVVector3D@@V0@ABV0@@Z) referenced in function _wmain\n1&gt;RotateShapes.obj : error LNK2019: unresolved external symbol \"class Vector3D __cdecl operator-(class Vector3D,class Vector3D const &amp;)\" (??G@YA?AVVector3D@@V0@ABV0@@Z) referenced in function _wmain\n</code></pre>\n<p>If I remove the <code>inline</code> then everything works fine. If I don't call the functions, then compilation is successful. Is there a way to define an <code>inline</code> function in a different place of where it was declared?</p>\n", "AcceptedAnswerId": "28349325", "Title": "Defining an inline operator in a different file than the declaration", "CreationDate": "2015-02-05T16:18:40.553", "Id": "28348900", "CommentCount": "6", "LastEditDate": "2015-02-19T21:59:38.190", "PostTypeId": "1", "LastEditorUserId": "3001761", "LastActivityDate": "2015-02-19T21:59:38.190", "Score": "0", "OwnerUserId": "480692", "Tags": "<c++><operator-keyword><inline-functions>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_28348900_28349325_0": {"length": 7, "quality": 1.0, "section_id": 5404}}, "n3337": {"so_28348900_28349325_0": {"length": 7, "quality": 1.0, "section_id": 5199}}, "n4659": {"so_28348900_28349325_0": {"length": 7, "quality": 1.0, "section_id": 6853}}}, "28348989": {"Id": "28348989", "PostTypeId": "2", "Body": "<p>Nope, there is no way - inline functions have to be defined in the header file.\nSee here: <a href=\"https://stackoverflow.com/questions/4769479/c-inlining-class-methods-causes-undefined-reference\">C++ inlining class methods causes undefined reference</a></p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2015-02-05T16:23:02.997", "Score": "0", "CreationDate": "2015-02-05T16:23:02.997", "ParentId": "28348900", "CommentCount": "4", "OwnerUserId": "669602", "LastEditDate": "2017-05-23T10:24:09.480"}, "28349325": {"Id": "28349325", "PostTypeId": "2", "Body": "<p>From the standard \u00a73.2/3:</p>\n<blockquote>\n<p id=\"so_28348900_28349325_0\">An inline function shall be defined in every translation unit in which it is odr-used.</p>\n</blockquote>\n<p>If you don't define the functions in the header where they're declared inline, then how else do you get the definition into all compilation units that use them?</p>\n<p>Sure, you can define the functions in a separate file and include it in the header. They'll technically be in a separate file, but after preprocessing, they'll be part of the header (and then, part of all compilation units which include the header). If that's not what you want, then you can't declare the functions inline.</p>\n", "LastActivityDate": "2015-02-05T16:39:23.050", "CommentCount": "0", "CreationDate": "2015-02-05T16:39:23.050", "ParentId": "28348900", "Score": "2", "OwnerUserId": "2079303"}});