post_cb({"bq_ids": {"n4140": {"so_33012680_33012777_2": {"length": 18, "quality": 0.8181818181818182, "section_id": 7164}, "so_33012680_33012777_1": {"length": 26, "quality": 1.0, "section_id": 5356}}, "n3337": {"so_33012680_33012777_2": {"length": 18, "quality": 0.8181818181818182, "section_id": 6908}, "so_33012680_33012777_1": {"length": 26, "quality": 1.0, "section_id": 5153}}, "n4659": {"so_33012680_33012777_2": {"length": 18, "quality": 0.8181818181818182, "section_id": 8672}, "so_33012680_33012777_4": {"length": 37, "quality": 0.9024390243902439, "section_id": 6789}, "so_33012680_33012777_1": {"length": 26, "quality": 1.0, "section_id": 6781}}}, "33012821": {"Id": "33012821", "PostTypeId": "2", "Body": "<p>It will keep dangling in the memory as long as it is not cleared by the system. \"Dangling\" because there is no pointer which is pointing to that string.</p>\n", "LastActivityDate": "2015-10-08T10:13:05.990", "CommentCount": "0", "CreationDate": "2015-10-08T10:13:05.990", "ParentId": "33012680", "Score": "0", "OwnerUserId": "5077395"}, "33012820": {"Id": "33012820", "PostTypeId": "2", "Body": "<p>There's no need that this specific memory segment be used again during the program's execution. These parts remain in memory until the program's life comes to an end. Even if, at some point, you re-write the command:</p>\n<pre><code>p1 = \"String\";\n</code></pre>\n<p>it doesn't mean that <code>p1</code> will point to that specific memory segment. It may, but it may not.</p>\n", "LastActivityDate": "2015-10-08T10:13:05.977", "CommentCount": "0", "CreationDate": "2015-10-08T10:13:05.977", "ParentId": "33012680", "Score": "0", "OwnerUserId": "3371101"}, "33012777": {"Id": "33012777", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_33012680_33012777_0\">What happened to the shaded memory segment? As i know It will remain until code block finished its execution.</p>\n</blockquote>\n<p>As per \u00a72.13.5/8 a string literal has static storage duration:</p>\n<blockquote>\n<p id=\"so_33012680_33012777_1\">Ordinary string literals and UTF-8 string literals are also referred to as narrow string literals. A narrow string literal has type \u201carray of n const char\u201d, where n is the size of the string as defined below, and has static storage duration (3.7).</p>\n</blockquote>\n<p>which means that, as per \u00a73.7.1/1, they last for the duration of the program:</p>\n<blockquote>\n<p id=\"so_33012680_33012777_2\">All variables which do not have dynamic storage duration, do not have thread storage duration, and are not local have static storage duration. The storage for these entities shall last for the duration of the program (3.6.2, 3.6.3).</p>\n</blockquote>\n<p>As a side note, you should really assign string literals to <code>char const*</code> or <code>char const[]</code>, not to <code>char*</code>. The reason why it mostly work in compilers is for backward compatibility reasons and in C++11 it has been deprecated.</p>\n<hr>\n<blockquote>\n<p id=\"so_33012680_33012777_3\">Can those garbaged memory segments be reused again for program execution?</p>\n</blockquote>\n<p>According to \u00a72.13.5/16 it's unspecified whether they are reused or not:</p>\n<blockquote>\n<p id=\"so_33012680_33012777_4\">Evaluating a string-literal results in a string literal object with static storage duration, initialized from the given characters as specified above. Whether all string literals are distinct (that is, are stored in nonoverlapping objects) and whether successive evaluations of a string-literal yield the same or a different object is unspecified. [ Note: The effect of attempting to modify a string literal is undefined. \u2014 end note ]</p>\n</blockquote>\n</hr>", "LastActivityDate": "2015-10-08T10:11:48.083", "CommentCount": "0", "CreationDate": "2015-10-08T10:11:48.083", "ParentId": "33012680", "Score": "6", "OwnerUserId": "493122"}, "33012680": {"ViewCount": "132", "Body": "<p>Please  look at the below image. After changing the value of p1, now it points to the B2 memory location. What happened to the shaded memory segment? As i know It will remain until code block finished its execution. Can those garbaged memory segments be reused again for program execution? </p>\n<pre><code>char *p1 = \"String\";\nchar *p2 = \"Another\";\np1 = p2;\n</code></pre>\n<p>Question title may be misleading. I was unable to find a qood title for this question. \n<a href=\"https://i.stack.imgur.com/6wEjo.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/6wEjo.png\"/></a></p>\n", "AcceptedAnswerId": "33012777", "Title": "Memory usage with pointers", "CreationDate": "2015-10-08T10:07:30.417", "Id": "33012680", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2015-10-08T10:13:05.990", "Score": "8", "OwnerUserId": "2915792", "Tags": "<c++><pointers><memory>", "AnswerCount": "3"}});