post_cb({"bq_ids": {"n4140": {"so_15058414_15058433_1": {"length": 24, "quality": 0.96, "section_id": 5559}}, "n3337": {"so_15058414_15058433_1": {"length": 24, "quality": 0.96, "section_id": 5341}}, "n4659": {"so_15058414_15058433_1": {"length": 24, "quality": 0.96, "section_id": 7006}}}, "15058433": {"Id": "15058433", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_15058414_15058433_0\">This works but this is undefined behavior because I'm deferencing past the last letter.</p>\n</blockquote>\n<p>No, you are not dereferencing past the last letter. You are taking an address of \"one character past the last letter\", but that is explicitly allowed by the standard.</p>\n<p>This language is very common in the C++ standard:</p>\n<blockquote>\n<p id=\"so_15058414_15058433_1\">24.2.1.5: Just as a regular pointer to an array guarantees that there is a pointer value pointing past the last element of the array, so for any iterator type there is an iterator value that points past the last element of a corresponding sequence.</p>\n</blockquote>\n<p>Essentially, any pointer <code>P</code> pointing one past the end of any array is considered valid. Same goes for iterators.</p>\n<p>Trying to read or write the <code>sz[sz.size()]</code> would indeed be wrong, though, but your code is not doing it: the standard library always interprets the ending pointer as \"one past the end\", so you are absolutely safe with</p>\n<pre><code>szout.insert(szout.end(), &amp;sz[l], &amp;sz[sz.size()]);\n</code></pre>\n", "LastEditorUserId": "335858", "LastActivityDate": "2013-02-25T00:39:35.343", "Score": "4", "CreationDate": "2013-02-25T00:30:53.493", "ParentId": "15058414", "CommentCount": "3", "OwnerUserId": "335858", "LastEditDate": "2013-02-25T00:39:35.343"}, "15058414": {"ViewCount": "69", "Body": "<p>This is easy to do but seemly hard to do correctly. Lets pretend l is size()/2. I want to insert the last half of sz into szout.</p>\n<p>My first attempt was</p>\n<pre><code>szout.insert(szout.end(), &amp;sz[l], sz.end());\n</code></pre>\n<p>But I got a big compile error. Next thing I tried was</p>\n<pre><code>szout.insert(szout.end(), &amp;sz[l], &amp;sz[sz.size()-1]);\n</code></pre>\n<p>Nope, missing the last letter. So obviously I shouldn't -1</p>\n<pre><code>szout.insert(szout.end(), &amp;sz[l], &amp;sz[sz.size()]);\n</code></pre>\n<p>This works but this is undefined behavior because I'm deferencing past the last letter. </p>\n<pre><code>szout.insert(szout.end(), &amp;sz[l], &amp;sz[sz.size()-1]+1);\n</code></pre>\n<p>This works but feels wrong. A -1 and +1... thats just weird.</p>\n<p>Whats the correct way to copy to the last letter?</p>\n", "AcceptedAnswerId": "15058433", "Title": "string insert and dereference _problem_", "CreationDate": "2013-02-25T00:28:30.350", "Id": "15058414", "CommentCount": "2", "PostTypeId": "1", "OwnerDisplayName": "user34537", "LastActivityDate": "2013-02-25T00:39:35.343", "Score": "2", "Tags": "<c++><string><stl>", "AnswerCount": "1"}});