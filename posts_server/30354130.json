post_cb({"bq_ids": {"n4140": {"so_30354130_30356853_0": {"length": 17, "quality": 1.0, "section_id": 5884}}, "n3337": {"so_30354130_30356853_0": {"length": 17, "quality": 1.0, "section_id": 5655}}, "n4659": {"so_30354130_30356853_0": {"length": 17, "quality": 1.0, "section_id": 7367}}}, "30367168": {"Id": "30367168", "PostTypeId": "2", "Body": "<p>You should probably move the internal implementation classes into their own <code>namespace</code>s. </p>\n<p>Starting with your original code:</p>\n<pre><code>class Foo {\npublic:\n    Foo();\n\n    class {\n    private:\n        int x;\n        int y;\n    public:\n        int GetX() { return x; }\n        int GetY() { return y; }\n    } Sub1;\n\n    class {\n    private:\n        int x;\n    public:\n        int GetX() { return x; }\n    } Sub2;\n};\n</code></pre>\n<p>You can change it to:</p>\n<pre><code>namespace detail{\n    class A\n    {\n    public:\n        getX();\n    };\n\n    class B\n    {\n    public:\n        getX();\n    };\n}\n\nclass Foo {\npublic:\n    Foo();\n\n    int getAX();\n    int getAY();\n\nprivate:\n    A a;\n    B b;\n};\n</code></pre>\n<p>And now you're free to move the implementations to the cpp:</p>\n<pre><code>namespace detail{\nint A::getX(){\n    ...\n}\n\nint B::getX(){\n    ...\n}\n}\n\nFoo::Foo() {\n\n}\n\nint Foo::getAX() {\n    ...\n    return a.getX();\n}\n</code></pre>\n", "LastActivityDate": "2015-05-21T07:25:30.477", "Score": "0", "CreationDate": "2015-05-21T07:25:30.477", "ParentId": "30354130", "CommentCount": "0", "OwnerUserId": "3510736"}, "30354130": {"ViewCount": "189", "Body": "<p>I currently have two unnamed classes defined in my Foo.h:</p>\n<pre><code>class Foo {\npublic:\n    Foo();\n\n    class {\n    private:\n        int x;\n        int y;\n    public:\n        int GetX() { return x; }\n        int GetY() { return y; }\n    } Sub1;\n\n    class {\n    private:\n        int x;\n    public:\n        int GetX() { return x; }\n    } Sub2;\n}\n</code></pre>\n<p>This code compiles just fine, and it used like this:</p>\n<pre><code> Foo temp;\n int Ax, Ay, Bx;\n Ax = temp.Sub1.GetX();\n Ay = temp.Sub1.GetY();\n Bx = temp.Sub2.GetX();\n</code></pre>\n<p>However, now I want to move the member function definitions to the source file.The only way I know to split this class into a header file and source file, is to name the classes:</p>\n<p>Foo.h:</p>\n<pre><code>class Foo {\n\nprivate:    \n    class A {\n    private:\n        int x;\n        int y;\n    public:\n        int GetX();\n        int GetY();\n    };\n\n    class B {\n    private:\n        int x;\n    public:\n        int GetX();\n    };\n\npublic:\n    Foo();\n    A Sub1;\n    B Sub2;\n\n}\n</code></pre>\n<p>Foo.cpp:</p>\n<pre><code>int Foo::A::GetX() { return x; }\nint Foo::A::GetY() { return y; }\nint Foo::B::GetX() { return x; }\n</code></pre>\n<p>This code is not what I want, however, since it is ugly and I didn't want a named class in the first place. </p>\n<p>Is it possible to split the class into a header file and source file? Or is this just bad code design?</p>\n", "AcceptedAnswerId": "30356853", "Title": "Defining unnamed class member functions?", "CreationDate": "2015-05-20T15:30:59.270", "Id": "30354130", "CommentCount": "6", "PostTypeId": "1", "LastActivityDate": "2015-05-21T07:25:30.477", "Score": "3", "OwnerUserId": "4920958", "Tags": "<c++><class><definition><member-functions>", "AnswerCount": "2"}, "30356853": {"Id": "30356853", "PostTypeId": "2", "Body": "<p>It is, unfortunately, impossible. \u00a79.3/5:</p>\n<blockquote>\n<p id=\"so_30354130_30356853_0\">If the definition of a member function is lexically outside its class\n   definition, <strong>the member function name shall be qualified by its\n   class name using the <code>::</code> operator</strong>.</p>\n</blockquote>\n<p>Since no class name exists, no out-of-class definitions for member functions are possible. The fact that GCC allows decltype-specifiers in this context is a bug.</p>\n", "LastActivityDate": "2015-05-20T17:46:53.550", "Score": "1", "CreationDate": "2015-05-20T17:46:53.550", "ParentId": "30354130", "CommentCount": "0", "OwnerUserId": "3647361"}});