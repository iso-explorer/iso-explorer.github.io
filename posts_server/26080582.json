post_cb({"bq_ids": {"n4140": {"so_26080582_26080603_0": {"length": 23, "quality": 1.0, "section_id": 6106}}, "n3337": {"so_26080582_26080603_0": {"length": 23, "quality": 1.0, "section_id": 5872}}, "n4659": {"so_26080582_26080603_0": {"length": 23, "quality": 1.0, "section_id": 7603}}}, "26080603": {"Id": "26080603", "PostTypeId": "2", "Body": "<p>No. You should never call <code>delete</code> on a pointer to the object that hasn't been created using <code>new</code>. It is undefined behavior.</p>\n<p>C++ Standard n3337 <strong>\u00a7</strong> 5.3.5/2 Delete</p>\n<blockquote>\n<p id=\"so_26080582_26080603_0\">(...)the value of the operand of delete may be a null pointer value, a\n  pointer to a non-array object created by a previous new-expression, or\n  a pointer to a subobject (1.8) representing a base class of such an\n  object (Clause 10). If not, the behavior is undefined.</p>\n</blockquote>\n", "LastEditorUserId": "1141471", "LastActivityDate": "2014-09-28T01:17:32.270", "Score": "7", "CreationDate": "2014-09-28T00:53:20.677", "ParentId": "26080582", "CommentCount": "4", "OwnerUserId": "1141471", "LastEditDate": "2014-09-28T01:17:32.270"}, "26080582": {"ViewCount": "69", "Body": "<p>Is it correct to do the following :</p>\n<pre><code>MyClass mc1(1, 1);\nMyClass* pmc1 = &amp;mc1;\ndelete pmc1;\n</code></pre>\n<p>I saw it in a code example. I thought we can call delete on pointers to object that is allocated on the heap but this pointer points to an object on the stack, isn't it ?\nCould someone explain it.</p>\n", "AcceptedAnswerId": "26080603", "Title": "calling destructor using delete", "CreationDate": "2014-09-28T00:50:39.340", "Id": "26080582", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2014-09-28T01:17:32.270", "Score": "2", "OwnerUserId": "4061788", "Tags": "<c++><destructor><delete-operator>", "AnswerCount": "1"}});