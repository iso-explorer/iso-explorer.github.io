post_cb({"13203499": {"ParentId": "13203439", "CommentCount": "1", "Body": "<p>The C99 language standard defines the two macros <code>EXIT_SUCCESS</code> and <code>EXIT_FAILURE</code> to expand to \"integer constant expressions that can be used as the argument to the\n<code>exit</code> function to return unsuccessful or successful termination status, respectively, to the\nhost environment\" (\u00a77.20/3).</p>\n<p>In the description of the <code>exit</code> function (\u00a77.20.4.3/5), it also says:</p>\n<blockquote>\n<p id=\"so_13203439_13203499_0\">Finally, control is returned to the host environment. If the value of <code>status</code> is zero or\n  <code>EXIT_SUCCESS</code>, an implementation-defined form of the status <em>successful termination</em> is\n  returned. If the value of <code>status</code> is <code>EXIT_FAILURE</code>, an implementation-defined form\n  of the status <em>unsuccessful termination</em> is returned. Otherwise the status returned is\n  implementation-defined.</p>\n</blockquote>\n<p>So, if you exit with 0 or <code>EXIT_SUCCESS</code>, that always means \"successful termination\" to the host environment.  <code>EXIT_FAILURE</code> is a value that will always mean \"unsuccessful termination\", but any non-zero value other than those is not guaranteed to be portable.</p>\n<p>Note that returning from <code>main</code> is equivalent to calling the <code>exit</code> function with a status of the return value (\u00a75.1.2.2.3).</p>\n", "OwnerUserId": "9530", "PostTypeId": "2", "Id": "13203499", "Score": "7", "CreationDate": "2012-11-02T21:48:06.977", "LastActivityDate": "2012-11-02T21:48:06.977"}, "13203460": {"ParentId": "13203439", "CommentCount": "3", "Body": "<p><code>EXIT_SUCCESS</code> and <code>EXIT_FAILURE</code> are Standard C macros defined in <code>stdlib.h</code>. C does not specify the value of these macros.</p>\n<p>POSIX requires <code>EXIT_SUCCESS</code> to be <code>0</code>. (But does not specify anything for <code>EXIT_FAILURE</code> value).</p>\n", "OwnerUserId": "1119701", "PostTypeId": "2", "Id": "13203460", "Score": "1", "CreationDate": "2012-11-02T21:44:17.107", "LastActivityDate": "2012-11-02T21:44:17.107"}, "13203439": {"CommentCount": "5", "ViewCount": "2454", "PostTypeId": "1", "ClosedDate": "2012-11-03T02:02:10.603", "LastEditorUserId": "-1", "CreationDate": "2012-11-02T21:42:09.757", "LastActivityDate": "2012-11-02T21:51:20.003", "Title": "EXIT_SUCCESS and EXIT_FAILURE. Is it compile once run anywhere or write once compile everywhere?", "LastEditDate": "2017-05-23T11:51:35.427", "Id": "13203439", "Score": "1", "Body": "<blockquote>\n<p id=\"so_13203439_13203439_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/8867871/c-c-return-exit-success-or-0-from-main\">(C/C++) return EXIT_SUCCESS or 0 from main?</a> </br></p>\n</blockquote>\n<p>For a long time I was using return 0;, from the time I started to use allegro. Than I came across C++ book and found about EXIT_SUCCESS, than I looked into stdlib.h or cstdlib where it's defined and there is only two lines:</p>\n<pre><code>#define EXIT_SUCCESS 0\n#define EXIT_FAILURE 1\n</code></pre>\n<p>can somebody explain this to me? I am using mingw version of the last devc++ 4.9.9.2.</p>\n", "Tags": "<c++><c><return><std><exit-code>", "OwnerUserId": "1761258", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_13203439_13203499_0": {"section_id": 6805, "quality": 0.75, "length": 21}}, "n3337": {"so_13203439_13203499_0": {"section_id": 6560, "quality": 0.75, "length": 21}}, "n4659": {"so_13203439_13203499_0": {"section_id": 8296, "quality": 0.75, "length": 21}}}});