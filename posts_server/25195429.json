post_cb({"bq_ids": {"n4140": {"so_25195429_25195429_1": {"length": 59, "quality": 1.0, "section_id": 268}, "so_25195429_25195622_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 233}, "so_25195429_25195429_0": {"length": 59, "quality": 1.0, "section_id": 268}}, "n3337": {"so_25195429_25195429_1": {"length": 59, "quality": 1.0, "section_id": 259}, "so_25195429_25195622_0": {"length": 36, "quality": 0.9473684210526315, "section_id": 226}, "so_25195429_25195429_0": {"length": 59, "quality": 1.0, "section_id": 259}}, "n4659": {"so_25195429_25195429_1": {"length": 59, "quality": 1.0, "section_id": 275}, "so_25195429_25195622_0": {"length": 36, "quality": 0.9473684210526315, "section_id": 243}, "so_25195429_25195429_0": {"length": 59, "quality": 1.0, "section_id": 275}}}, "25195429": {"ViewCount": "126", "Body": "<p>14.7.3/6 says the following:</p>\n<blockquote>\n<blockquote>\n<p id=\"so_25195429_25195429_1\">If a template, a member template or the member of a class template is explicitly specialized then that\n    specialization shall be declared before the first use of that specialization that would cause an implicit instantiation to take place, in every translation unit in which such a use occurs; no diagnostic is required. If the program does not provide a definition for an explicit specialization and either the specialization is used in a way that would cause an implicit instantiation to take place or the member is a virtual member function, the program is ill-formed, no diagnostic required. An implicit instantiation is never generated for an explicit specialization that is declared but not defined.</p>\n</blockquote>\n</blockquote>\n<p>It then gives the following example:</p>\n<pre><code>template&lt;class T&gt; struct A\n{\n    enum E : T;\n    enum class S : T;\n};\n\ntemplate&lt;&gt; enum A&lt;int&gt;::E : int { eint };       // OK\n\ntemplate&lt;&gt; enum class A&lt;int&gt;::S : int { sint }; // OK\n\ntemplate&lt;class T&gt; enum A&lt;T&gt;::E : T { eT };\n\ntemplate&lt;class T&gt; enum class A&lt;T&gt;::S : T { cT };\n\ntemplate&lt;&gt; enum A&lt;char&gt;::E : char { echar }; // ill-formed, A&lt;char&gt;::E was instantiated\n                                             // when A&lt;char&gt; was instantiated\n\ntemplate&lt;&gt; enum class A&lt;char&gt;::S : char { schar }; // OK\n</code></pre>\n<p>I'm not following how it is able to compile the last line but not the one before it. I expected both examples to fail because both <code>A&lt;char&gt;::E</code> and <code>A&lt;char&gt;::S</code> were being implicitly instantiated. I notice when I remove <code>class</code> from the enum-key of <code>S</code> in the primary template the last line fails with the same message as the other. Why does this happen?</p>\n", "AcceptedAnswerId": "25195622", "Title": "Implicit instantiation depending on scoped or unscoped enumeration", "CreationDate": "2014-08-08T02:57:04.087", "Id": "25195429", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2014-08-08T03:25:00.617", "Score": "4", "OwnerUserId": "701092", "Tags": "<c++><templates><c++11><stl>", "AnswerCount": "1"}, "25195622": {"Id": "25195622", "PostTypeId": "2", "Body": "<p>Implicit instantiation of a class template implicitly instantiates the definitions of unscoped member enumerations, but only the declarations of scoped member enumerations.</p>\n<p>\u00a714.7.1 [temp.inst]/p1 (emphasis added):</p>\n<blockquote>\n<p id=\"so_25195429_25195622_0\">The implicit instantiation of a class template specialization causes\n  the implicit instantiation of <strong>the declarations, but not of the\n  definitions</strong>, default arguments, or exception-specifications of the\n  class member functions, member classes, <strong>scoped member\n  enumerations</strong>, static data members and member templates; and it\n  causes the implicit instantiation of <strong>the definitions</strong> of <strong>unscoped\n  member enumerations</strong> and member anonymous unions.</p>\n</blockquote>\n", "LastActivityDate": "2014-08-08T03:25:00.617", "CommentCount": "1", "CreationDate": "2014-08-08T03:25:00.617", "ParentId": "25195429", "Score": "3", "OwnerUserId": "2756719"}});