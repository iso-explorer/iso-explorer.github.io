post_cb({"21866885": {"ParentId": "21866832", "CommentCount": "0", "CreationDate": "2014-02-18T22:30:58.783", "OwnerUserId": "2357112", "PostTypeId": "2", "Id": "21866885", "Score": "2", "Body": "<p>You can only subtract pointers to elements of the same array, or one past the end. From the C++11 standard, 5.7.6:</p>\n<blockquote>\n<p id=\"so_21866832_21866885_0\">Unless both pointers point to elements of the same array object, or one past the last element of the array object, the behavior is unde\ufb01ned.</p>\n</blockquote>\n", "LastActivityDate": "2014-02-18T22:30:58.783"}, "bq_ids": {"n4140": {"so_21866832_21867071_1": {"section_id": 6143, "quality": 0.7272727272727273, "length": 16}, "so_21866832_21867071_0": {"section_id": 6141, "quality": 0.85, "length": 17}, "so_21866832_21866885_0": {"section_id": 6143, "quality": 0.875, "length": 14}}, "n3337": {"so_21866832_21867071_1": {"section_id": 5907, "quality": 0.7272727272727273, "length": 16}, "so_21866832_21867071_0": {"section_id": 5905, "quality": 0.85, "length": 17}, "so_21866832_21866885_0": {"section_id": 5907, "quality": 0.875, "length": 14}}, "n4659": {"so_21866832_21867071_0": {"section_id": 7603, "quality": 0.55, "length": 11}}}, "21866884": {"ParentId": "21866832", "CommentCount": "0", "CreationDate": "2014-02-18T22:30:58.143", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "21866884", "Score": "3", "Body": "<p>Evaluating the expression <code>&amp;b - &amp;a</code> is undefined behaviour, since <code>b</code> and <code>a</code> are not subobjects of the same object.</p>\n", "LastActivityDate": "2014-02-18T22:30:58.143"}, "21866832": {"CommentCount": "6", "ViewCount": "62", "CreationDate": "2014-02-18T22:27:23.997", "LastActivityDate": "2014-02-18T22:42:25.510", "Title": "Different result in a mode with optimizations and without optimizations", "AcceptedAnswerId": "21867066", "PostTypeId": "1", "Id": "21866832", "Score": "-1", "Body": "<p>This code on some compilers give different results in the mode with optimizations and without optimizations. This means that the code is invalid. What is it incorrect?</p>\n<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stddef.h&gt;\n\nint a = 3;\nint b = 5;\n\nint\nmain (void)\n{\n  size_t delta;\n  int *ptr;\n\n  delta = &amp;b - &amp;a;\n  ptr = &amp;a + delta;\n\n  printf (\"%d\\n\", *ptr);\n  return 0;\n}\n</code></pre>\n", "Tags": "<c++><optimization><compiler-optimization>", "OwnerUserId": "3257983", "AnswerCount": "4"}, "21867066": {"ParentId": "21866832", "CommentCount": "0", "CreationDate": "2014-02-18T22:42:11.893", "OwnerUserId": "3257983", "PostTypeId": "2", "Id": "21867066", "Score": "0", "Body": "<p>The C standard operation difference pointers (and maybe all pointernaya arithmetic) is defined only for pointers, looking at the same object. The word \"object\" is meant here is that at the household level is called \"variable\" and not to C++ object. As a consequence, the total value of <code>delta</code> in terms of standard <code>undefined</code>.</p>\n<p>On two compilers with a powerful context analyzer and hardware features done some tricky test has worked correctly. The test was in a slightly different form, but for simplicity, so leave.</p>\n", "LastActivityDate": "2014-02-18T22:42:11.893"}, "21867071": {"ParentId": "21866832", "CommentCount": "0", "CreationDate": "2014-02-18T22:42:25.510", "OwnerUserId": "2877241", "PostTypeId": "2", "Id": "21867071", "Score": "0", "Body": "<p>As your code is more closer to C code then I will cite the C Standard. According to it</p>\n<blockquote>\n<p id=\"so_21866832_21867071_0\">7 For the purposes of these operators, a pointer to an object that is\n  not an element of an array behaves the same as a pointer to the first\n  element of an array of length one with the type of the object as its\n  element type.</p>\n</blockquote>\n<p>and </p>\n<blockquote>\n<p id=\"so_21866832_21867071_1\">9 When two pointers are subtracted, both shall point to elements of\n  the same array object, or one past the last element of the array\n  object; the result is the difference of the subscripts of the two\n  array elements.</p>\n</blockquote>\n<p>In your example the two pointers do not point to elements of the same array. So the behaviour is undefined.</p>\n", "LastActivityDate": "2014-02-18T22:42:25.510"}});