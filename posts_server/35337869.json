post_cb({"35337910": {"Id": "35337910", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_35337869_35337910_0\">So it means, that if the <code>arrSource[]</code> is <code>const</code>, it makes <code>i</code> <code>const</code> too?</p>\n</blockquote>\n<p>Yes, if the array is const, each element in the array is also const.</p>\n<p>The <code>auto&amp;</code> deduces the type based on the initialiser, in this case it is deduced to be <code>int const&amp;</code> and hence cannot be modified.</p>\n<p>The increment is probably not needed (not sure on your intent). The range based <code>for</code> loop takes care of the incrementing between iterations.</p>\n<p>If modification of the array is intended (via <code>i</code>), then you need to remove the <code>const</code>.</p>\n", "LastEditorUserId": "3747990", "LastActivityDate": "2016-02-11T11:21:29.323", "Score": "5", "CreationDate": "2016-02-11T11:19:00.240", "ParentId": "35337869", "CommentCount": "1", "OwnerUserId": "3747990", "LastEditDate": "2016-02-11T11:21:29.323"}, "bq_ids": {"n4140": {"so_35337869_35337962_0": {"length": 24, "quality": 0.8571428571428571, "section_id": 7229}}, "n3337": {"so_35337869_35337962_0": {"length": 16, "quality": 0.5714285714285714, "section_id": 6973}}, "n4659": {"so_35337869_35337962_0": {"length": 24, "quality": 0.8571428571428571, "section_id": 8740}}}, "35337962": {"Id": "35337962", "PostTypeId": "2", "Body": "<p>N4567 \u00a7 3.9.3 [basic.type.quali\ufb01er] p6</p>\n<blockquote>\n<p id=\"so_35337869_35337962_0\">Cv-quali\ufb01ers applied to an array type attach to the underlying element type, so the notation \u201c<em>cv</em> T\u201d, where\n  T is an array type, refers to an array whose elements are so-quali\ufb01ed. An array type whose elements are\n  cv-quali\ufb01ed is also considered to have the same cv-quali\ufb01cations as its elements.</p>\n</blockquote>\n", "LastActivityDate": "2016-02-11T11:21:37.250", "CommentCount": "0", "CreationDate": "2016-02-11T11:21:37.250", "ParentId": "35337869", "Score": "2", "OwnerUserId": "4672588"}, "35337869": {"ViewCount": "164", "Body": "<p>I'm getting into C++11 and really can't understand why this happens:   </p>\n<pre><code>const int arrSource[4] = { 5,7,6,4 };\nfor (auto&amp; i : arrSource) {\n    std::cout &lt;&lt; i &lt;&lt; \" \";\n    ++i; //error\n}\n</code></pre>\n<p>It says that <code>i</code> must be a modifiable lvalue and <code>i</code>: you cannot assign to a variable that is <code>const</code>.</p>\n<p>So it means, that if the <code>arrSource[]</code> is <code>const</code>, it makes <code>i</code> <code>const</code> too?</p>\n", "AcceptedAnswerId": "35337910", "Title": "Auto reference for const array", "CreationDate": "2016-02-11T11:17:32.597", "LastActivityDate": "2016-02-11T11:22:10.827", "CommentCount": "6", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2016-02-11T11:22:10.827", "OwnerDisplayName": "user5895251", "LastEditorUserId": "3747990", "Id": "35337869", "Score": "2", "Tags": "<c++><c++11><reference><auto>", "AnswerCount": "2"}});