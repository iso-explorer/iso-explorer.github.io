post_cb({"bq_ids": {"n4140": {"so_2940748_2940748_1": {"length": 11, "quality": 0.6111111111111112, "section_id": 4852}}, "n3337": {"so_2940748_2940748_1": {"length": 11, "quality": 0.6111111111111112, "section_id": 4647}}, "n4659": {"so_2940748_2940748_1": {"length": 11, "quality": 0.6111111111111112, "section_id": 6277}}}, "2954714": {"Id": "2954714", "PostTypeId": "2", "Body": "<p>Take a look at <a href=\"http://www.boost.org/doc/libs/1_43_0/libs/mpl/doc/refmanual/has-xxx-trait-def.html\" rel=\"nofollow noreferrer\">BOOST_MPL_HAS_XXX_TRAIT_DEF</a> and check out the thread <a href=\"http://lists.boost.org/Archives/boost/2003/11/56173.php\" rel=\"nofollow noreferrer\">compile time member detection</a>.  I know that VisualStudio has a non standard keyword <code>__if_exists</code>, but AFAIK it is not available on other compilers.</p>\n", "LastActivityDate": "2010-06-02T02:57:42.353", "CommentCount": "1", "CreationDate": "2010-06-02T02:57:42.353", "ParentId": "2940748", "Score": "0", "OwnerUserId": "78377"}, "3784821": {"Id": "3784821", "PostTypeId": "2", "Body": "<p>There is no fully-standards-conforming way to detect the presence of <code>std::chrono::monotonic_clock</code>. As was apparent from the discussions on comp.std.c++, there are some non-standard-conforming techniques involving declaring new code in namespace <code>std</code>.</p>\n", "LastActivityDate": "2010-09-24T06:49:02.697", "CommentCount": "3", "CreationDate": "2010-09-24T06:49:02.697", "ParentId": "2940748", "Score": "3", "OwnerUserId": "5597"}, "2940748": {"ViewCount": "1560", "Body": "<p>C++0x N3092 states that monotonic_clock is optional:</p>\n<blockquote>\n<p id=\"so_2940748_2940748_0\">20.10.5.2 Class monotonic_clock [time.clock.monotonic]</p>\n<ol>\n<li><p id=\"so_2940748_2940748_1\">Objects of class monotonic_clock represent clocks for which values of time_point never decrease as physical time advances. monotonic_clock may be a synonym for system_clock if system_clock::is_monotonic is true.</p></li>\n<li><p id=\"so_2940748_2940748_2\"><strong>The class monotonic_clock is conditionally supported.</strong></p></li>\n</ol>\n</blockquote>\n<p>Can I use SFINAE or another technique to define a traits class to determine if monotonic_clock is defined?</p>\n<p>If not, shouldn't there be a standard macro that indicates whether monotonic_clock is available?</p>\n", "AcceptedAnswerId": "3784821", "Title": "How to determine if std::chrono::monotonic_clock is available?", "CreationDate": "2010-05-30T23:44:33.913", "Id": "2940748", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2010-09-26T02:50:52.210", "LastEditorDisplayName": "Roger Pate", "LastActivityDate": "2010-09-26T02:50:52.210", "Score": "5", "OwnerUserId": "320757", "Tags": "<c++><c++11><clock>", "AnswerCount": "2"}});