post_cb({"14595365": {"Id": "14595365", "PostTypeId": "2", "Body": "<p>The C++ standard says:</p>\n<blockquote>\n<p id=\"so_14595300_14595365_0\">The basic source character set consists of 96 characters: the space\n  character, the control characters representing horizontal tab,\n  vertical tab, form feed, and new-line, plus the following 91 graphical\n  characters: a b c d e f g h i j k l m n o p q r s t u v w x y z A B C\n  D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9\n  _ { } [ ] # ( ) &lt; &gt; % : ; . ? * + - / ^ &amp; |  ! = , \\ \" \u2019</p>\n</blockquote>\n<p>There is no $ in the basic source character set described above; The $ character in your code is an extension to the basic source character set, which isn't required. Consider in Britain, where the pound symbol (\u00a3 or \u20a4) is used in place of the dollar symbol ($).</p>\n", "LastActivityDate": "2013-01-30T01:48:30.577", "CommentCount": "23", "CreationDate": "2013-01-30T01:48:30.577", "ParentId": "14595300", "Score": "0", "OwnerUserId": "1989425"}, "14595300": {"ViewCount": "2138", "Body": "<p>I read the following code from an open source library. What confuses me is the usage of dollar sign. Can anyone please clarify the meaning of $ in the code. Your help is greatly appreciated! </p>\n<pre><code>   __forceinline MutexActive( void ) : $lock(LOCK_IS_FREE) {}\n    void lock  ( void );\n    __forceinline void unlock( void ) { \n      __memory_barrier();     // compiler must not schedule loads and stores around this point\n      $lock = LOCK_IS_FREE; \n    }\n  protected:\n    enum ${ LOCK_IS_FREE = 0, LOCK_IS_TAKEN = 1 };\n    Atomic $lock;\n</code></pre>\n", "AcceptedAnswerId": "14595378", "Title": "$ symbol in c++", "CreationDate": "2013-01-30T01:41:25.410", "Id": "14595300", "CommentCount": "20", "PostTypeId": "1", "LastActivityDate": "2013-01-30T02:06:31.213", "Score": "7", "OwnerUserId": "2023693", "Tags": "<c++><multithreading><syntax><locking>", "AnswerCount": "4"}, "bq_ids": {"n4140": {"so_14595300_14595365_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 5314}}, "n3337": {"so_14595300_14595365_0": {"length": 22, "quality": 0.9565217391304348, "section_id": 5111}}, "n4659": {"so_14595300_14595365_0": {"length": 20, "quality": 0.8695652173913043, "section_id": 6738}}}, "14595370": {"Id": "14595370", "PostTypeId": "2", "Body": "<p>Even if dollar sign are not valid identifiers according to the standard, it can be accepted. For example visual studio (I think ggc too but I'm not sure about that) seems to accept it.</p>\n<p>Check this doc : <a href=\"http://msdn.microsoft.com/en-us/library/565w213d(v=vs.80).aspx\" rel=\"nofollow noreferrer\">http://msdn.microsoft.com/en-us/library/565w213d(v=vs.80).aspx</a>\nand this : <a href=\"https://stackoverflow.com/questions/936744/are-dollar-signs-allowed-in-identifiers-in-c\">Are dollar-signs allowed in identifiers in C++03?</a></p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2013-01-30T01:49:20.640", "Score": "0", "CreationDate": "2013-01-30T01:49:20.640", "ParentId": "14595300", "CommentCount": "1", "OwnerUserId": "1273879", "LastEditDate": "2017-05-23T10:31:59.593"}, "14595378": {"Id": "14595378", "PostTypeId": "2", "Body": "<p>It is being used as part of an <em>identifer</em>.</p>\n<p><code>[C++11: 2.11/1]</code> defines an <em>identifier</em> as \"an arbitrarily long sequence of letters and digits.\" It defines \"letters and digits\" in a grammar given immediately above, which names only numeric digits, lower- and upper-case roman letters, and the underscore character explicitly, but does also allow \"other implementation-defined characters\", of which this is presumably one.</p>\n<p>In this scenario the <code>$</code> has no special meaning other than as part of an identifier \u2014 in this case, the name of a variable. There is no special significance with it being at the <em>start</em> of the variable name.</p>\n", "LastActivityDate": "2013-01-30T01:50:12.357", "CommentCount": "3", "CreationDate": "2013-01-30T01:50:12.357", "ParentId": "14595300", "Score": "7", "OwnerUserId": "560648"}, "14595459": {"Id": "14595459", "PostTypeId": "2", "Body": "<p>There is a gcc switch, <code>-fdollars-in-identifiers</code> which explicitly allows $ in idenfitiers.</p>\n<p>Perhaps they enable it and use the $ as something that is highly unlikely to clash with normal names.</p>\n<blockquote>\n<p id=\"so_14595300_14595459_0\"><strong>-fdollars-in-identifiers</strong></p>\n<p id=\"so_14595300_14595459_1\">Accept $ in identifiers. You can also explicitly prohibit use of $ with the option -fno-dollars-in-identifiers. (GNU C allows $ by\n  default on most target systems, but there are a few exceptions.)\n  Traditional C allowed the character $ to form part of identifiers.\n  However, ISO C and C++ forbid $ in identifiers.</p>\n</blockquote>\n<p>See <a href=\"http://gcc.gnu.org/onlinedocs/gcc-3.3.5/gcc/C_002b_002b-Dialect-Options.html\" rel=\"noreferrer\">the gcc documentation</a>. Hopefully the link stays good.</p>\n", "LastEditorUserId": "1127972", "LastActivityDate": "2013-01-30T02:06:31.213", "Score": "6", "CreationDate": "2013-01-30T01:59:57.203", "ParentId": "14595300", "CommentCount": "3", "OwnerUserId": "1127972", "LastEditDate": "2013-01-30T02:06:31.213"}});