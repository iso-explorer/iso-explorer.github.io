post_cb({"20129495": {"ViewCount": "97", "Body": "<p>This is a subset of an example from C++11 (same through to latest draft) 8.3.4p4  ([dcl.array]/4):</p>\n<pre><code>extern int x[10];                   // 1\n\nint x[]; // OK: bound is 10         // 2\n\nvoid f() {\n    extern int x[];                 // 3\n    int i = sizeof(x); // error incomplete type\n}\n</code></pre>\n<p>gcc does not agree with the error and gives:</p>\n<pre><code>error: type mismatch with previous external decl of \u2018int x []\u2019\n</code></pre>\n<p>instead (at declaration 3).</p>\n<p>clang compiles without error.</p>\n<p>My intepretation would be that the example is well-formed.  Declaration 3 should link to declaration 1 and 2, and should therefore have type <code>array of 10 int</code>, and not <code>array of unknown bound int</code>.  So it should be complete at the sizeof.</p>\n<p>Who is correct?  The standard, gcc or clang?</p>\n", "AcceptedAnswerId": "20129657", "Title": "C++11 array declaration example from 8.3.4p4 doesn't match gcc or clang?", "CreationDate": "2013-11-21T18:49:59.047", "Id": "20129495", "CommentCount": "3", "PostTypeId": "1", "LastActivityDate": "2013-11-21T19:00:07.303", "Score": "1", "OwnerUserId": "1131467", "Tags": "<c++><c++11>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_20129495_20129657_0": {"length": 17, "quality": 1.0, "section_id": 3230}}, "n3337": {"so_20129495_20129657_0": {"length": 17, "quality": 1.0, "section_id": 3103}}, "n4659": {"so_20129495_20129657_0": {"length": 17, "quality": 1.0, "section_id": 3987}}}, "20129657": {"Id": "20129657", "PostTypeId": "2", "Body": "<p>8.3.4/3 includes:</p>\n<blockquote>\n<p id=\"so_20129495_20129657_0\">Furthermore, if there is a preceding declaration of the entity in the same scope in which the bound was specified, an omitted array bound is taken to be the same as in that earlier declaration,</p>\n</blockquote>\n<p>Since the declaration inside the function is not in the same scope as the global declaration that doesn't apply, and therefore does not grant permission to omit the array bound. I don't see any other text that would permit the omission either, and therefore the type of <code>x</code> in the <code>sizeof(x)</code> expression is incomplete.</p>\n<p>Clang should not be accepting the code, gcc is rejecting it for the wrong reason, and the standard's example looks accurate to me.</p>\n", "LastActivityDate": "2013-11-21T19:00:07.303", "CommentCount": "3", "CreationDate": "2013-11-21T19:00:07.303", "ParentId": "20129495", "Score": "4", "OwnerUserId": "365496"}});