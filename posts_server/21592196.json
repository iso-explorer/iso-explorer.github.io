post_cb({"21592253": {"Id": "21592253", "PostTypeId": "2", "Body": "<p>It's guaranteed to work</p>\n<p>From the standard</p>\n<blockquote>\n<p id=\"so_21592196_21592253_0\">23.3.6.1 Class template vector overview</p>\n<p id=\"so_21592196_21592253_1\">A vector is a sequence container that supports random access iterators. In addition, it supports (amortized) constant time insert and erase operations at the end; insert and erase in the middle take linear time. Storage management is handled automatically, though hints can be given to improve efficiency. The elements of a vector are stored contiguously, meaning that if v is a vector where T is some type other than bool, then it obeys the identity &amp;v[n] == &amp;v[0] + n for all 0 &lt;= n &lt; v.size().</p>\n</blockquote>\n<p>All PODs are trivially copyable</p>\n", "LastEditorUserId": "2359920", "LastActivityDate": "2014-02-06T01:41:21.290", "Score": "8", "CreationDate": "2014-02-06T01:27:32.210", "ParentId": "21592196", "CommentCount": "4", "OwnerUserId": "2359920", "LastEditDate": "2014-02-06T01:41:21.290"}, "bq_ids": {"n4140": {"so_21592196_21592253_1": {"length": 48, "quality": 0.96, "section_id": 955}}, "n3337": {"so_21592196_21592253_1": {"length": 48, "quality": 0.96, "section_id": 943}}, "n4659": {"so_21592196_21592253_1": {"length": 27, "quality": 0.54, "section_id": 1016}}}, "21592196": {"ViewCount": "4696", "Body": "<p>Is this safe or does this just happen to work on my current compiler? Is there anything about this in the standard? The result in the floats vector is correct.</p>\n<pre><code>class Color {\npublic:\n  Color(float r, float g, float b, float a) : mColor{r,g,b,a} {};\n\n  inline const float *data() const\n  {\n    return mColor;\n  }\n\nprivate:\n  enum {vectorSize = 4};\n  float mColor[vectorSize];\n};\n\n//test\nstd::vector&lt;Color&gt; colors(2);\nstd::vector&lt;float&gt; floats(8);\ncolors[0] = Color(0.1, 0.2, 0.3, 0.4);\ncolors[1] = Color(0.5, 0.6, 0.7, 0.8);\nmemcpy(floats.data(), colors.data(), 8 * sizeof(float));\n</code></pre>\n", "AcceptedAnswerId": "21592253", "Title": "memcpy underlying data from std::vector of objects", "CreationDate": "2014-02-06T01:22:08.807", "Id": "21592196", "CommentCount": "1", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2014-02-06T01:26:33.277", "LastEditorUserId": "3276485", "LastActivityDate": "2014-02-06T01:41:21.290", "Score": "7", "OwnerUserId": "759835", "Tags": "<c++><compiler-construction><memcpy>", "AnswerCount": "1"}});