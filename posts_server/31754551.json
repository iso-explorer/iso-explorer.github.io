post_cb({"31754615": {"ParentId": "31754551", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2015-07-31T20:24:54.263", "Score": "2", "LastEditorUserId": "3246555", "LastEditDate": "2015-07-31T20:30:15.800", "Id": "31754615", "OwnerUserId": "3246555", "Body": "<p>It is a pointer to a member of class. According to the standard (N4296, 5.3.1):</p>\n<blockquote>\n<p id=\"so_31754551_31754615_0\">The result of the unary <code>&amp;</code> operator is a pointer to its operand. The operand shall be an lvalue or a <em>qualified-id</em>.\n  If the operand is a <em>qualified-id</em> naming a non-static or variant member <code>m</code> of some class <code>C</code> with type <code>T</code>,\n  the result has type \u201cpointer to member of class <code>C</code> of type <code>T</code>\u201d and is a prvalue designating <code>C::m</code>.</p>\n</blockquote>\n", "LastActivityDate": "2015-07-31T20:30:15.800"}, "bq_ids": {"n4140": {"so_31754551_31754615_0": {"section_id": 6066, "quality": 0.8928571428571429, "length": 25}}, "n3337": {"so_31754551_31754615_0": {"section_id": 5834, "quality": 0.8928571428571429, "length": 25}}, "n4659": {"so_31754551_31754615_0": {"section_id": 7562, "quality": 0.9285714285714286, "length": 26}}}, "31754551": {"CommentCount": "8", "ViewCount": "243", "ClosedDate": "2015-07-31T20:26:00.393", "CreationDate": "2015-07-31T20:20:23.100", "LastActivityDate": "2015-07-31T20:30:15.800", "PostTypeId": "1", "FavoriteCount": "1", "Title": "What does &Type::variable mean?", "Id": "31754551", "Score": "3", "Body": "<pre><code>int main()\n{\n    struct Bob\n    {\n        int a;\n    };\n\n    &amp;Bob::a;\n}\n</code></pre>\n<p>What does <code>&amp;Bob::a</code> mean? Bob is a type and not an instance, so what is it taking the address of?</p>\n", "Tags": "<c++>", "OwnerUserId": "2068573", "AnswerCount": "1"}});