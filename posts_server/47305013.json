post_cb({"bq_ids": {"n4140": {"so_47305013_47305053_1": {"length": 18, "quality": 1.0, "section_id": 5810}}, "n3337": {"so_47305013_47305053_1": {"length": 18, "quality": 1.0, "section_id": 5583}}, "n4659": {"so_47305013_47305053_1": {"length": 18, "quality": 1.0, "section_id": 7271}}}, "47305013": {"ViewCount": "34", "Body": "<p>here i want a brief explain about answer(24).but i tried this code in java.I had answer 23 in java. </p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main()\n{\n\n    int a=10,b=2,c=0;\n    c=(++a + ++a);\n    cout &lt;&lt;c&lt;&lt;endl;\n    return 0;\n     //Here how to get answer 24\n\n}\n</code></pre>\n", "Title": "Increment and Decrement c++ and java difference", "CreationDate": "2017-11-15T10:30:30.293", "Id": "47305013", "CommentCount": "1", "LastEditDate": "2017-11-15T10:31:24.830", "PostTypeId": "1", "LastEditorUserId": "817643", "LastActivityDate": "2017-11-15T10:38:38.403", "Tags": "<c++>", "Score": "-5", "OwnerUserId": "8944438", "ClosedDate": "2017-11-15T10:32:31.923", "AnswerCount": "1"}, "47305053": {"Id": "47305053", "PostTypeId": "2", "Body": "<pre><code>c=(++a + ++a);\n</code></pre>\n<p>In C++, it is <strong>undefined behaviour</strong>. I don't know behaviour of that code in java.</p>\n<p><strong>C++03 5 Expressions [expr]:</strong><br>\n<strong>Paragraph 4:</strong> </br></p>\n<blockquote>\n<p id=\"so_47305013_47305053_0\">....<br>\n<strong>Between the previous and next sequence point a scalar object shall have its stored value modified at most once by the evaluation of an expression. Furthermore, the prior value shall be accessed only to determine the value to be stored</strong>. The requirements of this paragraph shall be met for each allowable ordering of the subexpressions of a full\n  expression; <strong>otherwise the behavior is undefined</strong>. </br></p>\n</blockquote>\n<p>C++11 \u00a71.9/14 says:</p>\n<blockquote>\n<p id=\"so_47305013_47305053_1\">Every value computation and side effect associated with a\n  full-expression is sequenced before every value computation and side\n  effect associated with the next full-expression to be evaluated.</p>\n</blockquote>\n<p>In <strong>C++17</strong>, it is <strong>unspecified</strong> behaviour.</p>\n", "LastEditorUserId": "6935629", "LastActivityDate": "2017-11-15T10:38:38.403", "Score": "1", "CreationDate": "2017-11-15T10:32:06.923", "ParentId": "47305013", "CommentCount": "0", "LastEditDate": "2017-11-15T10:38:38.403", "OwnerUserId": "6935629"}});