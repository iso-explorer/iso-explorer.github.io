post_cb({"bq_ids": {"n4140": {"so_16626033_16626055_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 12}}, "n3337": {"so_16626033_16626055_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 9}}, "n4659": {"so_16626033_16626055_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 13}}}, "16626033": {"ViewCount": "125", "Body": "<p>There is this code:</p>\n<pre><code>void a() { }\n\nint main(){\n   a();\n   (****&amp;a)();\n   return 0;\n}\n</code></pre>\n<p>How does it happen that statement <code>(****&amp;a)();</code> has the same effect as <code>a();</code>?</p>\n", "AcceptedAnswerId": "16626055", "Title": "Why expressions a() and (****&a)() call the same function?", "CreationDate": "2013-05-18T15:41:21.277", "LastActivityDate": "2013-05-18T15:49:25.997", "CommentCount": "2", "FavoriteCount": "1", "PostTypeId": "1", "Tags": "<c++>", "Id": "16626033", "Score": "0", "OwnerUserId": "738811", "ClosedDate": "2013-05-18T15:55:57.720", "AnswerCount": "1"}, "16626055": {"Id": "16626055", "PostTypeId": "2", "Body": "<p>It's all because of <em>function-to-pointer conversion</em> (\u00a74.3):</p>\n<blockquote>\n<p id=\"so_16626033_16626055_0\">An lvalue of function type <code>T</code> can be converted to a prvalue of type \u201cpointer to <code>T</code>.\u201d The result is a pointer to the function.</p>\n</blockquote>\n<p><code>&amp;a</code> first gives you a pointer to <code>a</code>. Then you dereference it with <code>*</code> giving you the function itself. You then attempt to dereference that function, but since you can't, it undergoes function-to-pointer conversion to get the pointer again. You dereference that pointer with <code>*</code>, and so on.</p>\n<p>In the end <code>(****&amp;a)</code> denotes the function <code>a</code> and you call it, since you can apply <code>()</code> to a function without it undergoing function-to-pointer conversion.</p>\n", "LastEditorUserId": "150634", "LastActivityDate": "2013-05-18T15:49:25.997", "Score": "7", "CreationDate": "2013-05-18T15:44:10.230", "ParentId": "16626033", "CommentCount": "0", "OwnerUserId": "150634", "LastEditDate": "2013-05-18T15:49:25.997"}});