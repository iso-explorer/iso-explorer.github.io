post_cb({"5049932": {"ParentId": "5049891", "PostTypeId": "2", "CommentCount": "8", "Body": "<p>Your code actually wont compile at all on Visual C++. In general it best to leave as little to chance as possible. You need to initialize refence members using an initialiser list in the constructor:</p>\n<pre><code>class test\n{\npublic:\n test(int&amp; x) : k(x)\n {\n }\n int&amp; k;\n};\n</code></pre>\n", "OwnerUserId": "479230", "LastEditorUserId": "479230", "LastEditDate": "2015-01-14T08:43:03.100", "Id": "5049932", "Score": "1", "CreationDate": "2011-02-19T09:18:25.803", "LastActivityDate": "2015-01-14T08:43:03.100"}, "5049891": {"CommentCount": "2", "CreationDate": "2011-02-19T09:06:51.283", "PostTypeId": "1", "AcceptedAnswerId": "5049921", "LastEditorUserId": "624231", "LastActivityDate": "2015-01-14T08:43:03.100", "LastEditDate": "2011-02-19T09:53:04.587", "ViewCount": "10682", "FavoriteCount": "4", "Title": "Reference variable in class definition", "Id": "5049891", "Score": "10", "Body": "<p>I am learning C++, and I read that all references must be initialized upon declaration,\nand there can be no \"uninitialized references\". But what if the reference variable is a class member?</p>\n<pre><code>class test\n{\n    int &amp;k;\n};\n\nint main()\n{\n    test *abc = new test;\n}\n</code></pre>\n<p>This program compiles and runs normally (in g++, no warnings). However, <code>abc-&gt;k</code> is a reference, but what is it initialized to? Or, is it an \"uninitialized reference\" of some sort, or something else?</p>\n", "Tags": "<c++><reference>", "OwnerUserId": "624231", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_5049891_5049921_0": {"section_id": 370, "quality": 0.7692307692307693, "length": 20}}, "n3337": {"so_5049891_5049921_0": {"section_id": 360, "quality": 0.7692307692307693, "length": 20}}, "n4659": {"so_5049891_5049921_0": {"section_id": 384, "quality": 0.7692307692307693, "length": 20}}}, "12013358": {"ParentId": "5049891", "PostTypeId": "2", "CommentCount": "0", "Body": "<pre><code>class test\n{\n    public:\n        test(int x) : k(x)\n        {\n        }\n    int&amp; k;\n};\n</code></pre>\n<p>I have doubt on the way reference is being initialized. When stack frame for ctr is taken off the stack, the reference will no longer be valid. </p>\n", "OwnerUserId": "1605648", "LastEditorUserId": "204701", "LastEditDate": "2012-09-28T11:12:04.490", "Id": "12013358", "Score": "1", "CreationDate": "2012-08-17T21:23:27.423", "LastActivityDate": "2012-09-28T11:12:04.490"}, "5049921": {"ParentId": "5049891", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>The program is ill-formed because it constructs a class that fails to initialize a non-static member entity of reference type.</p>\n<p>I believe that gcc should fail to compiler this, but I only received the warning \"non-static reference \u2018int&amp; test::k\u2019 in class without a constructor\".</p>\n<p><code>test</code> is a non-POD-struct type as it contains a reference member. (9 [class] / 4)</p>\n<p><code>new test</code> default-initializes the dynamically allocated class. (5.3.4 [expr.new] / 15)</p>\n<p>To <em>default-initialize</em> an object of type <code>test</code> means to call the implicitly declared and implicitly defined default constructor. (8.5 [dcl.init] / 5)</p>\n<p>The implicitly defined default constructor is equivalent to a default constructor with an empty <em>mem-initialized-list</em> and an empty function body. (12.1 [class.ctor] / 7)</p>\n<p>Further more:</p>\n<blockquote>\n<p id=\"so_5049891_5049921_0\">The implicitly-defined default constructor performs the set of initializations of the\n  class that would be performed by a user-written default constructor for that class with an empty <em>mem-initializer-list</em> (12.6.2) and an empty function body. If that user-written default constructor would be ill-formed, the program is ill-formed.</p>\n</blockquote>\n<p>If an entity is not name in a <em>mem-initializer-list</em> and the member is not of class type [with further restrictions] then the entity is not initialized.</p>\n<blockquote>\n<p id=\"so_5049891_5049921_1\">Otherwise, the entity is not initialized. If the entity is of const-qualified type, or <strong>reference type</strong>, [or ...] the program is ill-formed.\" (12.6.2 [class.base.init] / 4)</p>\n</blockquote>\n", "OwnerUserId": "19563", "LastEditorUserId": "19563", "LastEditDate": "2011-02-19T09:42:25.070", "Id": "5049921", "Score": "8", "CreationDate": "2011-02-19T09:15:53.413", "LastActivityDate": "2011-02-19T09:42:25.070"}});