post_cb({"bq_ids": {"n4140": {"so_6992593_6993152_0": {"section_id": 5461, "quality": 0.7894736842105263, "length": 15}, "so_6992593_6993152_1": {"section_id": 5470, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_6992593_6993152_0": {"section_id": 5248, "quality": 0.7894736842105263, "length": 15}, "so_6992593_6993152_1": {"section_id": 5256, "quality": 0.8571428571428571, "length": 6}}, "n4659": {"so_6992593_6993152_0": {"section_id": 6895, "quality": 0.7368421052631579, "length": 14}, "so_6992593_6993152_1": {"section_id": 6904, "quality": 0.8571428571428571, "length": 6}}}, "6993152": {"ParentId": "6992593", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>Since you are talking about C++0x, just use the new <code>enum class</code> syntax:</p>\n<pre><code>enum class VertexType {\n   Vector1 = 1,\n   Vector2 = 2,\n   Vector4 = 3\n};\n</code></pre>\n<p>The enumerator values will only be accessible through the <code>VertexType</code> type as in <code>VertexType::Vector1</code>.</p>\n<p>Some quotes from the standard:</p>\n<blockquote>\n<p id=\"so_6992593_6993152_0\">\u00a77.2/2 [...] The enum-keys enum class and enum struct are semantically equivalent; an enumeration type declared with one of these is a scoped enumeration, and its enumerators are scoped enumerators. [...]</p>\n<p id=\"so_6992593_6993152_1\">\u00a77.2/10 [...] Each scoped enumerator is declared in the scope of the enumeration.[...]</p>\n</blockquote>\n<pre><code>// example in \u00a77.2/10\nenum class altitude { high=\u2019h\u2019, low=\u2019l\u2019 };\nvoid h() {\n  altitude a;        // OK\n  a = high;          // error: high not in scope\n  a = altitude::low; // OK\n}\n</code></pre>\n", "OwnerUserId": "36565", "LastEditorUserId": "36565", "LastEditDate": "2011-08-09T08:23:34.197", "Id": "6993152", "Score": "5", "CreationDate": "2011-08-09T08:07:22.557", "LastActivityDate": "2011-08-09T08:23:34.197"}, "6992593": {"CommentCount": "4", "AcceptedAnswerId": "6992644", "CreationDate": "2011-08-09T07:13:14.290", "LastActivityDate": "2012-05-14T00:57:24.847", "PostTypeId": "1", "ViewCount": "797", "FavoriteCount": "0", "Title": "C++ enum redefenition and C++0x", "Id": "6992593", "Score": "0", "Body": "<p>If I want to exclude problems with enums and type redefinition in C++ I can use the code:</p>\n<pre><code>struct VertexType\n{\n    enum\n    {\n        Vector2 = 1,\n        Vertor3 = 2,\n        Vector4 = 3,\n    };\n};\n\nstruct Vector2 { ... };\nstruct Vector3 { ... };\nstruct Vector3 { ... };\n</code></pre>\n<p>Is there a way to remove the wrapper above enum. I looked at C++0x but didn't find addiditional inforamtion about solving this problem.</p>\n", "Tags": "<c++><enums><c++11>", "OwnerUserId": "334904", "AnswerCount": "3"}, "6992844": {"ParentId": "6992593", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>It appears vector3 is already being used. You can do what your trying to do, however, vector3 cannot be used.</p>\n<pre><code>enum //VertexType\n{\n    Vector2 = 1,\n    //Vector3 = 2,\n    Vector4 = 3,\n};\n\nstruct Vector2 { ... };\n//struct Vector3 {  };\nstruct Vector3 { ... };\n</code></pre>\n<p>This works for me, no errors at all.</p>\n<p>This is a link i found.\n<a href=\"http://www.kixor.net/dev/vector3/\" rel=\"nofollow\">http://www.kixor.net/dev/vector3/</a> </p>\n", "OwnerUserId": "1215218", "LastEditorUserId": "1215218", "LastEditDate": "2012-05-14T00:57:24.847", "Id": "6992844", "Score": "2", "CreationDate": "2011-08-09T07:34:31.167", "LastActivityDate": "2012-05-14T00:57:24.847"}, "6992644": {"ParentId": "6992593", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>How about <code>namespace</code>?</p>\n<pre><code>namespace VertexType\n{\n    enum V\n    {\n        Vector2 = 1,\n        Vertor3 = 2,\n        Vector4 = 3,\n    };\n}\n\nstruct Vector2 { ... };\nstruct Vector3 { ... };\nstruct Vector4 { ... };\n</code></pre>\n", "OwnerUserId": "415784", "LastEditorUserId": "415784", "LastEditDate": "2011-08-09T07:56:47.817", "Id": "6992644", "Score": "2", "CreationDate": "2011-08-09T07:17:45.557", "LastActivityDate": "2011-08-09T07:56:47.817"}});