post_cb({"bq_ids": {"n4140": {"so_29019462_29019462_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 7092}}, "n3337": {"so_29019462_29019462_0": {"length": 37, "quality": 0.9736842105263158, "section_id": 6836}}, "n4659": {"so_29019462_29019462_0": {"length": 27, "quality": 0.7105263157894737, "section_id": 8593}}}, "29019462": {"ViewCount": "79", "Body": "<p>3.4.1/6:</p>\n<blockquote>\n<p id=\"so_29019462_29019462_0\">A name used in the definition of a function following the function\u2019s\n  <em>declarator-id</em><sup>28</sup> that is a member of namespace <code>N</code> (where, only for the purpose of exposition, <code>N</code> could represent the global\n  scope) shall be declared before its use in the block in which it is\n  used or in one of its enclosing blocks (6.3) or, shall be declared\n  before its use in namespace <code>N</code> or, if <code>N</code> is a nested namespace, shall be\n  declared before its use in one of <code>N</code>\u2019s enclosing namespaces.  </p>\n<p id=\"so_29019462_29019462_1\">[ Example:</p>\n<pre><code>namespace A {  \n    namespace N {  \n        void f();  \n    }  \n}  \n\nvoid A::N::f() {  \n    i = 5;  \n\n    // The following scopes are searched for a declaration of i:  \n    // 1) outermost block scope of A::N::f, before the use of i  \n    // 2) scope of namespace N  \n    // 3) scope of namespace A  \n    // 4) global scope, before the definition of A::N::f  \n}\n</code></pre>\n</blockquote>\n<p>I believe 3.4.1/6 ignores the lookup of a name used in a <em>function-body</em> that is found in the function's <em>parameter-declaration-clause</em>, as shown below:</p>\n<pre><code>void f(int i) { std::cout &lt;&lt; i &lt;&lt; '\\n'; }\n</code></pre>\n", "Title": "Does 3.4.1/6 ignore the lookup of a name used in a function which is found in the function's parameter-declaration-clause?", "CreationDate": "2015-03-12T20:19:28.970", "LastActivityDate": "2015-03-12T22:45:36.370", "CommentCount": "0", "LastEditDate": "2015-03-12T20:25:35.390", "PostTypeId": "1", "LastEditorUserId": "701092", "Id": "29019462", "Score": "0", "OwnerUserId": "1042389", "Tags": "<c++><language-lawyer><lookup>", "AnswerCount": "1"}, "29019613": {"Id": "29019613", "PostTypeId": "2", "Body": "<p><strike>That paragraph is not relevant to your example, because in your example <code>i</code> is not \"A name [...] that is a member of namespace <code>N</code>\"</strike></p>\n<p>The start of the sentence should be parsed like this:</p>\n<p>Let F be a function.<br>\nLet N be a namespace.<br>\nLet X be a name.  </br></br></p>\n<p>If X is used in the definition of F after F\u2019s declarator-id and X is a member of namespace N ...</p>\n<p></p>\n<p><strong>Edit</strong>: I've been persuaded by the comments that my interpretation above is wrong. I've created <a href=\"https://github.com/cplusplus/draft/issues/451\" rel=\"nofollow\">https://github.com/cplusplus/draft/issues/451</a> to request that paragraph be rephrased.</p>\n<p>However this is wrong too:</p>\n<blockquote>\n<p id=\"so_29019462_29019613_0\">I believe 3.4.1/6 ignores the lookup of a name used in a function-body that is found in the function's parameter-declaration-clause,</p>\n</blockquote>\n<p>Firstly, obviously <code>i</code> <em>is</em> found by name lookup, otherwise function parameters would be unusable!</p>\n<p>Secondly, 3.3.3 [basic.scope.block]/2 says that <code>i</code> has \"block scope\" beginning at its point of declaration and ending at the closing brace of the function definition. 3.4.6/6 says <em>\"shall be declared before its use in the block in which it is used\"</em> and that is true in this case. <code>i</code> is declared before it is used (its point of declaration is before it is used) and is declared in the block in which it is used (the outermost block scope of the function).</p>\n", "LastEditorUserId": "981959", "LastActivityDate": "2015-03-12T22:45:36.370", "Score": "1", "CreationDate": "2015-03-12T20:28:20.897", "ParentId": "29019462", "CommentCount": "19", "OwnerUserId": "981959", "LastEditDate": "2015-03-12T22:45:36.370"}});