post_cb({"42285638": {"Id": "42285638", "PostTypeId": "2", "Body": "<p>Because <code>push_heap()</code> requires a <a href=\"http://en.cppreference.com/w/cpp/concept/RandomAccessIterator\" rel=\"nofollow noreferrer\">random access iterator</a>.</p>\n<p>Different C++ containers provide different kinds of iterators, with different properties, and different capabilities. <code>std::list</code> provides only a bidirectional iterator, which does not meet the requirements for a random access iterator. As noted in the link I cited, a random access iterator implements additional requirements beyond the ones implemented by bidirectional iterators.</p>\n<p>As such, algorithms that require random access iterators cannot use bidirectional iterators.</p>\n", "LastActivityDate": "2017-02-16T22:10:34.347", "Score": "3", "CreationDate": "2017-02-16T22:10:34.347", "ParentId": "42285608", "CommentCount": "0", "OwnerUserId": "3943312"}, "42285608": {"ViewCount": "70", "Body": "<p>I am trying to <code>push_heap</code> on a <code>list&lt;int&gt;</code>, but compilation fails complaining about the list iterator. If I change the list to a vector it works fine.</p>\n<p>Looking at cpp reference I cannot figure out why list iterators would behave differently. Maybe someone can shed some light?</p>\n<p><a href=\"https://ideone.com/pk5iJG\" rel=\"nofollow noreferrer\">https://ideone.com/pk5iJG</a></p>\n<pre><code>#include &lt;algorithm&gt;\n#include &lt;functional&gt;\n#include &lt;list&gt;\n\nusing namespace std;\n\nint main() {\n\n    list&lt;int&gt; l;\n    l.push_back(0);\n    push_heap(l.begin(), l.end(), greater&lt;int&gt;());\n    return 0;\n}\n</code></pre>\n<p>error:</p>\n<pre><code>In file included from /usr/include/c++/6/bits/stl_pair.h:59:0,\n                 from /usr/include/c++/6/utility:70,\n                 from /usr/include/c++/6/algorithm:60,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h: In instantiation of \u2018void std::push_heap(_RAIter, _RAIter, _Compare) [with _RAIter = std::_List_iterator&lt;int&gt;; _Compare = std::greater&lt;int&gt;]\u2019:\nprog.cpp:13:48:   required from here\n/usr/include/c++/6/bits/stl_heap.h:200:28: error: no match for \u2018operator-\u2019 (operand types are \u2018std::_List_iterator&lt;int&gt;\u2019 and \u2018int\u2019)\n       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));\n                            ^\nIn file included from /usr/include/c++/6/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/6/algorithm:61,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_iterator.h:333:5: note: candidate: template&lt;class _Iterator&gt; decltype ((__x.base() - __y.base())) std::operator-(const std::reverse_iterator&lt;_Iterator&gt;&amp;, const std::reverse_iterator&lt;_Iterator&gt;&amp;)\n     operator-(const reverse_iterator&lt;_Iterator&gt;&amp; __x,\n     ^~~~~~~~\n/usr/include/c++/6/bits/stl_iterator.h:333:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/6/bits/stl_pair.h:59:0,\n                 from /usr/include/c++/6/utility:70,\n                 from /usr/include/c++/6/algorithm:60,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:200:28: note:   \u2018std::_List_iterator&lt;int&gt;\u2019 is not derived from \u2018const std::reverse_iterator&lt;_Iterator&gt;\u2019\n       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));\n                            ^\nIn file included from /usr/include/c++/6/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/6/algorithm:61,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_iterator.h:387:5: note: candidate: template&lt;class _IteratorL, class _IteratorR&gt; decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator&lt;_Iterator&gt;&amp;, const std::reverse_iterator&lt;_IteratorR&gt;&amp;)\n     operator-(const reverse_iterator&lt;_IteratorL&gt;&amp; __x,\n     ^~~~~~~~\n/usr/include/c++/6/bits/stl_iterator.h:387:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/6/bits/stl_pair.h:59:0,\n                 from /usr/include/c++/6/utility:70,\n                 from /usr/include/c++/6/algorithm:60,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:200:28: note:   \u2018std::_List_iterator&lt;int&gt;\u2019 is not derived from \u2018const std::reverse_iterator&lt;_Iterator&gt;\u2019\n       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));\n                            ^\nIn file included from /usr/include/c++/6/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/6/algorithm:61,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_iterator.h:1186:5: note: candidate: template&lt;class _IteratorL, class _IteratorR&gt; decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator&lt;_IteratorL&gt;&amp;, const std::move_iterator&lt;_IteratorR&gt;&amp;)\n     operator-(const move_iterator&lt;_IteratorL&gt;&amp; __x,\n     ^~~~~~~~\n/usr/include/c++/6/bits/stl_iterator.h:1186:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/6/bits/stl_pair.h:59:0,\n                 from /usr/include/c++/6/utility:70,\n                 from /usr/include/c++/6/algorithm:60,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:200:28: note:   \u2018std::_List_iterator&lt;int&gt;\u2019 is not derived from \u2018const std::move_iterator&lt;_IteratorL&gt;\u2019\n       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));\n                            ^\nIn file included from /usr/include/c++/6/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/6/algorithm:61,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_iterator.h:1193:5: note: candidate: template&lt;class _Iterator&gt; decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator&lt;_IteratorL&gt;&amp;, const std::move_iterator&lt;_IteratorL&gt;&amp;)\n     operator-(const move_iterator&lt;_Iterator&gt;&amp; __x,\n     ^~~~~~~~\n/usr/include/c++/6/bits/stl_iterator.h:1193:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/6/bits/stl_pair.h:59:0,\n                 from /usr/include/c++/6/utility:70,\n                 from /usr/include/c++/6/algorithm:60,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:200:28: note:   \u2018std::_List_iterator&lt;int&gt;\u2019 is not derived from \u2018const std::move_iterator&lt;_IteratorL&gt;\u2019\n       _ValueType __value = _GLIBCXX_MOVE(*(__last - 1));\n                            ^\nIn file included from /usr/include/c++/6/bits/stl_algo.h:61:0,\n                 from /usr/include/c++/6/algorithm:62,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:201:55: error: no match for \u2018operator-\u2019 (operand types are \u2018std::_List_iterator&lt;int&gt;\u2019 and \u2018std::_List_iterator&lt;int&gt;\u2019)\n       std::__push_heap(__first, _DistanceType((__last - __first) - 1),\n                                               ~~~~~~~~^~~~~~~~~~\nIn file included from /usr/include/c++/6/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/6/algorithm:61,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_iterator.h:333:5: note: candidate: template&lt;class _Iterator&gt; decltype ((__x.base() - __y.base())) std::operator-(const std::reverse_iterator&lt;_Iterator&gt;&amp;, const std::reverse_iterator&lt;_Iterator&gt;&amp;)\n     operator-(const reverse_iterator&lt;_Iterator&gt;&amp; __x,\n     ^~~~~~~~\n/usr/include/c++/6/bits/stl_iterator.h:333:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/6/bits/stl_algo.h:61:0,\n                 from /usr/include/c++/6/algorithm:62,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:201:55: note:   \u2018std::_List_iterator&lt;int&gt;\u2019 is not derived from \u2018const std::reverse_iterator&lt;_Iterator&gt;\u2019\n       std::__push_heap(__first, _DistanceType((__last - __first) - 1),\n                                               ~~~~~~~~^~~~~~~~~~\nIn file included from /usr/include/c++/6/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/6/algorithm:61,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_iterator.h:387:5: note: candidate: template&lt;class _IteratorL, class _IteratorR&gt; decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator&lt;_Iterator&gt;&amp;, const std::reverse_iterator&lt;_IteratorR&gt;&amp;)\n     operator-(const reverse_iterator&lt;_IteratorL&gt;&amp; __x,\n     ^~~~~~~~\n/usr/include/c++/6/bits/stl_iterator.h:387:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/6/bits/stl_algo.h:61:0,\n                 from /usr/include/c++/6/algorithm:62,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:201:55: note:   \u2018std::_List_iterator&lt;int&gt;\u2019 is not derived from \u2018const std::reverse_iterator&lt;_Iterator&gt;\u2019\n       std::__push_heap(__first, _DistanceType((__last - __first) - 1),\n                                               ~~~~~~~~^~~~~~~~~~\nIn file included from /usr/include/c++/6/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/6/algorithm:61,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_iterator.h:1186:5: note: candidate: template&lt;class _IteratorL, class _IteratorR&gt; decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator&lt;_IteratorL&gt;&amp;, const std::move_iterator&lt;_IteratorR&gt;&amp;)\n     operator-(const move_iterator&lt;_IteratorL&gt;&amp; __x,\n     ^~~~~~~~\n/usr/include/c++/6/bits/stl_iterator.h:1186:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/6/bits/stl_algo.h:61:0,\n                 from /usr/include/c++/6/algorithm:62,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:201:55: note:   \u2018std::_List_iterator&lt;int&gt;\u2019 is not derived from \u2018const std::move_iterator&lt;_IteratorL&gt;\u2019\n       std::__push_heap(__first, _DistanceType((__last - __first) - 1),\n                                               ~~~~~~~~^~~~~~~~~~\nIn file included from /usr/include/c++/6/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/6/algorithm:61,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_iterator.h:1193:5: note: candidate: template&lt;class _Iterator&gt; decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator&lt;_IteratorL&gt;&amp;, const std::move_iterator&lt;_IteratorL&gt;&amp;)\n     operator-(const move_iterator&lt;_Iterator&gt;&amp; __x,\n     ^~~~~~~~\n/usr/include/c++/6/bits/stl_iterator.h:1193:5: note:   template argument deduction/substitution failed:\nIn file included from /usr/include/c++/6/bits/stl_algo.h:61:0,\n                 from /usr/include/c++/6/algorithm:62,\n                 from prog.cpp:1:\n/usr/include/c++/6/bits/stl_heap.h:201:55: note:   \u2018std::_List_iterator&lt;int&gt;\u2019 is not derived from \u2018const std::move_iterator&lt;_IteratorL&gt;\u2019\n       std::__push_heap(__first, _DistanceType((__last - __first) - 1),\n                                               ~~~~~~~~^~~~~~~~~~\n</code></pre>\n", "Title": "cannot push_heap on list<int>, works on vector", "CreationDate": "2017-02-16T22:08:10.280", "LastActivityDate": "2017-02-16T22:11:56.283", "CommentCount": "0", "PostTypeId": "1", "Id": "42285608", "Score": "0", "OwnerUserId": "997527", "Tags": "<c++>", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_42285608_42285659_0": {"length": 9, "quality": 0.9, "section_id": 1466}}, "n3337": {"so_42285608_42285659_0": {"length": 9, "quality": 0.9, "section_id": 1460}}, "n4659": {"so_42285608_42285659_0": {"length": 9, "quality": 0.9, "section_id": 1604}}}, "42285635": {"Id": "42285635", "PostTypeId": "2", "Body": "<p>The parameters to <code>push_heap</code> are random-access iterators, and <code>std::list</code> iterators are not random-access, only bidirectional.</p>\n<ul>\n<li><a href=\"http://en.cppreference.com/w/cpp/algorithm/push_heap\" rel=\"noreferrer\">http://en.cppreference.com/w/cpp/algorithm/push_heap</a></li>\n</ul>\n<blockquote>\n<p id=\"so_42285608_42285635_0\">Type requirements</p>\n<ul>\n<li><code>RandomIt</code> must meet the requirements of RandomAccessIterator.</li>\n</ul>\n</blockquote>\n", "LastActivityDate": "2017-02-16T22:10:12.570", "Score": "13", "CreationDate": "2017-02-16T22:10:12.570", "ParentId": "42285608", "CommentCount": "0", "OwnerUserId": "103167"}, "42285659": {"Id": "42285659", "PostTypeId": "2", "Body": "<p>From ISO C++14 standard at \u00a725.4.6:</p>\n<blockquote>\n<p id=\"so_42285608_42285659_0\">A heap is a particular organization of elements in a range between two <strong>random access iterators</strong> <code>[a,b)</code>.</p>\n</blockquote>\n<p>So the function requires an iterator which satisfies <code>RandomAccessIterator</code> concept but <code>std::list&lt;T&gt;::iterator</code> doesn't.</p>\n", "LastActivityDate": "2017-02-16T22:11:56.283", "Score": "7", "CreationDate": "2017-02-16T22:11:56.283", "ParentId": "42285608", "CommentCount": "0", "OwnerUserId": "121747"}});