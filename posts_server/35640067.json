post_cb({"bq_ids": {"n4140": {"so_35640067_35640129_0": {"length": 15, "quality": 0.7894736842105263, "section_id": 3255}}, "n3337": {"so_35640067_35640129_0": {"length": 15, "quality": 0.7894736842105263, "section_id": 3127}}, "n4659": {"so_35640067_35640129_0": {"length": 15, "quality": 0.7894736842105263, "section_id": 4013}}}, "35640067": {"ViewCount": "173", "Body": "<pre><code>template &lt;typename... Args&gt;\nvoid bark( int = 0, Args&amp;&amp;... args ) {}\n\nint main() {\n     bark();\n     bark(1);\n     bark(1, 2);\n}\n</code></pre>\n<p>Is this code well-formed according to the C++ Standard?</p>\n<p>The proposed duplicate does not contain the same calls of the function.</p>\n", "AcceptedAnswerId": "35640129", "Title": "Are variadic arguments after a defaulted parameter well-formed?", "CreationDate": "2016-02-25T22:55:05.347", "Id": "35640067", "CommentCount": "6", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2016-02-26T08:49:30.127", "LastEditorUserId": "298661", "LastActivityDate": "2016-02-26T08:49:30.127", "Score": "15", "OwnerUserId": "298661", "Tags": "<c++><language-lawyer><c++14><variadic-templates>", "AnswerCount": "1"}, "35640129": {"Id": "35640129", "PostTypeId": "2", "Body": "<p>Due to <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#777\">CWG 777</a>, the declaration is valid:</p>\n<blockquote>\n<p id=\"so_35640067_35640129_0\">In a given function declaration, <strong>all each parameters subsequent to a\n  parameter with a default argument</strong> shall have a default arguments\n  supplied in this or a previous declarations <strong>or shall be a function\n  parameter pack</strong>.</p>\n</blockquote>\n<p>Deduction should succeed in all three cases, since the default argument makes no difference to the nature of deduction: If no argument to the pack parameter <code>args</code> is provided, it's deduced to the empty pack via <a href=\"http://eel.is/c++draft/temp.arg.explicit#3\">[temp.arg.explicit]/3</a>, otherwise the usual rule in <a href=\"http://eel.is/c++draft/temp.deduct.call#1\">[temp.deduct.call]/1</a> applies (as the pack is clearly not in a non-deduced context). </p>\n", "LastEditorUserId": "3647361", "LastActivityDate": "2016-02-25T23:15:27.770", "Score": "14", "CreationDate": "2016-02-25T22:59:02.690", "ParentId": "35640067", "CommentCount": "0", "OwnerUserId": "3647361", "LastEditDate": "2016-02-25T23:15:27.770"}});