post_cb({"bq_ids": {"n4140": {"so_11984297_11984594_0": {"length": 13, "quality": 0.6842105263157895, "section_id": 3298}}, "n3337": {"so_11984297_11984594_0": {"length": 13, "quality": 0.6842105263157895, "section_id": 3168}}}, "11984329": {"PostTypeId": "2", "Body": "<p>in C++03 you should use</p>\n<pre><code>std::make_pair(0, 42);\n</code></pre>\n<p>since pair is not simple data-structure.\nor by calling constructor of pair i.e.</p>\n<pre><code>std::pair&lt;int, int&gt; p1(0, 42);\n</code></pre>\n<p>in C++11</p>\n<p><code>pair&lt;int, int&gt; p1 = {0, 42}</code></p>\n<p>is okay.</p>\n", "LastActivityDate": "2012-08-16T09:37:51.143", "LastEditorUserId": "1498580", "Id": "11984329", "CommentCount": "0", "CreationDate": "2012-08-16T09:30:43.797", "ParentId": "11984297", "Score": "5", "OwnerUserId": "1498580", "LastEditDate": "2012-08-16T09:37:51.143"}, "11984297": {"ViewCount": "4838", "Body": "<p>Why it's not possible to create a pair object in the following way:</p>\n<pre><code>pair&lt;int,int&gt; p1 = {0,42}\n</code></pre>\n", "Title": "Creating pair object c++", "CreationDate": "2012-08-16T09:29:12.797", "LastActivityDate": "2012-08-16T09:47:16.343", "CommentCount": "2", "PostTypeId": "1", "Id": "11984297", "Score": "1", "OwnerUserId": "1602564", "Tags": "<c++>", "AnswerCount": "2"}, "11984594": {"PostTypeId": "2", "Body": "<p>Initializer list syntax is not allowed in C++03 because <code>std::pair</code> is not an <em>aggregate</em>, therefore the valid way of initializing is a constructor call.</p>\n<p>Formal definition from the C++ standard (C++03 8.5.1 \u00a71):</p>\n<blockquote>\n<p id=\"so_11984297_11984594_0\">An aggregate is an array or a class (clause 9) with no user-declared\n  constructors (12.1), no private or protected non-static data members\n  (clause 11), no base classes (clause 10), and no virtual functions\n  (10.3).</p>\n</blockquote>\n<p>Please read <a href=\"https://stackoverflow.com/questions/4178175/what-are-aggregates-and-pods-and-how-why-are-they-special/4178176#4178176\">FAQ</a> for a detailed explanation.</p>\n<p>Things are changed in C++11 by introduction of <code>std::initializer_list</code>.</p>\n", "LastActivityDate": "2012-08-16T09:47:16.343", "LastEditorUserId": "-1", "Id": "11984594", "CommentCount": "0", "CreationDate": "2012-08-16T09:47:16.343", "ParentId": "11984297", "Score": "4", "OwnerUserId": "1345960", "LastEditDate": "2017-05-23T11:50:38.783"}});