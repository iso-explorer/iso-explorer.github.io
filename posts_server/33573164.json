post_cb({"33573164": {"CommentCount": "0", "AcceptedAnswerId": "33573346", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2015-11-06T18:18:59.037", "LastActivityDate": "2015-11-06T18:43:55.177", "LastEditDate": "2017-05-23T12:15:47.903", "ViewCount": "186", "FavoriteCount": "1", "Title": "Implicit conversion with operator", "Id": "33573164", "Score": "9", "Body": "<p>This is in part inspired by <a href=\"https://stackoverflow.com/questions/33572768/possible-to-overload-operator-to-multiple-an-int-and-a-char\">this</a> question. When I write the code:</p>\n<pre><code>void test(std::string inp)\n{\n  std::cout &lt;&lt; inp &lt;&lt; std::endl;\n}\n\nint main(void)\n{\n  test(\"test\");\n  return 0;\n}\n</code></pre>\n<p><code>\"test\"</code> is implicitly converted from <code>const char*</code> to <code>std::string</code>, and I get the expected output. However, when I try this:</p>\n<pre><code>std::string operator*(int lhs, std::string rhs)\n{\n  std::string result = \"\";\n\n  for(int i = 0; i &lt; lhs; i++)\n  {\n    result += rhs;\n  }\n\n  return result;\n}\n\nint main(void)\n{\n  std::string test = 5 * \"a\";\n  return 0;\n}\n</code></pre>\n<p>I get the compiler error, <code>invalid operands of types 'int' and 'const char [2]' to binary 'operator*'</code>. <code>\"a\"</code> was not implicitly converted to <code>std::string</code> here, instead it remained a <code>const char*</code>. Why is the compiler able to determine the need for an implicit conversion in the case of a function call, but not for the case of an operator?</p>\n", "Tags": "<c++><operator-overloading>", "OwnerUserId": "5195699", "AnswerCount": "1"}, "33573346": {"ParentId": "33573164", "CommentCount": "2", "Body": "<p>Indeed, operators have different rules from other kinds of functions.</p>\n<blockquote>\n<p id=\"so_33573164_33573346_0\">If no operand of an operator in an expression has a type that is a class or an enumeration, the operator\n  is assumed to be a built-in operator and interpreted according to Clause 5.</p>\n</blockquote>\n<p>([over.match.oper]/1)</p>\n", "OwnerUserId": "481267", "PostTypeId": "2", "Id": "33573346", "Score": "8", "CreationDate": "2015-11-06T18:30:34.057", "LastActivityDate": "2015-11-06T18:30:34.057"}, "bq_ids": {"n4140": {"so_33573164_33573346_0": {"section_id": 582, "quality": 1.0, "length": 13}}, "n3337": {"so_33573164_33573346_0": {"section_id": 572, "quality": 1.0, "length": 13}}, "n4659": {"so_33573164_33573346_0": {"section_id": 605, "quality": 1.0, "length": 13}}}});