post_cb({"28780713": {"ParentId": "28780479", "CommentCount": "0", "CreationDate": "2015-02-28T10:34:15.070", "OwnerUserId": "3425536", "PostTypeId": "2", "Id": "28780713", "Score": "1", "Body": "<blockquote>\n<p id=\"so_28780479_28780713_0\">How can I effectively pass a pointer to an array of A* in the constructor of C?</p>\n</blockquote>\n<pre><code>C(array_id);\n</code></pre>\n<p>The problem is that the <code>C</code> constructor doesn't accept an array of <code>A*</code>, it accepts an <code>A*</code>.</p>\n<p>If you want to pass an array of <code>A*</code> to the <code>C</code> constructor then you need to declare it to take an <code>A**</code>:</p>\n<pre><code>C(A** a_array)\n</code></pre>\n<p>Or, equivalently:</p>\n<pre><code>C(A* a_array[])\n</code></pre>\n", "LastActivityDate": "2015-02-28T10:34:15.070"}, "28780720": {"ParentId": "28780479", "CommentCount": "0", "CreationDate": "2015-02-28T10:35:24.287", "OwnerUserId": "2593814", "PostTypeId": "2", "Id": "28780720", "Score": "2", "Body": "<p>According to the C++ Standard</p>\n<blockquote>\n<p id=\"so_28780479_28780720_0\">4.2 Array-to-pointer conversion [conv.array]<br>\n  An lvalue or rvalue of type \u201carray of N T\u201d or \u201carray of unknown bound of T\u201d can be converted\n  to a prvalue of type \u201cpointer to T\u201d. The result is a pointer to the\n  first element of the array.</br></p>\n</blockquote>\n<p>Modify your code like this:</p>\n<pre><code>   class C {\n\n        public:\n        typedef A* PTA[SOME_CONST];\n        C(PTA a_array) : _array(a_array) {}\n        private:\n        A** _array;//Note this line,type decays.\n    };\n</code></pre>\n", "LastActivityDate": "2015-02-28T10:35:24.287"}, "28780479": {"CommentCount": "7", "ViewCount": "76", "PostTypeId": "1", "LastEditorUserId": "1688591", "CreationDate": "2015-02-28T10:03:33.817", "LastActivityDate": "2015-02-28T10:35:24.287", "Title": "Passing a pointer to an array in a constructor", "AcceptedAnswerId": "28780720", "LastEditDate": "2015-02-28T10:10:41.557", "Id": "28780479", "Score": "0", "Body": "<p>I need to pass a pointer to an array in a constructor (I am aware that using plain arrays in C++ is considered by many as bad practice, but for now I just want to go ahead with it).</p>\n<p>Please consider the following code:</p>\n<pre><code>// let's omit includes\n\nclass A {\n   // irrelevant\n}\n\nclass B {\n    public:\n    //irrelevant\n    void someMethod() {\n        _c = new C(array_id);\n    }\n\n    private:\n    C* _c;\n    A* array_id[SOME_CONST];\n}\n\nclass C {\n    public:\n    C(A* a_array) : _array(a_array) {}\n    private:\n    A* _array;\n}\n</code></pre>\n<p>Trying to compile will result in a:</p>\n<pre><code>error: no matching function for call to C::C(A* [SOME_CONST])'\n</code></pre>\n<p>As far as I know, the identifier of an array decays to a pointer to the first element of the array, but it seems that it cannot be used directly. How can I effectively pass a pointer to an array of A* in the constructor of C?</p>\n", "Tags": "<c++><arrays><pointers>", "OwnerUserId": "1688591", "AnswerCount": "3"}, "28780529": {"ParentId": "28780479", "CommentCount": "1", "CreationDate": "2015-02-28T10:10:55.367", "OwnerUserId": "440558", "PostTypeId": "2", "Id": "28780529", "Score": "1", "Body": "<p>You have two problems: The first is that you're calling the <code>C</code> constructor with an array <em>of pointers</em>, not an array. The second problem is that you're trying to assign that allocation to an incompatible type.</p>\n<p>Solution <em>might</em> be something like</p>\n<pre><code>class B\n{\npublic:\n    void someMethod()\n    {\n        my_c = new C(my_a_array);\n    }\n\nprivate:\n    A my_a_array[SOME_CONST];\n    C* my_c;\n};\n</code></pre>\n<p>That will allocate a <em>single</em> object of type <code>C</code>, passing the <em>array</em> of <code>A</code> objects to it.</p>\n", "LastActivityDate": "2015-02-28T10:10:55.367"}, "bq_ids": {"n4140": {"so_28780479_28780720_0": {"section_id": 11, "quality": 0.8571428571428571, "length": 18}}, "n3337": {"so_28780479_28780720_0": {"section_id": 8, "quality": 0.8571428571428571, "length": 18}}, "n4659": {"so_28780479_28780720_0": {"section_id": 12, "quality": 0.8095238095238095, "length": 17}}}});