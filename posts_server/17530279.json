post_cb({"bq_ids": {"n4140": {"so_17530279_17530324_0": {"length": 22, "quality": 1.0, "section_id": 3913}, "so_17530279_17530324_1": {"length": 13, "quality": 0.7222222222222222, "section_id": 3913}, "so_17530279_17530324_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 7218}}, "n3337": {"so_17530279_17530324_0": {"length": 22, "quality": 1.0, "section_id": 3773}, "so_17530279_17530324_1": {"length": 13, "quality": 0.7222222222222222, "section_id": 3773}, "so_17530279_17530324_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 6962}}, "n4659": {"so_17530279_17530324_5": {"length": 5, "quality": 0.625, "section_id": 823}, "so_17530279_17530324_1": {"length": 12, "quality": 0.6666666666666666, "section_id": 4799}, "so_17530279_17530324_2": {"length": 7, "quality": 0.7777777777777778, "section_id": 4799}}}, "17530279": {"ViewCount": "2758", "Body": "<p>Let's say we have function like this</p>\n<pre><code>void test() {return;}\n</code></pre>\n<p>Is is it correct C code? I just tested it in mingw and compiler says nothing, the same for </p>\n<pre><code>void test() {return 1;}\n</code></pre>\n<p>So I guess I have really outdated compiler.</p>\n<p>What should happen in given cases in both C/C++?</p>\n<p><strong>EDIT</strong>: </p>\n<p>The <code>return 1;</code> gives me a warning. Does this mean <code>return;</code> is correct?</p>\n", "AcceptedAnswerId": "17530324", "Title": "What happens if void type function returns nothing?", "CreationDate": "2013-07-08T15:18:46.903", "Id": "17530279", "CommentCount": "9", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2013-07-08T15:32:17.567", "LastEditorUserId": "813111", "LastActivityDate": "2013-07-09T03:31:00.627", "Score": "4", "OwnerUserId": "670700", "Tags": "<c++><c>", "AnswerCount": "3"}, "17539434": {"Id": "17539434", "PostTypeId": "2", "Body": "<p>The return statement without an expression is the correct way to return from a function that returns void. </p>\n<p>But, if you want to provide an expression in the return statement, then you should consider:</p>\n<pre><code>return (void)(expr);\n</code></pre>\n<p>Here, the <code>expr</code> is any expression that you want to include to have <code>side-effects</code>. As a suggestion, if you want to place a statement for its side-effect, then you should place it before the return statement as :</p>\n<pre><code>expr;\nreturn;\n</code></pre>\n", "LastActivityDate": "2013-07-09T03:31:00.627", "CommentCount": "0", "CreationDate": "2013-07-09T03:31:00.627", "ParentId": "17530279", "Score": "0", "OwnerUserId": "2318505"}, "17530324": {"Id": "17530324", "PostTypeId": "2", "Body": "<p>C++11(ISO/IEC 14882:2011) \u00a76.6.3 <em>The return statement</em></p>\n<blockquote>\n<p id=\"so_17530279_17530324_0\">A return statement without an expression can be used only in functions that do not return a value, that is, a function with the return type void, a constructor, or a destructor. A return statement with an expression of non-void type can be used only in functions returning a value</p>\n</blockquote>\n<p>C11(ISO/IEC 9899:201x) \u00a76.8.6.4 <em>The return statement</em></p>\n<blockquote>\n<p id=\"so_17530279_17530324_1\">A return statement with an expression shall not appear in a function whose return type is void. A return statement without an expression shall only appear in a function whose return type is void.</p>\n</blockquote>\n<p>However, C89/C90 only constraints on half of it:</p>\n<p>C89/C90(ISO/IEC 9899:1990) \u00a73.6.6.4 <em>The return statement</em></p>\n<blockquote>\n<p id=\"so_17530279_17530324_2\">A return statement with an expression shall not appear in a function whose return type is void .</p>\n</blockquote>\n<p>In the C11 <em>Forward</em> section, it lists all the major changes in the third(i.e, C11) and second edition(i.e, C99). The last one of them is:</p>\n<blockquote>\n<p id=\"so_17530279_17530324_3\">Major changes in the second edition included:</p>\n<p id=\"so_17530279_17530324_4\">...  </p>\n<p id=\"so_17530279_17530324_5\">\u2014 return without expression not permitted in function that returns a value (and vice\n  versa)</p>\n</blockquote>\n<p>This means that the constraint change of function return type is changed since C99.</p>\n", "LastEditorUserId": "1009479", "LastActivityDate": "2013-07-09T02:34:47.117", "Score": "17", "CreationDate": "2013-07-08T15:21:42.987", "ParentId": "17530279", "CommentCount": "7", "OwnerUserId": "1009479", "LastEditDate": "2013-07-09T02:34:47.117"}, "17530417": {"Id": "17530417", "PostTypeId": "2", "Body": "<p>Void returns nothing so its obvious compiler won't do anything. If you want to return a value you must define the type whether int ,pointer node etc. etc.</p>\n", "LastActivityDate": "2013-07-08T15:27:21.540", "CommentCount": "1", "CreationDate": "2013-07-08T15:27:21.540", "ParentId": "17530279", "Score": "0", "OwnerUserId": "2456752"}});