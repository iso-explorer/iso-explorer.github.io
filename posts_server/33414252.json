post_cb({"bq_ids": {"n4140": {"so_33414252_33414417_2": {"length": 11, "quality": 1.0, "section_id": 5452}, "so_33414252_33414417_1": {"length": 11, "quality": 1.0, "section_id": 5452}}, "n4659": {"so_33414252_33414417_2": {"length": 11, "quality": 1.0, "section_id": 6878}, "so_33414252_33414417_1": {"length": 11, "quality": 1.0, "section_id": 6878}}}, "33414252": {"ViewCount": "1499", "LastEditDate": "2015-10-29T12:35:01.047", "AcceptedAnswerId": "33414417", "Title": "Does auto return type deduction force multiple functions to have the same return type?", "CreationDate": "2015-10-29T12:27:12.073", "LastActivityDate": "2015-10-30T20:08:04.700", "CommentCount": "6", "Body": "<p>Consider the below snippet:</p>\n<pre><code>struct A\n{\n  auto foo(), bar();\n};\n\nauto A::foo() { return 1; }\nauto A::bar() { return 'a'; }\n\nint main()\n{\n\n}\n</code></pre>\n<p>It compiles fine in Clang++ 3.7.0.</p>\n<p>It <a href=\"http://coliru.stacked-crooked.com/a/aaed22cd1a6c550f\">fails</a> in G++ 5.2.0:</p>\n<pre><code>main.cpp: In member function 'auto A::bar()':\nmain.cpp:7:24: error: inconsistent deduction for 'auto': 'int' and then 'char'\nauto A::bar() { return 'a'; }\n</code></pre>\n<p>Does auto return type deduction force multiple functions, declared in a single statement, to have the same return type?</p>\n", "PostTypeId": "1", "LastEditorUserId": "391022", "Id": "33414252", "AnswerCount": "2", "Score": "34", "OwnerUserId": "391022", "Tags": "<c++><c++14><auto><return-type-deduction>", "FavoriteCount": "1"}, "33414417": {"Id": "33414417", "PostTypeId": "2", "LastEditDate": "2015-10-30T20:08:04.700", "CommentCount": "9", "LastEditorUserId": "962089", "LastActivityDate": "2015-10-30T20:08:04.700", "CreationDate": "2015-10-29T12:35:12.010", "ParentId": "33414252", "Score": "25", "Body": "<p>Based on the following, GCC has the right behaviour in this case, but only by coincidence (see below):</p>\n<blockquote>\n<p id=\"so_33414252_33414417_0\">\u00a77.1.6.4 [dcl.spec.auto]/8</p>\n<blockquote>\n<p id=\"so_33414252_33414417_2\">If the init-declarator-list contains more than one init-declarator, they shall all form declarations of variables.</p>\n</blockquote>\n</blockquote>\n<p>Why only by coincidence? The error message is a clue. Changing the functions to deduce the same return type causes GCC to compile the code. While it's correct in giving an error here, albeit a misleading one, it only does so when the deduced type is inconsistent. It should always give an error.</p>\n", "OwnerUserId": "962089"}, "33414407": {"Id": "33414407", "PostTypeId": "2", "Body": "<p>Yes.</p>\n<p><code>auto</code> doesn't mean \"any type\", it means a specific type that the compiler is supposed to deduce.</p>\n<p>This is not specific to function declarations, <code>auto i = 1, f = 4.7;</code> doesn't work either.</p>\n<p>Also, declaring multiple functions in a single statement doesn't seem like a good idea anyway.</p>\n", "Score": "24", "LastActivityDate": "2015-10-29T12:34:39.767", "CreationDate": "2015-10-29T12:34:39.767", "ParentId": "33414252", "CommentCount": "1", "OwnerUserId": "597607"}});