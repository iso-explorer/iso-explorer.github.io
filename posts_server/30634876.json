post_cb({"bq_ids": {"n4140": {"so_30634876_30634953_0": {"length": 38, "quality": 0.7450980392156863, "section_id": 361}}, "n3337": {"so_30634876_30634953_0": {"length": 38, "quality": 0.7450980392156863, "section_id": 351}}, "n4659": {"so_30634876_30634953_0": {"length": 38, "quality": 0.7450980392156863, "section_id": 373}}}, "30634876": {"ViewCount": "82", "Body": "<p>The question is pretty much in the title. Consider an empty class within the simple program, say</p>\n<pre><code>struct A{ };\n\nint main(){ }\n</code></pre>\n<p>Does compiler have to instantiate all these functions anyway or it's implementation defined? I mean, intstatiate these functions in the case they are called only (I presume, compiler may determine if they are called somehow). </p>\n", "Title": "Does compiler instantiate default and copy constructors and copy assignment operator every time?", "CreationDate": "2015-06-04T04:21:45.320", "LastActivityDate": "2015-06-04T06:37:07.837", "CommentCount": "2", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "Id": "30634876", "Score": "0", "Tags": "<c++><constructor>", "AnswerCount": "2"}, "30636639": {"Id": "30636639", "PostTypeId": "2", "Body": "<p>At the time of object creation, if compiler finds that there is no constructor defined for your class, it generates one for you. Constructors are functions that are required to initialize the data members of a class (and to perform other crucial operations such as setting up VTABLE and defining a VPTR - if your class declaration has atleast one virtual function).</p>\n<p>At the time of a new object creation by copy constructor or copy-assignment operator (i.e, when creating an object from an existing object), the compiler-generated copy constructor would perform a mere shallow copy (plain bit-wise copy) of values of the data members (that could lead to a dangling-pointer situation - if your class has a pointer data member and you happen to create more than one reference/pointer to your class object, and then the object gets destroyed via one of those - due to some intentional/un-intentional reason, leading to a crash if you access those dangling pointer(s)). Hence its always advised to define your own copy constructor and copy assignment operator, and perform a 'deep copy' of your pointer whenever your class has a \"pointer data member\".</p>\n", "LastActivityDate": "2015-06-04T06:37:07.837", "Score": "1", "CreationDate": "2015-06-04T06:37:07.837", "ParentId": "30634876", "CommentCount": "0", "OwnerUserId": "2717002"}, "30634953": {"Id": "30634953", "PostTypeId": "2", "Body": "<p>The special member functions are implicitly declared, unless they are <a href=\"https://stackoverflow.com/q/19630570/241631\">odr-used</a>, in which case they will be implicitly defined.</p>\n<p>From N3337, <em>\u00a712/1 [special]</em></p>\n<blockquote>\n<p id=\"so_30634876_30634953_0\">The default constructor (12.1), copy constructor and copy assignment operator (12.8), move constructor and move assignment operator (12.8), and destructor (12.4) are special member functions. [ <em>Note:</em> The\n  implementation will implicitly declare these member functions for some class types when the program does not explicitly declare them. The implementation will implicitly define them if they are odr-used (3.2). See 12.1, 12.4 and 12.8. <em>\u2014end note</em> ]</p>\n</blockquote>\n", "LastActivityDate": "2015-06-04T04:29:23.743", "Score": "4", "CreationDate": "2015-06-04T04:29:23.743", "ParentId": "30634876", "CommentCount": "0", "OwnerUserId": "241631"}});