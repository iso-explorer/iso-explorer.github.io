post_cb({"34712225": {"ParentId": "34711966", "CommentCount": "0", "Body": "<p>The variable <code>y</code> of the function func() has <strong><code>static</code></strong> storage duration:</p>\n<blockquote>\n<p id=\"so_34711966_34712225_0\"><strong>3.7.1/1:</strong> All variables which do not have dynamic storage duration, do not have thread storage duration, and are not local have static\n  storage duration. The storage for these entities shall last for the\n  duration of the program</p>\n<p id=\"so_34711966_34712225_1\"><strong>3.7.1/3:</strong> The keyword static can be used to declare a local variable with static storage duration.</p>\n</blockquote>\n<p>The initialisation of such variables occurs only once.  This means that the first time you use <code>y</code> its value is 20, afterwards it keeps the value that you store there in.  </p>\n<p><strong>Case 1:  assignment is commented out:</strong></p>\n<p>The statement <code>fun() = 30;</code> will store 30 in y.  <code>cout &lt;&lt; fun()</code> will use the reference to y without <code>fun()</code> changing it, so it will display 30. </p>\n<p><strong>Case 2:  assignment is activated:</strong></p>\n<p>The statement <code>fun() = 30;</code> will store 30 in y.  <code>cout &lt;&lt; fun()</code> will use the reference to y but <code>fun()</code> will first set it to 40, so 40 will be displayed. </p>\n", "OwnerUserId": "3723423", "PostTypeId": "2", "Id": "34712225", "Score": "1", "CreationDate": "2016-01-10T23:53:58.353", "LastActivityDate": "2016-01-10T23:53:58.353"}, "34711966": {"CommentCount": "4", "AcceptedAnswerId": "34712225", "PostTypeId": "1", "LastEditorUserId": "5470596", "CreationDate": "2016-01-10T23:20:59.280", "LastActivityDate": "2016-01-10T23:53:58.353", "LastEditDate": "2016-01-10T23:22:52.893", "ViewCount": "38", "FavoriteCount": "1", "Title": "C++ code while returning reference to integer", "Id": "34711966", "Score": "2", "Body": "<p>I tried the following piece of code:</p>\n<pre><code>int&amp; fun()\n{\n    static int y = 20;\n    //y = 40;\n    return y;\n}\nint main()\n{\n    fun() = 30;\n    cout &lt;&lt; fun() &lt;&lt;endl;\n    return 0;\n}\n</code></pre>\n<p>If, line <code>y = 40</code> were uncommented, output of main is <code>40</code>. Why doesn't the value of <code>y</code> change when it's assigned to <code>30</code> in <code>main()</code> ?  </p>\n", "Tags": "<c++><reference>", "OwnerUserId": "4728046", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_34711966_34712225_0": {"section_id": 7164, "quality": 0.8571428571428571, "length": 18}, "so_34711966_34712225_1": {"section_id": 7166, "quality": 0.8181818181818182, "length": 9}}, "n3337": {"so_34711966_34712225_0": {"section_id": 6908, "quality": 0.8571428571428571, "length": 18}, "so_34711966_34712225_1": {"section_id": 6910, "quality": 0.8181818181818182, "length": 9}}, "n4659": {"so_34711966_34712225_0": {"section_id": 8672, "quality": 0.8571428571428571, "length": 18}, "so_34711966_34712225_1": {"section_id": 8674, "quality": 0.8181818181818182, "length": 9}}}});