post_cb({"25375833": {"CommentCount": "6", "ViewCount": "43", "OwnerDisplayName": "user2953119", "CreationDate": "2014-08-19T04:49:34.190", "LastActivityDate": "2014-08-19T04:49:34.190", "Title": "Complete object and initialization, using delegating constructor", "PostTypeId": "1", "Id": "25375833", "Score": "0", "Body": "<p>I have one misunderstanding about delegating constructor. A delegating constructor is defined as follows (12.6.2/6 N3797):</p>\n<blockquote>\n<p id=\"so_25375833_25375833_0\">A mem-initializer-list can delegate to another constructor of the\n  constructor\u2019s class using any class-ordecltype that denotes the\n  constructor\u2019s class itself.</p>\n</blockquote>\n<p>and 12.6.2/8:</p>\n<blockquote>\n<p id=\"so_25375833_25375833_1\"><strong>After the call to a constructor for class X has completed</strong>, if a member\n  of X is neither initialized nor given a value during execution of the\n  compound-statement of the body of the constructor, the member has\n  indeterminate value.</p>\n</blockquote>\n<p>That is, X is complete after the execution of one's constructor body is complete. In the case of delegating constructor, like the following:</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing std::cout;\nusing std::endl;\n\nstruct A\n{\n    A(int)    \n    {\n        cout &lt;&lt; \"A(int)\" &lt;&lt; endl;\n    }\n\n    A() : A(4)\n    {\n        cout &lt;&lt; \"A()\" &lt;&lt; endl;\n    }\n};\n\nA a;\n\nint main()\n{\n\n}\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/4ab301ad6b61af9d\" rel=\"nofollow\">demo</a></p>\n<p>In the case whether object a is completed <code>A(int)</code> body has completed or it is completed after <code>A()</code> body has completed? </p>\n", "Tags": "<c++><constructor>", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_25375833_25375833_0": {"section_id": 433, "quality": 1.0, "length": 13}, "so_25375833_25375833_1": {"section_id": 435, "quality": 1.0, "length": 19}}, "n3337": {"so_25375833_25375833_0": {"section_id": 425, "quality": 1.0, "length": 13}, "so_25375833_25375833_1": {"section_id": 427, "quality": 1.0, "length": 19}}, "n4659": {"so_25375833_25375833_0": {"section_id": 451, "quality": 1.0, "length": 13}, "so_25375833_25375833_1": {"section_id": 454, "quality": 1.0, "length": 19}}}});