post_cb({"3044434": {"Id": "3044434", "PostTypeId": "2", "Body": "<p>Provided you take the appropriate precautions, then using a <code>CComPtr</code> as a static member is not inherently evil.</p>\n<p>By \"appropriate precautions\", I mean you should consider:</p>\n<ul>\n<li>Mutexing access to it;</li>\n<li>Ensuring that it has been initialised\nbefore usage;</li>\n<li>Maintining a mutexed, static instance count for your own class;</li>\n<li>Ensuring that <a href=\"http://msdn.microsoft.com/en-us/library/66h3zeec.aspx\" rel=\"nofollow noreferrer\"><code>CComPtr::Release</code></a> is called in your class' own <a href=\"http://msdn.microsoft.com/en-us/library/ea0ca499.aspx\" rel=\"nofollow noreferrer\"><code>FinalRelease</code></a> method when the instance count reaches zero.</li>\n</ul>\n", "LastEditorUserId": "47348", "LastActivityDate": "2010-06-15T11:25:41.913", "Score": "2", "CreationDate": "2010-06-15T10:49:54.587", "ParentId": "3044024", "CommentCount": "0", "LastEditDate": "2010-06-15T11:25:41.913", "OwnerUserId": "47348"}, "bq_ids": {"n4140": {"so_3044024_46068521_0": {"length": 46, "quality": 0.71875, "section_id": 7156}}, "n3337": {"so_3044024_46068521_0": {"length": 46, "quality": 0.71875, "section_id": 6900}}, "n4659": {"so_3044024_46068521_0": {"length": 34, "quality": 0.53125, "section_id": 8663}}}, "46068521": {"Id": "46068521", "PostTypeId": "2", "Body": "<p>As Sergey said in his comment, I think it is bad. Destructors of static objects are called after main terminates as explained in section\u00a7 3.6.3 of the C++03 standard:</p>\n<blockquote>\n<p id=\"so_3044024_46068521_0\">Destructors (12.4) for initialized objects of static storage duration (declared at block scope or at namespace scope) are called as a result of returning from main and as a result of calling exit (18.3). These objects are destroyed in the reverse order of the completion of their constructor or of the completion of their dynamic initialization. If an object is initialized statically, the object is destroyed in the same order as if the object was dynamically initialized. For an object of array or class type, all subobjects of that object are destroyed before any local object with static storage duration initialized during the construction of the sub- objects is destroyed.</p>\n</blockquote>\n<p>and as demoed here: <a href=\"http://www.geeksforgeeks.org/static-objects-destroyed/\" rel=\"nofollow noreferrer\">http://www.geeksforgeeks.org/static-objects-destroyed/</a>.</p>\n<p>But <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms688715(v=vs.85).aspx\" rel=\"nofollow noreferrer\">CoUninitialize</a> which cleans the COM library on the main thread is called before Main terminates. CoUninitialize will clean up all remaining resources as explained in the msdn documentation. We should call the Release method of COM objects before CoUninitialize is called because they won't exist anymore after and therefore we should make sure that calls to CComPtr destructor happen before CoUninitialize is called. Therefore a CComPtr should not be made static.</p>\n", "LastEditorUserId": "8305787", "LastActivityDate": "2017-09-06T09:29:33.487", "Score": "0", "CreationDate": "2017-09-06T06:45:28.770", "ParentId": "3044024", "CommentCount": "0", "LastEditDate": "2017-09-06T09:29:33.487", "OwnerUserId": "8305787"}, "3057729": {"Id": "3057729", "PostTypeId": "2", "Body": "<p>it is a bad idea anyway</p>\n", "LastActivityDate": "2010-06-16T22:50:42.250", "CommentCount": "0", "CreationDate": "2010-06-16T22:50:42.250", "ParentId": "3044024", "Score": "0", "OwnerUserId": "106688"}, "3044024": {"ViewCount": "496", "Body": "<p>Is it bad idea to have static CComPtr member variables in an application.\nSince we cannt control destruction of static variable and it can happen after CoUninitialze .</p>\n", "AcceptedAnswerId": "3044434", "Title": "Static CComPtr Variable", "CreationDate": "2010-06-15T09:36:43.813", "Id": "3044024", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2017-09-06T09:29:33.487", "Score": "2", "OwnerUserId": "33411", "Tags": "<visual-c++><com><static><object-destruction>", "AnswerCount": "3"}});