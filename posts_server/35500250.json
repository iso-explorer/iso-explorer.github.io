post_cb({"35500250": {"CommentCount": "2", "AcceptedAnswerId": "35500294", "CreationDate": "2016-02-19T08:02:29.627", "LastActivityDate": "2016-02-19T08:22:28.987", "PostTypeId": "1", "ViewCount": "84", "FavoriteCount": "0", "Title": "Should I use a reference?", "Id": "35500250", "Score": "3", "Body": "<p>I have a class containing an implementation pointer. Therefore, in some functions, I refer to a member of the implementation several times. Is it a good idea to write</p>\n<pre><code>// approach 1\nstd::string &amp; str = m_pImpl-&gt;m_str;\nstr.clear();\nstr += \"blablabla\";\n// ...\nreturn str.c_str();\n</code></pre>\n<p>once and use the reference to save the pointer indirection, or should I save the reference variable (This is always 4 or 8 bytes, like a pointer, right?)?</p>\n<pre><code>// approach 2\nm_pImpl-&gt;m_str.clear();\nm_pImpl-&gt;m_str += \"blablabla\";\n// ...\nreturn m_pImpl-&gt;m_str.c_str();\n</code></pre>\n<p>In my usecase the variable m_pImpl-&gt;m_str is used about 10 to 20 times. I am afraid I can hardly profile the performance difference between these two approaches. Does anybody know or can anybody test it makes a difference? Does this depend on how often I use the variable (one time versus 20 times versus 10000 times)? Or does a decent compiler do the same thing as approach 1 anyway?</p>\n", "Tags": "<c++><performance><micro-optimization>", "OwnerUserId": "4675398", "AnswerCount": "2"}, "35500294": {"ParentId": "35500250", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Don't try to do the job of a modern compiler as they place a lot of emphasis on code optimisation: shy away from purported improvement tricks such as these.</p>\n<p>Not only is it obfuscating but approach 1 is also vulnerable to an errant refactorer dropping the <code>&amp;</code> in the definition of <code>str</code>: if that is ever done then the returned pointer will be <em>dangling</em> and the program behaviour <em>undefined</em>! It's for these reasons that I would disallow approach 1 in my codebase.</p>\n", "OwnerUserId": "2380830", "LastEditorUserId": "2380830", "LastEditDate": "2016-02-19T08:22:28.987", "Id": "35500294", "Score": "4", "CreationDate": "2016-02-19T08:05:23.767", "LastActivityDate": "2016-02-19T08:22:28.987"}, "bq_ids": {"n4140": {"so_35500250_35500308_0": {"section_id": 3221, "quality": 1.0, "length": 5}}, "n3337": {"so_35500250_35500308_0": {"section_id": 3095, "quality": 1.0, "length": 5}}, "n4659": {"so_35500250_35500308_0": {"section_id": 3978, "quality": 1.0, "length": 5}}}, "35500308": {"ParentId": "35500250", "CommentCount": "0", "Body": "<p>From 8.3.2 References \u00a74</p>\n<blockquote>\n<p id=\"so_35500250_35500308_0\">It is unspecified whether or not a reference requires storage</p>\n</blockquote>\n<p>So I would suggest use the code that looks more readable to you and leave the rest to the compiler.</p>\n", "OwnerUserId": "2659313", "PostTypeId": "2", "Id": "35500308", "Score": "3", "CreationDate": "2016-02-19T08:06:14.813", "LastActivityDate": "2016-02-19T08:06:14.813"}});