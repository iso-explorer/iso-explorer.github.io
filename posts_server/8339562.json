post_cb({"8339697": {"ParentId": "8339562", "CommentCount": "0", "Body": "<pre><code>class MyClass; // why doesn't this work?\n</code></pre>\n<p>This is a <em>forward declaration</em> - it declares that the class exists, but doesn't provide the information needed to do much with it.</p>\n<p>With just a forward declaration, you can do a few things, including declaring a pointer or reference to it, and declaring a function with it as an argument or return value. You can't instantiate it, inherit from it, access any of its members, or do various other things without the full definition, for which you need to include the header file.</p>\n<blockquote>\n<p id=\"so_8339562_8339697_0\">I could just include the file, but what would be the purpose of linkage?</p>\n</blockquote>\n<p>A header file often contains declarations of functions and objects, which can then be fully defined in a separate source file and not included by files using them. That is the purpose of linkage, but it doesn't extend to allowing class definitions to be in separate source files.</p>\n", "OwnerUserId": "204847", "PostTypeId": "2", "Id": "8339697", "Score": "1", "CreationDate": "2011-12-01T10:18:30.723", "LastActivityDate": "2011-12-01T10:18:30.723"}, "8339562": {"CommentCount": "4", "ViewCount": "121", "CreationDate": "2011-12-01T10:09:56.143", "LastActivityDate": "2011-12-01T11:07:59.177", "Title": "Linkage of classes", "AcceptedAnswerId": "8340350", "PostTypeId": "1", "Id": "8339562", "Score": "0", "Body": "<p>Do classes have external linkage? If so, why couldn't I get the following to work on gcc?</p>\n<pre><code>// mycpp1.cpp\n\nclass MyClass\n{\n    int x;\n    // ......\n};\n</code></pre>\n<p>`</p>\n<pre><code>// mycpp2.cpp\n\nclass MyClass; // why doesn't this work?\n</code></pre>\n<p>I've done some googling around and came around this,</p>\n<p>C++ Standard</p>\n<blockquote>\n<p id=\"so_8339562_8339562_0\">(3.5/4) a named class (clause 9), or an unnamed class defined in a\n  typedef declaration in which the class has the typedef name for\n  linkage purposes (7.1.3);</p>\n</blockquote>\n<p>I could just include the file, but what would be the purpose of linkage?</p>\n", "Tags": "<c++>", "OwnerUserId": "974191", "AnswerCount": "3"}, "8339610": {"ParentId": "8339562", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>You should be doing this:</p>\n<ul>\n<li><p>Header File : declaration should go in <code>.h</code> file</p>\n<pre><code>// mycpp1.h \nclass MyClass\n{\n   int x;\n   void f(); //only declaration\n};\n</code></pre></li>\n<li><p>Source File : : definition should go in <code>.cpp</code> file</p>\n<pre><code> // mycpp1.cpp\n #include \"mycpp1.h\"\n\n void MyClass::f() //definition of member function\n {\n    //code\n }\n</code></pre></li>\n</ul>\n<p>and then use <code>MyClass</code> as</p>\n<pre><code>// mycpp2.cpp\n#include \"mycpp1.h\"\n\nMyClass instance; // it should work!\n</code></pre>\n<p>I would suggest you to pick a good introductory book on C++. Here is a comprehensive list of good books on C++:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list\">The Definitive C++ Book Guide and List</a></li>\n</ul>\n", "OwnerUserId": "415784", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:58:56.553", "Id": "8339610", "Score": "2", "CreationDate": "2011-12-01T10:12:59.487", "LastActivityDate": "2011-12-01T10:27:24.383"}, "8340350": {"ParentId": "8339562", "CommentCount": "3", "Body": "<p>Why I half agree with Nawez that you shouldn't worry too much about\nlinkage, it is nice to understand it, so you know why the coding pattern\nyou're using works (and why other patterns don't).  Linkage defines how\na name (a symbol) is bound to an entity (variable, function, type,\netc.).  External linkage means that the name (or the qualified version\nof it) binds to the same entity in all of the translation units: in your\ncase, that <code>MyClass</code> is the same class in all of the translation units.\nIt doesn't mean that all translation units automatically know how it is\ndefined; just that <code>MyClass</code> in <code>mycpp1.cpp</code> is the same type as\n<code>MyClass</code> in <code>mycpp2.cpp</code>.  For various reasons related to compiler and\nlinker technology, you still have to provide a definition in every source \n(preferably by means of an include) that uses it, but these definitions\nare required to be identical (which is why the include is preferred),\nbecause the compiler will generate code treating them as identical.</p>\n", "OwnerUserId": "649665", "PostTypeId": "2", "Id": "8340350", "Score": "2", "CreationDate": "2011-12-01T11:07:59.177", "LastActivityDate": "2011-12-01T11:07:59.177"}, "bq_ids": {"n4140": {"so_8339562_8339562_0": {"section_id": 7137, "quality": 0.8, "length": 12}}, "n3337": {"so_8339562_8339562_0": {"section_id": 6881, "quality": 0.8, "length": 12}}, "n4659": {"so_8339562_8339562_0": {"section_id": 8638, "quality": 0.8, "length": 12}}}});