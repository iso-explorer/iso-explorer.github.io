post_cb({"26572240": {"CommentCount": "10", "AcceptedAnswerId": "26572651", "PostTypeId": "1", "LastEditorUserId": "1377706", "CreationDate": "2014-10-26T10:59:19.153", "LastActivityDate": "2017-06-07T22:34:15.237", "AnswerCount": "2", "LastEditDate": "2017-06-07T22:34:15.237", "ViewCount": "4392", "FavoriteCount": "4", "Title": "Why do unions have a deleted default constructor if just one of its members doesn't have one?", "Id": "26572240", "Score": "10", "Body": "<p><code>N3797::9.5/2 [class.union]</code> says:</p>\n<blockquote>\n<p id=\"so_26572240_26572240_0\">If any non-static data member of a union <em>has a non-trivial</em> default\n  constructor (12.1), copy constructor (12.8), move constructor (12.8),\n  copy assignment operator (12.8), move assignment operator (12.8), or\n  destructor (12.4), the corresponding member function of the union must\n  be user-provided or it will be implicitly deleted (8.4.3) for the\n  union</p>\n</blockquote>\n<p>I was trying to understand that note by example:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;limits&gt;\n\nstruct A\n{\n    A(const A&amp;){ std::cout &lt;&lt; \"~A()\" &lt;&lt; std::endl; } //A has no default constructor\n};\n\nunion U\n{\n    A a;\n};\n\nU u; //error: call to implicitly-deleted default constructor of 'U'\n\nint main()\n{\n\n}\n</code></pre>\n<p><strong><a href=\"http://coliru.stacked-crooked.com/a/010b018a30b71726\">DEMO</a></strong></p>\n<p>That behavior isn't quite clear to me. <code>struct A</code> doesn't have implicitly-declared default constructor, because <code>12.1/4: [class.ctor]</code> says:</p>\n<blockquote>\n<p id=\"so_26572240_26572240_1\">If there is no user-declared constructor for class X, a constructor\n  having no parameters is implicitly declared as defaulted (8.4).</p>\n</blockquote>\n<p>Which means <code>struct A</code> doesn't have a non-trivial default constructor (There is no default constructor at all, in particular non-trivial). That's <code>union U</code> doesn't have to have a deleted default constructor. What's wrong?</p>\n", "Tags": "<c++><constructor><unions>", "OwnerDisplayName": "user2953119"}, "26572925": {"ParentId": "26572240", "CommentCount": "0", "Body": "<p>In your example, the problem is not that your code has no non trivial defautl constructor, but that it has a copy constructor.  </p>\n<p>But generally, a <code>union</code> has several members:  \"<em>at most one of the non-static data members can be active at any time, that is, the value of at most one of the non-static data members can be stored in a union at any time</em>\" (9.5/1).  </p>\n<p>Suppose you have a union with several members some of them having non trivial constructors or copy constructors:     </p>\n<pre><code>union W {\n    A a; \n    int i; \n};\n</code></pre>\n<p>When you would create an object: </p>\n<pre><code>W w;  \n</code></pre>\n<p>how should this object be default constructed ? Which member should be the active one ?  How should such an object be default-copied ? Is it the <code>A</code> or the <code>int</code> that should be constructed/copied ?  </p>\n<p>This is why the standard foresses that your union has a deleted default constructor (copy constructor in your case).  It should be sufficient to user-provide the missing default function.   </p>\n<pre><code>union W\n{\n    int i;\n    A a;\n    W() { /*...*/ }\n    W(const W&amp;c) { /*...*/ }\n};\n</code></pre>\n<p><strong><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2544.pdf\" rel=\"nofollow\">This paper</a></strong> explains the rationale and the wording of C++11 on the topic in its full details. </p>\n<p><strong><em>Important remark:</em></strong> Unfortunately, unrestricted unions are not supported by <a href=\"http://msdn.microsoft.com/en-us/library/hh567368.aspx#corelanguagetable\" rel=\"nofollow\">MSVC13</a> : it still does not accept ANY member having ANY of the non-trivial default function user defined. GCC accepts it <a href=\"https://gcc.gnu.org/projects/cxx0x.html\" rel=\"nofollow\">since 4.6</a> and clang <a href=\"http://clang.llvm.org/cxx_status.html\" rel=\"nofollow\">since 3.1</a>.   </p>\n", "OwnerUserId": "3723423", "PostTypeId": "2", "Id": "26572925", "Score": "1", "CreationDate": "2014-10-26T12:20:57.967", "LastActivityDate": "2014-10-26T12:20:57.967"}, "bq_ids": {"n4140": {"so_26572240_26572240_1": {"section_id": 369, "quality": 1.0, "length": 10}, "so_26572240_26572651_0": {"section_id": 369, "quality": 0.9583333333333334, "length": 23}, "so_26572240_26572240_0": {"section_id": 5914, "quality": 0.8, "length": 28}}, "n3337": {"so_26572240_26572240_1": {"section_id": 359, "quality": 1.0, "length": 10}, "so_26572240_26572651_0": {"section_id": 359, "quality": 0.9583333333333334, "length": 23}, "so_26572240_26572240_0": {"section_id": 5686, "quality": 0.8, "length": 28}}, "n4659": {"so_26572240_26572240_1": {"section_id": 381, "quality": 1.0, "length": 10}, "so_26572240_26572651_0": {"section_id": 381, "quality": 0.7083333333333334, "length": 17}, "so_26572240_26572240_0": {"section_id": 7406, "quality": 0.8, "length": 28}}}, "26572651": {"ParentId": "26572240", "CommentCount": "0", "Body": "<p>The relevant wording is in C++11 [class.ctor]p5 (emphasis mine):</p>\n<blockquote>\n<p id=\"so_26572240_26572651_0\">A <em>default</em> constructor for a class <code>X</code> is a constructor of class <code>X</code> that can be called without an argument. If there is no user-declared constructor for class <code>X</code>, a constructor having no parameters is implicitly declared as defaulted (8.4). [...] <strong>A defaulted default constructor for class <code>X</code> is defined as deleted if:</strong></p>\n<p id=\"so_26572240_26572651_1\">[...]</p>\n<ul>\n<li><code>X</code> is a union-like class that has a variant member with a non-trivial default constructor,</li>\n</ul>\n<p id=\"so_26572240_26572651_2\">[...]</p>\n<ul>\n<li><strong>any</strong> direct or virtual base class, or <strong>non-static data member with no <em>brace-or-equal-initializer</em></strong>, has class type <code>M</code> (or array thereof) and either <code>M</code> <strong>has no default constructor</strong> or overload resolution (13.3) as applied to <code>M</code>'s default constructor results in an ambiguity or in a function that is deleted or inaccessible from the defaulted default constructor, or</li>\n</ul>\n<p id=\"so_26572240_26572651_3\">[...]</p>\n</blockquote>\n<p>Your class <code>A</code> has no default constructor, so a defaulted default constructor (whether implicit or explicit) for a class <code>X</code> (whether union or non-union) containing a non-static data member of type <code>A</code> without an initialiser leads to the default constructor for <code>X</code> being deleted. It has to: there's simply no way for the compiler to generate any other default constructor.</p>\n<p>As for your follow-up question in the comments:</p>\n<p>If instead of <code>A</code> <em>not</em> having a default constructor, it has a non-trivial default constructor, then there is a difference between using that in a union and in a non-union class, and that is also part of [class.ctor]p5: it is the first bullet point that I included, without emphasis, in my earlier quote.</p>\n", "OwnerUserId": "743382", "PostTypeId": "2", "Id": "26572651", "Score": "5", "CreationDate": "2014-10-26T11:52:14.617", "LastActivityDate": "2014-10-26T11:52:14.617"}});