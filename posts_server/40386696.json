post_cb({"bq_ids": {"n4659": {"so_40386696_40386696_2": {"length": 22, "section_id": 5811, "quality": 0.88}, "so_40386696_40386696_0": {"length": 5, "section_id": 5812, "quality": 0.8333333333333334}, "so_40386696_40386696_3": {"length": 12, "section_id": 5812, "quality": 0.9230769230769231}}}, "40386696": {"Tags": "<c++><language-lawyer><c++1z>", "ViewCount": "64", "CreationDate": "2016-11-02T17:58:22.840", "Title": "Behaviour of `std::pmr::memory_resource::allocate()` on large alignments", "CommentCount": "5", "AnswerCount": "0", "Score": "3", "OwnerUserId": "483421", "Id": "40386696", "LastActivityDate": "2016-11-02T17:58:22.840", "Body": "<p>To quote N4606:  </p>\n<blockquote>\n<p id=\"so_40386696_40386696_0\"><code>virtual void* do_allocate(size_t bytes, size_t alignment) = 0;</code></p>\n<p id=\"so_40386696_40386696_1\">Requires: Alignment shall be a power of two.</p>\n<p id=\"so_40386696_40386696_2\">Returns: A derived class shall implement this function to return a pointer to allocated storage (3.7.4.2) with a size of at least <strong>bytes</strong>. The returned storage is aligned to the specified alignment, if such alignment is supported; otherwise it is aligned to <strong>max_align</strong>.</p>\n<p id=\"so_40386696_40386696_3\">Throws: A derived class implementation shall throw an appropriate exception if it is unable to allocate memory with the requested size and alignment.</p>\n</blockquote>\n<p>This is IMHO unclear: What happens if the alignment is a power of two but unsupported (e.g larger than <strong>max_align</strong>)? Is the returned storage aligned to <strong>max_align</strong> or is an exception thrown?<br>\nThere is of course the note concerning <strong>a derived class implementation</strong>, but since <code>std::pmr::memory_resource</code> is a virtual base class, every implementation must be such.</br></p>\n", "PostTypeId": "1"}});