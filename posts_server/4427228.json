post_cb({"4427259": {"ParentId": "4427228", "CommentCount": "6", "CreationDate": "2010-12-13T09:13:07.120", "OwnerUserId": "34509", "PostTypeId": "2", "Id": "4427259", "Score": "3", "Body": "<p>This is not an assignment. It's a declaration. You can put declarations elsewhere as conditions, as in the following</p>\n<pre><code>if(int i = value) ...;\nfor(...; int i = value; ...) ...;\nswitch(int i = value) ...;\nwhile(int i = value) ...;\n</code></pre>\n<p>This is a rarely used form, but it isn't an expression specified there. What you have done there is declaring a variable <code>i</code> which you can use in the body</p>\n<pre><code>// fire if get() returns non-null\nif(weapon *w = get()) {\n  w-&gt;fire();\n}\n</code></pre>\n<p>And parentheses aren't allowed around such a declaration. I think that would make no sense.</p>\n", "LastActivityDate": "2010-12-13T09:13:07.120"}, "4427228": {"CommentCount": "2", "ViewCount": "1562", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2010-12-13T09:09:03.350", "LastActivityDate": "2010-12-13T10:21:27.167", "Title": "declaration as condition - adding parentheses causes errors", "AcceptedAnswerId": "4427272", "LastEditDate": "2017-05-23T11:51:20.400", "Id": "4427228", "Score": "2", "Body": "<p>Why is this ok:</p>\n<pre><code>if(int i = 1) {\n}\n</code></pre>\n<p>...whereas the following produces errors?</p>\n<pre><code>if((int i = 1)) {\n}\n</code></pre>\n<p>Under g++ (4.4.5) the latter gives:</p>\n<blockquote>\n<p id=\"so_4427228_4427228_0\">test.cpp:7: error: expected primary-expression before \u2018int\u2019<br>\n  test.cpp:7: error: expected \u2018)\u2019 before \u2018int\u2019<br>\n  test.cpp:9: error: expected \u2018)\u2019 before \u2018else\u2019<br>\n  test.cpp:13: error: expected primary-expression before \u2018}\u2019 token<br>\n  test.cpp:13: error: expected \u2018;\u2019 before \u2018}\u2019 token</br></br></br></br></p>\n</blockquote>\n<p>Incidentally, the reason I'm asking is because of this answer: <a href=\"https://stackoverflow.com/questions/4426476/seeing-what-class-an-object-is/4426485#4426485\">Seeing what class an object is</a></p>\n<p>I'm trying to find a way to make the condition more readable. Usually, I would prefer, for example:</p>\n<pre><code>if((x = y) != 0) {\n</code></pre>\n<p>to </p>\n<pre><code>if(x = y) {\n</code></pre>\n<p>...since it's more readable and silences compiler 'comments' suggesting I might have used the wrong operator. If I'm using a <em>declaration</em> as a condition, it doesn't produce the warning, but the readability still seems to suffer.</p>\n", "Tags": "<c++><conditional><variable-assignment>", "OwnerUserId": "338803", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_4427228_4427272_0": {"section_id": 3882, "quality": 1.0, "length": 7}}, "n3337": {"so_4427228_4427272_0": {"section_id": 3742, "quality": 1.0, "length": 7}}, "n4659": {"so_4427228_4427272_0": {"section_id": 4771, "quality": 1.0, "length": 7}}}, "4427272": {"ParentId": "4427228", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2010-12-13T09:14:16.267", "Score": "4", "LastEditorUserId": "36565", "LastEditDate": "2010-12-13T10:03:26.277", "Id": "4427272", "OwnerUserId": "343443", "Body": "<p>It's because of the C++ standard, 6.4 p1.</p>\n<blockquote>\n<p id=\"so_4427228_4427272_0\">Selection statements choose one of several flows of control.</p>\n</blockquote>\n<p><em>selection-statement:</em></p>\n<pre><code>if ( condition ) statement\nif ( condition ) statement else statement\nswitch ( condition ) statement\n</code></pre>\n<p><em>condition:</em></p>\n<pre><code>expression\ntype-specifier-seq declarator = assignment-expression\n</code></pre>\n", "LastActivityDate": "2010-12-13T10:03:26.277"}});