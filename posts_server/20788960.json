post_cb({"bq_ids": {"n4140": {"so_20788960_20789142_0": {"length": 16, "quality": 0.8, "section_id": 7207}, "so_20788960_20789142_1": {"length": 8, "quality": 1.0, "section_id": 7150}, "so_20788960_20789142_2": {"length": 13, "quality": 0.8666666666666667, "section_id": 7151}, "so_20788960_20789054_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 7151}, "so_20788960_20789054_2": {"length": 12, "quality": 0.8571428571428571, "section_id": 3285}, "so_20788960_20789054_1": {"length": 12, "quality": 0.8571428571428571, "section_id": 3285}}, "n3337": {"so_20788960_20789142_0": {"length": 16, "quality": 0.8, "section_id": 6951}, "so_20788960_20789142_1": {"length": 8, "quality": 1.0, "section_id": 6894}, "so_20788960_20789054_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 6895}, "so_20788960_20789054_1": {"length": 8, "quality": 0.5714285714285714, "section_id": 3155}, "so_20788960_20789054_2": {"length": 10, "quality": 0.7142857142857143, "section_id": 3155}, "so_20788960_20789142_2": {"length": 13, "quality": 0.8666666666666667, "section_id": 6895}}, "n4659": {"so_20788960_20789142_0": {"length": 16, "quality": 0.8, "section_id": 8716}, "so_20788960_20789142_1": {"length": 6, "quality": 0.75, "section_id": 8651}, "so_20788960_20789054_0": {"length": 4, "quality": 0.6666666666666666, "section_id": 4051}, "so_20788960_20789054_1": {"length": 11, "quality": 0.7857142857142857, "section_id": 4047}, "so_20788960_20789054_2": {"length": 12, "quality": 0.8571428571428571, "section_id": 4047}, "so_20788960_20789142_2": {"length": 9, "quality": 0.6, "section_id": 4051}}}, "20789054": {"Id": "20789054", "PostTypeId": "2", "Body": "<p>Yes, a pointer defined at namespace scope (global namespace in your case) is guaranteed to be initialized to the correct null pointer value of the type.</p>\n<p>For the standard references,</p>\n<blockquote>\n<p id=\"so_20788960_20789054_0\"><code>3.6.2[basic.start.init]/2</code> \"Variables with static storage duration ... shall be zero-initialized (8.5)\"</p>\n<p id=\"so_20788960_20789054_1\"><code>8.5[dcl.init]/6</code> \"To zero-initialize ... means: if T is a scalar type (3.9), the object is initialized to the value obtained by converting the integer literal\n  0 (zero) to T;[106]\"</p>\n<p id=\"so_20788960_20789054_2\">106) As specified in 4.10, converting an integer literal whose value is 0 to a pointer type results in a <strong>null pointer value</strong>.</p>\n</blockquote>\n<p>(emphasis mine)</p>\n", "LastActivityDate": "2013-12-26T17:56:20.617", "CommentCount": "3", "CreationDate": "2013-12-26T17:56:20.617", "ParentId": "20788960", "Score": "7", "OwnerUserId": "273767"}, "20789142": {"Id": "20789142", "PostTypeId": "2", "Body": "<p>I would append to the previous post of @Cubbi that according to the same Standard the scalar type is</p>\n<blockquote>\n<p id=\"so_20788960_20789142_0\">Arithmetic types (3.9.1), enumeration types, pointer types, pointer to\n  member types (3.9.2), std::nullptr_- t, and cv-qualified versions of\n  these types (3.9.3) are collectively called scalar types</p>\n</blockquote>\n<p>And then</p>\n<blockquote>\n<p id=\"so_20788960_20789142_1\">Non-local variables with static storage duration are initialized as a\n  consequence of program initiation.</p>\n</blockquote>\n<p>and</p>\n<blockquote>\n<p id=\"so_20788960_20789142_2\">Variables with static storage duration (3.7.1) or thread storage\n  duration (3.7.2) shall be zero-initialized (8.5) before any other\n  initialization takes place.</p>\n</blockquote>\n", "LastActivityDate": "2013-12-26T18:04:29.180", "CommentCount": "5", "CreationDate": "2013-12-26T18:04:29.180", "ParentId": "20788960", "Score": "3", "OwnerUserId": "2877241"}, "20788960": {"ViewCount": "460", "Body": "<p>I was wondering what the cpp standard says about global initialization. I have found <a href=\"https://stackoverflow.com/questions/3553559/how-are-local-and-global-variables-initialized-by-default\">this</a> answer helpful, but there was no mention of a pointer type.</p>\n<p>Is there a guarantee that this will work?</p>\n<pre><code>char* myptr\nint main()\n{\n    if (myptr == NULL)\n    {\n        std::cout &lt;&lt; \"All good!\" &lt;&lt; std::endl;\n    }\n}\n</code></pre>\n", "AcceptedAnswerId": "20789054", "Title": "Is a global pointer initialized to zero?", "CreationDate": "2013-12-26T17:49:50.723", "Id": "20788960", "CommentCount": "0", "LastEditDate": "2017-05-23T12:00:01.803", "PostTypeId": "1", "LastEditorUserId": "-1", "LastActivityDate": "2013-12-26T18:04:29.180", "Score": "3", "OwnerUserId": "673760", "Tags": "<c++><pointers><global-variables>", "AnswerCount": "2"}});