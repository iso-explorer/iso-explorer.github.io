post_cb({"14793119": {"ParentId": "14793086", "PostTypeId": "2", "CommentCount": "3", "Body": "<p><a href=\"http://en.wikipedia.org/wiki/Deque#Implementations\">According to Wikipedia</a>, what you're describing is indeed one possible implementation, at least in general.</p>\n<p>However, the C++ standard imposes requirements that essentially prohibit this as an implementation for <code>std::deque</code>; [deque.modifiers] states:</p>\n<blockquote>\n<p id=\"so_14793086_14793119_0\">An insertion at either end of the deque ... has no effect on the validity of references to elements of the deque.</p>\n</blockquote>\n<p>(Thanks to @BenjaminLindley!)</p>\n", "OwnerUserId": "129570", "LastEditorUserId": "129570", "LastEditDate": "2013-02-10T00:21:27.550", "Id": "14793119", "Score": "8", "CreationDate": "2013-02-10T00:09:37.583", "LastActivityDate": "2013-02-10T00:21:27.550"}, "14793086": {"CommentCount": "9", "ViewCount": "311", "PostTypeId": "1", "LastEditorUserId": "231306", "CreationDate": "2013-02-10T00:03:31.613", "LastActivityDate": "2013-02-11T11:53:45.067", "Title": "Why is std::deque not a vector with memory reserved before index 0?", "AcceptedAnswerId": "14793119", "LastEditDate": "2013-02-11T11:53:45.067", "Id": "14793086", "Score": "5", "Body": "<p>As far as I understand, the motivation behind deque is to provide a random-access container with efficient <code>push_front</code>.</p>\n<p>Commonly cited advantages of vector compared to deque include faster traversal and <code>at()</code>, but mostly its C compatibility, as it guarantees contiguous memory. Deque does not, since it is a collection of chunks of memory, each holding a number of values.</p>\n<p>I'm confused. Why is not deque built like a vector but with memory reserved before index <code>0</code> in addition to the memory reserved after index <code>size-1</code> ? This would guarantee contiguous memory, enable efficient <code>push_front</code> and even avoid the additional indirection when dereferencing iterators.</p>\n<p>To minimize shifting during insertion, the contained values to be shifted would depend on the insertion point. If inserting at index <code>n</code> being before <code>size()/2</code>, shift values up to <code>n</code> left. Otherwise shift right the values after <code>n</code>.</p>\n<p>What did I miss that is so important that deque is a collection of arrays of values and not one big array ?</p>\n", "Tags": "<c++><vector><stl><deque>", "OwnerUserId": "231306", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_14793086_14793119_0": {"section_id": 817, "quality": 1.0, "length": 9}}, "n3337": {"so_14793086_14793119_0": {"section_id": 806, "quality": 1.0, "length": 9}}, "n4659": {"so_14793086_14793119_0": {"section_id": 876, "quality": 1.0, "length": 9}}}});