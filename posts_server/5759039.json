post_cb({"5759114": {"Id": "5759114", "PostTypeId": "2", "Body": "<p>ISO/IEC 14882:2003(E) 3.6.1 (3)</p>\n<blockquote>\n<p id=\"so_5759039_5759114_0\"><strong>The function main shall not be used (3.2) within a program.</strong> The linkage (3.5) of main is implementation-defined. A program that declares main to be inline or static is ill-formed. The name main is not otherwise reserved. [Example: member functions, classes, and enumerations can be called main, as can entities in other namespaces. ]</p>\n</blockquote>\n", "LastActivityDate": "2011-04-22T19:15:51.997", "CommentCount": "0", "CreationDate": "2011-04-22T19:15:51.997", "ParentId": "5759039", "Score": "2", "OwnerUserId": "528724"}, "5759039": {"ViewCount": "249", "Body": "<p>It crashes on execution:</p>\n<pre><code>#include &lt;iostream&gt;\n\nint main ()\n\n{\n    if(main());\n    return 0;\n}\n</code></pre>\n<p>Why?</p>\n", "AcceptedAnswerId": "5759049", "Title": "Why does this program keep crashing", "CreationDate": "2011-04-22T19:06:59.977", "Id": "5759039", "CommentCount": "4", "LastEditDate": "2011-04-22T19:07:21.443", "PostTypeId": "1", "LastEditorUserId": "418729", "LastActivityDate": "2011-04-23T04:10:19.070", "Score": "5", "OwnerUserId": "720967", "Tags": "<c++><visual-c++>", "AnswerCount": "4"}, "5759062": {"Id": "5759062", "PostTypeId": "2", "Body": "<p>If the <code>main</code> function calls the <code>main</code> functions, you have an infinite depth of nesting. However, each nesting level needs a little bit more of the memory. As this process never ends, you eventually run of available memory (precisely, the memory of the stack, which is of the order of magnitude of a few megabytes and really lots of function calls). Then the operating system kills the process.</p>\n", "LastActivityDate": "2011-04-22T19:09:35.123", "CommentCount": "0", "CreationDate": "2011-04-22T19:09:35.123", "ParentId": "5759039", "Score": "0", "OwnerUserId": "399317"}, "5759058": {"Id": "5759058", "PostTypeId": "2", "Body": "<p>As per the name of the site you are causing a stack overflow.</p>\n<p>Every time your program does the <code>if</code> statement it puts a little information on the stack so it can return back. however the program will keep repeating this till it runs out of room, causing a stack overflow.</p>\n", "LastActivityDate": "2011-04-22T19:09:18.903", "CommentCount": "0", "CreationDate": "2011-04-22T19:09:18.903", "ParentId": "5759039", "Score": "0", "OwnerUserId": "80274"}, "bq_ids": {"n4140": {"so_5759039_5759114_0": {"length": 25, "quality": 0.8333333333333334, "section_id": 7147}}, "n3337": {"so_5759039_5759114_0": {"length": 25, "quality": 0.8333333333333334, "section_id": 6891}}, "n4659": {"so_5759039_5759114_0": {"length": 24, "quality": 0.8, "section_id": 8648}}}, "5759049": {"Id": "5759049", "PostTypeId": "2", "Body": "<p>It crashes due to <a href=\"https://stackoverflow.com/questions/5759039/why-does-this-program-keep-crashing/5759049#5759049\">Stackoverflow</a> of course, since, there is no terminating condition,\nbut technically the <code>C++</code> Compiler is allowed not to compile it, since in C++:</p>\n<pre><code>main() cannot be called from within a program.\nThe address of main() cannot be taken.\nThe main() function cannot be overloaded.\n</code></pre>\n<p>What the standard says:</p>\n<p><em>Annex to C Compatibilty</em></p>\n<p>3.6</p>\n<pre><code>Change: Main cannot be called recursively and cannot have its address taken\nRationale: The main function may require special actions.\nEffect on original feature: Deletion of semantically well-defined feature\nDifficulty of converting: Trivial: create an intermediary function such as mymain(argc, argv).\nHow widely used: Seldom\n</code></pre>\n", "LastEditorUserId": "-1", "LastActivityDate": "2011-04-23T04:10:19.070", "Score": "11", "CreationDate": "2011-04-22T19:08:03.987", "ParentId": "5759039", "CommentCount": "0", "OwnerUserId": "418729", "LastEditDate": "2017-05-23T12:03:12.263"}});