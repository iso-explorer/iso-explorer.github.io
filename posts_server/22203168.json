post_cb({"22203168": {"CommentCount": "0", "ViewCount": "42", "PostTypeId": "1", "LastEditorUserId": "1175824", "CreationDate": "2014-03-05T16:15:51.580", "LastActivityDate": "2014-03-05T16:44:24.320", "Title": "Why doesn't the lock lock?", "AcceptedAnswerId": "22203335", "LastEditDate": "2014-03-05T16:44:24.320", "Id": "22203168", "Score": "1", "Body": "<p>I have this minimal code:</p>\n<pre><code>#include &lt;mutex&gt;\n#include &lt;iostream&gt;\n\nstd::mutex themutex;\n\nvoid f1()\n{ \n  std::cout &lt;&lt; \"1\" &lt;&lt; std::endl;\n  std::lock_guard&lt;std::mutex&gt; local_mutex(themutex);\n  std::cout &lt;&lt; \"2\" &lt;&lt; std::endl;\n}\n\nvoid f2()\n{\n  std::cout &lt;&lt; \"3\" &lt;&lt; std::endl;\n  std::lock_guard&lt;std::mutex&gt; local_mutex(themutex);\n  std::cout &lt;&lt; \"4\" &lt;&lt; std::endl;\n  f1();\n  std::cout &lt;&lt; \"5\" &lt;&lt; std::endl;\n}\n\nint main(void)\n{\n  f2();\n  return 0;\n}\n</code></pre>\n<p>I compile and run with </p>\n<pre><code>g++ -std=c++11 test_mutex.cc -o test_mutex &amp;&amp; ./test_mutex\n</code></pre>\n<p>and I get this output:</p>\n<pre><code>3\n4\n1\n2\n5\n</code></pre>\n<p>Why? </p>\n<p>I expect the program to lock after printing \"1\" and never to return.</p>\n", "Tags": "<c++11><locking><mutex>", "OwnerUserId": "1175824", "AnswerCount": "1"}, "22203335": {"ParentId": "22203168", "CommentCount": "2", "CreationDate": "2014-03-05T16:22:49.303", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "22203335", "Score": "3", "Body": "<p>From 30.4.1 (\"Mutex requirements\"):</p>\n<blockquote>\n<p id=\"so_22203168_22203335_0\">The expression <code>m.lock()</code> shall be well-formed and have the following semantics:</p>\n<p id=\"so_22203168_22203335_1\"><em>Requires:</em> If <code>m</code> is of type <code>std::mutex</code> or <code>std::timed_mutex</code>, the calling thread does not own the mutex.</p>\n</blockquote>\n<p>You're violating the requirements, and so you cannot expect any behaviour guaranteed by the standard.</p>\n", "LastActivityDate": "2014-03-05T16:22:49.303"}, "bq_ids": {"n4140": {"so_22203168_22203335_1": {"section_id": 2754, "quality": 0.8888888888888888, "length": 8}, "so_22203168_22203335_0": {"section_id": 2753, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_22203168_22203335_1": {"section_id": 2715, "quality": 0.8888888888888888, "length": 8}, "so_22203168_22203335_0": {"section_id": 2714, "quality": 0.8571428571428571, "length": 6}}, "n4659": {"so_22203168_22203335_1": {"section_id": 3492, "quality": 0.6666666666666666, "length": 6}, "so_22203168_22203335_0": {"section_id": 3491, "quality": 0.8571428571428571, "length": 6}}}});