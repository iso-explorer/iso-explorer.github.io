post_cb({"30942262": {"Id": "30942262", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_30942132_30942262_0\">Initialize member before base constructor. Possible?</p>\n</blockquote>\n<p>No, that is not possible. The standard mandates that the base classes be initialized first before the members of the class are initialized.</p>\n<pre><code>B(): i{new int{10}}, A{i}{\n    std::cout &lt;&lt; \"in B()\" &lt;&lt; std::endl; \n}\n</code></pre>\n<p>is transformed to:</p>\n<pre><code>B(): A{i}, i{new int{10}}{\n    std::cout &lt;&lt; \"in B()\" &lt;&lt; std::endl; \n}\n</code></pre>\n", "LastActivityDate": "2015-06-19T15:46:59.457", "Score": "1", "CreationDate": "2015-06-19T15:46:59.457", "ParentId": "30942132", "CommentCount": "0", "OwnerUserId": "434551"}, "bq_ids": {"n4140": {"so_30942132_30942227_0": {"length": 6, "quality": 1.0, "section_id": 438}, "so_30942132_30942227_4": {"length": 5, "quality": 1.0, "section_id": 438}, "so_30942132_30942227_2": {"length": 12, "quality": 0.9230769230769231, "section_id": 438}, "so_30942132_30942227_3": {"length": 14, "quality": 0.9333333333333333, "section_id": 438}, "so_30942132_30942227_1": {"length": 27, "quality": 0.9310344827586207, "section_id": 438}}, "n3337": {"so_30942132_30942227_2": {"length": 12, "quality": 0.9230769230769231, "section_id": 429}, "so_30942132_30942227_0": {"length": 6, "quality": 1.0, "section_id": 429}, "so_30942132_30942227_4": {"length": 5, "quality": 1.0, "section_id": 429}, "so_30942132_30942227_3": {"length": 14, "quality": 0.9333333333333333, "section_id": 429}, "so_30942132_30942227_1": {"length": 27, "quality": 0.9310344827586207, "section_id": 429}}, "n4659": {"so_30942132_30942227_0": {"length": 6, "quality": 1.0, "section_id": 458}, "so_30942132_30942227_4": {"length": 5, "quality": 1.0, "section_id": 458}, "so_30942132_30942227_2": {"length": 12, "quality": 0.9230769230769231, "section_id": 458}, "so_30942132_30942227_3": {"length": 14, "quality": 0.9333333333333333, "section_id": 458}, "so_30942132_30942227_1": {"length": 27, "quality": 0.9310344827586207, "section_id": 458}}}, "30942227": {"Id": "30942227", "PostTypeId": "2", "Body": "<p>No, it is not possible since the base class initialization is always prior to derived class initialization.</p>\n<blockquote>\n<h3>C++11, 12.6.2</h3>\n<p id=\"so_30942132_30942227_0\"><sup>10</sup> In a non-delegating constructor, initialization proceeds in the following order: </p>\n<ul>\n<li><p id=\"so_30942132_30942227_1\">First, and only for the constructor of the most derived class (1.8), virtual base classes are initialized in the order they appear on a depth-\ufb01rst left-to-right traversal of the directed acyclic graph of base classes, where \"left-to-right\" is the order of appearance of the base classes in the derived class base-speci\ufb01er-list. </p></li>\n<li><p id=\"so_30942132_30942227_2\">Then, direct base classes are initialized in declaration order as they appear in the base-speci\ufb01er-list (regardless of the order of the mem-initializers). </p></li>\n<li><p id=\"so_30942132_30942227_3\">Then, non-static data members are initialized in the order they were declared in the class de\ufb01nition (again regardless of the order of the mem-initializers). </p></li>\n<li><p id=\"so_30942132_30942227_4\">Finally, the compound-statement of the constructor body is executed. </p></li>\n</ul>\n</blockquote>\n", "LastEditorUserId": "951423", "LastActivityDate": "2015-06-19T15:52:03.287", "Score": "1", "CreationDate": "2015-06-19T15:44:41.297", "ParentId": "30942132", "CommentCount": "0", "LastEditDate": "2015-06-19T15:52:03.287", "OwnerUserId": "951423"}, "30942132": {"ViewCount": "479", "Body": "<p>I have the following code:</p>\n<pre><code>class A{\npublic:\n    A(int* i){\n        std::cout &lt;&lt; \"in A()\" &lt;&lt; i &lt;&lt; std::endl;\n    }\n};\n\nclass B: public A{\npublic:\n    B(): i{new int{10}}, A{i}{\n        std::cout &lt;&lt; \"in B()\" &lt;&lt; std::endl; \n    }\n\nprivate:\n    int* i;\n};\n\nint main()\n{\n    B b;\n}\n</code></pre>\n<p>In <code>A</code> constructor I have 0 (which is expected). But I want to initialize <code>i</code> before. Is it possible at all?</p>\n", "AcceptedAnswerId": "30942218", "Title": "Initialize member before base constructor. Possible?", "CreationDate": "2015-06-19T15:39:40.040", "LastActivityDate": "2015-06-19T15:52:03.287", "CommentCount": "2", "LastEditDate": "2015-06-19T15:47:04.357", "PostTypeId": "1", "Tags": "<c++>", "Id": "30942132", "AnswerCount": "3", "Score": "2", "OwnerUserId": "1341942", "ClosedDate": "2015-06-19T15:49:12.647", "LastEditorUserId": "2411320"}, "30942218": {"Id": "30942218", "PostTypeId": "2", "Body": "<p><code>i</code> is a data member of class <code>B</code>, so in order to be created, an object of class <code>B</code> has to be created first. So the answer, is no.</p>\n", "LastActivityDate": "2015-06-19T15:44:15.507", "Score": "1", "CreationDate": "2015-06-19T15:44:15.507", "ParentId": "30942132", "CommentCount": "0", "OwnerUserId": "2411320"}});