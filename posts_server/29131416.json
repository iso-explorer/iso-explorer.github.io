post_cb({"29131416": {"CommentCount": "4", "ViewCount": "472", "PostTypeId": "1", "LastEditorUserId": "3552770", "CreationDate": "2015-03-18T19:49:22.720", "LastActivityDate": "2015-03-18T20:24:06.023", "Title": "Is it correct to initialize std::array by one pair of curly brackets if zeroed array needed?", "AcceptedAnswerId": "29131794", "LastEditDate": "2015-03-18T20:24:06.023", "Id": "29131416", "Score": "4", "Body": "<p>I wonder if this construction:</p>\n<pre><code>std::array&lt;int, 10&gt; array { };\n</code></pre>\n<p>is equivalent to this:</p>\n<pre><code>std::array&lt;int, 10&gt; array { {  } };\n</code></pre>\n<p>Well, both of them compile and both of them give the same result:</p>\n<pre><code>for (auto e : array) {\n        std::cout &lt;&lt; e &lt;&lt; \", \";\n}\n</code></pre>\n<p>Out:</p>\n<pre><code>0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n</code></pre>\n<p>I know that to initialize std::array by selected values I must use double curly brackets because of aggregate initialization. But I don't know how it behaves with single brackets. So, the question is:</p>\n<p>Is this totally correct to initialize struct by single curly brackets in C++11? (this follows that all field of struct will be zeroed)</p>\n<p>Edit:\nAs @dyp noted my question in post is more general. Let's assume that my question is about structs with only trivial elements.</p>\n", "Tags": "<c++><arrays><c++11>", "OwnerUserId": "2534793", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_29131416_29131794_1": {"section_id": 3325, "quality": 1.0, "length": 6}, "so_29131416_29131794_0": {"section_id": 3304, "quality": 0.9545454545454546, "length": 21}}, "n3337": {"so_29131416_29131794_1": {"section_id": 3195, "quality": 1.0, "length": 6}, "so_29131416_29131794_0": {"section_id": 3174, "quality": 0.7727272727272727, "length": 17}}, "n4659": {"so_29131416_29131794_1": {"section_id": 4091, "quality": 1.0, "length": 6}, "so_29131416_29131794_0": {"section_id": 4070, "quality": 0.7272727272727273, "length": 16}}}, "29131794": {"ParentId": "29131416", "CommentCount": "1", "Body": "<p>According to the C++ Standard (8.5.1 Aggregates)</p>\n<blockquote>\n<p id=\"so_29131416_29131794_0\">7 If there are fewer initializer-clauses in the list than there are\n  members in the aggregate, then each member not explicitly initialized\n  shall be initialized from its brace-or-equal-initializer or, if there\n  is no brace-or-equalinitializer, from an empty initializer list\n  (8.5.4). </p>\n</blockquote>\n<p>and (8.5.4 List-initialization p.#3)</p>\n<blockquote>\n<p id=\"so_29131416_29131794_1\">\u2014 Otherwise, if the initializer list has no elements, the object is\n  value-initialized.</p>\n</blockquote>\n<p>Thus initializations</p>\n<pre><code>std::array&lt;int, 10&gt; array {};\n</code></pre>\n<p>and</p>\n<pre><code>std::array&lt;int, 10&gt; array { {  } };\n</code></pre>\n<p>are equivalent.</p>\n", "OwnerUserId": "2877241", "PostTypeId": "2", "Id": "29131794", "Score": "2", "CreationDate": "2015-03-18T20:13:33.813", "LastActivityDate": "2015-03-18T20:13:33.813"}});