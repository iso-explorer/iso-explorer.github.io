post_cb({"bq_ids": {"n4140": {"so_13410460_13410529_0": {"length": 13, "quality": 1.0, "section_id": 554}}, "n3337": {"so_13410460_13410529_0": {"length": 13, "quality": 1.0, "section_id": 545}}, "n4659": {"so_13410460_13410529_0": {"length": 13, "quality": 1.0, "section_id": 577}}}, "13410460": {"ViewCount": "247", "Body": "<p>Is declaring a <code>const</code> and non-<code>const</code> member function with the same name classified as overloading?</p>\n<pre><code>iterator find ( const key_type&amp; x );\nconst_iterator find ( const key_type&amp; x ) const;\n</code></pre>\n", "AcceptedAnswerId": "13410529", "Title": "Does having `const` and non-`const` versions of a member function qualify as overloading?", "CreationDate": "2012-11-16T04:32:43.133", "Id": "13410460", "CommentCount": "6", "LastEditDate": "2012-11-16T04:36:46.487", "PostTypeId": "1", "LastEditorUserId": "726361", "LastActivityDate": "2012-11-16T04:39:43.900", "Score": "4", "OwnerUserId": "1749578", "Tags": "<c++>", "AnswerCount": "1"}, "13410529": {"Id": "13410529", "PostTypeId": "2", "Body": "<p>Yes, this is overloading. The term is defined in <code>[over]/1</code> as:</p>\n<blockquote>\n<p id=\"so_13410460_13410529_0\">When two or more different declarations are specified for a single name in the same scope, that name is said to be overloaded.</p>\n</blockquote>\n<p>Here, there are clearly two different declarations with the same name.</p>\n", "LastActivityDate": "2012-11-16T04:39:43.900", "CommentCount": "1", "CreationDate": "2012-11-16T04:39:43.900", "ParentId": "13410460", "Score": "2", "OwnerUserId": "485561"}});