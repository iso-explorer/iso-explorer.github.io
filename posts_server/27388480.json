post_cb({"bq_ids": {"n4140": {"so_27388480_27389156_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 3241}}, "n3337": {"so_27388480_27389156_0": {"length": 16, "quality": 0.8888888888888888, "section_id": 3114}}, "n4659": {"so_27388480_27389156_0": {"length": 12, "quality": 0.6666666666666666, "section_id": 3997}}}, "27388480": {"ViewCount": "71", "Body": "<p>Is there any major difference between them? To me it looks the same...and according to some googling it seems the same as well..Just wanna confirm it here..</p>\n<pre><code>void getAnything(int arr [])\n{\n    arr[0] = 2;\n}\n</code></pre>\n<p>versus</p>\n<pre><code>void getAnything(int *arr)\n{\n    arr[0] = 2;\n}  \n</code></pre>\n<p>main</p>\n<pre><code>int main()\n{\n    int arr [1];\n    getAnything(arr);\n}\n</code></pre>\n", "Title": "What is the difference with pointer and array as parameters?", "CreationDate": "2014-12-09T20:44:06.383", "LastActivityDate": "2014-12-09T21:28:01.310", "CommentCount": "4", "PostTypeId": "1", "ClosedDate": "2014-12-09T21:30:28.733", "Id": "27388480", "Score": "0", "OwnerUserId": "2869805", "Tags": "<c++><arrays><pointers>", "AnswerCount": "2"}, "27389156": {"Id": "27389156", "PostTypeId": "2", "Body": "<p>Yes, they are precisely equivalent:</p>\n<blockquote>\n<p id=\"so_27388480_27389156_0\"><code>[C++11: 8.3.5/5]:</code> <em>[..]</em> After determining the type of each parameter, any parameter of type \u201carray of <code>T</code>\u201d or \u201cfunction returning <code>T</code>\u201d is adjusted to be \u201cpointer to <code>T</code>\u201d or \u201cpointer to function returning <code>T</code>,\u201d respectively. <em>[..]</em></p>\n</blockquote>\n<p>It's quite confusing because it means that your argument need not actually have anything to do with arrays whatsoever, but there you go; thanks, C! It also helps to encourage the myth that \"arrays are pointers\", sadly.</p>\n<p>All of the following:</p>\n<pre><code>void foo(int[]   x);\nvoid foo(int[5]  x);\nvoid foo(int[42] x);\n</code></pre>\n<p>actually mean this:</p>\n<pre><code>void foo(int* x);\n</code></pre>\n", "LastActivityDate": "2014-12-09T21:28:01.310", "CommentCount": "0", "CreationDate": "2014-12-09T21:28:01.310", "ParentId": "27388480", "Score": "0", "OwnerUserId": "560648"}, "27388522": {"Id": "27388522", "PostTypeId": "2", "Body": "<p>It is the same. In fact, i you would have something like </p>\n<pre><code>void getAnything(int arr [10])\n{\n    arr[0] = 2;\n}\n</code></pre>\n<p>would also be the same.</p>\n", "LastActivityDate": "2014-12-09T20:46:23.987", "CommentCount": "0", "CreationDate": "2014-12-09T20:46:23.987", "ParentId": "27388480", "Score": "1", "OwnerUserId": "4315023"}});