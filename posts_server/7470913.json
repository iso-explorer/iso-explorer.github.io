post_cb({"bq_ids": {"n4140": {"so_7470913_7470913_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 7172}}, "n3337": {"so_7470913_7470913_0": {"length": 27, "quality": 0.9642857142857143, "section_id": 6916}}, "n4659": {"so_7470913_7470913_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 8680}}}, "7470986": {"Id": "7470986", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_7470913_7470986_0\">Apparently it detects that pg and the other code will not influence eachother.</p>\n</blockquote>\n<p>How, since that\u2019s patently untrue? They <em>do</em> influence each other (e.g. through output order).</p>\n<p>GCC doesn\u2019t do this. Perhaps you accidentally used an anonymous (and hence temporary) object?</p>\n<pre><code>ProfileGuard(\"SampleName\");\n</code></pre>\n<p>Now, this <em>will</em> be destructed immediately after executing the expression.</p>\n", "LastActivityDate": "2011-09-19T12:33:05.160", "Score": "10", "CreationDate": "2011-09-19T12:33:05.160", "ParentId": "7470913", "CommentCount": "2", "OwnerUserId": "1968"}, "7470913": {"ViewCount": "217", "Body": "<p>I wrote a small profiling class with an accompanying guard class to use like this:</p>\n<pre><code>{\n    ProfileGuard pg(\"SampleName\");\n\n    // Code to profile\n    ...\n}\n</code></pre>\n<p>But then I noticed that sometimes gcc optimizes the code so that <code>pg</code> is destructed instantly. Apparently it detects that <code>pg</code> and the other code will not influence eachother. What's the best way to prevent gcc from doing this?</p>\n<p><strong>Update:</strong>\nSince there is some serious disbelief concerning my question I will check my code again. I based my question on:</p>\n<p>3.7.3 3.</p>\n<blockquote>\n<p id=\"so_7470913_7470913_0\">If a variable with automatic storage duration has initialization or a destructor with side effects, it shall not\n   be destroyed before the end of its block, nor shall it be eliminated as an optimization even if it appears to\n  be unused, except that a class object or its copy/move may be eliminated as specified in 12.8.</p>\n</blockquote>\n<p>Is doing a print a \"side effect\"?</p>\n", "AcceptedAnswerId": "7470986", "Title": "Why is gcc destroying my object instantly despite its scope? (and how do I make it not do that?)", "CreationDate": "2011-09-19T12:26:01.970", "Id": "7470913", "CommentCount": "6", "LastEditDate": "2011-09-19T12:52:08.877", "PostTypeId": "1", "LastEditorUserId": "405559", "LastActivityDate": "2011-09-19T12:52:08.877", "Score": "2", "OwnerUserId": "405559", "Tags": "<c++><optimization><gcc><destructor><raii>", "AnswerCount": "1"}});