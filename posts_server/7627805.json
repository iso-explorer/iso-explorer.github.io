post_cb({"7627805": {"CommentCount": "0", "AcceptedAnswerId": "7627823", "PostTypeId": "1", "LastEditorUserId": "635608", "CreationDate": "2011-10-02T16:58:36.850", "LastActivityDate": "2011-10-02T17:09:12.200", "LastEditDate": "2011-10-02T17:01:14.787", "ViewCount": "276", "FavoriteCount": "1", "Title": "In map<string, int>, is it guaranteed that the int is initialized to zero?", "Id": "7627805", "Score": "7", "Body": "<p>For example, count the occurrence the words in a book, I saw somebody simply wrote:</p>\n<pre><code>map&lt;string, int&gt; count;\nstring s;\nwhile (cin &gt;&gt; s) count[s]++;\n</code></pre>\n<p>Is this the correct way of doing so? I tested on my machine and seems so. But is the initialization to zero guaranteed? If it is not, I would imagine a code like this:</p>\n<pre><code>map&lt;string, int&gt; count;\nstring s;\nwhile (cin &gt;&gt; s)\n    if (count.find(s) != count.end())  count[s]++;\n    else count[s] = 1;\n</code></pre>\n", "Tags": "<c++><stdmap>", "OwnerUserId": "955191", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_7627805_7627823_0": {"section_id": 1007, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_7627805_7627823_0": {"section_id": 992, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_7627805_7627823_0": {"section_id": 802, "quality": 0.5555555555555556, "length": 5}}}, "7627823": {"ParentId": "7627805", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2011-10-02T17:01:23.807", "Score": "12", "LastEditorUserId": "46642", "LastEditDate": "2011-10-02T17:09:12.200", "Id": "7627823", "OwnerUserId": "46642", "Body": "<p>Yes, <code>operator[]</code> on a <code>std::map</code> will initialize the value with <code>T()</code>, which in the case of <code>int</code>, is zero.</p>\n<p>This is documented on section 23.4.4.3 of the C++ standard:</p>\n<blockquote>\n<pre><code>T&amp; operator[](const key_type&amp; x);\n</code></pre>\n<p id=\"so_7627805_7627823_0\"><em>Effects</em>: If there is no key equivalent to <code>x</code> in the map, inserts\n  <code>value_type(x, T())</code> into the map.</p>\n</blockquote>\n", "LastActivityDate": "2011-10-02T17:09:12.200"}});