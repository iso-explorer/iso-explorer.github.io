post_cb({"bq_ids": {"n4140": {"so_23286828_23287233_0": {"length": 35, "quality": 0.9210526315789473, "section_id": 657}, "so_23286828_23287233_1": {"length": 30, "quality": 0.9375, "section_id": 659}}, "n3337": {"so_23286828_23287233_0": {"length": 35, "quality": 0.9210526315789473, "section_id": 647}, "so_23286828_23287233_1": {"length": 30, "quality": 0.9375, "section_id": 649}}, "n4659": {"so_23286828_23287233_0": {"length": 35, "quality": 0.9210526315789473, "section_id": 685}, "so_23286828_23287233_1": {"length": 30, "quality": 0.9375, "section_id": 687}}}, "23286828": {"ViewCount": "111", "Body": "<p>Where in the C++1y/C++14 standard does it say that the following translation unit is ill-formed?</p>\n<pre><code>struct S {};\n\nvoid operator+(S,S,S);\n</code></pre>\n<p>The error is:</p>\n<pre><code>error: \u2018void operator+(S, S, S)\u2019 must take either one or two arguments\n</code></pre>\n", "AcceptedAnswerId": "23287233", "Title": "C++14/1y: Standard ref for \"operator+ must take either one or two arguments\"?", "CreationDate": "2014-04-25T07:31:06.940", "Id": "23286828", "CommentCount": "0", "LastEditDate": "2014-04-25T07:39:39.873", "PostTypeId": "1", "LastEditorUserId": "1131467", "LastActivityDate": "2014-04-25T07:51:09.997", "Score": "0", "OwnerUserId": "1131467", "Tags": "<c++><c++14>", "AnswerCount": "1"}, "23287233": {"Id": "23287233", "PostTypeId": "2", "Body": "<p>[over.unary]</p>\n<blockquote>\n<p id=\"so_23286828_23287233_0\">1 A prefix unary operator shall be implemented by a non-static member\n  function (9.3) with no parameters or a non-member function with <strong>one\n  parameter</strong>. Thus, for any prefix unary operator @, @x can be\n  interpreted as either x.operator@() or operator@(x). If both forms of\n  the operator function have been declared, the rules in 13.3.1.2\n  determine which, if any, interpretation is used. See 13.5.7 for an\n  explanation of the postfix unary operators ++ and --.</p>\n</blockquote>\n<p>[over.binary]</p>\n<blockquote>\n<p id=\"so_23286828_23287233_1\">1 A binary operator shall be implemented either by a non-static member\n  function (9.3) with one parameter or by a non-member function with <strong>two\n  parameters</strong>. Thus, for any binary operator @, x@y can be interpreted as\n  either x.operator@(y) or operator@(x,y). If both forms of the operator\n  function have been declared, the rules in 13.3.1.2 determine which, if\n  any, interpretation is used.</p>\n</blockquote>\n", "LastActivityDate": "2014-04-25T07:51:09.997", "CommentCount": "0", "CreationDate": "2014-04-25T07:51:09.997", "ParentId": "23286828", "Score": "5", "OwnerUserId": "657267"}});