post_cb({"36433402": {"ViewCount": "127", "Body": "<p>I need to typedef a function pointer type to create an array of pointers, <em>and</em> to declare a large number of functions that will end up in the array. However, I can't find a way to do both of these things at the same time: either I can get pointers for the array, or I can declare functions, but not both.</p>\n<p>Any ideas on how I can get this code to work without lots of pointless text, or am I stuck with repeating the entire function signature for every function I need to declare? Thanks.</p>\n<pre><code>#include &lt;stdio.h&gt;\n\n// declare a fn ptr type named 'myfunc'\ntypedef void (*myfunc)(int);\n\n//myfunc A,B,C,etc;  **doesn't work, because of the (*)\nvoid A(int);         // does work, but becomes very tedious\n\nint main() {\n   myfunc B = A;     // actually assigning a large 2D array\n   A(42);\n   B(43);\n}\n\nvoid A(int foo) {\n   printf(\"%d\\n\", foo);\n}\n</code></pre>\n", "AcceptedAnswerId": "36433548", "Title": "C/C++: using a typedef'd function pointer to *declare* a function", "CreationDate": "2016-04-05T17:41:51.363", "Id": "36433402", "CommentCount": "6", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2016-04-05T18:11:19.870", "LastEditorUserId": "6162729", "LastActivityDate": "2016-04-05T18:11:19.870", "Score": "1", "OwnerUserId": "6162729", "Tags": "<c++><c>", "AnswerCount": "4"}, "36433493": {"Id": "36433493", "PostTypeId": "2", "Body": "<p>In C++ you may use</p>\n<pre><code>std::remove_pointer_t&lt;myfunc&gt; A, B, C;\n</code></pre>\n<p>Or declare one typedef for the function type and another for the pointer to function type:</p>\n<pre><code>typedef void myfunc(int);\ntypedef myfunc * myfuncptr;\nmyfunc A, B, C;\n</code></pre>\n<p>The latter works in C and C++.</p>\n", "LastActivityDate": "2016-04-05T17:48:04.277", "CommentCount": "0", "CreationDate": "2016-04-05T17:48:04.277", "ParentId": "36433402", "Score": "4", "OwnerUserId": "1639256"}, "36433544": {"Id": "36433544", "PostTypeId": "2", "Body": "<p>The standard is pretty clear about disallowing this (from <a href=\"http://eel.is/c++draft/dcl.fct#12\" rel=\"nofollow\">[dcl.fct]</a>):</p>\n<blockquote>\n<p id=\"so_36433402_36433544_0\">A typedef of function type may be used to declare a function but shall not be used to define a function (8.4). <em>[ Example:</em></p>\n<pre><code>typedef void F();\nF fv;              // OK: equivalent to void fv();\nF fv { }           // ill-formed\nvoid fv() { }      // OK: definition of fv\n</code></pre>\n<p id=\"so_36433402_36433544_1\"><em>\u2014end example ]</em></p>\n</blockquote>\n<p>In your case, you can write:</p>\n<pre><code>using F = std::remove_pointer_t&lt;myfunc&gt;;\nF A, B, C;\n</code></pre>\n<p>But you'd still have to use the normal function declarator to define those functions, so that won't accomplish much besides being cryptic. </p>\n", "LastEditorUserId": "2069064", "LastActivityDate": "2016-04-05T17:55:52.970", "Score": "2", "CreationDate": "2016-04-05T17:51:28.643", "ParentId": "36433402", "CommentCount": "4", "OwnerUserId": "2069064", "LastEditDate": "2016-04-05T17:55:52.970"}, "36433520": {"Id": "36433520", "PostTypeId": "2", "Body": "<p>You can <em>declare</em> a (member) function using a typedef:</p>\n<pre><code>typedef int F(int);\nF f; // declare a function\n\nint main() { f(1); } // and call it\n</code></pre>\n<p>But you cannot <em>define</em> it using the typedef.</p>\n", "LastActivityDate": "2016-04-05T17:49:30.017", "CommentCount": "2", "CreationDate": "2016-04-05T17:49:30.017", "ParentId": "36433402", "Score": "1", "OwnerUserId": "412080"}, "bq_ids": {"n4140": {"so_36433402_36433544_0": {"length": 9, "quality": 0.9, "section_id": 3246}}, "n3337": {"so_36433402_36433544_0": {"length": 9, "quality": 0.9, "section_id": 3119}}, "n4659": {"so_36433402_36433544_0": {"length": 9, "quality": 0.9, "section_id": 4004}}}, "36433548": {"Id": "36433548", "PostTypeId": "2", "Body": "<p>You may do</p>\n<pre><code>using myfunc = void (int);\n\nmyfunc A, B, C, etc;\n</code></pre>\n<p>And for pointer function:</p>\n<pre><code>myfunc* f = A;\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/73fd4129149eb466\" rel=\"nofollow\">Demo</a></p>\n", "LastActivityDate": "2016-04-05T17:51:45.203", "CommentCount": "3", "CreationDate": "2016-04-05T17:51:45.203", "ParentId": "36433402", "Score": "1", "OwnerUserId": "2684539"}});