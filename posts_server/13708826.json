post_cb({"bq_ids": {"n4140": {"so_13708826_13708925_2": {"length": 5, "quality": 0.625, "section_id": 7151}, "so_13708826_13708826_4": {"length": 8, "quality": 1.0, "section_id": 5768}, "so_13708826_13708914_2": {"length": 5, "quality": 0.625, "section_id": 7151}}, "n3337": {"so_13708826_13708925_2": {"length": 5, "quality": 0.625, "section_id": 6895}, "so_13708826_13708826_4": {"length": 8, "quality": 1.0, "section_id": 5541}, "so_13708826_13708925_1": {"length": 4, "quality": 0.5714285714285714, "section_id": 1236}, "so_13708826_13708914_2": {"length": 5, "quality": 0.625, "section_id": 6895}}, "n4659": {"so_13708826_13708826_4": {"length": 7, "quality": 0.875, "section_id": 7225}}}, "13708914": {"Id": "13708914", "PostTypeId": "2", "Body": "<ol>\n<li><blockquote>\n<p id=\"so_13708826_13708914_0\">What does [<strong><code>defns.argument</code></strong>] refer to?</p>\n</blockquote>\n<p><code>[defns.argument]</code> is the section tag; it is intended to be used for editorial purposes as it is invariant under section renumbering (e.g. in response to insertion, removal or reordering of sections).  It can also be used in referring to the standard, but section numbers (relative to a published version of the standard) are more concise.</p></li>\n<li><blockquote>\n<p id=\"so_13708826_13708914_1\">What is the meaning and purpose of the lines actual argument and actual parameter?</p>\n</blockquote>\n<p>\"<em>actual argument</em>\" and \"<em>actual parameter</em>\" are aliases for the term \"<strong><em>argument</em></strong>\".  You will see below under <strong>1.3.14 [defns.parameter]</strong> that \"<em>formal argument</em>\" and \"<em>formal parameter</em>\" are aliases for the term \"<strong><em>parameter</em></strong>\".</p>\n<p>The terms \"actual argument\" and \"actual parameter\" only appear in [defns.argument]; \"formal argument\" is described as an alias in 8.3.5p11, and \"formal parameter\" is used in approximately 13 places, a small fraction of the number of places where \"parameter\" is used.</p></li>\n<li><blockquote>\n<p id=\"so_13708826_13708914_2\">Does &lt;function call expression&gt; refer to a different \"term or definition\"?</p>\n</blockquote>\n<p>The angle-bracketed term is the context in which this definition applies.  For example, \"<em>argument</em>\" has a different meaning in the context of a \"<em>function call expression</em>\" to in the context of a \"<em>function-like macro</em>\".</p></li>\n</ol>\n", "LastEditorUserId": "567292", "LastActivityDate": "2012-12-04T18:44:17.423", "Score": "5", "CreationDate": "2012-12-04T17:51:42.120", "ParentId": "13708826", "CommentCount": "1", "LastEditDate": "2012-12-04T18:44:17.423", "OwnerUserId": "567292"}, "13708925": {"Id": "13708925", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_13708826_13708925_0\">What does [defns.argument] refer to?</p>\n</blockquote>\n<p>That's an alternative way of referring to the section (1.3.1). It should remain the same in future versions of the standard (unless it's removed), while the numbering may change.</p>\n<blockquote>\n<p id=\"so_13708826_13708925_1\">What is the meaning and purpose of \"actual argument\" and \"actual parameter\"?</p>\n</blockquote>\n<p>They are other terms that you might see, that mean the same thing. I believe that old versions of the spec. used \"formal argument\" and \"actual argument\" where the modern spec. uses \"parameter\" and \"argument\".</p>\n<blockquote>\n<p id=\"so_13708826_13708925_2\">Does <code>&lt;function call expression&gt;</code> refer to a different \"term or definition\"?</p>\n</blockquote>\n<p>That's the context in which \"argument\" has this meaning - the following sections give it different meanings in other contexts. Function call expressions are defined in 5.2.2; within such an expression, \"argument\" means \"expression in the comma-separated list bounded by the parentheses\".</p>\n", "LastActivityDate": "2012-12-04T17:52:35.927", "Score": "3", "CreationDate": "2012-12-04T17:52:35.927", "ParentId": "13708826", "CommentCount": "1", "OwnerUserId": "204847"}, "13708826": {"ViewCount": "168", "Body": "<p>As I study different sections in the C++ standard ( <a href=\"https://stackoverflow.com/questions/81656/where-do-i-find-the-current-c-or-c-standard-documents\">Where do I find the current C or C++ standard documents?</a> ), I would like to refer back to the \"Terms and definitions\", \u00a71.3.</p>\n<p>However, the terms and definitions are provided in a form that I cannot adequately understand or interpret, and there is no explanation given in the text regarding how to interpret them.</p>\n<p>Consider the very first term that is defined in the \"Terms and definitions\" section of the standard:</p>\n<blockquote>\n<p id=\"so_13708826_13708826_0\">1.3.1 [<strong>defns.argument</strong>]</p>\n<p id=\"so_13708826_13708826_1\"><strong>argument</strong></p>\n<p id=\"so_13708826_13708826_2\">actual argument</p>\n<p id=\"so_13708826_13708826_3\">actual parameter</p>\n<p id=\"so_13708826_13708826_4\">&lt;function call expression&gt; expression in the comma-separated list\n  bounded by the parentheses</p>\n</blockquote>\n<ol>\n<li>What does [<strong><code>defns.argument</code></strong>] refer to?</li>\n<li>What is the meaning and purpose of the lines <code>actual argument</code> and <code>actual parameter</code>?</li>\n<li>Does <code>&lt;function call expression&gt;</code> refer to a different \"term or definition\"?  If so, it's not defined in the \"Terms and definitions\" section - why not?  If not, what does it refer to?  (NOTE: I am not asking what \"function call expression\" means, because I already know; instead, I am asking how to read and interpret the \"Terms and definitions\" section of the C++ standard using this simple example.)</li>\n</ol>\n", "AcceptedAnswerId": "13708914", "Title": "How to interpret \"terms and definitions\" in the C++ standard document?", "CreationDate": "2012-12-04T17:45:43.310", "Id": "13708826", "CommentCount": "1", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2017-05-23T10:28:05.137", "LastEditorUserId": "-1", "LastActivityDate": "2012-12-04T18:44:17.423", "Score": "7", "OwnerUserId": "368896", "Tags": "<c++><standards>", "AnswerCount": "2"}});