post_cb({"bq_ids": {"n4140": {"so_15279080_15279157_0": {"length": 16, "quality": 0.9411764705882353, "section_id": 7214}}, "n3337": {"so_15279080_15279157_0": {"length": 17, "quality": 1.0, "section_id": 6958}}, "n4659": {"so_15279080_15279157_0": {"length": 16, "quality": 0.9411764705882353, "section_id": 8723}}}, "15279157": {"Id": "15279157", "PostTypeId": "2", "Body": "<p>From the standard (pre-C++11 draft n3290, or post-C++11 draft n3337) \u00a73.9.1 <em>Fundamental types</em>:</p>\n<blockquote>\n<p id=\"so_15279080_15279157_0\">Types <code>char16_t</code> and <code>char32_t</code> denote distinct types with the same size, signedness, and alignment as <code>uint_least16_t</code> and <code>uint_least32_t</code>, respectively, in <code>&lt;stdint.h&gt;</code>, called the underlying types.</p>\n</blockquote>\n<p><code>uint_least16_t</code> and <code>uint_least32_t</code> are both unsigned (from \u00a718.4.1 <em>Header <code>&lt;cstdint&gt;</code> synopsis</em>), so same for <code>char16_t</code> and <code>char32_t</code>.</p>\n", "LastEditorUserId": "635608", "LastActivityDate": "2013-03-07T18:54:43.220", "Score": "13", "CreationDate": "2013-03-07T18:40:09.150", "ParentId": "15279080", "CommentCount": "2", "OwnerUserId": "635608", "LastEditDate": "2013-03-07T18:54:43.220"}, "15279080": {"ViewCount": "1086", "Body": "<p>Similarly, is a naked <code>char16_t</code> signed or unsigned?  Is it implementation defined?</p>\n", "AcceptedAnswerId": "15279157", "Title": "Is a naked `char32_t` signed or unsigned?", "CreationDate": "2013-03-07T18:35:15.207", "Id": "15279080", "CommentCount": "0", "LastEditDate": "2013-03-07T19:38:07.617", "PostTypeId": "1", "LastEditorUserId": "636019", "LastActivityDate": "2013-03-07T19:38:07.617", "Score": "9", "OwnerUserId": "894885", "Tags": "<c++><c++11>", "AnswerCount": "1"}});