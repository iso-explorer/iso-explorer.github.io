post_cb({"31603101": {"Id": "31603101", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_31602985_31603101_0\"><strong>5.1.2 Lambda expressions</strong></p>\n<p id=\"so_31602985_31603101_1\"><strong>6</strong> The closure type for a lambda-expression with no lambda-capture has a public non-virtual non-explicit const conversion\n  function to pointer to function having the same parameter and return\n  types as the closure type\u2019s function call operator. The value returned\n  by this conversion function shall be the address of a function that,\n  when invoked, has the same effect as invoking the closure type\u2019s\n  function call operator.</p>\n</blockquote>\n<p>That is exactly what happens in your case. You forgot to invoke your closure object's <code>()</code> operator. Instead you used the closure object itself as a condition in <code>if</code>. </p>\n<p>Since your closure object does not capture anything, per 5.1.2/6 it is implicitly convertible to plain function pointer type <code>bool (*)()</code>. And so your object got implicitly converted to a function pointer. Since the pointer is not null, it acts as <code>true</code> under <code>if</code>.</p>\n<p>On other words, your code is interpreted by the compiler in the following way</p>\n<pre><code>bool gg;\nauto lf = [&amp;]() -&gt; decltype(gg) { return false; };\n\nbool (*f)() = lf;\nif (f) {\n  ...\n</code></pre>\n<p>If you make your lambda function actually capture something (e.g. replace <code>return false;</code> with <code>return gg;</code>), your original code will immediately fail to compile.</p>\n<p>P.S. As you can read in the comments below, the very presence of <code>[&amp;]</code> apparently should have disabled 5.1.2/6 for your lambda. But apparently your compiler treats 5.1.2/6 more loosely and looks for actual captures instead of simply checking for presence of non-<code>[]</code> capture clause.</p>\n", "LastEditorUserId": "187690", "LastActivityDate": "2015-07-24T06:05:07.213", "Score": "6", "CreationDate": "2015-07-24T05:49:12.363", "ParentId": "31602985", "CommentCount": "7", "OwnerUserId": "187690", "LastEditDate": "2015-07-24T06:05:07.213"}, "31602985": {"ViewCount": "941", "Body": "<p>Here is my code:</p>\n<pre><code>int main(int argc, char** argv) {\n    bool gg;\n    if( [&amp;]()-&gt;decltype(gg){\n\n    return false;  //try changing this to true or false and you'll get the same result.\n\n    } ){\n\n    std::cout&lt;&lt;\"all even\"&lt;&lt;std::endl;   \n    }else {\n    std::cout&lt;&lt;\"all odd\"&lt;&lt;std::endl;\n    }\n\n\n    return 0;\n}\n</code></pre>\n<p>It's just simple, i have an if else statement and a lambda function inside it that checks the condition. I don't know if it's the code or compiler but even if i change false to true and vice versa, i get the same result. I am using Dev CPP. What's wrong with my code?</p>\n", "AcceptedAnswerId": "31603101", "Title": "Using lambda to return a boolean inside if else statement", "CreationDate": "2015-07-24T05:40:56.077", "Id": "31602985", "CommentCount": "12", "PostTypeId": "1", "LastActivityDate": "2015-07-24T06:05:07.213", "Score": "2", "OwnerUserId": "2910144", "Tags": "<c++><lambda>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_31602985_31603101_1": {"length": 38, "quality": 0.95, "section_id": 5965}}, "n3337": {"so_31602985_31603101_1": {"length": 38, "quality": 0.95, "section_id": 5734}}, "n4659": {"so_31602985_31603101_1": {"length": 34, "quality": 0.85, "section_id": 7456}}}, "31603028": {"Id": "31603028", "PostTypeId": "2", "Body": "<p>You don't evaluate the lambda, you just check the object:</p>\n<pre><code>int main(int argc, char** argv) {\n    bool gg;\n    if( [&amp;]()-&gt;decltype(gg){\n\n    return false;  //try changing this to true or false and you'll get the same result.\n\n    }() == true){\n\n    std::cout&lt;&lt;\"all even\"&lt;&lt;std::endl;   \n    }else {\n    std::cout&lt;&lt;\"all odd\"&lt;&lt;std::endl;\n    }\n\n\n    return 0;\n}\n</code></pre>\n<p>edit: Ideone code <a href=\"https://ideone.com/yxloQf\" rel=\"noreferrer\">https://ideone.com/yxloQf</a></p>\n", "LastActivityDate": "2015-07-24T05:43:26.730", "CommentCount": "5", "CreationDate": "2015-07-24T05:43:26.730", "ParentId": "31602985", "Score": "5", "OwnerUserId": "1442517"}});