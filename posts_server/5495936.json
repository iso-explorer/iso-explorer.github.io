post_cb({"5496215": {"ParentId": "5495936", "PostTypeId": "2", "CommentCount": "6", "CreationDate": "2011-03-31T06:53:11.757", "Score": "3", "LastEditorUserId": "597607", "LastEditDate": "2011-03-31T09:42:17.157", "Id": "5496215", "OwnerUserId": "597607", "Body": "<p>I believe it just that some new features have changed the way a declaration works - in the small details.</p>\n<p>For example, this does't just introduce some names, but also affects compilation of the code.</p>\n<pre><code>struct A\n{\n  int x;\n};\n\nstruct B\n{\n    A  a;\n    static_assert(sizeof(a) &gt; 10, \"Wrong member size\");\n};\n</code></pre>\n<p>We also have the empty declaration <strike>(which I belive can only be used inside a class)</strike>:</p>\n<pre><code>struct C\n{\n  void f()\n  { };      // Semicolon here is allowed, but is an empty declaration\n};\n</code></pre>\n<p>The empty declaration is a declaration that does <strong>not</strong> introduce a name (because it is empty).</p>\n<p>Figured out the \"affects template instantiation\" as well, I think:</p>\n<pre><code>template&lt;class T&gt;\nclass X\n{\n   // some members\n};\n\nextern template class X&lt;int&gt;;\nextern template class X&lt;char&gt;;\n</code></pre>\n<p>Tells the compiler that <code>X&lt;int&gt;</code> and <code>X&lt;char&gt;</code> will be instantiated somewhere else and does not have to be generated here.</p>\n", "LastActivityDate": "2011-03-31T09:42:17.157"}, "5495936": {"CommentCount": "0", "ViewCount": "219", "PostTypeId": "1", "LastEditorUserId": "415784", "CreationDate": "2011-03-31T06:14:28.140", "LastActivityDate": "2011-03-31T09:42:17.157", "Title": "Statement from ISO standard $3.1 : 1st point from n3242 doc", "AcceptedAnswerId": "5496215", "LastEditDate": "2011-03-31T06:31:49.017", "Id": "5495936", "Score": "2", "Body": "<p>Statement from ISO standard $3.1 : 1st point</p>\n<p>n3242 Says:</p>\n<blockquote>\n<p id=\"so_5495936_5495936_0\">A declaration (Clause 7) may\n  introduce one or more names into a\n  translation  unit or redeclare names\n  introduced by previous declarations.\n  If so, the   declaration specifies the\n  interpretation and attributes of these\n  names.   A declaration may also have\n  effects including:\n      \u2014 a static assertion (Clause 7),\n      \u2014 controlling template instantiation (14.7.2),\n      \u2014 use of attributes (Clause 7), and\n      \u2014 nothing (in the case of an empty-declaration).</p>\n</blockquote>\n<p>ISO 2003 DOC  says:</p>\n<blockquote>\n<p id=\"so_5495936_5495936_1\">A declaration (clause 7) introduces\n  names into a translation unit or<br>\n  redeclares names introduced by\n  previous declarations. A declaration<br>\n  specifies the interpretation and\n  attributes of these names.</br></br></p>\n</blockquote>\n<p>can any one explain what is the difference .</p>\n<p>They said  \"A declaration may also have effects including: \" ...CAn any one explain what are these effects in terms of Programming</p>\n<p>Please explain these effects in Programming way(with an example program)?</p>\n", "Tags": "<c++><c++11>", "OwnerUserId": "526255", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_5495936_5495936_0": {"section_id": 7033, "quality": 0.9743589743589743, "length": 38}, "so_5495936_5495936_1": {"section_id": 7033, "quality": 0.8235294117647058, "length": 14}}, "n3337": {"so_5495936_5495936_0": {"section_id": 6779, "quality": 0.9743589743589743, "length": 38}, "so_5495936_5495936_1": {"section_id": 6779, "quality": 0.8235294117647058, "length": 14}}, "n4659": {"so_5495936_5495936_0": {"section_id": 8530, "quality": 0.9743589743589743, "length": 38}, "so_5495936_5495936_1": {"section_id": 8530, "quality": 0.8235294117647058, "length": 14}}}});