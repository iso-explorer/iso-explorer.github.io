post_cb({"24541085": {"ParentId": "24530868", "CommentCount": "0", "Body": "<p>You are probably coming from a languange like PHP, where the check is processed different:</p>\n<pre><code> php -r 'echo \"X\";if (\"\") echo \"Y\";'\n</code></pre>\n<p>THis will print the X, but not the Y because the empty string has no value.</p>\n<p>As others have pointed out, in C++ it's a non-null-pointer, so evaluated as true.</p>\n", "OwnerUserId": "3799364", "PostTypeId": "2", "Id": "24541085", "Score": "0", "CreationDate": "2014-07-02T21:09:52.873", "LastActivityDate": "2014-07-02T21:09:52.873"}, "24530868": {"CommentCount": "7", "CreationDate": "2014-07-02T12:15:55.920", "PostTypeId": "1", "AcceptedAnswerId": "24530906", "LastEditorUserId": "962089", "LastActivityDate": "2014-07-02T21:09:52.873", "LastEditDate": "2014-07-02T12:25:15.527", "ViewCount": "2578", "FavoriteCount": "1", "Title": "Why is an empty string literal treated as true?", "Id": "24530868", "Score": "20", "Body": "<p>Why is the condition in this code <code>true</code>?    </p>\n<pre><code>int main ( )\n{\n\n   if (\"\")\n      cout &lt;&lt; \"hello\"; // executes!\n\n   return 0;\n}\n</code></pre>\n", "Tags": "<c++><string><if-statement>", "OwnerUserId": "3230864", "AnswerCount": "3"}, "24530927": {"ParentId": "24530868", "LastEditDate": "2014-07-02T12:30:08.000", "CommentCount": "0", "CreationDate": "2014-07-02T12:19:01.363", "OwnerUserId": "3265278", "LastEditorUserId": "3747990", "PostTypeId": "2", "Id": "24530927", "Score": "3", "Body": "<p>Because <code>\"\"</code> decays to a <code>char const*</code> and all non-null pointers evaluate to <code>true</code> if or when converted to a boolean.</p>\n", "LastActivityDate": "2014-07-02T12:30:08.000"}, "bq_ids": {"n4140": {"so_24530868_24530906_1": {"section_id": 44, "quality": 1.0, "length": 39}}, "n3337": {"so_24530868_24530906_1": {"section_id": 41, "quality": 1.0, "length": 39}}, "n4659": {"so_24530868_24530906_1": {"section_id": 45, "quality": 1.0, "length": 39}}}, "24530906": {"ParentId": "24530868", "LastEditDate": "2014-07-02T19:20:40.193", "CommentCount": "10", "CreationDate": "2014-07-02T12:17:52.783", "OwnerUserId": "3549027", "LastEditorUserId": "3549027", "PostTypeId": "2", "Id": "24530906", "Score": "29", "Body": "<p>A condition is considered \"true\" if it evaluates to anything other than 0<sup>*</sup>. <code>\"\"</code> is a const char array containing a single <code>\\0</code> character. To evaluate this as a condition, the compiler \"decays\" the array to <code>const char*</code>. Since the <code>const char[1]</code> is not located at address 0, the pointer is nonzero and the condition is satisfied.</p>\n<hr>\n<p><sup>*</sup> More precisely, if it evaluates to <code>true</code> after being implicitly converted to <code>bool</code>. For simple types this amounts to the same thing as nonzero, but for class types you have to consider whether <code>operator bool()</code> is defined and what it does.</p>\n<p>\u00a7 4.12 from the C++ 11 draft spec:</p>\n<blockquote>\n<p id=\"so_24530868_24530906_0\">4.12 Boolean conversions [conv.bool]</p>\n<p id=\"so_24530868_24530906_1\">A prvalue of arithmetic, unscoped enumeration, pointer, or pointer to member type can be\n  converted to a prvalue of type bool. A zero value, null pointer value,\n  or null member pointer value is converted to false; any other value is\n  converted to true. A prvalue of type std::nullptr_t can be converted\n  to a prvalue of type bool; the resulting value is false.</p>\n</blockquote>\n</hr>", "LastActivityDate": "2014-07-02T19:20:40.193"}});