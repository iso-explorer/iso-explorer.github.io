post_cb({"bq_ids": {"n4140": {"so_24513692_24514151_0": {"length": 17, "quality": 0.6538461538461539, "section_id": 435}}, "n3337": {"so_24513692_24514151_0": {"length": 25, "quality": 0.9615384615384616, "section_id": 427}}, "n4659": {"so_24513692_24514151_0": {"length": 17, "quality": 0.6538461538461539, "section_id": 454}}}, "24514151": {"Id": "24514151", "PostTypeId": "2", "Body": "<p>Your issue is not related with global variables, but with class member initialization.</p>\n<p>What you are trying to do with <code>x</code> is <em>in-class member initialization</em> and is supported in C++ since C++11, standard section \u00a712.6.2 :</p>\n<blockquote>\n<p id=\"so_24513692_24514151_0\">In a non-delegating constructor, if a given non-static data member or\n  base class is not designated by a mem-initializer-id (including the\n  case where there is no mem-initializer-list because the constructor\n  has no ctor-initializer) and the entity is not a virtual base class of\n  an abstract class (10.4), then</p>\n<ul>\n<li>if the entity is a non-static data member that has a brace-or-equal-initializer, the entity is initialized as specified in\n  8.5;</li>\n</ul>\n</blockquote>\n<hr>\n<p><strong>Solution :</strong></p>\n<ul>\n<li>Use a C++11 compiler and add support for C++11 (-std=c++11). See it working <a href=\"http://coliru.stacked-crooked.com/a/8c4726156b3a5f2b\" rel=\"nofollow\">here</a>.</li>\n<li>If you really can't, do the usual and provide a constructor to initialize your member :</li>\n</ul>\n<p><strong>Example :</strong></p>\n<pre><code>a() : x(::i) {}\n</code></pre>\n</hr>", "LastActivityDate": "2014-07-01T15:32:59.007", "CommentCount": "0", "CreationDate": "2014-07-01T15:32:59.007", "ParentId": "24513692", "Score": "2", "OwnerUserId": "3510483"}, "24513692": {"ViewCount": "378", "Body": "<p>I have declare a global data and global function,when i try to access in a class compiler throw error as \"  i cannot appear in constant expression\",why?</p>\n<pre><code>  #include&lt;iostream&gt;\n  using namespace std;\n  int i=20;\n\n  void fn()\n  { \n    cout&lt;&lt;\" I am outside class\"&lt;&lt;endl;\n  }\n\n  class a\n  {\n      public: \n\n        int x= ::i;  // error is  i cannot appear in constant expression\n\n        void accessGlobal()\n        {\n\n           ::fn();      //fn() is being called\n        }\n  };\n\n  int main()\n  {\n     a obj;\n     obj.accessGlobal();\n  }\n</code></pre>\n", "AcceptedAnswerId": "24514151", "Title": "How Access of global data member and member function in a class?", "CreationDate": "2014-07-01T15:11:43.340", "Id": "24513692", "CommentCount": "7", "LastEditDate": "2014-07-01T15:16:04.037", "PostTypeId": "1", "LastEditorUserId": "3510483", "LastActivityDate": "2014-07-01T18:11:50.710", "Score": "1", "OwnerUserId": "3784175", "Tags": "<c++>", "AnswerCount": "2"}, "24513846": {"Id": "24513846", "PostTypeId": "2", "Body": "<p>You need to use C++11 standard to compile this code, in previous standards it is forbidden to define non-static variable inside the definition of the class (constructor of the class should do it). Following the old standard you can also try to add <code>static</code> keyword before variable declaration and initialize it after the class definition:</p>\n<pre><code>class a {\n    public:\n        static int x;\n};\nint a::x = ::i;\n</code></pre>\n", "LastActivityDate": "2014-07-01T15:19:42.477", "CommentCount": "1", "CreationDate": "2014-07-01T15:19:42.477", "ParentId": "24513692", "Score": "-1", "OwnerUserId": "3788215"}});