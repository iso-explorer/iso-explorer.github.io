post_cb({"7855777": {"ParentId": "7855226", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>You can't. The standard says about <code>getline</code>:</p>\n<blockquote>\n<p id=\"so_7855226_7855777_0\">If the function extracts no characters, it calls <code>is.setstate(ios_base::failbit)</code> which may throw <code>ios_base::failure</code> (27.5.5.4).</p>\n</blockquote>\n<p>If your file ends with an empty line, i.e. last character is '\\n', then the last call to getline reads no characters and fails. Indeed, how did you want the loop to terminate if it would not set failbit? The condition of the <code>while</code> would always be true and it would run forever.</p>\n<p>I think that you misunderstand what failbit means. It does <em>not</em> mean that the file cannot be read. It is rather used as a flag that the last operation succeeded. To indicate a low-level failure the badbit is used, but it has little use for standard file streams. failbit and eofbit usually should not be interpreted as exceptional situations. badbit on the other hand should, and I would argue that fstream::open should have set badbit instead of failbit.</p>\n<p>Anyway, the above code should be written as:</p>\n<pre><code>try {\n    ifstream inf(argv[1]);\n    if(!inf) throw SomeError(\"Cannot open file\", argv[1]);\n    string line;\n    while(getline(inf,line))\n        cout &lt;&lt; line &lt;&lt; endl;\n    inf.close();\n} catch(const std::exception&amp; e) {\n    cout &lt;&lt; e.what() &lt;&lt; endl;\n}\n</code></pre>\n", "OwnerUserId": "277176", "LastEditorUserId": "277176", "LastEditDate": "2011-10-21T22:07:56.340", "Id": "7855777", "Score": "6", "CreationDate": "2011-10-21T22:01:24.243", "LastActivityDate": "2011-10-21T22:07:56.340"}, "bq_ids": {"n4140": {"so_7855226_7855777_0": {"section_id": 2232, "quality": 0.7777777777777778, "length": 7}}, "n3337": {"so_7855226_7855777_0": {"section_id": 2220, "quality": 0.7777777777777778, "length": 7}}, "n4659": {"so_7855226_7855777_0": {"section_id": 2505, "quality": 0.7777777777777778, "length": 7}}}, "7855226": {"CommentCount": "4", "ViewCount": "2593", "CreationDate": "2011-10-21T20:59:24.647", "LastActivityDate": "2011-10-21T22:07:56.340", "Title": "Use getline() without setting failbit", "AcceptedAnswerId": "7855777", "PostTypeId": "1", "Id": "7855226", "Score": "6", "Body": "<p>Is it possible use <code>getline()</code> to read a valid file without setting <code>failbit</code>? I would like to use <code>failbit</code> so that an exception is generated if the input file is not readable.</p>\n<p>The following code always outputs <code>basic_ios::clear</code> as the last line - even if a valid input is specified.</p>\n<p>test.cc:</p>\n<pre class=\"lang-c prettyprint-override\"><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;fstream&gt;\nusing namespace std;\n\nint main(int argc, char* argv[])\n{\n    ifstream inf;\n    string line;\n\n    inf.exceptions(ifstream::failbit);\n    try {\n        inf.open(argv[1]);\n        while(getline(inf,line))\n            cout &lt;&lt; line &lt;&lt; endl;\n        inf.close();\n    } catch(ifstream::failure e) {\n        cout &lt;&lt; e.what() &lt;&lt; endl;\n    }\n}\n</code></pre>\n<p>input.txt:</p>\n<pre><code>the first line\nthe second line\nthe last line\n</code></pre>\n<p>results:</p>\n<pre><code>$ ./a.out input.txt \nthe first line\nthe second line\nthe last line\nbasic_ios::clear\n</code></pre>\n", "Tags": "<c++><exception><file-io><eof><getline>", "OwnerUserId": "810957", "AnswerCount": "1"}});