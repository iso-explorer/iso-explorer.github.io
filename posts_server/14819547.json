post_cb({"14819547": {"ViewCount": "433", "Body": "<p>Intuitively, judging from the C++ spec, it looks to me as if <code>istream::putback( c )</code> should always arrange the input buffer such that the next call to <code>istream::peek()</code> should read the character <code>c</code>. Is this not correct? I ask because the latest version of libc++ shipping with Xcode 4.6 seems not to enforce this behavior in all cases\u2014particularly when the last character is at the EOF. The same is true if you use <code>unget()</code> instead of <code>putback( c )</code>. </p>\n<p>Is libc++'s behavior correct, or is my intuition of how <code>putback()/unget()</code> should work correct?</p>\n<p>Consider this example code, which works with libstdc++ but not with libc++ (the assertion fails).</p>\n<pre><code>#include &lt;sstream&gt;\n#include &lt;cassert&gt;\n\nint main(int argc, const char * argv[])\n{\n    std::istringstream in( \"[Test]\" );\n\n    while( in )\n    {\n        int c = in.get();\n        if( c == ']' )\n        {\n            in.putback( c );\n            assert( in.peek() == c );   // Fails with libc++. Succeeds with libstdc++.\n            break;\n        }\n    }\n\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "14820804", "Title": "Shouldn't istream::peek() always return what you just putback()?", "CreationDate": "2013-02-11T19:38:09.083", "Id": "14819547", "CommentCount": "2", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2013-02-11T19:47:12.887", "LastEditorUserId": "358475", "LastActivityDate": "2013-02-11T21:34:29.560", "Score": "11", "OwnerUserId": "358475", "Tags": "<c++><istream><libc++>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_14819547_14820804_1": {"length": 11, "quality": 0.8461538461538461, "section_id": 2241}}, "n3337": {"so_14819547_14820804_1": {"length": 11, "quality": 0.8461538461538461, "section_id": 2229}}, "n4659": {"so_14819547_14820804_1": {"length": 10, "quality": 0.7692307692307693, "section_id": 2514}}}, "14819584": {"Id": "14819584", "PostTypeId": "2", "Body": "<p>Bo Persson is correct about the standards. You are probably using an older version of libc++ (your problem is in the LLVM bugtracker, see below).</p>\n<p>The change was introduced in revision 162108:</p>\n<pre><code>--- istream     (revision 162607)\n+++ istream     (revision 162608)\n@@ -1263,6 +1263,7 @@\n     try\n     {\n #endif  // _LIBCPP_NO_EXCEPTIONS\n+        this-&gt;clear(this-&gt;rdstate() &amp; ~ios_base::eofbit);\n         sentry __sen(*this, true);\n         if (__sen)\n         {\n</code></pre>\n<p>The log concerning the change:</p>\n<blockquote>\n<p id=\"so_14819547_14819584_0\">$ svn log -r 162608</p>\n<p id=\"so_14819547_14819584_1\">------------------------------------------------------------------------ r162608 | hhinnant | 2012-08-25 00:03:03 +0200 (Sat, 25 Aug 2012) | 1\n  line</p>\n<p id=\"so_14819547_14819584_2\">Have basic_istream seekg, putback and unget first clear eofbit.  Fixes\n  <a href=\"http://llvm.org/bugs/show_bug.cgi?id=13089\" rel=\"nofollow\">http://llvm.org/bugs/show_bug.cgi?id=13089</a>.</p>\n</blockquote>\n", "LastEditorUserId": "1865077", "LastActivityDate": "2013-02-11T21:34:29.560", "Score": "4", "CreationDate": "2013-02-11T19:41:34.247", "ParentId": "14819547", "CommentCount": "0", "OwnerUserId": "1865077", "LastEditDate": "2013-02-11T21:34:29.560"}, "14820804": {"Id": "14820804", "PostTypeId": "2", "Body": "<p>There has actually been a change to the <code>putback</code> function in C++11:</p>\n<p>\u00a727.7.2.3/34</p>\n<blockquote>\n<p id=\"so_14819547_14820804_0\"><code>basic_istream&lt;charT,traits&gt;&amp; putback(char_type c);</code></p>\n<p id=\"so_14819547_14820804_1\">Effects: Behaves as an unformatted input function (as described in 27.7.2.3, paragraph 1), except that the function first clears <code>eofbit</code>. ...</p>\n</blockquote>\n<p>Where the second half of the sentence didn't exist in C++03. </p>\n<p>So it might depend on whether the compilers have fully implemented this change, or  if you use the required options (<code>-std=C++11</code>?).</p>\n", "LastActivityDate": "2013-02-11T21:03:24.727", "CommentCount": "0", "CreationDate": "2013-02-11T21:03:24.727", "ParentId": "14819547", "Score": "6", "OwnerUserId": "597607"}});