post_cb({"21205044": {"AcceptedAnswerId": "21205057", "Title": "Why is this C++ code not deleting an object from the heap?", "CreationDate": "2014-01-18T13:53:12.467", "Score": "0", "CommentCount": "1", "OwnerUserId": "3199023", "ClosedDate": "2014-01-18T15:11:52.903", "AnswerCount": "1", "LastActivityDate": "2014-01-18T14:02:47.827", "PostTypeId": "1", "Tags": "<c++>", "Body": "<p>I am learning C++ and I am have written some code to get some experience with manually creating and removing objects. I don't think I fully understand the semantics of delete because the print statement still prints 3 and I believe it shouldn't.</p>\n<p>Code</p>\n<pre><code>#include &lt;iostream&gt;\n\nclass Test {\npublic:\n    int x;\n    int y;\n};\n\nusing namespace std;\n\nint main() {\n    Test t1;\n    t1.x = 1;\n    t1.y = 2;\n    cout &lt;&lt; t1.x &lt;&lt; endl;\n    cout &lt;&lt; t1.y &lt;&lt;endl;\n\n    Test *t2 = new Test();\n    t2-&gt;x = 3; t2-&gt;y = 4;\n    cout &lt;&lt; t2-&gt;x &lt;&lt; endl;\n    cout &lt;&lt; t2-&gt;y &lt;&lt;endl;\n    delete t2;\n\n    cout &lt;&lt; t2-&gt;x &lt;&lt; endl;\n}\n</code></pre>\n<p>Output</p>\n<pre><code>joel-MacBook-Air:src joel$ ./test \n1\n2\n3\n4\n3\n</code></pre>\n<p>Please could you explain why it prints 3 at the very end? My knowledge is that it shouldn't print 3 as I deleted the object.</p>\n", "Id": "21205044", "ViewCount": "81"}, "bq_ids": {"n3337": {"so_21205044_21205057_0": {"quality": 0.9047619047619048, "length": 19, "section_id": 5}}}, "21205057": {"PostTypeId": "2", "ParentId": "21205044", "Score": "8", "LastEditorUserId": "150634", "Body": "<p>It is undefined behaviour to access an object after it has been destroyed. Your program could do anything. It just so happens that you still get the value <code>3</code>.</p>\n<blockquote>\n<p id=\"so_21205044_21205057_0\"><em>4.1/1 [conv.lval]</em> A glvalue of a non-function, non-array type T can be converted to a prvalue. [...] If the object to which the glvalue refers is not an object of type T and is not an object of a type derived from T, or [...], a program that necessitates this conversion has undefined behavior.</p>\n</blockquote>\n<p>Accessing a member of an object necessitates this conversion.</p>\n", "LastEditDate": "2014-01-18T14:00:52.600", "CommentCount": "6", "Id": "21205057", "OwnerUserId": "150634", "CreationDate": "2014-01-18T13:54:41.757", "LastActivityDate": "2014-01-18T14:00:52.600"}});