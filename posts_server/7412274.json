post_cb({"7412274": {"CommentCount": "6", "AcceptedAnswerId": "7412299", "CreationDate": "2011-09-14T06:43:37.767", "LastActivityDate": "2011-09-14T09:51:42.133", "PostTypeId": "1", "ViewCount": "8369", "FavoriteCount": "5", "Title": "Why add void to method parameter list", "Id": "7412274", "Score": "28", "Body": "<p>I've seen methods with the following signature:</p>\n<pre><code>void foo (void);\n</code></pre>\n<p>They take no argument, however I'm wondering whether doing this is useful or not. Is there a reason why you would want to do it?</p>\n", "Tags": "<c++>", "OwnerUserId": "673730", "AnswerCount": "4"}, "7412301": {"ParentId": "7412274", "CommentCount": "6", "Body": "<p>This is a holdover from older versions of C, where <code>foo()</code> meant \"a function with an unknown number of parameters\" and <code>foo(void)</code> means \"a function with zero parameters.\" In C++, <code>foo()</code> and <code>foo(void)</code> both mean \"a function with zero parameters\", but some people prefer the second form because it is more explicit.</p>\n", "OwnerUserId": "902497", "PostTypeId": "2", "Id": "7412301", "Score": "50", "CreationDate": "2011-09-14T06:46:25.453", "LastActivityDate": "2011-09-14T06:46:25.453"}, "7412294": {"ParentId": "7412274", "CommentCount": "0", "Body": "<p>This is a legacy from the older versions of <code>C</code> for functions with no arguments</p>\n", "OwnerUserId": "11515", "PostTypeId": "2", "Id": "7412294", "Score": "3", "CreationDate": "2011-09-14T06:45:42.767", "LastActivityDate": "2011-09-14T06:45:42.767"}, "7412375": {"ParentId": "7412274", "CommentCount": "1", "Body": "<p>In C++ code there is no reason whatsoever to use void in this way. What's more it is very much not the idiomatic way to declare parameterless functions.</p>\n", "OwnerUserId": "505088", "PostTypeId": "2", "Id": "7412375", "Score": "2", "CreationDate": "2011-09-14T06:54:13.613", "LastActivityDate": "2011-09-14T06:54:13.613"}, "bq_ids": {"n4140": {"so_7412274_7412299_1": {"section_id": 3240, "quality": 0.88, "length": 22}}, "n3337": {"so_7412274_7412299_1": {"section_id": 3113, "quality": 0.88, "length": 22}}, "n4659": {"so_7412274_7412299_1": {"section_id": 3996, "quality": 0.88, "length": 22}}}, "7412299": {"ParentId": "7412274", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>The C++03 standard says (emphasis mine):</p>\n<blockquote>\n<p id=\"so_7412274_7412299_0\">8.3.5.2</p>\n<p id=\"so_7412274_7412299_1\">The parameter-declaration-clause determines the arguments that can be\n  specified, and their processing, when the function is called. [Note:\n  the parameter-declaration-clause is used to convert the arguments\n  specified on the function call; see 5.2.2. ] <strong>If the\n  parameter-declaration-clause is empty, the function takes no\n  arguments</strong>.</p>\n</blockquote>\n<p>This means that if you are talking to the compiler it's just a matter of taste.</p>\n<p>If you are writing code that will be read by others, then the C++ way of doing things is</p>\n<pre><code>void foo();\n</code></pre>\n<p>The other form remains valid only for reasons of compatibility with C, where there <em>was</em> a difference among the two signatures.</p>\n", "OwnerUserId": "50079", "LastEditorUserId": "50079", "LastEditDate": "2011-09-14T09:51:42.133", "Id": "7412299", "Score": "15", "CreationDate": "2011-09-14T06:46:09.273", "LastActivityDate": "2011-09-14T09:51:42.133"}});