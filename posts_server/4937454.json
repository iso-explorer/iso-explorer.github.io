post_cb({"4937538": {"ParentId": "4937454", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Martin and Demian are both right:</p>\n<ul>\n<li>The three \".\" together form a ellipsis (On the Macintosh this is a single special character \"...\", but not usable for C++)</li>\n<li>In C++ an ellipsis is used to define a Variable length parameter list</li>\n</ul>\n", "OwnerUserId": "53420", "LastEditorUserId": "544557", "LastEditDate": "2012-06-30T02:06:25.810", "Id": "4937538", "Score": "1", "CreationDate": "2011-02-08T19:42:27.323", "LastActivityDate": "2012-06-30T02:06:25.810"}, "4937628": {"ParentId": "4937454", "CommentCount": "1", "Body": "<p>Ellipsis notation (, ...) p202 \"K+R The C Programming Language\"</p>\n", "OwnerUserId": "225437", "PostTypeId": "2", "Id": "4937628", "Score": "14", "CreationDate": "2011-02-08T19:51:07.090", "LastActivityDate": "2011-02-08T19:51:07.090"}, "4939467": {"ParentId": "4937454", "CommentCount": "0", "Body": "<p>In addition to \"ellipsis\" and \"variadic function\", one also sees the terms \"vararg\" and \"varargs\" thrown around. This appears to be an abbreviation for \"variable argument list\", judging by the language surrounding the (LEGACY) header <a href=\"http://pubs.opengroup.org/onlinepubs/007908799/xsh/varargs.h.html\" rel=\"nofollow\"><code>&lt;varargs.h&gt;</code> in POSIX</a>.</p>\n<p>Also, the principle reason that the term \"ampersand operator\" is not used is that the ampersand can represent either of <em>two different</em> operators, depending on the context, which would make the term ambiguous. This does not occur with the ellipsis; there is no other meaning assigned to it, so using the term \"ellipsis\" for the token \"<code>...</code>\" is <strong>not</strong> like using the term \"ampersand operator\" for the token \"<code>&amp;</code>\".</p>\n", "OwnerUserId": "294313", "PostTypeId": "2", "Id": "4939467", "Score": "2", "CreationDate": "2011-02-08T22:54:23.510", "LastActivityDate": "2011-02-08T22:54:23.510"}, "4937501": {"ParentId": "4937454", "CommentCount": "0", "Body": "<p><a href=\"http://en.wikipedia.org/wiki/Variadic_function\" rel=\"nofollow\">Variadic</a></p>\n", "OwnerUserId": "9453", "PostTypeId": "2", "Id": "4937501", "Score": "1", "CreationDate": "2011-02-08T19:39:21.063", "LastActivityDate": "2011-02-08T19:39:21.063"}, "bq_ids": {"n4140": {"so_4937454_4938713_0": {"section_id": 5993, "quality": 0.85, "length": 17}, "so_4937454_4938713_1": {"section_id": 3240, "quality": 1.0, "length": 13}}, "n3337": {"so_4937454_4938713_0": {"section_id": 5761, "quality": 0.85, "length": 17}, "so_4937454_4938713_1": {"section_id": 3113, "quality": 1.0, "length": 13}}, "n4659": {"so_4937454_4938713_0": {"section_id": 7495, "quality": 0.85, "length": 17}, "so_4937454_4938713_1": {"section_id": 3996, "quality": 1.0, "length": 13}}}, "4937608": {"ParentId": "4937454", "CommentCount": "1", "Body": "<p>\"Ellipsis\" is in fact often the best term here.  Sometimes we refer to \"arguments passed using the ellipsis\" (C++03 8.3.5p2).  In the context of figuring out the best overloaded function, an argument can be said to \"match the ellipsis\" (C++03 13.3.2p2).</p>\n<p><code>printf</code> and other functions like it are often called \"variadic functions\".</p>\n<p>Note: The coming C++0x Standard offers two different ways of declaring and implementing variadic functions (the <code>va_arg</code> way and the template way).  But both involve the ellipsis token.</p>\n", "OwnerUserId": "459640", "PostTypeId": "2", "Id": "4937608", "Score": "8", "CreationDate": "2011-02-08T19:49:33.787", "LastActivityDate": "2011-02-08T19:49:33.787"}, "4937462": {"ParentId": "4937454", "CommentCount": "3", "Body": "<p>Ellipsis operator is the only term I have heard - it's rare enough (thankfully) that you don't need anything else!</p>\n", "OwnerUserId": "10897", "PostTypeId": "2", "Id": "4937462", "Score": "4", "CreationDate": "2011-02-08T19:36:43.130", "LastActivityDate": "2011-02-08T19:36:43.130"}, "4937454": {"CommentCount": "4", "ViewCount": "2857", "PostTypeId": "1", "LastEditorUserId": "497934", "CreationDate": "2011-02-08T19:35:18.863", "LastActivityDate": "2012-06-30T02:06:25.810", "Title": "What's the correct term for the '...' token?", "AcceptedAnswerId": "4937471", "LastEditDate": "2012-04-22T05:07:43.380", "Id": "4937454", "Score": "15", "Body": "<p>Consider printf:</p>\n<pre><code>int printf ( const char * format, ... );\n</code></pre>\n<p>What are the terms used to describe the <code>...</code> and the functions that use it?  I've been calling it an ellipsis, but that's like calling <code>&amp;</code> the \"ampersand operator.\"</p>\n", "Tags": "<c++><c><terminology>", "OwnerUserId": "497934", "AnswerCount": "8"}, "4938713": {"ParentId": "4937454", "CommentCount": "0", "Body": "<p><a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1905.pdf\" rel=\"nofollow\">This C++ draft specification</a> refers to it simply as '<strong>ellipsis</strong>' and sometimes with a definite or indefinite article, as '<strong>an ellipsis</strong>' or '<strong>the ellipsis</strong>'.</p>\n<p>5.2.2 \"Function call\" section 6 contains:</p>\n<blockquote>\n<p id=\"so_4937454_4938713_0\">A function can be declared to accept fewer arguments (by declaring\n  default arguments (8.3.6)) or more arguments (by using <strong>the ellipsis</strong>, ... 8.3.5)\n  than the number of parameters in the function de\ufb01nition (8.4). </p>\n</blockquote>\n<p>8.3.5 \"Functions\" section 2 contains:</p>\n<blockquote>\n<p id=\"so_4937454_4938713_1\">If the parameter-declaration-clause\n  terminates with <strong>an ellipsis</strong>, the\n  number of arguments shall be equal to\n  or greater than the number of\n  parameters that do not have a default\n  argument.</p>\n</blockquote>\n<p>8.3.6 section 4 contains sample code:</p>\n<pre><code>void g(int =  0, ...); // OK, ellipsis is not a parameter so it can follow\n                       // a parameter with a default argument\n</code></pre>\n<p>Extra pedantry:  section 13.3.3.1.3 (\"Ellipsis conversion sequences\") refers to \"the ellipsis parameter specification\".  However, as stated in the sample code above, the ellipsis is not, strictly speaking, a parameter.  8.3.5 section 1 explains that, while the ellipsis appears in the parameter-declaration-clause, it follows the parameter-declaration-list.</p>\n", "OwnerUserId": "604049", "PostTypeId": "2", "Id": "4938713", "Score": "2", "CreationDate": "2011-02-08T21:31:59.960", "LastActivityDate": "2011-02-08T21:31:59.960"}, "4937471": {"ParentId": "4937454", "CommentCount": "1", "Body": "<p><a href=\"http://en.wikipedia.org/wiki/Parameter_%28computer_programming%29#Variable-length_parameter_lists\" rel=\"nofollow\">Variable length parameter list</a></p>\n<p>Edit:</p>\n<p>Or, if describing the function itself: <a href=\"http://en.wikipedia.org/wiki/Variadic_function\" rel=\"nofollow\">Variadic function</a></p>\n", "OwnerUserId": "534476", "PostTypeId": "2", "Id": "4937471", "Score": "19", "CreationDate": "2011-02-08T19:37:28.620", "LastActivityDate": "2011-02-08T19:37:28.620"}});