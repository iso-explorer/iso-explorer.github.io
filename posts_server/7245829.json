post_cb({"7245829": {"CommentCount": "0", "ViewCount": "164", "CreationDate": "2011-08-30T15:36:56.413", "LastActivityDate": "2011-08-30T15:51:13.587", "Title": "pointer to function assignment", "AcceptedAnswerId": "7245858", "PostTypeId": "1", "Id": "7245829", "Score": "5", "Body": "<p>Why the assignment without '&amp;' is compiling in the following code? I compiled the code with GCC 3.4.6. Is it right to assign without &amp;, or this is a \"feature\" of GCC?</p>\n<pre><code>void func() {\n}\n\nint main() {\n  typedef void (*F)();\n\n  F f;\n  f = &amp;func; // the way of assigning pointer to function.\n  f = func;  // this is also working.\n\n  (*f)();\n\n  return 0;\n}\n</code></pre>\n", "Tags": "<c++><function-pointers>", "OwnerUserId": "653478", "AnswerCount": "1"}, "7245858": {"ParentId": "7245829", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>This is perfectly ok. Both statements are totally equivalent. The function lvalue is converted to a pointer to function through a standard conversion. \u00a74.3/1:</p>\n<blockquote>\n<p id=\"so_7245829_7245858_0\">An lvalue of function type T can be converted to an rvalue of type \u201cpointer to T.\u201d The result is a pointer to the function.</p>\n</blockquote>\n", "OwnerUserId": "485561", "LastEditorUserId": "485561", "LastEditDate": "2011-08-30T15:51:13.587", "Id": "7245858", "Score": "13", "CreationDate": "2011-08-30T15:39:59.417", "LastActivityDate": "2011-08-30T15:51:13.587"}, "bq_ids": {"n4140": {"so_7245829_7245858_0": {"section_id": 12, "quality": 0.8333333333333334, "length": 10}}, "n3337": {"so_7245829_7245858_0": {"section_id": 9, "quality": 0.8333333333333334, "length": 10}}, "n4659": {"so_7245829_7245858_0": {"section_id": 13, "quality": 0.8333333333333334, "length": 10}}}});