post_cb({"35617844": {"ViewCount": "66", "Body": "<p>I saw this code on leetcode,it's a question to find the majority element.Here is the question description:</p>\n<p>Given an array of size n, find the majority element. The majority element is the element that appears more than \u230a n/2 \u230b times.</p>\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\n<p>And there is an answer in discuss with these code:</p>\n<pre><code>class Solution\n{\npublic:\n    int majorityElement(vector&lt;int&gt;&amp; nums) \n    {\n        map&lt;int, int&gt; cnt;\n        for(int i=0; i &lt; nums.size(); i++)\n            cnt[ nums[i] ]++;\n\n        int n = nums.size();\n        for(map&lt;int, int&gt;::iterator iter=cnt.begin(); iter!=cnt.end();iter++)\n            if( iter-&gt;second &gt; n/2 )\n                return iter-&gt;first;\n    }\n};\n</code></pre>\n<p>So I am curious about this line:cnt[ nums[i] ]++;</p>\n<p>Don't I need to initialize the cnt[nums[i]]=0 first?\nI thought I need to do it first or there will be memory leakage because no existing value for key nums[i] to perform ++.\nAm I wrong?</p>\n", "AcceptedAnswerId": "35617887", "Title": "map<int,int> counter; counter[nums[i]]++;", "CreationDate": "2016-02-25T03:45:12.267", "Id": "35617844", "CommentCount": "1", "LastEditDate": "2016-02-25T03:49:07.720", "PostTypeId": "1", "LastEditorUserId": "485561", "LastActivityDate": "2016-02-25T03:49:07.720", "Score": "3", "OwnerUserId": "5978075", "Tags": "<c++>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_35617844_35617887_1": {"length": 8, "quality": 0.8888888888888888, "section_id": 1007}}, "n3337": {"so_35617844_35617887_1": {"length": 8, "quality": 0.8888888888888888, "section_id": 992}}, "n4659": {"so_35617844_35617887_1": {"length": 5, "quality": 0.5555555555555556, "section_id": 802}}}, "35617887": {"Id": "35617887", "PostTypeId": "2", "Body": "<p><code>std::map::operator[]</code> is defined to default initialise the value at the given key if no such value already exists. From the standard; <code>[map.access]</code>:</p>\n<blockquote>\n<p id=\"so_35617844_35617887_0\">T&amp; operator[](const key_type&amp; x);</p>\n<p id=\"so_35617844_35617887_1\">1 Effects: If there is no key equivalent to x in the map, inserts value_type(x, T()) into the map.</p>\n</blockquote>\n<p>For <code>int</code>, the default value is <code>0</code>, so no further work must be done.</p>\n", "LastActivityDate": "2016-02-25T03:48:46.613", "CommentCount": "1", "CreationDate": "2016-02-25T03:48:46.613", "ParentId": "35617844", "Score": "4", "OwnerUserId": "485561"}});