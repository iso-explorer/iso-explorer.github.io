post_cb({"bq_ids": {"n3337": {"so_30803812_30804190_1": {"quality": 0.8846153846153846, "length": 23, "section_id": 6785}}}, "30803812": {"LastEditDate": "2015-06-12T13:21:14.803", "Body": "<pre><code>#include &lt;memory&gt;\n\nclass CItem\n{\n  private:\n    int m_inner;\n  public:\n    static const int CAP = 1;\n    CItem(int temp) : m_inner(temp) {}\n};\n\ntypedef std::shared_ptr&lt;CItem&gt; TPItem;\n\nint main()\n{\n  int tttt = CItem::CAP;\n  CItem *temp = new CItem(CItem::CAP);\n  TPItem temp2(temp);\n  TPItem temp3 = std::make_shared&lt;CItem&gt;(tttt);\n  TPItem temp4 = std::make_shared&lt;CItem&gt;(CItem::CAP); //On MinGW there error: \"undefined reference to `CItem::CAP'\"\n\n  return 0;\n}\n</code></pre>\n<ul>\n<li>on Visual Studio 2012 it work normal. </li>\n<li>on minGW32 4.9.1 it say\n\"undefined reference\" for static const field of class when try create\nshared pointer with make_shared.</li>\n<li>other methods: </li>\n<li>copy this field to int and create shared with this int - <strong>work</strong>.</li>\n<li>create class object with new - <strong>work</strong>.</li>\n</ul>\n<p>Where my fault?</p>\n", "LastEditorUserId": "1708801", "Score": "2", "AcceptedAnswerId": "30804190", "CommentCount": "0", "OwnerUserId": "5003179", "AnswerCount": "1", "PostTypeId": "1", "Tags": "<c++><c++11><static><const><mingw32>", "LastActivityDate": "2015-06-15T12:13:33.320", "Title": "C++11 MinGW 4.9.1 shared_ptr and const static class field result \"Undefined reference\"", "Id": "30803812", "ViewCount": "164", "CreationDate": "2015-06-12T13:03:36.753"}, "30804190": {"PostTypeId": "2", "ParentId": "30803812", "Score": "4", "LastEditorUserId": "1708801", "Body": "<p>This is because <code>CItem::CAP</code> is <a href=\"http://en.cppreference.com/w/cpp/language/definition#ODR-use\" rel=\"nofollow\">odr-used</a> by <code>std::make_shared</code> (<em>emphasis mine</em>):</p>\n<blockquote>\n<p id=\"so_30803812_30804190_0\"><strong>Informally</strong>, an object is odr-used <strong>if its address is taken, or a reference is bound to it</strong>, and a function is odr-used if a function call to it is made or its address is taken. If an object or a function is odr-used, its definition must exist somewhere in the program; a violation of that is a link-time error. </p>\n</blockquote>\n<p>Since <a href=\"http://en.cppreference.com/w/cpp/memory/shared_ptr/make_shared\" rel=\"nofollow\">std::make_shared</a> takes its arguments by reference, this counts as an odr-use.</p>\n<p>which means you are required to provide an out of class definition as well:</p>\n<pre><code>const int CItem::CAP  ;\n</code></pre>\n<p>or avoid the odr-use such as in this case:</p>\n<pre><code>TPItem temp3 = std::make_shared&lt;CItem&gt;(tttt) ;\n</code></pre>\n<p>For reference the draft C++11 standard section <code>3.2</code> <em>[basic.def.odr]</em> says:</p>\n<blockquote>\n<p id=\"so_30803812_30804190_1\">An expression is potentially evaluated unless it is an unevaluated\n  operand (Clause 5) or a subexpression thereof. A variable whose name\n  appears as a potentially-evaluated expression <strong>is odr-used unless</strong>\n  it is an object that <strong>satisfies the requirements for appearing in a\n  constant expression (5.19) and the lvalue-to-rvalue conversion\n  (4.1) is immediately applied</strong>.</p>\n</blockquote>\n<p><code>CItem::CAP</code> is a constant expression and in all the cases except this one:</p>\n<pre><code>TPItem temp4 = std::make_shared&lt;CItem&gt;(CItem::CAP);\n</code></pre>\n<p>the lvalue-to-rvalue conversion is applied immediately. </p>\n", "LastEditDate": "2015-06-15T12:13:33.320", "CommentCount": "3", "Id": "30804190", "OwnerUserId": "1708801", "CreationDate": "2015-06-12T13:20:59.593", "LastActivityDate": "2015-06-15T12:13:33.320"}});