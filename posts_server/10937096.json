post_cb({"10937195": {"ParentId": "10937096", "PostTypeId": "2", "CommentCount": "5", "Body": "<p>When you declare <code>f()</code> as a friend it's actually done in the enclosing namespace of the containing class (<code>A</code> in this case) if a forward declaration is not already present.</p>\n<p>So this...</p>\n<pre><code>namespace A\n{\n    class window\n    {\n    private:\n        friend void ::f(window);\n    };\n}\n</code></pre>\n<p>essentially becomes this...</p>\n<pre><code>namespace A\n{\n    class window;\n    void f(window);\n\n    class window\n    {\n    private:\n        friend void f(window);\n    };\n}\n</code></pre>\n<p><strong>Edit:</strong> Here is a snippet from the C++ standard that explicltly talks about this scenario:</p>\n<blockquote>\n<p id=\"so_10937096_10937195_0\">Standard 7.3.1.2 / 3 :</p>\n<p id=\"so_10937096_10937195_1\">Every name first declared in a namespace is a member of that namespace. <strong>If a friend declaration in a nonlocal class first declares a class or function the friend class or function is a member of the innermost enclosing namespace.</strong> The name of the friend is not found by unqualified lookup (3.4.1) or by qualified lookup (3.4.3) until a matching declaration is provided in that namespace scope (either before or after the class definition granting friendship). </p>\n</blockquote>\n", "OwnerUserId": "845568", "LastEditorUserId": "845568", "LastEditDate": "2012-06-07T18:51:28.160", "Id": "10937195", "Score": "4", "CreationDate": "2012-06-07T17:57:02.783", "LastActivityDate": "2012-06-07T18:51:28.160"}, "10937096": {"CommentCount": "3", "ViewCount": "1992", "PostTypeId": "1", "LastEditorUserId": "1310220", "CreationDate": "2012-06-07T17:49:19.340", "LastActivityDate": "2013-03-07T19:51:17.750", "Title": "friend functions of a class inside a namespace", "LastEditDate": "2013-03-07T19:51:17.750", "Id": "10937096", "Score": "6", "Body": "<p>I've two question about this code bellow:</p>\n<pre><code>namespace A { class window; }\n\nvoid f(A::window);\n\nnamespace A\n{\n    class window\n    {\n    private:\n       int a;\n       friend void ::f(window);\n    };\n}\n\nvoid f(A::window rhs)\n{\n    std::cout &lt;&lt; rhs.a &lt;&lt; std::endl;\n}\n</code></pre>\n<p>1) why do I need to qualify the member function f inside window class to be global by doing ::f(window) ?</p>\n<p>2) why do I need to predeclare the function f(A::window) in this particular case, whereas when the class is not defined inside a namespace it's ok for the function to be declared after the function is declared a friend.</p>\n", "Tags": "<c++><namespaces><friend>", "OwnerUserId": "869277", "AnswerCount": "3"}, "10937221": {"ParentId": "10937096", "CommentCount": "3", "Body": "<p>1) because function <code>f</code> is declared and defined outside of the current namespace. If you moved the definition of your class into the same namespace as the function whether global or otherwise you wouldn't need to.</p>\n<p>2) you always need to declare a function before it is referenced. Your class references the function with the friend statement.</p>\n", "OwnerUserId": "516725", "PostTypeId": "2", "Id": "10937221", "Score": "1", "CreationDate": "2012-06-07T17:58:22.327", "LastActivityDate": "2012-06-07T17:58:22.327"}, "bq_ids": {"n4140": {"so_10937096_10937195_1": {"section_id": 5485, "quality": 0.8444444444444444, "length": 38}}, "n3337": {"so_10937096_10937195_1": {"section_id": 5271, "quality": 0.9333333333333333, "length": 42}}, "n4659": {"so_10937096_10937195_1": {"section_id": 6920, "quality": 0.6888888888888889, "length": 31}}}, "10937206": {"ParentId": "10937096", "CommentCount": "0", "Body": "<p>As for 1), your function is not in the namespace, so you must use :: to tell the compiler to search it outside the namespace. </p>\n<p>Otherwise, it will only look for function inside the namespace (that's why they exist). Koenig lookup doesn't apply here, as window class is inside the namespace.</p>\n<p>not too sure about 2) though, but i bet it is related to 1).</p>\n", "OwnerUserId": "328631", "PostTypeId": "2", "Id": "10937206", "Score": "3", "CreationDate": "2012-06-07T17:57:47.783", "LastActivityDate": "2012-06-07T17:57:47.783"}});