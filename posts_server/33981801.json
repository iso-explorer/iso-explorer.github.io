post_cb({"33982104": {"ParentId": "33981801", "CommentCount": "2", "Body": "<p>The correct wording of the standard is <em>\u00a7 4.7/p4 Integral conversions [conv.integral]:</em></p>\n<blockquote>\n<p id=\"so_33981801_33982104_0\">If the destination type is bool, see 4.12. If the source type is bool,\n  the value false is converted to zero and the value true is converted\n  to one.</p>\n</blockquote>\n<p>So yes, the excepted behaviour is for <code>bool</code> to be converted to zero if its value is <code>false</code> and to one if its value is true.</p>\n<p>Also from \u00a73.9.1/p6 Fundamental types [basic.fundamental]:</p>\n<blockquote>\n<p id=\"so_33981801_33982104_1\">Values of type bool are either true or false.</p>\n</blockquote>\n<p>But note [49] warns us:</p>\n<blockquote>\n<p id=\"so_33981801_33982104_2\">49) Using a bool value in ways described by this International\n  Standard as \u201cundefined,\u201d such as by examining the value of an\n  uninitialized automatic object, might cause it to behave as if it is\n  neither true nor false.</p>\n</blockquote>\n<p>That is, if you don't initialize a boolean the initial value will be unknown (i.e., arbitrary). Consequently, you get a behaviour described by the standard as \"undefined\". </p>\n", "OwnerUserId": "2352671", "PostTypeId": "2", "Id": "33982104", "Score": "2", "CreationDate": "2015-11-29T11:10:37.543", "LastActivityDate": "2015-11-29T11:10:37.543"}, "33981990": {"ParentId": "33981801", "CommentCount": "0", "Body": "<p>The only chances to get this behaviour is:</p>\n<ol>\n<li>your boolean variable is not initialized</li>\n<li>you have another part that are writting over your variable  (a overrun for example)</li>\n</ol>\n", "OwnerUserId": "5578212", "PostTypeId": "2", "Id": "33981990", "Score": "1", "CreationDate": "2015-11-29T10:56:32.840", "LastActivityDate": "2015-11-29T10:56:32.840"}, "bq_ids": {"n4140": {"so_33981801_33982104_2": {"section_id": 7215, "quality": 0.9047619047619048, "length": 19}, "so_33981801_33982104_1": {"section_id": 7215, "quality": 1.0, "length": 6}, "so_33981801_33981801_0": {"section_id": 26, "quality": 0.8571428571428571, "length": 12}, "so_33981801_33982104_0": {"section_id": 33, "quality": 0.9375, "length": 15}}, "n3337": {"so_33981801_33982104_2": {"section_id": 6959, "quality": 0.9047619047619048, "length": 19}, "so_33981801_33982104_1": {"section_id": 6959, "quality": 1.0, "length": 6}, "so_33981801_33981801_0": {"section_id": 23, "quality": 0.8571428571428571, "length": 12}, "so_33981801_33982104_0": {"section_id": 30, "quality": 0.9375, "length": 15}}, "n4659": {"so_33981801_33982104_2": {"section_id": 8724, "quality": 0.9047619047619048, "length": 19}, "so_33981801_33982104_1": {"section_id": 8724, "quality": 1.0, "length": 6}, "so_33981801_33981801_0": {"section_id": 26, "quality": 0.8571428571428571, "length": 12}, "so_33981801_33982104_0": {"section_id": 33, "quality": 0.9375, "length": 15}}}, "33981801": {"CommentCount": "4", "ViewCount": "73", "CreationDate": "2015-11-29T10:36:26.460", "LastActivityDate": "2015-11-29T11:10:37.543", "Title": "'true' not always converted to 1", "AcceptedAnswerId": "33982104", "PostTypeId": "1", "Id": "33981801", "Score": "1", "Body": "<p>I have this MFC code:</p>\n<pre><code>bool SomeBooleanValue;\n...\nm_ComboBox.ResetContent();\nm_ComboBox.AddString(\"String1\");\nm_ComboBox.AddString(\"String2\");\nm_ComboBox.SetCurSel(SomeBooleanValue);\n</code></pre>\n<p>where m_ComboBox is a CComboBox object. And sometimes when SomeBooleanValue is true in CComboBox::SetCurSel functon instead of 1 I see value 252 during debugging:</p>\n<pre><code>_AFXWIN_INLINE int CComboBox::SetCurSel(int nSelect)// here nSelect = 252!\n    { ASSERT(::IsWindow(m_hWnd)); return (int)::SendMessage(m_hWnd, CB_SETCURSEL, nSelect, 0); }\n</code></pre>\n<p>As I know C++ standard says:</p>\n<blockquote>\n<p id=\"so_33981801_33981801_0\">An rvalue of type bool can be converted to an rvalue of type int, with false becoming zero and true becoming one.</p>\n</blockquote>\n<p>Any ideas why this happening?</p>\n", "Tags": "<c++><mfc><integer><boolean><type-conversion>", "OwnerUserId": "1992539", "AnswerCount": "2"}});