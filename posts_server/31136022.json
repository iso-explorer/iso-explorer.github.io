post_cb({"31136022": {"ViewCount": "172", "Body": "<p>\"C++ Primer\" (5th edition) states on page <code>91</code> the advantage of including the <code>C++</code> version of a <code>C</code> standard library header instead of the <code>.h</code> version: this way the included names end up in the <code>std::</code> namespace and do not pollute the global namespace.</p>\n<p>I tried including <code>cstdio</code> and was surprised to observe that I can use <code>printf()</code> without specifying <code>std::</code>. Interestingly, including only <code>iostream</code> or only <code>string</code> is also sufficient to get access to a global <code>printf()</code>. Am I missing something?</p>\n<p>I am compiling with <code>g++ 4.8.2</code> with <code>-Wall -Wextra -Werror -std=c++11</code>.  </p>\n", "Title": "Are C++ versions of C standard library functions in the std:: namespace?", "CreationDate": "2015-06-30T10:39:14.753", "LastActivityDate": "2015-06-30T10:47:32.037", "CommentCount": "4", "PostTypeId": "1", "ClosedDate": "2015-06-30T10:48:55.330", "Id": "31136022", "Score": "1", "OwnerUserId": "2725810", "Tags": "<c++><c++11>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_31136022_31136204_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 6310}}, "n3337": {"so_31136022_31136204_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 6067}}, "n4659": {"so_31136022_31136204_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 7820}}}, "31136204": {"Id": "31136204", "PostTypeId": "2", "Body": "<p>It is <em>unspecified</em> whether <code>&lt;cfoo&gt;</code> also puts the names into the global namespace. All C library names are reserved in the global namespace in C++.</p>\n<p>[extern.names]/3:</p>\n<blockquote>\n<p id=\"so_31136022_31136204_0\">Each name from the Standard C library declared with external linkage is reserved to the implementation for use as a name with <code>extern \"C\"</code> linkage, both in namespace std and in the global namespace.</p>\n</blockquote>\n<p>To restate this:</p>\n<ul>\n<li>in order to use a name in <code>std</code>, <em>you must</em> include the correct header.</li>\n<li>You <em>must not</em> redefine any names from the C standard library in the above contexts.</li>\n<li>Nothing says whether any particular names from the C standard library are declared (unless you explicitly include the deprecated header <code>&lt;foo.h&gt;</code>).</li>\n</ul>\n", "LastActivityDate": "2015-06-30T10:47:32.037", "CommentCount": "0", "CreationDate": "2015-06-30T10:47:32.037", "ParentId": "31136022", "Score": "1", "OwnerUserId": "596781"}});