post_cb({"25491098": {"ParentId": "25490444", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>As per the Standard section <strong>4.7 Integral conversions</strong> [conv.integral]</p>\n<blockquote>\n<p id=\"so_25490444_25491098_0\"><strong>1</strong> A prvalue of an integer type can be converted to a prvalue of another integer \n  type. A prvalue of an unscoped\n  enumeration type can be converted to a prvalue of an integer type.</p>\n<p id=\"so_25490444_25491098_1\"><strong>2</strong> If the destination type is unsigned, the resulting value is the least\n  unsigned integer congruent to the source integer (modulo 2n where n is\n  the number of bits used to represent the unsigned type). [ <em>Note:</em> In a\n  two\u2019s complement representation, this conversion is conceptual and\n  there is no change in the bit pattern (if there is no truncation).\n  <em>\u2014end note</em> ]</p>\n<p id=\"so_25490444_25491098_2\"><strong>3</strong> If the destination type is signed, the value is unchanged if it can be \n  represented in the destination type (and\n  bit-field width); otherwise, the value is implementation-defined.</p>\n</blockquote>\n<p>So, given that the destination type is \"char\" it can actually be signed (usually) or unsigned. The compiler is only required to take the bottom eight bits in the latter case.</p>\n<p>IE you should write this:</p>\n<pre><code>void load(unsigned char &amp;lo)\n{\n    unsigned short val = /* get it somewhere */;\n    lo = val;\n}\n</code></pre>\n", "OwnerUserId": "1543378", "LastEditorUserId": "1543378", "LastEditDate": "2014-08-26T14:33:00.920", "Id": "25491098", "Score": "2", "CreationDate": "2014-08-25T17:21:05.093", "LastActivityDate": "2014-08-26T14:33:00.920"}, "25490444": {"CommentCount": "4", "ViewCount": "139", "CreationDate": "2014-08-25T16:35:52.990", "LastActivityDate": "2014-08-26T14:33:00.920", "Title": "What happens if : char x = short y in c++", "PostTypeId": "1", "Id": "25490444", "Score": "0", "Body": "<p>Like the title says I have this code : </p>\n<pre><code>void Emulator::cpu16BitLoad(char&amp; hi, char&amp; lo)\n{\n    m_cyclesThisUpdate += 12;\n    short n = readShort();\n    m_programCounter += 2;\n    lo = n;\n    hi = n &lt;&lt; 8;\n}\n</code></pre>\n<p>I want to know if my variable 'lo' will contain the last 8 bits of n</p>\n", "Tags": "<c++><types><char><short>", "OwnerUserId": "1830089", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_25490444_25491098_1": {"section_id": 31, "quality": 0.90625, "length": 29}, "so_25490444_25491098_0": {"section_id": 30, "quality": 1.0, "length": 18}, "so_25490444_25491098_2": {"section_id": 32, "quality": 0.9285714285714286, "length": 13}}, "n3337": {"so_25490444_25491098_1": {"section_id": 28, "quality": 0.90625, "length": 29}, "so_25490444_25491098_0": {"section_id": 27, "quality": 1.0, "length": 18}, "so_25490444_25491098_2": {"section_id": 29, "quality": 0.9285714285714286, "length": 13}}, "n4659": {"so_25490444_25491098_1": {"section_id": 31, "quality": 0.90625, "length": 29}, "so_25490444_25491098_0": {"section_id": 30, "quality": 1.0, "length": 18}, "so_25490444_25491098_2": {"section_id": 32, "quality": 0.7857142857142857, "length": 11}}}});