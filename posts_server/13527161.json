post_cb({"13527268": {"Id": "13527268", "PostTypeId": "2", "Body": "<p>As requested, the reason that your original code fails is that the <code>UnaryFunction</code> template parameter of <code>std::for_each</code> is only used in a \"non-deduced context\", and is not explicitly specified. <code>[temp.deduct.type]/4</code>:</p>\n<blockquote>\n<p id=\"so_13527161_13527268_0\">... If a template parameter is used only in non-deduced contexts and is not explicitly specified, template argument deduction fails.</p>\n</blockquote>\n<p><code>UnaryFunction</code> is treated as a non-deduced context because of <code>[temp.deduct.call]/6</code></p>\n<blockquote>\n<p id=\"so_13527161_13527268_1\">When P [UnaryFunction] is a function type, pointer to function type, or pointer to member function type ... If the argument [myprint] is an overload set (not containing function templates), trial argument deduction is attempted using each of the members of the set. If deduction succeeds for only one of the overload set members, that member is used as the argument value for the deduction. <strong>If deduction succeeds for more than one member of the overload set the parameter is treated as a non-deduced context.</strong></p>\n</blockquote>\n<p>One option is to add casts:</p>\n<pre><code>std::for_each(\n    g_map.begin(), g_map.end(),\n    static_cast&lt;void (*)(std::pair&lt;const string, int&gt;)&gt;(myprint));\n\nstd::for_each(\n    vec.begin(), vec.end(),\n    static_cast&lt;void (*)(int)&gt;(myprint));\n</code></pre>\n<p>Another option is to make <code>myprint</code> be a function object, so that overload resolution occurs inside <code>std::for_each</code>:</p>\n<pre><code>struct myprint {\n    void operator()(std::pair&lt;const string, int&gt; ci) const {\n        cout &lt;&lt; \"first : \" &lt;&lt; ci.first &lt;&lt; \"seconde : \" &lt;&lt; ci.second &lt;&lt; endl;\n    }\n    void operator()(int ci) const {\n        cout &lt;&lt; ci &lt;&lt; endl;\n    }\n};\n\nstd::for_each(g_map.begin(), g_map.end(), myprint());\nstd::for_each(vec.begin(), vec.end(), myprint());\n</code></pre>\n", "LastEditorUserId": "485561", "LastActivityDate": "2012-11-24T04:01:18.080", "Score": "5", "CreationDate": "2012-11-23T10:33:41.303", "ParentId": "13527161", "CommentCount": "1", "OwnerUserId": "485561", "LastEditDate": "2012-11-24T04:01:18.080"}, "bq_ids": {"n4140": {"so_13527161_13527268_1": {"length": 46, "quality": 0.9583333333333334, "section_id": 307}, "so_13527161_13527268_0": {"length": 10, "quality": 1.0, "section_id": 335}}, "n3337": {"so_13527161_13527268_1": {"length": 46, "quality": 0.9583333333333334, "section_id": 298}, "so_13527161_13527268_0": {"length": 10, "quality": 1.0, "section_id": 325}}, "n4659": {"so_13527161_13527268_1": {"length": 45, "quality": 0.9375, "section_id": 314}, "so_13527161_13527268_0": {"length": 10, "quality": 1.0, "section_id": 344}}}, "13527161": {"ViewCount": "3118", "Body": "<p>here is the code:</p>\n<pre><code>#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\n#include &lt;map&gt;\n#include &lt;iostream&gt;\nusing namespace std;\n\nmap&lt;string, int&gt; g_map;\nvoid read_item(const pair&lt;string, int&gt;&amp; p) {\n   g_map[p.first] += p.second;\n}\n\nvoid myprint(std::pair&lt;const string, int&gt; ci) {\n   cout &lt;&lt; \"first : \" &lt;&lt; ci.first &lt;&lt; \"seconde : \" &lt;&lt; ci.second &lt;&lt; endl;\n}\n\nvoid myprint(int ci) {\n   cout &lt;&lt; ci &lt;&lt; endl;\n}\n\nint main()\n{\n    string a = string(\"nail\");\n    string b = string(\"hammer\");\n    read_item(make_pair(a, 100));\n    read_item(make_pair(b, 2));\n    read_item(make_pair(b, 10));\n    read_item(make_pair(a, 200));\n\n    std::for_each(g_map.begin(), g_map.end(), myprint); // can't find the matching function here\n    vector&lt;int&gt; vec;\n    vec.push_back(3);\n    vec.push_back(3);\n    std::for_each(vec.begin(), vec.end(), myprint);  // and here\n    return 0;\n}\n</code></pre>\n<p>I overloaded the function <code>myprint</code>, I think it should be working, but it doesn't. when I change the first <code>myprint</code> to <code>myprint1</code> and the second to <code>myprint2</code>, it works. any body can help? the compile error is:</p>\n<pre><code>funcTemOverload.cpp: In function 'int main()':\nfuncTemOverload.cpp:29:54: error: no matching function for call to 'for_each(std::map&lt;std::basic_string&lt;char&gt;, int&gt;::iterator, std::map&lt;std::basic_string&lt;char&gt;, int&gt;::iterator, &lt;unresolved overloaded function type&gt;)'\nfuncTemOverload.cpp:29:54: note: candidate is:\nIn file included from d:\\mingw\\bin\\../lib/gcc/x86_64-w64-mingw32/4.7.2/include/c++/algorithm:63:0,\n         from funcTemOverload.cpp:2:\nd:\\mingw\\bin\\../lib/gcc/x86_64-w64-mingw32/4.7.2/include/c++/bits/stl_algo.h:4436:5: note: template&lt;class _IIter, class _Funct&gt; _Funct std::for_each(_IIter, _IIter, _Funct)\nd:\\mingw\\bin\\../lib/gcc/x86_64-w64-mingw32/4.7.2/include/c++/bits/stl_algo.h:4436:5: note:   template argument deduction/substitution failed:\nfuncTemOverload.cpp:29:54: note:   couldn't deduce template parameter '_Funct'\nfuncTemOverload.cpp:35:50: error: no matching function for call to 'for_each(std::vector&lt;int&gt;::iterator, std::vector&lt;int&gt;::iterator, &lt;unresolved overloaded function type&gt;)'\nfuncTemOverload.cpp:35:50: note: candidate is:\nIn file included from d:\\mingw\\bin\\../lib/gcc/x86_64-w64-mingw32/4.7.2/include/c++/algorithm:63:0,\n         from funcTemOverload.cpp:2:\nd:\\mingw\\bin\\../lib/gcc/x86_64-w64-mingw32/4.7.2/include/c++/bits/stl_algo.h:4436:5: note: template&lt;class _IIter, class _Funct&gt; _Funct std::for_each(_IIter, _IIter, _Funct)\nd:\\mingw\\bin\\../lib/gcc/x86_64-w64-mingw32/4.7.2/include/c++/bits/stl_algo.h:4436:5: note:   template argument deduction/substitution failed:\nfuncTemOverload.cpp:35:50: note:   couldn't deduce template parameter '_Funct'\n</code></pre>\n", "AcceptedAnswerId": "13527268", "Title": "no matching function for call to for_each", "CreationDate": "2012-11-23T10:26:40.143", "Id": "13527161", "CommentCount": "2", "LastEditDate": "2012-11-23T10:29:42.027", "PostTypeId": "1", "LastEditorUserId": "1047662", "LastActivityDate": "2012-11-24T04:01:18.080", "Score": "2", "OwnerUserId": "930125", "Tags": "<c++><templates><function-overloading>", "AnswerCount": "1"}});