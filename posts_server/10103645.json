post_cb({"bq_ids": {"n4140": {"so_10103645_10103838_0": {"length": 12, "quality": 0.8571428571428571, "section_id": 3338}}, "n3337": {"so_10103645_10103838_0": {"length": 13, "quality": 0.9285714285714286, "section_id": 3208}}, "n4659": {"so_10103645_10103838_0": {"length": 11, "quality": 0.7857142857142857, "section_id": 4105}}}, "10103838": {"Id": "10103838", "PostTypeId": "2", "Body": "<p>No, it's not.</p>\n<blockquote>\n<p id=\"so_10103645_10103838_0\">15.1.5 When the thrown object is a class object, the copy/move constructor and the destructor shall be accessible,\n  even if the copy/move operation is elided</p>\n</blockquote>\n", "LastActivityDate": "2012-04-11T10:06:07.160", "CommentCount": "0", "CreationDate": "2012-04-11T10:06:07.160", "ParentId": "10103645", "Score": "2", "OwnerUserId": "113662"}, "10103645": {"ViewCount": "424", "Body": "<p>I've come across some exceptions issue that is unclear to me. In C++, when an object is thrown it is first copied to a temporary object, and the temporary object is then passed to the catching code. The copy involves the use of the object's class copy constructor. AFAIK, this means that if a class has a private copy constructor, it can't be used as an exception. However, in VS2010, the following code compiles and runs:</p>\n<pre><code>class Except\n{\n    Except(const Except&amp; other) { i = 2; }\npublic:\n    int i;\n    Except() : i(1) {}\n};\n\nint main()\n{\n    try\n    {\n        Except ex1;\n        throw ex1;          // private copy constructor is invoked\n    }\n    catch (Except&amp; ex2)\n    {\n        assert(ex2.i == 2); // assert doesn't yell - ex2.i is indeed 2\n    }\n    return 0;\n}\n</code></pre>\n<p>Is this legal?</p>\n", "AcceptedAnswerId": "10103832", "Title": "Can objects with private copy constructors be thrown?", "CreationDate": "2012-04-11T09:54:06.030", "Id": "10103645", "CommentCount": "10", "FavoriteCount": "4", "PostTypeId": "1", "LastActivityDate": "2012-04-11T10:06:07.160", "Score": "11", "OwnerUserId": "26039", "Tags": "<c++><visual-studio-2010><exception><private><copy-constructor>", "AnswerCount": "2"}, "10103832": {"Id": "10103832", "PostTypeId": "2", "Body": "<p>It's not legal. Standard 15.1/5</p>\n<blockquote>\n<p id=\"so_10103645_10103832_0\">If the use of the temporary object can be eliminated without changing\n  the meaning of the program except for the execution of constructors\n  and destructors associated with the use of the temporary object\n  (12.2), then the exception in the handler can be initialized directly\n  with the argument of the throw expression. <strong>When the thrown object is a\n  class object, and the copy constructor used to initialize the\n  temporary copy is not accessible, the program is ill-formed</strong> (even when\n  the temporary object could otherwise be eliminated). Similarly, if the\n  destructor for that object is not accessible, the program is\n  ill-formed (even when the temporary object could otherwise be\n  eliminated).</p>\n</blockquote>\n", "LastActivityDate": "2012-04-11T10:05:29.023", "CommentCount": "1", "CreationDate": "2012-04-11T10:05:29.023", "ParentId": "10103645", "Score": "13", "OwnerUserId": "125672"}});