post_cb({"29344299": {"CommentCount": "7", "ViewCount": "165", "CreationDate": "2015-03-30T10:52:16.483", "LastActivityDate": "2015-03-30T11:54:05.253", "Title": "const_cast<double*> works but const_cast<int*> doesn't", "PostTypeId": "1", "Id": "29344299", "Score": "1", "Body": "<p>My problem is, why first part of the code does not work while the second one works. Non-const pointer should modify the const value using the const_cast previously but with integers this trick does not work. Could you explain why that happens?</p>\n<pre><code>const int i = 5;\ncout &lt;&lt; i &lt;&lt; endl; //output: 5\nint *ptr_i = const_cast&lt;int*&gt;(&amp;i);\n*ptr_i = 100;\ncout &lt;&lt; i &lt;&lt; endl; //output : 5\n\nconst double d = 5;\ncout &lt;&lt; d &lt;&lt; endl; //output : 5\ndouble *ptr_d = const_cast&lt;double*&gt;(&amp;d);\n*ptr_d = 100.; \ncout &lt;&lt; d &lt;&lt; endl; //output : 100\n</code></pre>\n", "Tags": "<c++><pointers><integer><const-cast>", "OwnerUserId": "4729292", "AnswerCount": "2"}, "29344557": {"ParentId": "29344299", "PostTypeId": "2", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_29344299_29344557_0\">Non-const pointer should modify the const value using the const_cast previously but with integers this trick does not work.</p>\n</blockquote>\n<p>No, non-const pointer modifying the const value is undefined behavior. It is not supposed to work.</p>\n<blockquote>\n<p id=\"so_29344299_29344557_1\">Could you explain why that happens?</p>\n</blockquote>\n<p>Since this is UB, the compiler is free to do anything at all here, and \"anything at all\" means the code will happen to work in the case of int only (at least, for your compiler).</p>\n<p><strong>TLDR: undefined behavior is undefined.</strong></p>\n", "OwnerUserId": "186997", "LastEditorUserId": "186997", "LastEditDate": "2015-03-30T11:54:05.253", "Id": "29344557", "Score": "2", "CreationDate": "2015-03-30T11:04:31.087", "LastActivityDate": "2015-03-30T11:54:05.253"}, "bq_ids": {"n4140": {"so_29344299_29344563_0": {"section_id": 5433, "quality": 0.9444444444444444, "length": 17}}, "n3337": {"so_29344299_29344563_0": {"section_id": 5228, "quality": 0.9444444444444444, "length": 17}}, "n4659": {"so_29344299_29344563_0": {"section_id": 6861, "quality": 0.9444444444444444, "length": 17}}}, "29344563": {"ParentId": "29344299", "CommentCount": "0", "Body": "<p>Modifying a <code>const</code> variable is undefined behaviour:</p>\n<p>n4296 \u00a77.1.6.1/4</p>\n<blockquote>\n<p id=\"so_29344299_29344563_0\">Except that any class member declared mutable (7.1.1) can be modified,\n  any attempt to modify a const object during its lifetime (3.8) results\n  in undefined behavior.</p>\n</blockquote>\n<p><code>const_cast</code> is generally for communicating with non-const-correct APIs or casting away <code>volatile</code> qualifiers; it shouldn't be used like this.</p>\n", "OwnerUserId": "496161", "PostTypeId": "2", "Id": "29344563", "Score": "5", "CreationDate": "2015-03-30T11:04:37.253", "LastActivityDate": "2015-03-30T11:04:37.253"}});