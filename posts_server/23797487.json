post_cb({"bq_ids": {"n4140": {"so_23797487_23797487_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 7073}}, "n3337": {"so_23797487_23797487_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 6817}}, "n4659": {"so_23797487_23797487_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 8574}}}, "23797608": {"Id": "23797608", "PostTypeId": "2", "Body": "<p>It limits the scope of template template parameters to the innermost parameter list, for instance the following is valid</p>\n<pre><code>template&lt;template&lt;typename U, typename V = U&gt; class T&gt;\nstruct foo\n{\n  T&lt;int&gt; bar(); // T&lt;int, int&gt;\n};\n</code></pre>\n<p>But this is not</p>\n<pre><code>template&lt;template&lt;typename U&gt; class T&gt;\nstruct foo\n{\n  U bar(); // error: \u2018U\u2019 does not name a type\n};\n</code></pre>\n", "LastEditorUserId": "657267", "LastActivityDate": "2014-05-22T05:53:35.290", "Score": "2", "CreationDate": "2014-05-22T04:01:20.937", "ParentId": "23797487", "CommentCount": "0", "OwnerUserId": "657267", "LastEditDate": "2014-05-22T05:53:35.290"}, "23797619": {"Id": "23797619", "PostTypeId": "2", "Body": "<pre><code>template&lt; // outer template-parameter-list\n    template&lt; // inner template-parameter-list\n        typename q, // named parameter of a template template-parameter\n        q x // use that name\n    &gt; // the declarative region ends here\n    class q // hence the name may be reused\n&gt; struct x {};\n</code></pre>\n<p>Here it is again without comments if that helps to follow along:</p>\n<pre><code>template&lt; template&lt; typename q, q x &gt; class q &gt;\nstruct x {};\n</code></pre>\n<p>It's a class parameterized on a template taking a constant value of a given type. You could for example have <code>x&lt; std::integral_constant &gt;</code>.</p>\n", "LastActivityDate": "2014-05-22T04:02:44.603", "CommentCount": "0", "CreationDate": "2014-05-22T04:02:44.603", "ParentId": "23797487", "Score": "5", "OwnerUserId": "153285"}, "23797487": {"ViewCount": "79", "Body": "<p>There is a quote from 3.3.9/1:</p>\n<blockquote>\n<p id=\"so_23797487_23797487_0\">The declarative region of the name of a template parameter of a\n  template template-parameter is the smallest template-parameter-list in\n  which the name was introduced.</p>\n</blockquote>\n<p>Can you give an example to understand the above definition? I am also interested in knowing what does the template-parameter-list of a template parameter mean? An example will be helpful.</p>\n", "AcceptedAnswerId": "23797619", "Title": "What does template-parameter-list of template parameter mean", "CreationDate": "2014-05-22T03:46:10.147", "LastActivityDate": "2014-05-22T08:30:19.113", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2014-05-22T08:30:19.113", "OwnerDisplayName": "user2889159", "LastEditorUserId": "153285", "Id": "23797487", "Score": "5", "Tags": "<c++><templates>", "AnswerCount": "2"}});