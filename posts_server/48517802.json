post_cb({"bq_ids": {"n4140": {"so_48517802_48517981_0": {"length": 26, "quality": 0.896551724137931, "section_id": 6163}}, "n3337": {"so_48517802_48517981_0": {"length": 26, "quality": 0.896551724137931, "section_id": 5924}}, "n4659": {"so_48517802_48517981_0": {"length": 26, "quality": 0.896551724137931, "section_id": 7660}}}, "48517946": {"Id": "48517946", "PostTypeId": "2", "Body": "<p>By the\n<a href=\"http://en.cppreference.com/w/cpp/language/operator_logical\" rel=\"nofollow noreferrer\">http://en.cppreference.com/w/cpp/language/operator_logical</a></p>\n<blockquote>\n<p id=\"so_48517802_48517946_0\">lhs &amp;&amp; rhs</p>\n<p id=\"so_48517802_48517946_1\">For the built-in logical AND operator, the result is true if both operands are true. Otherwise, the result is false. This operator is short-circuiting: if the first operand is false, the second operand is not evaluated</p>\n</blockquote>\n<p>The <code>lhs</code> expression will be executed first, so you should put your <code>current-&gt;next</code> null pointer check at the left side of <code>&amp;&amp;</code> in condition.</p>\n", "LastActivityDate": "2018-01-30T09:26:32.597", "Score": "0", "CreationDate": "2018-01-30T09:26:32.597", "ParentId": "48517802", "CommentCount": "0", "OwnerUserId": "2210478"}, "48517981": {"Id": "48517981", "PostTypeId": "2", "Body": "<p>Standard says <a href=\"http://eel.is/c++draft/expr.log.and\" rel=\"nofollow noreferrer\">[expr.log.and]</a></p>\n<blockquote>\n<p id=\"so_48517802_48517981_0\">The &amp;&amp; operator groups left-to-right. The operands are both\n  contextually converted to bool (Clause 7). The result is true if both\n  operands are true and false otherwise. Unlike &amp;, <strong>&amp;&amp; guarantees\n  left-to-right evaluation</strong>: the second operand is not evaluated if the\n  first operand is false.</p>\n</blockquote>\n<p>So, in</p>\n<pre><code>current-&gt;next-&gt;data &lt;= temp-&gt;data &amp;&amp; current-&gt;next != nullptr\n</code></pre>\n<p>First evaluated first operand which is <code>current-&gt;next-&gt;data &lt;= temp-&gt;data</code>. And here you have the error if <code>current-&gt;next</code> is <code>nullptr</code>.</p>\n", "LastActivityDate": "2018-01-30T09:27:55.507", "Score": "0", "CreationDate": "2018-01-30T09:27:55.507", "ParentId": "48517802", "CommentCount": "0", "OwnerUserId": "312896"}, "48517802": {"ViewCount": "54", "Body": "<p>I have this code:</p>\n<pre><code>while (current-&gt;next-&gt;data &lt;= temp-&gt;data &amp;&amp; current-&gt;next != nullptr)\n        {\n            current = current-&gt;next;\n        }\n</code></pre>\n<p>when I run it i get the error:</p>\n<p>Exception thrown: read access violation.\n    current-&gt;next was nullptr.</p>\n<p>I believe I should not be receiving this error because it is the exact thing I check for; I am new to this, is there something I am doing wrong?</p>\n", "Title": "nullptr read access violation while checking in loop", "CreationDate": "2018-01-30T09:19:57.493", "LastActivityDate": "2018-01-30T09:27:55.507", "CommentCount": "3", "FavoriteCount": "0", "PostTypeId": "1", "ClosedDate": "2018-01-30T14:54:55.610", "Id": "48517802", "Score": "-4", "OwnerUserId": "6642282", "Tags": "<c++><pointers><nullptr>", "AnswerCount": "3"}, "48517835": {"Id": "48517835", "PostTypeId": "2", "Body": "<pre><code>while (current-&gt;next-&gt;data &lt;= temp-&gt;data &amp;&amp; current-&gt;next != nullptr)\n</code></pre>\n<p>This will fail for the very first iteration if <code>current-&gt;next</code> is <code>null</code>.\nYou should swap the order of condition check.</p>\n<pre><code>while (current-&gt;next != nullptr &amp;&amp; current-&gt;next-&gt;data &lt;= temp-&gt;data)\n</code></pre>\n", "LastActivityDate": "2018-01-30T09:21:51.293", "Score": "1", "CreationDate": "2018-01-30T09:21:51.293", "ParentId": "48517802", "CommentCount": "0", "OwnerUserId": "3475381"}});