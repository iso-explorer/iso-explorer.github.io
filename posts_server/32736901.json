post_cb({"32736901": {"CommentCount": "0", "ViewCount": "933", "PostTypeId": "1", "LastEditorUserId": "5367182", "CreationDate": "2015-09-23T10:18:27.510", "LastActivityDate": "2015-09-23T10:29:47.070", "Title": "inlining failed in call to unlikely and code size would grow [-Winline] but not using inline", "AcceptedAnswerId": "32737013", "LastEditDate": "2015-09-23T10:28:33.930", "Id": "32736901", "Score": "4", "Body": "<p>very new to C++.</p>\n<p>Here is my user defined fmiNode class: (fmi.h)</p>\n<pre><code>class fmiNode\n{\npublic:\n    fmiNode(std::string NodeName,int Address)\n    {\n        this-&gt;name = NodeName;\n        this-&gt;address = Address;\n    }\n\n    std::string GetName()\n    {\n    return this-&gt;name;\n    }\n\n    int GetAddress()\n    {\n    return this-&gt;address;\n    }\n\nprivate:\n    std::string name;\n    int address;\n};\n</code></pre>\n<p>Here is my main method (fmi.c)</p>\n<pre><code>int main (int argc, char *argv[])\n{\n  fmiNode node1(\"NodeA\",4);\n  fmiNode node2(\"NodeB\",6);\n  fmiNode node3(\"NodeC\",8);\n  fmiNode node4(\"NodeD\",10);\n\n  while(1)\n  {\n      MainLoop();\n  }\n}\n</code></pre>\n<p>If I only instantiate one fmiNode object everything is fine. but the following 3 causes a warning to be thrown:</p>\n<pre><code> warning: inlining failed in call to \u2018fmiNode::fmiNode(std::string, int)\u2019: call is unlikely and code size would grow [-Winline]\n</code></pre>\n<p>What am I doing wrong here.</p>\n<p>EDIT:</p>\n<p>So I should define my class like this:?</p>\n<pre><code>class fmiNode\n{\npublic:\n    fmiNode(std::string NodeName,int Address);\n\n    std::string GetName()\n    {\n    return this-&gt;name;\n    }\n\n    int GetAddress()\n    {\n    return this-&gt;address;\n    }\n\nprivate:\n    std::string name;\n    int address;\n};\n\nfmiNode::fmiNode(std::string NodeName,int Address)\n{\n    this-&gt;name = NodeName;\n    this-&gt;address = Address;\n}\n</code></pre>\n<p>Cheers,\nRhys</p>\n", "Tags": "<c++><inlining>", "OwnerUserId": "5367182", "AnswerCount": "1"}, "32737013": {"ParentId": "32736901", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>If you define a function (constructor, in your case) inside the class definition, the the result is the same as defining it outside of the class with <code>inline</code> keyword, as per the c++ standard:</p>\n<blockquote>\n<p id=\"so_32736901_32737013_0\">7.1.2.3 A function defined within a class definition is an inline function</p>\n</blockquote>\n<p>So the compiler gets the <code>inline</code> hint, but thinks that inlining the constructor into <code>main</code> is a bad idea because of the reasons in the warning message, so it gives you the warning.</p>\n<p><strong>Update</strong>: yes, you should define the class as in your <em>EDIT</em> to avoid this warning. Better yet, put the definition into the .cpp file to avoid multiple definition errors.</p>\n", "OwnerUserId": "1490355", "LastEditorUserId": "1490355", "LastEditDate": "2015-09-23T10:29:47.070", "Id": "32737013", "Score": "4", "CreationDate": "2015-09-23T10:23:12.883", "LastActivityDate": "2015-09-23T10:29:47.070"}, "bq_ids": {"n4140": {"so_32736901_32737013_0": {"section_id": 5403, "quality": 0.875, "length": 7}}, "n3337": {"so_32736901_32737013_0": {"section_id": 5198, "quality": 0.875, "length": 7}}, "n4659": {"so_32736901_32737013_0": {"section_id": 6851, "quality": 0.875, "length": 7}}}});