post_cb({"bq_ids": {"n4140": {"so_26818807_26818912_0": {"length": 7, "quality": 0.875, "section_id": 1857}}, "n3337": {"so_26818807_26818912_0": {"length": 7, "quality": 0.875, "section_id": 1851}}, "n4659": {"so_26818807_26818912_0": {"length": 7, "quality": 0.875, "section_id": 2030}}}, "26818912": {"Id": "26818912", "PostTypeId": "2", "Body": "<p>No, it is not possible. If no characters could be extracted <code>std::ios::failbit</code> is set. [string.io]/3:<br/></p>\n<blockquote>\n<p id=\"so_26818807_26818912_0\">If the function extracts no characters, it calls\n  <code>is.setstate(ios::failbit)</code>, which may throw <code>ios_base::failure</code>.</p>\n</blockquote>\n<p>And if characters could be extracted they are subsequently appended to the <code>string</code> and thereby make its size non-zero.</p>\n", "LastActivityDate": "2014-11-08T15:46:21.157", "Score": "5", "CreationDate": "2014-11-08T15:46:21.157", "ParentId": "26818807", "CommentCount": "1", "OwnerUserId": "3647361"}, "26818807": {"ViewCount": "279", "Body": "<p>My question is based on this simple code:</p>\n<pre><code>#include &lt;string&gt;\nusing namespace std;\n\nint main() {\n    string buf;\n    while (cin &gt;&gt; buf &amp;&amp; !buf.empty()) {\n        cout &lt;&lt; \"input is \" &lt;&lt; buf &lt;&lt; \"\\n\";\n    }\n\n    return 0;\n}\n</code></pre>\n<p>The <em>operator&gt;&gt; of</em> cin (which is an object of type basic_istream) reads and discards any leading whitespace (e.g. spaces, newlines, tabs). Then <em>operator&gt;&gt;</em> reads characters until the next whitespace character is encountered. The operators returns finally the stream itself, cin.<br>\nIt shouldn't be possible to enter an empty string without also setting at least one of the iostates eof, fail or bad? And therefore the streams converts with the <em>operator bool</em> to false. I think <em>!buf.empty()</em> is here superfluous, but a good habit. Is there a way to leave the iostate of cin in <em>good</em> and leaving the string empty?</br></p>\n<p>Example usage:<br>\n1. type in a word of your choice<br>\n2. press enter<br>\n3. press Ctrl+d (EOF on UNIX) or Ctrl+d (EOF on Windows)</br></br></br></p>\n<p>Thank you</p>\n", "AcceptedAnswerId": "26818912", "Title": "Is it possible to read an empty string from cin and still get true from cin.good()?", "CreationDate": "2014-11-08T15:36:37.360", "Id": "26818807", "CommentCount": "1", "LastEditDate": "2014-11-08T15:55:58.650", "PostTypeId": "1", "LastEditorUserId": "1054324", "LastActivityDate": "2014-11-08T15:55:58.650", "Score": "4", "OwnerUserId": "1054324", "Tags": "<c++><cin>", "AnswerCount": "1"}});