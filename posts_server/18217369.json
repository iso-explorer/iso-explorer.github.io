post_cb({"18218389": {"ParentId": "18217369", "CommentCount": "1", "Body": "<p>The left-hand side of <code>-&gt;</code> operator is an expression. There ain't no such thing as an expression with a reference type:</p>\n<blockquote>\n<p id=\"so_18217369_18218389_0\">5p5 If an expression initially has the type \u201creference to T\u201d (8.3.2, 8.5.3), the type is adjusted to T prior to any further analysis. The expression designates the object or function denoted by the reference, and the expression is an lvalue or an xvalue, depending on the expression.</p>\n</blockquote>\n", "OwnerUserId": "1670129", "PostTypeId": "2", "Id": "18218389", "Score": "1", "CreationDate": "2013-08-13T20:14:06.467", "LastActivityDate": "2013-08-13T20:14:06.467"}, "bq_ids": {"n4140": {"so_18217369_18218389_0": {"section_id": 5938, "quality": 0.8333333333333334, "length": 20}}, "n3337": {"so_18217369_18218389_0": {"section_id": 5710, "quality": 0.8333333333333334, "length": 20}}, "n4659": {"so_18217369_18218389_0": {"section_id": 7422, "quality": 0.8333333333333334, "length": 20}}}, "18217369": {"CommentCount": "5", "ViewCount": "107", "CreationDate": "2013-08-13T19:19:15.247", "LastActivityDate": "2013-08-13T20:14:06.467", "Title": "Type of iterator for range-based for loop", "AcceptedAnswerId": "18218389", "PostTypeId": "1", "Id": "18217369", "Score": "0", "Body": "<p>Say I have the following code:</p>\n<pre><code>std::vector&lt;std::string&gt; foo({\"alice\", \"bob\"});\nfor (const std::string &amp;f : foo)\n    std::cout &lt;&lt; f.size() &lt;&lt; std::endl;\n</code></pre>\n<p>if I make a mistake and change <code>f.size()</code> to <code>f-&gt;size()</code>, I get the following error from GCC:</p>\n<blockquote>\n<p id=\"so_18217369_18217369_0\">error: base operand of \u2018-&gt;\u2019 has non-pointer type \u2018<strong>const string {aka\n  const std::basic_string}</strong></p>\n</blockquote>\n<p>Why is the actual type <code>const std::basic_string&lt;char&gt;</code> rather than <code>const std::basic_string&lt;char&gt; &amp;</code> (reference)?</p>\n", "Tags": "<c++11><for-loop>", "OwnerUserId": "21185", "AnswerCount": "1"}});