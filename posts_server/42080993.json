post_cb({"42080993": {"CreationDate": "2017-02-07T03:05:49.427", "ViewCount": "179", "Score": "0", "Id": "42080993", "Title": "Are function scope static or thread_local variables initialized in first entry in C++11?", "CommentCount": "0", "Body": "<p>In C++11 the initialization of function scope static/thread_local variables are guaranteed to be thread safe. Are they also guaranteed to be initialized on function entry?</p>\n", "Tags": "<c++><c++11><initialization><lazy-initialization><thread-local>", "LastActivityDate": "2017-02-07T03:12:32.040", "PostTypeId": "1", "AnswerCount": "1", "OwnerUserId": "832878"}, "42081049": {"CommentCount": "2", "Body": "<p>According to [stmt.dcl]/4 (emphasis mine):</p>\n<blockquote>\n<p id=\"so_42080993_42081049_0\">The zero-initialization (8.5) of all block-scope variables with static storage duration (3.7.1) or thread storage\n  duration (3.7.2) is performed <strong>before any other initialization takes place.</strong> Constant initialization (3.6.2) of a\n  block-scope entity with static storage duration, if applicable, is performed <strong>before its block is first entered.</strong>\n  An implementation is permitted to perform early initialization of other block-scope variables with static or\n  thread storage duration under the same conditions that an implementation is permitted to statically initialize\n  a variable with static or thread storage duration in namespace scope (3.6.2). Otherwise such a variable is\n  initialized <strong>the first time control passes through its declaration;</strong> such a variable is considered initialized upon\n  the completion of its initialization.</p>\n</blockquote>\n<p>I'm not sure what you mean by \"on function entry\", but the answers are all in the paragraph I quoted.</p>\n", "CreationDate": "2017-02-07T03:12:32.040", "ParentId": "42080993", "Id": "42081049", "LastActivityDate": "2017-02-07T03:12:32.040", "PostTypeId": "2", "Score": "0", "OwnerUserId": "481267"}, "bq_ids": {"n4140": {"so_42080993_42081049_0": {"length": 74, "quality": 0.9367088607594937, "section_id": 3919}}, "n3337": {"so_42080993_42081049_0": {"length": 74, "quality": 0.9367088607594937, "section_id": 3779}}}});