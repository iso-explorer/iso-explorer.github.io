post_cb({"bq_ids": {"n4140": {"so_39776437_39778788_0": {"length": 20, "quality": 1.0, "section_id": 87}}, "n3337": {"so_39776437_39778788_0": {"length": 14, "quality": 0.7, "section_id": 82}}}, "39778788": {"PostTypeId": "2", "Body": "<p>Before C++17 removed this restriction, the syntactic form of a template argument for a pointer or reference template parameter was restricted. N4140 [temp.arg.nontype]/1.3 says that it must be</p>\n<blockquote>\n<p id=\"so_39776437_39778788_0\">expressed (ignoring parentheses) as <code>&amp;</code> <em>id-expression</em>, where\n  the <em>id-expression</em> is the name of an object or function, except that\n  the <code>&amp;</code> may be omitted if the name refers to a function or array and\n  shall be omitted if the corresponding template-parameter is a\n  reference</p>\n</blockquote>\n<p><code>(std::cout)</code> isn't an <em>id-expression</em>. It's a <em>primary-expression</em>.</p>\n<p>The \"(ignoring parentheses)\" part was added by <a href=\"http://wg21.link/cwg773\" rel=\"nofollow noreferrer\">Core issue 773</a>, and is apparently meant to permit <code>(&amp;i)</code>, not <code>&amp;(i)</code>.</p>\n", "LastActivityDate": "2017-02-15T16:59:43.977", "LastEditorUserId": "3647361", "Id": "39778788", "CommentCount": "1", "CreationDate": "2016-09-29T19:47:27.240", "ParentId": "39776437", "Score": "5", "OwnerUserId": "2756719", "LastEditDate": "2017-02-15T16:59:43.977"}, "39776635": {"PostTypeId": "2", "Body": "<p>This fixes your code, omit the parenthesis:</p>\n<pre><code>#include &lt;iostream&gt;\n\ntemplate&lt;std::ostream* stream&gt;\nclass MyClass\n{\npublic:\n    void disp(void) { \n        (*stream) &lt;&lt; \"hello\"; \n    }\n};\n\nint main(void)\n{\n    MyClass&lt;&amp;std::cout&gt; MyObj;\n    MyObj.disp();\n\n    return 0;\n}\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/a05d49a9f9c29942\" rel=\"nofollow noreferrer\"><strong>Live Demo</strong></a></p>\n<hr>\n<p>A more detailed explanation why can be found here:</p>\n<p><a href=\"https://stackoverflow.com/questions/7134197/error-with-address-of-parenthesized-member-function\">Error with address of parenthesized member function</a></p>\n</hr>", "LastActivityDate": "2016-09-29T17:43:12.977", "LastEditorUserId": "-1", "Id": "39776635", "CommentCount": "4", "CreationDate": "2016-09-29T17:34:08.300", "ParentId": "39776437", "Score": "2", "OwnerUserId": "1413395", "LastEditDate": "2017-05-23T12:01:40.760"}, "39776437": {"ViewCount": "356", "Body": "<p>Why isn't it possible to pass <code>std::cout</code>'s address as template argument?\nOr if it is possible then how?</p>\n<p>Here is what I tried:</p>\n<pre><code>#include &lt;iostream&gt;\n\ntemplate&lt;std::ostream* stream&gt;\nclass MyClass\n{\npublic:\n    void disp(void)\n        { (*stream) &lt;&lt; \"hello\"; }\n};\n\nint main(void)\n{\n    MyClass&lt;&amp;(std::cout)&gt; MyObj;\n    MyObj.disp();\n\n    return 0;\n}\n</code></pre>\n<p>And the error message I got from <code>clang++ -std=c++11</code> :</p>\n<pre><code>main.cpp:15:11: error: non-type template argument does not refer to any declaration\n        MyClass&lt;&amp;(std::cout)&gt; MyObj;\n                 ^~~~~~~~~~~\nmain.cpp:6:24: note: template parameter is declared here\ntemplate&lt;std::ostream* stream&gt;\n                       ^\n1 error generated.\n</code></pre>\n<p>and from <code>g++ -std=c++11</code> :</p>\n<pre><code>main.cpp: In function \u2018int main()\u2019:\nmain.cpp:15:22: error: template argument 1 is invalid\n  MyClass&lt;&amp;(std::cout)&gt; MyObj;\n                      ^\nmain.cpp:15:29: error: invalid type in declaration before \u2018;\u2019 token\n  MyClass&lt;&amp;(std::cout)&gt; MyObj;\n                             ^\nmain.cpp:16:8: error: request for member \u2018disp\u2019 in \u2018MyObj\u2019, which is of     non-class type \u2018int\u2019\n  MyObj.disp();\n        ^\n</code></pre>\n<p>Any ideas?</p>\n", "AcceptedAnswerId": "39776635", "Title": "C++ : &(std::cout) as template argument", "CreationDate": "2016-09-29T17:21:56.823", "Id": "39776437", "CommentCount": "9", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2016-09-29T17:40:50.527", "LastEditorUserId": "3492512", "LastActivityDate": "2017-02-15T16:59:43.977", "Score": "5", "OwnerUserId": "3492512", "Tags": "<c++><templates><c++11><cout>", "AnswerCount": "2"}});