post_cb({"5485286": {"ParentId": "2094776", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Or you can perhaps do this</p>\n<pre><code>switch((userInputtedInt &gt;= someNum) &amp;&amp; (userInputtedInt &lt;= someOtherNum))\n{\ncase true:\n     //do something\n     break;\ncase false: \n     //something else\n     break;\n}\n</code></pre>\n<p>But that's just down-right terrible programming that could be handled with if-else statements.</p>\n", "OwnerUserId": "683768", "LastEditorUserId": "683768", "LastEditDate": "2011-03-30T11:05:20.640", "Id": "5485286", "Score": "1", "CreationDate": "2011-03-30T10:47:02.470", "LastActivityDate": "2011-03-30T11:05:20.640"}, "2095138": {"ParentId": "2094776", "CommentCount": "0", "Body": "<p>If you fancy the preprocessor you could write some kind of macro that auto-expands to the number of case statement required.  However that would require a lengthly file with pretty much all case statements (ex: #define CASE0 case 0:  #define CASE1 case 1: ...)</p>\n<p>You shouldn't go there but it's fun to do...for fun! ;)</p>\n", "OwnerUserId": "251549", "PostTypeId": "2", "Id": "2095138", "Score": "0", "CreationDate": "2010-01-19T16:42:35.017", "LastActivityDate": "2010-01-19T16:42:35.017"}, "10740312": {"ParentId": "2094776", "CommentCount": "0", "Body": "<p>The standard does not allow for this:</p>\n<blockquote>\n<p id=\"so_2094776_10740312_0\">6.4.2 The switch statement [stmt.switch]</p>\n<p id=\"so_2094776_10740312_1\">[...] Any statement within the switch statement can be labeled with one or more case labels as follows:</p>\n<p id=\"so_2094776_10740312_2\"><code>case constant-expression :</code></p>\n<p id=\"so_2094776_10740312_3\">where the constant-expression shall be an integral constant expression (5.19).</p>\n</blockquote>\n", "OwnerUserId": "76722", "PostTypeId": "2", "Id": "10740312", "Score": "0", "CreationDate": "2012-05-24T15:13:07.633", "LastActivityDate": "2012-05-24T15:13:07.633"}, "2094817": {"ParentId": "2094776", "CommentCount": "0", "Body": "<p>This isn't possible.  The closest you can some, if the values are reasonably close together is </p>\n<pre><code>switch(userInputtedInt)\n{\n    case someNum:\n    case someNum+1:\n    // ... \n    case someOtherNum:\n    break;\n\n}\n</code></pre>\n", "OwnerUserId": "2298", "PostTypeId": "2", "Id": "2094817", "Score": "0", "CreationDate": "2010-01-19T15:56:23.723", "LastActivityDate": "2010-01-19T15:56:23.723"}, "bq_ids": {"n4140": {"so_2094776_10740312_1": {"section_id": 3890, "quality": 0.9166666666666666, "length": 11}, "so_2094776_10740312_3": {"section_id": 3890, "quality": 0.6666666666666666, "length": 4}}, "n3337": {"so_2094776_10740312_1": {"section_id": 3750, "quality": 0.9166666666666666, "length": 11}, "so_2094776_10740312_3": {"section_id": 3101, "quality": 0.8333333333333334, "length": 5}}, "n4659": {"so_2094776_10740312_1": {"section_id": 4776, "quality": 0.9166666666666666, "length": 11}, "so_2094776_10740312_3": {"section_id": 4776, "quality": 0.6666666666666666, "length": 4}}}, "2094825": {"ParentId": "2094776", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>No, this is usually the purview of the <code>if</code> statement:</p>\n<pre><code>if ((userInputtedInt &gt;= someNum) &amp;&amp; (userInputtedInt &lt;= someOtherNum)) { ... }\n</code></pre>\n<p>Of course, you can incorporate that into a <code>switch</code> statement:</p>\n<pre><code>switch (x) {\n    case 1:\n        // handle 1\n        break;\n    default:\n        if ((x &gt;= 2) &amp;&amp; (x &lt;= 20)) { ... }\n}\n</code></pre>\n", "OwnerUserId": "14860", "LastEditorUserId": "14860", "LastEditDate": "2016-01-12T13:42:03.550", "Id": "2094825", "Score": "7", "CreationDate": "2010-01-19T15:57:30.830", "LastActivityDate": "2016-01-12T13:42:03.550"}, "2094800": {"ParentId": "2094776", "CommentCount": "2", "Body": "<p>/////////////// Nope</p>\n", "OwnerUserId": "106420", "PostTypeId": "2", "Id": "2094800", "Score": "0", "CreationDate": "2010-01-19T15:54:14.503", "LastActivityDate": "2010-01-19T15:54:14.503"}, "2094826": {"ParentId": "2094776", "CommentCount": "0", "Body": "<p>It's not possible directly -- a C or C++ switch statement requires that each case is a constant, not a Boolean expression. If you have evenly distributed ranges, you can often get the same effect using integer division though. e.g. if you have inputs from 1 to 100, and want to work with 90-100 as one group, 80-89 as another group, and so on, you can divide your input by 10, and each result will represent a range.</p>\n", "OwnerUserId": "179910", "PostTypeId": "2", "Id": "2094826", "Score": "3", "CreationDate": "2010-01-19T15:57:32.547", "LastActivityDate": "2010-01-19T15:57:32.547"}, "2094776": {"CommentCount": "12", "ViewCount": "12210", "PostTypeId": "1", "LastEditorDisplayName": "anon", "CreationDate": "2010-01-19T15:52:25.790", "LastActivityDate": "2016-01-12T13:42:03.550", "LastEditDate": "2010-01-19T16:11:38.040", "AcceptedAnswerId": "2094791", "FavoriteCount": "1", "Title": "Is It Possible To Do The Following In A Switch Statement - C++?", "Id": "2094776", "Score": "5", "Body": "<p>I am a programming student in my second OOP class, and I have a simple question that I have not been able to find the answer to on the internet, if it's out there, I apologize.</p>\n<p>My question is this:</p>\n<p>Is it possible have Boolean conditions in switch statements?</p>\n<p>Example:</p>\n<pre><code>switch(userInputtedInt)\n{\n    case &gt;= someNum &amp;&amp; &lt;= someOtherNum\n    break;\n    // Is this possible?\n}\n</code></pre>\n", "Tags": "<c++><switch-statement>", "OwnerUserId": "205930", "AnswerCount": "10"}, "2094823": {"ParentId": "2094776", "CommentCount": "2", "Body": "<p>C++ does not support that.</p>\n<p>However, if you are not concerned with writing portable, standard code some compilers support this extended syntax:</p>\n<pre><code>switch(userInputtedInt)\n{\n    case someNum...someOtherNum:\n    break;\n}\n</code></pre>\n<p>Those values must be constant.</p>\n", "OwnerUserId": "16287", "PostTypeId": "2", "Id": "2094823", "Score": "0", "CreationDate": "2010-01-19T15:57:13.113", "LastActivityDate": "2010-01-19T15:57:13.113"}, "2094831": {"ParentId": "2094776", "CommentCount": "2", "Body": "<p>As others have said you can't implement this <strong>directly</strong> as you are trying to do because C++ syntax doesn't allow it.  But you can do this:</p>\n<pre><code>switch( userInputtedInt )\n{\n  // case 0-3 inclusve\n  case 0 :\n  case 1 :\n  case 2 :\n  case 3 :\n    // do something for cases 0, 1, 2 &amp; 3\n    break;\n\n  case 4 :\n  case 5 :\n    // do something for cases 4 &amp; 5\n    break;\n}\n</code></pre>\n", "OwnerUserId": "241536", "PostTypeId": "2", "Id": "2094831", "Score": "7", "CreationDate": "2010-01-19T15:58:17.413", "LastActivityDate": "2010-01-19T15:58:17.413"}, "2094791": {"ParentId": "2094776", "CommentCount": "1", "Body": "<p>No this is not possible in C++.  Switch statements only support simple integer matches.  If you need a complex boolean condition then you should use an if / else block</p>\n", "OwnerUserId": "23283", "PostTypeId": "2", "Id": "2094791", "Score": "11", "CreationDate": "2010-01-19T15:53:27.893", "LastActivityDate": "2010-01-19T15:53:27.893"}});