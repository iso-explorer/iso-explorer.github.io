post_cb({"22807269": {"Id": "22807269", "PostTypeId": "2", "Body": "<ol>\n<li><p>Space or no space?</p>\n<p>I did not found a reference in the standard, but <a href=\"http://gcc.gnu.org/onlinedocs/cppinternals/Token-Spacing.html\" rel=\"nofollow\">this article</a> discusses the issue. In short, it is not easy to decide if you want that space or not...</p></li>\n<li><p>Replacing <code>tzsW</code> with <code>kka</code> or not?</p>\n<p>See 16.3.4 in the standard:</p>\n<blockquote>\n<p id=\"so_22806882_22807269_0\">After all parameters in the replacement list have been substituted,\n  the resulting preprocessing token sequence is rescanned with all\n  subsequent preprocessing tokens of the source file for more macro\n  names to replace.</p>\n</blockquote>\n<p>This indicates that the behaviour of VC is not correct here.</p></li>\n</ol>\n", "LastEditorUserId": "316448", "LastActivityDate": "2014-04-02T10:24:54.817", "Score": "1", "CreationDate": "2014-04-02T09:35:22.537", "ParentId": "22806882", "CommentCount": "5", "OwnerUserId": "316448", "LastEditDate": "2014-04-02T10:24:54.817"}, "bq_ids": {"n4140": {"so_22806882_22807269_0": {"length": 23, "quality": 1.0, "section_id": 530}}, "n3337": {"so_22806882_22807269_0": {"length": 23, "quality": 1.0, "section_id": 521}}, "n4659": {"so_22806882_22807269_0": {"length": 23, "quality": 1.0, "section_id": 551}}}, "22807296": {"Id": "22807296", "PostTypeId": "2", "Body": "<p>The output of the preprocessor is tokens, not plain text. Unless you use the token pasting operator, tokens are not normally combined in preprocessing.</p>\n<p>When you view the output of the preprocessing step, you have to convert the tokens to text. gcc inserts the space so you are not mislead into thinking that <code>tzsW</code> is a single token. It doesn't need to do this in the <code>tzs[</code> case as <code>[</code> isn't a valid identifier character so there's no confusion.</p>\n<p>Both compilers are correct in not treating <code>tzsW</code> as a single token to be re-expanded.</p>\n<p>Note that the <a href=\"http://msdn.microsoft.com/en-us/library/3xkfswhy%28v=vs.100%29.aspx\" rel=\"nofollow\" title=\"Visual C++ documentation\">Visual C++ documentation</a> acknowledges that compiling the output of the preprocessor may produce different and incorrect output compared with compiling the original source due to the fact that they don't insert whitespace to delimit tokens when converting the preprocessed output to text. This doesn't happen when the preprocessor output is passed straight to the next stage of the compiler in normal operation.</p>\n", "LastEditorUserId": "19563", "LastActivityDate": "2014-04-02T11:06:29.367", "Score": "4", "CreationDate": "2014-04-02T09:36:04.183", "ParentId": "22806882", "CommentCount": "4", "OwnerUserId": "19563", "LastEditDate": "2014-04-02T11:06:29.367"}, "22806882": {"ViewCount": "131", "Body": "<p>I am trying to understand the C++ standard preprocessor requirement. A little bit tricky example I created has surprising results in GCC and VC++2010:</p>\n<pre><code>#define a(x,y) x##y\n#define tzsW kka\na(t,zs  )W\n</code></pre>\n<p>GCC yields:</p>\n<pre><code>tzs W\n</code></pre>\n<p>Note the extra space added before W.</p>\n<p>VC++2010 yields:</p>\n<pre><code>tzsW\n</code></pre>\n<p>Note there is no space added before W but the identifier is not further expanded. I scanned through the C++03 standard and cannot find anything saying we should prevent a new identifier (<code>tzsW</code>) from being created as in gcc. And nothing is about preventing this new identifier from further macro expanded (VC++ behaviour).</p>\n<p>Why GCC and VC++2010 don't like the new identifier?</p>\n<p>EDIT</p>\n<p>if another macro invocation used, e.g.</p>\n<pre><code>a(t,zs  )[]\n</code></pre>\n<p>gcc yields:</p>\n<pre><code>tzs[]\n</code></pre>\n<p>Note no space added, showing gcc deliberately adds space to my previous case.</p>\n", "AcceptedAnswerId": "22807296", "Title": "Unexpected Behaviour of GCC and VC++ Preprocessor", "CreationDate": "2014-04-02T09:21:26.183", "Id": "22806882", "CommentCount": "0", "LastEditDate": "2016-07-03T10:03:33.450", "PostTypeId": "1", "LastEditorUserId": "4370109", "LastActivityDate": "2016-07-03T10:03:33.450", "Score": "1", "OwnerUserId": "237575", "Tags": "<c++><gcc><visual-c++><c-preprocessor>", "AnswerCount": "2"}});