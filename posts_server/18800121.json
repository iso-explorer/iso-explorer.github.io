post_cb({"18800151": {"Id": "18800151", "PostTypeId": "2", "Body": "<p>Yes it can, quote from the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3691.pdf\">draft Standard</a> (bold emphasis mine)</p>\n<p><strong>7.1.3 The typedef speci\ufb01er [dcl.typedef]</strong></p>\n<blockquote>\n<p id=\"so_18800121_18800151_0\">2 A typedef-name can also be introduced by an alias-declaration. The\n  identi\ufb01er following the using keyword becomes a typedef-name and the\n  optional attribute-speci\ufb01er-seq following the identi\ufb01er appertains to\n  that typedef-name. <strong>It has the same semantics as if it were introduced\n  by the typedef speci\ufb01er.</strong></p>\n</blockquote>\n", "LastActivityDate": "2013-09-14T09:10:42.513", "CommentCount": "6", "CreationDate": "2013-09-14T09:10:42.513", "ParentId": "18800121", "Score": "7", "OwnerUserId": "819272"}, "bq_ids": {"n4140": {"so_18800121_18800151_0": {"length": 19, "quality": 0.7916666666666666, "section_id": 5408}}, "n3337": {"so_18800121_18800151_0": {"length": 19, "quality": 0.7916666666666666, "section_id": 5203}}, "n4659": {"so_18800121_18800151_0": {"length": 19, "quality": 0.7916666666666666, "section_id": 6830}}}, "18800121": {"ViewCount": "529", "Body": "<p>I know <code>using</code> can do something <code>typedef</code> cannot do.</p>\n<p>I just wonder whether <code>using</code> can fully replace <code>typedef</code> in all cases?</p>\n", "AcceptedAnswerId": "18800151", "Title": "Can \"using\" fully replace \"typedef\" in all cases?", "CreationDate": "2013-09-14T09:06:15.933", "Id": "18800121", "CommentCount": "4", "PostTypeId": "1", "LastActivityDate": "2013-09-14T09:10:42.513", "Score": "7", "OwnerUserId": "508343", "Tags": "<c++><c++11><types><typedef><using>", "AnswerCount": "1"}});