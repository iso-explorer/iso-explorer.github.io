post_cb({"27257440": {"CommentCount": "1", "AcceptedAnswerId": "27257523", "CreationDate": "2014-12-02T19:33:01.883", "LastActivityDate": "2014-12-02T19:37:12.270", "PostTypeId": "1", "ViewCount": "392", "FavoriteCount": "1", "Title": "Thread safety of std::mutex", "Id": "27257440", "Score": "3", "Body": "<p>Can I lock std::mutex in one thread and unlock it in other thread? This is theoretical question without any specific engineering context. I am just curious. </p>\n", "Tags": "<c++><multithreading><c++11><thread-safety>", "OwnerUserId": "1169741", "AnswerCount": "2"}, "27257523": {"ParentId": "27257440", "CommentCount": "0", "Body": "<p>C++ standard, [thread.mutex.requirements.mutex]/21 and 22:</p>\n<blockquote>\n<p id=\"so_27257440_27257523_0\">The expression <code>m.unlock()</code> shall be well-formed and have the following semantics:<br/></p>\n<p id=\"so_27257440_27257523_1\">\u00a0 \u00a0 \u00a0\u00a0<strong><em>Requires</em>: The calling thread shall own the mutex.</strong></p>\n</blockquote>\n<p>A violation of requirements in a <em>Requires</em> clause induces undefined behavior.</p>\n", "OwnerUserId": "3647361", "PostTypeId": "2", "Id": "27257523", "Score": "7", "CreationDate": "2014-12-02T19:37:12.270", "LastActivityDate": "2014-12-02T19:37:12.270"}, "27257494": {"ParentId": "27257440", "CommentCount": "0", "Body": "<p><a href=\"http://en.cppreference.com/w/cpp/thread/mutex/unlock\" rel=\"noreferrer\">cppreference reads:</a></p>\n<blockquote>\n<p id=\"so_27257440_27257494_0\">The mutex must be locked by the current thread of execution, otherwise, the behavior is undefined.</p>\n</blockquote>\n", "OwnerUserId": "1804599", "PostTypeId": "2", "Id": "27257494", "Score": "6", "CreationDate": "2014-12-02T19:36:04.293", "LastActivityDate": "2014-12-02T19:36:04.293"}, "bq_ids": {"n4140": {"so_27257440_27257523_1": {"section_id": 2754, "quality": 0.6666666666666666, "length": 4}, "so_27257440_27257523_0": {"section_id": 2768, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_27257440_27257523_1": {"section_id": 2715, "quality": 0.6666666666666666, "length": 4}, "so_27257440_27257523_0": {"section_id": 2729, "quality": 0.8571428571428571, "length": 6}}, "n4659": {"so_27257440_27257523_1": {"section_id": 3492, "quality": 0.6666666666666666, "length": 4}, "so_27257440_27257523_0": {"section_id": 3506, "quality": 0.8571428571428571, "length": 6}}}});