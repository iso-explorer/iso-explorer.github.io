post_cb({"31488070": {"ParentId": "31488016", "CommentCount": "0", "CreationDate": "2015-07-18T05:22:44.983", "OwnerUserId": "512225", "PostTypeId": "2", "Id": "31488070", "Score": "2", "Body": "<p>S is private, try this:</p>\n<pre><code>template &lt;class T&gt; class X{\n   static typename T::S ts;\n };\n\n class Y {\n private:\n   class VS{ public: class S{ }; };\n   X&lt;VS&gt; x; //1\n };\n</code></pre>\n", "LastActivityDate": "2015-07-18T05:22:44.983"}, "bq_ids": {"n4140": {"so_31488016_31488016_0": {"section_id": 78, "quality": 0.8461538461538461, "length": 22}, "so_31488016_31488016_1": {"section_id": 78, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_31488016_31488016_1": {"section_id": 73, "quality": 0.8571428571428571, "length": 6}, "so_31488016_31488016_0": {"section_id": 73, "quality": 0.8461538461538461, "length": 22}}, "n4659": {"so_31488016_31488016_0": {"section_id": 80, "quality": 0.8461538461538461, "length": 22}, "so_31488016_31488016_1": {"section_id": 80, "quality": 0.8571428571428571, "length": 6}}}, "31488016": {"CommentCount": "3", "ViewCount": "43", "OwnerDisplayName": "user2953119", "CreationDate": "2015-07-18T05:10:58.460", "LastActivityDate": "2015-07-18T05:22:44.983", "PostTypeId": "1", "AcceptedAnswerId": "31488070", "Title": "Access restrictions for template arguments", "Id": "31488016", "Score": "1", "Body": "<p>The section <code>N4296::14.3/3 [temp.arg]</code> says:</p>\n<blockquote>\n<p id=\"so_31488016_31488016_0\"><strong>The name</strong> of a template-argument <strong>shall be accessible at the point where</strong>\n<strong>it is used</strong> as a template-argument. [ Note: If the name of the\n  template-argument is accessible at the point where it is used as a\n  templateargument, <strong>there is no further access restriction in the</strong>\n<strong>resulting instantiation</strong> where the corresponding template-parameter\n  name is used. \u2014end note ]</p>\n</blockquote>\n<p>All right, let's consider the following example:</p>\n<pre><code>template &lt;class T&gt; class X{\n    static typename T::S ts;\n};\n\nclass Y {\nprivate:\n    class VS{ class S{ }; };\n    X&lt;VS&gt; x; //1\n};\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/3b67b3fff2e461e9\" rel=\"nofollow\"><strong>DEMO</strong></a></p>\n<p>Template argument for the template <code>X</code> in its instantiation at <code>//1</code> is <code>class VS</code>. Now, what the Standard said it's this:</p>\n<blockquote>\n<p id=\"so_31488016_31488016_1\">The name of a template-argument <strong>shall be accessible at the point where</strong>\n<strong>it is used as a template-argument</strong>.</p>\n</blockquote>\n<p><code>class VS</code> is accessible at the point <code>//1</code>, therefore the requirement is held. But inspite of the fact that the Standard said that there's no further access restriction, the code is not compiled.</p>\n<p>Why the code is not compiled? From what I could say based on the section I provided, it <strong>should be</strong> compiled.</p>\n", "Tags": "<c++><templates>", "AnswerCount": "1"}});