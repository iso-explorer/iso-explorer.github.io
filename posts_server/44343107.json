post_cb({"44343107": {"CommentCount": "4", "ViewCount": "54", "PostTypeId": "1", "LastEditorUserId": "4323", "CreationDate": "2017-06-03T10:52:02.513", "LastActivityDate": "2017-06-03T11:13:52.453", "Title": "Using a static template constexpr with SFINAE fails", "LastEditDate": "2017-06-03T11:13:52.453", "Id": "44343107", "Score": "0", "Body": "<p>I'm trying to create a class template which provides a way to check if the template was given a specific type.</p>\n<pre><code>#include &lt;type_traits&gt;\n\ntemplate&lt;typename T, typename U&gt;\nclass Acceptor\n{\npublic:\n\n    template&lt;typename X&gt;\n    static constexpr bool accepts =\n        std::is_same&lt;T, typename std::remove_reference&lt;X&gt;::type&gt;::value ||\n        std::is_same&lt;U, typename std::remove_reference&lt;X&gt;::type&gt;::value;\n\n    void set(T value) { /* some code */ }\n    void set(U value) { /* some code */ }\n};\n</code></pre>\n<p>I would like to use the template above in a SFINAE expression as follows: </p>\n<pre><code>#include &lt;type_traits&gt;\n\nclass Setter\n{\npublic:\n    template&lt;typename T, typename U,\n        typename std::enable_if&lt; T::accepts&lt;U&gt; &gt;::type * = nullptr&gt;\n    void set(T instance, U&amp;&amp; value)\n    {\n        instance.set(std::forward&lt;U&gt;(value));\n    }\n\n    template&lt;typename T, typename U,\n        typename std::enable_if&lt; !T::accepts&lt;U&gt; &gt;::type * = nullptr&gt;\n    void set(T instance, U&amp;&amp; value)\n    {\n        // Nothing to do here\n    }\n};\n</code></pre>\n<p>but the code doesn't compile in GCC 7.1.0 or MSVC for VS2017. The former is giving me the following error:</p>\n<blockquote>\n<p id=\"so_44343107_44343107_0\">error: 'struct std::enable_if&lt;(T:: accepts &lt; )&gt;' is not a valid type for a template non-type parameter</p>\n</blockquote>\n<p>but I can't see the reason.</p>\n", "Tags": "<c++><sfinae>", "OwnerUserId": "5360299", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_44343107_44343107_0": {"section_id": 294, "quality": 0.5555555555555556, "length": 5}}, "n3337": {"so_44343107_44343107_0": {"section_id": 285, "quality": 0.5555555555555556, "length": 5}}, "n4659": {"so_44343107_44343107_0": {"section_id": 301, "quality": 0.5555555555555556, "length": 5}}}});