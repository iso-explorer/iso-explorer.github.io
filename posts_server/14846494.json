post_cb({"bq_ids": {"n4140": {"so_14846494_14846494_0": {"length": 39, "quality": 0.9285714285714286, "section_id": 5834}}, "n3337": {"so_14846494_14846494_0": {"length": 39, "quality": 0.9285714285714286, "section_id": 5605}}, "n4659": {"so_14846494_14846494_0": {"length": 39, "quality": 0.9285714285714286, "section_id": 7296}}}, "14851782": {"Id": "14851782", "PostTypeId": "2", "Body": "<p>No, there is nothing in the C++ standard that guarantees immediate visibility.</p>\n<p>Atomic writes should become visible to other threads within a \"reasonable\" period of time, but they do not have to be immediate, and there is no precise definition of \"reasonable\".</p>\n<p>What <strong>is</strong> guaranteed is that there is a single total order of <code>memory_order_seq_cst</code> operations. A read that does not see the value written must therefore occur earlier in that total order than the write. Since this total order encompasses <strong>all</strong> variables and <strong>all</strong> <code>memory_order_seq_cst</code> operations, if there is any communication between the threads at all, then writes must become visible pretty quickly.</p>\n", "LastActivityDate": "2013-02-13T10:48:31.587", "CommentCount": "0", "CreationDate": "2013-02-13T10:48:31.587", "ParentId": "14846494", "Score": "6", "OwnerUserId": "5597"}, "14846494": {"ViewCount": "290", "Body": "<p>N3243 1.10.21 says</p>\n<blockquote>\n<p id=\"so_14846494_14846494_0\">It can be shown that programs that correctly use mutexes and memory_order_\n  seq_cst operations to prevent all data races and use no other synchronization operations behave as if the\n  operations executed by their constituent threads were simply interleaved, with each value computation of an\n  object being taken from the last side effect on that object in that interleaving. This is normally referred to as \u201csequential consistency\u201d.</p>\n</blockquote>\n<p>Does this mean that any <strong>seq_cst</strong> writes on an atomic object are immediately visible to other threads which read the atomic object with <strong>seq_cst</strong> ordering ?</p>\n", "AcceptedAnswerId": "14851782", "Title": "Does seq_cst ordering guarentee immediate visibility?", "CreationDate": "2013-02-13T04:40:24.200", "Id": "14846494", "CommentCount": "0", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2013-02-14T19:15:17.100", "LastEditorUserId": "636019", "LastActivityDate": "2013-02-14T19:15:17.100", "Score": "3", "OwnerUserId": "381646", "Tags": "<c++><multithreading><c++11><atomic>", "AnswerCount": "1"}});