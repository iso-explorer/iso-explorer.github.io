post_cb({"4395308": {"ParentId": "4395289", "CommentCount": "12", "Body": "<p>If you want to have temporary objects inside a case, you'll need to scope them properly.</p>\n<pre><code>switch(choice)\n{\n    case 1:\n    {\n         cin&gt;&gt;n; \n         n_hexa nx(n);\n         break;\n    }\n    case 2:\n    {\n         cin&gt;&gt;n; \n         n_octa no(n);\n         break;\n    }\n    case 3:\n    {\n         cin&gt;&gt;n;\n         n_bin nb(n);\n         break;\n    }\n}\n</code></pre>\n", "OwnerUserId": "345717", "PostTypeId": "2", "Id": "4395308", "Score": "9", "CreationDate": "2010-12-09T05:56:24.207", "LastActivityDate": "2010-12-09T05:56:24.207"}, "4397136": {"ParentId": "4395289", "CommentCount": "0", "Body": "<p>Ebomike's post has the answer to get rid of the errors. Now the reason is, </p>\n<p>From Standard docs <em>6.7.3</em>,</p>\n<blockquote>\n<p id=\"so_4395289_4397136_0\">It is possible to transfer into a block, but not in a way that bypasses declarations with initialization. <strong>A program that\n  jumps77) from a point where a local variable with automatic storage duration is not in scope to a point where it is in\n  scope is ill-formed</strong> unless the variable has trivial type (3.9) and is declared without an initializer (8.5).</p>\n</blockquote>\n<p>An example from the Standard docs itself,</p>\n<pre><code>void f()\n{\n// ...\ngoto lx; // ill-formed: jump into scope of a\n// ...\nly:\nX a = 1;\n// ...\nlx:\ngoto ly; // OK, jump implies destructor\n// call for a followed by construction\n// again immediately following label ly\n}\n</code></pre>\n<p>In which the statement <code>goto lx;</code> is ill-formed because it is being jumped to the statement <code>lx</code>, where the scope of <code>a</code> is visible. </p>\n<p>Also,</p>\n<blockquote>\n<p id=\"so_4395289_4397136_1\"><strong>77)The transfer from the condition of a switch statement to a case label is considered a jump in this respect.</strong></p>\n</blockquote>\n<p>So, this applies to <code>switch</code> as well.</p>\n<p>And if braces <code>{}</code> are put in them, the scope is limited to the braces and you are free to declare within each <code>case</code> statement. </p>\n<p>Hope that helps..</p>\n", "OwnerUserId": "249490", "PostTypeId": "2", "Id": "4397136", "Score": "2", "CreationDate": "2010-12-09T10:23:50.490", "LastActivityDate": "2010-12-09T10:23:50.490"}, "4395289": {"CommentCount": "2", "CreationDate": "2010-12-09T05:52:52.323", "PostTypeId": "1", "AcceptedAnswerId": "4395308", "LastEditorUserId": "535962", "LastActivityDate": "2010-12-09T10:23:50.490", "LastEditDate": "2010-12-09T07:56:03.830", "ViewCount": "1849", "FavoriteCount": "2", "Title": "why i cant instantiate objects inside a switch-case block", "Id": "4395289", "Score": "7", "Body": "<p>my code has 3 classes n_hexa,n_octa,n_bin. The code is here</p>\n<pre><code>switch(choice)\n{\ncase 1: cin&gt;&gt;n; \n n_hexa nx(n);\n        break;\ncase 2: cin&gt;&gt;n; \n n_octa no(n);\n        break;\ncase 3: cin&gt;&gt;n;\n n_bin nb(n);\n        break;\n}\n</code></pre>\n<p>on compiling it gives a message \"<strong>crosses initialisation of n_hexa</strong>\" for line of n_octa</p>\n", "Tags": "<c++><block><switch-statement><instantiation>", "OwnerUserId": "535962", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_4395289_4397136_0": {"section_id": 3918, "quality": 0.8518518518518519, "length": 23}, "so_4395289_4397136_1": {"section_id": 3918, "quality": 0.8888888888888888, "length": 8}}, "n3337": {"so_4395289_4397136_0": {"section_id": 3778, "quality": 0.8518518518518519, "length": 23}, "so_4395289_4397136_1": {"section_id": 3778, "quality": 0.8888888888888888, "length": 8}}, "n4659": {"so_4395289_4397136_0": {"section_id": 4804, "quality": 0.8888888888888888, "length": 24}, "so_4395289_4397136_1": {"section_id": 4804, "quality": 0.8888888888888888, "length": 8}}}, "4395327": {"ParentId": "4395289", "CommentCount": "11", "Body": "<p>Try declaring the variables above the switch command:</p>\n<pre><code>n_hexa nx;\nn_octa no;\nn_bin nb;\nswitch(choice) {\n    case 1:\n        cin&gt;&gt;n;\n        nx(n);\n        break;\n...\n</code></pre>\n", "OwnerUserId": "447356", "PostTypeId": "2", "Id": "4395327", "Score": "2", "CreationDate": "2010-12-09T05:58:58.150", "LastActivityDate": "2010-12-09T05:58:58.150"}});