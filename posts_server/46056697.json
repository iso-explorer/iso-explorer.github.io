post_cb({"bq_ids": {"n4140": {"so_46056697_46056836_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 5917}}, "n3337": {"so_46056697_46056836_0": {"length": 8, "quality": 0.7272727272727273, "section_id": 5689}}, "n4659": {"so_46056697_46056836_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 7410}}}, "46056697": {"ViewCount": "67", "Body": "<p>When compiling my project I get the warning <strong>anonymous types declared in an anonymous union are an extension [-Wnested-anon-types]</strong>. My code contains this union:</p>\n<pre><code>union\n{\n    uint32_t m_bits;  // All bits\n    struct\n    {\n      uint32_t significand : 23;\n      uint32_t exponent : 8;\n      uint32_t sign : 1;\n    } IEEE;\n  };\n</code></pre>\n<p>As far as other answers on the site have said, I would only expect this warning if I omitted the <code>IEEE</code>, name from the struct. But currently the struct should not be an anonymous type?</p>\n", "AcceptedAnswerId": "46056836", "Title": "Why do I get the anonymous type warning for this code?", "CreationDate": "2017-09-05T13:50:44.777", "Id": "46056697", "CommentCount": "3", "FavoriteCount": "0", "PostTypeId": "1", "LastActivityDate": "2017-09-05T14:30:49.400", "Score": "1", "OwnerUserId": "7878485", "Tags": "<c++><clang++><anonymous-types>", "AnswerCount": "1"}, "46056836": {"Id": "46056836", "PostTypeId": "2", "Body": "<p>Because the standard says so ([class.union.anon]):</p>\n<blockquote>\n<p id=\"so_46056697_46056836_0\">Note: Nested types, anonymous\n  unions, and functions cannot be declared within an anonymous union.</p>\n</blockquote>\n<p>The wording of the warning could use some work, though. Clang allows (as a compiler extension) <em>unnamed</em> nested structs and additional anonymous unions within an anonymous union<sup>*</sup>, so it seems the author of the warning got just a little lazy and decided \"anonymous types\" was a good catch-all.</p>\n<p>Note that giving your <code>union</code> a name (thus the union is no longer anonymous) makes the warning disappear.</p>\n<p><sup>*Named structs are still disallowed within anonymous unions (and there's no such thing as an anonymous struct)</sup></p>\n", "LastEditorUserId": "27678", "LastActivityDate": "2017-09-05T14:30:49.400", "Score": "5", "CreationDate": "2017-09-05T13:57:14.167", "ParentId": "46056697", "CommentCount": "6", "OwnerUserId": "27678", "LastEditDate": "2017-09-05T14:30:49.400"}});