post_cb({"17738439": {"ViewCount": "17400", "Body": "<p>If a string is defined like this</p>\n<pre><code>std::string name;\n</code></pre>\n<p>What will be the value of the uninitialized string \"name\" and what size it would be?</p>\n", "AcceptedAnswerId": "17738467", "Title": "Value and size of uninitialized std::string variable in c++", "CreationDate": "2013-07-19T05:02:59.490", "Id": "17738439", "CommentCount": "6", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2013-07-19T05:41:11.507", "LastEditorUserId": "1090079", "LastActivityDate": "2013-07-20T11:53:01.057", "Score": "16", "OwnerUserId": "1799999", "Tags": "<c++>", "AnswerCount": "5"}, "17738467": {"Id": "17738467", "PostTypeId": "2", "Body": "<p>Because it is not initialized, it is the default constructor that is called. Then :</p>\n<blockquote>\n<p id=\"so_17738439_17738467_0\"><strong>empty string constructor (default constructor) :</strong></p>\n<p id=\"so_17738439_17738467_1\">Constructs an empty string, with a length of zero characters.</p>\n</blockquote>\n<p>Take a look : <a href=\"http://www.cplusplus.com/reference/string/string/string/\">http://www.cplusplus.com/reference/string/string/string/</a></p>\n<p><strong>EDIT :</strong>\nAs stated in <em>C++11, \u00a721.4.2/1</em> :</p>\n<blockquote>\n<p id=\"so_17738439_17738467_2\">E\ufb00ects: Constructs an object of class <strong>basic_string</strong>. The postconditions of this function are indicated in Table 63.</p>\n</blockquote>\n<pre><code>-&gt; Table 63\n+-----------------------------------------------------------------------------+\n| data()     | a non-null pointer that is copyable and can have 0 added to it |\n+------------+----------------------------------------------------------------+\n| size()     | 0                                                              |\n+------------+----------------------------------------------------------------+\n| capacity() | an unspeci\ufb01ed value                                            |\n+-----------------------------------------------------------------------------+\n</code></pre>\n", "LastEditorUserId": "1394283", "LastActivityDate": "2013-07-19T07:11:53.640", "Score": "27", "CreationDate": "2013-07-19T05:05:21.343", "ParentId": "17738439", "CommentCount": "0", "OwnerUserId": "1394283", "LastEditDate": "2013-07-19T07:11:53.640"}, "17738729": {"Id": "17738729", "PostTypeId": "2", "Body": "<p>The Standard (C++11, \u00a721.4.2/1) describes the results of default-constructing a <code>std::basic_string</code> (of which <code>std::string</code> is a specialization) as follows:</p>\n<blockquote>\n<p id=\"so_17738439_17738729_0\">[...] an object of class <code>basic_string</code>. The postconditions [...] are indicated in Table 63.</p>\n</blockquote>\n<p>And Table 63 says:</p>\n<blockquote>\n<p id=\"so_17738439_17738729_1\"><code>data()</code>    a non-null pointer that is copyable and can have 0 added to it<br>\n<code>size()</code> 0<br>\n<code>capacity()</code> an unspecified value</br></br></p>\n</blockquote>\n", "LastActivityDate": "2013-07-19T05:30:48.320", "CommentCount": "0", "CreationDate": "2013-07-19T05:30:48.320", "ParentId": "17738439", "Score": "4", "OwnerUserId": "777186"}, "17739119": {"Id": "17739119", "PostTypeId": "2", "Body": "<p>value is null , and size is 0\nBut you can directly chk if the string is empty or not by empty()</p>\n<p>Just in case you want to check that in your application , Do this </p>\n<pre><code>std::string name // Construct an empty string  \nif(name.empty()) { // Check if its empty\n  name=\"something\";\n}\n</code></pre>\n<p>Similar and more detailed discussion is here\n<a href=\"https://stackoverflow.com/questions/11556394/initializing-strings-as-null-vs-empty-string\">initializing strings as null vs. empty string</a> </p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2013-07-20T11:53:01.057", "Score": "-4", "CreationDate": "2013-07-19T06:04:49.767", "ParentId": "17738439", "CommentCount": "1", "OwnerUserId": "1807864", "LastEditDate": "2017-05-23T12:17:58.683"}, "bq_ids": {"n4140": {"so_17738439_17738467_0": {"length": 4, "quality": 0.8, "section_id": 370}, "so_17738439_17738467_2": {"length": 7, "quality": 0.7, "section_id": 1568}, "so_17738439_17738729_1": {"length": 11, "quality": 1.0, "section_id": 1568}, "so_17738439_17738729_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 1568}, "so_17738439_17738467_1": {"length": 4, "quality": 0.6666666666666666, "section_id": 4155}}, "n3337": {"so_17738439_17738467_0": {"length": 4, "quality": 0.8, "section_id": 360}, "so_17738439_17738467_2": {"length": 7, "quality": 0.7, "section_id": 1563}, "so_17738439_17738729_1": {"length": 11, "quality": 1.0, "section_id": 1563}, "so_17738439_17738729_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 1563}, "so_17738439_17738467_1": {"length": 4, "quality": 0.6666666666666666, "section_id": 3998}}, "n4659": {"so_17738439_17738467_0": {"length": 4, "quality": 0.8, "section_id": 384}, "so_17738439_17738467_2": {"length": 7, "quality": 0.7, "section_id": 1717}, "so_17738439_17738729_1": {"length": 11, "quality": 1.0, "section_id": 1717}, "so_17738439_17738729_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 1717}, "so_17738439_17738467_1": {"length": 4, "quality": 0.6666666666666666, "section_id": 5416}}}, "17738454": {"Id": "17738454", "PostTypeId": "2", "Body": "<p>It's not uninitialized, its <em>default constructor</em> is called.</p>\n<p>From <a href=\"http://en.cppreference.com/w/cpp/string/basic_string/basic_string\">http://en.cppreference.com/w/cpp/string/basic_string/basic_string</a>:</p>\n<blockquote>\n<p id=\"so_17738439_17738454_0\">Default constructor. Constructs empty string.</p>\n</blockquote>\n", "LastActivityDate": "2013-07-19T05:04:13.947", "CommentCount": "0", "CreationDate": "2013-07-19T05:04:13.947", "ParentId": "17738439", "Score": "14", "OwnerUserId": "129570"}, "17738462": {"Id": "17738462", "PostTypeId": "2", "Body": "<p>Default constructed user-defined types are not uninitialized. The default constructor defines an empty string (i.e <code>\"\"</code>) with a size/length of zero.</p>\n", "LastEditorUserId": "1381108", "LastActivityDate": "2013-07-19T05:25:09.833", "Score": "11", "CreationDate": "2013-07-19T05:04:49.547", "ParentId": "17738439", "CommentCount": "0", "OwnerUserId": "1381108", "LastEditDate": "2013-07-19T05:25:09.833"}});