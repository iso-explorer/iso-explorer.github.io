post_cb({"17713134": {"ParentId": "17713124", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>This line</p>\n<pre><code>A a();\n</code></pre>\n<p>declares a function named <code>a</code>, returning <code>A</code> with no arguments. (See <a href=\"http://en.wikipedia.org/wiki/Most_vexing_parse\" rel=\"nofollow noreferrer\">Most vexing parse</a>).</p>\n<p>What you want is</p>\n<pre><code>A a = A(); // value-initialization\nA a{}; // the same but only valid in C++11 (and currently not supported by MSVS)\n</code></pre>\n<p>or</p>\n<pre><code>A a; // default initialization\n</code></pre>\n<h3>C++11, \u00a78.5/10</h3>\n<blockquote>\n<p id=\"so_17713124_17713134_0\">Note: Since () is not permitted by the syntax for initializer,  </p>\n<blockquote id=\"so_17713124_17713134_2\">X a();  </blockquote>\n<p id=\"so_17713124_17713134_1\">is not the declaration of a value-initialized object of class X, but the declaration of a function taking no argument and returning an X.</p>\n</blockquote>\n<p>For your class, value-initialization == default-initialization (at least for the outcome). \nSee my answer here: <a href=\"https://stackoverflow.com/questions/17690095/c-initialization-of-int-variables-by-an-implicit-constructor/17690411#17690411\">C++: initialization of int variables by an implicit constructor</a> for Infos on value- vs. default-initialization for POD or built-in types.</p>\n", "OwnerUserId": "951423", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T10:29:54.663", "Id": "17713134", "Score": "10", "CreationDate": "2013-07-18T01:46:27.150", "LastActivityDate": "2013-07-18T02:38:15.157"}, "17713124": {"CommentCount": "2", "AcceptedAnswerId": "17713134", "PostTypeId": "1", "ClosedDate": "2013-07-18T01:55:24.730", "LastEditorUserId": "827263", "CreationDate": "2013-07-18T01:45:00.957", "LastActivityDate": "2013-07-18T02:38:15.157", "LastEditDate": "2013-07-18T01:50:22.747", "ViewCount": "327", "FavoriteCount": "1", "Title": "What does A a() mean?", "Id": "17713124", "Score": "5", "Body": "<p>Consider this code:</p>\n<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\nclass A\n{\n    public:\n    A():age(12){}\n    int age;\n};\n\nint main()\n{\n    A a();\n    cout &lt;&lt; a.age &lt;&lt; endl;\n    return 0;\n}\n</code></pre>\n<p>When I compile it using g++, I get an error:</p>\n<blockquote>\n<p id=\"so_17713124_17713124_0\">you can not see the member age, because a is not a class A()</p>\n</blockquote>\n<p>Can someone explain this to me? What is <code>A a()</code>?</p>\n", "Tags": "<c++>", "OwnerUserId": "2576391", "AnswerCount": "2"}, "17713154": {"ParentId": "17713124", "CommentCount": "2", "Body": "<p>It defines a function called <code>a</code> that returns an object of type <code>A</code>. This is known as the \"most vexing parse\".</p>\n", "OwnerUserId": "1270168", "PostTypeId": "2", "Id": "17713154", "Score": "5", "CreationDate": "2013-07-18T01:48:42.920", "LastActivityDate": "2013-07-18T01:48:42.920"}, "bq_ids": {"n4140": {"so_17713124_17713134_1": {"section_id": 3290, "quality": 0.9, "length": 9}, "so_17713124_17713124_0": {"section_id": 194, "quality": 0.5714285714285714, "length": 4}, "so_17713124_17713134_0": {"section_id": 3290, "quality": 0.8, "length": 4}}, "n3337": {"so_17713124_17713134_1": {"section_id": 3160, "quality": 0.9, "length": 9}, "so_17713124_17713124_0": {"section_id": 188, "quality": 0.5714285714285714, "length": 4}, "so_17713124_17713134_0": {"section_id": 3160, "quality": 0.8, "length": 4}}, "n4659": {"so_17713124_17713134_1": {"section_id": 4052, "quality": 0.9, "length": 9}, "so_17713124_17713124_0": {"section_id": 200, "quality": 0.5714285714285714, "length": 4}, "so_17713124_17713134_0": {"section_id": 4052, "quality": 0.8, "length": 4}}}});