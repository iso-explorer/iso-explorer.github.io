post_cb({"22647584": {"ViewCount": "637", "Body": "<p>Based on the answers <a href=\"https://stackoverflow.com/questions/7276826/c-format-number-with-commas\">here</a> to the question of how to format numbers with a comma, I am using the following code:</p>\n<pre><code>#include &lt;locale&gt;\n#include &lt;stringstream&gt;\n\nnamespace\n{\n\nclass comma_numpunct : public std::numpunct&lt;char&gt;\n{\n  protected:\n    virtual char do_thousands_sep() const\n    {\n        return ',';\n    }\n\n    virtual std::string do_grouping() const\n    {\n        return \"\\03\";\n    }\n};\n\n}\n\n\n/* Convert number to string using a comma as the thousands separator. */\nstring thousands(const int x) {\n\n    /* custom locale to ensure thousands separator is comma */\n    comma_numpunct* comma_numpunct_ptr = new comma_numpunct();\n    std::locale comma_locale(std::locale(), comma_numpunct_ptr);\n\n    stringstream ss;\n    ss.imbue(comma_locale); // apply locale to stringstream\n    ss &lt;&lt; x;\n\n    /* garbage collection */\n    delete comma_numpunct_ptr;\n\n    return ss.str();\n}\n</code></pre>\n<p>GDB gives the following backtrace:</p>\n<pre><code>Program received signal SIGSEGV, Segmentation fault.\n0x0000000000000021 in ?? ()\n(gdb) bt\n#0  0x0000000000000021 in ?? ()\n#1  0x00007ffff7701535 in std::locale::_Impl::~_Impl() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#2  0x00007ffff770166d in std::locale::~locale() () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#3  0x000000000044b93e in thousands (x=358799) at ../globals_utilities.cpp:104\n#4  0x000000000045650d in main (argc=1, argv=0x7fffffffdf58) at ../main.cpp:67\n</code></pre>\n<p>So, the problem is (I believe) with my attempt at freeing the <code>new</code>'d memory. But I don't know how to work around this.  (I can't use <code>std::unique_ptr</code> because I'm not always compiling with C++11 support.)</p>\n<p>How can I fix the segfault without leaking memory?</p>\n", "Title": "Segfault when imbueing stringstream with custom locale", "CreationDate": "2014-03-25T22:24:32.073", "LastActivityDate": "2014-03-25T23:20:09.013", "CommentCount": "4", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2017-05-23T11:56:56.973", "LastEditorUserId": "-1", "Id": "22647584", "Score": "1", "OwnerUserId": "1325279", "Tags": "<c++><memory-management><locale><stringstream>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_22647584_22647887_1": {"length": 18, "quality": 0.8571428571428571, "section_id": 6385}, "so_22647584_22647887_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 6385}}, "n3337": {"so_22647584_22647887_1": {"length": 18, "quality": 0.8571428571428571, "section_id": 6142}, "so_22647584_22647887_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 6142}}, "n4659": {"so_22647584_22647887_1": {"length": 18, "quality": 0.8571428571428571, "section_id": 7897}, "so_22647584_22647887_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 7897}}}, "22647887": {"Id": "22647887", "PostTypeId": "2", "Body": "<p>Your problem is the locale facet (numpunct). If you pass it to a locale via constructor and the references of the facet is zero the locale will delete the facet.</p>\n<p>You might do:</p>\n<pre><code>comma_numpunct(size_t refs = 0)\n:   numpunct(refs)\n{}\n</code></pre>\n<p>and</p>\n<pre><code>comma_numpunct* comma_numpunct_ptr = new comma_numpunct(1);\n</code></pre>\n<p>or better omit:</p>\n<pre><code>// double delete\n// delete comma_numpunct_ptr;\n</code></pre>\n<p>You may omit the allocation of the facet:</p>\n<pre><code>string thousands(const int x) {\n   comma_numpunct numpunct(1);\n   std::locale comma_locale(std::locale(), &amp;numpunct);\n   std::stringstream ss;\n   ss.imbue(comma_locale);\n   ss &lt;&lt; x;\n   return ss.str();\n}\n</code></pre>\n<p>From 22.3.1.1.2 Class locale::facet</p>\n<blockquote>\n<p id=\"so_22647584_22647887_0\">The refs argument to the constructor is used for lifetime management.</p>\n<p id=\"so_22647584_22647887_1\">\u2014 For refs == 0, the implementation performs delete\n  static_cast(f) (where f is a pointer to the facet)\n  when the last locale object containing the facet is destroyed; for\n  refs == 1, the implementation never destroys the facet.</p>\n</blockquote>\n", "LastEditorUserId": "2249683", "LastActivityDate": "2014-03-25T23:20:09.013", "Score": "2", "CreationDate": "2014-03-25T22:44:29.917", "ParentId": "22647584", "CommentCount": "0", "LastEditDate": "2014-03-25T23:20:09.013", "OwnerUserId": "2249683"}});