post_cb({"43417462": {"CommentCount": "6", "ViewCount": "65", "PostTypeId": "1", "LastEditorUserId": "3313064", "CreationDate": "2017-04-14T18:49:42.750", "LastActivityDate": "2017-04-14T19:57:20.500", "Title": "const_cast with bool: if condition ignored", "LastEditDate": "2017-04-14T19:57:20.500", "Id": "43417462", "Score": "0", "Body": "<p>VC++ 2010 problem:</p>\n<pre><code>const bool bNew = true;\nconst_cast&lt;bool&amp;&gt;(bNew) = false;\nif(bNew)//bNew is false here, but\n{\n    int i = 0;//this line will be executed\n}\n</code></pre>\n<p>Why?</p>\n<p>Thank you.</p>\n", "Tags": "<c++><visual-c++><casting><boolean><const>", "OwnerUserId": "7868767", "AnswerCount": "1"}, "43417710": {"ParentId": "43417462", "CommentCount": "6", "Body": "<p>From section 7.1.5.1/4 of the C++03 standard:</p>\n<blockquote>\n<p id=\"so_43417462_43417710_0\">Except that any class member declared <code>mutable</code> (7.1.1) can be modified, any attempt to modify a <code>const</code> object during its lifetime (3.8) results in undefined behavior.</p>\n</blockquote>\n<p>You declared <code>bNew</code> to be a <code>const</code> object, then you undermined the type system by explicitly casting it away to modify it.  You therefore invoked <em>undefined behavior</em>, which means that <em>anything</em> can happen.</p>\n", "OwnerUserId": "179715", "PostTypeId": "2", "Id": "43417710", "Score": "3", "CreationDate": "2017-04-14T19:06:24.447", "LastActivityDate": "2017-04-14T19:06:24.447"}, "bq_ids": {"n4140": {"so_43417462_43417710_0": {"section_id": 5433, "quality": 0.9444444444444444, "length": 17}}, "n3337": {"so_43417462_43417710_0": {"section_id": 5228, "quality": 0.9444444444444444, "length": 17}}, "n4659": {"so_43417462_43417710_0": {"section_id": 6861, "quality": 0.9444444444444444, "length": 17}}}});