post_cb({"bq_ids": {"n4140": {"so_38461522_38461987_0": {"length": 11, "quality": 1.0, "section_id": 386}}, "n3337": {"so_38461522_38461987_0": {"length": 11, "quality": 1.0, "section_id": 377}}, "n4659": {"so_38461522_38461987_0": {"length": 11, "quality": 1.0, "section_id": 403}}}, "38461720": {"Id": "38461720", "PostTypeId": "2", "Body": "<p>You need another set of curly braces to use the <code>std::initializer_list</code> constructor.</p>\n<pre><code>vector&lt;S&gt; vs{\"vec_abcd\"};\n</code></pre>\n<p>Tries to construct the vector with a <code>const char[]</code> parameter which will not work</p>\n<pre><code>vector&lt;S&gt; vs{{\"vec_abcd\"}};\n</code></pre>\n<p>On the other hand initializes the vector with a single element initializer list.  Look at it like</p>\n<pre><code>vector&lt;S&gt; vs{{\"vec_abcd\"}};\n            |^list data ^|\n            ^ ctor call  ^\n</code></pre>\n<p><kbd><a href=\"http://coliru.stacked-crooked.com/a/ba8322b36ea750d7\" rel=\"nofollow\">Live Example</a></kbd></p>\n<p>Additionally if you wanted to constrict multiple <code>S</code>'s in the vector you can use</p>\n<pre><code>vector&lt;S&gt; vs{{\"a\"}, {\"b\"}, {\"c\"}, ..., {\"z\"}};\n</code></pre>\n<p>Where each comma separated inner curly brace is for each <code>S</code> you want in the vector.</p>\n", "LastEditorUserId": "4342498", "LastActivityDate": "2016-07-19T16:19:16.463", "Score": "3", "CreationDate": "2016-07-19T14:43:44.790", "ParentId": "38461522", "CommentCount": "3", "OwnerUserId": "4342498", "LastEditDate": "2016-07-19T16:19:16.463"}, "38461987": {"Id": "38461987", "PostTypeId": "2", "Body": "<p>You are trying to initialize vector, which has a constructor <code>S(const string&amp; _s)</code> with the type <code>const char *</code> and as per the C++ Standard (SC22-N-4411.pdf) section 12.3.4 titled 'Conversions' </p>\n<blockquote>\n<p id=\"so_38461522_38461987_0\">4 At most one user-defined conversion (constructor or conversion\n  function) is implicitly applied to a single value.</p>\n</blockquote>\n<p>So ....</p>\n<ol>\n<li>Convert/cast const char * to std::string <code>vector&lt;S&gt; vs{  std::string(\"vec_abcd\")  }</code></li>\n<li>Initialize <code>std::string</code> followed by the vector. Two level of initialization would require two level of indirection with 2 level of nested brace initialization as in <code>vector&lt;S&gt; vs{ {\"vec_abcd\"} }</code>.</li>\n</ol>\n", "LastActivityDate": "2016-07-19T14:54:39.653", "CommentCount": "1", "CreationDate": "2016-07-19T14:54:39.653", "ParentId": "38461522", "Score": "1", "OwnerUserId": "977038"}, "38461522": {"ViewCount": "104", "Body": "<p>I created a class with a a \"type converting constructor\" (constructor that takes a single argument of a different type). I'm not able to use list initialization syntax to create a vector of that class.</p>\n<p>Wrapping my class within a Boost Variant somehow makes the same class work with similar syntax.</p>\n<p>What is the minimum I need to do to able to add my class into a vector using list initializer syntax?</p>\n<p>Full program:</p>\n<pre><code>#include &lt;boost/variant.hpp&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\nusing boost::variant;\n\nstruct S {\n  string s;\n  S() {}\n  ~S() {}\n  S(const string&amp; _s) : s(_s) {\n    // Type converting constructor.\n  }\n};\n\nint main() {\n  // This works.\n  S x{\"abcd\"};\n  cout &lt;&lt; \"x: \" &lt;&lt; x.s &lt;&lt; endl;\n\n  // Why does this not compile?\n  // I'm trying to create a vector with a single element in it.\n  vector&lt;S&gt; vs{\"vec_abcd\"};\n\n  // This works.\n  vector&lt;boost::variant&lt;string&gt;&gt; vnts{\"vnt_abcd0\"};\n  cout &lt;&lt; \"vec: \" &lt;&lt; boost::get&lt;string&gt;(vnts[0]) &lt;&lt; endl;\n}\n</code></pre>\n", "AcceptedAnswerId": "38461987", "Title": "c++ vector list initializer not working with type converting constructor for my class", "CreationDate": "2016-07-19T14:35:15.390", "Id": "38461522", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2016-07-19T16:19:16.463", "Score": "0", "OwnerUserId": "3625974", "Tags": "<c++><boost><vector>", "AnswerCount": "2"}});