post_cb({"bq_ids": {"n4140": {"so_18506938_18507207_0": {"length": 18, "quality": 1.0, "section_id": 31}}, "n3337": {"so_18506938_18507207_0": {"length": 18, "quality": 1.0, "section_id": 28}}, "n4659": {"so_18506938_18507207_0": {"length": 18, "quality": 1.0, "section_id": 31}}}, "18506938": {"ViewCount": "159", "Body": "<p>I wonder about type conversion from a smaller signed integer to a larger unsigned integer.  It appears that the compiler first converts the signed integer to a signed integer of the same size as the destination, then to the unsigned integer.  </p>\n<p>Regard the following C++ code:</p>\n<pre><code>#include &lt;assert.h&gt;\n#include &lt;iostream&gt;\n\ntypedef int sint;\ntypedef unsigned __int64 luint;\n\nint main(int, char**) {\n   assert(sizeof(luint) &gt; sizeof(sint));\n   sint i = -10;\n   luint j = i;\n   std::cout &lt;&lt; std::hex &lt;&lt; j;\n}\n</code></pre>\n<p>Under Visual C++ this yields: <code>fffffffffffffff6</code>.  </p>\n<p>This is as I like it.  Can I be sure that all compilers will behave this way?  If the signed integer would be converted to an unsigned first and then to the new size, the result would have been <code>fffffff6</code>.</p>\n", "AcceptedAnswerId": "18507207", "Title": "C++ signed integer conversion to unsigned with more bits", "CreationDate": "2013-08-29T09:22:01.850", "Id": "18506938", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2013-08-29T09:33:27.700", "Score": "0", "OwnerUserId": "1045800", "Tags": "<c++><integer><type-conversion>", "AnswerCount": "1"}, "18507207": {"Id": "18507207", "PostTypeId": "2", "Body": "<p>Signed to unsigned conversion uses <em>modulo 2<sup>n</sup></em> arithmetic. From the C++11 Standard, section <strong>4.7 Integral conversions [conv.integral]</strong> (\u00a74.7/2):</p>\n<blockquote>\n<p id=\"so_18506938_18507207_0\">If the destination type is unsigned, the resulting value is the least unsigned integer congruent to the source\n  integer (modulo 2<sup><em>n</em></sup> where <em>n</em> is the number of bits used to represent the unsigned type).</p>\n</blockquote>\n<p>So <code>j</code> takes the value 2<sup><em>64</em></sup> \u2212 10, which is <code>0xfffffffffffffff6</code>.</p>\n", "LastActivityDate": "2013-08-29T09:33:27.700", "CommentCount": "2", "CreationDate": "2013-08-29T09:33:27.700", "ParentId": "18506938", "Score": "3", "OwnerUserId": "688659"}});