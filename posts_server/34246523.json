post_cb({"34247109": {"ParentId": "34246523", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2015-12-13T01:40:42.220", "Score": "3", "LastEditorUserId": "657267", "LastEditDate": "2015-12-13T02:52:17.600", "Id": "34247109", "OwnerUserId": "657267", "Body": "<p>The standard library file streams are defined in terms of C <code>FILE</code> streams:</p>\n<p>[fstreams] / 2</p>\n<blockquote>\n<p id=\"so_34246523_34247109_0\">The restrictions on reading and writing a sequence controlled by an\n  object of class <code>basic_filebuf&lt;charT, traits&gt;</code> are the same as for\n  reading and writing with the Standard C library <code>FILE</code>s.</p>\n</blockquote>\n<p>When you open a stream for reading <em>and</em> writing, the library acts as though it opened a <code>FILE</code> in update mode (<code>+</code>)</p>\n<p><a href=\"https://i.stack.imgur.com/XzcFZm.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/XzcFZm.png\"/></a></p>\n<p>From the C standard we can see that </p>\n<p>7.21.5.3 / 7</p>\n<blockquote>\n<p id=\"so_34246523_34247109_1\">When a file is opened with update mode (<code>'+'</code> as the second or third\n  character in the above list of mode argument values), both input and\n  output may be performed on the associated stream. However, output\n  shall not be directly followed by input without an intervening call to\n  the <code>fflush</code> function or to a file positioning function (<code>fseek</code>,\n  <code>fsetpos</code>, or <code>rewind</code>), and <strong>input shall not be directly followed by\n  output without an intervening call to a file positioning function,\n  unless the input operation encounters end-of-file.</strong></p>\n</blockquote>\n<p>I.e. you cannot follow a read with a write without seeking, unless you have hit the end of file, which you haven't here, you have only read up to and including the final character.</p>\n<p>Before writing, you will either have to seek the put position, or read from the stream one last time to hit the end, e.g.</p>\n<pre><code>f.pubseekoff(0, std::ios_base::cur);\n</code></pre>\n<p>The above doesn't work with the latest VC++ library however, and this might actually be a bug. Seeking to the end or beginning works as expected.</p>\n", "LastActivityDate": "2015-12-13T02:52:17.600"}, "bq_ids": {"n4140": {"so_34246523_34247109_0": {"section_id": 2412, "quality": 0.875, "length": 14}}, "n3337": {"so_34246523_34247109_0": {"section_id": 2397, "quality": 0.875, "length": 14}}, "n4659": {"so_34246523_34247109_0": {"section_id": 2687, "quality": 0.875, "length": 14}}}, "34246523": {"CommentCount": "2", "ViewCount": "161", "CreationDate": "2015-12-13T00:12:40.390", "LastActivityDate": "2015-12-13T02:52:17.600", "Title": "std::filebuf VS2015 bug", "FavoriteCount": "1", "PostTypeId": "1", "Id": "34246523", "Score": "0", "Body": "<p>This is the code:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\n#include &lt;string&gt;\n\nint main()\n{\n    {\n        std::filebuf f;\n        f.open(\"test.txt\", std::ios::in | std::ios::out | std::ios::trunc);\n        for (uint8_t ch = '0'; ch &lt; '7'; ch++) {\n            f.sputc(ch);\n        }\n    }\n    {\n        std::filebuf f;\n        f.open(\"test.txt\", std::ios::in | std::ios::out);\n        for (uint8_t ch = '0'; ch &lt; '7'; ch++) {\n            f.sbumpc();\n        }\n        for (uint8_t ch = '7'; ch &lt; '9'; ch++) {\n            f.sputc(ch);\n        }\n    }\n    {\n        std::ifstream f(\"test.txt\");\n        std::string line;\n        std::getline(f, line);\n        std::cout &lt;&lt; line &lt;&lt; std::endl;\n    }\n\n}\n</code></pre>\n<p>Windows 10<br>\nMicrosoft (R) C/C++ Optimizing Compiler versione 19.00.23026 per x64</br></p>\n<pre><code>cl /EHsc main.cpp &amp;&amp; main.exe\n</code></pre>\n<p>and the output is</p>\n<pre><code>0123456\n</code></pre>\n<p>instead of:</p>\n<pre><code>012345678\n</code></pre>\n<p>I tried to report the bug on <a href=\"http://connect.microsoft.com/VisualStudio/feedback\" rel=\"nofollow\">http://connect.microsoft.com/VisualStudio/feedback</a> but i got:</p>\n<pre><code>You are not authorized to submit the feedback for this connection.\n</code></pre>\n<p>Does someone knows an email address to which I can write to report the bug?</p>\n", "Tags": "<c++><visual-studio-2015>", "OwnerUserId": "5673408", "AnswerCount": "1"}});