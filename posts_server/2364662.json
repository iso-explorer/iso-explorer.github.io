post_cb({"bq_ids": {"n4140": {"so_2364662_2364680_0": {"length": 14, "quality": 0.9333333333333333, "section_id": 745}}, "n3337": {"so_2364662_2364680_0": {"length": 14, "quality": 0.9333333333333333, "section_id": 734}}, "n4659": {"so_2364662_2364680_0": {"length": 14, "quality": 0.9333333333333333, "section_id": 803}}}, "2364662": {"ViewCount": "241", "Body": "<p>I need to keep track of std::set element by saving the iterator returned by set.find().</p>\n<p>My questions is does insertion and removing <em>other</em> elements invalidates the obtained iterator? From a simple test I did I can see it is not, but I'd like to ensure this feature is by design.</p>\n", "AcceptedAnswerId": "2364680", "Title": "For how long the iterator returned by std::set.find() lives?", "CreationDate": "2010-03-02T16:16:12.450", "Id": "2364662", "CommentCount": "0", "LastEditDate": "2010-03-02T16:19:50.913", "PostTypeId": "1", "LastEditorUserId": "20972", "LastActivityDate": "2010-03-02T16:20:24.110", "Score": "7", "OwnerUserId": "48461", "Tags": "<c++><stl><set><stdset>", "AnswerCount": "1"}, "2364680": {"Id": "2364680", "PostTypeId": "2", "Body": "<p>It never invalidates iterators or pointers/references to the elements. Only if you remove the element itself does the iterator or pointer/reference become invalid. </p>\n<p><code>23.1.2/8</code>:</p>\n<blockquote>\n<p id=\"so_2364662_2364680_0\">The insert members shall not affect the validity of iterators and references to the container, and the erase members shall invalidate only iterators and references to the erased elements.</p>\n</blockquote>\n", "LastEditorUserId": "34509", "LastActivityDate": "2010-03-02T16:20:24.110", "Score": "11", "CreationDate": "2010-03-02T16:18:13.067", "ParentId": "2364662", "CommentCount": "1", "OwnerUserId": "34509", "LastEditDate": "2010-03-02T16:20:24.110"}});