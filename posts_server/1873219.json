post_cb({"1873232": {"ParentId": "1873219", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>The C++ standard puts certain restrictions on the types of data which can be placed inside of a union.  In 9.5.1 the standard reads:</p>\n<blockquote>\n<p id=\"so_1873219_1873232_0\">An object of a\n  class with a non-trivial constructor,\n  a non-trivial copy-constructor, a\n  non-trivial destructor, or a\n  non-trivial copy assignment operator\n  cannot be a member of a union, nor can\n  an array of such objects.  If a union\n  contains a static data member, or a\n  member of a reference type, the\n  program is ill-formed.</p>\n</blockquote>\n<p>So your program doesn't work because you explicitly define a constructor, and therefore your object violates the non-trivial constructor restriction.</p>\n", "OwnerUserId": "168288", "LastEditorUserId": "168288", "LastEditDate": "2009-12-09T12:05:08.417", "Id": "1873232", "Score": "5", "CreationDate": "2009-12-09T11:19:34.717", "LastActivityDate": "2009-12-09T12:05:08.417"}, "1873233": {"ParentId": "1873219", "PostTypeId": "2", "CommentCount": "7", "Body": "<p>According to the C++ standard (\u00a79.5.1, cited as well in other answers):</p>\n<blockquote>\n<p id=\"so_1873219_1873233_0\">A union can have member functions (including constructors and destructors), but not virtual functions. A union shall not have base classes. A union shall not be used as a base class. An object of a class with a non-trivial constructor, a non-trivial copy-constructor, a non-trivial destructor, or a non-trivial copy assignment operator cannot be a member of a union, nor can an array of such objects. If a union contains a static data member, or a member of a reference type, the program is ill-formed.</p>\n</blockquote>\n<p>I first linked to the <a href=\"http://en.wikipedia.org/wiki/Plain_old_data_structures\" rel=\"noreferrer\">Wikipedia article about POD types</a> which states:</p>\n<blockquote>\n<p id=\"so_1873219_1873233_1\">A POD type in C++ is defined as either a scalar type or a POD class. POD class has no user-defined copy assignment operator, no user-defined destructor, and no non-static data members that are not themselves PODs. Moreover, POD class must be an aggregate, meaning it has no user-declared constructors, no private nor protected non-static data, no bases and no virtual functions. The standard includes statements about how PODs must behave in C++.</p>\n</blockquote>\n<p>and</p>\n<blockquote>\n<p id=\"so_1873219_1873233_2\">In certain contexts, C++ allows only POD types to be used. <strong>For example, a union in C++ cannot contain a class that has virtual functions, or nontrivial constructors or destructors</strong>. This restriction is imposed because the compiler cannot know which constructor or destructor should be called for a union.</p>\n</blockquote>\n<p>The first sentence of the second paragraph might make you think C++ only allows POD types to be part of a union. This isn't exactly the case as it allows a class with private members to be part of a union:</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass test1\n{\n  int i;\n};\n\nclass test2\n{\n  int i;\n};\n\nunion test\n{\n  test1 t1;\n  test2 t2;\n};\n\nint main()\n{\n  cout &lt;&lt; __is_pod(test1) &lt;&lt; endl;\n  cout &lt;&lt; __is_pod(test2) &lt;&lt; endl;\n  cout &lt;&lt; __is_pod(test) &lt;&lt; endl;\n\n  return 0;\n}\n</code></pre>\n<p>The program above compiled with MSVC++ prints out:</p>\n<pre><code>0\n0\n1\n</code></pre>\n", "OwnerUserId": "216063", "LastEditorUserId": "216063", "LastEditDate": "2009-12-09T11:52:09.763", "Id": "1873233", "Score": "14", "CreationDate": "2009-12-09T11:19:40.783", "LastActivityDate": "2009-12-09T11:52:09.763"}, "1873240": {"ParentId": "1873219", "CommentCount": "0", "Body": "<p>In C++, unions may not contain classes with (non-trivial) constructors or destructors. This is because the compiler has no means of telling which constructor or destructor to use when a union instance is created or destroyed.</p>\n", "Id": "1873240", "PostTypeId": "2", "OwnerDisplayName": "anon", "Score": "2", "CreationDate": "2009-12-09T11:20:19.773", "LastActivityDate": "2009-12-09T11:20:19.773"}, "1873219": {"CommentCount": "3", "AcceptedAnswerId": "1873233", "PostTypeId": "1", "LastEditorUserId": "1131435", "CreationDate": "2009-12-09T11:17:34.937", "LastActivityDate": "2013-04-10T04:53:24.793", "LastEditDate": "2013-04-10T04:53:24.793", "ViewCount": "9593", "FavoriteCount": "3", "Title": "Strange Behaviour Class Objects Inside Union", "Id": "1873219", "Score": "3", "Body": "<p>Hi I wanted know the reasons of the following code</p>\n<pre><code>void main()\n{\n  class test\n  {\n    public:\n      test(){}\n      int k;\n  };\n\n  class test1\n  {\n    public:\n      test1(){}\n      int k;\n  };\n\n  union Test\n  {\n    test t1;\n    test1 t2;   \n  };\n}\n</code></pre>\n<p>For the Above code it gives error \"<strong>error C2620: union 'Test' : member 't1' has user-defined constructor or non-trivial default constructor</strong>\" </p>\n<pre><code>class test\n{\n  public:\n  //test(){}\n  int k;\n};\n\nclass test1\n{\n  public:\n  //test()1{}; \n  int k;\n};\n\nunion Test\n{\n  test t1;\n  test1 t2; \n};\n</code></pre>\n<p>For the Above, No Errors.</p>\n<p>I wanted to know the Reasons.</p>\n<p>Thank you in Advance. :)</p>\n", "Tags": "<c++><unions>", "OwnerUserId": "38038", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_1873219_1873233_0": {"section_id": 5914, "quality": 0.5319148936170213, "length": 25}}, "n3337": {"so_1873219_1873233_0": {"section_id": 5686, "quality": 0.5319148936170213, "length": 25}}, "n4659": {"so_1873219_1873233_0": {"section_id": 7406, "quality": 0.5319148936170213, "length": 25}}}});