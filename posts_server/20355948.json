post_cb({"20356054": {"Id": "20356054", "PostTypeId": "2", "Body": "<p><a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdf\" rel=\"nofollow\">Per the c99 standard</a>, section <code>5.2.4.1</code> <em>Translation limits</em> says:</p>\n<blockquote>\n<p id=\"so_20355948_20356054_0\">The implementation shall be able to translate and execute at least one program that\n  contains at least one instance of every one of the following limits:<sup>13)</sup></p>\n</blockquote>\n<p>and includes the following line:</p>\n<blockquote>\n<p id=\"so_20355948_20356054_1\">\u2014 1023 case labels for a switch statement (excluding those for any nested switch\n  statements)</p>\n</blockquote>\n<p><a href=\"http://sites.cs.queensu.ca/gradresources/stuff/cpp98.pdf\" rel=\"nofollow\">Per c++98 standard</a>, <code>Annex B (informative) Implementation quantities</code> says:</p>\n<blockquote>\n<p id=\"so_20355948_20356054_2\">The limits may constrain quantities that include those described below\n  or others. The bracketed number following each quantity is recommended\n  as the minimum for that quantity. However, these quantities are only\n  guidelines and do not determine compliance.</p>\n<p id=\"so_20355948_20356054_3\">\u2014 Case labels for a switch statement (excluding those for any nested\n  switch statements) [16 384].</p>\n</blockquote>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2013-12-03T19:00:12.833", "Score": "2", "CreationDate": "2013-12-03T16:09:21.830", "ParentId": "20355948", "CommentCount": "1", "OwnerUserId": "963042", "LastEditDate": "2013-12-03T19:00:12.833"}, "20356073": {"Id": "20356073", "PostTypeId": "2", "Body": "<p>The <a href='http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\"' rel=\"noreferrer\">draft C++ standard</a> <code>Annex B (informative) Implementation quantities</code> says (<em>emphasis mine</em>):</p>\n<blockquote>\n<p id=\"so_20355948_20356073_0\">Because computers are finite, C++ implementations are inevitably limited in the size of the programs they can successfully process. <strong>Every implementation shall document those limitations where known</strong>. [...]</p>\n<p id=\"so_20355948_20356073_1\">The limits may constrain quantities that include those described below or others. The bracketed number following each quantity is recommended as the minimum for that quantity. However, <strong>these quantities are only guidelines and do not determine compliance</strong>.</p>\n</blockquote>\n<p>and includes the follow item:</p>\n<blockquote>\n<p id=\"so_20355948_20356073_2\">\u2014 Case labels for a switch statement (excluding those for any nested switch statements) [16384].</p>\n</blockquote>\n<p>but these are not hard limits only a recommendation on minimums.</p>\n<p>The implementation is the compiler, standard library and supporting tools and so <em>implementation dependent</em> basically means for this case the compiler will decide what the limit is but it should document this limit. The draft standard defines <em>implementation-defined behavior</em> in section <code>1.3.10</code> as:</p>\n<blockquote>\n<p id=\"so_20355948_20356073_3\">behavior, for a well-formed program construct and correct data, that depends on the implementation and that each implementation documents</p>\n</blockquote>\n<p>We can see that <code>gcc</code> <a href=\"http://gcc.gnu.org/onlinedocs/gcc/Statements-implementation.html#Statements-implementation\" rel=\"noreferrer\">does not impose a limit</a> for <em>C</em>:</p>\n<blockquote>\n<p id=\"so_20355948_20356073_4\">GCC is only limited by available memory. </p>\n</blockquote>\n<p>which should also cover <em>C++</em> in this case and it looks like <a href=\"http://msdn.microsoft.com/en-us/library/k0t5wee3%28v=vs.120%29.aspx\" rel=\"noreferrer\">Visual Studio</a> also does not place a limit:</p>\n<blockquote>\n<p id=\"so_20355948_20356073_5\">Microsoft C does not limit the number of case values in a switch statement. The number is limited only by the available memory. ANSI C requires at least 257 case labels be allowed in a switch statement.</p>\n</blockquote>\n<p>I can not find similar documentation for <code>clang</code>.</p>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2013-12-08T03:19:09.557", "Score": "16", "CreationDate": "2013-12-03T16:10:10.443", "ParentId": "20355948", "CommentCount": "0", "OwnerUserId": "1708801", "LastEditDate": "2013-12-08T03:19:09.557"}, "20355948": {"ViewCount": "4330", "Body": "<p>This is out of curiosity. What is the maximum number of switch cases I can have in a single <em>switch</em> including the <em>default</em>: case. I mean like this:</p>\n<pre><code>switch(ch)\n{\ncase 1:\n//some statement\nbreak;\ncase 2: \n//some statement\nbreak;\n.\n.\n.\n.\ncase n:\n//some statement\nbreak;\ndefault:\n//default statement\n}\n</code></pre>\n<p>My question is what is the maximum value that we can have here? Although this is not programatically significant, I found this a rather intriguing thought. I searched some blogs and found a statement <a href=\"http://www.cplusplus.com/forum/general/27965/\" rel=\"noreferrer\">here</a>.</p>\n<p>From a doc I have, it is said that:</p>\n<blockquote>\n<p id=\"so_20355948_20355948_0\">Standard C specifies that a switch can have at least 257 case\n  statements. Standard C++ recommends that at least 16,384 case\n  statements be supported! The real value must be implementation\n  dependent.</p>\n</blockquote>\n<p>But I don't know how accurate this information is, can somebody give me an idea? Also what does it mean by <em>implementation dependent</em>? Suppose there is a limit like this, can I somehow change it to a higher or lower value?</p>\n", "AcceptedAnswerId": "20356073", "Title": "Maximum number of cases that can be addressed using switch statement", "CreationDate": "2013-12-03T16:05:04.493", "Id": "20355948", "CommentCount": "3", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2013-12-04T01:17:01.407", "LastEditorUserId": "1708801", "LastActivityDate": "2014-04-24T18:05:02.843", "Score": "11", "OwnerUserId": "3056230", "Tags": "<c++><switch-statement><standards>", "AnswerCount": "5"}, "20356120": {"Id": "20356120", "PostTypeId": "2", "Body": "<p>Your question is tagged C++, so per C++98 Annex B/1:</p>\n<blockquote>\n<p id=\"so_20355948_20356120_0\">Because computers are finite, C++ implementations are inevitably\n  limited in the size of the programs they can successfully process.\n  Every implementation shall document those limitations where known.\n  This documentation may cite fixed limits where they exist, say how to\n  compute variable limits as a function of available resources, or say\n  that fixed limits do not exist or are unknown.</p>\n</blockquote>\n<p>And then Annex B/2:</p>\n<blockquote>\n<p id=\"so_20355948_20356120_1\">The limits may constrain quantities that include those described below\n  or others. The bracketed number following each quantity is recommended\n  as the minimum for that quantity. However, these quantities are only\n  guidelines and do not determine compliance.</p>\n</blockquote>\n<p>So as long as the implementation documents what it's doing, ANY max number of case statements is allowed. The standard recommends 16384 in a following list however.</p>\n", "LastActivityDate": "2013-12-03T16:11:51.330", "CommentCount": "0", "CreationDate": "2013-12-03T16:11:51.330", "ParentId": "20355948", "Score": "4", "OwnerUserId": "251738"}, "bq_ids": {"n4140": {"so_20355948_20356054_1": {"length": 8, "quality": 0.8, "section_id": 47}, "so_20355948_20356054_2": {"length": 22, "quality": 0.9166666666666666, "section_id": 47}, "so_20355948_20356073_1": {"length": 22, "quality": 0.9166666666666666, "section_id": 47}, "so_20355948_20356120_1": {"length": 22, "quality": 0.9166666666666666, "section_id": 47}, "so_20355948_20356054_3": {"length": 9, "quality": 0.9, "section_id": 47}, "so_20355948_20356120_0": {"length": 40, "quality": 0.975609756097561, "section_id": 46}, "so_20355948_20356073_0": {"length": 19, "quality": 1.0, "section_id": 46}, "so_20355948_20356073_3": {"length": 10, "quality": 1.0, "section_id": 5768}, "so_20355948_20356073_2": {"length": 9, "quality": 0.9, "section_id": 47}}, "n3337": {"so_20355948_20356073_3": {"length": 10, "quality": 1.0, "section_id": 5541}}, "n4659": {"so_20355948_20356054_1": {"length": 8, "quality": 0.8, "section_id": 48}, "so_20355948_20356054_2": {"length": 22, "quality": 0.9166666666666666, "section_id": 48}, "so_20355948_20356073_1": {"length": 22, "quality": 0.9166666666666666, "section_id": 48}, "so_20355948_20356120_1": {"length": 22, "quality": 0.9166666666666666, "section_id": 48}, "so_20355948_20356054_3": {"length": 9, "quality": 0.9, "section_id": 48}, "so_20355948_20356120_0": {"length": 40, "quality": 0.975609756097561, "section_id": 47}, "so_20355948_20356073_0": {"length": 19, "quality": 1.0, "section_id": 47}, "so_20355948_20356073_3": {"length": 10, "quality": 1.0, "section_id": 7225}, "so_20355948_20356073_2": {"length": 9, "quality": 0.9, "section_id": 48}}}, "20356238": {"Id": "20356238", "PostTypeId": "2", "Body": "<p>In theory the max number of cases a switch statement can have depends on the data type of the variable you use:</p>\n<pre><code>data_type x\n\nswitch(x)\n{\n...\n}\n</code></pre>\n<p>for <strong>char</strong>, you have <strong>256</strong>, for <strong>short</strong> you have 65536 ...and so on; the maximum number of values you can represent given that data_type.</p>\n<p>However, the compiler has to generate code for this switch(statement), and to code it usually generates is something like</p>\n<pre><code>cmp(R1,$value)\nIFT jmp _subroutine\ncmp(R1,$value2)\nIFT jmp _subroutine2\n...\n</code></pre>\n<p>The more cases you add, the higher the pressure on the registers and the larger the code size gets. Since memory and registers are not infinite, and the compiler is human-written there has to be a limit - and that is what is meant by <code>implementation dependent</code>. Each compiler can permit a different number of cases for a switch statement.</p>\n", "LastActivityDate": "2013-12-03T16:17:21.340", "CommentCount": "0", "CreationDate": "2013-12-03T16:17:21.340", "ParentId": "20355948", "Score": "0", "OwnerUserId": "2978901"}, "20356118": {"Id": "20356118", "PostTypeId": "2", "Body": "<p>Implementation dependant means, the behaviour is not defined by standard, it is the decision of the compiler. The C++ standard does not set a minimum value for how many labels a switch statement shall support.</p>\n", "LastActivityDate": "2013-12-03T16:11:48.423", "CommentCount": "0", "CreationDate": "2013-12-03T16:11:48.423", "ParentId": "20355948", "Score": "0", "OwnerUserId": "3005299"}});