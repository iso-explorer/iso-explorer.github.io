post_cb({"bq_ids": {"n4140": {"so_44699176_44699334_0": {"length": 10, "quality": 1.0, "section_id": 6005}}, "n3337": {"so_44699176_44699334_0": {"length": 10, "quality": 1.0, "section_id": 5773}}, "n4659": {"so_44699176_44699334_0": {"length": 10, "quality": 1.0, "section_id": 7504}}}, "44699334": {"Id": "44699334", "PostTypeId": "2", "Body": "<p>Conversion isn't considered for member access (\u00a75.2.5/2 [expr.ref]).</p>\n<blockquote>\n<p id=\"so_44699176_44699334_0\">In either case,\n  the <em>id-expression</em> shall name a member of the class or of one of its base classes</p>\n</blockquote>\n<p>Here the <em>id-expression</em> is <code>func()</code></p>\n<p>So the compiler considers that <code>func</code> must be a member of <code>B</code> or a class that <code>B</code> derives from. Implicit conversion to other types that might have a <code>func</code> member is not considered.</p>\n", "LastActivityDate": "2017-06-22T12:23:38.713", "CommentCount": "0", "CreationDate": "2017-06-22T12:23:38.713", "ParentId": "44699176", "Score": "5", "OwnerUserId": "27678"}, "44699176": {"ViewCount": "70", "Body": "<p>Consider the following class definitions of <code>A</code> and <code>B</code>:</p>\n<pre><code>class A {\npublic:\n   void func() const {}\n};\n\nclass B {\npublic:\n   // user-defined conversion operator to A\n   operator A() const { return a_; }\nprivate:\n   A a_;\n};\n</code></pre>\n<p>The class <code>A</code> defines a public member function called <code>func()</code>. The class <code>B</code> does not, but it does define a <em>user-defined conversion operator</em> to the type <code>A</code>. This way, an instance of <code>B</code> can be <em>converted into</em> an instance of <code>A</code>. The following code works as expected:</p>\n<pre><code>B b;\nstatic_cast&lt;A&gt;(b).func(); // call func() on temporary instance of A\n</code></pre>\n<p>In the code above, the conversion operator is implicitly called by means of the <code>static_cast</code> <em>named cast</em>.</p>\n<p>Note that the conversion operator in <code>B</code> is not specified as <code>explicit</code> in order to allow implicit conversions as well.\nHowever, the following code does not compile:</p>\n<pre><code>B b;\nb.func(); // &lt;-- error: 'class B' has no member named 'func'\n</code></pre>\n<p>Just as the error message says, class <code>B</code> has no member named <code>func</code>, but class <code>A</code> does, and class <code>B</code> does have a user-defined conversion operator to <code>A</code>. The user-defined conversion operator is <strong>not</strong> implicitly called in this case.</p>\n<p>Why is the conversion not being <strong>implicitly</strong> done?</p>\n", "AcceptedAnswerId": "44699334", "Title": "Why user-defined conversion is not implicitly taking place on the calling object", "CreationDate": "2017-06-22T12:15:13.183", "Id": "44699176", "CommentCount": "8", "LastEditDate": "2017-06-22T12:26:46.363", "PostTypeId": "1", "LastEditorUserId": "27678", "LastActivityDate": "2017-06-22T12:26:46.363", "Score": "2", "OwnerUserId": "8012646", "Tags": "<c++><type-conversion><implicit-conversion>", "AnswerCount": "1"}});