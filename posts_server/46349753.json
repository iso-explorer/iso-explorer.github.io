post_cb({"46350069": {"ParentId": "46349753", "PostTypeId": "2", "CommentCount": "4", "Body": "<p><a href=\"https://timsong-cpp.github.io/cppwp/expr.ass#6\" rel=\"noreferrer\">[expr.ass]/6</a>:</p>\n<blockquote>\n<p id=\"so_46349753_46350069_0\">When the left operand of an assignment operator is a bit-field that\n  cannot represent the value of the expression, the resulting value of\n  the bit-field is implementation-defined.</p>\n</blockquote>\n<p>Similarly, for <a href=\"https://timsong-cpp.github.io/cppwp/dcl.init#17.8.sentence-4\" rel=\"noreferrer\">initialization</a>:</p>\n<blockquote>\n<p id=\"so_46349753_46350069_1\">When initializing a bit-field with a value that it cannot represent,\n  the resulting value of the bit-field is implementation-defined.</p>\n</blockquote>\n<p>This is added by <a href=\"http://wg21.link/CWG1816\" rel=\"noreferrer\">DR 1816</a>. As a defect report that fixes a bug in the standard, it is de facto retroactive.</p>\n", "OwnerUserId": "2756719", "LastEditorUserId": "2756719", "LastEditDate": "2017-09-21T17:47:24.987", "Id": "46350069", "Score": "7", "CreationDate": "2017-09-21T17:39:12.153", "LastActivityDate": "2017-09-21T17:47:24.987"}, "bq_ids": {"n4659": {"so_46349753_46350069_1": {"section_id": 4058, "quality": 0.9, "length": 9}, "so_46349753_46350069_0": {"section_id": 7680, "quality": 0.9285714285714286, "length": 13}}}, "46349753": {"CommentCount": "11", "AcceptedAnswerId": "46350069", "LastEditDate": "2017-09-21T17:21:58.560", "LastEditorUserId": "2100815", "CreationDate": "2017-09-21T17:21:05.320", "LastActivityDate": "2017-09-21T17:51:38.583", "PostTypeId": "1", "ViewCount": "88", "Title": "Does setting a 1-bit wide bitfield to 2 mean the bitfield is set or unset?", "Id": "46349753", "OwnerUserId": "69742", "Body": "<p>So I have a bitfield like so:</p>\n<pre><code>unsigned int foobar:1;\n</code></pre>\n<p>And then I set it using this code</p>\n<pre><code>uint32_t code = loadCode();\nstructure.foobar = code &amp; 2;\n</code></pre>\n<p>So, if <code>code</code> is set to 2, would this mean that foobar is set to 1, 0, or undefined? The exact standard I'm using is actually C++11, not plain C. </p>\n", "Tags": "<c++><c++11><bit-manipulation><bit-fields>", "Score": "-1", "AnswerCount": "1"}});