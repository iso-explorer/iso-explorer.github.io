post_cb({"39702920": {"ParentId": "39702532", "CommentCount": "1", "Body": "<p>It's a g++ bug, the code is invalid. Only constructors from direct bases can be inherited:</p>\n<blockquote>\n<p id=\"so_39702532_39702920_0\"><strong>[namespace.udecl]</strong> \u00a73 If such a <em>using-declaration</em> names a constructor, the <em>nested-name-specifier</em> shall name a direct base class of the class being defined </p>\n</blockquote>\n", "OwnerUserId": "775806", "PostTypeId": "2", "Id": "39702920", "Score": "2", "CreationDate": "2016-09-26T12:32:18.040", "LastActivityDate": "2016-09-26T12:32:18.040"}, "39702532": {"CommentCount": "2", "ViewCount": "69", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2016-09-26T12:14:35.043", "LastActivityDate": "2016-09-26T12:32:18.040", "Title": "Inheriting second-level base class constructor: silent error", "AcceptedAnswerId": "39702920", "LastEditDate": "2017-05-23T12:06:43.567", "Id": "39702532", "Score": "8", "Body": "<p>I ran into a very nasty error today, here is a MWE:</p>\n<pre><code>#include &lt;iostream&gt;\n\nclass X {\n\npublic: \n  X() { std::cout &lt;&lt; \"Default\" &lt;&lt; std::endl; }\n  X(int a) { std::cout &lt;&lt; a &lt;&lt; std::endl; }\n};\n\nclass Y : public X { };\n\nclass Z : public Y {\n  using X::X;\n};\n\nint main() {\n  Z instance{3};\n}\n</code></pre>\n<p>Contrary to my expectations, \"<code>Default</code>\" gets printed. <em>Admittedly, the code is faulty because the inherited constructors of <code>Z</code> try to initialize <code>X</code> without specifying how to construct <code>Y</code><a href=\"https://stackoverflow.com/questions/12197106/calling-a-second-level-base-class-constructor\">(\u2217)</a>.</em> But still, shouldn't the compiler complain? What's the rationale behind the default constructor of <code>Y</code> (and subsequently <code>X</code>) getting called, completely silently ignoring my parameter of <code>3</code>? Is this documented somewhere in the standard? Or is it a bug in my compiler?</p>\n<p>My environment is <code>gcc version 6.2.1 20160916 (Red Hat 6.2.1-2)</code>. No compiler warning is produced even with <code>-Weffc++ -Wall -Wextra -pedantic</code>.</p>\n", "Tags": "<c++><inheritance><gcc><constructor>", "OwnerUserId": "1537925", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_39702532_39702920_0": {"section_id": 5492, "quality": 0.9230769230769231, "length": 12}}, "n3337": {"so_39702532_39702920_0": {"section_id": 5278, "quality": 0.9230769230769231, "length": 12}}, "n4659": {"so_39702532_39702920_0": {"section_id": 6926, "quality": 0.8461538461538461, "length": 11}}}});