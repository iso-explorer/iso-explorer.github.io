post_cb({"31115462": {"ParentId": "31115415", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2015-06-29T12:15:32.250", "Score": "5", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:03:53.727", "Id": "31115462", "OwnerUserId": "2296458", "Body": "<p>It works because of the <code>,</code> operator which creates a <a href=\"https://stackoverflow.com/a/4176333/2296458\">sequence point</a>.</p>\n<p><strong>\u00a75.19.1 (Comma operator)</strong></p>\n<blockquote>\n<p id=\"so_31115415_31115462_0\">The comma operator groups left-to-right. <strong>A pair of expressions separated by a comma is evaluated left-to-right</strong>; the left expression is a discarded value expression (Clause 5). <strong>Every value computation and side effect associated with the left expression is sequenced before every value computation and side effect associated with the right expression</strong>. The type and value of the result are the type and value of the right operand; the result is of the same value category as its right operand, and is a bit-field if its right operand is a glvalue and a bit-field. If the value of the right operand is a temporary (12.2), the result is that temporary.</p>\n</blockquote>\n<p>Therefore:</p>\n<ol>\n<li><code>a</code> is initialized to <code>-5</code>. </li>\n<li>Then <code>a++</code> executes, and modifies <code>a</code> to <code>-4.</code></li>\n<li>Then <code>++a</code> executes, modifies <code>a</code> to <code>-3</code>, and returns <code>-3</code> to <code>k</code>.</li>\n</ol>\n", "LastActivityDate": "2015-06-29T12:15:32.250"}, "31115508": {"ParentId": "31115415", "CommentCount": "0", "CreationDate": "2015-06-29T12:17:45.783", "OwnerUserId": "2380830", "PostTypeId": "2", "Id": "31115508", "Score": "1", "Body": "<p><strong>This is perfectly well-defined in both C and C++.</strong></p>\n<p>The expressions separated by the comma are evaluated from left to right.</p>\n<p>The value of the entire expression will be the value of the second expression.</p>\n<p>So, to break down <code>(a++, ++a)</code>, <code>a++</code> is first evaluated (then <code>a</code> is -4) and the result (-5) <strong>discarded</strong>, then <code>++a</code> is evaluated. That value (-3) is assigned to <code>k</code>.</p>\n", "LastActivityDate": "2015-06-29T12:17:45.783"}, "31115469": {"ParentId": "31115415", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2015-06-29T12:15:46.707", "Score": "1", "LastEditorUserId": "2173917", "LastEditDate": "2015-06-29T12:29:31.383", "Id": "31115469", "OwnerUserId": "2173917", "Body": "<p><strong>This is not undefined behaviour</strong>.</p>\n<p>In your code,</p>\n<pre><code> int k = (a++, ++a);\n</code></pre>\n<p>is making use of <a href=\"https://en.wikipedia.org/wiki/Comma_operator\" rel=\"nofollow\">\"comma operator\"</a>. After <code>a</code> gets initialized to <code>-5</code>, what is does is basically,</p>\n<ul>\n<li>execute <code>a++</code>, discard the <em>result</em>. side effect of post-<code>++</code>, <code>a</code> is now <code>-4</code></li>\n<li>encounters <code>,</code> , sequence point.</li>\n<li>execute <code>++a</code>, return the <em>result</em>. <code>a</code> is now <code>-3</code> (pre-<code>++</code>), which gets assigned to <code>k</code>.</li>\n</ul>\n<p>Ref: From <code>C11</code> standard, chapter <code>6.5.17</code></p>\n<blockquote>\n<p id=\"so_31115415_31115469_0\">The left operand of a comma operator is evaluated as a void expression; <strong>there is a sequence point between its evaluation and that of the right operand.</strong> Then the right operand is evaluated; the result has its type and value.</p>\n</blockquote>\n", "LastActivityDate": "2015-06-29T12:29:31.383"}, "31115608": {"ParentId": "31115415", "CommentCount": "0", "CreationDate": "2015-06-29T12:22:18.753", "OwnerUserId": "2877241", "PostTypeId": "2", "Id": "31115608", "Score": "1", "Body": "<p>Here is used an expression with the comma operator as an initializer</p>\n<pre><code>int k = (a++, ++a);\n</code></pre>\n<p>According to the C Standard (and the same is valid for C++ ) (6.5.17 Comma operator):</p>\n<blockquote>\n<p id=\"so_31115415_31115608_0\">2 The left operand of a comma operator is evaluated as a void\n  expression; there is a sequence point between its evaluation and that\n  of the right operand. <strong>Then the right operand is evaluated; the result\n  has its type and value</strong></p>\n</blockquote>\n<p>Initially variable a was initialized with -5</p>\n<pre><code>int a = -5;\n</code></pre>\n<p>So after evaluation the first expression of the comma operator and due to the fact thet \"<strong><em>there is a sequence point between its evaluation and that of the right operand</em></strong>\" a will be equal to -4 (a++). The result of the whole expression with the comma operator will be the value after evaluation the right expression <code>++a</code>. Its value is <code>-3</code></p>\n<p>Thus varaible k will be initialized with -3. The same value will have variable a.</p>\n", "LastActivityDate": "2015-06-29T12:22:18.753"}, "bq_ids": {"n4140": {"so_31115415_31115462_0": {"section_id": 6182, "quality": 0.9206349206349206, "length": 58}}, "n3337": {"so_31115415_31115462_0": {"section_id": 5943, "quality": 0.8253968253968254, "length": 52}}, "n4659": {"so_31115415_31115462_0": {"section_id": 7684, "quality": 0.8888888888888888, "length": 56}}}, "31115415": {"CommentCount": "5", "AcceptedAnswerId": "31115462", "PostTypeId": "1", "ClosedDate": "2015-06-29T12:28:10.133", "LastEditorUserId": "3204551", "CreationDate": "2015-06-29T12:13:19.603", "LastActivityDate": "2015-07-03T16:46:23.843", "LastEditDate": "2015-07-03T16:46:23.843", "ViewCount": "1128", "FavoriteCount": "0", "Title": "How this statement works `int k = (a++, ++a);` in c or c++", "Id": "31115415", "Score": "0", "Body": "<p>I am unable to understand how the output of the below code is \"-3\" ?</p>\n<pre><code>#include &lt;stdio.h&gt;\nvoid main()\n{\n    int a = -5;\n    int k = (a++, ++a);\n    printf(\"%d\\n\", k);\n}\n</code></pre>\n<p>What is the concept behind this  <code>int k = (a++, ++a);</code> statement in c or c++?</p>\n", "Tags": "<c++><c><initialization><comma><comma-operator>", "OwnerUserId": "4396236", "AnswerCount": "4"}});