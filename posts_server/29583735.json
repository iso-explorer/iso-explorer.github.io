post_cb({"bq_ids": {"n4140": {"so_29583735_29583735_0": {"length": 25, "quality": 1.0, "section_id": 7132}}, "n3337": {"so_29583735_29583735_0": {"length": 25, "quality": 1.0, "section_id": 6876}}, "n4659": {"so_29583735_29583735_0": {"length": 25, "quality": 1.0, "section_id": 8633}}}, "29583735": {"ViewCount": "97", "Body": "<p>In [basic.lookup.classref]/7 (C++14) we have (emphasis is mine):</p>\n<blockquote>\n<p id=\"so_29583735_29583735_0\">If the <em>id-expression</em> is a <em>conversion-function-id</em>, its\n  <em>conversion-type-id</em> is first looked up in the class of the object expression and the name, if found, is used. <strong>Otherwise</strong> it is looked up\n  in the context of the entire <em>postfix-expression</em>. In each of these\n  lookups, only names that denote types or templates whose\n  specializations are types are considered.</p>\n</blockquote>\n<p>I don't understand the need for the <strong>Otherwise</strong> above. Therefore, I'd like to see an example, where the <em>conversion-type-id</em> is looked up in the context of the entire postfix-expression.</p>\n", "AcceptedAnswerId": "29589728", "Title": "I'd like to see one example where the conversion-type-id is looked up in the context of the entire postfix-expression", "CreationDate": "2015-04-11T22:20:47.860", "Id": "29583735", "CommentCount": "7", "PostTypeId": "1", "LastActivityDate": "2015-04-12T12:59:10.733", "Score": "3", "OwnerUserId": "4470935", "Tags": "<c++><language-lawyer><lookup><c++14>", "AnswerCount": "1"}, "29589728": {"Id": "29589728", "PostTypeId": "2", "Body": "<p>Something <a href=\"http://rextester.com/VEZ97458\">like this</a>:</p>\n<pre><code>struct C {\n    operator int() { return 42; }\n};\n\ntypedef int X;\n\nint main() {\n  C c;\n  c.operator X();  // calls c.operator int();\n}\n</code></pre>\n<p>Clearly, the name <code>X</code> is not found in class <code>C</code>, but is found in the context of the expression where it's used.</p>\n", "LastActivityDate": "2015-04-12T12:59:10.733", "CommentCount": "0", "CreationDate": "2015-04-12T12:59:10.733", "ParentId": "29583735", "Score": "5", "OwnerUserId": "1670129"}});