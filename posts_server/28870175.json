post_cb({"28873506": {"ParentId": "28870175", "CommentCount": "2", "Body": "<p>There is nothing special about those member templates, compared to the \"outer\" template. The compiler reads them as a declaration, such that it knows that there exist names as <code>A&lt;T&gt;::Y&lt;W&gt;</code> and <code>A&lt;T&gt;::U&lt;V&gt;</code>, much the same as when you declare the template for class A:</p>\n<pre><code>template &lt;typename T&gt;\nclass A {\n     int a;\n};\n</code></pre>\n<p>Which also only declares the existence of a class <code>A&lt;T&gt;</code> but does not instantiate it.</p>\n<p>Instantiation is deferred until a templated type is actually used (or explicitly instantiated), which equally applies to the member templates.</p>\n", "OwnerUserId": "26083", "PostTypeId": "2", "Id": "28873506", "Score": "0", "CreationDate": "2015-03-05T08:48:02.170", "LastActivityDate": "2015-03-05T08:48:02.170"}, "28870175": {"CommentCount": "5", "AcceptedAnswerId": "28873506", "OwnerDisplayName": "user2953119", "CreationDate": "2015-03-05T04:43:21.190", "LastActivityDate": "2015-03-05T08:48:02.170", "PostTypeId": "1", "ViewCount": "68", "FavoriteCount": "1", "Title": "Member class instatiation", "Id": "28870175", "Score": "1", "Body": "<p><code>N4296::14.7.1/1 [temp.inst]</code> told us the following:</p>\n<blockquote>\n<p id=\"so_28870175_28870175_0\">The implicit instantiation of a class template specialization causes\n  the implicit instantiation of the <strong>declarations</strong>, but not of the\n  <strong>definitions</strong>, [...], <strong>member classes</strong>, [...]</p>\n</blockquote>\n<p>What is that rule about? Let me give you an example:</p>\n<pre><code>template&lt;class T&gt;\nclass A\n{\npublic:\n    template&lt;class W&gt; class Y; //1, declaration\n    template&lt;class V&gt; class U{ V v; };  //2, definition\n};\n\nA&lt;int&gt; a; //3, implicit instantiation\nint main(){ }\n</code></pre>\n<p>Does implicit instatiation at <code>//3</code> cause implicit intatiation at <code>//2</code> and at <code>//1</code>? If so, what template argument was used to instatiate those member classes?</p>\n", "Tags": "<c++><templates>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_28870175_28870175_0": {"section_id": 233, "quality": 0.9285714285714286, "length": 13}}, "n3337": {"so_28870175_28870175_0": {"section_id": 226, "quality": 0.9285714285714286, "length": 13}}, "n4659": {"so_28870175_28870175_0": {"section_id": 243, "quality": 0.9285714285714286, "length": 13}}}});