post_cb({"bq_ids": {"n4140": {"so_10366022_10366093_0": {"length": 11, "quality": 0.6875, "section_id": 7146}, "so_10366022_10366093_1": {"length": 39, "quality": 0.8478260869565217, "section_id": 7146}}, "n3337": {"so_10366022_10366093_0": {"length": 15, "quality": 0.9375, "section_id": 6890}, "so_10366022_10366093_1": {"length": 39, "quality": 0.8478260869565217, "section_id": 6890}}, "n4659": {"so_10366022_10366093_0": {"length": 11, "quality": 0.6875, "section_id": 8647}, "so_10366022_10366093_1": {"length": 39, "quality": 0.8478260869565217, "section_id": 8647}}}, "10366100": {"Id": "10366100", "PostTypeId": "2", "Body": "<p>I believe the various standards say that argv is NOT const.  Now, if your application isn't modifying argv, there's no reason you can't declare it const.</p>\n", "LastActivityDate": "2012-04-28T17:57:53.783", "CommentCount": "1", "CreationDate": "2012-04-28T17:57:53.783", "ParentId": "10366022", "Score": "0", "OwnerUserId": "57135"}, "10366093": {"Id": "10366093", "PostTypeId": "2", "Body": "<p><strong>Is there any standard or convention to how this is declared? Should I have a double pointer, or a constant?</strong> </p>\n<p>This is clearly defined in the C++ Standard.</p>\n<p>Reference:<br>\n<strong>C++03 Section \u00a7 3.6.1:</strong> </br></p>\n<p><strong>Para 2:</strong></p>\n<blockquote>\n<p id=\"so_10366022_10366093_0\">It shall have a return type of int, but otherwise its type is implementation-defined. All implementations shall allow both of the following definitions of main:</p>\n</blockquote>\n<pre><code>int main() { /* \u2026 */ }\n\nand \n\nint main(int argc, char* argv[]) { /* \u2026 */ }\n</code></pre>\n<blockquote>\n<p id=\"so_10366022_10366093_1\">In the latter form argc shall be the number of arguments passed to the program from the environment in which the program is run. If argc is nonzero these arguments shall be supplied inargv[0] through argv[argc-1] as pointers to the initial characters of null-terminated multibyte strings (NTMBSs) (17.3.2.1.3.2) and argv[0] shall be the pointer to the initial character of a NTMBS that represents the name used to invoke the program or \"\". The value of argc shall be nonnegative. The value of argv[argc] shall be 0. [Note: it is recommended that any further (optional) parameters be added after argv]</p>\n</blockquote>\n", "LastActivityDate": "2012-04-28T17:57:08.513", "CommentCount": "3", "CreationDate": "2012-04-28T17:57:08.513", "ParentId": "10366022", "Score": "2", "OwnerUserId": "452307"}, "10366022": {"ViewCount": "152", "Body": "<p>Out of the constraints of a coding IDE, I've always written my main function like this:</p>\n<pre><code>int main(int argc, char* argv[])\n</code></pre>\n<p>But in IDEs where they start you off with a hello world type application structure to start you off, I've seen it written in different ways.  For example in Xcode, it has argv as a constant:</p>\n<pre><code>int main(int argc, const char * argv[])\n</code></pre>\n<p>I've also seen people declare argv[] as a double pointer, which I can't understand the reason to:</p>\n<pre><code>int main(int argc, char** argv)\n</code></pre>\n<p>Is there any standard or convention to how this is declared?  Should I have a double pointer, or a constant?</p>\n<p>Bonus question: should the asterisk denoting a pointer be placed just after the data type, just before the variable name or separated in the middle?</p>\n", "AcceptedAnswerId": "10366093", "Title": "Convention for main arguments", "CreationDate": "2012-04-28T17:48:52.600", "Id": "10366022", "CommentCount": "5", "LastEditDate": "2012-04-28T17:58:00.367", "PostTypeId": "1", "LastEditorUserId": "361590", "LastActivityDate": "2012-04-28T17:58:00.367", "Score": "2", "OwnerUserId": "361590", "Tags": "<c++><conventions>", "AnswerCount": "2"}});