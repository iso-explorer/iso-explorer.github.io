post_cb({"7025054": {"CommentCount": "7", "AcceptedAnswerId": "7025401", "CreationDate": "2011-08-11T11:28:08.323", "LastActivityDate": "2011-08-11T11:55:56.423", "PostTypeId": "1", "ViewCount": "2188", "FavoriteCount": "3", "Title": "Ambiguous injected class name is not an error", "Id": "7025054", "Score": "19", "Body": "<p>What I read in the C++ standard about injected class names contradicts (as I see it) with the behavior of a sample program I will present shortly. Here's what I read:</p>\n<ul>\n<li><p>From 3.4 (paragraph 3)</p>\n<blockquote>\n<p id=\"so_7025054_7025054_0\">The injected-class-name of a class (clause 9) is also considered to be\n  a member of that class for the purposes of name hiding and lookup.</p>\n</blockquote></li>\n<li><p>From 9 (paragraph 2)</p>\n<blockquote>\n<p id=\"so_7025054_7025054_1\">A class-name is inserted into the scope in which it is declared\n  immediately after the class-name is seen. The class-name is also\n  inserted into the scope of the class itself; this is known as the\n  injected-class-name. For purposes of access checking, the\n  injected-class-name is treated as if it were a public member name.</p>\n</blockquote></li>\n</ul>\n<p>From these I understand that the following is a well-formed translation unit and it compiles successfully.</p>\n<pre><code>#include &lt;vector&gt;\nclass X: std::vector&lt;int&gt;\n{\n   vector mem;\n};\n</code></pre>\n<p>However, I would suppose that the following should have produced an error, but it doesn't</p>\n<pre><code>#include &lt;vector&gt;\nclass X: std::vector&lt;int&gt;, std::vector&lt;char&gt;\n{\n   vector mem; //compiles OK... mem is apparently std::vector&lt;int&gt;\n};\n</code></pre>\n<p>Since the name <code>vector</code> is injected into both <code>std::vector&lt;int&gt;</code> and <code>std::vector&lt;char&gt;</code> as as if a public member name, then it should be inherited by X and therefore the name <code>vector</code> in <code>X</code> should be ambiguous. Am I missing something?</p>\n<p>P.S. I am using MSVC9.0</p>\n", "Tags": "<c++><multiple-inheritance><language-lawyer><name-lookup>", "OwnerUserId": "469935", "AnswerCount": "2"}, "7025401": {"ParentId": "7025054", "CommentCount": "0", "Body": "<p>I found it! It's right there in the standard! I was right! It <em>should</em> be ambiguous!</p>\n<p>Clause 14.6.1 Paragraph </p>\n<blockquote>\n<p id=\"so_7025054_7025401_0\">A lookup that finds an injected-class-name (10.2) can result in an\n  ambiguity in certain cases (for example, if it is found in more than\n  one base class). If all of the injected-class-names that are found\n  refer to specializations of the same class template, and if the name\n  is followed by a template-argument-list, the reference refers to the\n  class template itself and not a specialization thereof, and is not\n  ambiguous. [Example: </p>\n</blockquote>\n<pre><code>template &lt;class T&gt; struct Base { };\ntemplate &lt;class T&gt; struct Derived: Base&lt;int&gt;, Base&lt;char&gt; \n{ \n    typename Derived::Base b; // error: ambiguous typename \n    Derived::Base&lt;double&gt; d;  // OK \n};\n</code></pre>\n<blockquote>\n<p id=\"so_7025054_7025401_1\">\u2014end example]</p>\n</blockquote>\n<p><em><strong>Bottom line:</strong></em></p> This is yet another <strong>Microsoft compiler BUG</strong>. Disabling language extensions doesn't help either.\n", "OwnerUserId": "469935", "PostTypeId": "2", "Id": "7025401", "Score": "15", "CreationDate": "2011-08-11T11:55:56.423", "LastActivityDate": "2011-08-11T11:55:56.423"}, "7025363": {"ParentId": "7025054", "CommentCount": "1", "Body": "<p>No, you are not missing anything, and your compiler seems to behave buggy. You can see how gcc handles it here: <a href=\"http://ideone.com/MI9gz\" rel=\"nofollow\">http://ideone.com/MI9gz</a></p>\n<p>Its error message is:</p>\n<pre><code>prog.cpp:4:4: error: reference to 'vector' is ambiguous\n/usr/lib/gcc/i686-pc-linux-gnu/4.5.1/../../../../include/c++/4.5.1/bits/stl_vector.h:171:5: error: candidates are: class std::vector&lt;char&gt; std::vector&lt;char&gt;::vector\n/usr/lib/gcc/i686-pc-linux-gnu/4.5.1/../../../../include/c++/4.5.1/bits/stl_vector.h:171:5: error:                 class std::vector&lt;int&gt; std::vector&lt;int&gt;::vector\n</code></pre>\n", "OwnerUserId": "833362", "PostTypeId": "2", "Id": "7025363", "Score": "4", "CreationDate": "2011-08-11T11:52:21.113", "LastActivityDate": "2011-08-11T11:52:21.113"}, "bq_ids": {"n4140": {"so_7025054_7025054_1": {"section_id": 5846, "quality": 0.9310344827586207, "length": 27}, "so_7025054_7025054_0": {"section_id": 7085, "quality": 0.8181818181818182, "length": 9}, "so_7025054_7025401_0": {"section_id": 182, "quality": 0.8888888888888888, "length": 32}}, "n3337": {"so_7025054_7025054_1": {"section_id": 5616, "quality": 0.9310344827586207, "length": 27}, "so_7025054_7025054_0": {"section_id": 6829, "quality": 0.8181818181818182, "length": 9}, "so_7025054_7025401_0": {"section_id": 176, "quality": 0.8888888888888888, "length": 32}}, "n4659": {"so_7025054_7025054_1": {"section_id": 7325, "quality": 0.9310344827586207, "length": 27}, "so_7025054_7025054_0": {"section_id": 8586, "quality": 0.8181818181818182, "length": 9}, "so_7025054_7025401_0": {"section_id": 187, "quality": 0.8888888888888888, "length": 32}}}});