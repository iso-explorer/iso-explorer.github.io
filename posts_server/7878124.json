post_cb({"bq_ids": {"n4140": {"so_7878124_7878481_3": {"length": 11, "quality": 1.0, "section_id": 5929}, "so_7878124_7878481_1": {"length": 13, "quality": 1.0, "section_id": 5925}}, "n3337": {"so_7878124_7878481_3": {"length": 11, "quality": 1.0, "section_id": 5701}, "so_7878124_7878481_1": {"length": 13, "quality": 1.0, "section_id": 5697}}, "n4659": {"so_7878124_7878481_3": {"length": 11, "quality": 1.0, "section_id": 7414}, "so_7878124_7878481_1": {"length": 13, "quality": 1.0, "section_id": 7399}}}, "7878196": {"Id": "7878196", "PostTypeId": "2", "Body": "<p>Local Class and Nested class are different beasts.</p>\n<p>A <strong>Nested class</strong> is a class declared within the scope of another class.</p>\n<p>A <strong>Local class</strong> is declared within a function definition.</p>\n<p><strong>Inner class</strong> is a non standard C++ term, So I am not sure how to define it.</p>\n<hr>\n<p><strong>Nested Classes:</strong> </p>\n<p>IBM Documentation as a nice documentation <strong><a href=\"http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=/com.ibm.xlcpp8a.doc/language/ref/cplr061.htm\" rel=\"nofollow noreferrer\">here</a></strong>.<br>\nTo Summarize:  </br></p>\n<blockquote id=\"so_7878124_7878196_0\">\n<ul>\n<li>The name of a nested class is local to its enclosing class. Unless you use explicit pointers, references, or object names, declarations in a nested class can only use visible constructs, including type names, static members, and enumerators from the enclosing class and global variables.</li>\n<li>Member functions of a nested class follow regular access rules and have no special access privileges to members of their enclosing classes. Member functions of the enclosing class have no special access to members of a nested class</li>\n</ul>\n</blockquote>\n<p><strong>Local Classes:</strong><br>\nThis answer of mine <strong><a href=\"https://stackoverflow.com/questions/6415509/what-restrictions-does-iso-c-place-on-structs-defined-at-function-scope/6415550#6415550\">here</a></strong> documents the subtle points associated with local classes.</br></p>\n</hr>", "LastEditorUserId": "-1", "LastActivityDate": "2011-10-24T15:48:14.823", "Score": "5", "CreationDate": "2011-10-24T15:39:54.650", "ParentId": "7878124", "CommentCount": "1", "OwnerUserId": "452307", "LastEditDate": "2017-05-23T11:55:40.700"}, "7878124": {"ViewCount": "1242", "Body": "<p>Are Local class, Inner class and Nested class mean same things in C++?</p>\n", "AcceptedAnswerId": "7878196", "Title": "Are Local class, Inner class and Nested class are the same things in C++?", "CreationDate": "2011-10-24T15:34:43.483", "Id": "7878124", "CommentCount": "0", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2011-10-24T15:56:54.430", "LastEditorUserId": "159072", "LastActivityDate": "2011-10-24T17:41:03.000", "Score": "5", "OwnerUserId": "159072", "Tags": "<c++><inner-classes><nested-class><local-class>", "AnswerCount": "3"}, "7878481": {"Id": "7878481", "PostTypeId": "2", "Body": "<p>Quoting draft of C++11 (N3290):</p>\n<blockquote>\n<p id=\"so_7878124_7878481_0\"><strong>9.7 Nested class declarations</strong> [class.nest]</p>\n<p id=\"so_7878124_7878481_1\">1 A class can be declared within another class. A class declared within another is called a\n  nested class.</p>\n<p id=\"so_7878124_7878481_2\"><strong>9.8 Local class declarations</strong> [class.local]</p>\n<p id=\"so_7878124_7878481_3\">1 A class can be declared within a function definition; such a class is called a local class.</p>\n</blockquote>\n<p>There is no concept of inner class specified in C++ standard.</p>\n", "LastActivityDate": "2011-10-24T16:00:48.767", "CommentCount": "0", "CreationDate": "2011-10-24T16:00:48.767", "ParentId": "7878124", "Score": "2", "OwnerUserId": "151641"}, "7879533": {"Id": "7879533", "PostTypeId": "2", "Body": "<p>Inner classes capture the enclosing class's <code>this</code> reference. A hierarchy of inner class instances form a tree structure. This is unique for Java.</p>\n", "LastActivityDate": "2011-10-24T17:41:03.000", "CommentCount": "0", "CreationDate": "2011-10-24T17:41:03.000", "ParentId": "7878124", "Score": "0", "OwnerUserId": "122943"}});