post_cb({"bq_ids": {"n4140": {"so_2934021_2934291_0": {"length": 7, "quality": 1.0, "section_id": 3222}}, "n3337": {"so_2934021_2934291_0": {"length": 7, "quality": 1.0, "section_id": 3096}}, "n4659": {"so_2934021_2934291_0": {"length": 7, "quality": 1.0, "section_id": 3979}}}, "2934291": {"Id": "2934291", "PostTypeId": "2", "Body": "<p>\u00a78.3.2 section 5</p>\n<blockquote>\n<p id=\"so_2934021_2934291_0\">There shall be no references to references, no arrays of references, and no pointers to references.</p>\n</blockquote>\n<p>You're probably thinking of references as funny pointers. They are not.</p>\n", "LastActivityDate": "2010-05-29T07:59:51.303", "CommentCount": "0", "CreationDate": "2010-05-29T07:59:51.303", "ParentId": "2934021", "Score": "3", "OwnerUserId": "252000"}, "2935573": {"Id": "2935573", "PostTypeId": "2", "Body": "<p>You cannot store references because they are not copy constructible (and some operations will be impossible because they are not default constructible either).</p>\n<p>You can however emulate the behavior using a pointer:</p>\n<pre><code>std::map&lt;int, ClassA*&gt; test;\n</code></pre>\n<p>It's a bit annoying because you then need to dereference twice:</p>\n<pre><code>std::map&lt;int, ClassA*&gt;::iterator it = test.begin();\n\nit-&gt;second-&gt;foo();\n</code></pre>\n<p>but with a <code>map</code> it's much less confusing than with a <code>vector</code> or <code>set</code> (it would be <code>(*it)-&gt;foo()</code>.</p>\n<p>Finally, there are some gotchas (those of a pointer):</p>\n<ul>\n<li>You must ensure than the object pointed to will remain alive as long as you wish to use the pointer</li>\n<li>The default initialization of a pointer is a random value, using it cause undefined behavior</li>\n<li>When the pointer is thrown away, the object remains (thankfully), but it does mean you need to make it'll get destroyed at one point</li>\n</ul>\n", "LastActivityDate": "2010-05-29T15:11:58.907", "CommentCount": "0", "CreationDate": "2010-05-29T15:11:58.907", "ParentId": "2934021", "Score": "1", "OwnerUserId": "147192"}, "2934046": {"Id": "2934046", "PostTypeId": "2", "Body": "<p>It is illegal to store references in an stl container, because types must be copy constructible and assignable.  References can not be assigned.</p>\n<p>Exactly what operation causes the first error is implementation dependent, but I image that it is related to creating a reference and not assigning it immediately.  The second error message looks like its actually related to building the map index.</p>\n<p>If your type is small, you can copy it into the map, or if it is large consider using pointers instead, but remember that the container will not deallocate the objects for you, you'll have to do that explicitly yourself.</p>\n<p><a href=\"https://stackoverflow.com/questions/1543193/why-cant-i-store-references-in-an-stl-map-in-c\">This</a> SO question might be of interest to you.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2010-05-29T06:35:13.420", "Score": "16", "CreationDate": "2010-05-29T06:15:49.917", "ParentId": "2934021", "CommentCount": "0", "OwnerUserId": "342256", "LastEditDate": "2017-05-23T12:32:58.783"}, "2934021": {"ViewCount": "4663", "Body": "<p>The following:</p>\n<pre><code>std::map&lt;int, ClassA &amp;&gt; test;\n</code></pre>\n<p>gives:</p>\n<pre><code>error C2101: '&amp;' on constant\n</code></pre>\n<p>While the following</p>\n<pre><code>std::map&lt;ClassA &amp;, int&gt; test;\n</code></pre>\n<p>gives</p>\n<pre><code>error C2528: '_First' : pointer to reference is illegal\n</code></pre>\n<p>The latter seems like map cannot contain a reference for the key value, since it needs to instantiate the class sometimes and a reference cannot be instantiated without an object. But why does the first case not work?</p>\n", "AcceptedAnswerId": "2934046", "Title": "STL map containing references does not compile", "CreationDate": "2010-05-29T06:04:38.697", "Id": "2934021", "CommentCount": "0", "FavoriteCount": "4", "PostTypeId": "1", "LastActivityDate": "2010-05-29T15:11:58.907", "Score": "8", "OwnerUserId": "73398", "Tags": "<c++><stl><reference><map>", "AnswerCount": "3"}});