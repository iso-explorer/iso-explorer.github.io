post_cb({"47529358": {"CommentCount": "1", "ViewCount": "28", "PostTypeId": "1", "ClosedDate": "2017-11-28T10:35:05.360", "LastEditorUserId": "7201671", "CreationDate": "2017-11-28T10:34:16.987", "LastActivityDate": "2017-11-28T10:35:28.610", "Title": "When is copy constructor called? C++", "LastEditDate": "2017-11-28T10:35:28.610", "Id": "47529358", "Score": "0", "Body": "<p>Following the below example of <strong>Device</strong> class and object instantiation in <strong>main</strong>:</p>\n<pre><code>int main(){\n\n    Device T1;\n\n    getNumber(T1);\n\n    return 0;\n}\n</code></pre>\n<p>the output is as expected:</p>\n<blockquote>\n<p id=\"so_47529358_47529358_0\">Default constructor has been called (initializing T1)</p>\n<p id=\"so_47529358_47529358_1\">GetNumber has been called (message from method)</p>\n<p id=\"so_47529358_47529358_2\">Copy constructor has been called (when returning <strong>t</strong> object from\n  <code>getNumber</code> method)</p>\n</blockquote>\n<p>When a new object <code>T2</code> is being constructed based on <code>t</code> (object that is being thrown or returned from <code>getNumber</code> method) I am expecting another call from the copy constructor. Yet, the output of the following main code remains the same as above:</p>\n<pre><code>int main(){\n\n    Device T1;\n    // here the copy constructor should be called again when copying T1 to \n    // T2 through getNumber method\n    Device T2 = getNumber(T1);\n\n    return 0;\n}\n</code></pre>\n<p>Expected output:</p>\n<blockquote>\n<p id=\"so_47529358_47529358_3\">Default constructor has been called (initializing T1)</p>\n<p id=\"so_47529358_47529358_4\">GetNumber has been called (message from method)</p>\n<p id=\"so_47529358_47529358_5\">Copy constructor has been called (once when returning t)</p>\n</blockquote>\n<pre><code>// below line  never occurs in output\n</code></pre>\n<blockquote>\n<p id=\"so_47529358_47529358_6\">Copy constructor has been called (twice when copying T1 to T2)</p>\n</blockquote>\n<p><strong>Why isn't the copy constructor being called twice for this second scenario?</strong></p>\n<p><strong>Device</strong> class:</p>\n<pre><code>class Device {\n// these vars are private by default\ndouble phoneNumber;\nstring producer;\n\npublic:\n// PROTOTYPES CONSTRUCTORS\n    ...\n\n// copy constructor prototype\nDevice(const Device &amp;t);\n\n// DESTRUCTOR\n~ Device(){\n    cout &lt;&lt; \"Destructor has been called\" &lt;&lt; endl;\n}\n\n//SETTERS\n    ...\n\n\n// GETTERS\n    ...\n\n};\n\n// default constructor\nDevice :: Device(){\n\n        ...\n\ncout &lt;&lt; \"Default constructor has been called\" &lt;&lt; endl;\n}\n\n// copy constructor\nDevice :: Device(const Device &amp;t){\n    phoneNumber = t.phoneNumber;\n    producer = t.producer;\n\n    cout &lt;&lt; \"Copy constructor has been called\" &lt;&lt; endl;\n}\n\n\n // method outside of class\nDevice getNumber(Device &amp;t){\n    cout &lt;&lt; \"GetNumber has been called\" &lt;&lt; endl;\n    return t;\n}\n</code></pre>\n<p>Note: I am using GCC 4.7.2 32-bit compiler. Maybe trying out another compiler would result in the expected behaviour?</p>\n", "Tags": "<c++><oop><constructor><copy-constructor>", "OwnerUserId": "7201671", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_47529358_47529358_6": {"section_id": 480, "quality": 0.7142857142857143, "length": 5}, "so_47529358_47529358_5": {"section_id": 480, "quality": 0.5714285714285714, "length": 4}, "so_47529358_47529358_2": {"section_id": 480, "quality": 0.5555555555555556, "length": 5}, "so_47529358_47529358_0": {"section_id": 480, "quality": 0.8, "length": 4}, "so_47529358_47529358_3": {"section_id": 480, "quality": 0.8, "length": 4}}, "n3337": {"so_47529358_47529358_6": {"section_id": 471, "quality": 0.7142857142857143, "length": 5}, "so_47529358_47529358_5": {"section_id": 471, "quality": 0.5714285714285714, "length": 4}, "so_47529358_47529358_2": {"section_id": 471, "quality": 0.5555555555555556, "length": 5}, "so_47529358_47529358_0": {"section_id": 471, "quality": 0.8, "length": 4}, "so_47529358_47529358_3": {"section_id": 471, "quality": 0.8, "length": 4}}, "n4659": {"so_47529358_47529358_6": {"section_id": 502, "quality": 0.5714285714285714, "length": 4}, "so_47529358_47529358_5": {"section_id": 502, "quality": 0.5714285714285714, "length": 4}, "so_47529358_47529358_2": {"section_id": 502, "quality": 0.5555555555555556, "length": 5}}}});