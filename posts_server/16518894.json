post_cb({"16519079": {"ParentId": "16518894", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2013-05-13T09:45:15.153", "Score": "7", "LastEditorUserId": "410767", "LastEditDate": "2013-05-13T10:02:21.133", "Id": "16519079", "OwnerUserId": "410767", "Body": "<p>Factors:</p>\n<ul>\n<li><code>new[]</code> must be matched with <code>delete[]</code> / <code>new()</code> with <code>delete</code></li>\n<li>They <em>communicate</em> different things.  <code>operator new(n)</code> is a request for memory for unspecified purposes, whereas <code>new unsigned char[n]</code> loosely implies intent to store characters there.</li>\n</ul>\n<p>The array form may be <em>slightly</em> worse performance / efficiency wise - exact details depending on your implementation:</p>\n<blockquote>\n<p id=\"so_16518894_16519079_0\">5.3.4/12 new T[5] results in a call of operator new where x is a non-neagtive unspecified value representing array allocation overhead: the result of the new-expression will be offset by this amount from the value returned by <code>operator new[]</code>....</p>\n</blockquote>\n<p>BTW - neither are initialised:</p>\n<ul>\n<li><code>operator new()</code> returns a <code>void*</code> to uninitialised memory: see 3.7.4.1/2 \"There are no constraints on the contents of the allocated storage on return from the allocation function\", whereas 5.3.4/15 says \"a new-expression that creates an object of type T initializes that object as follows: if the new-initializer is ommitted, the object is default-initialized (8.5)\"; 8.5/6 says only class types default constructors provide initialisation.</li>\n</ul>\n", "LastActivityDate": "2013-05-13T10:02:21.133"}, "16518894": {"CommentCount": "3", "AcceptedAnswerId": "16519079", "PostTypeId": "1", "LastEditorUserId": "57428", "CreationDate": "2013-05-13T09:35:49.433", "LastActivityDate": "2013-05-13T10:11:56.217", "LastEditDate": "2013-05-13T10:11:56.217", "ViewCount": "248", "FavoriteCount": "1", "Title": "operator new(n) versus new unsigned char[n] for placement new", "Id": "16518894", "Score": "8", "Body": "<p>I'm allocating memory that will later be used for constructing objects with placement <code>new</code>. Should I be using <code>operator new(n)</code>, or should I be using <code>new unsigned char[n]</code>? Why?</p>\n", "Tags": "<c++><memory-management><new-operator><placement-new>", "OwnerUserId": "541686", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_16518894_16519079_0": {"section_id": 6095, "quality": 0.8260869565217391, "length": 19}}, "n3337": {"so_16518894_16519079_0": {"section_id": 5861, "quality": 0.8260869565217391, "length": 19}}, "n4659": {"so_16518894_16519079_0": {"section_id": 7592, "quality": 0.782608695652174, "length": 18}}}, "16518965": {"ParentId": "16518894", "CommentCount": "6", "CreationDate": "2013-05-13T09:38:44.563", "OwnerUserId": "46642", "PostTypeId": "2", "Id": "16518965", "Score": "5", "Body": "<p>The former returns a pointer to some storage area. The latter returns a pointer to the first element of an array with some <em>objects</em> in it. If you need storage, use the one that gives storage and not objects.</p>\n", "LastActivityDate": "2013-05-13T09:38:44.563"}});