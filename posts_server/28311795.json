post_cb({"28315574": {"ParentId": "28311795", "PostTypeId": "2", "CommentCount": "1", "Body": "<pre><code>Undefined symbols for architecture arm64: \"CryptoPP::BufferedTransformation::ChannelFlush(std::string const&amp;, bool, int, bool)\", referenced from:\n\n vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p>I <em>think</em> you are <em>not</em> using <code>libc++</code>, which is LLVM's C++ standard library. I think that because I don't see a <code>-stdlib=libc++</code> (but I don't recall if that's passed to <code>ld</code> directly).</p>\n<p>The symbol is defined in the <a href=\"https://github.com/noloader/cryptopp-5.6.2-ios\" rel=\"nofollow noreferrer\">github's prebuilt cryptopp</a> (that's my github, btw). Here's how to verify.</p>\n<p>First, extract the arm64 library from the fat library:</p>\n<pre><code>$ xcrun -sdk iphoneos lipo libcryptopp.a -thin arm64 -output libcryptopp-arm64.a\n$ ls\nlibcryptopp-arm64.a libcryptopp.a\n</code></pre>\n<p>Next, use <code>nm</code> to dump global symbols, and use <code>c++filt</code> to demangle:</p>\n<pre><code>$ nm -g libcryptopp-arm64.a | c++filt | grep BufferedTransformation::ChannelFlush | grep \" T \"\n0000000000002110 T CryptoPP::BufferedTransformation::ChannelFlush(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, bool, int, bool)\n</code></pre>\n<p>The capitol <code>T</code> means you are searching for symbols that are defined and exported. Lower <code>t</code> means its defined <em>but</em> not exported - i.e., private. Capitol <code>U</code> means its undefined.</p>\n<p>The <code>__1</code> is what <code>libc++</code> (LLVM) uses to differentiate from <code>libstdc++</code> (GNU). <code>std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;</code> is a <code>string</code>, so that could be rewritten as:</p>\n<pre><code>CryptoPP::BufferedTransformation::ChannelFlush(std::__1::string const&amp;, bool, int, bool)\n</code></pre>\n<p><em>If</em> this library was built against <code>libstdc++</code> (GNU), then the symbol from the library would be:</p>\n<pre><code>CryptoPP::BufferedTransformation::ChannelFlush(std:::string const&amp;, bool, int, bool)\n</code></pre>\n<p>We can repeat for the second problem child, and it follows the same pattern (<code>libc++</code>, and not <code>libstdc++</code>):</p>\n<pre><code>$ nm -g libcryptopp-arm64.a | c++filt | grep CryptoPP::Filter::CopyRangeTo2 | grep \" T \"\n00000000000001c4 T CryptoPP::Filter::CopyRangeTo2(CryptoPP::BufferedTransformation&amp;, unsigned long long&amp;, unsigned long long, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, bool) const\n</code></pre>\n<p>This can be rewritten as:</p>\n<pre><code>CryptoPP::Filter::CopyRangeTo2(CryptoPP::BufferedTransformation&amp;, unsigned long long&amp;, unsigned long long, std::__1::string const&amp;, bool) const\n</code></pre>\n<h2>-----</h2>\n<p><em>IF</em> you need GNU's <code>libstdc++</code>, then you can build it yourself. Here are the steps:</p>\n<ol>\n<li>Download and unpack Crypto++ from the website</li>\n<li>Download and unpack <a href=\"http://www.cryptopp.com/w/images/a/a0/Cryptopp-mobile.zip\" rel=\"nofollow noreferrer\"><code>cryptopp-mobile.zip</code></a>. Unpack it right over top the Crypto++ source files</li>\n<li>Open the new <code>GNUmakefile</code>, find the iOS rule by searching for the block that begins with <code>IS_IOS</code></li>\n<li>Change this line in the <code>IS_IOS</code> block: <code>CXXFLAGS += -stdlib=libc++</code>. Change it to <code>CXXFLAGS += -stdlib=libstdc++</code></li>\n<li>Do the cross compile...</li>\n</ol>\n<h2>-----</h2>\n<p>I downloaded Cocos2D-x and tried to look at its configuration (I'm not a Cmake guy, so I could be wrong with what follows). It has the following in <code>CmakeList.txt</code>:</p>\n<pre><code>if(MSVC)\n  ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS\n                  -wd4251 -wd4244 -wd4334 -wd4005 -wd4820 -wd4710\n                  -wd4514 -wd4056 -wd4996 -wd4099)\nelse()\n  set(CMAKE_C_FLAGS_DEBUG \"-g -Wall -DCOCOS2D_DEBUG=1\")\n  set(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG})\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fno-exceptions -std=c99\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-exceptions -std=c++11 -Wno-deprecated-declarations -Wno-reorder\")\n  if(CLANG)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -stdlib=libc++\")\n  endif()\nendif(MSVC)\n</code></pre>\n<p><em>If</em> Cmake is doing what I suspect, then its using LLVM's <code>libc++</code>. But its also using <code>-std=c++11</code>, and the GitHub project is not using it. But I'm not sure <code>-std=c++11</code> makes a difference here.</p>\n<p>Just bike shedding, but this is a bad sign: <code>_SCL_SECURE_NO_WARNINGS</code>. If they are blatantly doing that, then they probably have various degrees of of badness and brokenness. (Just my experience with auditing software).</p>\n<hr>\n<p>If interested, the <code>__1</code> is an inline namespace used for versioning. See <a href=\"https://stackoverflow.com/q/11016220\">What are inline namespaces for?</a> and <a href=\"https://stackoverflow.com/q/29293394\">Where does the __1 symbol come from when using LLVM's libc++?</a>.</p>\n</hr>", "OwnerUserId": "608639", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T10:28:07.110", "Id": "28315574", "Score": "0", "CreationDate": "2015-02-04T07:16:21.720", "LastActivityDate": "2015-03-29T01:51:09.127"}, "28311795": {"CommentCount": "3", "ViewCount": "1413", "PostTypeId": "1", "LastEditorUserId": "608639", "CreationDate": "2015-02-04T01:12:18.833", "LastActivityDate": "2016-03-21T05:36:19.080", "Title": "Undefined symbols in Crypto++/iOS 64-bit project", "AcceptedAnswerId": "28315574", "LastEditDate": "2016-03-21T05:36:19.080", "Id": "28311795", "Score": "1", "Body": "<p>I tried to build with <a href=\"https://github.com/noloader/cryptopp-5.6.2-ios\" rel=\"nofollow\">github's prebuilt cryptopp</a> but it doesn't work, too. it occur errors like below:</p>\n<blockquote>\n<p id=\"so_28311795_28311795_0\">Undefined symbols for architecture arm64:\n   \"CryptoPP::BufferedTransformation::ChannelFlush(std::string const&amp;, bool, int, bool)\", referenced from:</p>\n<pre><code> vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p id=\"so_28311795_28311795_1\">\"CryptoPP::Filter::CopyRangeTo2(CryptoPP::BufferedTransformation&amp;, unsigned long long&amp;, unsigned long long, std::string const&amp;, bool) const\", referenced from:</p>\n<pre><code> vtable for CryptoPP::Base64Decoder in MYCLASSBBB.o\n vtable for CryptoPP::Unflushable&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p id=\"so_28311795_28311795_2\">\"CryptoPP::Filter::TransferTo2(CryptoPP::BufferedTransformation&amp;, unsigned long long&amp;, std::string const&amp;, bool)\", referenced from:</p>\n<pre><code> vtable for CryptoPP::Base64Decoder in MYCLASSBBB.o\n vtable for CryptoPP::Unflushable&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p id=\"so_28311795_28311795_3\">\"CryptoPP::BufferedTransformation::ChannelPut2(std::string const&amp;, unsigned char const*, unsigned long, int, bool)\", referenced from:</p>\n<pre><code> vtable for CryptoPP::Base64Decoder in MYCLASSBBB.o\n vtable for CryptoPP::Unflushable&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p id=\"so_28311795_28311795_4\">\"CryptoPP::BufferedTransformation::ChannelCreatePutSpace(std::string const&amp;, unsigned long&amp;)\", referenced from:</p>\n<pre><code> vtable for CryptoPP::Base64Decoder in MYCLASSBBB.o\n vtable for CryptoPP::Unflushable&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p id=\"so_28311795_28311795_5\">\"CryptoPP::BufferedTransformation::ChannelPutModifiable2(std::string const&amp;, unsigned char*, unsigned long, int, bool)\", referenced from:</p>\n<pre><code> vtable for CryptoPP::Base64Decoder in MYCLASSBBB.o\n vtable for CryptoPP::Unflushable&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p id=\"so_28311795_28311795_6\">\"CryptoPP::BufferedTransformation::ChannelMessageSeriesEnd(std::string const&amp;, int, bool)\", referenced from:</p>\n<pre><code> vtable for CryptoPP::Base64Decoder in MYCLASSBBB.o\n vtable for CryptoPP::Unflushable&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p id=\"so_28311795_28311795_7\">\"CryptoPP::BufferedTransformation::SetRetrievalChannel(std::string const&amp;)\", referenced from:</p>\n<pre><code> vtable for CryptoPP::Base64Decoder in MYCLASSBBB.o\n vtable for CryptoPP::Unflushable&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n vtable for CryptoPP::SimpleProxyFilter in MYCLASSBBB.o\n vtable for CryptoPP::Bufferless&lt;CryptoPP::Filter&gt; in MYCLASSBBB.o\n</code></pre>\n<p id=\"so_28311795_28311795_8\">\"CryptoPP::StringSinkTemplate::StringSinkTemplate(std::string&amp;)\", referenced from:</p>\n<pre><code> encryptString(std::string const&amp;) in MYCLASSBBB.o\n decryptString(std::string const&amp;, int) in MYCLASSBBB.o\n MYCLASSAAA::setDeviceId() in MYCLASSAAA.o\n MYCLASSAAA::getSignature() in MYCLASSAAA.o\n</code></pre>\n<p id=\"so_28311795_28311795_9\">ld: symbol(s) not found for architecture arm64\n  clang: error: linker command failed with exit code 1 (use -v to see invocation)</p>\n</blockquote>\n<p>the MYCLASSAAA and MYCLASSBBB are all of classes what using cryptopp lib.\nit using cryptlib.h, modes.h, filters.h, aes.h, base64.h, md5.h, hex.h.</p>\n<p>I even tried to build the lib myself, but I it same errors happen. what should I do?</p>\n<p>I hope your help. thanks.</p>\n<hr>\n<p>add the xcode cmd</p>\n<blockquote>\n<p id=\"so_28311795_28311795_10\">Ld /Users/USERNAME/Library/Developer/Xcode/DerivedData/PROJECT_NAME-aknkujyaqvqjswbhspmawywtyqee/Build/Products/Release-iphoneos/PROJECT_NAME.app/PROJECT_NAME normal arm64\n      cd /Users/USERNAME/Desktop/Development/Office_Projects/PROJECTROOT/root\n      export IPHONEOS_DEPLOYMENT_TARGET=5.1.1\n      export PATH=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin\"\n      /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang++ -arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.1.sdk -L/Users/USERNAME/Library/Developer/Xcode/DerivedData/PROJECT_NAME-aknkujyaqvqjswbhspmawywtyqee/Build/Products/Release-iphoneos -L/Users/USERNAME/Desktop/Development/Office_Projects/PROJECTROOT/root/PROJECT_NAME/libs/cocos2dx/platform/third_party/ios/libraries -L/Users/USERNAME/Desktop/Development/Office_Projects/PROJECTROOT/root/PROJECT_NAME/libs/EEAF-SDK7.0(i386,armv7,armv7s,arm64) -L/Users/USERNAME/Desktop/Development/Office_Projects/PROJECTROOT/root/PROJECT_NAME/libs/boost_1_57/ios -L/Users/USERNAME/Desktop/Development/Office_Projects/PROJECTROOT/root/PROJECT_NAME/Classes/cryptopp/lib -LPROJECT_NAME/cocos2dx/platform/third_party/ios/libraries -LPROJECT_NAME/EEAF-SDK7.0(i386,armv7,armv7s,arm64) -F/Users/USERNAME/Library/Developer/Xcode/DerivedData/PROJECT_NAME-aknkujyaqvqjswbhspmawywtyqee/Build/Products/Release-iphoneos -F/Users/USERNAME/Desktop/Development/Office_Projects/PROJECTROOT/root/PROJECT_NAME/libs -filelist /Users/USERNAME/Library/Developer/Xcode/DerivedData/PROJECT_NAME-aknkujyaqvqjswbhspmawywtyqee/Build/Intermediates/PROJECT_NAME.build/Release-iphoneos/PROJECT_NAME.build/Objects-normal/arm64/PROJECT_NAME.LinkFileList -dead_strip -lxml2 -lz -ObjC -lcryptopp -fobjc-link-runtime -miphoneos-version-min=5.1.1 -lc++ /Users/USERNAME/Desktop/Development/Office_Projects/PROJECTROOT/root/PROJECT_NAME/libs/boost_1_57/ios/boost.a -framework UIKit -framework CoreTelephony -lEEAF -framework FacebookSDK -framework AddressBook -framework AddressBookUI -framework AudioToolbox -framework AVFoundation -framework CFNetwork -framework CoreGraphics -framework CoreLocation -framework CoreMedia -framework CoreText -framework Foundation -framework ImageIO -framework MediaPlayer -framework MobileCoreServices -framework OpenAL -framework OpenGLES -framework QuartzCore -framework Security -framework SystemConfiguration -lsqlite3.0 -framework StoreKit -lcurl -Xlinker -dependency_info -Xlinker /Users/USERNAME/Library/Developer/Xcode/DerivedData/PROJECT_NAME-aknkujyaqvqjswbhspmawywtyqee/Build/Intermediates/PROJECT_NAME.build/Release-iphoneos/PROJECT_NAME.build/Objects-normal/arm64/PROJECT_NAME_dependency_info.dat -o /Users/USERNAME/Library/Developer/Xcode/DerivedData/PROJECT_NAME-aknkujyaqvqjswbhspmawywtyqee/Build/Products/Release-iphoneos/PROJECT_NAME.app/PROJECT_NAME</p>\n</blockquote>\n<p>and \"vtable for CRYPTOPP::~.o\" always happen. with a notice : </p>\n<blockquote>\n<p id=\"so_28311795_28311795_11\">NOTE: a missing vtable usually means the first non-inline virtual member function has no definition.</p>\n</blockquote>\n</hr>", "Tags": "<c++><ios><xcode><cocos2d-x><crypto++>", "OwnerUserId": "3835380", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_28311795_28311795_1": {"section_id": 6549, "quality": 0.6666666666666666, "length": 8}, "so_28311795_28311795_5": {"section_id": 5427, "quality": 0.5555555555555556, "length": 5}}, "n3337": {"so_28311795_28311795_1": {"section_id": 6304, "quality": 0.6666666666666666, "length": 8}, "so_28311795_28311795_5": {"section_id": 5222, "quality": 0.5555555555555556, "length": 5}}, "n4659": {"so_28311795_28311795_1": {"section_id": 8031, "quality": 0.6666666666666666, "length": 8}, "so_28311795_28311795_5": {"section_id": 6855, "quality": 0.5555555555555556, "length": 5}}}});