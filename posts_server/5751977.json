post_cb({"5751977": {"CommentCount": "3", "AcceptedAnswerId": "5751990", "ClosedDate": "2013-08-15T19:38:49.807", "CreationDate": "2011-04-22T03:23:59.380", "LastActivityDate": "2015-01-19T16:45:47.980", "PostTypeId": "1", "ViewCount": "13046", "FavoriteCount": "5", "Title": "Local type as template arguments in C++", "Id": "5751977", "Score": "34", "Body": "<p>This is my code</p>\n<pre><code>#include &lt;vector&gt;\ntemplate &lt;typename T, template&lt;typename&gt; class C = std::vector &gt;\nstruct FooBar\n{\n   /*codez*/\n};\ntemplate&lt;typename T&gt;\nstruct Global{};\n\nint main()\n{\n   struct Local{};  \n   FooBar&lt;Local,Global&gt; k;\n}\n</code></pre>\n<p>This is the error that I get</p>\n<p><code>template argument for \u2018template&lt;class T, template&lt;class&gt; class C&gt; struct FooBar\u2019 uses local type \u2018main()::Local\u2019</code></p>\n<p>Which part of the standard says that this is wrong? I am using gcc 4.5.1. How can make this code work?</p>\n", "Tags": "<c++><templates>", "OwnerUserId": "719993", "AnswerCount": "2"}, "5751990": {"ParentId": "5751977", "PostTypeId": "2", "CommentCount": "4", "Body": "<blockquote>\n<p id=\"so_5751977_5751990_0\">Which part of the standard says that this is wrong?</p>\n</blockquote>\n<p>That would be \u00a714.3.1/2 from the 2003 C++ Standard:</p>\n<blockquote>\n<p id=\"so_5751977_5751990_1\">A local type, a type with no linkage, an unnamed type or a type compounded from any of these types shall not be used as a <em>template-argument</em> for a template <em>type-parameter</em>.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p id=\"so_5751977_5751990_2\">How can make this code work?</p>\n</blockquote>\n<p>Don't use a local type as a template argument.</p>\n<p>Note that this restriction has been lifted in C++11, so using that language standard you are able to use a local type as a template argument.</p>\n</hr>", "OwnerUserId": "151292", "LastEditorUserId": "3647361", "LastEditDate": "2015-01-19T16:45:47.980", "Id": "5751990", "Score": "29", "CreationDate": "2011-04-22T03:26:33.377", "LastActivityDate": "2015-01-19T16:45:47.980"}, "bq_ids": {"n4140": {"so_5751977_5751990_1": {"section_id": 7141, "quality": 0.6666666666666666, "length": 8}, "so_5751977_5752000_0": {"section_id": 7141, "quality": 0.6666666666666666, "length": 8}}, "n3337": {"so_5751977_5751990_1": {"section_id": 6885, "quality": 0.6666666666666666, "length": 8}, "so_5751977_5752000_0": {"section_id": 6885, "quality": 0.6666666666666666, "length": 8}}, "n4659": {"so_5751977_5751990_1": {"section_id": 8642, "quality": 0.6666666666666666, "length": 8}, "so_5751977_5752000_0": {"section_id": 8642, "quality": 0.6666666666666666, "length": 8}}}, "5752000": {"ParentId": "5751977", "CommentCount": "0", "Body": "<p>14.3.1/2</p>\n<blockquote>\n<p id=\"so_5751977_5752000_0\">A local type, a type with no linkage, an unnamed type or a type compounded from any of these types shall not be used as a template-argument for a template type-parameter.</p>\n</blockquote>\n<p>Try compiling your code with <code>-std=c++0x</code> option (gcc 4.5.1). C++0x lifts the restriction and so you can use a local type as  template argument.</p>\n", "OwnerUserId": "165520", "PostTypeId": "2", "Id": "5752000", "Score": "8", "CreationDate": "2011-04-22T03:28:00.960", "LastActivityDate": "2011-04-22T03:28:00.960"}});