post_cb({"19775954": {"CommentCount": "8", "ViewCount": "192", "PostTypeId": "1", "LastEditorUserId": "1572562", "CreationDate": "2013-11-04T19:56:28.763", "LastActivityDate": "2013-11-05T23:00:42.817", "Title": "Why there is no compile error for the array definition with non-constant value?", "AcceptedAnswerId": "19775988", "LastEditDate": "2013-11-04T19:57:42.527", "Id": "19775954", "Score": "4", "Body": "<p>I thought I should get compile error for the following char array definition of the <strong>allData</strong>:</p>\n<pre><code>void MyClass::aMethod(const char* data, int size)\n{\n   int headerSize = 50;\n   MyHeader header;\n   //size is not constant and unknown at compile time\n   char allData[size + headerSize]; //&lt;&lt;&lt;&lt;&lt;==== should not allowed!! but not error??\n   memcpy(allData, &amp;header, headerSize);\n   memcpy(allData + headerSize, data, size);\n   ....\n}\n</code></pre>\n<p>Why? It will give a run-time error?</p>\n", "Tags": "<c++><arrays>", "OwnerUserId": "117039", "AnswerCount": "2"}, "19776005": {"ParentId": "19775954", "CommentCount": "0", "Body": "<p>Some C++ compilers have an option that allows to use C VLA in C++.</p>\n", "OwnerUserId": "2877241", "PostTypeId": "2", "Id": "19776005", "Score": "2", "CreationDate": "2013-11-04T19:59:06.027", "LastActivityDate": "2013-11-04T19:59:06.027"}, "bq_ids": {"n4140": {"so_19775954_19775988_0": {"section_id": 4706, "quality": 0.5909090909090909, "length": 13}, "so_19775954_19775988_3": {"section_id": 3228, "quality": 0.8461538461538461, "length": 11}}, "n3337": {"so_19775954_19775988_0": {"section_id": 4515, "quality": 0.5454545454545454, "length": 12}, "so_19775954_19775988_3": {"section_id": 3101, "quality": 0.6923076923076923, "length": 9}}, "n4659": {"so_19775954_19775988_0": {"section_id": 6103, "quality": 0.5909090909090909, "length": 13}, "so_19775954_19775988_3": {"section_id": 3985, "quality": 0.9230769230769231, "length": 12}}}, "19775988": {"ParentId": "19775954", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Both <a href=\"http://gcc.gnu.org/onlinedocs/gcc/Variable-Length.html\" rel=\"nofollow noreferrer\">gcc</a> and <a href=\"http://clang.llvm.org/compatibility.html#vla\" rel=\"nofollow noreferrer\">clang</a> and possibly others although not <a href=\"http://msdn.microsoft.com/en-us/library/zb1574zs.aspx\" rel=\"nofollow noreferrer\">visual C++</a>, supports <a href=\"http://en.wikipedia.org/wiki/Variable-length_array\" rel=\"nofollow noreferrer\">variable length arrays</a> an extension even though it is a <em>C99</em> feature not a C++ feature.</p>\n<p>In both <code>gcc</code> and <code>clang</code> if you compile with <code>-pedantic</code> they will warn you that you are using extensions, for example <code>gcc</code> would produce a similar warning to this:</p>\n<pre><code>warning: ISO C++ forbids variable length array \u2018allData\u2019 [-Wvla]\n</code></pre>\n<p>and you can use <code>-pedantic-errors</code> to turn the warning into an error.</p>\n<p>As far as I understand <em>C++14</em> may support <em>variable length arrays</em>. The C99 draft standard section <code>6.7.5.2</code> <em>Array declarators</em> says:</p>\n<blockquote>\n<p id=\"so_19775954_19775988_0\">[...] If the size is an integer constant expression and the element type has a known constant size, the array type is not a variable length array type; <strong>otherwise, the array type is a variable length array type.</strong></p>\n</blockquote>\n<p>while the C++ draft standard requires a constant, the draft C++ standard in section <code>8.3.4</code> <em>Arrays</em> says:</p>\n<blockquote>\n<p id=\"so_19775954_19775988_1\">In a declaration T D where D has the form</p>\n<blockquote>\n<p id=\"so_19775954_19775988_4\">D1 [ constant-expressionopt] attribute-specifier-seqopt</p>\n</blockquote>\n<p id=\"so_19775954_19775988_3\">[..] If the constant-expression (5.19) is present, it shall be a converted constant expression of type std::size_t and its value shall be greater than zero. [...]</p>\n</blockquote>\n", "OwnerUserId": "1708801", "LastEditorUserId": "1708801", "LastEditDate": "2013-11-05T23:00:42.817", "Id": "19775988", "Score": "8", "CreationDate": "2013-11-04T19:58:22.910", "LastActivityDate": "2013-11-05T23:00:42.817"}});