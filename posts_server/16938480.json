post_cb({"bq_ids": {"n4140": {"so_16938480_16938744_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 179}}, "n3337": {"so_16938480_16938744_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 173}}, "n4659": {"so_16938480_16938744_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 184}}}, "16938744": {"Id": "16938744", "PostTypeId": "2", "Body": "<p>You can say either <code>A&lt;T&gt;</code> or just <code>A</code>, and <code>A</code> means the same as <code>A&lt;T&gt;</code>. This is because of 14.6.1/1:</p>\n<blockquote>\n<p id=\"so_16938480_16938744_0\">Like normal (non-template) classes, class templates have an injected-class-name (Clause 9). The injected-class-name [...] is equivalent to the <em>template-name</em> followed by the <em>template-parameters</em> of the class template enclosed in <code>&lt;&gt;</code>.</p>\n</blockquote>\n", "LastActivityDate": "2013-06-05T11:28:32.147", "Score": "16", "CreationDate": "2013-06-05T11:28:32.147", "ParentId": "16938480", "CommentCount": "1", "OwnerUserId": "596781"}, "16938480": {"ViewCount": "792", "Body": "<p>Is this necessary:</p>\n<pre><code> template &lt;typename T&gt;\n class A{\n   T*point;\n   A&lt;T&gt; someFunction(){} //instead of returning just \"A\", not \"A&lt;T&gt;\"\n }\n</code></pre>\n<p>Will <code>someFunction</code> implicitly return the <code>A</code> of the same type as the class being defined? Because outside the class, you can only refer to this type as <code>A&lt;float&gt;</code> or similar, so I'd assumed this was necessary inside the class as well. I discovered it compiles without the &lt;&gt; so this made wonder if it is a safe habit to omit the brackets.</p>\n", "AcceptedAnswerId": "16938572", "Title": "Is it necessary to use template parameters to refer to same class inside definition?", "CreationDate": "2013-06-05T11:15:23.930", "Id": "16938480", "CommentCount": "0", "FavoriteCount": "3", "PostTypeId": "1", "LastActivityDate": "2013-06-05T11:28:32.147", "Score": "19", "OwnerUserId": "3758484", "Tags": "<c++>", "AnswerCount": "2"}, "16938572": {"Id": "16938572", "PostTypeId": "2", "Body": "<p>It's valid and safe C++ to omit the template parameters inside the class definition. In fact it's good practice, since you might add other template parameters with default values later on. You might forget to change <code>A&lt;T&gt;</code> to <code>A&lt;T,SomeOtherParameter&gt;</code> and get strange compile-time errors. Then just returning <code>A</code> will do it. </p>\n", "LastActivityDate": "2013-06-05T11:20:22.687", "Score": "23", "CreationDate": "2013-06-05T11:20:22.687", "ParentId": "16938480", "CommentCount": "1", "OwnerUserId": "1335865"}});