post_cb({"bq_ids": {"n4140": {"so_25283151_25283388_0": {"length": 17, "quality": 1.0, "section_id": 3304}}, "n3337": {"so_25283151_25283388_0": {"length": 17, "quality": 1.0, "section_id": 3174}}, "n4659": {"so_25283151_25283388_0": {"length": 15, "quality": 0.8823529411764706, "section_id": 4070}}}, "25283388": {"Id": "25283388", "PostTypeId": "2", "Body": "<p>From the C++ specification, \"Aggregate initialization\" (8.5.1):</p>\n<blockquote>\n<p id=\"so_25283151_25283388_0\">If there are fewer initializer-clauses in the list than there are members in the aggregate, then each member not explicitly initialized shall be initialized from an empty initializer list.</p>\n</blockquote>\n<p>So each <code>char</code> not in the initializer list would be initialized to <code>char()</code> that is <code>0</code>.</p>\n<p>In C++11 you can type:</p>\n<pre><code>char a[10] = {};\nchar b[10]{};\n</code></pre>\n<p>Some old compilers (or was it in C) may require you add at least one member:</p>\n<pre><code>char a[10] = {0};\n</code></pre>\n<p>Naturally, if the array has static lifetime (global or static variable), then it will be zero initialized if there is not initializer:</p>\n<pre><code>char global_array[10];\n</code></pre>\n<p>I find it confusing, so I prefer to add the <code>= {}</code> anyway.</p>\n<p>About the trailing comma, it is useful if you do something like:</p>\n<pre><code>char a[] = {\n  1,\n  2,\n  3,\n};\n</code></pre>\n<p>So that you don't make a special case for the last line and you make copy&amp;paste and diffs easier. In your specific case is just useless:</p>\n<pre><code>char a[10] = {0,};\n</code></pre>\n<p>That comma does nothing, and it is ugly, so I wouldn't write it.</p>\n", "LastEditorUserId": "865874", "LastActivityDate": "2014-08-13T10:11:32.070", "Score": "2", "CreationDate": "2014-08-13T10:05:34.690", "ParentId": "25283151", "CommentCount": "4", "OwnerUserId": "865874", "LastEditDate": "2014-08-13T10:11:32.070"}, "25283243": {"Id": "25283243", "PostTypeId": "2", "Body": "<p>Missing elements in an array will be initialised to 0. In addition, C++ allows you to leave the uniform initialiser empty. So the following works, is minimal and also the most efficient:</p>\n<pre><code>T array[N] = {};\n</code></pre>\n<p>It\u2019s worth noting that this works for <em>any</em> type <code>T</code> which can be either default-constructed or initialised, not just built-in types. For example, the following works, and will print <code>foo</code> five times:</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct foo {\n    foo() { std::cout &lt;&lt; \"foo()\\n\"; }\n};\n\nint main() {\n    foo arr[5] = {};\n}\n</code></pre>\n<p>A more extensive list of the different possibilities <a href=\"https://stackoverflow.com/a/201116/1968\">was posted</a> by <a href=\"https://stackoverflow.com/users/1088/aib\">aib</a> some time ago.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2014-08-13T10:05:34.037", "Score": "5", "CreationDate": "2014-08-13T09:57:44.920", "ParentId": "25283151", "CommentCount": "1", "OwnerUserId": "1968", "LastEditDate": "2017-05-23T11:49:31.090"}, "25283151": {"ViewCount": "236", "Body": "<p>I am trying to find out the correct way to initialise an array to all zeros (i.e. as if you have done a memset on the array).</p>\n<p>I have found the following methods from various areas in stack overflow (and other sources):</p>\n<pre><code>char myArray1[10] = {0};\nchar myArray2[10] = {0,};\nchar myArray3[10] = {[0 ... 9] = 0};\nchar myArray4[10] = {0,0,0,0,0,0,0,0,0,0};\n</code></pre>\n<p>I would prefer the simplest syntax variant... I was using {0}, but I have not found any proof this actually is correct.</p>\n", "AcceptedAnswerId": "25283388", "Title": "Correct and simplest syntactical way to initialise an array to 0", "CreationDate": "2014-08-13T09:52:33.310", "Id": "25283151", "CommentCount": "9", "PostTypeId": "1", "ClosedDate": "2014-08-13T10:50:56.060", "LastActivityDate": "2014-08-13T10:11:32.070", "Score": "2", "OwnerUserId": "2298137", "Tags": "<c++><arrays>", "AnswerCount": "3"}, "25283320": {"Id": "25283320", "PostTypeId": "2", "Body": "<p>I prefer this because it is simple yet explicit:</p>\n<pre><code>char myArray1[10] = { 0 };\n</code></pre>\n", "LastActivityDate": "2014-08-13T10:01:19.183", "CommentCount": "1", "CreationDate": "2014-08-13T10:01:19.183", "ParentId": "25283151", "Score": "1", "OwnerUserId": "186997"}});