post_cb({"27038950": {"ParentId": "27037290", "CommentCount": "0", "Body": "<p>From <strong>[expr.typeid]</strong>/3:</p>\n<blockquote>\n<p id=\"so_27037290_27038950_0\">When <code>typeid</code> is applied to an expression other than a glvalue of a polymorphic class type, the result refers to a <code>std::type_info</code> object representing the static type of the expression.</p>\n</blockquote>\n<p>In the C++ Standard, the \"type of an expression\" is never a reference type; the \"reference-ness\" (lvalue or rvalue reference) of an expression is expressed in its <em>value category</em>. Since <code>std::forward</code> does not modify the type of an expression, only its value category (e.g. from lvalue to rvalue), applying <code>std::forward</code> will not affect the result of <code>typeid</code>.</p>\n", "OwnerUserId": "567292", "PostTypeId": "2", "Id": "27038950", "Score": "5", "CreationDate": "2014-11-20T11:53:05.277", "LastActivityDate": "2014-11-20T11:53:05.277"}, "27037290": {"CommentCount": "7", "AcceptedAnswerId": "27038950", "CreationDate": "2014-11-20T10:30:33.227", "LastActivityDate": "2014-11-20T11:53:05.277", "PostTypeId": "1", "ViewCount": "171", "FavoriteCount": "1", "Title": "Does it make sense to use std::forward with the typeid operator?", "Id": "27037290", "Score": "3", "Body": "<p>I was wondering whether it makes sense to use <code>std::forward&lt;&gt;</code> when submitting an instance to <code>typeid</code>?</p>\n<pre><code>template &lt;typename T&gt;\nvoid foo(T&amp;&amp; value) {\n  std::cout &lt;&lt; typeid(std::forward&lt;T&gt;(value)).name() &lt;&lt; std::endl;\n}\n</code></pre>\n<p>Does invoking <code>typeid(value)</code> instead yields the same result?</p>\n", "Tags": "<c++><c++11><rtti><perfect-forwarding>", "OwnerUserId": "948128", "AnswerCount": "2"}, "27037613": {"ParentId": "27037290", "CommentCount": "0", "Body": "<p>No, it doesn't. The result will be the same either way.</p>\n", "OwnerUserId": "8922", "PostTypeId": "2", "Id": "27037613", "Score": "3", "CreationDate": "2014-11-20T10:46:06.083", "LastActivityDate": "2014-11-20T10:46:06.083"}, "bq_ids": {"n4140": {"so_27037290_27038950_0": {"section_id": 6022, "quality": 1.0, "length": 18}}, "n3337": {"so_27037290_27038950_0": {"section_id": 5790, "quality": 1.0, "length": 18}}, "n4659": {"so_27037290_27038950_0": {"section_id": 7521, "quality": 1.0, "length": 18}}}});