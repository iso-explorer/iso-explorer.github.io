post_cb({"15015062": {"ParentId": "15014593", "CommentCount": "0", "CreationDate": "2013-02-22T00:52:39.503", "OwnerUserId": "981959", "PostTypeId": "2", "Id": "15015062", "Score": "2", "Body": "<p>I don't think it's a non-sequitur, \"sequence\" refers to the <em>q-char-sequence</em> or <em>h-char-sequence</em> between the <code>&lt;</code> and <code>&gt;</code> pair, or <code>\"</code> pair.</p>\n<p>The wording comes (only slightly altered) straight from the C standard, which has this additional wording in 6.4.7:</p>\n<blockquote>\n<p id=\"so_15014593_15015062_0\">The sequences in both forms of header names are mapped in an implementation-defined\n  manner to headers or external source file names as specified in 6.10.2.</p>\n</blockquote>\n<p>The later wording makes a little more sense with that context.</p>\n<p>I believe it does mean implementations are only <em>required</em> to support include files and headers of that form.  That obviously doesn't mean <code>#include &lt;vector&gt;</code> won't work, because the wording doesn't say implementations <em>shall not</em> support other forms, and there is other wording requiring that headers behave properly.</p>\n", "LastActivityDate": "2013-02-22T00:52:39.503"}, "15014593": {"CommentCount": "3", "ViewCount": "198", "CreationDate": "2013-02-22T00:05:36.897", "LastActivityDate": "2013-02-22T00:52:39.503", "Title": "C++ Source File Inclusion \"Unique Mappings\"?", "AcceptedAnswerId": "15014735", "PostTypeId": "1", "Id": "15014593", "Score": "3", "Body": "<p>In the C++11 standard 16.2.5:</p>\n<blockquote>\n<p id=\"so_15014593_15014593_0\">The implementation shall provide unique mappings for sequences consisting of one or more nondigits or\n  digits (2.11) followed by a period (.) and a single nondigit. The first character shall not be a digit. The\n  implementation may ignore distinctions of alphabetical case.</p>\n</blockquote>\n<p>I don't understand the context or meaning of this at all?</p>\n<p>What does it mean \"provide unique mappings\"? Mappings from what to what?  And unique as opposed to what? And sequences of what?</p>\n<p>It seems to be a total non-sequitor from surrounding paragraphs.</p>\n", "Tags": "<c++><c++11>", "OwnerUserId": "1131467", "AnswerCount": "2"}, "15014735": {"ParentId": "15014593", "CommentCount": "5", "CreationDate": "2013-02-22T00:18:31.740", "OwnerUserId": "179910", "PostTypeId": "2", "Id": "15014735", "Score": "3", "Body": "<p>In a typical case, what you specify in an <code>#include</code> directive will be a file name. What this is saying is that it doesn't have to be a file name. The \"from what\" is the sequence of characters (<code>h-char-sequence</code> or <code>q-char-sequence</code>) in the directive. This can map to some (more or less arbitrary) source of the same kind of data -- for example, if an implementation wanted to store headers in some sort of database, it might map them to records in the database.</p>\n<p>As far as the \"to what\" part, it's deliberately vague -- a typical implementation uses file names, but it could be almost anything else, as long as including a header produces the correct type of results -- the database record mentioned above would be one possibility, but it's intended to allow things like pre-compiled headers, or even building \"knowledge\" of the standard headers into the compiler itself, so including a standard header might do nothing more than set a flag in the compiler to tell it be aware of the contents of that header.</p>\n", "LastActivityDate": "2013-02-22T00:18:31.740"}, "bq_ids": {"n4140": {"so_15014593_15014593_0": {"section_id": 507, "quality": 0.8518518518518519, "length": 23}, "so_15014593_15015062_0": {"section_id": 5329, "quality": 0.6875, "length": 11}}, "n3337": {"so_15014593_15014593_0": {"section_id": 498, "quality": 0.8518518518518519, "length": 23}, "so_15014593_15015062_0": {"section_id": 5126, "quality": 0.6875, "length": 11}}, "n4659": {"so_15014593_15014593_0": {"section_id": 528, "quality": 0.8518518518518519, "length": 23}, "so_15014593_15015062_0": {"section_id": 6750, "quality": 0.6875, "length": 11}}}});