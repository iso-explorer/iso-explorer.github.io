post_cb({"43060011": {"CommentCount": "2", "ViewCount": "87", "PostTypeId": "1", "LastEditorUserId": "434551", "CreationDate": "2017-03-28T03:12:20.707", "LastActivityDate": "2017-03-28T05:37:11.927", "Title": "Is there a constant expression that is not a core constant expression?", "LastEditDate": "2017-03-28T04:10:48.383", "Id": "43060011", "Score": "1", "Body": "<p>According to <a href=\"http://en.cppreference.com/w/cpp/language/constant_expression\" rel=\"nofollow noreferrer\">cppref</a>, a <code>constant expression</code> is not bound to be a <code>core constant expression</code>.</p>\n<p>My question:</p>\n<p><strong>Is there a <code>constant expression</code> that is not a <code>core constant expression</code>?</strong></p>\n", "Tags": "<c++><c++11><const><constexpr><compile-time-constant>", "OwnerUserId": "508343", "AnswerCount": "2"}, "43061368": {"ParentId": "43060011", "CommentCount": "0", "CreationDate": "2017-03-28T05:37:11.927", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "43061368", "Score": "3", "Body": "<p><a href=\"https://timsong-cpp.github.io/cppwp/expr.const#5\" rel=\"nofollow noreferrer\">[expr.const]/5</a> defines \"constant expression\" as:</p>\n<blockquote>\n<p id=\"so_43060011_43061368_0\">A <em>constant expression</em> is either a glvalue core constant expression\n  that refers to an entity that is a permitted result of a constant\n  expression (as defined below), or a prvalue core constant expression\n  whose value satisfies the following constraints: [...]</p>\n</blockquote>\n<p>There is no such thing as a constant expression that isn't a core constant expression, and cppreference doesn't claim otherwise.</p>\n", "LastActivityDate": "2017-03-28T05:37:11.927"}, "43060056": {"ParentId": "43060011", "CommentCount": "1", "CreationDate": "2017-03-28T03:17:08.480", "OwnerUserId": "5231607", "PostTypeId": "2", "Id": "43060056", "Score": "1", "Body": "<p>[expr.const] lists a whole series of things that are not <em>core constant expressions</em>.  These include signed integer overflow (65536 * 32768 on a 32 bit machine), division by zero, and certain shift operations.</p>\n", "LastActivityDate": "2017-03-28T03:17:08.480"}, "bq_ids": {"n4140": {"so_43060011_43061368_0": {"section_id": 6187, "quality": 0.5416666666666666, "length": 13}}, "n4659": {"so_43060011_43061368_0": {"section_id": 7690, "quality": 0.9583333333333334, "length": 23}}}});