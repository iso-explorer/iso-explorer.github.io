post_cb({"21010506": {"CommentCount": "3", "ViewCount": "64", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2014-01-09T02:19:27.817", "LastActivityDate": "2014-01-09T02:24:09.417", "Title": "__VA_ARGS__, is this code snippet portable?", "AcceptedAnswerId": "21010552", "LastEditDate": "2017-05-23T12:03:47.687", "Id": "21010506", "Score": "0", "Body": "<p>Is this code snippet portable?</p>\n<p>definition:    </p>\n<pre><code>#define log(...)  std::cout &lt;&lt; __FILE__ &lt;&lt; \"[\" &lt;&lt; __LINE__  &lt;&lt; \"]:\" \\\n                            &lt;&lt; string_format(__VA_ARGS__) \\\n                            &lt;&lt; std::endl &lt;&lt; std::flush\n</code></pre>\n<p>usage:</p>\n<pre><code>log(\"i = %d\", i);\n</code></pre>\n<p>and string_format is sprintf that outputs a std::string taken from <a href=\"https://stackoverflow.com/a/8098080/624074\">https://stackoverflow.com/a/8098080/624074</a> It works with my gcc 4.6.3 here but I don't want to have compilation issues later with other compilers.</p>\n", "Tags": "<c++>", "OwnerUserId": "624074", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_21010506_21010552_0": {"section_id": 524, "quality": 0.9285714285714286, "length": 13}}, "n3337": {"so_21010506_21010552_0": {"section_id": 515, "quality": 0.9285714285714286, "length": 13}}, "n4659": {"so_21010506_21010552_0": {"section_id": 545, "quality": 0.9285714285714286, "length": 13}}}, "21010558": {"ParentId": "21010506", "CommentCount": "0", "Body": "<p>It's pretty portable, for the most part.  It's part of the C++11 language standard (as well as C99), so most modern compilers support it.  You might run into problems with older compilers that only support C++03.</p>\n", "OwnerUserId": "9530", "PostTypeId": "2", "Id": "21010558", "Score": "2", "CreationDate": "2014-01-09T02:24:09.417", "LastActivityDate": "2014-01-09T02:24:09.417"}, "21010552": {"ParentId": "21010506", "CommentCount": "0", "Body": "<p>Yes, the macro <code>__VA_ARGS__</code> is part of standard C++:</p>\n<blockquote>\n<h3>C++11 \u00a716.3.1 Argument substitution</h3>\n<p id=\"so_21010506_21010552_0\">An identifier <code>__VA_ARGS__</code>that occurs in the replacement list shall be treated as if it were a parameter, and the variable arguments shall form the preprocessing tokens used to replace it.</p>\n</blockquote>\n", "OwnerUserId": "1009479", "PostTypeId": "2", "Id": "21010552", "Score": "2", "CreationDate": "2014-01-09T02:23:26.793", "LastActivityDate": "2014-01-09T02:23:26.793"}});