post_cb({"34857343": {"ParentId": "34857135", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2016-01-18T14:40:17.833", "Score": "0", "LastEditorUserId": "3647361", "LastEditDate": "2016-01-18T14:58:29.580", "Id": "34857343", "OwnerUserId": "3647361", "Body": "<p>An <em>elaborated-type-specifier</em> can have different effects. For one, it can simply introduce a name as referring to a previous declaration. On the other hand, if the name isn't found to refer to any such declaration, it introduces the name by declaring it first.</p>\n<p>Your quote tries to clarify that there are no further effects in the former case, similar to a <em>simple-type-specifier</em>: The type has already been declared and is just being denoted.</p>\n", "LastActivityDate": "2016-01-18T14:58:29.580"}, "34857135": {"CommentCount": "1", "ViewCount": "105", "CreationDate": "2016-01-18T14:28:42.773", "LastActivityDate": "2016-01-18T14:58:29.580", "Title": "What does it mean to introduce a name into a declaration?", "AcceptedAnswerId": "34857343", "PostTypeId": "1", "Id": "34857135", "Score": "3", "Body": "<p>According to N4567, 7.1.6.3 paragraph 2 says,</p>\n<blockquote>\n<p id=\"so_34857135_34857135_0\">... If the <em>identifier</em> resolves to a class-name or enum-name, the <em>elaborated-type-specifier</em> introduces it into the declaration the same way a <em>simple-type-specifier</em> introduces its type-name...</p>\n</blockquote>\n<p>What does it mean to introduce class-name or enum-name into a declaration <strong>other than a declarative region</strong>? Moreover, What exactly is the way a <em>simple-type-specifier</em> introduces its type-name?</p>\n", "Tags": "<c++><standards><language-lawyer>", "OwnerUserId": "5645940", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_34857135_34857135_0": {"section_id": 5443, "quality": 1.0, "length": 14}}, "n3337": {"so_34857135_34857135_0": {"section_id": 5238, "quality": 1.0, "length": 14}}, "n4659": {"so_34857135_34857135_0": {"section_id": 6870, "quality": 1.0, "length": 14}}}});