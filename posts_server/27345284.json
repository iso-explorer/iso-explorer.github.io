post_cb({"27345284": {"CommentCount": "5", "AcceptedAnswerId": "27345851", "PostTypeId": "1", "LastEditorUserId": "1033581", "CreationDate": "2014-12-07T17:09:45.847", "LastActivityDate": "2017-11-22T19:57:53.687", "LastEditDate": "2017-01-29T09:04:41.560", "ViewCount": "5739", "FavoriteCount": "4", "Title": "Is it possible to declare constexpr class in a header and define it in a separate .cpp file?", "Id": "27345284", "Score": "17", "Body": "<p>I have a class <code>Dimension</code> which I defined (like all my classes) in a file Dimension.h:</p>\n<pre><code>class Dimension\n{\npublic:\n\n    constexpr Dimension() noexcept;\n\n    constexpr Dimension(int w, int h) noexcept;\n\n    int width;\n    int height;\n\n};\n</code></pre>\n<p>I thought I could, like in all my classes, put the definition in a separate Dimension.cpp:</p>\n<pre><code>#include \"Dimension.h\"\n\nconstexpr Dimension::Dimension() noexcept : width(0), height(0) {}\n\nconstexpr Dimension::Dimension(int w, int h) noexcept : width(w), height(h) {}\n</code></pre>\n<p>But when I try to use the class, the compiler tells me:</p>\n<p>warning: inline function '<code>constexpr Dimension::Dimension()</code>' used but never defined</p>\n<p>and while linking:</p>\n<p>undefined reference to '<code>pong::graphics::Dimension::Dimension()</code>'</p>\n<p>(same with the other constructor)</p>\n<p>If I define the class in the header like so:</p>\n<pre><code>class Dimension\n{\npublic:\n\n    constexpr Dimension() noexcept : width(0), height(0) {}\n\n    constexpr Dimension(int w, int h) noexcept : width(w), height(h) {}\n\n    int width;\n    int height;\n\n};\n</code></pre>\n<p>and omit the .cpp file, everything works fine.</p>\n<p>I'm using GCC 4.9.2. Why does separate definition not work?</p>\n", "Tags": "<c++><c++11>", "OwnerUserId": "1805439", "AnswerCount": "2"}, "30437876": {"ParentId": "27345284", "CommentCount": "0", "Body": "<p>What you're asking can be accomplished, with a significant limitation: the <em>constexpr</em> function can then only be called from inside the translation unit (i.e. source file) where it is defined. This is not appropriate for the example you gave, since the constructor is meant to be part of the class' public interface. However it can be very useful in other cases, e.g. to define private methods as <em>constexpr</em> and then use their return values in expressions that need to be known at compile time, e.g. template instantiations, switch statement labels, etc.</p>\n", "OwnerUserId": "1268949", "PostTypeId": "2", "Id": "30437876", "Score": "4", "CreationDate": "2015-05-25T11:59:32.563", "LastActivityDate": "2015-05-25T11:59:32.563"}, "bq_ids": {"n4140": {"so_27345284_27345851_0": {"section_id": 5418, "quality": 1.0, "length": 6}, "so_27345284_27345851_1": {"section_id": 5404, "quality": 1.0, "length": 7}}, "n3337": {"so_27345284_27345851_0": {"section_id": 5213, "quality": 1.0, "length": 6}, "so_27345284_27345851_1": {"section_id": 5199, "quality": 1.0, "length": 7}}, "n4659": {"so_27345284_27345851_0": {"section_id": 6839, "quality": 0.6666666666666666, "length": 4}, "so_27345284_27345851_1": {"section_id": 6853, "quality": 1.0, "length": 7}}}, "27345851": {"ParentId": "27345284", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>If a <code>constexpr</code> function is not defined inside the header, the compiler can not see the definition of the <code>constexpr</code> functions while compiling all the other source files.</p>\n<p>Obviously, if it can't see the definition of the functions, it can't perform the steps necessary to calculate them at compile-time. Thus all <code>constexpr</code> functions must be defined everywhere they are used.</p>\n<p>Thanks @IgorTandetnik:<br>\n<strong>[dcl.constexpr] \u00a77.1.5/2</strong> </br></p>\n<blockquote>\n<p id=\"so_27345284_27345851_0\"><code>constexpr</code> functions and <code>constexpr</code> constructors are implicitly inline. </p>\n</blockquote>\n<p><strong>[basic.def.odr] \u00a73.2/4</strong> </p>\n<blockquote>\n<p id=\"so_27345284_27345851_1\">An inline function shall be defined in every translation unit in which it is odr-used.</p>\n</blockquote>\n", "OwnerUserId": "1805439", "LastEditorUserId": "1268131", "LastEditDate": "2017-11-22T19:57:53.687", "Id": "27345851", "Score": "21", "CreationDate": "2014-12-07T17:57:16.900", "LastActivityDate": "2017-11-22T19:57:53.687"}});