post_cb({"bq_ids": {"n4140": {"so_6035845_6035845_0": {"length": 6, "quality": 0.6, "section_id": 7003}}, "n3337": {"so_6035845_6035845_0": {"length": 6, "quality": 0.6, "section_id": 6749}}, "n4659": {"so_6035845_6035845_0": {"length": 6, "quality": 0.6, "section_id": 8500}}}, "6035884": {"Id": "6035884", "PostTypeId": "2", "Body": "<p>The presence of <code>Child::func()</code> hides <em>all</em> overloads of <code>Parent::func</code>, including <code>Parent::func(string&amp;)</code>. You need a \"using\" directive:</p>\n<pre><code>class Child : public Parent\n{\npublic:\n  using Parent::func;\n  Child():Parent(){}\n  virtual ~Child(){}\n  virtual void func(){cout &lt;&lt; \"Child::func(\" &lt;&lt; this-&gt;str &lt;&lt; \")\" &lt;&lt; endl;}\n};\n</code></pre>\n<p>EDIT:\nOr, you may specify the correct scope yourself:</p>\n<pre><code>int main(int argc, char* argv[])\n{\n  string a = \"a\";\n  string b = \"b\";\n  Child o;\n  o.set(a);\n  o.func();\n  o.Parent::func(b);\n  return 0;\n}\n</code></pre>\n", "LastEditorUserId": "8747", "LastActivityDate": "2011-05-17T19:23:47.453", "Score": "11", "CreationDate": "2011-05-17T19:12:51.940", "ParentId": "6035845", "CommentCount": "1", "LastEditDate": "2011-05-17T19:23:47.453", "OwnerUserId": "8747"}, "6035845": {"ViewCount": "2232", "Body": "<blockquote>\n<p id=\"so_6035845_6035845_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/411103/function-with-same-name-but-different-signature-in-derived-class\">Function with same name but different signature in derived class</a> </br></p>\n</blockquote>\n<p>I'm trying to compile this and I can't figure out what is wrong with the code.  I'm using MacOSX Snow Leopard with Xcode g++ version 4.2.1.  Can someone tell me what the issue is?  I think this should compile.  And this is not my homework I'm a developer...at least I thought I was until I got stumped by this.  I get the following error message:</p>\n<pre><code>error: no matching function for call to \u2018Child::func(std::string&amp;)\u2019\nnote: candidates are: virtual void Child::func()\n</code></pre>\n<p>Here is the code:</p>\n<pre><code>#include &lt;string&gt;\n\nusing namespace std;\n\nclass Parent\n{\npublic:\n  Parent(){}\n  virtual ~Parent(){}\n  void set(string s){this-&gt;str = s;}\n  virtual void func(){cout &lt;&lt; \"Parent::func(\" &lt;&lt; this-&gt;str &lt;&lt; \")\" &lt;&lt; endl;}\n  virtual void func(string&amp; s){this-&gt;str = s; this-&gt;func();}\nprotected:\n  string str;\n};\n\nclass Child : public Parent\n{\npublic:\n  Child():Parent(){}\n  virtual ~Child(){}\n  virtual void func(){cout &lt;&lt; \"Child::func(\" &lt;&lt; this-&gt;str &lt;&lt; \")\" &lt;&lt; endl;}\n};\n\nclass GrandChild : public Child\n{\npublic:\n  GrandChild():Child(){}\n  virtual ~GrandChild(){}\n  virtual void func(){cout &lt;&lt; \"GrandChild::func(\" &lt;&lt; this-&gt;str &lt;&lt; \")\" &lt;&lt; endl;}\n};\n\nint main(int argc, char* argv[])\n{\n  string a = \"a\";\n  string b = \"b\";\n  Child o;\n  o.set(a);\n  o.func();\n  o.func(b);\n  return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "6035884", "Title": "Simple C++ Inheritance Example, What's wrong?", "CreationDate": "2011-05-17T19:09:34.527", "Id": "6035845", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2017-05-23T12:06:15.710", "LastEditorUserId": "-1", "LastActivityDate": "2011-05-17T19:23:47.453", "ClosedDate": "2011-05-17T19:15:31.703", "Score": "5", "OwnerUserId": "758021", "Tags": "<c++><oop>", "AnswerCount": "1"}});