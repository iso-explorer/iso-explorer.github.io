post_cb({"15191860": {"ParentId": "15191741", "PostTypeId": "2", "CommentCount": "3", "Body": "<p><code>std::allocator</code>s requirements make its constructors <code>noexcept</code>, as it says <code>shall not exit via an exception</code>. However, the deque's constructor can throw as it is not <code>noexcept</code>.</p>\n", "OwnerUserId": "906773", "LastEditorUserId": "906773", "LastEditDate": "2013-03-03T22:52:55.780", "Id": "15191860", "Score": "0", "CreationDate": "2013-03-03T22:47:31.743", "LastActivityDate": "2013-03-03T22:52:55.780"}, "15191850": {"ParentId": "15191741", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>The C++11 Standard (Paragraph 23.3.3.2) specifies:</p>\n<pre><code>explicit deque(const Allocator&amp; = Allocator());\n</code></pre>\n<blockquote>\n<p id=\"so_15191741_15191850_0\">1 Effects: Constructs an empty deque, using the specified allocator.</p>\n<p id=\"so_15191741_15191850_1\">2 Complexity: Constant.</p>\n</blockquote>\n<p>That's it. No mention is made of the conditions under which this constructor may or may not throw, nor does Clause 23 (dedicated to sequence containers) specify any general exception safety guarantees, and the constructor itself is not marked as (conditionally) <code>noexcept</code>.</p>\n<p>Therefore, one must just assume it can throw.</p>\n", "OwnerUserId": "1932150", "LastEditorUserId": "1932150", "LastEditDate": "2013-03-03T22:52:25.280", "Id": "15191850", "Score": "2", "CreationDate": "2013-03-03T22:46:41.770", "LastActivityDate": "2013-03-03T22:52:25.280"}, "15191741": {"CommentCount": "4", "AcceptedAnswerId": "15191850", "ClosedDate": "2013-03-04T12:56:03.413", "CreationDate": "2013-03-03T22:35:15.550", "LastActivityDate": "2013-03-03T22:52:55.780", "PostTypeId": "1", "ViewCount": "89", "Title": "Does default constructor of deque throw?", "Id": "15191741", "Score": "-1", "Body": "<p>(Assuming allocator's default constructor does not throw)</p>\n<p><a href=\"http://www.boost.org/doc/libs/1_50_0/boost/container/deque.hpp\" rel=\"nofollow\">Boost implementation</a> of Deque says: </p>\n<blockquote>\n<p id=\"so_15191741_15191741_0\">Throws if allocator_type's default constructor throws</p>\n</blockquote>\n<p>What does C++ standard specify ?</p>\n<p>Thanks</p>\n", "Tags": "<c++><stl><deque>", "OwnerUserId": "770118", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_15191741_15191850_0": {"section_id": 800, "quality": 0.8571428571428571, "length": 6}}, "n3337": {"so_15191741_15191850_0": {"section_id": 789, "quality": 0.8571428571428571, "length": 6}}, "n4659": {"so_15191741_15191850_0": {"section_id": 858, "quality": 0.8571428571428571, "length": 6}}}});