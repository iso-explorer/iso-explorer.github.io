post_cb({"19764531": {"ParentId": "19764150", "CommentCount": "2", "Body": "<p>You're mostly on your own. A note in the standard explains this (9.5/2):</p>\n<blockquote>\n<p id=\"so_19764150_19764531_0\">If any non-static data member of a union has a non-trivial default\n  constructor (12.1), copy constructor (12.8), move constructor (12.8), copy assignment operator (12.8), move\n  assignment operator (12.8), or destructor (12.4), the corresponding member function of the union must be\n  user-provided or it will be implicitly deleted (8.4.3) for the union.</p>\n</blockquote>\n<p>So if any of the member constructors are non-trivial, you need to write a constructor for the union (if they are all trivial, the default state will be uninitialized, like for <code>union { int; double; }</code>). If any members have a destructor, you need to write a destructor for the union which must take care of figuring out the active element.</p>\n<p>There's a further note (9.5/4) about typical usage of an unconstrained union:</p>\n<blockquote>\n<p id=\"so_19764150_19764531_1\">In general, one must use explicit destructor calls and placement new operators to change the active\n  member of a union.</p>\n</blockquote>\n", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "19764531", "Score": "11", "CreationDate": "2013-11-04T09:10:07.963", "LastActivityDate": "2013-11-04T09:10:07.963"}, "19764150": {"CommentCount": "0", "AcceptedAnswerId": "19764531", "PostTypeId": "1", "LastEditorUserId": "46642", "CreationDate": "2013-11-04T08:42:10.193", "LastActivityDate": "2016-10-11T11:13:36.370", "LastEditDate": "2013-11-05T10:07:40.743", "ViewCount": "2389", "FavoriteCount": "2", "Title": "Questions regarding C++ non-POD unions", "Id": "19764150", "Score": "9", "Body": "<p>C++11 gave us to possibility to use non-POD types within unions, say I have the following piece of code;</p>\n<pre><code>union\n{\n    T one;\n    V two;\n} uny;\n</code></pre>\n<p>Somewhere within my class, only one member will be active at a time, now my questions are rather simple.</p>\n<ol>\n<li>What is the default value of uny? - undefined?</li>\n<li>Whenever my class is destructed, which members (within the union), if any will be destructed?\n<ul>\n<li>Suppose I have to std::typeinfo to keep track of which is the active member, should I then call the destructor explicitly on that member in the destructor?</li>\n</ul></li>\n<li>Does anyone have a link to the language proposal, which changed unions to accept non-POD types?</li>\n</ol>\n", "Tags": "<c++><c++11><unions><pod><discriminated-union>", "OwnerUserId": "480212", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_19764150_19764531_1": {"section_id": 5916, "quality": 1.0, "length": 14}, "so_19764150_19764531_0": {"section_id": 5914, "quality": 0.8, "length": 28}}, "n3337": {"so_19764150_19764531_1": {"section_id": 5688, "quality": 1.0, "length": 14}, "so_19764150_19764531_0": {"section_id": 5686, "quality": 0.8, "length": 28}}, "n4659": {"so_19764150_19764531_1": {"section_id": 7409, "quality": 0.8571428571428571, "length": 12}, "so_19764150_19764531_0": {"section_id": 7406, "quality": 0.8, "length": 28}}}, "39975980": {"ParentId": "19764150", "CommentCount": "6", "Body": "<p>Alternatives to union:</p>\n<p><code>std::any</code> / <code>std::variant</code>  (C++17)</p>\n<p><code>boost::any</code> / <code>boost::variant</code></p>\n<p>These allow to use non-POD data types.</p>\n", "OwnerUserId": "235472", "PostTypeId": "2", "Id": "39975980", "Score": "0", "CreationDate": "2016-10-11T11:13:36.370", "LastActivityDate": "2016-10-11T11:13:36.370"}});