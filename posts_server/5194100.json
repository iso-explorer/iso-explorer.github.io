post_cb({"5194203": {"ParentId": "5194100", "CommentCount": "0", "Body": "<p>It needs to be a member function according to 13.5.5:</p>\n<blockquote>\n<p id=\"so_5194100_5194203_0\">operator[] shall be a non-static\n  member function with exactly one\n  parameter. It implements the\n  subscripting syntax</p>\n</blockquote>\n<p>A reference to a private member is completely OK and pretty common. You hide the details from the user of your class, but still provide the functionality you need (ability to modify individual elements)</p>\n<p>Your <code>data</code> variable likely shoudn't be static though, unless you really want to share it among all instances of your class</p>\n", "OwnerUserId": "616700", "PostTypeId": "2", "Id": "5194203", "Score": "2", "CreationDate": "2011-03-04T13:18:20.333", "LastActivityDate": "2011-03-04T13:18:20.333"}, "5194225": {"ParentId": "5194100", "PostTypeId": "2", "CommentCount": "0", "Body": "<ul>\n<li><p>As to why is it required to have [] as a member, you can <a href=\"https://stackoverflow.com/questions/3938036/rationale-of-enforcing-some-operators-to-be-members\">read this question</a> (by yours sincerely). Seems it's just the way it is with no really really convincing explanation.</p></li>\n<li><p>As to why return reference?\nBecause you want to provide a way not only to read, but also (for non-const objects) to modify the data. If the return weren't a reference (or some proxyr)</p>\n<p>v[i] = 4; </p>\n<p>wouldn't work.</p></li>\n</ul>\n<p>HTH</p>\n", "OwnerUserId": "469935", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:44:52.027", "Id": "5194225", "Score": "3", "CreationDate": "2011-03-04T13:19:57.970", "LastActivityDate": "2011-03-04T13:19:57.970"}, "5194100": {"CommentCount": "3", "ViewCount": "8481", "CreationDate": "2011-03-04T13:07:59.707", "LastActivityDate": "2011-03-04T13:20:29.150", "Title": "Overloading subscript operator []", "PostTypeId": "1", "Id": "5194100", "Score": "3", "Body": "<p>Why does it require to be a member function of a class for its operation and is good to return a reference to private member?</p>\n<pre><code>class X\n{\npublic:\n\n    int&amp; operator[] (const size_t);\n    const int &amp;operator[] (const size_t) const;\n\nprivate:\n    static std::vector&lt;int&gt; data;\n};\n\nint v[] = {0, 1, 2, 3, 4, 5};\nstd::vector&lt;int&gt; X::data(v, v+6);\n\nint&amp; X::operator[] (const size_t index)\n{\n    return data[index];\n}\n\nconst int&amp; X::operator[] (const size_t index) const\n{\n    return data[index];\n}\n</code></pre>\n", "Tags": "<c++><operator-overloading>", "OwnerUserId": "255412", "AnswerCount": "4"}, "5194217": {"ParentId": "5194100", "CommentCount": "2", "Body": "<p>For the first question, it is just the way they decided it had to be, i.e. you can't do:</p>\n<p><code>T operator[]( const X &amp;, size_t );</code></p>\n<p>as an external function.</p>\n<p>And yes, you are fine returning a reference to a private member, non-const if you allow your users to write there, non-const otherwise.</p>\n<p>In your example though data is static, which does not make sense if that is the source for what it returns.</p>\n", "OwnerUserId": "442284", "PostTypeId": "2", "Id": "5194217", "Score": "2", "CreationDate": "2011-03-04T13:19:19.807", "LastActivityDate": "2011-03-04T13:19:19.807"}, "5194229": {"ParentId": "5194100", "CommentCount": "8", "Body": "<p>What would the syntax be for calling a non-member <code>operator[]</code>? Any syntax for that would be awkward. <code>operator[]</code> takes ones parameter within the <code>[</code> and <code>]</code> and that is usually an index or some kind of data necessary to find an object.</p>\n<p>Also, yes, it is a good idea to return a reference, even if it's a private member. That is exactly what STL vectors do and just about any other class I can think of that I've ever used that provides <code>operator[]</code>. It would be advised that it the usage is maintained.</p>\n", "OwnerUserId": "420116", "PostTypeId": "2", "Id": "5194229", "Score": "-1", "CreationDate": "2011-03-04T13:20:29.150", "LastActivityDate": "2011-03-04T13:20:29.150"}, "bq_ids": {"n4140": {"so_5194100_5194203_0": {"section_id": 663, "quality": 1.0, "length": 10}}, "n3337": {"so_5194100_5194203_0": {"section_id": 653, "quality": 1.0, "length": 10}}, "n4659": {"so_5194100_5194203_0": {"section_id": 691, "quality": 1.0, "length": 10}}}});