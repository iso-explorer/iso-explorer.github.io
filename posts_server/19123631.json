post_cb({"19123769": {"ParentId": "19123631", "CommentCount": "0", "Body": "<p>Looks like you are using C verison of sin/cos. It is difficult to say why without additional info, but fix could be to use C functions sinf/cosf or make sure C++ funcitons are used by std::sin() for example.</p>\n", "OwnerUserId": "432358", "PostTypeId": "2", "Id": "19123769", "Score": "1", "CreationDate": "2013-10-01T18:55:57.217", "LastActivityDate": "2013-10-01T18:55:57.217"}, "19123631": {"CommentCount": "1", "AcceptedAnswerId": "19123761", "PostTypeId": "1", "LastEditorUserId": "980058", "CreationDate": "2013-10-01T18:47:33.173", "LastActivityDate": "2013-10-01T19:24:12.083", "LastEditDate": "2013-10-01T19:02:49.633", "ViewCount": "481", "FavoriteCount": "1", "Title": "float to double misinterpretation??? g++", "Id": "19123631", "Score": "2", "Body": "<p>for some reason I'm getting the following warning</p>\n<pre><code>filename.cpp:99:53: warning: narrowing conversion of \u2018sin(((double)theta))\u2019 from \u2018double\u2019 to \u2018float\u2019 inside { } [-Wnarrowing]\nfilename.cpp:99:66: warning: narrowing conversion of \u2018cos(((double)theta))\u2019 from \u2018double\u2019 to \u2018float\u2019 inside { } [-Wnarrowing]\n</code></pre>\n<p>which makes it sounds like it's trying to use the 'double cos(double)' etc. instead of 'float cos(float)' etc.\nI keep trying to think of more ways to suggest this to the compiler but am not getting anywhere.\nWhat can I do to resolve this?</p>\n<pre><code>void foo(float theta)\n{\n    theta = (float)M_PI*theta/180.0f;\n    MyClass variable = { 1.0f,    0.0f,         0.0f,   0.0f,\n                         0.0f, cos(theta), -sin(theta), 0.0f,\n                         0.0f, sin(theta),  cos(theta), 0.0f,\n                         0.0f,     0.0f,        0.0f,   1.0f };\n    bob = variable;\n}\n</code></pre>\n<p>Thanks</p>\n<hr>\n<p>Edit:\nchanging it to this makes the warnings go away, but I'd still rather know what the problem is</p>\n<pre><code>float C = cos(theta), S = sin(theta);\nMyClass variable = { 1.0f,    0.0f,         0.0f,   0.0f,\n                 0.0f, C, -S, 0.0f,\n                 0.0f, S,  C, 0.0f,\n                 0.0f,     0.0f,        0.0f,   1.0f };\n</code></pre>\n</hr>", "Tags": "<c++><types><casting><g++><narrowing>", "OwnerUserId": "980058", "AnswerCount": "4"}, "19123696": {"ParentId": "19123631", "CommentCount": "1", "Body": "<p>The compiler is complaining that you're using a float where it's expecting a double. You can either cast each use explicitly or just create a local double.</p>\n<p>I'd rewrite your example as follows:</p>\n<pre><code>void foo(float theta)\n{\n    double rad = (double)M_PI*theta/180.0f;\n    MyClass variable = { 1.0f,    0.0f,     0.0f,   0.0f,\n                         0.0f, cos(rad), -sin(rad), 0.0f,\n                         0.0f, sin(rad),  cos(rad), 0.0f,\n                         0.0f,     0.0f,    0.0f,   1.0f };\n    bob = variable;\n}\n</code></pre>\n", "OwnerUserId": "490562", "PostTypeId": "2", "Id": "19123696", "Score": "0", "CreationDate": "2013-10-01T18:51:56.153", "LastActivityDate": "2013-10-01T18:51:56.153"}, "19123686": {"ParentId": "19123631", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>The <code>cos</code> and <code>sin</code> in the <code>cmath</code> library accepts a double as a parameter. The warning is trying to tell you that you are giving it a <code>float</code> and it will have to convert it to a <code>double</code></p>\n<p>The <code>std</code> version of the functions are overloaded, but if you want to use them you will have to call them with their namespace like so <code>std::cos</code></p>\n", "OwnerUserId": "1496443", "LastEditorUserId": "1496443", "LastEditDate": "2013-10-01T18:58:41.573", "Id": "19123686", "Score": "0", "CreationDate": "2013-10-01T18:51:03.437", "LastActivityDate": "2013-10-01T18:58:41.573"}, "19123761": {"ParentId": "19123631", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>You need to use <a href=\"http://en.cppreference.com/w/cpp/numeric/math/sin\" rel=\"nofollow\">std::sin</a> and <a href=\"http://en.cppreference.com/w/cpp/numeric/math/cos\" rel=\"nofollow\">std::cos</a> in place of <code>sin</code> and <code>cos</code> so that you will obtain the properly overloaded versions. You can see the difference <a href=\"http://coliru.stacked-crooked.com/a/c5a6a2e3462504ae\" rel=\"nofollow\">live</a>:</p>\n<pre><code>MyClass variable = { 1.0f,    0.0f,         0.0f,   0.0f,\n                     0.0f, std::cos(theta), -std::sin(theta), 0.0f,\n                     0.0f, std::sin(theta),  std::cos(theta), 0.0f,\n                     0.0f,     0.0f,        0.0f,   1.0f };\n</code></pre>\n<p>It is <a href=\"http://en.wikipedia.org/wiki/Unspecified_behavior\" rel=\"nofollow\">unspecified behavior</a> whether the functions from <em>C libraries</em> are first declared in the global namespace the C++ draft standard section <code>17.6.1.2</code> <em>Headers</em> paragraph <em>4</em> says(<em>emphasis mine</em>):</p>\n<blockquote>\n<p id=\"so_19123631_19123761_0\">Except as noted in Clauses 18 through 30 and Annex D, the contents of each header cname shall be the same as that of the corresponding header name.h, as specified in the C standard library (1.2) or the C Unicode TR, as appropriate, as if by inclusion. In the C++ standard library, however, the declarations (except for names which are defined as macros in C) are within namespace scope (3.3.6) of the namespace std. <strong>It is unspecified whether these names are first declared within the global namespace scope and are then injected into namespace std by explicit using-declarations</strong> (7.3.3).</p>\n</blockquote>\n<p>so in the case where the <em>C library</em> functions were in the global namespace you would be getting the version of <a href=\"http://en.cppreference.com/w/c/numeric/math/cos\" rel=\"nofollow\">cos</a> and <a href=\"http://en.cppreference.com/w/c/numeric/math/sin\" rel=\"nofollow\">sin</a> that only takes <em>double</em> which is consistent with the behavior we are seeing.</p>\n", "OwnerUserId": "1708801", "LastEditorUserId": "1708801", "LastEditDate": "2013-10-01T19:24:12.083", "Id": "19123761", "Score": "2", "CreationDate": "2013-10-01T18:55:24.387", "LastActivityDate": "2013-10-01T19:24:12.083"}, "bq_ids": {"n4140": {"so_19123631_19123761_0": {"section_id": 6259, "quality": 0.9166666666666666, "length": 44}}, "n3337": {"so_19123631_19123761_0": {"section_id": 6019, "quality": 0.9166666666666666, "length": 44}}, "n4659": {"so_19123631_19123761_0": {"section_id": 7763, "quality": 0.8541666666666666, "length": 41}}}});