post_cb({"bq_ids": {"n4140": {"so_15208332_15208332_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 500}}, "n3337": {"so_15208332_15208332_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 491}}, "n4659": {"so_15208332_15208332_0": {"length": 17, "quality": 0.9444444444444444, "section_id": 521}}}, "15208332": {"ViewCount": "89", "Body": "<p>In 16.1.4 (Conditional inclusion) of the C++ standard it says:</p>\n<blockquote>\n<p id=\"so_15208332_15208332_0\">For the purposes of this token conversion and evaluation all signed and unsigned integer types act as if they have the same representation as, respectively, intmax_t or uintmax_t.</p>\n</blockquote>\n<p>I don't understand this.  What does it mean \"act as if they have the same representation as\"?</p>\n<p><code>integer-literals</code> are tokenized to a specific fundamental type depending on their value and suffix as explained in 2.14.2.2.</p>\n<p>Is the 16.1.4 quote saying that their type is somehow \"replaced\" by <code>intmax_t</code> and <code>uintmax_t</code>?  (Is this exactly equivilant to statically casting the integer literals to <code>intmax_t</code> or <code>uintmax_t</code>?)</p>\n", "AcceptedAnswerId": "15208672", "Title": "C++11 condition inclusion controlling expression \"types act as if same representation as\"?", "CreationDate": "2013-03-04T18:23:05.643", "Id": "15208332", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-03-04T18:40:33.827", "Score": "1", "OwnerUserId": "1131467", "Tags": "<c++><c++11>", "AnswerCount": "1"}, "15208672": {"Id": "15208672", "PostTypeId": "2", "Body": "<p>It basically means that the preprocessor doesn't have to deal\nwith type information; it can do all of its integral arithmetic\nin a single type.  Most of the time, it won't make a different,\nbut it does mean that something like <code>UINT_MAX + 1U</code> will result\nin a very big number, where as outside of the preprocessor, it\nwill result in <code>0</code>.</p>\n", "LastActivityDate": "2013-03-04T18:40:33.827", "CommentCount": "0", "CreationDate": "2013-03-04T18:40:33.827", "ParentId": "15208332", "Score": "2", "OwnerUserId": "649665"}});