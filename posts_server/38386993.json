post_cb({"38386993": {"ViewCount": "114", "Body": "<p>Consider</p>\n<pre><code>//#include  stuff\nconst int x=5;\n.\n.\nint main()\n{\nstatic int var=x; \n.\n.\n}\n</code></pre>\n<p>If I understand correctly,</p>\n<ul>\n<li>static variables are zero-initialized whether or not any initialization is indicated, so <code>static int var;</code> alone would set <code>var</code> to zero and <code>static int var=x;</code> also would set <code>var</code> to <code>zero</code> at first.</li>\n<li>Now <code>static int var=x;</code> does a constant expression initialization which IIRC is done after zero-initialization.</li>\n</ul>\n<p>Are static variables <code>initialized multiple times</code> - though the phrase contradicts itself?</p>\n", "AcceptedAnswerId": "38387362", "Title": "Will static variables undergo multiple initialization?", "CreationDate": "2016-07-15T02:29:38.703", "Id": "38386993", "CommentCount": "10", "PostTypeId": "1", "LastActivityDate": "2016-07-15T03:20:01.757", "Score": "1", "OwnerUserId": "1620779", "Tags": "<c++>", "AnswerCount": "1"}, "38387362": {"Id": "38387362", "PostTypeId": "2", "Body": "<p>C++14 states:</p>\n<blockquote>\n<p id=\"so_38386993_38387362_0\">3.6.2 Initialization of non-local variables</p>\n<p id=\"so_38386993_38387362_1\">...</p>\n<p id=\"so_38386993_38387362_2\">Variables with static storage duration (3.7.1) or thread storage\n  duration (3.7.2) shall be zero-initialized (8.5)\n  before any other initialization takes place.</p>\n</blockquote>\n<p>Ok, this appears to be the foundation for this question.</p>\n<blockquote>\n<p id=\"so_38386993_38387362_3\">Constant initialization is performed:</p>\n<p id=\"so_38386993_38387362_4\">[ ... ]</p>\n</blockquote>\n<p>This is followed by the definition of constant initialization. To make a long story short, both <code>const int x=5;</code> and <code>static int var=x;</code> seem to meet the requirements for constant initialization.</p>\n<p>So, based on that, this seems to suggest that \"static variables [are] initialized multiple times\".</p>\n<p>Forging ahead:</p>\n<blockquote>\n<p id=\"so_38386993_38387362_5\">Together, zero-initialization and constant initialization are called\n  static initialization; all other initialization is dynamic\n  initialization. Static initialization shall be performed before any\n  dynamic initialization takes place.</p>\n</blockquote>\n<p>So, both zero-initialization and constant initialization, the \"multiple\" initializations that are the subject matter here, must occur <strong><em>before dynamic initialization</em></strong>.</p>\n<p>From this, I conclude that although, technically, the claim that  \"static variables [are] initialized multiple times\" is true, I don't see any way to actually observe it. You need dynamic initialization to observe something. And dynamic initialization doesn't take place until static initialization is completed.</p>\n<p>From this, it looks to me like the term \"static initialization\", as defined in 3.6.2, isn't really the same \"static initialization\" as in \"static initialization fiasco\". Seems to me that \"static initialization fiasco\" should really be called \"dynamic initialization fiasco\".</p>\n", "LastActivityDate": "2016-07-15T03:20:01.757", "CommentCount": "1", "CreationDate": "2016-07-15T03:20:01.757", "ParentId": "38386993", "Score": "4", "OwnerUserId": "3943312"}, "bq_ids": {"n4140": {"so_38386993_38387362_2": {"length": 13, "quality": 0.8666666666666667, "section_id": 7151}, "so_38386993_38387362_5": {"length": 18, "quality": 0.9, "section_id": 7151}}, "n3337": {"so_38386993_38387362_2": {"length": 13, "quality": 0.8666666666666667, "section_id": 6895}, "so_38386993_38387362_5": {"length": 18, "quality": 0.9, "section_id": 6895}}, "n4659": {"so_38386993_38387362_2": {"length": 9, "quality": 0.6, "section_id": 4051}, "so_38386993_38387362_5": {"length": 14, "quality": 0.7, "section_id": 8652}}}});