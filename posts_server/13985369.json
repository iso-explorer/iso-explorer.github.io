post_cb({"13985369": {"CommentCount": "15", "ViewCount": "395", "PostTypeId": "1", "ClosedDate": "2012-12-21T07:57:48.767", "LastEditorUserId": "-1", "CreationDate": "2012-12-21T06:33:52.213", "LastActivityDate": "2012-12-21T11:00:26.990", "Title": "Can friend class be declared conditionally in C++11?", "AcceptedAnswerId": "13985663", "LastEditDate": "2017-05-23T12:27:40.997", "Id": "13985369", "Score": "0", "Body": "<blockquote>\n<p id=\"so_13985369_13985369_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/13985292/how-to-declare-a-friend-class-conditionally\">How to declare a friend class conditionally?</a> </br></p>\n</blockquote>\n<p>\nThis question branches off from <a href=\"https://stackoverflow.com/questions/13985292/can-friend-class-be-declared-conditionally-in-c03\">Can friend class be declared conditionally in C++03?</a>. Specifically, does C++11 provide any additional options to help with conditionally declaring a friend class? That is, is it at all possible to do this in C++11?</p>\n<p>Going through cplusplus.com, I came across <a href=\"http://cplusplus.com/reference/type_traits/enable_if/\" rel=\"nofollow noreferrer\"><code>std::enable_if</code></a>. I tried using it, but could not figure out the right syntax. Is <code>std::enable_if</code> the right construct to use for this purpose? Below is the code I tried, based on the example given there. I do not really need a template here, but I do not know how to avoid it, since all the example codes given there use it.</p>\n<pre><code>class Foo {\n  template&lt;typename T&gt; struct std::enable_if&lt;true, T&gt; {\n      typedef T Bar;\n      friend class Bar;\n  };\n};\n</code></pre>\n<p>This gives the following compile error message:</p>\n<pre><code>prog.cpp:5:36: error: 'enable_if' is not a template\nprog.cpp:5:55: error: qualified name does not name a class before '{' token\n</code></pre>\n<p><strong>Edit</strong> Just to make this more easily visible, as mentioned below in the comment: This requirement is unusual. This is part of a new research project in hardware simulation, that I am working on. The testbench is written in C++, and I want to display the variables in a waveform. I have researched various other options, and figured out that I need to use a friend class, due to practical considerations. The friend will capture the values and generate the waveform, but I would prefer to have the friend only when the waveform is required, and not all the time. </p>\n", "Tags": "<c++><c++11><std><friend>", "OwnerUserId": "252576", "AnswerCount": "1"}, "13985663": {"ParentId": "13985369", "CommentCount": "0", "Body": "<p>[class.friend]/3 tells this :</p>\n<blockquote>\n<p id=\"so_13985369_13985663_0\">A friend declaration that does not declare a function shall have one of the following forms:<br>\n<code></code>  friend elaborated-type-specifier ;<br>\n<code></code>  friend simple-type-specifier ;<br>\n<code></code>  friend typename-specifier ;  </br></br></br></p>\n</blockquote>\n<p>therefore it is not possible to conditionally declare friends of a class.</p>\n<p>Actually, you can do it with a macro :</p>\n<pre><code>class Foo {\n\n#ifdef DECLARE_A_FRIEND\n      friend class Bar;\n#endif\n  };\n};\n</code></pre>\n<p>and then define or undefine the macro as a compilation parameter.</p>\n", "OwnerUserId": "476681", "PostTypeId": "2", "Id": "13985663", "Score": "1", "CreationDate": "2012-12-21T06:58:39.007", "LastActivityDate": "2012-12-21T06:58:39.007"}, "bq_ids": {"n4140": {"so_13985369_13985663_0": {"section_id": 6686, "quality": 0.8, "length": 12}}, "n3337": {"so_13985369_13985663_0": {"section_id": 6441, "quality": 0.8, "length": 12}}, "n4659": {"so_13985369_13985663_0": {"section_id": 8161, "quality": 0.8, "length": 12}}}});