post_cb({"37633691": {"CommentCount": "2", "ViewCount": "274", "CreationDate": "2016-06-04T18:32:31.587", "LastActivityDate": "2016-06-04T19:59:58.817", "Title": "How to store \"\\0\" in C++ char array?", "AcceptedAnswerId": "37633717", "PostTypeId": "1", "Id": "37633691", "Score": "-1", "Body": "<p>According to the C++ char array rules it ends with \\0 null character. If i want to save and print <code>\\0</code> in C++ char array how to do it    </p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\n    char name[] = {'H', 'o', 'n', 'd', 'a', '\\0'};\n    cout &lt;&lt; name; // how to print Honda\\0\n    return 0;\n}\n</code></pre>\n", "Tags": "<c++><arrays>", "OwnerUserId": "5891365", "AnswerCount": "4"}, "37633859": {"ParentId": "37633691", "PostTypeId": "2", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_37633691_37633859_0\">According to the C++ char array rules it ends with \\0 null character.</p>\n</blockquote>\n<p>There is no rule saying that char <em>arrays</em> end with null character in general. However, it is true that character <em>strings</em> must end so, and that character arrays passed to a stream must be character strings.</p>\n<blockquote>\n<p id=\"so_37633691_37633859_1\">If i want to save and print \\0 in C++ char array how to do it</p>\n</blockquote>\n<p>You cannot do so as part of a character string.</p>\n<p>But, you can print it individually, as a standalone character:</p>\n<pre><code>char nul = '\\0'\nstd::cout &lt;&lt; nul;\n</code></pre>\n<p>However, if you expect to see something in a terminal, then you may be disappointed because <code>\\0</code> is a non printable character. If you pipe the program output to <code>hexdump</code> or similar tool, then you can see that the null character (i.e. value zero) is part of the output of the program.</p>\n<p>If your goal is instead to print the characters <code>\\</code> and <code>0</code>, simply make those characters part of the string (as already shown in other answers, but I'll include it here for completeness). Remember that the escape character must be escaped.</p>\n<pre><code>char name[] = {'H', 'o', 'n', 'd', 'a', '\\\\', '0' '\\0'};\n</code></pre>\n", "OwnerUserId": "2079303", "LastEditorUserId": "2079303", "LastEditDate": "2016-06-04T19:01:22.887", "Id": "37633859", "Score": "2", "CreationDate": "2016-06-04T18:54:48.383", "LastActivityDate": "2016-06-04T19:01:22.887"}, "37633712": {"ParentId": "37633691", "CommentCount": "0", "Body": "<p>You need to store <code>'\\\\'</code> and a <code>'0'</code>, as well as a <code>'\\0'</code> at the end to terminate it. The <code>'\\\\'</code> has two backslashes because one of them is the escape character.</p>\n", "OwnerUserId": "5672740", "PostTypeId": "2", "Id": "37633712", "Score": "3", "CreationDate": "2016-06-04T18:35:02.130", "LastActivityDate": "2016-06-04T18:35:02.130"}, "37634480": {"ParentId": "37633691", "CommentCount": "0", "Body": "<p>If you mean by <code>'\\0'</code> the <strong>single</strong> terminating character at the end of a C string, you don't have to store it explicitly as the other answers have explained.  Note that storing extra <code>'\\'</code> and <code>'0'</code> printable characters before the terminating <code>'\\0'</code> <strong>single</strong> character is not the same as printing/storing the terminating <code>'\\0'</code>.</p>\n<p>You can't print the terminating <code>'\\0'</code> value of a C string using <code>[f]printf( \"%s\", ... );</code>  Per the <a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf\" rel=\"nofollow\">C Standard</a>, <strong>7.21.6.1  The <code>fprintf</code> function</strong></p>\n<blockquote>\n<p id=\"so_37633691_37634480_0\">If no <code>l</code> length modifier is present, the argument shall be a pointer\n  to the initial element  of  an  array  of  character  type.\n  <strong>Characters  from  the  array  are written  up  to  (but  not  including)  the  terminating  null  character.</strong>   If  the precision \n  is  specified,  no  more  than  that  many  bytes  are  written.   If \n  the precision is not specified or is greater than the size of the\n  array, the array shall contain a null character.</p>\n</blockquote>\n<p>You can't print the actual <code>'\\0'</code> character itself, as it's non-printing, but you can print a string to represent it:</p>\n<pre><code>void printStrAndTerm( FILE *fp, const unsigned char *str )\n{\n    do\n    {\n        if ( *str )\n        {\n            fputc( *str, fp );\n        }\n        else\n        {\n            fputs( \"\\\\0\", fp );\n        }\n        str++;\n    }\n    while ( *str );\n}\n</code></pre>\n", "OwnerUserId": "4756299", "PostTypeId": "2", "Id": "37634480", "Score": "0", "CreationDate": "2016-06-04T19:59:58.817", "LastActivityDate": "2016-06-04T19:59:58.817"}, "bq_ids": {"n4140": {"so_37633691_37633859_0": {"section_id": 5313, "quality": 0.5714285714285714, "length": 4}}, "n3337": {"so_37633691_37633859_0": {"section_id": 5110, "quality": 0.5714285714285714, "length": 4}}, "n4659": {"so_37633691_37633859_0": {"section_id": 6737, "quality": 0.5714285714285714, "length": 4}}}, "37633717": {"ParentId": "37633691", "CommentCount": "2", "Body": "<p>Escape characters have to be escaped</p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{\n    char name[] = {'H', 'o', 'n', 'd', 'a', '\\\\', '0', '\\0'};\n                                         // ^^^^^^^^^^\n    cout &lt;&lt; name; // prints Honda\\0\n    return 0;\n}\n</code></pre>\n", "OwnerUserId": "1413395", "PostTypeId": "2", "Id": "37633717", "Score": "5", "CreationDate": "2016-06-04T18:35:31.793", "LastActivityDate": "2016-06-04T18:35:31.793"}});