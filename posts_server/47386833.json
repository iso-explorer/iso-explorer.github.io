post_cb({"47386833": {"CommentCount": "2", "ViewCount": "33", "CreationDate": "2017-11-20T07:22:00.810", "LastActivityDate": "2017-11-20T07:27:40.373", "Title": "C++ array as function parameter", "PostTypeId": "1", "Id": "47386833", "Score": "0", "Body": "<pre><code>using Data = char[10];\nvoid f(Data x)\n{\n    x = nullptr; // this compiles\n}\nvoid g(Data &amp;x)\n{\n    x = nullptr; // this does not compile, msvc complain \"expression must be a modifiable lvalue\n}\n</code></pre>\n<p>I am confused why the assignment expression in f compiles, but does not compile in g. I expect that both assignment will fail since array type is not modifiable.</p>\n<p>Any reference to c++ standard will be appreciated.</p>\n", "Tags": "<c++>", "OwnerUserId": "5065370", "AnswerCount": "1"}, "47386921": {"ParentId": "47386833", "CommentCount": "2", "Body": "<p>This has everything to do with function parameter type adjustment (<a href=\"https://timsong-cpp.github.io/cppwp/n4659/dcl.fct#5\" rel=\"nofollow noreferrer\">[dcl.fct]/5</a>):</p>\n<blockquote>\n<p id=\"so_47386833_47386921_0\">After determining the type of each parameter, any parameter of type\n  \u201carray of T\u201d or of function type T is adjusted to be \u201cpointer to T\u201d.</p>\n</blockquote>\n<p>Since a type alias is equivalent to the type it names, in the first case the type is determined as <code>char[10]</code> and adjusted to <code>char*</code>. You can modify a pointer.</p>\n<p>In the second case, you form a <code>char(&amp;)[10]</code>. It's a reference to an array, and arrays cannot be assigned to, even via a reference.</p>\n", "OwnerUserId": "817643", "PostTypeId": "2", "Id": "47386921", "Score": "2", "CreationDate": "2017-11-20T07:27:40.373", "LastActivityDate": "2017-11-20T07:27:40.373"}, "bq_ids": {"n4140": {"so_47386833_47386921_0": {"section_id": 3241, "quality": 0.9166666666666666, "length": 11}}, "n3337": {"so_47386833_47386921_0": {"section_id": 3114, "quality": 0.9166666666666666, "length": 11}}, "n4659": {"so_47386833_47386921_0": {"section_id": 3997, "quality": 1.0, "length": 12}}}});