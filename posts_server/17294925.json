post_cb({"bq_ids": {"n4140": {"so_17294925_17299103_0": {"length": 17, "quality": 0.7083333333333334, "section_id": 3298}, "so_17294925_17299103_1": {"length": 17, "quality": 0.9444444444444444, "section_id": 3299}}, "n3337": {"so_17294925_17299103_0": {"length": 20, "quality": 0.8333333333333334, "section_id": 3168}, "so_17294925_17299103_1": {"length": 17, "quality": 0.9444444444444444, "section_id": 3169}}, "n4659": {"so_17294925_17299103_1": {"length": 13, "quality": 0.7222222222222222, "section_id": 4065}}}, "17294925": {"ViewCount": "629", "Body": "<p>In the following code</p>\n<pre><code>struct BinaryNode {\n  int val;\n  BinaryNode *leftchild, *rightchild;\n};\n\nstruct NaryNode {\n  int val;\n  std::vector&lt;NaryNode*&gt; children;\n};\n</code></pre>\n<p>I can initialize the first struct as</p>\n<pre><code>  std::unique_ptr&lt;BinaryNode&gt; bnode1(new BinaryNode{4});\n</code></pre>\n<p>but the second one fails</p>\n<pre><code>  std::unique_ptr&lt;NaryNode&gt; nnode1(new NaryNode{4});\n</code></pre>\n<p>What gives ?</p>\n<p>EDIT: The compiler error is</p>\n<pre><code>tree.cpp: In function \u2018int main()\u2019:\ntree.cpp:41:68: error: no matching function for call to \u2018NaryNode::NaryNode(&lt;brace-enclosed initializer list&gt;)\u2019\ntree.cpp:41:68: note: candidates are:\ntree.cpp:10:8: note: NaryNode::NaryNode()\ntree.cpp:10:8: note:   candidate expects 0 arguments, 2 provided\ntree.cpp:10:8: note: NaryNode::NaryNode(const NaryNode&amp;)\ntree.cpp:10:8: note:   candidate expects 1 argument, 2 provided\ntree.cpp:10:8: note: NaryNode::NaryNode(NaryNode&amp;&amp;)\ntree.cpp:10:8: note:   candidate expects 1 argument, 2 provided\n</code></pre>\n<p>Version:</p>\n<pre><code>$ g++ --version\ng++ (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3\n</code></pre>\n<p>Build command:</p>\n<pre><code>$ g++ -std=c++0x tree.cpp\n</code></pre>\n", "AcceptedAnswerId": "17299103", "Title": "Brace initialization of structs", "CreationDate": "2013-06-25T10:28:06.060", "Id": "17294925", "CommentCount": "2", "LastEditDate": "2013-06-25T11:01:40.980", "PostTypeId": "1", "LastEditorUserId": "387527", "LastActivityDate": "2013-06-25T13:47:41.413", "Score": "2", "OwnerUserId": "387527", "Tags": "<c++11><brace-initialization>", "AnswerCount": "1"}, "17299103": {"Id": "17299103", "PostTypeId": "2", "Body": "<p>From section <em>8.5.1 Aggregates</em> of the c++11 standard (draft n3337):</p>\n<blockquote>\n<p id=\"so_17294925_17299103_0\">1 An aggregate is an array or a class (Clause 9) with no user-provided constructors (12.1), no brace-or-equal initializers for non-static data members (9.2), no private or protected non-static data members (Clause 11), no base classes (Clause 10), and no virtual functions (10.3).</p>\n<p id=\"so_17294925_17299103_1\">2 When an aggregate is initialized by an initializer list, as specified in 8.5.4, the elements of the initializer list\n  are taken as initializers for the members of the aggregate, in increasing subscript or member order...</p>\n</blockquote>\n<p>And from section <em>8.5.4 List-initialization</em>:</p>\n<blockquote>\n<p id=\"so_17294925_17299103_2\">List-initialization can be used</p>\n<ul>\n<li>as the initializer in a variable definition (8.5)</li>\n<li><strong>as the initializer in a new expression (5.3.4)</strong></li>\n</ul>\n</blockquote>\n<p>This means <code>NaryNode</code> is an aggregate and can be list initialized (using <code>{}</code>).\nThe compiler is incorrect to reject the <code>NaryNode</code> snippet, g++ v4.7.2 compiles it fine (see <a href=\"http://ideone.com/LewfQE\" rel=\"nofollow\">http://ideone.com/LewfQE</a>).</p>\n", "LastActivityDate": "2013-06-25T13:47:41.413", "CommentCount": "1", "CreationDate": "2013-06-25T13:47:41.413", "ParentId": "17294925", "Score": "2", "OwnerUserId": "1033896"}});