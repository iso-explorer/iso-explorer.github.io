post_cb({"5406199": {"CommentCount": "8", "AcceptedAnswerId": "5406262", "OwnerDisplayName": "user673114", "CreationDate": "2011-03-23T13:48:06.200", "LastActivityDate": "2011-03-23T13:55:16.440", "PostTypeId": "1", "ViewCount": "8936", "FavoriteCount": "7", "Title": "Overloading operator new for a class", "Id": "5406199", "Score": "19", "Body": "<p>When we overload new operator of a class, we declare the function as a member function.\nFor eg:</p>\n<pre><code>class OpNew {\npublic:\n    OpNew() { cout &lt;&lt; \"OpNew::OpNew()\" &lt;&lt; endl;}\n    void* operator new(size_t sz) {\n         cout &lt;&lt; \"OpNew::new: \"\n            &lt;&lt; sz &lt;&lt; \" bytes\" &lt;&lt; endl;\n         return ::new char[sz];\n    }\n};\n</code></pre>\n<p>How does the statement <code>OpNew *obj = new OpNew</code> work under the hood ? as overloaded new is a member of OpNew class not a static. So how does compiler ensure this call to <code>new</code> member  function succeeds? </p>\n", "Tags": "<c++><operator-overloading><new-operator>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_5406199_5406262_0": {"section_id": 413, "quality": 0.9, "length": 9}}, "n3337": {"so_5406199_5406262_0": {"section_id": 404, "quality": 0.9, "length": 9}}, "n4659": {"so_5406199_5406262_0": {"section_id": 431, "quality": 0.9, "length": 9}}}, "5406262": {"ParentId": "5406199", "CommentCount": "1", "Body": "<p><a href=\"http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/index.jsp?topic=/com.ibm.xlcpp8a.doc/language/ref/cplr381.htm\" rel=\"noreferrer\">An <code>operator new()</code> or <code>operator new[]()</code> for a class is always a static class member, even if it is not declared with the keyword static.</a></p>\n<p>What the C++ standard says (draft n3242), in section <code>[class.free]</code>:</p>\n<blockquote>\n<p id=\"so_5406199_5406262_0\">Any allocation function for a class <code>T</code> is a static member (even if not explicitly declared <code>static</code>).</p>\n</blockquote>\n", "OwnerUserId": "103167", "PostTypeId": "2", "Id": "5406262", "Score": "31", "CreationDate": "2011-03-23T13:52:35.277", "LastActivityDate": "2011-03-23T13:52:35.277"}});