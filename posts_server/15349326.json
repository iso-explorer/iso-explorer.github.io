post_cb({"bq_ids": {"n4140": {"so_15349326_15349503_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 4188}}, "n3337": {"so_15349326_15349503_1": {"length": 21, "quality": 0.9545454545454546, "section_id": 4031}}, "n4659": {"so_15349326_15349503_1": {"length": 19, "quality": 0.8636363636363636, "section_id": 5448}}}, "15349503": {"Id": "15349503", "PostTypeId": "2", "Body": "<p>It says it is ill-formed as from 20.6.3p1 since it doesn't have <code>element_type</code> and is not a class template instantiation</p>\n<blockquote>\n<p id=\"so_15349326_15349503_0\">typedef see below element_type;</p>\n<p id=\"so_15349326_15349503_1\">Type: Ptr::element_type if such a\n  type exists; otherwise, T if Ptr is a class template instantiation of\n  the form <code>SomePointer&lt;T, Args&gt;</code>, where Args is zero or more type\n  arguments; <strong>otherwise, the specialization is ill-formed</strong>.</p>\n</blockquote>\n", "LastActivityDate": "2013-03-11T21:58:19.067", "CommentCount": "5", "CreationDate": "2013-03-11T21:58:19.067", "ParentId": "15349326", "Score": "5", "OwnerUserId": "906773"}, "15349326": {"ViewCount": "323", "Body": "<p>What is the result of following? Is it illformed, undefined behavior or welldefined and wellformed? </p>\n<pre><code>struct A {};\nstd::pointer_traits&lt;A&gt; x;\n</code></pre>\n<p>The reason I ask is because I want to know for curiousity, and because I want to know whether an arbitrary type is a pointer. With that I also mean to include shared_ptr and friends. I wondered whether there is a type trait (predicate) for that or, if not, whether I can use pointer_traits and detect whether element_type is declared or not.</p>\n", "AcceptedAnswerId": "15349503", "Title": "What does pointer_traits provide for types that are neither X<A, T...> nor provide a member typedef element_type?", "CreationDate": "2013-03-11T21:47:20.797", "Id": "15349326", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2013-03-11T21:58:19.067", "Score": "4", "OwnerUserId": "34509", "Tags": "<c++><pointers><c++11>", "AnswerCount": "1"}});