post_cb({"7668488": {"ParentId": "7661691", "CommentCount": "0", "Body": "<p>David Schwartz already answered for C++. For the C99 standard we have 6.3.1.4:</p>\n<blockquote>\n<p id=\"so_7661691_7668488_0\">When any scalar value is converted to _Bool, the result is 0 if the\n  value compares equal to 0; otherwise, the result is 1.</p>\n</blockquote>\n<p>Since 6.3.1.1 of the standard also makes it clear that _Bool is subject to integer promotions it's clear that a _Bool will always be either 0 or 1.</p>\n", "OwnerUserId": "669056", "PostTypeId": "2", "Id": "7668488", "Score": "1", "CreationDate": "2011-10-05T22:26:51.510", "LastActivityDate": "2011-10-05T22:26:51.510"}, "7661785": {"ParentId": "7661691", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>For compilers, the rule is often that false is 0 and anything else will be true. However, treating bool like it is an integer type is usually considered bad form. The standard however include a rule to convert to int and you assumption is correct false = 0 and true = 1 as long as the compiler adhere to the standard!</p>\n<p>In any case, why arithmetic with bool types?</p>\n<p>Hope this help</p>\n", "OwnerUserId": "972949", "LastEditorUserId": "972949", "LastEditDate": "2011-10-05T13:25:38.570", "Id": "7661785", "Score": "1", "CreationDate": "2011-10-05T13:09:37.173", "LastActivityDate": "2011-10-05T13:25:38.570"}, "7661691": {"CommentCount": "10", "AcceptedAnswerId": "7661768", "CreationDate": "2011-10-05T13:01:03.120", "LastActivityDate": "2011-10-05T22:26:51.510", "PostTypeId": "1", "ViewCount": "2402", "FavoriteCount": "1", "Title": "Summing bool values in C/C++", "Id": "7661691", "Score": "6", "Body": "<p>Consider the C++ code below:</p>\n<pre><code>bool a = 5;\nbool b = 6;\nint c = (int)a + (int)b;\n</code></pre>\n<p>When I compile&amp;run this code, c has the value 2. Does the standard guarantee that, in any compiler/platform, bool values initialized with false (0) or true (not necessarily 1) will be 1 in operations and the code above will always result in c being 2?</p>\n<p>And in C99, including stdbool.h, is that still valid?</p>\n", "Tags": "<c++><c99>", "OwnerUserId": "467411", "AnswerCount": "4"}, "7662054": {"ParentId": "7661691", "CommentCount": "0", "Body": "<p>According to the standard:</p>\n<ul>\n<li><code>true</code> converts to 1</li>\n<li><code>false</code> converts to 0</li>\n</ul>\n<p>And he cast to <code>int</code> is not necessary as the conversion to <code>int</code> is implicit.</p>\n", "OwnerUserId": "963864", "PostTypeId": "2", "Id": "7662054", "Score": "1", "CreationDate": "2011-10-05T13:30:55.207", "LastActivityDate": "2011-10-05T13:30:55.207"}, "bq_ids": {"n4140": {"so_7661691_7661768_0": {"section_id": 33, "quality": 1.0, "length": 11}}, "n3337": {"so_7661691_7661768_0": {"section_id": 30, "quality": 1.0, "length": 11}}, "n4659": {"so_7661691_7661768_0": {"section_id": 33, "quality": 1.0, "length": 11}}}, "7661768": {"ParentId": "7661691", "CommentCount": "1", "Body": "<p>Section 4.7 (integer versions) of the C++ standard says:</p>\n<blockquote>\n<p id=\"so_7661691_7661768_0\">If the source type is <em>bool</em>, the value <em>false</em> is converted to\n  zero and the value <em>true</em> is converted to one.</p>\n</blockquote>\n<p>Section 4.9 makes the same guarantee for floating point conversions.</p>\n", "OwnerUserId": "721269", "PostTypeId": "2", "Id": "7661768", "Score": "9", "CreationDate": "2011-10-05T13:08:01.977", "LastActivityDate": "2011-10-05T13:08:01.977"}});