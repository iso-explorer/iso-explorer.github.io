post_cb({"4632601": {"ParentId": "4632528", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Besides, what <a href=\"https://stackoverflow.com/questions/4632528/what-does-class-cls-mean-in-cs-function-definition/4632533#4632533\">James</a> explained in <a href=\"https://stackoverflow.com/questions/4632528/what-does-class-cls-mean-in-cs-function-definition/4632533#4632533\">his response</a>, let me add one more important point to it. </p>\n<p>While you can write <code>Class* &amp;</code> (<strong>reference to pointer</strong>) which is perfectly valid in C++ only, you cannot write <code>Class&amp; *</code> (pointer to reference), as you <strong>cannot</strong> have <strong>a pointer to a reference</strong> to any type. In C++, pointer to reference is illegal.</p>\n<p>\u00a78.3.2/4 from the language specification reads, </p>\n<blockquote>\n<p id=\"so_4632528_4632601_0\">There shall be no references to\n  references, no arrays of references,\n  and <strong>no pointers to references</strong>.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p id=\"so_4632528_4632601_1\">If I have Class c, what should I pass\n  to function1()?</p>\n</blockquote>\n<p>You can write your calling code like this:</p>\n<pre><code>Class *ptrClass;\n\n//your code; may be you want to initialize ptrClass;\n\nfunction1(ptrClass);\n\n//if you change the value of the pointer (i.e ptrClass) in function1(),\n//that value will be reflected here!\n//your code\n</code></pre>\n</hr>", "OwnerUserId": "415784", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:59:35.097", "Id": "4632601", "Score": "8", "CreationDate": "2011-01-08T05:53:16.030", "LastActivityDate": "2011-01-08T19:59:59.720"}, "4632533": {"ParentId": "4632528", "CommentCount": "0", "Body": "<p>For a type <code>T</code>, <code>T*</code> is a pointer to an object of type <code>T</code>, so <code>Class*</code> is a pointer to a <code>Class</code> object.  </p>\n<p>For a type <code>T</code>, <code>T&amp;</code> is a reference to an object of type <code>T</code>, so putting them together, <code>Class*&amp;</code> is a reference to a pointer to a <code>Class</code> object.</p>\n", "OwnerUserId": "151292", "PostTypeId": "2", "Id": "4632533", "Score": "7", "CreationDate": "2011-01-08T05:30:41.987", "LastActivityDate": "2011-01-08T05:30:41.987"}, "4632528": {"CommentCount": "0", "AcceptedAnswerId": "4632601", "CreationDate": "2011-01-08T05:29:52.993", "LastActivityDate": "2011-01-08T19:59:59.720", "PostTypeId": "1", "ViewCount": "1266", "FavoriteCount": "4", "Title": "What does \"Class* &cls\" mean in C++'s function definition?", "Id": "4632528", "Score": "4", "Body": "<p>I know Class *cls is a pointer, and Class &amp;cls takes the address, but what is </p>\n<pre><code>void fucction1( Class *&amp;cls)\n</code></pre>\n<p>If I have <code>Class c</code>, what should I pass to <code>function1()</code>?</p>\n<p>Thanks!</p>\n", "Tags": "<c++>", "OwnerUserId": "397390", "AnswerCount": "4"}, "4632709": {"ParentId": "4632528", "CommentCount": "0", "Body": "<p>As said, a reference to a pointer to Class.</p>\n<ul>\n<li>you pass a <code>Class *</code> to the function</li>\n<li>the function may change the pointer  to a different one</li>\n</ul>\n<p>This is a rather uncommon interface, <strong>you need more details</strong> to know what pointers are expected, and what you have to do with them.</p>\n<p>Two examples:</p>\n<p><strong>Iteration</strong> </p>\n<pre><code>bool GetNext(Classs *&amp; class)\n{\n   if (class == 0)  \n   {\n     class = someList.GetFirstObject();\n     return true;\n   }\n\n   class = somePool.GetObjectAbove(class); // get next\n   return class != 0;       \n}\n\n// Use for oterating through items:\nClass * value = 0;\nwhile (GetNext(value))\n   Handle(value);\n</code></pre>\n<p><strong>Something completely different</strong></p>\n<pre><code>void function (Class *&amp; obj)\n{\n    if (IsFullMoon())\n    {\n      delete obj;\n      obj = new Class(GetMoonPos());\n    }\n}\n</code></pre>\n<p>In that case, the pointer you pass must be new-allocated, and the pointer you receive you need to pass either to <code>function</code> again, or be <code>delete</code>'d by you.</p>\n", "OwnerUserId": "31317", "PostTypeId": "2", "Id": "4632709", "Score": "0", "CreationDate": "2011-01-08T06:28:42.713", "LastActivityDate": "2011-01-08T06:28:42.713"}, "4632607": {"ParentId": "4632528", "CommentCount": "0", "Body": "<pre><code>Class c;\nClass* c_ptr = &amp;c;\nfunction1(c_ptr);\n</code></pre>\n<p>Would work. But note that rvalue-references is only possible with C++0x which most compilers haven't fully implemented them. Thus the following wouldn't work:</p>\n<pre><code>Class c;\nfunction1(&amp;c);\n</code></pre>\n", "OwnerUserId": "554791", "PostTypeId": "2", "Id": "4632607", "Score": "0", "CreationDate": "2011-01-08T05:54:37.513", "LastActivityDate": "2011-01-08T05:54:37.513"}, "bq_ids": {"n4140": {"so_4632528_4632601_0": {"section_id": 3222, "quality": 1.0, "length": 7}}, "n3337": {"so_4632528_4632601_0": {"section_id": 3096, "quality": 1.0, "length": 7}}, "n4659": {"so_4632528_4632601_0": {"section_id": 3979, "quality": 1.0, "length": 7}}}});