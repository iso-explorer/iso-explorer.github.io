post_cb({"6555826": {"CommentCount": "1", "ViewCount": "109", "PostTypeId": "1", "LastEditorUserId": "168225", "CreationDate": "2011-07-02T07:59:35.187", "LastActivityDate": "2011-07-02T08:20:26.340", "Title": "Argument deduction for template member functions does not work for classes declared inside function?", "AcceptedAnswerId": "6555871", "LastEditDate": "2011-07-02T08:10:38.803", "Id": "6555826", "Score": "5", "Body": "<pre><code>struct Test\n{\n        template &lt;class T&gt;\n        void print(T&amp; t)\n    {\n        t.print();\n    }\n};\n\nstruct A\n{\n    void print() {printf( \"A\");}\n};\n\nstruct B\n{\n    void print() {printf( \"B\");}\n};\n\nvoid test_it()\n{   \n    A a;\n    B b;\n\n    Test t;\n    t.print(a);\n    t.print(b);\n}\n</code></pre>\n<p>This compiles fine.</p>\n<pre><code>struct Test\n{\n        template &lt;class T&gt;\n        void print(T&amp; t)\n    {\n        t.print();\n    }\n};\n\n\nvoid test_it()\n{   \n    struct A\n    {\n        void print() {printf( \"A\");}\n    };\n\n    struct B\n    {\n        void print() {printf( \"B\");}\n    };\n\n    A a;\n    B b;\n\n    Test t;\n    t.print(a);\n    t.print(b);\n}\n</code></pre>\n<p>This fails with error :\nno matching function for call to 'Test::print(test_it()::A&amp;)'</p>\n<p>Can anyone explain me why this happen ?\nThanks!!!</p>\n", "Tags": "<c++><templates>", "OwnerUserId": "637464", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_6555826_6555871_0": {"section_id": 7141, "quality": 0.6666666666666666, "length": 8}}, "n3337": {"so_6555826_6555871_0": {"section_id": 6885, "quality": 0.6666666666666666, "length": 8}}, "n4659": {"so_6555826_6555871_0": {"section_id": 8642, "quality": 0.6666666666666666, "length": 8}}}, "6555871": {"ParentId": "6555826", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>In your second example, <code>A</code> and <code>B</code> are local types, which can't be used as template type arguments in C++03 as per <em>\u00a714.3.1/2</em>:</p>\n<blockquote>\n<p id=\"so_6555826_6555871_0\">A local type, a type with no linkage, an unnamed type or a type compounded from any of these types shall not be used as a template-argument for a template type-parameter.</p>\n</blockquote>\n", "OwnerUserId": "168225", "LastEditorUserId": "168225", "LastEditDate": "2011-07-02T08:20:26.340", "Id": "6555871", "Score": "8", "CreationDate": "2011-07-02T08:09:30.097", "LastActivityDate": "2011-07-02T08:20:26.340"}});