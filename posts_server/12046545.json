post_cb({"bq_ids": {"n4140": {"so_12046545_12046591_0": {"length": 30, "quality": 0.7142857142857143, "section_id": 64}}, "n3337": {"so_12046545_12046591_0": {"length": 30, "quality": 0.7142857142857143, "section_id": 59}}, "n4659": {"so_12046545_12046591_0": {"length": 30, "quality": 0.7142857142857143, "section_id": 66}}}, "12046591": {"Id": "12046591", "PostTypeId": "2", "Body": "<p>It's complicated. From the C++11 spec:</p>\n<blockquote>\n<p id=\"so_12046545_12046591_0\">If a template-parameter of a class template has a default template-argument, each subsequent template- parameter shall either have a default template-argument supplied or be a template parameter pack. If a template-parameter of a primary class template is a template parameter pack, it shall be the last template- parameter . [ Note: These are not requirements for function templates or class template partial specializations because template arguments can be deduced (14.8.2).</p>\n</blockquote>\n<p>So what you're trying to do is not allowed for classes, unless it's a partial specialization. But for functions it's ok.</p>\n<p>So as long as you're only doing this trick with functions as you show in your example, it's ok. You just can't generalize that to class templates.</p>\n", "LastActivityDate": "2012-08-20T23:28:17.873", "Score": "9", "CreationDate": "2012-08-20T23:28:17.873", "ParentId": "12046545", "CommentCount": "0", "OwnerUserId": "582"}, "12046545": {"ViewCount": "87", "Body": "<p>The following compile with no problem in g++ :</p>\n<pre><code>template&lt;typename ReturnType = double, typename OtherType&gt; ReturnType func(const OtherType&amp; var)\n{\n    ReturnType result = 0;\n    /* SOMETHING */\n    return result;\n}\n</code></pre>\n<p>Is it ok for all standard-compliant compilers to have a not-defaulted template parameter (<code>OtherType</code> here) after a defaulted template parameter (<code>ReturnType</code> here) ?</p>\n", "AcceptedAnswerId": "12046591", "Title": "Default template parameter before deduced parameter in a function?", "CreationDate": "2012-08-20T23:21:02.820", "Id": "12046545", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2012-08-20T23:28:17.873", "Score": "5", "OwnerUserId": "882932", "Tags": "<c++><templates><c++11>", "AnswerCount": "1"}});