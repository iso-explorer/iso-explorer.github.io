post_cb({"bq_ids": {"n4140": {"so_39961314_39961431_0": {"length": 21, "quality": 0.9130434782608695, "section_id": 7176}, "so_39961314_39961431_1": {"length": 21, "quality": 0.9130434782608695, "section_id": 6270}}, "n3337": {"so_39961314_39961431_0": {"length": 21, "quality": 0.9130434782608695, "section_id": 6920}, "so_39961314_39961431_1": {"length": 19, "quality": 0.8260869565217391, "section_id": 6030}}, "n4659": {"so_39961314_39961431_0": {"length": 21, "quality": 0.9130434782608695, "section_id": 8684}, "so_39961314_39961431_1": {"length": 20, "quality": 0.8695652173913043, "section_id": 7776}}}, "39961431": {"Id": "39961431", "PostTypeId": "2", "Body": "<p>Yes, this operator must be at global scope. It is \"special\".</p>\n<blockquote>\n<p id=\"so_39961314_39961431_0\"><code>[C++14: 3.7.4.1/1]:</code> An allocation function shall be a class member function or a global function; a program is ill-formed if an allocation function is declared in a namespace scope other than global scope or declared static in global\n  scope. <em>[..]</em></p>\n</blockquote>\n<p>And, yes, standard library headers must be <code>#include</code>d in \"free space\":</p>\n<blockquote>\n<p id=\"so_39961314_39961431_1\"><code>[C++14: 17.6.2.2/3]:</code> A translation unit shall include a header only outside of any external declaration or definition, and shall include the header lexically before the first reference in that translation unit to any of the entities declared in that header. No diagnostic is required.</p>\n</blockquote>\n", "LastActivityDate": "2016-10-10T15:12:41.377", "CommentCount": "0", "CreationDate": "2016-10-10T15:12:41.377", "ParentId": "39961314", "Score": "3", "OwnerUserId": "560648"}, "39961314": {"ViewCount": "58", "Body": "<p>This is my sample code and its output.  </p>\n<pre><code>namespace AAA\n{\n#include &lt;vector&gt;\n}\n\nint main()\n{\n    AAA::std::vector&lt;int&gt; vec;\n\n    return 0;\n}\n\n/usr/include/c++/4.9/new:129:41: error: 'void* AAA::operator new(AAA::std::size_t)' may not be declared within a namespace\n   __attribute__((__externally_visible__));\n</code></pre>\n<ol>\n<li>Why isn't allowed to declare operator new/delete in a namespace?</li>\n<li>Does standard require to include <code>&lt;vector&gt;</code> (and other headers too) from global namespace?</li>\n</ol>\n", "AcceptedAnswerId": "39961431", "Title": "Why it's required to include vector (and other headers too) in global namespace only?", "CreationDate": "2016-10-10T15:05:31.007", "Id": "39961314", "CommentCount": "7", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2016-10-10T15:12:36.627", "LastEditorUserId": "4808130", "LastActivityDate": "2016-10-10T15:12:41.377", "ClosedDate": "2016-10-10T15:25:19.433", "Score": "1", "OwnerUserId": "4808130", "Tags": "<c++><stl><include><new-operator>", "AnswerCount": "1"}});