post_cb({"22544231": {"CommentCount": "7", "ViewCount": "186", "PostTypeId": "1", "ClosedDate": "2014-03-20T22:15:15.757", "LastEditorUserId": "3235496", "CreationDate": "2014-03-20T20:23:06.383", "LastActivityDate": "2014-03-20T20:45:34.447", "Title": "Create array of class in that class", "LastEditDate": "2014-03-20T20:40:01.443", "Id": "22544231", "Score": "1", "Body": "<p>I'm trying to add a QuadTree in c++.  I have this code so far:</p>\n<pre><code>class QuadTree {\nprivate:\n    AABB bounds;\n\n    QuadTree children[]; // this line\npublic:\n    QuadTree(AABB bounds) : bounds(bounds) {\n\n    }\n};\n</code></pre>\n<p>But I get an error \"Error: incomplete type is not allowed\".  What am I doing wrong?</p>\n", "Tags": "<c++><class><incomplete-type>", "OwnerUserId": "1938944", "AnswerCount": "3"}, "22544414": {"ParentId": "22544231", "CommentCount": "10", "Body": "<p>First of all you can't declare an array without size. Your error is exactly telling it;)</p>\n<p>Secondly, you're not allowed to create an object of the same class in the class of object.</p>\n<p>Only what can you do is to make reference or pointer in this class to an object of the same class.</p>\n<p>So change this:</p>\n<pre><code>QuadTree children[]; // this line\n</code></pre>\n<p>to this:</p>\n<pre><code>QuadTree **children; // this line\n</code></pre>\n", "OwnerUserId": "3348428", "PostTypeId": "2", "Id": "22544414", "Score": "0", "CreationDate": "2014-03-20T20:31:56.377", "LastActivityDate": "2014-03-20T20:31:56.377"}, "22544403": {"ParentId": "22544231", "LastEditDate": "2014-03-20T20:36:31.587", "CommentCount": "0", "CreationDate": "2014-03-20T20:31:16.657", "OwnerUserId": "1141471", "LastEditorUserId": "1141471", "PostTypeId": "2", "Id": "22544403", "Score": "0", "Body": "<p>C++ standard 9.2.4 says:</p>\n<blockquote>\n<p id=\"so_22544231_22544403_0\">Non-static (9.4) data members shall not have incomplete types. In\n  particular, a class C shall not contain a non-static member of class\n  C, but it can contain a pointer or reference to an object of class C.</p>\n</blockquote>\n<p>This means you cannot declare</p>\n<pre><code>class A {\n    public:\n        A a;  // error: field \u2018a\u2019 has incomplete type\n};            \n</code></pre>\n<p>But you can:</p>\n<pre><code>class A {\n    public:\n        A* a;\n};\n</code></pre>\n<hr>\n<p>Solution:</p>\n<pre><code>class QuadTree {\nprivate:\n    AABB bounds;\n    QuadTree* children;\n    //...\n};\n</code></pre>\n</hr>", "LastActivityDate": "2014-03-20T20:36:31.587"}, "22544676": {"ParentId": "22544231", "CommentCount": "0", "Body": "<p>As the other answers have said, you cannot create a non-static instance of the same class inside of itself. However, no answers have why this is true. Take this code for example:</p>\n<pre><code>class MyClass\n{\n    private: std::string s;\n}\n\nint main()\n{\n    MyClass c;\n}\n</code></pre>\n<p>When we declare <code>MyClass c</code> we are also initializing it by calling its default constructor. When we do this, it has to allocate (and initialize) the memory for each of the members of <code>MyClass</code> so it also calls <code>std::string</code> constructor. Now if instead of this, <code>MyClass</code> was defined as follows:</p>\n<pre><code>class MyClass\n{\n     // note: not legal.\n    private: MyClass c;\n}\n</code></pre>\n<p>then the <code>MyClass</code> constructor would call the <code>MyClass</code> constructor would call the <code>MyClass</code> constructor ...</p>\n<p>We would have infinite recursion and run out of memory. Now when we define <code>MyClass</code> as such:</p>\n<pre><code>class MyClass\n{\n    private: MyClass* c;\n}\n</code></pre>\n<p>When we create a <code>MyClass</code>, we only have to allocate the memory for the pointer and everything would be fine. However this snippet would cause the same problem during runtime, but it would be perfectly legal code.</p>\n<pre><code>class MyClass\n{\n\n    private: MyClass* c;\n    public: MyClass(){ c = new MyClass(); }\n}\n</code></pre>\n", "OwnerUserId": "2721883", "PostTypeId": "2", "Id": "22544676", "Score": "0", "CreationDate": "2014-03-20T20:45:34.447", "LastActivityDate": "2014-03-20T20:45:34.447"}, "bq_ids": {"n4140": {"so_22544231_22544403_0": {"section_id": 5869, "quality": 1.0, "length": 19}}, "n3337": {"so_22544231_22544403_0": {"section_id": 5640, "quality": 1.0, "length": 19}}, "n4659": {"so_22544231_22544403_0": {"section_id": 7352, "quality": 1.0, "length": 19}}}});