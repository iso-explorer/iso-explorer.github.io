post_cb({"13852794": {"Id": "13852794", "PostTypeId": "2", "Body": "<p>You can't instantiate <code>C</code> because you have explicitly said it's destructor is undefined.</p>\n<p>You could just do:</p>\n<pre><code>class C\n{\npublic:\n    C();\n    virtual ~C() {}\n};\n</code></pre>\n<p>instead.</p>\n<p>You can leave <code>C</code> exactly \"as is\" as long as you don't try to instantiate it (i.e. you only create <code>D</code>s, but you can pass them around as <code>C</code>s.</p>\n", "LastActivityDate": "2012-12-13T04:08:46.630", "CommentCount": "1", "CreationDate": "2012-12-13T04:08:46.630", "ParentId": "13852761", "Score": "5", "OwnerUserId": "857132"}, "bq_ids": {"n4140": {"so_13852761_13852825_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 7019}}, "n3337": {"so_13852761_13852825_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 6765}}, "n4659": {"so_13852761_13852825_0": {"length": 25, "quality": 0.8928571428571429, "section_id": 8516}}}, "13852783": {"Id": "13852783", "PostTypeId": "2", "Body": "<p>\u201c=0\u201d means you define this method as pure virtual. If a class contains any pure virutal method, then the class is pure virtual. You can not instantiate pure virtual class, because there is no implementation for pure virtual method.</p>\n", "LastActivityDate": "2012-12-13T04:07:54.523", "CommentCount": "1", "CreationDate": "2012-12-13T04:07:54.523", "ParentId": "13852761", "Score": "4", "OwnerUserId": "978360"}, "13852825": {"Id": "13852825", "PostTypeId": "2", "Body": "<p>class C is called <code>abstract class</code> in C++ which can't be initialized.</p>\n<blockquote>\n<p id=\"so_13852761_13852825_0\">\u00a710.4/2 Abstract classes An abstract class is a class that can be used\n  only as a base class of some other class; no objects of an abstract\n  class can be created except as subobjects of a class derived from it.\n  A class is abstract if it has at least one pure virtual function.</p>\n</blockquote>\n<p>change <code>C *c = new C();</code> to <code>C *c = new D();</code> should work.</p>\n<p>Or you can make class C non-abstract class by removing <code>=0</code> </p>\n<pre><code>class C{\npublic:\n  C() {}\n  virtual ~C() {}\n};\n\nC* c = new C();  // this is ok\n</code></pre>\n", "LastEditorUserId": "82320", "LastActivityDate": "2012-12-13T04:51:26.810", "Score": "2", "CreationDate": "2012-12-13T04:12:58.693", "ParentId": "13852761", "CommentCount": "1", "OwnerUserId": "951757", "LastEditDate": "2012-12-13T04:51:26.810"}, "13852761": {"ViewCount": "506", "Body": "<p>Here's the format of the code:</p>\n<pre><code>class C\n{\npublic:\n    C();\n    virtual ~C() = 0;\n};\n\nclass D : public C\n{\npublic:\n    D();\n    ~D();\n};\n\nC::C(){\n}\n\nC::~C(){\n}\n\nD::D(){\n}\n\nD::~D(){\n}\n\nint main(){\n    C *c = new C();\n    D *d = new D();\n    return 0;\n}\n</code></pre>\n<p>When I try to instantiate <code>c</code> I get the following error:</p>\n<pre><code>1&gt;c:\\main.cpp(59): error C2259: 'C' : cannot instantiate abstract class\n</code></pre>\n<p>I know I cannot call the virtual destructor, but there is something terribly I don't know on the concepts. Can someone explain me?</p>\n", "AcceptedAnswerId": "13852794", "Title": "How do I implement a pure virtual destructor?", "CreationDate": "2012-12-13T04:05:11.367", "Id": "13852761", "CommentCount": "5", "LastEditDate": "2012-12-13T04:29:31.523", "PostTypeId": "1", "LastEditorUserId": "951757", "LastActivityDate": "2012-12-13T04:51:26.810", "Score": "0", "OwnerUserId": "815812", "Tags": "<c++><abstract-class><instantiation><pure-virtual>", "AnswerCount": "3"}});