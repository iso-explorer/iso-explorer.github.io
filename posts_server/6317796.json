post_cb({"6317837": {"LastActivityDate": "2011-06-11T19:11:32.303", "CommentCount": "3", "Body": "<p>This is a well known problem with static libraries and global variables with runtime initialization.</p>\n<p>Most linkers will only include components of the static library that are needed to fulfill a dependency of the main program.  If none of the objects in the compilation unit are used, the linker <strike>removes</strike> <em>never adds</em> the compilation unit as a whole, and side effects of global initialization do not occur.</p>\n<p>There's a good explanation <a href=\"http://groups.google.com/group/comp.lang.c++/tree/browse_frm/thread/f00286e2a1302530/f8b3a645bd19a7fe?rnum=31&amp;_done=%2Fgroup%2Fcomp.lang.c%2B%2B%2Fbrowse_frm%2Fthread%2Ff00286e2a1302530%2F6465945cc56cdf66%3Ftvc%3D1%26#doc_6c873869afac6b66\" rel=\"nofollow\">here</a> (final summary <a href=\"http://groups.google.com/group/comp.lang.c++/tree/browse_frm/thread/f00286e2a1302530/11b0813b69f018a0?rnum=71&amp;_done=%2Fgroup%2Fcomp.lang.c%2B%2B%2Fbrowse_frm%2Fthread%2Ff00286e2a1302530%2F6465945cc56cdf66%3Ftvc%3D1%26#doc_aabc09f9eb7a2f27\" rel=\"nofollow\">here</a>)</p>\n<p>You would have the same problem with the standard library-provided startup code.</p>\n", "CreationDate": "2011-06-11T18:45:48.627", "LastEditDate": "2011-06-11T19:11:32.303", "ParentId": "6317796", "Id": "6317837", "LastEditorUserId": "103167", "PostTypeId": "2", "Score": "5", "OwnerUserId": "103167"}, "6317796": {"CreationDate": "2011-06-11T18:39:58.793", "ViewCount": "242", "Id": "6317796", "AcceptedAnswerId": "6317837", "Score": "1", "Title": "ctor init not calling the global ctor instances in library", "CommentCount": "0", "Body": "<p>I'm developing an application and a library using SourceryGpp lite for arm.</p>\n<p>I'm not using standard libs or default start files.\nSo to call the global ctrs i'm doing to following code:</p>\n<pre><code>ldr r0,=__ctors_init__\nldr r0,[r0]\nmov lr,pc\nbx r0\n</code></pre>\n<p>So the problem is that I'm defining some global instances in the static library, but the their ctors are never called by the above code. The weird thing is that the global ctors of the application are successfully called, anyone knows why?</p>\n", "Tags": "<c++><assembly><constructor><arm><startup>", "LastActivityDate": "2011-06-11T19:11:32.303", "PostTypeId": "1", "AnswerCount": "2", "OwnerUserId": "518097"}, "bq_ids": {"n4140": {"so_6317796_6317903_0": {"length": 26, "quality": 0.7428571428571429, "section_id": 7153}}, "n3337": {"so_6317796_6317903_0": {"length": 26, "quality": 0.7428571428571429, "section_id": 6897}}}, "6317903": {"CommentCount": "1", "Body": "<p>The standard explicitly permits to defer static objects initialization (C++98, [basic.start.init]):</p>\n<blockquote>\n<p id=\"so_6317796_6317903_0\">It is implementation-defined whether or not the dynamic initialization (8.5, 9.4, 12.1, 12.6.1) of an object of\n  namespace scope is done before the first statement of main. If the initialization is deferred to some point\n  in time after the first statement of main, it shall occur before the first use of any function or object defined\n  in the same translation unit as the object to be initialized.</p>\n</blockquote>\n<p>(latest C++0x draft has a bit different wording.)</p>\n<p>So if you don't use some translation unit at-all, all the objects defined there may be removed completely.</p>\n", "CreationDate": "2011-06-11T18:58:07.187", "ParentId": "6317796", "Id": "6317903", "LastActivityDate": "2011-06-11T18:58:07.187", "PostTypeId": "2", "Score": "3", "OwnerUserId": "277176"}});