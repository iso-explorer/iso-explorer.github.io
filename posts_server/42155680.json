post_cb({"bq_ids": {"n4140": {"so_42155680_42155724_0": {"length": 62, "quality": 0.7848101265822784, "section_id": 6076}}, "n3337": {"so_42155680_42155724_0": {"length": 61, "quality": 0.7721518987341772, "section_id": 5844}}, "n4659": {"so_42155680_42155724_0": {"length": 50, "quality": 0.6329113924050633, "section_id": 7572}}}, "42155680": {"ViewCount": "73", "Body": "<p>For a generic way to find the size of elements in a vector, is this valid:</p>\n<pre><code>std::vector&lt;float&gt; some_vector;\nint size = sizeof(some_vector[0]);\n</code></pre>\n<p>Or could this lead to problems, because some_vector[0] could be empty?</p>\n<p><em>I guess this evaluated during compile time anyway, but is it according to the standard?</em></p>\n", "Title": "Is `sizeof(some_vector[0])` valid?", "CreationDate": "2017-02-10T09:21:05.417", "LastActivityDate": "2017-02-10T09:39:18.223", "CommentCount": "2", "PostTypeId": "1", "ClosedDate": "2017-02-10T09:23:37.133", "Id": "42155680", "Score": "0", "OwnerUserId": "369009", "Tags": "<c++><c++11><vector><sizeof>", "AnswerCount": "1"}, "42155724": {"Id": "42155724", "PostTypeId": "2", "Body": "<p>The <code>sizeof</code> operator is used with unevaluated expressions. So you can use this expression to determine the size of the element of a vector. </p>\n<p>From the C++ Standard (5.3.3 Sizeof)</p>\n<blockquote>\n<p id=\"so_42155680_42155724_0\">1 The sizeof operator yields the number of bytes in the object\n  representation of its operand. The operand is either an expression,\n  which is an unevaluated operand (Clause 5), or a parenthesized\n  type-id. The sizeof operator shall not be applied to an expression\n  that has function or incomplete type, to an enumeration type whose\n  underlying type is not \ufb01xed before all its enumerators have been\n  declared, to the parenthesized name of such types, or to a glvalue\n  that designates a bit-\ufb01eld. sizeof(char), sizeof(signed char) and\n  sizeof(unsigned char) are 1. The result of sizeof applied to any other\n  fundamental type (3.9.1) is implementation-de\ufb01ned. [Note: in\n  particular, sizeof(bool), sizeof(char16_t), sizeof(char32_t), and\n  sizeof(wchar_t) are implementation-de\ufb01ned.75 \u2014end note] [Note: See 1.7\n  for the de\ufb01nition of byte and 3.9 for the de\ufb01nition of object\n  representation. \u2014end note]</p>\n</blockquote>\n", "LastEditorUserId": "2877241", "LastActivityDate": "2017-02-10T09:39:18.223", "Score": "2", "CreationDate": "2017-02-10T09:23:27.770", "ParentId": "42155680", "CommentCount": "0", "OwnerUserId": "2877241", "LastEditDate": "2017-02-10T09:39:18.223"}});