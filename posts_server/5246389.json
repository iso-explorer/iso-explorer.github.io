post_cb({"5247144": {"ParentId": "5246389", "CommentCount": "2", "Body": "<p>FYI, if you want to check the C++ standard, unfortunately it is not available for free. You must pay a fee to get a copy of the standard. However, the final draft (the one before the approval) is available online: for C++99 <a href=\"http://www.kuzbass.ru:8086/docs/isocpp/\" rel=\"nofollow\">http://www.kuzbass.ru:8086/docs/isocpp/</a>, for C++0x <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3092.pdf\" rel=\"nofollow\">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3092.pdf</a>.</p>\n", "OwnerUserId": "648078", "PostTypeId": "2", "Id": "5247144", "Score": "0", "CreationDate": "2011-03-09T14:23:50.570", "LastActivityDate": "2011-03-09T14:23:50.570"}, "5246389": {"CommentCount": "0", "ViewCount": "174", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2011-03-09T13:22:26.203", "LastActivityDate": "2011-03-09T14:23:50.570", "Title": "How could I compare C/C99 specifications to C++ specifications?", "AcceptedAnswerId": "5246510", "LastEditDate": "2017-05-23T11:47:49.707", "Id": "5246389", "Score": "3", "Body": "<p>I need to verify that I can use unions a certain way.</p>\n<p>For C99, this answer is adequate: <a href=\"https://stackoverflow.com/questions/891471/union-element-alignment\">Union element alignment</a></p>\n<blockquote>\n<p id=\"so_5246389_5246389_0\">C99 - section 6.7.2.1 Structure and\n  union specifiers (paragraph 14):</p>\n<p id=\"so_5246389_5246389_1\">A pointer to a union object, suitably\n  converted, points to each of its\n  members (or if a member is a bitfield,\n  then to the unit in which it resides),\n  and vice versa.</p>\n</blockquote>\n<p>Can someone please help me find the equivalent guarantee for C++?</p>\n<p>More generally, is there a good source for finding section/paragraph citations for C++ standards which are equivalent to a known feature in C?</p>\n<p>Thanks a lot.</p>\n", "Tags": "<c++><c><standards><specifications><c99>", "OwnerUserId": "458742", "AnswerCount": "2"}, "5246510": {"ParentId": "5246389", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>In C++ (14882:2003), this is split between two paragraphs:</p>\n<p><strong>9.5[class.union]/1</strong></p>\n<blockquote>\n<p id=\"so_5246389_5246510_0\">Each data member is allocated as if it\n  were the sole member of a struct.</p>\n</blockquote>\n<p><strong>9.2[class.mem]/17</strong></p>\n<blockquote>\n<p id=\"so_5246389_5246510_1\">A pointer to a POD-struct object,\n  suitably converted using a\n  reinterpret_cast, points to its\n  initial member (or if that member is a bit-field, then to the unit in which it resides) and vice versa.</p>\n</blockquote>\n<p>I haven't heard of a cross-reference between C and C++ like that, it may be non-trivial, as this example shows.</p>\n", "OwnerUserId": "273767", "LastEditorUserId": "273767", "LastEditDate": "2011-03-09T13:36:53.320", "Id": "5246510", "Score": "5", "CreationDate": "2011-03-09T13:31:47.737", "LastActivityDate": "2011-03-09T13:36:53.320"}, "bq_ids": {"n4140": {"so_5246389_5246510_0": {"section_id": 5913, "quality": 1.0, "length": 8}}, "n3337": {"so_5246389_5246389_1": {"section_id": 5650, "quality": 0.8125, "length": 13}, "so_5246389_5246510_0": {"section_id": 5685, "quality": 1.0, "length": 8}, "so_5246389_5246510_1": {"section_id": 5650, "quality": 0.9444444444444444, "length": 17}}, "n4659": {"so_5246389_5246510_0": {"section_id": 7405, "quality": 1.0, "length": 8}}}});