post_cb({"12305397": {"CommentCount": "0", "CreationDate": "2012-09-06T17:31:39.070", "CommunityOwnedDate": "2012-09-06T17:31:39.070", "LastEditorUserId": "87234", "LastActivityDate": "2012-09-06T18:34:21.207", "ParentId": "12305240", "PostTypeId": "2", "LastEditDate": "2012-09-06T18:34:21.207", "Id": "12305397", "Score": "7", "Body": "<p>For reference, the standard quote is (\u00a72.2/1, abridged, emphasis mine):</p>\n<blockquote>\n<h2>Phases of Translation</h2>\n<p id=\"so_12305240_12305397_0\">[...]<br>\n  2. <strong>Each instance of a backslash character (<code>\\</code>) immediately followed by a new-line character is deleted, splicing physical source lines to form logical source lines</strong>. Only the last backslash on any physical source line shall be eligible for being part of such a splice. If, as a result, a character sequence that matches the syntax of a universal-character-name is produced, the behavior is undefined. A source file that is not empty and that does not end in a new-line character, or that ends in a new-line character immediately preceded by a backslash character before any such splicing takes place, shall be processed as if an additional new-line character were appended to the file.<br>\n  [...]  </br></br></p>\n</blockquote>\n<p>The implementation-defined part that other answers are mentioning is in the definition of \"new-line\".</p>\n<p>(Note that comments are not replaced until phase 3, so that in this code:</p>\n<pre><code>int main()\n{\n    int x = 0;\n\n    // assuming the definition of new-line is as expected, this function\n    // will return 0, not 5 (no whitespace after this backslash: ) \\\n    x = 5;\n\n    return x;\n}\n</code></pre>\n<p><code>x = 5;</code> will be appended to the end of the comment, then ultimately removed.)</p>\n", "OwnerUserId": "87234"}, "12305240": {"CommentCount": "2", "ViewCount": "929", "CreationDate": "2012-09-06T17:21:34.463", "LastActivityDate": "2012-09-06T18:34:21.207", "Title": "Whitespace character after backslash in C and C++", "FavoriteCount": "1", "PostTypeId": "1", "Id": "12305240", "Score": "4", "Body": "<p>What C and C++ standards says about whitespace character (or several characters) after backslash? Does it guarantees to join lines anyway or not?</p>\n<pre><code>int main()\n{\n    // Comment \\ \n    int foo;\n}\n</code></pre>\n<p>MSVC and gcc works different in this case.</p>\n", "Tags": "<c++><c>", "OwnerUserId": "1608835", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_12305240_12305397_0": {"section_id": 5313, "quality": 0.9523809523809523, "length": 60}}, "n3337": {"so_12305240_12305397_0": {"section_id": 5110, "quality": 0.9841269841269841, "length": 62}}, "n4659": {"so_12305240_12305397_0": {"section_id": 6737, "quality": 0.9523809523809523, "length": 60}}}, "12305337": {"ParentId": "12305240", "CommentCount": "6", "CreationDate": "2012-09-06T17:28:15.163", "OwnerUserId": "388520", "PostTypeId": "2", "Id": "12305337", "Score": "5", "Body": "<p>The C standard leaves it implementation-defined how a text file is broken into lines (as part of translation phase 1, if memory serves).  For the purpose of <code>\\</code>-newline, GCC defines a line ending as zero or more ASCII horizontal whitespace characters (SPC, TAB, VT, or FF) followed by one of the three common ASCII line termination sequences: CR, LF, or CR LF.</p>\n<p>I do not know what MSVC does, but I would not be at all surprised if it is different.</p>\n", "LastActivityDate": "2012-09-06T17:28:15.163"}});