post_cb({"27681669": {"ParentId": "27681633", "CommentCount": "2", "Body": "<p>Yes, that is valid. It would be undefined in C, but C++ has added a special exception to the <code>-</code> operator to define the behaviour.</p>\n<blockquote>\n<p id=\"so_27681633_27681669_0\"><strong>5.7 Additive operators [expr.add]</strong></p>\n<p id=\"so_27681633_27681669_1\">7 If the value <code>0</code> is added to or subtracted from a pointer value, the result compares equal to the original pointer value. If two pointers point to the same object or both point one past the end of the same array or both are null, and the two pointers are subtracted, the result compares equal to the value <code>0</code> converted to the type <code>std::ptrdiff_t</code>.</p>\n</blockquote>\n", "OwnerUserId": "743382", "PostTypeId": "2", "Id": "27681669", "Score": "11", "CreationDate": "2014-12-28T23:24:23.567", "LastActivityDate": "2014-12-28T23:24:23.567"}, "27681633": {"CommentCount": "1", "AcceptedAnswerId": "27681669", "CreationDate": "2014-12-28T23:20:45.510", "LastActivityDate": "2014-12-28T23:24:23.567", "PostTypeId": "1", "ViewCount": "348", "FavoriteCount": "1", "Title": "Subtraction of two nullptr values guaranteed to be zero?", "Id": "27681633", "Score": "4", "Body": "<p>Is it guaranteed by the C++ standard that if I have two pointers of the same type whose value is equal to nullptr, that the difference between those pointers is equal to 0?</p>\n<p>In a pseudo-mathematical notation, does the following predicate hold true?</p>\n<p>ForAll x ForAll y (x == nullptr)^(y == nullptr) -&gt; (x - y == 0)</p>\n<p>The simplest code example I can think of being:</p>\n<pre><code>int* x = nullptr;\nint* y = nullptr;\nassert(x - y == 0);\n</code></pre>\n<p>I suppose this boils down to: is it possible to have a valid implementation of the C++ standard for which there are multiple bit representations of nullptr that only compare as being equal because the equality operator does some magic?</p>\n", "Tags": "<c++><c++11>", "OwnerUserId": "2843835", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_27681633_27681669_1": {"section_id": 6145, "quality": 1.0, "length": 35}}, "n3337": {"so_27681633_27681669_1": {"section_id": 5908, "quality": 1.0, "length": 35}}, "n4659": {"so_27681633_27681669_1": {"section_id": 7641, "quality": 0.5142857142857142, "length": 18}}}});