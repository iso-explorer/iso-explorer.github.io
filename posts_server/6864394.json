post_cb({"6864450": {"LastActivityDate": "2011-07-28T19:46:25.823", "LastEditorUserId": "501557", "ParentId": "6864394", "LastEditDate": "2011-07-28T19:46:25.823", "Id": "6864450", "Score": "4", "Body": "<p>The C++ ISO spec, \u00a715.1/3, states that</p>\n<blockquote>\n<p id=\"so_6864394_6864450_0\">The type of the throw-expression shall not be an\n  incomplete type, or a pointer or reference to an incomplete type, other than void*, const void*, volatile void*, or const volatile void*. Except for these restrictions and the restrictions on type matching mentioned in 15.3, the operand of throw is treated exactly as a function argument in a call (5.2.2) or the operand of a return statement.</p>\n</blockquote>\n<p>From this, it seems that you should be able to throw anything you'd like, as long as you're not throwing a type that you've only forward-declared.</p>\n<p><strong>EDIT</strong>: As @Billy ONeal points out, the type must be copyable, which means that it should support a copy constructor.</p>\n", "CommentCount": "2", "PostTypeId": "2", "OwnerUserId": "501557", "CreationDate": "2011-07-28T19:18:50.210"}, "6864394": {"AcceptedAnswerId": "6864450", "Tags": "<c++><exception>", "AnswerCount": "1", "OwnerUserId": "82320", "Body": "<p><a href=\"https://stackoverflow.com/questions/6864011/how-can-stdruntime-errorruntime-errorconst-stdstring-meet-stdexception\">I thought exceptions imposed a bit more on the thrown type than the standard actually imposes.</a> I want to clear up this confusion. What is actually imposed on those types?</p>\n", "CommentCount": "0", "PostTypeId": "1", "CreationDate": "2011-07-28T19:13:26.693", "ViewCount": "64", "LastActivityDate": "2011-07-28T19:46:25.823", "Id": "6864394", "LastEditorUserId": "-1", "Title": "What requirements does the standard place upon a type thrown in an exception?", "Score": "1", "LastEditDate": "2017-05-23T11:55:33.793"}, "bq_ids": {"n3337": {"so_6864394_6864450_0": {"section_id": 3206, "quality": 0.6756756756756757, "length": 25}}}});