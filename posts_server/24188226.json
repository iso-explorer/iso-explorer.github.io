post_cb({"24188784": {"ParentId": "24188226", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2014-06-12T15:53:59.130", "Score": "4", "LastEditorUserId": "241631", "LastEditDate": "2014-06-12T16:54:59.383", "Id": "24188784", "OwnerUserId": "2352671", "Body": "<p>Declare <code>y</code> as a constant expression:</p>\n<pre><code>constexpr Test y = Test(4);\n</code></pre>\n<p><a href=\"http://ideone.com/5QsT2A\" rel=\"nofollow\">Demo</a></p>\n<p><strong>Reason:</strong></p>\n<p>Although, <code>Test::get()</code> is declared <code>constexpr</code> object <code>y</code> is not.</p>\n", "LastActivityDate": "2014-06-12T16:54:59.383"}, "24188973": {"ParentId": "24188226", "CommentCount": "0", "CreationDate": "2014-06-12T16:04:08.927", "OwnerUserId": "1090079", "PostTypeId": "2", "Id": "24188973", "Score": "1", "Body": "<h3>Introduction</h3>\n<p>The problem with your code is that the Standard (<a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf\" rel=\"nofollow\">n3337</a>) mandates that each expression associated with a <em>label</em> must be a <em>constant-expression</em>.</p>\n<blockquote>\n<p id=\"so_24188226_24188973_0\"><code>6.4.2p2</code> <strong>The <em>switch</em> statement</strong> <code>[stmt.switch]</code></p>\n<blockquote>\n<p id=\"so_24188226_24188973_4\">Any statement within the switch statement can be labeled with one or more case labels as follows:</p>\n<p id=\"so_24188226_24188973_5\">case constant-expression :</p>\n<p id=\"so_24188226_24188973_6\">where the <em>constant-expression</em> shall be a converted constant expression (5.19) of the promoted type of the switch condition.</p>\n</blockquote>\n</blockquote>\n<p>Since <code>y</code> is not declared in a <em>constant-expression</em> friendly matter, <code>y.get()</code> isn't usable when specifying the <em>needle</em> for a certain case-label. The <em>member-function</em> is <em>constexpr</em>, but the instance of <code>Test</code> isn't, which renders the usage of <code>Test::get</code> as a <em>non-constant expression</em>.</p>\n<hr>\n<h3>Solution</h3>\n<p>To solve this issue you will need to declare <code>y</code> with the <code>constexpr</code> specifier to enable its usage in the context you are looking for, and I'm guessing you already know how:</p>\n<pre><code>constexpr Test y (4);\n</code></pre>\n</hr>", "LastActivityDate": "2014-06-12T16:04:08.927"}, "24188226": {"CommentCount": "0", "AcceptedAnswerId": "24188784", "PostTypeId": "1", "LastEditorUserId": "1090079", "CreationDate": "2014-06-12T15:25:41.740", "LastActivityDate": "2014-06-12T20:41:32.033", "LastEditDate": "2014-06-12T20:41:32.033", "ViewCount": "192", "FavoriteCount": "1", "Title": "using constexp member function in switch", "Id": "24188226", "Score": "3", "Body": "<p>Why I can use constexp non-member function in switch, but when I use member function compiler is saying: \"the value of \u2018y\u2019 is not usable in a constant expression\"?</p>\n<pre><code>class Test {\npublic:\n    constexpr Test(int i) : i(i) { }\n    constexpr int get() {return i;};\nprivate:\n    int i;\n};\n\nconstexpr int test()\n{\n    return 1;\n}\n\nint main() {\n    int x = 0;\n\n    Test y = Test(4);\n\n    switch (x) {\n    case test(): // this is OK\n            break;\n    case y.get(): // not working\n        break;\n    }\n}\n</code></pre>\n", "Tags": "<c++><c++11><constexpr>", "OwnerUserId": "1557025", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_24188226_24188973_4": {"section_id": 3890, "quality": 0.9166666666666666, "length": 11}, "so_24188226_24188973_1": {"section_id": 3890, "quality": 0.9166666666666666, "length": 11}, "so_24188226_24188973_3": {"section_id": 3890, "quality": 0.8, "length": 8}, "so_24188226_24188973_6": {"section_id": 3890, "quality": 0.8, "length": 8}}, "n3337": {"so_24188226_24188973_4": {"section_id": 3750, "quality": 0.9166666666666666, "length": 11}, "so_24188226_24188973_1": {"section_id": 3750, "quality": 0.9166666666666666, "length": 11}, "so_24188226_24188973_3": {"section_id": 3750, "quality": 0.9, "length": 9}, "so_24188226_24188973_6": {"section_id": 3750, "quality": 0.9, "length": 9}}, "n4659": {"so_24188226_24188973_4": {"section_id": 4776, "quality": 0.9166666666666666, "length": 11}, "so_24188226_24188973_6": {"section_id": 4776, "quality": 0.8, "length": 8}, "so_24188226_24188973_3": {"section_id": 4776, "quality": 0.8, "length": 8}, "so_24188226_24188973_1": {"section_id": 4776, "quality": 0.9166666666666666, "length": 11}}}});