post_cb({"31655305": {"Id": "31655305", "PostTypeId": "2", "Body": "<p>myClass is not a namespace, you can't use it like that. I think you want something like this:</p>\n<pre><code>namespace constants{\n    const static char CHAR_S = '&lt;';\n};\n\nusing constants::CHAR_S;\nint main(int argc, char ** argv)\n{\n    char a = CHAR_S;\n    return 0;\n}\n</code></pre>\n", "LastActivityDate": "2015-07-27T14:04:45.793", "CommentCount": "0", "CreationDate": "2015-07-27T14:04:45.793", "ParentId": "31655054", "Score": "3", "OwnerUserId": "3237442"}, "31655281": {"Id": "31655281", "PostTypeId": "2", "Body": "<p>Simple trick; Redefine it with reference. Here's an example.</p>\n<p>Header.h</p>\n<pre><code>#ifndef __HEADER__\n#define __HEADER__\n\nclass MyClass\n{\npublic:\n    const static char CHAR_S = '&lt;';\n    MyClass();\n    ~MyClass();\n};\n\n#endif\n</code></pre>\n<p>Class.cpp</p>\n<pre><code>#include \"MyClass.h\"\nconst static char &amp;CHAR_S = MyClass::CHAR_S;\n\nMyClass::MyClass()\n{\n}\nMyClass::~MyClass()\n{\n}\n</code></pre>\n", "LastActivityDate": "2015-07-27T14:03:46.693", "CommentCount": "0", "CreationDate": "2015-07-27T14:03:46.693", "ParentId": "31655054", "Score": "1", "OwnerUserId": "1609585"}, "bq_ids": {"n4140": {"so_31655054_31655330_3": {"length": 11, "quality": 0.9166666666666666, "section_id": 7071}, "so_31655054_31655330_2": {"length": 11, "quality": 0.9166666666666666, "section_id": 7071}, "so_31655054_31655330_0": {"length": 4, "quality": 0.8, "section_id": 7071}, "so_31655054_31655330_4": {"length": 12, "quality": 1.0, "section_id": 7071}, "so_31655054_31655330_1": {"length": 10, "quality": 1.0, "section_id": 7071}}, "n3337": {"so_31655054_31655330_4": {"length": 12, "quality": 1.0, "section_id": 6815}, "so_31655054_31655330_2": {"length": 11, "quality": 0.9166666666666666, "section_id": 6815}, "so_31655054_31655330_0": {"length": 4, "quality": 0.8, "section_id": 6815}, "so_31655054_31655330_1": {"length": 10, "quality": 1.0, "section_id": 6815}, "so_31655054_31655330_3": {"length": 11, "quality": 0.9166666666666666, "section_id": 6815}}, "n4659": {"so_31655054_31655330_3": {"length": 11, "quality": 0.9166666666666666, "section_id": 8572}, "so_31655054_31655330_2": {"length": 11, "quality": 0.9166666666666666, "section_id": 8572}, "so_31655054_31655330_0": {"length": 4, "quality": 0.8, "section_id": 8572}, "so_31655054_31655330_1": {"length": 10, "quality": 1.0, "section_id": 8572}, "so_31655054_31655330_4": {"length": 12, "quality": 1.0, "section_id": 8572}}}, "31655330": {"Id": "31655330", "PostTypeId": "2", "Body": "<p>According to the C++ Standard (3.3.7 Class scope)</p>\n<blockquote>\n<p id=\"so_31655054_31655330_0\">2 The name of a class member <strong>shall only be used as follows</strong>:</p>\n<p id=\"so_31655054_31655330_1\">\u2014 in the scope of its class (as described above) or a class derived\n  (Clause 10) from its class,</p>\n<p id=\"so_31655054_31655330_2\">\u2014 after the . operator applied to an expression of the type of its\n  class (5.2.5) or a class derived from its class,</p>\n<p id=\"so_31655054_31655330_3\">\u2014 after the -&gt; operator applied to a pointer to an object of its class\n  (5.2.5) or a class derived from its class,</p>\n<p id=\"so_31655054_31655330_4\">\u2014 after the :: scope resolution operator (5.1) applied to the name of\n  its class or a class derived from its class.</p>\n</blockquote>\n<p>So I see the only way is to introduce another variable that will refer to the class data member or will have its value. For example</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct A\n{\n    const static char CHAR_S = '&lt;';\n};\n\nconst char A::CHAR_S;\nconst char &amp;CHAR_S = A::CHAR_S;\n\nint main()\n{\n    std::cout &lt;&lt; CHAR_S &lt;&lt; std::endl;\n}    \n</code></pre>\n", "LastActivityDate": "2015-07-27T14:06:09.200", "CommentCount": "0", "CreationDate": "2015-07-27T14:06:09.200", "ParentId": "31655054", "Score": "3", "OwnerUserId": "2877241"}, "31655308": {"Id": "31655308", "PostTypeId": "2", "Body": "<p>A class is not a namespace. You cannot refer to the CHAR_S without qualifying it by the class name.</p>\n<p>To do what you want, you can simply put the static variable in a namespace:</p>\n<pre><code>namespace MyClass {\n    static const char CHAR_S = '&lt;';\n} // namespace MyClass\n\nint main() {\n    using namespace MyClass;\n    char separator = CHAR_S;\n    return 0;\n}\n</code></pre>\n<p>Live example: <a href=\"http://coliru.stacked-crooked.com/a/74fcfee559cc1390\" rel=\"nofollow\">http://coliru.stacked-crooked.com/a/74fcfee559cc1390</a></p>\n<p>Obviously, calling your namespace <code>MyClass</code> is misleading (since it isn't a class), so pick a better name.</p>\n", "LastActivityDate": "2015-07-27T14:04:58.787", "CommentCount": "0", "CreationDate": "2015-07-27T14:04:58.787", "ParentId": "31655054", "Score": "3", "OwnerUserId": "3852968"}, "31655054": {"ViewCount": "91", "Body": "<p>I want to use constants from a class without calling the class, just call the constant, like this:</p>\n<p>Header file (.h)</p>\n<pre><code>class myClass{\n\n   public: \n      const static char CHAR_S = '&lt;';\n}\n</code></pre>\n<p>Source file (.cpp)</p>\n<pre><code>using namespace myClass;\nchar separator = CHAR_S; //I want to call the constant without using the class (myClass::CHAR_S)\n</code></pre>\n<p>How can I do this?</p>\n<p>Minimal complete example:</p>\n<pre><code>class MyClass {\n    public:\n    static const char CHAR_S = '&lt;';\n};\n\nint main() {\n    using namespace MyClass;\n    char separator = CHAR_S;\n    return 0;\n}\n</code></pre>\n<p>causes the following compiler errors:</p>\n<pre><code>main.cpp: In function 'int main()':\nmain.cpp:7:21: error: 'MyClass' is not a namespace-name\n     using namespace MyClass;\n                     ^\nmain.cpp:7:28: error: expected namespace-name before ';' token\n     using namespace MyClass;\n                            ^\nmain.cpp:8:22: error: 'CHAR_S' was not declared in this scope\n     char separator = CHAR_S;\n                      ^\nmain.cpp:8:10: warning: unused variable 'separator' [-Wunused-variable]\n     char separator = CHAR_S;\n          ^\n</code></pre>\n", "AcceptedAnswerId": "31655308", "Title": "C++ Namespaces and Classes", "CreationDate": "2015-07-27T13:54:19.640", "Id": "31655054", "CommentCount": "5", "LastEditDate": "2015-07-27T14:36:02.773", "PostTypeId": "1", "LastEditorUserId": "3852968", "LastActivityDate": "2015-07-27T14:36:02.773", "Score": "1", "OwnerUserId": "4370137", "Tags": "<c++><class><namespaces><constants>", "AnswerCount": "4"}});