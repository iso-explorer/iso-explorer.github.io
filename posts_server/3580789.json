post_cb({"3580876": {"ParentId": "3580789", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>$8.5.1/7 - </p>\n<blockquote>\n<p id=\"so_3580789_3580876_0\">\"If there are fewer initializers in\n  the list than there are members in the\n  aggregate, then each member not\n  explicitly initialized shall be\n  value-initialized (8.5).\"</p>\n</blockquote>\n<p>All this means, is that there is an explict request to initialize first element to 0. Since initializers are not specified for the remaining elements, they are value-initialized. <strong>This in case of WCHARs means are initialized to 0.</strong></p>\n<p>What does value initialized means? Here is what the Standard says in $8.5 (italics are mine)</p>\n<blockquote>\n<p id=\"so_3580789_3580876_1\">To value-initialize an object of type\n  T means: </p>\n<p id=\"so_3580789_3580876_2\">\u2014 if T is a class type\n  (clause 9) with a user-declared\n  constructor (12.1), then the default\n  constructor for T is called (and the\n  initialization is ill-formed if T has\n  no accessible default constructor); </p>\n<p id=\"so_3580789_3580876_3\">\u2014\n  if T is a non-union class type without\n  a user-declared constructor, then\n  every non-static data member and\n  base-class component of T is\n  value-initialized; </p>\n<p id=\"so_3580789_3580876_4\">\u2014 if T is an array\n  type, then each element is\n  value-initialized; </p>\n<p id=\"so_3580789_3580876_5\">\u2014 otherwise, the\n  object is zero-initialized <em>&lt;------\n  WCHAR will fit here</em></p>\n<p id=\"so_3580789_3580876_6\">To zero-initialize an object of type T\n  means: </p>\n<p id=\"so_3580789_3580876_7\">\u2014 if T is a scalar type (3.9),\n  the object is set to the value of 0\n  (zero) converted to T; <em>&lt;------ WCHAR\n  will fit here</em> </p>\n<p id=\"so_3580789_3580876_8\">\u2014 if T is a non-union\n  class type, each nonstatic data member\n  and each base-class subobject is\n  zeroinitialized; </p>\n<p id=\"so_3580789_3580876_9\">\u2014 if T is a union\n  type, the object\u2019s first named data\n  member89) is zero-initialized; </p>\n<p id=\"so_3580789_3580876_10\">\u2014 if T\n  is an array type, each element is\n  zero-initialized; </p>\n<p id=\"so_3580789_3580876_11\">\u2014 if T is a\n  reference type, no initialization is\n  performed.</p>\n</blockquote>\n", "OwnerUserId": "418110", "LastEditorUserId": "418110", "LastEditDate": "2010-08-27T02:16:29.613", "Id": "3580876", "Score": "3", "CreationDate": "2010-08-27T02:11:19.277", "LastActivityDate": "2010-08-27T02:16:29.613"}, "3580801": {"ParentId": "3580789", "CommentCount": "0", "Body": "<p>It's initializing an array.</p>\n<pre><code>float p1[1000];         // No intitialization.\nfloat p2[1000] = {0.0}; // All 1000 values initialized to zero.\n</code></pre>\n<p>More here: <a href=\"http://www.fredosaurus.com/notes-cpp/arrayptr/array-initialization.html\" rel=\"nofollow noreferrer\">C++ Notes: Array Initialization</a></p>\n", "OwnerUserId": "114029", "PostTypeId": "2", "Id": "3580801", "Score": "3", "CreationDate": "2010-08-27T01:52:48.500", "LastActivityDate": "2010-08-27T01:52:48.500"}, "3580789": {"CommentCount": "1", "ViewCount": "164", "CreationDate": "2010-08-27T01:48:44.500", "LastActivityDate": "2010-08-27T02:16:29.613", "Title": "WCHAR wszFoo[CONSTANT_BAR] = {0}; <-- What does {0} mean?", "AcceptedAnswerId": "3580876", "PostTypeId": "1", "Id": "3580789", "Score": "4", "Body": "<pre><code>WCHAR wszFoo[CONSTANT_BAR] = {0}; \n</code></pre>\n<p>I've never seen something like {0} used in C++ as part of the language.  And I have no idea how to search for a question like this online.  What is it?</p>\n", "Tags": "<c++>", "OwnerUserId": "396534", "AnswerCount": "4"}, "3580797": {"ParentId": "3580789", "CommentCount": "0", "Body": "<p>It means initialize all elements of <code>wszFoo</code> to zero.</p>\n", "OwnerUserId": "127893", "PostTypeId": "2", "Id": "3580797", "Score": "2", "CreationDate": "2010-08-27T01:51:37.883", "LastActivityDate": "2010-08-27T01:51:37.883"}, "bq_ids": {"n4140": {"so_3580789_3580876_4": {"section_id": 3287, "quality": 1.0, "length": 6}, "so_3580789_3580876_11": {"section_id": 3285, "quality": 1.0, "length": 4}, "so_3580789_3580876_0": {"section_id": 3304, "quality": 0.8571428571428571, "length": 12}, "so_3580789_3580876_2": {"section_id": 3286, "quality": 0.6, "length": 9}, "so_3580789_3580876_10": {"section_id": 3285, "quality": 1.0, "length": 5}, "so_3580789_3580876_6": {"section_id": 3285, "quality": 1.0, "length": 4}, "so_3580789_3580876_8": {"section_id": 3285, "quality": 1.0, "length": 11}, "so_3580789_3580876_9": {"section_id": 3285, "quality": 0.875, "length": 7}, "so_3580789_3580876_1": {"section_id": 3287, "quality": 1.0, "length": 4}, "so_3580789_3580876_3": {"section_id": 369, "quality": 0.5384615384615384, "length": 7}}, "n3337": {"so_3580789_3580876_4": {"section_id": 3157, "quality": 1.0, "length": 6}, "so_3580789_3580876_11": {"section_id": 3155, "quality": 1.0, "length": 4}, "so_3580789_3580876_6": {"section_id": 3155, "quality": 1.0, "length": 4}, "so_3580789_3580876_2": {"section_id": 3157, "quality": 0.8, "length": 12}, "so_3580789_3580876_10": {"section_id": 3155, "quality": 1.0, "length": 5}, "so_3580789_3580876_0": {"section_id": 3174, "quality": 0.8571428571428571, "length": 12}, "so_3580789_3580876_8": {"section_id": 3155, "quality": 1.0, "length": 11}, "so_3580789_3580876_9": {"section_id": 3155, "quality": 0.875, "length": 7}, "so_3580789_3580876_7": {"section_id": 3155, "quality": 0.6363636363636364, "length": 7}, "so_3580789_3580876_1": {"section_id": 3157, "quality": 1.0, "length": 4}, "so_3580789_3580876_3": {"section_id": 359, "quality": 0.5384615384615384, "length": 7}}, "n4659": {"so_3580789_3580876_4": {"section_id": 4049, "quality": 1.0, "length": 6}, "so_3580789_3580876_10": {"section_id": 4047, "quality": 1.0, "length": 5}, "so_3580789_3580876_0": {"section_id": 4070, "quality": 0.7142857142857143, "length": 10}, "so_3580789_3580876_2": {"section_id": 384, "quality": 0.5333333333333333, "length": 8}, "so_3580789_3580876_3": {"section_id": 7358, "quality": 0.5384615384615384, "length": 7}, "so_3580789_3580876_8": {"section_id": 4047, "quality": 0.9090909090909091, "length": 10}, "so_3580789_3580876_9": {"section_id": 4047, "quality": 0.875, "length": 7}, "so_3580789_3580876_11": {"section_id": 4047, "quality": 1.0, "length": 4}}}, "3580794": {"ParentId": "3580789", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>See <a href=\"http://www.fredosaurus.com/notes-cpp/arrayptr/array-initialization.html\" rel=\"nofollow noreferrer\">array initialization.</a></p>\n<blockquote>\n<p id=\"so_3580789_3580794_0\"><strong>Missing initialization values use zero</strong></p>\n<p id=\"so_3580789_3580794_1\">If an explicit array size is\n  specified, but an shorter\n  initiliazation list is specified, the\n  unspecified elements are set to zero.</p>\n<p id=\"so_3580789_3580794_2\"><code>float pressure[10] = {2.101, 2.32,\n  1.44};</code></p>\n<p id=\"so_3580789_3580794_3\">This not only initializes the first\n  three values, but all remaining\n  elements are set to 0.0. <em>To initialize\n  an array to all zeros, initialize only\n  the first value.</em></p>\n</blockquote>\n", "OwnerUserId": "414064", "LastEditorUserId": "414064", "LastEditDate": "2010-08-27T02:03:16.797", "Id": "3580794", "Score": "6", "CreationDate": "2010-08-27T01:50:37.227", "LastActivityDate": "2010-08-27T02:03:16.797"}});