post_cb({"15959156": {"ViewCount": "112", "Body": "<p>I have the following code. It calls the class's destructor indefinitely and crashes. If I change the size of the array to something larger than 0 is works fine.</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass ClassA {\n\n    public:\n        ClassA() {\n\n            cout &lt;&lt; \"constructor\" &lt;&lt; endl;\n        }\n        ~ClassA() {\n\n            cout &lt;&lt; \"destructor\" &lt;&lt; endl;\n        }\n};\n\nint main() {\n\n    ClassA *ptr;\n\n    cout &lt;&lt; (void*) ptr &lt;&lt; endl;\n\n    ptr = new ClassA[0];\n\n    cout &lt;&lt; (void*) ptr &lt;&lt; endl;\n\n    delete[] ptr;\n\n    cin.get();\n\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "15959785", "Title": "Why does the program get in an infinite loop", "CreationDate": "2013-04-11T21:26:26.483", "Id": "15959156", "CommentCount": "11", "PostTypeId": "1", "ClosedDate": "2013-04-11T22:11:32.740", "LastActivityDate": "2013-04-11T22:11:32.813", "Score": "0", "OwnerUserId": "2272131", "Tags": "<c++><destructor><infinite-loop>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_15959156_15959785_1": {"length": 9, "quality": 0.8181818181818182, "section_id": 3228}}, "n3337": {"so_15959156_15959785_1": {"length": 10, "quality": 0.9090909090909091, "section_id": 3101}}, "n4659": {"so_15959156_15959785_1": {"length": 9, "quality": 0.8181818181818182, "section_id": 3985}}}, "15959785": {"Id": "15959785", "PostTypeId": "2", "Body": "<p>The C++ standard states in \u00a78.3.4 that arrays are declared in the form</p>\n<blockquote>\n<p id=\"so_15959156_15959785_0\">D1 [ constant-expression ] attribute-specifier-seq</p>\n<p id=\"so_15959156_15959785_1\">...If the constant-expression (5.19) is present, it shall be an\n  integral constant expression and its value shall be greater than zero.</p>\n</blockquote>\n<p>In other words, they can't be size 0. Compilers allow you to do so anyways for programming practices outlined <a href=\"http://gcc.gnu.org/onlinedocs/gcc/Zero-Length.html\" rel=\"nofollow\">here</a> (which you arguably shouldn't do).</p>\n<p>When you break rules like this, whatever happens next is <em>undefined behavior</em> - the compiler can do whatever it wants. The reason for this is to give the compiler writers some leeway with how they code the compiler, and also allow for some optimizations.</p>\n", "LastActivityDate": "2013-04-11T22:11:32.813", "CommentCount": "0", "CreationDate": "2013-04-11T22:11:32.813", "ParentId": "15959156", "Score": "0", "OwnerUserId": "713961"}});