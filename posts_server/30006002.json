post_cb({"32876431": {"ParentId": "30006002", "CommentCount": "0", "Body": "<p>Standard says about \"have no <em>special</em> access\", but not about \"have <strong>no</strong> access at all\". Nested class is a same member of outer class as any other member. </p>\n<p>It is not clearly said in C++03 standard, but C++11 contains it explicitly:</p>\n<blockquote>\n<p id=\"so_30006002_32876431_0\">11.7 Nested classes [class.access.nest] </p>\n<p id=\"so_30006002_32876431_1\">1 A nested class is a member and as such has the same access rights as any other member.</p>\n</blockquote>\n", "OwnerUserId": "1555823", "PostTypeId": "2", "Id": "32876431", "Score": "0", "CreationDate": "2015-09-30T22:11:14.247", "LastActivityDate": "2015-09-30T22:11:14.247"}, "30006002": {"CommentCount": "2", "ViewCount": "82", "PostTypeId": "1", "LastEditorUserId": "420683", "CreationDate": "2015-05-02T18:33:21.827", "LastActivityDate": "2015-10-01T15:38:03.740", "Title": "Inner class access to private members of outer, according to ISO 2003", "LastEditDate": "2015-05-02T21:18:37.270", "Id": "30006002", "Score": "4", "Body": "<p>As described in ISO C++ 2003 </p>\n<blockquote>\n<p id=\"so_30006002_30006002_0\">\u00a711.8 Nested classes [class.access.nest]</p>\n<p id=\"so_30006002_30006002_1\">The members of a nested class have no special access to members of an\n  enclosing class, nor to classes or functions that have granted\n  friendship to an enclosing class; the usual access rules (clause 11)\n  shall be obeyed. The members of an enclosing class have no special\n  access to members of a nested class; the usual access rules (clause\n  11) shall be obeyed. </p>\n<p id=\"so_30006002_30006002_2\">[Example:</p>\n<pre><code>class E {\n    int x;\n\n    class B { };\n\n    class I {\n        B b; // error: E::B is private ERROR 1\n        int y;\n        void f(E* p, int i)\n        {\n            p-&gt;x = i; // error: E::x is private ERROR 2\n        }\n    };\n\n    int g(I* p)\n    {\n        //return p-&gt;y; // error: I::y is private ERROR 3\n    }\n};\n\nint main()\n{}\n</code></pre>\n<p id=\"so_30006002_30006002_3\">\u2014end example]</p>\n</blockquote>\n<p>So I think that <a href=\"http://coliru.stacked-crooked.com/a/3dd1797207d302a8\" rel=\"nofollow\">clang</a> and <a href=\"http://coliru.stacked-crooked.com/a/c46ac28b74bdc24c\" rel=\"nofollow\">g++</a> are wrong as they compile this code successfully.</p>\n<p>Or do I understand something wrong?</p>\n", "Tags": "<c++><language-lawyer><nested-class><c++03>", "OwnerUserId": "1758528", "AnswerCount": "2"}, "32877675": {"ParentId": "30006002", "LastEditDate": "2015-10-01T15:38:03.740", "CommentCount": "4", "CreationDate": "2015-10-01T00:26:20.317", "OwnerUserId": "428857", "LastEditorUserId": "428857", "PostTypeId": "2", "Id": "32877675", "Score": "0", "Body": "<p>This behaviour has changed since 2003. The relevant clause in Working Draft N4926 (C++17) now reads:</p>\n<blockquote>\n<p id=\"so_30006002_32877675_0\">\u00a711.7 Nested classes [class.access.nest]  </p>\n<p id=\"so_30006002_32877675_1\">A nested class is a member and as such has the same access rights as any other member. The members of\n  an enclosing class have no special access to members of a nested class; the usual access rules (Clause 11)\n  shall be obeyed.</p>\n</blockquote>\n<p>So the access is one way: nested class members can access enclosing class members, but not vice versa.</p>\n<p>For instance:</p>\n<pre><code>class Enclosing\n{\n  int n;\n  class Nested\n  {\n    int n;\n    int f (Enclosing&amp; E)\n    {\n      return E.n; // OK\n    }\n  } ;\n  int f (Nested&amp; N)\n  {\n    return N.n; // Error: Nested::n is private\n  }\n} ;\n</code></pre>\n", "LastActivityDate": "2015-10-01T15:38:03.740"}, "bq_ids": {"n4140": {"so_30006002_32876431_1": {"section_id": 6700, "quality": 1.0, "length": 9}, "so_30006002_32877675_1": {"section_id": 6700, "quality": 0.9583333333333334, "length": 23}}, "n3337": {"so_30006002_32876431_1": {"section_id": 6455, "quality": 1.0, "length": 9}, "so_30006002_32877675_1": {"section_id": 6455, "quality": 0.9583333333333334, "length": 23}}, "n4659": {"so_30006002_32876431_1": {"section_id": 8174, "quality": 1.0, "length": 9}, "so_30006002_32877675_1": {"section_id": 8174, "quality": 0.9583333333333334, "length": 23}}}});