post_cb({"33417436": {"CommentCount": "6", "ViewCount": "1143", "PostTypeId": "1", "LastEditorUserId": "1708801", "CreationDate": "2015-10-29T14:47:44.450", "LastActivityDate": "2015-10-30T02:28:21.067", "Title": "Does the ternary operator short circuit in a defined way", "AcceptedAnswerId": "33417492", "LastEditDate": "2015-10-30T02:28:21.067", "Id": "33417436", "Score": "5", "Body": "<p>If you have the following:</p>\n<pre><code>if (x)\n{\n    y = *x;\n}\nelse\n{\n    y = 0;\n}\n</code></pre>\n<p>Then behavior is guaranteed to be defined since we can only dereference <code>x</code> if it is not 0</p>\n<p>Can the same be said for:</p>\n<pre><code>y = (x) ? *x : 0;\n</code></pre>\n<p>This seems to work as expected (even compiled with <code>-Wpedantic</code> on g++)</p>\n<p>Is this guaranteed?</p>\n", "Tags": "<c++><undefined-behavior><conditional-operator><short-circuiting>", "OwnerUserId": "2963099", "AnswerCount": "1"}, "33417492": {"ParentId": "33417436", "CommentCount": "0", "CreationDate": "2015-10-29T14:50:16.090", "OwnerUserId": "1708801", "PostTypeId": "2", "Id": "33417492", "Score": "12", "Body": "<p>Yes, only the second or third operand will be evaluated, the draft C++ standard section <code>5.16</code> <em>[expr.cond]</em> says:</p>\n<blockquote>\n<p id=\"so_33417436_33417492_0\">Conditional expressions group right-to-left. The first expression is contextually converted to bool (Clause 4).\n  It is evaluated and if it is true, the result of the conditional expression is the value of the second expression,\n  otherwise that of the third expression. <strong>Only one of the second and third expressions is evaluated.</strong> Every value\n  computation and side effect associated with the first expression is sequenced before every value computation\n  and side effect associated with the second or third expression.</p>\n</blockquote>\n", "LastActivityDate": "2015-10-29T14:50:16.090"}, "bq_ids": {"n4140": {"so_33417436_33417492_0": {"section_id": 6167, "quality": 0.9574468085106383, "length": 45}}, "n3337": {"so_33417436_33417492_0": {"section_id": 5928, "quality": 0.9574468085106383, "length": 45}}, "n4659": {"so_33417436_33417492_0": {"section_id": 7664, "quality": 0.9574468085106383, "length": 45}}}});