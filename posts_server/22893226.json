post_cb({"22893501": {"Id": "22893501", "PostTypeId": "2", "Body": "<p>In practice this problem will only manifest itself in Windows, so I'll assume Windows.</p>\n<p>Then the problem is that the C++ narrow extended <strong>execution character set</strong><sup>(1)</sup> (encoding) does not match the encoding used by the console window. \"Narrow\" refers to the <code>char</code> type. \"Excecution character set\" is a formal term employed by the C++ standard, and refers to the encoding that is assumed for text stored in the executable. The compiler translates source code literals to this encoding. It's also assumed for translation to/from any external encoding, such as translation to/from a console's encoding.</p>\n<p>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/S3x50.png\"/></p>\n<p>With Visual C++ the narrow encoding is always <strong>Windows ANSI</strong><sup>(2)</sup>, regardless of source code encoding, unless you trick the compiler. And assuming you're using Visual C++, this is then one encoding that you know.</p>\n<p>The encoding in the console window is by default the one used for original IBM PC, in your case probably <strong>codepage 850</strong> (a Western European variant of the original IBM PC English codepage 437). Run the Windows command interpreter <code>cmd</code> (<kbd>Windows-key</kbd>+<kbd>R</kbd>, type <code>cmd</code>, OK). Type <code>chcp</code> to check the current codepage. Type <code>chcp 1252</code> to switch to Windows ANSI Western, which presumably is the Windows ANSI codepage on your machine. Run your program [.exe] file, e.g. by typing its full path, or by going to its directory and typing just its name, e.g.</p>\n<pre>\n[H:\\dev\\test\\0046]\n&gt; <b><i>cl /nologo /EHsc /GR encoding.cpp /Fe:b.exe</i></b>\nencoding.cpp\n\n[H:\\dev\\test\\0046]\n&gt; <b><i>chcp &amp; b</i></b>\nActive code page: 850\n H\u00f6ger elle v\u00e4nster\n<b><i>h\u00f6ger</i></b>\n                             <sup>\u2190 <i>No output here, didn't compare as equal.</i></sup>\n[H:\\dev\\test\\0046]\n&gt; <b><i>chcp 1252</i></b>\nActive code page: 1252\n\n[H:\\dev\\test\\0046]\n&gt; <b><i>b</i></b>\n H\u00f6ger elle v\u00e4nster\n<b><i>h\u00f6ger</i></b>\nDu valde h\u00f6ger\n\n[H:\\dev\\test\\0046]\n&gt; _\n</pre>\n<p>\u2026 where <code>cl</code> (short for original \u201cLattice C\u201d) is the Visual C++ compiler.</p>\n<p>You can change the console codepage more permanently by running <code>regedit</code>, going to this registry key:</p>\n<pre><code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\CodePage\n</code></pre>\n<p>and in the list in the right pane double-click the value named <strong><code>OEMCP</code></strong> (short for Original Equipment Manufacturer Code Page, referring to the IBM PC), change it to 1252, or more generally to the same value as the <code>ACP</code> value, and reboot the machine.</p>\n<p>Oh, it's also necessary to change the console window font to a <strong>TrueType font</strong> such as Lucida Console, because the default is (an emulation of) a bitmapped font that only works correctly with the original console codepage. You can right click the console window title to get a menu, choose [Defaults], and configure the default font, size, colors etc. The changes won't affect the current console window, but they will apply to future console windows, except for those that have been configured individually<sup>(3)</sup>.</p>\n<p>An alternative to such console window configuration is to use the <strong><a href=\"http://sourceforge.net/projects/console/\" rel=\"nofollow noreferrer\">Console2</a></strong> program. If you do, then in Windows 7 and later be sure to use the 64-bit version. Otherwise some things, such as invoking links to 64-bit programs, won't work.</p>\n<hr>\n<p>Summing up, you can either</p>\n<ul>\n<li><p>run the program from the command interpreter (using <code>chcp</code> to change the codepage), or</p></li>\n<li><p>change the console codepage more permanently, as discussed above.</p></li>\n</ul>\n<p>In either case it's a Good Idea\u2122 to change the console window font to a TrueType font \u2013 and yes, this affects the functionality, not just the looks.</p>\n<p>Note on additional Microsoft absurdity: in Windows 7 and later the \"System\" font used by default in console windows is <em>actually</em>, behind the scenes, a TrueType font with umpteen thousand glyphs, but it's used to emulate the old 16-bit Windows bitmapped fonts, with the same silly restrictions, so that you still have to change to some other TrueType font\u2026</p>\n<hr>\n<p><sup><sup>(1)</sup> See the C++11 standard \u00a72.3/3.</sup> </p>\n<p><sup><sup>(2)</sup> \u201cWindows ANSI\u201d depends on the Windows configuration and is always the codepage specified by the <code>GetACP</code> API function. In practice this function gets its value from the registry key/value referenced above. However, that's largely <em>undocumented</em>.</sup> </p>\n<p><sup><sup>(3)</sup> In Windows XP Windows would ask if you wanted to save an individual console window configuration. Starting with Windows Vista it's saved with no question asked and no information that it's been saved. There is no user interface for removing such saved configurations, but they can be removed by programmatically altering shortcut files, and/or by registry editing, which however is both an impractical and brittle solution.</sup></p>\n</hr></hr>", "LastEditorUserId": "464581", "LastActivityDate": "2014-04-06T19:52:12.113", "Score": "1", "CreationDate": "2014-04-06T11:38:56.800", "ParentId": "22893226", "CommentCount": "9", "OwnerUserId": "464581", "LastEditDate": "2014-04-06T19:52:12.113"}, "34812829": {"Id": "34812829", "PostTypeId": "2", "Body": "<p>It seems the problem is the encoding of your source file when your IDE compiles it. If you are using Visual Studio you can change your encoding setting like this:</p>\n<p><a href=\"https://i.stack.imgur.com/ZTvXx.png\" rel=\"nofollow noreferrer\"><img alt=\"Here\" src=\"https://i.stack.imgur.com/ZTvXx.png\"/></a></p>\n", "LastActivityDate": "2016-01-15T14:06:39.597", "CommentCount": "1", "CreationDate": "2016-01-15T14:06:39.597", "ParentId": "22893226", "Score": "0", "OwnerUserId": "4596870"}, "22895323": {"Id": "22895323", "PostTypeId": "2", "Body": "<p>The only change I made to your code was the following:</p>\n<pre><code>// setlocale(LC_ALL, \"\");\nchar *l = setlocale(LC_ALL, NULL);\ncout &lt;&lt; \"Current Locale: \" &lt;&lt; l &lt;&lt; endl;\n</code></pre>\n<p>Because I don't have a \u201cISO\u201d <a href=\"http://en.wikipedia.org/wiki/Keyboard_layout\" rel=\"nofollow noreferrer\">keyboard layout</a>, I used the <a href=\"http://en.wikipedia.org/wiki/Alt_code\" rel=\"nofollow noreferrer\">Alt code</a> to type the character I need. The following the key combination I used for the different code pages.</p>\n<ul>\n<li>First run I had to type in <kbd>Alt</kbd>+<kbd>246</kbd> for <a href=\"http://en.wikipedia.org/wiki/Code_page_437\" rel=\"nofollow noreferrer\">Code page 437</a></li>\n<li>Second run, <kbd>Alt</kbd>+<kbd>148</kbd> for <a href=\"http://en.wikipedia.org/wiki/Code_page_1252\" rel=\"nofollow noreferrer\">Windows-1252</a></li>\n</ul>\n<p>Below is the output when I change code page between execution\n<img alt=\"Output of program\" src=\"https://i.stack.imgur.com/GMrwm.png\"/></p>\n", "LastActivityDate": "2014-04-06T14:23:21.780", "CommentCount": "1", "CreationDate": "2014-04-06T14:23:21.780", "ParentId": "22893226", "Score": "0", "OwnerUserId": "256728"}, "22893360": {"Id": "22893360", "PostTypeId": "2", "Body": "<p>The problem could be of non-ASCII </p>\n<p>i think this link  <a href=\"https://stackoverflow.com/questions/17648966/handling-non-ascii-chars-in-c\">Handling Non-Ascii Chars in C++</a> and this long tutorial <a href=\"http://www.codeproject.com/Articles/38242/Reading-UTF-8-with-C-streams\" rel=\"nofollow noreferrer\">http://www.codeproject.com/Articles/38242/Reading-UTF-8-with-C-streams</a>  will of some help if you read it throughly..All the best</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2014-04-06T11:25:54.063", "Score": "0", "CreationDate": "2014-04-06T11:25:54.063", "ParentId": "22893226", "CommentCount": "2", "OwnerUserId": "3359432", "LastEditDate": "2017-05-23T12:24:02.597"}, "bq_ids": {"n4140": {"so_22893226_22893340_3": {"length": 11, "quality": 1.0, "section_id": 5354}, "so_22893226_22893340_1": {"length": 92, "quality": 0.9583333333333334, "section_id": 5316}, "so_22893226_22893340_0": {"length": 25, "quality": 1.0, "section_id": 5313}, "so_22893226_22893340_2": {"length": 32, "quality": 1.0, "section_id": 5343}}, "n3337": {"so_22893226_22893340_3": {"length": 11, "quality": 1.0, "section_id": 5151}, "so_22893226_22893340_1": {"length": 92, "quality": 0.9583333333333334, "section_id": 5113}, "so_22893226_22893340_0": {"length": 25, "quality": 1.0, "section_id": 5110}, "so_22893226_22893340_2": {"length": 28, "quality": 0.875, "section_id": 5140}}, "n4659": {"so_22893226_22893340_3": {"length": 8, "quality": 0.7272727272727273, "section_id": 6779}, "so_22893226_22893340_2": {"length": 27, "quality": 0.84375, "section_id": 6765}, "so_22893226_22893340_0": {"length": 25, "quality": 1.0, "section_id": 6737}, "so_22893226_22893340_1": {"length": 77, "quality": 0.8020833333333334, "section_id": 6740}}}, "22893226": {"ViewCount": "1469", "Body": "<p>For some reason If/else statements isn't working correctly for me in C++ </p>\n<p>The problem is that when a variabel is equal to the right (h\u00f6ger), it won't output the If statement, instead it will go on to the else statement. If I replace the letter '\u00f6' with say 'o' so it becomes 'hoger' instead, then the if statement will work. So whenever I write the word 'h\u00f6ger' it won't go to the if statement, instead it will go to the else statement. However if I make the variabel equal to 'hoger', and then I write 'hoger', it will work. How can I make it possible writing 'h\u00f6ger' were the If statement recognizes it instead? It's as if Swedish letters don't work.</p>\n<p>My code look like this:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nusing namespace std;\n\n\nint main() {\n    setlocale(LC_ALL,\"\");\n\n\n    string test; // Define variabel\n    cout &lt;&lt; \" H\u00f6ger elle v\u00e4nster\"&lt;&lt;endl; // Right or left\n    cin &gt;&gt; test;\n\n\n    if(test == \"h\u00f6ger\") { // If right, then output this.\n\n        cout &lt;&lt;\"Du valde h\u00f6ger\"&lt;&lt;endl;\n\n    } \n\n    else if(test == \"v\u00e4nster\") { // If left, then output this\n\n        cout &lt;&lt;\"Du valde v\u00e4nster\"&lt;&lt;endl;\n\n    } else {\n\n        // Do this\n\n    }\n\n\n}\n</code></pre>\n", "Title": "Swedish characters don't compare correctly", "CreationDate": "2014-04-06T11:13:04.793", "LastActivityDate": "2016-01-15T14:06:39.597", "CommentCount": "9", "LastEditDate": "2014-04-06T12:13:43.640", "PostTypeId": "1", "LastEditorUserId": "464581", "Id": "22893226", "Score": "0", "OwnerUserId": "3260021", "Tags": "<c++><if-statement><statements><setlocale>", "AnswerCount": "5"}, "22893340": {"Id": "22893340", "PostTypeId": "2", "Body": "<p>The problem is almost certainly to do with encodings.</p>\n<p>The C/C++ language specs do not automatically handle anything other than 7 bit ASCII. The o-umlaut character is outside that range, and the exact behaviour depends on the encoding of your source code file.</p>\n<p>The most likely possibilities are ISO 8859-1, Windows ANSI-1252, UTF-8 or Windows OEM 850. The first two encode this character the same, but in each of the others it is different.</p>\n<p>With a bit more information about the encoding and tool set you are using it may be possible to provide more specific diagnosis and advice.</p>\n<p>[And by the way, if/else statements in C/C++ work just fine, thank you.]</p>\n<hr>\n<p>If we assume for the moment that this is Windows and Visual C++, then this is what you're dealing with.</p>\n<ul>\n<li>Source code written inside Visual Studio: code page 1252. Code point for the o-umlaut character is 0xf6.</li>\n<li>Keyboard input read from the console: code page 850. Code point for the o-umlaut character is 0x94.</li>\n</ul>\n<p>Obviously not a good match. However, Visual Studio can also quite happily edit source code files in many encodings including UTF-8 (with byte mark), UTF-16 (wide characters) and code page 850. So:</p>\n<ul>\n<li>Source code written inside Visual Studio: code page 850. Code point for the o-umlaut character is 0x94. Now it works.</li>\n</ul>\n<p>You can also change the code page for your console using the CHCP command. </p>\n<ul>\n<li>Change Console to CHCP 1252 and it works.</li>\n</ul>\n<hr>\n<p>The behaviour of the compiler when reading source code is obliged by the standard to be consistent with the execution character set. See n3797 S2.2.5:</p>\n<blockquote>\n<p id=\"so_22893226_22893340_0\">Each source character set member in a character literal or a string literal, as well as each escape\n  sequence and universal-character-name in a character literal or a non-raw string literal, is converted to the corresponding member of the execution character set</p>\n</blockquote>\n<p>S2.3/3:</p>\n<blockquote>\n<p id=\"so_22893226_22893340_1\">The basic execution character set and the basic execution wide-character set shall each contain all the members of the basic source character set, plus control characters representing alert, backspace, and carriage return, plus a null character (respectively, null wide character), whose representation has all zero bits. For each basic execution character set, the values of the members shall be non-negative and distinct from one another. In both the source and execution basic character sets, the value of each character after 0 in the above list of decimal digits shall be one greater than the value of the previous. The execution character set and the execution wide-character set are implementation-defined supersets of the basic execution character\n  set and the basic execution wide-character set, respectively. The values of the members of the execution character sets and the sets of additional members are locale-specific.</p>\n</blockquote>\n<p>n3797 S2.14.3/1:</p>\n<blockquote>\n<p id=\"so_22893226_22893340_2\">A character literal that does not begin with u, U, or L is an ordinary character literal, also referred to as a narrow-character literal. An ordinary character literal that contains a single c-char representable in the execution character set has type char, with value equal to the numerical value of the encoding of the c-char in the execution character set.</p>\n</blockquote>\n<p>n3297 S2.14.5/6:</p>\n<blockquote>\n<p id=\"so_22893226_22893340_3\">a string literal that does not begin with an encoding-prefix is an ordinary string\n  literal, and is initialized with the given characters.</p>\n</blockquote>\n<p>The execution character set is implementation-defined. Microsoft's statement reqarding implementation-defined behaviour for the C compiler is here: <a href=\"http://msdn.microsoft.com/en-us/library/hx3yt8af.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/hx3yt8af.aspx</a>. [I can't find a separate one for C++, so I assume this applies to both.]</p>\n<p><code>The source character set is the set of legal characters that can appear in source files. For Microsoft C, the source character set is the standard ASCII character set.</code></p>\n<p>Sorry about the language-lawyer stuff, but what this says is that the MSVC compiler is independent of locale/encoding and implements 8-bit ASCII, code page unspecified. Obviously the standard library functions may need to know the encoding for various purposes, but that is a whole other story.</p>\n<hr>\n<p>As a final point, the Microsoft C compiler dates back around 30 years, since before Windows. It has always been possible to write source code in code page 850 and have it run correctly on the console, subject to careful handling of extended (8-bit) characters. Many people still do. The problem here source code written in Windows-Ansi or Unicode and keyboard input from a OEM (cp850) console. Change either one to get it to work correctly.</p>\n</hr></hr></hr>", "LastEditorUserId": "1105562", "LastActivityDate": "2014-04-07T00:41:17.057", "Score": "4", "CreationDate": "2014-04-06T11:24:10.760", "ParentId": "22893226", "CommentCount": "4", "OwnerUserId": "1105562", "LastEditDate": "2014-04-07T00:41:17.057"}});