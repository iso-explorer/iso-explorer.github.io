post_cb({"24574182": {"ParentId": "24574092", "PostTypeId": "2", "CommentCount": "5", "Body": "<pre><code>node list[1000];\n</code></pre>\n<p>is an array of structures. A structure being element of the array needs a default constructor (or initializer has to be explicitly specified, <a href=\"http://ideone.com/mO0vFk\" rel=\"nofollow\">see example</a>), thus the error. Add a default constructor to <code>node</code>.</p>\n<hr>\n<p>C++ Standard n3337 <strong>\u00a7</strong> 12.6.1/3</p>\n<blockquote>\n<p id=\"so_24574092_24574182_0\">[ Note: If T is a class type with no default constructor, any\n  declaration of an object of type T (or array thereof) is ill-formed if\n  no initializer is explicitly specified (see 12.6 and 8.5). \u2014 end note\n  ]</p>\n</blockquote>\n</hr>", "OwnerUserId": "1141471", "LastEditorUserId": "1141471", "LastEditDate": "2014-07-04T12:55:00.673", "Id": "24574182", "Score": "5", "CreationDate": "2014-07-04T12:20:11.683", "LastActivityDate": "2014-07-04T12:55:00.673"}, "24574092": {"CommentCount": "1", "ViewCount": "89", "PostTypeId": "1", "LastEditorUserId": "1078", "CreationDate": "2014-07-04T12:14:24.600", "LastActivityDate": "2014-07-04T12:55:00.673", "Title": "Error in calling constructor", "AcceptedAnswerId": "24574182", "LastEditDate": "2014-07-04T12:43:18.113", "Id": "24574092", "Score": "1", "Body": "<p>I tried to call a structure's constructor from a class constructor but its throwing an error. I have been trying to solve this for 30 mins</p>\n<p><strong>Structure:</strong></p>\n<pre><code>struct node\n{\n    int val;\n    node* left;\n    node* right;\n    node(int x)\n    {\n        val = x;\n        left = NULL;\n        right = NULL;\n    }\n\n    ~node()\n    {\n        delete(left);\n        delete(right);\n    }\n};\n</code></pre>\n<p><strong>class:</strong></p>\n<pre><code>class Tree\n{\n    node* head;\n    node list[1000];\n    bool flag[1000] = {0};\npublic:\n    Tree(int x)\n    {\n        head = new node(x);\n    }\n</code></pre>\n<p><strong>main() method:</strong></p>\n<pre><code>int main()\n{\n    int a[] = {50,35,75,20,45,60,90,10,25,40,47,65,80,120,1,15,23,30,39,\n46,49,82,110,21,24,48};\n    Tree t(a[0]);\n</code></pre>\n<p>the error I am getting is </p>\n<p><strong>Error Log:</strong> </p>\n<pre><code>In constructor 'Tree::Tree(int)':|\n|37|error: no matching function for call to 'node::node()'|\n|37|note: candidates are:|\n|17|note: node::node(int)|\n|17|note:   candidate expects 1 argument, 0 provided|\n|12|note: node::node(const node&amp;)|\n|12|note:   candidate expects 1 argument, 0 provided|\n</code></pre>\n<p>the structure constructor has one argument and in the class constructor I am calling with one argument yet the the error is throwing that the program call with 0 argument. I don't know where the problem is. </p>\n<p>Thanks.</p>\n", "Tags": "<c++><class><struct><constructor>", "OwnerUserId": "3769802", "AnswerCount": "2"}, "24574244": {"ParentId": "24574092", "CommentCount": "0", "Body": "<p>The <code>Tree</code> class contains nodes:</p>\n<pre><code>node list[1000];\n</code></pre>\n<p>which need to be default-initialised. But there's no default constructor to do that with.</p>\n<p>Assuming you actually want a thousand nodes separate from the ones that make up the tree, You could make your existing constructor usable as a default constructor by giving it a default argument:</p>\n<pre><code>node(int x = 0)\n</code></pre>\n<p>or add a separate default constructor, for example:</p>\n<pre><code>node() : val(0), left(0), right(0) {}\n</code></pre>\n<p>or you might avoid the need for a default constructor by replacing the array with a more friendly container</p>\n<pre><code>std::vector&lt;node&gt; list;\n</code></pre>\n<p>and initialise that to the size you want in the constructor:</p>\n<pre><code>Tree(int x) : head(new node(x)), list(1000, node(0)) {}\n</code></pre>\n", "OwnerUserId": "204847", "PostTypeId": "2", "Id": "24574244", "Score": "1", "CreationDate": "2014-07-04T12:23:06.647", "LastActivityDate": "2014-07-04T12:23:06.647"}, "bq_ids": {"n4140": {"so_24574092_24574182_0": {"section_id": 426, "quality": 0.7777777777777778, "length": 14}}, "n3337": {"so_24574092_24574182_0": {"section_id": 418, "quality": 0.7777777777777778, "length": 14}}, "n4659": {"so_24574092_24574182_0": {"section_id": 444, "quality": 0.7777777777777778, "length": 14}}}});