post_cb({"631195": {"ParentId": "630946", "CommentCount": "2", "Body": "<p>There are so many that you cannot but get tired. Here are some:</p>\n<pre><code>void incrementY() {y++}\n</code></pre>\n<p>No <code>;</code> after <code>y++</code>.</p>\n<pre><code>24.   A::x();\n</code></pre>\n<p>Non static member cannot be invoked via a class name.</p>\n<pre><code>25.   A a;\n</code></pre>\n<p>No definition of static member <code>y</code>. If <code>y</code> was a <code>const</code> this would've been okay. This is a bit tricky so I'll quote.</p>\n<blockquote>\n<p id=\"so_630946_631195_0\"><strong>9.4.2 Static data members</strong></p>\n<ol start=\"2\">\n<li><p id=\"so_630946_631195_1\">The declaration of a static data member in its class definition is not a definition and may be of an incomplete type other than cv-qualified void [...]</p></li>\n<li><p id=\"so_630946_631195_2\">If a static data member is of const effective literal type, its declaration in the class definition can specify\n  a constant-initializer brace-or-equal-initializer with an initializer-clause that is an integral constant expression.\n  A static data member of effective literal type can be declared in the class definition with the\n  constexpr specifier; if so, its declaration shall specify a constant-initializer brace-or-equal-initializer with an initializer-clause that is an integral constant expression. In both these cases, the member may appear in integral constant expressions. The member shall still be defined in a namespace scope if it is used in the program and the  namespace scope definition shall not contain an initializer.</p></li>\n</ol>\n</blockquote>\n<pre><code>26.   a.getY();\n27.   A::getY();\n</code></pre>\n<p>Illegal reference to non-static member <code>A::z</code>.</p>\n<p>Taken care of by first observation.</p>\n<pre><code>28.   B b;\n29.   C c;\n30.   C::getY();\n</code></pre>\n<p><code>getY()</code> is a private member of <code>B</code>, not visible to <code>C</code>, let alone be public.</p>\n<pre><code>31.   b.x();\n</code></pre>\n<p>The member function <code>x()</code> inherited from <code>A</code> is private.</p>\n", "OwnerUserId": "66692", "Id": "631195", "PostTypeId": "2", "OwnerDisplayName": "dirkgently", "Score": "3", "CreationDate": "2009-03-10T16:47:17.990", "LastActivityDate": "2009-03-10T16:47:17.990"}, "630987": {"ParentId": "630946", "CommentCount": "0", "Body": "<p>You are correct there (although it actually means that all <em>A</em>'s methods become inaccessible).</p>\n<p>However, there are a few other problems:\n<pre><code>A::x() // will not work as x is not static.\na.getY() // will not work as getY() is static.\nC::getY() // Cannot access getY()\n</code></pre></p>\n", "OwnerUserId": "70847", "Id": "630987", "PostTypeId": "2", "OwnerDisplayName": "Ed Woodcock", "Score": "0", "CreationDate": "2009-03-10T16:07:57.397", "LastActivityDate": "2009-03-10T16:07:57.397"}, "630946": {"CommentCount": "1", "ViewCount": "202", "PostTypeId": "1", "LastEditorUserId": "5640", "CreationDate": "2009-03-10T16:01:33.933", "LastActivityDate": "2009-06-01T17:42:40.743", "AnswerCount": "3", "LastEditDate": "2009-06-01T17:42:40.743", "AcceptedAnswerId": "630987", "LastEditorDisplayName": "MSN", "Title": "C++ errors in code", "Id": "630946", "Score": "0", "Body": "<p>I have this code (question from exam) and there are many errors in the code, here is the code:</p>\n<pre><code> class A\n {\n   int z;\n   static int y;\n   public:\n     A() {(*this).incrementY();}\n    int x () { y=y+2; return z;}\n    static int getY(){ return z;}\n    void incrementY() {y++}\n };\n class B: A\n {\n   public:\n    B (): A() {(*this).incrementY();};\n };\n class C : public B\n {\n   public:\n    C(): B() {(*this).incrementY;() }\n };\n\n int main()\n {\n   A::x();\n   A a;\n   a.getY();\n   A::getY();\n   B b;\n   C c;\n   C::getY();\n   b.x();\n }\n</code></pre>\n<p>There is a private inheritance. This means that all the methods and variables in B become private to any class that inherits from B? </p>\n", "Tags": "<c++>", "OwnerDisplayName": "Greg"}, "bq_ids": {"n4140": {"so_630946_631195_2": {"section_id": 5908, "quality": 0.8305084745762712, "length": 49}, "so_630946_631195_1": {"section_id": 5907, "quality": 0.9375, "length": 15}}, "n3337": {"so_630946_631195_2": {"section_id": 5680, "quality": 0.8305084745762712, "length": 49}, "so_630946_631195_1": {"section_id": 5679, "quality": 0.9375, "length": 15}}, "n4659": {"so_630946_631195_1": {"section_id": 7389, "quality": 0.8125, "length": 13}}}, "630980": {"ParentId": "630946", "CommentCount": "0", "Body": "<p>Yes, that is correct, although you could just compile it with any number of online C++ compilers to verify.</p>\n", "OwnerUserId": "6210", "Id": "630980", "PostTypeId": "2", "OwnerDisplayName": "MSN", "Score": "0", "CreationDate": "2009-03-10T16:06:53.500", "LastActivityDate": "2009-03-10T16:06:53.500"}});