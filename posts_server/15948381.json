post_cb({"15948413": {"ParentId": "15948381", "CommentCount": "0", "Body": "<p>It will be the reverse order of the construction. This is specified by the C++ standard.</p>\n", "OwnerUserId": "882003", "PostTypeId": "2", "Id": "15948413", "Score": "6", "CreationDate": "2013-04-11T12:08:45.743", "LastActivityDate": "2013-04-11T12:08:45.743"}, "15948381": {"CommentCount": "1", "AcceptedAnswerId": "15948444", "PostTypeId": "1", "LastEditorUserId": "900626", "CreationDate": "2013-04-11T12:07:00.637", "LastActivityDate": "2013-04-11T16:13:45.430", "LastEditDate": "2013-04-11T16:13:45.430", "ViewCount": "232", "FavoriteCount": "2", "Title": "What determines the sequence of object destruction in C++ program?", "Id": "15948381", "Score": "0", "Body": "<p>The C++ program is like this:</p>\n<pre><code>class Foo\n{ \n    // something here\n};\n\nint main ()\n{\n     Foo f_A;\n     Foo f_B;\n     Foo f_C;\n     //do something here\n\n     return 0;\n}\n</code></pre>\n<p>It has been proved that <code>f_A</code>,which constructs before <code>f_B</code>, deconstructs after <code>f_B</code>, and <code>f_B</code> deconstructs after <code>f_C</code> in g++ .What determine the sequence ? Is it compiler related ?</p>\n", "Tags": "<c++><oop><object>", "OwnerUserId": "1145750", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_15948381_15948444_0": {"section_id": 3917, "quality": 0.95, "length": 19}, "so_15948381_15948444_1": {"section_id": 3909, "quality": 0.9444444444444444, "length": 17}}, "n3337": {"so_15948381_15948444_0": {"section_id": 3777, "quality": 0.95, "length": 19}, "so_15948381_15948444_1": {"section_id": 3769, "quality": 0.9444444444444444, "length": 17}}, "n4659": {"so_15948381_15948444_0": {"section_id": 4803, "quality": 0.95, "length": 19}, "so_15948381_15948444_1": {"section_id": 4795, "quality": 0.9444444444444444, "length": 17}}}, "15948444": {"ParentId": "15948381", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>The C++ standard specifies the order.</p>\n<p>Paragraph 6.7/2:</p>\n<blockquote>\n<p id=\"so_15948381_15948444_0\">Variables with automatic storage duration (3.7.3) are initialized each\n  time their declaration-statement is executed. Variables with automatic\n  storage duration declared in the block are destroyed on exit from the\n  block (6.6).</p>\n</blockquote>\n<p>This means that the order of construction is the same as the order the variables are listed in your source above, which is important because...</p>\n<p>Paragraph 6.6/2:</p>\n<blockquote>\n<p id=\"so_15948381_15948444_1\">On exit from a scope (however accomplished), objects with automatic\n  storage duration (3.7.3) that have been constructed in that scope are\n  destroyed in the reverse order of their construction.</p>\n</blockquote>\n", "OwnerUserId": "50079", "LastEditorUserId": "50079", "LastEditDate": "2013-04-11T13:10:14.667", "Id": "15948444", "Score": "5", "CreationDate": "2013-04-11T12:10:20.833", "LastActivityDate": "2013-04-11T13:10:14.667"}});