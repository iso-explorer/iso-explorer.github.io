post_cb({"39187751": {"ParentId": "39180526", "Score": "1", "CreationDate": "2016-08-28T03:25:23.817", "Id": "39187751", "OwnerUserId": "2307646", "LastActivityDate": "2016-08-28T03:25:23.817", "Body": "<p>This example is from <a href=\"http://www.eel.is/c++draft/algorithms.parallel.exec#3\" rel=\"nofollow\">the draft (e.g. N4606 [algorithms.parallel.exec]/3)</a> :</p>\n<blockquote>\n<p id=\"so_39180526_39187751_0\">[ Example:</p>\n</blockquote>\n<pre><code>std::atomic&lt;int&gt; x{0};\nint a[] = {1,2};\nstd::for_each(std::execution::par, std::begin(a), std::end(a), [&amp;](int) {\n  x.fetch_add(1, std::memory_order_relaxed);\n  // spin wait for another iteration to change the value of x\n  while (x.load(std::memory_order_relaxed) == 1) { } // incorrect: assumes execution order\n});\n</code></pre>\n<blockquote>\n<p id=\"so_39180526_39187751_1\">The above example depends on the order of execution of the iterations, and will not terminate if both iterations are executed sequentially on the same thread of execution.  \u2014 end example ]</p>\n</blockquote>\n", "PostTypeId": "2", "CommentCount": "0"}, "39180526": {"Tags": "<c++><multithreading><c++1z>", "ViewCount": "93", "LastEditDate": "2016-08-27T12:02:55.947", "CreationDate": "2016-08-27T11:17:21.643", "LastEditorUserId": "5376789", "Title": "Interpretation of a multi-thread example from cppreference in C++", "CommentCount": "3", "AcceptedAnswerId": "39187751", "Score": "-1", "OwnerUserId": "5376789", "Id": "39180526", "LastActivityDate": "2016-08-28T03:25:23.817", "Body": "<p>I have found a program in <a href=\"http://en.cppreference.com/w/cpp/algorithm/execution_policy_tag_t\" rel=\"nofollow\">cppreference</a>:</p>\n<pre><code>std::atomic&lt;int&gt; x{0};\nint a[] = {1,2};\nstd::for_each(std::execution::par, std::begin(a), std::end(a), [&amp;](int) {\n    x.fetch_add(1, std::memory_order_relaxed);\n    while (x.load(std::memory_order_relaxed) == 1) { } // Error: assumes execution order\n});\n</code></pre>\n<p>What does the word \"Error: assumes execution order\" mean, i.e. what is the error of this program? It seems that the program aims to show a deadlock, but I cannot see that.</p>\n<p>I know the title is unclear, but I really don't know how to describe the problem since I cannot find any mistake in the program. Sorry about that.</p>\n", "PostTypeId": "1", "AnswerCount": "1"}, "bq_ids": {"n4659": {"so_39180526_39187751_1": {"length": 16, "section_id": 1341, "quality": 0.8888888888888888}}}});