post_cb({"bq_ids": {"n4140": {"so_17633252_17633556_1": {"length": 6, "quality": 1.0, "section_id": 3334}}, "n3337": {"so_17633252_17633556_1": {"length": 6, "quality": 1.0, "section_id": 3204}}, "n4659": {"so_17633252_17633556_1": {"length": 6, "quality": 1.0, "section_id": 4101}}}, "17633556": {"Id": "17633556", "PostTypeId": "2", "Body": "<p>There's a compelling example in the C++ Standard, [except.throw]/1:</p>\n<blockquote>\n<p id=\"so_17633252_17633556_0\">Example:</p>\n<pre><code>throw \"Help!\";\n</code></pre>\n<p id=\"so_17633252_17633556_1\">can be caught by a <em>handler</em> of <code>const char*</code> type:</p>\n<pre><code>try {\n    // ...\n} catch(const char* p) {\n    // handle character string exceptions here\n}\n</code></pre>\n</blockquote>\n<p>When you throw via <code>throw \"Error: Cannot divide by zero\\n\";</code>, the expression after <code>throw</code> is a string literal, therefore of type <em>array of n <strong>const</strong> char</em> (where <em>n</em> is the length of the string + 1). This array type is decayed to a pointer [except.throw]/3, therefore the type of the object thrown is <code>char const*</code>.</p>\n<p>Which types are catched by a <em>handler</em> (<code>catch</code>) is described in [except.handle]/3, and none of the cases apply here, i.e. the <code>const char*</code> is not catched by a <em>handler</em> of type <code>char*</code>.</p>\n", "LastActivityDate": "2013-07-13T19:35:05.157", "CommentCount": "11", "CreationDate": "2013-07-13T19:35:05.157", "ParentId": "17633252", "Score": "1", "OwnerUserId": "420683"}, "17633252": {"ViewCount": "890", "Body": "<p>My OS is Win8<br>\nusing Code::Blocks 12.10</br></p>\n<p>I'm trying to get a handle on throwing and handling exceptions using an <br>example from \nStarting Out with C++ Early Objects Addison Wesley.</br></p>\n<p>Here is the simple code I'm using:</p>\n<pre><code>// This program illustrates exception handling\n#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n\nusing namespace std;\n\n// Function prototype\ndouble divide(double, double);\n\nint main()\n{\n    int num1, num2;\n    double quotient;\n\n    //cout &lt;&lt; \"Enter two integers: \";\n    //cin &gt;&gt; num1 &gt;&gt; num2;\n\n    num1 = 3;\n    num2 = 0;\n\n    try\n    {\n        quotient = divide(num1,num2);\n        cout &lt;&lt; \"The quotient is \" &lt;&lt; quotient &lt;&lt; endl;\n    }\n    catch (char *exceptionString)\n    {\n        cout &lt;&lt; exceptionString;\n        exit(EXIT_FAILURE);     // Added to provide a termination.\n    }\n    cout &lt;&lt; \"End of program.\" &lt;&lt; endl;\n    return 0;\n  }\n\n double divide(double numerator, double denominator)\n {\n    if (denominator == 0)\n        throw \"Error: Cannot divide by zero\\n\";\n    else\n        return numerator/denominator;\n }\n</code></pre>\n<p>The program will compile, and when I use two ints &gt; 0 execution is normal. If I try to divide by 0 however, I get the following message:</p>\n<pre><code>terminate called after throwing an instance of 'char const*'\n\nThis application has requested the Runtime to terminate it in an unusual way.\nPlease contact the application's support team for more information.\n\nProcess returned 255 (0xFF)   execution time : 4.485 s\nPress any key to continue.\n</code></pre>\n<p>I've looked at other examples, but have yet to find similar code to derive an answer from.</p>\n<p>Any advice?</p>\n", "AcceptedAnswerId": "17633556", "Title": "Unusual termination in try catch throw", "CreationDate": "2013-07-13T18:54:58.477", "Id": "17633252", "CommentCount": "9", "LastEditDate": "2013-07-13T19:02:33.290", "PostTypeId": "1", "LastEditorUserId": "423362", "LastActivityDate": "2013-07-13T19:35:05.157", "Score": "1", "OwnerUserId": "423362", "Tags": "<c++><exception><try-catch><throw>", "AnswerCount": "1"}});