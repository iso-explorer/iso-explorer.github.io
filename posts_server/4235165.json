post_cb({"4235165": {"CommentCount": "2", "ViewCount": "245", "PostTypeId": "1", "LastEditorUserId": "82320", "CreationDate": "2010-11-20T21:44:58.237", "LastActivityDate": "2010-11-20T22:32:26.203", "Title": "Can one define two `istream_iterator`s to a single file?", "FavoriteCount": "0", "LastEditDate": "2010-11-20T22:10:41.943", "Id": "4235165", "Score": "2", "Body": "<pre><code>ifstream file1;\nfile1.open(\"in1.txt\");\nistream_iterator&lt;string&gt; iterator1(file1);\ncopy(istream_iterator&lt;string&gt;(file1), istream_iterator&lt;string&gt;(), back_inserter(lstr));\n</code></pre>\n<p>Can we have two input stream iterators pointing to a single file? As in the above case the iterator is getting advanced (only one time deferencing, as it should be) and first element (string) is missing in the copy. Is there a possible way?</p>\n", "Tags": "<c++><stl><istream-iterator>", "OwnerUserId": "451503", "AnswerCount": "2"}, "4235360": {"ParentId": "4235165", "CommentCount": "1", "Body": "<p>The Standard lays it bare at 24.1.1 as a note followed from the requirement rules. And since everyone wants to hear Standardese, I'm quoting it</p>\n<blockquote>\n<p id=\"so_4235165_4235360_0\">[Note: For input iterators, a == b does not imply ++a == ++b. (Equality does not guarantee the substitution property or referential transparency.) Algorithms on input iterators should never attempt to pass through the same iterator twice. They should be single pass algorithms. </p>\n</blockquote>\n", "OwnerUserId": "34509", "PostTypeId": "2", "Id": "4235360", "Score": "1", "CreationDate": "2010-11-20T22:32:26.203", "LastActivityDate": "2010-11-20T22:32:26.203"}, "4235228": {"ParentId": "4235165", "PostTypeId": "2", "CommentCount": "10", "Body": "<p>You can, but if you advance one, the file pointer will advance with it, so it will affect the other one's next advance.  Also, the iterator is advanced once upon creation, so don't create it until you need it.</p>\n", "OwnerUserId": "440119", "LastEditorUserId": "440119", "LastEditDate": "2010-11-20T22:13:57.700", "Id": "4235228", "Score": "2", "CreationDate": "2010-11-20T21:59:00.150", "LastActivityDate": "2010-11-20T22:13:57.700"}, "bq_ids": {"n4140": {"so_4235165_4235360_0": {"section_id": 5570, "quality": 0.8888888888888888, "length": 24}}, "n3337": {"so_4235165_4235360_0": {"section_id": 5352, "quality": 0.8888888888888888, "length": 24}}, "n4659": {"so_4235165_4235360_0": {"section_id": 7017, "quality": 0.8888888888888888, "length": 24}}}});