post_cb({"1816569": {"ParentId": "1816552", "CommentCount": "2", "Body": "<p>The standard doesn't specify such things because they are often hardware dependent and change over time. While today 32 bits are considered a standard, in 10 years doing things in less than 64 bit may possibly seem distasteful.</p>\n", "OwnerUserId": "9611", "PostTypeId": "2", "Id": "1816569", "Score": "2", "CreationDate": "2009-11-29T19:55:20.077", "LastActivityDate": "2009-11-29T19:55:20.077"}, "1816568": {"ParentId": "1816552", "CommentCount": "0", "Body": "<p>What you've quoted is all that's guaranteed about the floating point types in C++. As it says, their representation is implementation-defined.</p>\n<p>You can, though, query for information about the limits and whether the types are IEC 559 (IEEE 754) specified types using the <code>std::numeric_limits</code> templates in <code>&lt;limits&gt;</code>.</p>\n", "OwnerUserId": "19563", "PostTypeId": "2", "Id": "1816568", "Score": "6", "CreationDate": "2009-11-29T19:55:05.257", "LastActivityDate": "2009-11-29T19:55:05.257"}, "1816552": {"CommentCount": "1", "ViewCount": "3385", "PostTypeId": "1", "LastEditorUserId": "44390", "CreationDate": "2009-11-29T19:49:33.723", "LastActivityDate": "2012-06-18T13:38:06.753", "Title": "Where does C++ standard define the value range of float types?", "AcceptedAnswerId": "1816715", "LastEditDate": "2012-06-18T13:38:06.753", "Id": "1816552", "Score": "2", "Body": "<p>As far as I know floating point values are of the form n * 2^e, with</p>\n<ul>\n<li>float range being n = -(2^23-1) - (2^23-1), and e = -126 - 127,</li>\n<li>double range being n = -(2^52-1) - (2^52-1), and e = -1022 - 1023</li>\n</ul>\n<p>I was looking through the C++ standard, but failed to find the place where the standard specifies this, or mandates the association of the float, double and long double types with ranges defined in other (IEEE) standards. The only related thing I found in 3.9.1.8 is:</p>\n<blockquote>\n<p id=\"so_1816552_1816552_0\">There are three floating point types: float, double, and long double. The type double provides at least as much precision as float, and the type long double provides at least as much precision as double. The set of values of the type float is a subset of the set of values of the type double; the set of values of the type double is a subset of the set of values of the type long  double. The value representation of floating-point types is implementation-defined.</p>\n</blockquote>\n<p>And no mention of the minimum range provided by the type.</p>\n<p>Where/how does the standard specify the (minimum?) value range of the floating point types? Or can a compiler freely choose any value range and still be standard compliant?</p>\n", "Tags": "<c++><floating-point><double><standards><range>", "OwnerUserId": "73248", "AnswerCount": "3"}, "1816715": {"ParentId": "1816552", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>Just like integer numberic limits, the limits for <code>float</code>, <code>double</code> and <code>long double</code> are imported from the C standard. The minimum value for constants <code>FLT_MAX</code>, <code>DBL_MAX</code> and <code>LDBL_MAX</code> is <code>1E+37</code>. For their <code>*_MIN</code> variants the maximum value is <code>1E-37</code>.</p>\n", "OwnerUserId": "89847", "LastEditorUserId": "89847", "LastEditDate": "2009-11-29T21:11:08.410", "Id": "1816715", "Score": "1", "CreationDate": "2009-11-29T20:46:20.157", "LastActivityDate": "2009-11-29T21:11:08.410"}, "bq_ids": {"n4140": {"so_1816552_1816552_0": {"section_id": 7217, "quality": 0.9019607843137255, "length": 46}}, "n3337": {"so_1816552_1816552_0": {"section_id": 6961, "quality": 0.9019607843137255, "length": 46}}, "n4659": {"so_1816552_1816552_0": {"section_id": 8726, "quality": 0.8823529411764706, "length": 45}}}});