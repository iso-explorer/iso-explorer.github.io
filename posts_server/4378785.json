post_cb({"bq_ids": {"n4140": {"so_4378785_4379221_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 3289}}, "n3337": {"so_4378785_4379221_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 3159}}, "n4659": {"so_4378785_4379221_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 4051}}}, "4378821": {"Id": "4378821", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_4378785_4378821_0\">is it guaranteed ?</p>\n</blockquote>\n<p>Yes it is guaranteed. The values of <code>S().i</code> and <code>S().j</code> would be <code>0</code>. <code>()</code> implies <a href=\"https://stackoverflow.com/questions/1613341/what-do-the-following-phrases-mean-in-c-zero-default-and-value-initializati/1613383#1613383\">value initialization.</a> (that means <code>i</code> and <code>j</code> would be zero-initialized because <code>S</code> is a class without a user defined default constructor)</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2010-12-07T16:17:33.807", "Score": "10", "CreationDate": "2010-12-07T16:12:11.490", "ParentId": "4378785", "CommentCount": "3", "OwnerUserId": "165520", "LastEditDate": "2017-05-23T12:18:39.737"}, "4379221": {"Id": "4379221", "PostTypeId": "2", "Body": "<p>From C++ Standard ISO/IEC 14882:2003(E) point 3.6.2</p>\n<blockquote>\n<p id=\"so_4378785_4379221_0\">Objects with static storage duration (3.7.1) shall be zero-initialized (8.5) before any other initialization\n  takes place.</p>\n</blockquote>\n<p>So this is valid as both variables are zero-initialized.</p>\n", "LastActivityDate": "2010-12-07T16:48:39.273", "CommentCount": "3", "CreationDate": "2010-12-07T16:48:39.273", "ParentId": "4378785", "Score": "0", "OwnerUserId": "455304"}, "4379526": {"Id": "4379526", "PostTypeId": "2", "Body": "<p>Technically, yes.  They will be initialized to 0 <strike>(at least under a non-debug build for most compilers.  Visual Studio's compiler will usually initialize uninitialized variables to a specific pattern in debug builds)</strike>.</p>\n<p>However, if you were sitting in a code review, don't be surprised if you get yelled at for not explicitly initializing your variables.</p>\n", "LastEditorUserId": "529761", "LastActivityDate": "2010-12-07T19:06:12.427", "Score": "-1", "CreationDate": "2010-12-07T17:17:18.043", "ParentId": "4378785", "CommentCount": "1", "OwnerUserId": "529761", "LastEditDate": "2010-12-07T19:06:12.427"}, "4378785": {"ViewCount": "222", "Body": "<p>Have a look at this code snippet</p>\n<pre><code>struct S{ int i; int j;};\n\nint main()\n{\n   assert(S().i ==  S().j) // is it guaranteed ?\n}\n</code></pre>\n<p>Why?</p>\n", "AcceptedAnswerId": "4378821", "Title": "Temporary Object confusion", "CreationDate": "2010-12-07T16:09:11.883", "Id": "4378785", "CommentCount": "0", "LastEditDate": "2010-12-07T16:10:25.500", "PostTypeId": "1", "LastEditorUserId": "533916", "LastActivityDate": "2010-12-07T19:06:12.427", "Score": "7", "OwnerUserId": "533916", "Tags": "<c++><temporary>", "AnswerCount": "3"}});