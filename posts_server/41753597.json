post_cb({"41753668": {"ParentId": "41753597", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_41753597_41753668_0\">It looks like we are trying to access the private member using a pointer to the class but I'm not sure if it works differently.</p>\n</blockquote>\n<p>Yes that is correct. Since <code>dummy()</code> is a member of <code>A</code>, it has access to all members of <code>A</code>, including private ones.</p>\n", "OwnerUserId": "1440565", "PostTypeId": "2", "Id": "41753668", "Score": "0", "CreationDate": "2017-01-19T23:36:20.013", "LastActivityDate": "2017-01-19T23:36:20.013"}, "41753597": {"CommentCount": "1", "ViewCount": "95", "PostTypeId": "1", "LastEditorUserId": "2378300", "CreationDate": "2017-01-19T23:29:03.093", "LastActivityDate": "2017-05-15T10:25:50.753", "Title": "Accessing private member using this pointer returned by shared_from_this", "AcceptedAnswerId": "41753794", "LastEditDate": "2017-05-15T10:25:50.753", "Id": "41753597", "Score": "0", "Body": "<p>I have an implementation which looks like this:</p>\n<pre><code>class A : public std::enable_shared_from_this&lt;A&gt;\n{\npublic:\n    A() {}\n    void dummy(std::string name);\n\nprivate:\n    std::map&lt;std::string, std::string&gt; cache;\n};\n\nvoid\nA::dummy(std::string name) {\n    auto shared_this = shared_from_this();\n    auto find =\n        [name, shared_this] () {\n            auto iter = shared_this-&gt;cache.find(name);\n    };\n}\n</code></pre>\n<p>I am not sure how this line works:\n    auto iter = shared_this-&gt;cache.find(name);</p>\n<p>It looks like we are trying to access the private member using a pointer to the class but I'm not sure if it works differently.</p>\n<p>How does this work?</p>\n", "Tags": "<c++><memory-management><this><shared-ptr>", "OwnerUserId": "6723229", "AnswerCount": "2"}, "41753794": {"ParentId": "41753597", "CommentCount": "0", "Body": "<p><code>A::dummy(std::string name)</code> is a member of the class <code>A</code>. And thus, from within this function, you have access to all <code>public</code>, <code>protected</code>, and <code>private</code> members for any instance of <code>A</code>. Here are relevant quotes from the standard:</p>\n<blockquote>\n<p id=\"so_41753597_41753794_0\">N4140 \u00a711 [class.access]/1</p>\n<p id=\"so_41753597_41753794_1\">A member of a class can be:</p>\n<p id=\"so_41753597_41753794_2\">(1.1) \u2014 <strong>private</strong>; that is, <strong>its name can be used only by members</strong> and friends of the class in which it is declared.</p>\n<p id=\"so_41753597_41753794_3\">(1.2) \u2014 protected; that is, its name can be used only by members and friends of the class in which it is\n  declared, by classes derived from that class, and by their friends (see 11.4).</p>\n<p id=\"so_41753597_41753794_4\">(1.3) \u2014 public; that is, its name can be used anywhere without access restriction.</p>\n<p id=\"so_41753597_41753794_5\">N4140 \u00a711 [class.access]/2</p>\n<p id=\"so_41753597_41753794_6\"><strong>A member of a class can also access all the names to which the class has access.</strong> A local class of a member function may access the same names that the member function itself may access.</p>\n</blockquote>\n", "OwnerUserId": "2666212", "PostTypeId": "2", "Id": "41753794", "Score": "2", "CreationDate": "2017-01-19T23:50:22.757", "LastActivityDate": "2017-01-19T23:50:22.757"}, "bq_ids": {"n4140": {"so_41753597_41753794_4": {"section_id": 6664, "quality": 1.0, "length": 7}, "so_41753597_41753794_6": {"section_id": 6665, "quality": 1.0, "length": 22}, "so_41753597_41753794_3": {"section_id": 6664, "quality": 0.9333333333333333, "length": 14}, "so_41753597_41753794_2": {"section_id": 6664, "quality": 1.0, "length": 8}}, "n3337": {"so_41753597_41753794_4": {"section_id": 6419, "quality": 1.0, "length": 7}, "so_41753597_41753794_6": {"section_id": 6420, "quality": 1.0, "length": 22}, "so_41753597_41753794_3": {"section_id": 6419, "quality": 0.9333333333333333, "length": 14}, "so_41753597_41753794_2": {"section_id": 6419, "quality": 1.0, "length": 8}}, "n4659": {"so_41753597_41753794_4": {"section_id": 8139, "quality": 1.0, "length": 7}, "so_41753597_41753794_6": {"section_id": 8140, "quality": 1.0, "length": 22}, "so_41753597_41753794_3": {"section_id": 8139, "quality": 0.9333333333333333, "length": 14}, "so_41753597_41753794_2": {"section_id": 8139, "quality": 1.0, "length": 8}}}});