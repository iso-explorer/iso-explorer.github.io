post_cb({"bq_ids": {"n4140": {"so_18123121_18123326_1": {"length": 26, "quality": 1.0, "section_id": 369}, "so_18123121_18123326_3": {"length": 10, "quality": 0.5882352941176471, "section_id": 373}}, "n3337": {"so_18123121_18123326_1": {"length": 26, "quality": 1.0, "section_id": 359}, "so_18123121_18123326_3": {"length": 16, "quality": 0.9411764705882353, "section_id": 364}}, "n4659": {"so_18123121_18123326_1": {"length": 24, "quality": 0.9230769230769231, "section_id": 381}, "so_18123121_18123326_3": {"length": 10, "quality": 0.5882352941176471, "section_id": 387}}}, "18123208": {"Id": "18123208", "PostTypeId": "2", "Body": "<p>The constructors doesn't return a value, they are simply called as part of the object construction, and the actual \"returning an object\" is the job of the compiler and its generated code.</p>\n<p>For example, lets say you have a class <code>Foo</code>, then when declaring a variable of that class</p>\n<pre><code>Foo myFoo;\n</code></pre>\n<p>the compiler creates the object for you, and calls the appropriate constructor</p>\n", "LastActivityDate": "2013-08-08T10:05:56.160", "CommentCount": "7", "CreationDate": "2013-08-08T10:05:56.160", "ParentId": "18123121", "Score": "3", "OwnerUserId": "440558"}, "18123121": {"ViewCount": "129", "Body": "<p>In most of the c++ code that i have studied, there is no return statement in the copy constructor function, yet this one must return an object. I want to understand why?   </p>\n", "AcceptedAnswerId": "18123208", "Title": "The value returned by the copy constructor", "CreationDate": "2013-08-08T10:01:43.103", "Id": "18123121", "CommentCount": "8", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2013-08-08T10:32:57.927", "LastEditorUserId": "341970", "LastActivityDate": "2013-08-08T10:32:57.927", "Score": "3", "OwnerUserId": "2114690", "Tags": "<c++>", "AnswerCount": "2"}, "18123326": {"Id": "18123326", "PostTypeId": "2", "Body": "<p>The default constructor doesn't return a value. It is simply called at the object construction.</p>\n<p>From the standard :</p>\n<blockquote>\n<p id=\"so_18123121_18123326_0\"><strong>12.1 Constructors [class.ctor]</strong></p>\n<p id=\"so_18123121_18123326_1\">A default constructor for a class X is a constructor of class X that can be called without an argument. If there is no user-declared constructor for class X, a constructor having no parameters is implicitly declared as defaulted (8.4). An implicitly-declared default constructor is an inline public member of its class.</p>\n<p id=\"so_18123121_18123326_2\"><strong>[....]</strong></p>\n<p id=\"so_18123121_18123326_3\">No return type (not even void) shall be specified for a constructor. A return statement in the body of a constructor shall not specify a return value. The address of a constructor shall not be taken.</p>\n</blockquote>\n<p>Here is an example of use :</p>\n<pre><code>class Foo\n{\npublic:\n    Foo() {} // User defined default constructor\n};\nFoo myFoo;\n</code></pre>\n", "LastActivityDate": "2013-08-08T10:11:39.583", "CommentCount": "0", "CreationDate": "2013-08-08T10:11:39.583", "ParentId": "18123121", "Score": "2", "OwnerUserId": "1394283"}});