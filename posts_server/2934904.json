post_cb({"2934909": {"ParentId": "2934904", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>No, there's no such guarantee. It's undefined according to the C++ standard.</p>\n<p>Bjarne Stroustrup also says it explicitly in \"The C++ Programming Language\" 3rd edition section 6.2.2, with some reasoning:</p>\n<blockquote>\n<p id=\"so_2934904_2934909_0\">Better code can be generated in the\n  absence of restrictions on expression\n  evaluation order</p>\n</blockquote>\n<p>Although technically this refers to an earlier part of the same section which says that the order of evaluation of parts of an expression are also undefined, i.e.</p>\n<pre><code>int x = f(2) + g(3);   // udefined whether f() or g() is called first\n</code></pre>\n", "OwnerUserId": "8206", "LastEditorUserId": "8206", "LastEditDate": "2013-11-24T18:25:12.033", "Id": "2934909", "Score": "68", "CreationDate": "2010-05-29T11:57:07.083", "LastActivityDate": "2013-11-24T18:25:12.033"}, "2934904": {"CommentCount": "0", "AcceptedAnswerId": "2934909", "CreationDate": "2010-05-29T11:55:41.813", "LastActivityDate": "2017-12-02T19:51:56.780", "PostTypeId": "1", "ViewCount": "10506", "FavoriteCount": "17", "Title": "Order of evaluation in C++ function parameters", "Id": "2934904", "Score": "54", "Body": "<p>If we have three functions (foo, bar, and baz) that are composed like so...</p>\n<pre><code>foo(bar(), baz())\n</code></pre>\n<p>Is there any guarantee by the C++ standard that bar will be evaluated before baz?</p>\n", "Tags": "<c++><standards>", "OwnerUserId": "105760", "AnswerCount": "4"}, "2934917": {"ParentId": "2934904", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>There's no specified order for bar() and baz() - the only thing the Standard says is that they will both be evaluated before foo() is called. From the C++ Standard,  section 5.2.2/8:</p>\n<blockquote>\n<p id=\"so_2934904_2934917_0\">The order of evaluation of arguments\n  is unspecified.</p>\n</blockquote>\n", "Id": "2934917", "LastEditDate": "2010-05-29T12:07:41.847", "OwnerDisplayName": "anon", "Score": "13", "CreationDate": "2010-05-29T11:59:09.310", "LastActivityDate": "2010-05-29T12:07:41.847", "LastEditorDisplayName": "anon"}, "47605559": {"ParentId": "2934904", "CommentCount": "0", "Body": "<p>In C++11, the relevant text can be found in <a href=\"https://timsong-cpp.github.io/cppwp/n3337/dcl.fct.default#9\" rel=\"nofollow noreferrer\">8.3.6 Default arguments/9</a> (Emphasis mine)</p>\n<blockquote>\n<p id=\"so_2934904_47605559_0\">Default arguments are evaluated each time the function is called. <strong>The order of evaluation of function arguments is unspecified</strong>. Consequently, parameters of a function shall not be used in a default argument, even if they are not evaluated.</p>\n</blockquote>\n<p>The same verbiage is used by C++14 standard as well, and is found under <a href=\"https://timsong-cpp.github.io/cppwp/n4140/dcl.fct.default#9\" rel=\"nofollow noreferrer\">the same section</a>.</p>\n", "OwnerUserId": "434551", "PostTypeId": "2", "Id": "47605559", "Score": "0", "CreationDate": "2017-12-02T07:15:38.627", "LastActivityDate": "2017-12-02T07:15:38.627"}, "bq_ids": {"n4140": {"so_2934904_2934917_0": {"section_id": 3260, "quality": 0.8, "length": 4}, "so_2934904_2934965_1": {"section_id": 5811, "quality": 0.5263157894736842, "length": 10}, "so_2934904_47605559_0": {"section_id": 3260, "quality": 0.8571428571428571, "length": 18}, "so_2934904_2934965_0": {"section_id": 5995, "quality": 0.5625, "length": 9}}, "n3337": {"so_2934904_2934917_0": {"section_id": 3132, "quality": 0.8, "length": 4}, "so_2934904_2934965_1": {"section_id": 5584, "quality": 0.5263157894736842, "length": 10}, "so_2934904_47605559_0": {"section_id": 3132, "quality": 0.9523809523809523, "length": 20}, "so_2934904_2934965_0": {"section_id": 5763, "quality": 0.5625, "length": 9}}, "n4659": {"so_2934904_2934965_0": {"section_id": 7492, "quality": 0.5625, "length": 9}}}, "2934965": {"ParentId": "2934904", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>From [5.2.2] Function call,</p>\n<blockquote>\n<p id=\"so_2934904_2934965_0\">The order of evaluation of arguments is unspecified. All side effects of argument expression evaluations take effect before the function is entered.</p>\n</blockquote>\n<p>Therefore, there is no guarantee that <code>bar()</code> will run before <code>baz()</code>, only that <code>bar()</code> and <code>baz()</code> will be called before <code>foo</code>.</p>\n<p>Also note from [5] Expressions that:</p>\n<blockquote>\n<p id=\"so_2934904_2934965_1\">except where noted [e.g. special rules for <code>&amp;&amp;</code> and <code>||</code>], the order of evaluation of operands of individual operators and subexpressions of individual expressions, and the order in which side effects take place, is unspecified.</p>\n</blockquote>\n<p>so even if you were asking whether <code>bar()</code> will run before <code>baz()</code> in <code>foo(bar() + baz())</code>, the order is still unspecified.</p>\n", "OwnerUserId": "196844", "LastEditorUserId": "196844", "LastEditDate": "2010-05-29T12:31:47.077", "Id": "2934965", "Score": "9", "CreationDate": "2010-05-29T12:12:20.267", "LastActivityDate": "2010-05-29T12:31:47.077"}});