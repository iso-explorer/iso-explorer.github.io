post_cb({"bq_ids": {"n4140": {"so_12326554_12373331_0": {"length": 20, "quality": 0.9523809523809523, "section_id": 7172}}, "n3337": {"so_12326554_12373331_0": {"length": 20, "quality": 0.9523809523809523, "section_id": 6916}}, "n4659": {"so_12326554_12373331_0": {"length": 19, "quality": 0.9047619047619048, "section_id": 8673}}}, "12373331": {"Id": "12373331", "PostTypeId": "2", "Body": "<p>Since it seems to be solely a GCC issue, you can \"fix\" it by declaring your struct like this:</p>\n<pre><code>struct __attribute__ ((__unused__)) withProtectedClose\n</code></pre>\n<p>This reliably silences the warning on my version 4.6.3 compiler (and the destructor is demonstrably run, in accordance with the standard). It will however <strong>still</strong> warn you about unused variables otherwise.  </p>\n<p>Most of the time, it's a mistake that you really want to know about, so turning off the warning (<code>-Wno-unused-variable</code>) alltogether is not a good alternative. If for no other reason, one will want to remove (unintentionally) unused variables because they confuse people reading the code and put needless burden on the optimizer.</p>\n<p>If you need to be portable, use a macro to encapsulate the attribute stuff (empty macro on non-GCC).</p>\n<p>To address the actual question \"Should compilers ignore unused variables that result in constructors or destructors being run?\" -- <strong>No.</strong></p>\n<p>The C++ standard states  [3.7.3.3]:</p>\n<blockquote>\n<p id=\"so_12326554_12373331_0\">If a variable with automatic storage duration has initialization or a destructor\n   with side effects, it shall not be eliminated even if it appears to be unused,\n   except that a class object or its copy/move may be eliminated as specified in 12.8.</p>\n</blockquote>\n<p>Insofar, a compiler is <em>not</em> allowed to <em>ignore</em> the variable. It is, however, allowed to warn about something that is often unintentional.</p>\n", "LastEditorUserId": "572743", "LastActivityDate": "2012-09-12T09:27:15.107", "Score": "1", "CreationDate": "2012-09-11T15:37:53.430", "ParentId": "12326554", "CommentCount": "0", "OwnerUserId": "572743", "LastEditDate": "2012-09-12T09:27:15.107"}, "12372107": {"Id": "12372107", "PostTypeId": "2", "Body": "<p>I'd tend to think it is a bug in the compiler. It is still present in g++ 4.7.1. </p>\n<p>As a work around, you may try to define a constructor which does nothing. It suppresses the warning with g++ 4.7.1, I don't know with 3.4.6.</p>\n", "LastActivityDate": "2012-09-11T14:32:11.587", "CommentCount": "0", "CreationDate": "2012-09-11T14:32:11.587", "ParentId": "12326554", "Score": "2", "OwnerUserId": "136208"}, "12326554": {"ViewCount": "861", "Body": "<p>I have some code that I put in a destructor to ensure it is run both on normal exit and exception stack unwinding:</p>\n<pre><code>struct withProtectedClose {\n\n  ~withProtectedClose() {\n    // Do some cleanup here...\n  }\n};\n\nvoid test() {\n  withProtectedClose close;\n\n  // Do some work before closing\n}\n</code></pre>\n<p>Yet the g++ compiler (g++ (GCC) 3.4.6 20060404 (Red Hat 3.4.6-11)) is complaining:</p>\n<pre><code>test.cpp: In function `void test()':\ntest.cpp:28: warning: unused variable 'close'\n</code></pre>\n<p>I can silence it by referring to the variable somehow, but that muddies the code only to silence the compiler, not how I want my code influenced.</p>\n<p>Shouldn't the fact that there is a destructor be enough to clue the compiler in that it makes no difference that there is no use of the variable after construction?</p>\n<p>Assuming the compiler cannot be shut up while still getting notices of legitimate unused variables, is there a way to silence this one only other than by using it?</p>\n", "AcceptedAnswerId": "12372107", "Title": "Should compilers ignore unused variables that result in constructors or destructors being run?", "CreationDate": "2012-09-07T23:16:29.587", "Id": "12326554", "CommentCount": "0", "LastEditDate": "2012-09-11T14:25:20.653", "PostTypeId": "1", "LastEditorUserId": "115751", "LastActivityDate": "2012-09-12T09:27:15.107", "Score": "3", "OwnerUserId": "115751", "Tags": "<c++><g++><destructor><compiler-warnings><unused-variables>", "AnswerCount": "3"}, "12372155": {"Id": "12372155", "PostTypeId": "2", "Body": "<p>MSVC doesn't issue this warning in such a case. If your gcc version does, try suppressing it this way:</p>\n<pre><code>withProtectedClose close; \n(close); \n</code></pre>\n", "LastActivityDate": "2012-09-11T14:34:35.490", "CommentCount": "0", "CreationDate": "2012-09-11T14:34:35.490", "ParentId": "12326554", "Score": "0", "OwnerUserId": "759253"}});