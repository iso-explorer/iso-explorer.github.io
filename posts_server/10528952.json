post_cb({"10528998": {"ParentId": "10528952", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_10528952_10528998_0\">Does Undefined Behavior depend on the compiler in c++ ?</p>\n</blockquote>\n<p><strong>Yes</strong>.<br>\nIt can be argued like this:</br></p>\n<blockquote>\n<p id=\"so_10528952_10528998_1\">Well defined behavior is standard compliant and is supported by all\n  the compilers equally well.</p>\n</blockquote>\n<p>Thus, </p>\n<blockquote>\n<p id=\"so_10528952_10528998_2\">Undefined behavior is not standard compliant and the compilers are\n  free to do whatever they want!</p>\n</blockquote>\n", "OwnerUserId": "514235", "PostTypeId": "2", "Id": "10528998", "Score": "1", "CreationDate": "2012-05-10T07:06:29.113", "LastActivityDate": "2012-05-10T07:06:29.113"}, "10529036": {"ParentId": "10528952", "CommentCount": "0", "Body": "<p>Regarding Undefined Behavior,<br>\n<strong>C++ Standard section 1.3.24 states:</strong></br></p>\n<blockquote>\n<p id=\"so_10528952_10529036_0\">Permissible undefined behavior ranges from ignoring the situation completely with unpredictable results, to behaving during translation or program execution in a documented manner characteristic of the environment (with or without the issuance of a diagnostic message), to terminating a translation or execution (with the issuance of a diagnostic message). </p>\n</blockquote>\n<p>So, Yes a compiler is free to show any behavior they want when Undefined Behavior occurs.</p>\n", "OwnerUserId": "452307", "PostTypeId": "2", "Id": "10529036", "Score": "2", "CreationDate": "2012-05-10T07:09:26.067", "LastActivityDate": "2012-05-10T07:09:26.067"}, "10528952": {"CommentCount": "2", "ViewCount": "108", "ClosedDate": "2012-05-10T07:16:51.303", "CreationDate": "2012-05-10T07:01:54.710", "LastActivityDate": "2012-05-10T07:15:02.520", "Title": "Does Undefined Behavior depend on the compiler in c++?", "PostTypeId": "1", "Id": "10528952", "Score": "1", "Body": "<p>Does Undefined Behavior depend on the compiler in c++ ?</p>\n<p>Every compiler have its own behavior for every problem !</p>\n", "Tags": "<c++><compiler-construction><undefined-behavior>", "OwnerUserId": "423903", "AnswerCount": "4"}, "10529098": {"ParentId": "10528952", "CommentCount": "0", "Body": "<p>Undefined really does mean undefined. That is, anything can happen.</p>\n<p>Can it depend on the compiler? Yes.</p>\n<p>Can all compilers do the same thing? Yes.</p>\n<p>Can it do one thing today and one thing tomorrow? Yes.</p>\n<p>Can it make the program crash? Yes.</p>\n<p>Can it do what I think it should do and seem to work fine? Yes.</p>\n<p>Anything can happen.</p>\n", "OwnerUserId": "721269", "PostTypeId": "2", "Id": "10529098", "Score": "3", "CreationDate": "2012-05-10T07:15:02.520", "LastActivityDate": "2012-05-10T07:15:02.520"}, "10528994": {"ParentId": "10528952", "CommentCount": "2", "Body": "<p>What constitutes undefined behavior is specified in the C++ standard.</p>\n<p>What code a compiler generates when it runs into code that exhibits undefined behavior can be, by definition, anything. This is to give compiler writers leeway for optimizations.</p>\n<p>Note that undefined behavior means your program can do ANYTHING. It does not guarantee it will crash, or throw an exception, or write to a certain area of memory. For all you know, it can delete your entire filesystem and then take out the trash - and that would be okay by the C++ standard.</p>\n<p>Stay away from undefined behavior.</p>\n", "OwnerUserId": "549412", "PostTypeId": "2", "Id": "10528994", "Score": "1", "CreationDate": "2012-05-10T07:06:22.057", "LastActivityDate": "2012-05-10T07:06:22.057"}, "bq_ids": {"n4140": {"so_10528952_10529036_0": {"section_id": 5768, "quality": 1.0, "length": 26}}, "n3337": {"so_10528952_10529036_0": {"section_id": 5541, "quality": 1.0, "length": 26}}, "n4659": {"so_10528952_10529036_0": {"section_id": 7225, "quality": 1.0, "length": 26}}}});