post_cb({"7371497": {"ParentId": "7371087", "CommentCount": "1", "CreationDate": "2011-09-10T11:52:24.563", "OwnerUserId": "481528", "PostTypeId": "2", "Id": "7371497", "Score": "6", "Body": "<p>You can create (static) protected methods in the parent that will allow you to do things like that.</p>\n<pre><code>class MyFreind\n{\nprivate:\n    int m_member;\n    friend class Father;\n};\n\nclass Father\n{\nprotected:\n    static int&amp; getMyFreindMember(MyFreind&amp; io_freind) { return io_freind.m_member; }\n};\n\nclass Son : public Father\n{\npublic:\n    void doSomething(MyFriend&amp; io_freind)\n    {\n        int&amp; friendMember = getMyFreindMember(io_freind);\n        // ....\n    } // ()\n};\n</code></pre>\n<p>This however bypasses encapsulation so you probably should take a second look at your design.</p>\n", "LastActivityDate": "2011-09-10T11:52:24.563"}, "7371115": {"ParentId": "7371087", "CommentCount": "11", "CreationDate": "2011-09-10T10:34:02.293", "OwnerUserId": "916405", "PostTypeId": "2", "Id": "7371115", "Score": "2", "Body": "<p>The answer is very simple: no, subclasses do not inherit friend associations. A friend can only access the private members of the class the association is declared in, not those of parents and/or children of that class. Although you might be access protected member of a superclass, but I'm not sure about that.</p>\n", "LastActivityDate": "2011-09-10T10:34:02.293"}, "7371087": {"CommentCount": "4", "AcceptedAnswerId": "7371096", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2011-09-10T10:27:46.873", "LastActivityDate": "2011-09-10T11:52:24.563", "LastEditDate": "2017-05-23T12:25:34.510", "ViewCount": "15136", "FavoriteCount": "4", "Title": "C++ friend inheritance?", "Id": "7371087", "Score": "25", "Body": "<p>Does a subclass inherit, the main class' friend associations (both the main class' own and other classes friended with the main class)?</p>\n<p>Or to put it differently, how does inheritance apply to the friend keyword?</p>\n<p>To expand:\nAnd if not, is there any way to inherit friendship?</p>\n<p>I have followed Jon's suggestion to post up the design problem:<br>\n<a href=\"https://stackoverflow.com/questions/7371470/c-class-design-questions\">C++ class design questions</a></br></p>\n", "Tags": "<c++><subclass><friend>", "OwnerUserId": "889894", "AnswerCount": "4"}, "7371103": {"ParentId": "7371087", "CommentCount": "0", "CreationDate": "2011-09-10T10:30:57.710", "OwnerUserId": "463758", "PostTypeId": "2", "Id": "7371103", "Score": "7", "Body": "<p>friend only applies to the class you explicitly make it friend and no other class.</p>\n<p><a href=\"http://www.parashift.com/c++-faq-lite/friends.html#faq-14.4\" rel=\"noreferrer\">http://www.parashift.com/c++-faq-lite/friends.html#faq-14.4</a></p>\n", "LastActivityDate": "2011-09-10T10:30:57.710"}, "7371096": {"ParentId": "7371087", "CommentCount": "3", "CreationDate": "2011-09-10T10:29:38.157", "OwnerUserId": "50079", "PostTypeId": "2", "Id": "7371096", "Score": "34", "Body": "<p>Friendship is not inherited in C++.</p>\n<p>The standard says (ISO/IEC 14882:2003, section 11.4.8):</p>\n<blockquote>\n<p id=\"so_7371087_7371096_0\">Friendship is neither inherited nor transitive.</p>\n</blockquote>\n", "LastActivityDate": "2011-09-10T10:29:38.157"}, "bq_ids": {"n4140": {"so_7371087_7371096_0": {"section_id": 6693, "quality": 1.0, "length": 5}}, "n3337": {"so_7371087_7371096_0": {"section_id": 6448, "quality": 1.0, "length": 5}}, "n4659": {"so_7371087_7371096_0": {"section_id": 8168, "quality": 1.0, "length": 5}}}});