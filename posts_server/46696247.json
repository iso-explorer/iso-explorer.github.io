post_cb({"bq_ids": {"n4140": {"so_46696247_46696335_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 5419}}, "n3337": {"so_46696247_46696335_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 5214}}, "n4659": {"so_46696247_46696335_0": {"length": 6, "quality": 0.8571428571428571, "section_id": 6841}}}, "46696335": {"Id": "46696335", "PostTypeId": "2", "Body": "<p>The compilers have a bug. Note that this has been fixed in clang 3.5 already, not sure why you don't get an error, because I do.</p>\n<p>The standard is pretty explicit about this in <a href=\"http://eel.is/c++draft/dcl.constexpr#3.1\" rel=\"nofollow noreferrer\">[dcl.constexpr]p3</a>:</p>\n<blockquote>\n<p id=\"so_46696247_46696335_0\">The definition of a constexpr function shall satisfy the following requirements:</p>\n<ul>\n<li>it shall not be virtual;</li>\n<li>[...]</li>\n</ul>\n</blockquote>\n<p>It does't matter whether <code>doSomething</code> is implicitly <code>virtual</code> or not. In both cases, it is considered to be <code>virtual</code>, and so it violates the point above.</p>\n", "LastEditorUserId": "3980929", "LastActivityDate": "2017-10-11T19:55:17.230", "Score": "8", "CreationDate": "2017-10-11T19:45:51.070", "ParentId": "46696247", "CommentCount": "0", "OwnerUserId": "3980929", "LastEditDate": "2017-10-11T19:55:17.230"}, "46696247": {"ViewCount": "108", "Body": "<p>Virtual functions cannot be <code>constexpr</code> however, when a function is implicitly virtual through inheritance, the compilers I have tried don't complain about it.</p>\n<p>Here is a sample code:</p>\n<pre><code>class A\n{\n    virtual void doSomething() {}\n};\n\nclass B : public A\n{\n    constexpr void doSomething() override {} // implicitly virtual constexpr\n                                             // but no compilation error\n};\n\nclass C : public A\n{\n    virtual constexpr void doSomething() override {} // explicitly virtual constexpr\n                                                     // compilation error\n};\n</code></pre>\n<p>I tried it with <code>gcc 7.2.0</code> and <s><code>clang 5.0.0</code></s>.</p>\n<p>Are those compilers not compliant to the standard in this regard, or are implicitly virtual <code>constexpr</code> functions allowed ?</p>\n", "AcceptedAnswerId": "46696335", "Title": "Implicitly virtual constexpr function", "CreationDate": "2017-10-11T19:40:30.263", "Id": "46696247", "CommentCount": "5", "LastEditDate": "2017-10-11T20:02:56.137", "PostTypeId": "1", "LastEditorUserId": "5699458", "LastActivityDate": "2017-10-11T20:02:56.137", "Score": "10", "OwnerUserId": "5699458", "Tags": "<c++>", "AnswerCount": "1"}});