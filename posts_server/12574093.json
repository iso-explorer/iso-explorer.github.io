post_cb({"12574099": {"ParentId": "12574093", "CommentCount": "0", "Body": "<p>Concatenate the strings:</p>\n<pre class=\"lang-none prettyprint-override\"><code>#define STR(x) \"file \" #x \".txt\"\n</code></pre>\n<p>This makes use of a lexical feature of the two languages: adjacent string literals are concatenated; see both C++11 2.2/6 and C11 5.1.1.2/6:</p>\n<blockquote>\n<p id=\"so_12574093_12574099_0\">Adjacent string literal tokens are concatenated.</p>\n</blockquote>\n", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "12574099", "Score": "5", "CreationDate": "2012-09-24T23:00:09.480", "LastActivityDate": "2012-09-24T23:00:09.480"}, "12574093": {"CommentCount": "1", "ViewCount": "207", "CreationDate": "2012-09-24T22:58:40.890", "LastActivityDate": "2012-09-24T23:01:16.287", "Title": "Macro String with variable", "AcceptedAnswerId": "12574099", "PostTypeId": "1", "Id": "12574093", "Score": "0", "Body": "<p>I don't know how to define a macro string with variable, like this:<br>\n<code>#define str(x) \"file x.txt\"</code>, that mean I desire that str(1) refers to \"file 1.txt\".\nHowever, in the case, str(1) or any number refers to \"file x.txt\", because x is an character.<br>\nIs there any way to solve this?</br></br></p>\n", "Tags": "<c++><c>", "OwnerUserId": "1690220", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_12574093_12574099_0": {"section_id": 5313, "quality": 1.0, "length": 5}}, "n3337": {"so_12574093_12574099_0": {"section_id": 5110, "quality": 1.0, "length": 5}}, "n4659": {"so_12574093_12574099_0": {"section_id": 6737, "quality": 1.0, "length": 5}}}, "12574100": {"ParentId": "12574093", "CommentCount": "0", "Body": "<pre><code>#define str(x) (\"file \" #x \".txt\")\n</code></pre>\n<p>using the stringification operator <code>#</code></p>\n", "OwnerUserId": "1011995", "PostTypeId": "2", "Id": "12574100", "Score": "1", "CreationDate": "2012-09-24T23:00:13.103", "LastActivityDate": "2012-09-24T23:00:13.103"}});