post_cb({"25300003": {"ParentId": "25299888", "CommentCount": "0", "Body": "<p>Every pointer type is an object type. This follows from the definition of \"object type\" quoted in the question details. In particular, function pointer types are object types.</p>\n<p>A function pointer type can be the type of the <em>postfix-expression</em> in a function call. For example, if <code>p</code> has type <code>void (*)()</code>, then the expression <code>p()</code> calls the function pointed to by <code>p</code>. So a function pointer type indeed meets the requirements of a function object type.</p>\n", "OwnerUserId": "481267", "PostTypeId": "2", "Id": "25300003", "Score": "2", "CreationDate": "2014-08-14T04:17:27.357", "LastActivityDate": "2014-08-14T04:17:27.357"}, "25299888": {"CommentCount": "2", "ViewCount": "91", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2014-08-14T04:06:00.143", "LastActivityDate": "2014-08-14T04:26:12.630", "Title": "Is a pointer-to-function is a function object type?", "AcceptedAnswerId": "25299996", "LastEditDate": "2017-05-23T10:26:18.690", "Id": "25299888", "Score": "1", "Body": "<p>In my opinion,function object is a class that implements <code>operator()</code>.</p>\n<pre><code>class Functor\n{\npublic:\n    int operator()(int a, int b)\n    {\n     ...\n    }\n};\n</code></pre>\n<p>But,in the other question I asked(<a href=\"https://stackoverflow.com/questions/24867294/about-stdresult-of-in-c11\">about std::result_of in c++11</a>),Casey point that a pointer-to-function is a function object type and therefore a callable type.</p>\n<p>And in c++ reference:</p>\n<blockquote>\n<p id=\"so_25299888_25299888_0\">A function object type is an object type (3.9) that can be the type of the postfix-expression in a function call (5.2.2, 13.3.1.1)</p>\n<p id=\"so_25299888_25299888_1\">An object type is a (possibly cv-qualified) type that is not a function type, not a reference type, and not a void type.(3.9)</p>\n</blockquote>\n<p>So it seems that a pointer-to-function is can be treated as a function object,though it turned my opinion of function object.Is that right?</p>\n", "Tags": "<c++><c++11><language-lawyer>", "OwnerUserId": "1442372", "AnswerCount": "2"}, "25299996": {"ParentId": "25299888", "PostTypeId": "2", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_25299888_25299996_0\">A function object type is an object type (3.9) that can be the type of the postfix-expression in a function call.</p>\n<p id=\"so_25299888_25299996_1\">\u00a720.8 [function.objects]</p>\n</blockquote>\n<p>Footnote 230 (N3337), attached to the above sentence in the standard, states:</p>\n<blockquote>\n<p id=\"so_25299888_25299996_2\">Such a type is <strong>a function pointer</strong> or a class type which has a member operator() or a class type which has a conversion to a pointer to function.</p>\n</blockquote>\n<p>Therefore, a function pointer type is a function object type.  The standard goes on:</p>\n<blockquote>\n<p id=\"so_25299888_25299996_3\">A function object is an object of a function object type.</p>\n<p id=\"so_25299888_25299996_4\">\u00a720.8 [function.objects]</p>\n</blockquote>\n<p>Therefore a function pointer, being of function object type, is a function object.</p>\n<p>Note that, in spite of the traditional connotations of \"object\", pointers are objects in C++:</p>\n<blockquote>\n<p id=\"so_25299888_25299996_5\">An object is a region of storage.</p>\n<p id=\"so_25299888_25299996_6\">\u00a71.8 [intro.object]</p>\n</blockquote>\n<p>Pointers, occuying a region of storage, are therefore objects.</p>\n", "OwnerUserId": "1007504", "LastEditorUserId": "1007504", "LastEditDate": "2014-08-14T04:22:18.937", "Id": "25299996", "Score": "4", "CreationDate": "2014-08-14T04:17:04.850", "LastActivityDate": "2014-08-14T04:22:18.937"}, "bq_ids": {"n4140": {"so_25299888_25299888_0": {"section_id": 4548, "quality": 0.75, "length": 9}, "so_25299888_25299996_3": {"section_id": 563, "quality": 1.0, "length": 6}, "so_25299888_25299996_0": {"section_id": 4548, "quality": 0.9, "length": 9}, "so_25299888_25299996_2": {"section_id": 4548, "quality": 0.9230769230769231, "length": 12}, "so_25299888_25299888_1": {"section_id": 763, "quality": 0.8181818181818182, "length": 9}}, "n3337": {"so_25299888_25299888_0": {"section_id": 4378, "quality": 0.75, "length": 9}, "so_25299888_25299996_3": {"section_id": 554, "quality": 1.0, "length": 6}, "so_25299888_25299996_0": {"section_id": 4378, "quality": 0.9, "length": 9}, "so_25299888_25299996_2": {"section_id": 4378, "quality": 0.9230769230769231, "length": 12}, "so_25299888_25299888_1": {"section_id": 750, "quality": 0.8181818181818182, "length": 9}}, "n4659": {"so_25299888_25299888_0": {"section_id": 5922, "quality": 0.75, "length": 9}, "so_25299888_25299888_1": {"section_id": 823, "quality": 0.7272727272727273, "length": 8}, "so_25299888_25299996_0": {"section_id": 5922, "quality": 0.9, "length": 9}, "so_25299888_25299996_2": {"section_id": 5922, "quality": 0.9230769230769231, "length": 12}, "so_25299888_25299996_3": {"section_id": 586, "quality": 1.0, "length": 6}}}});