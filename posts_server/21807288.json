post_cb({"21807412": {"ParentId": "21807288", "CommentCount": "1", "CreationDate": "2014-02-16T04:46:39.890", "Id": "21807412", "PostTypeId": "2", "OwnerDisplayName": "user1508519", "Score": "0", "Body": "<p>Not all expression statements are no-ops. They can be no-ops if they have no side effects or if they are a null statement. For example:</p>\n<pre><code>vector.size(); // Did nothing with the variable\n; // null statement\n0; // Random zero in the middle of code, confuse readers galore\n   // or use as a breakpoint\ndoSomething(); // Do something\n</code></pre>\n<p>So in your case, I can't see any practical reason for why a student would write a variable followed by a semi-colon by itself unless it's a typo or used as a breakpoint. </p>\n", "LastActivityDate": "2014-02-16T04:46:39.890"}, "bq_ids": {"n4140": {"so_21807288_21807328_0": {"section_id": 5944, "quality": 0.8333333333333334, "length": 5}, "so_21807288_21807328_1": {"section_id": 5954, "quality": 0.8, "length": 4}}, "n3337": {"so_21807288_21807328_0": {"section_id": 5715, "quality": 0.8333333333333334, "length": 5}, "so_21807288_21807328_1": {"section_id": 5724, "quality": 0.8, "length": 4}}, "n4659": {"so_21807288_21807328_0": {"section_id": 7429, "quality": 0.8333333333333334, "length": 5}, "so_21807288_21807328_1": {"section_id": 7441, "quality": 0.8, "length": 4}}}, "21807328": {"ParentId": "21807288", "CommentCount": "8", "Body": "<p>I have a draft copy of the C++11 ISO standard, from which I think we can safely say that the answer is no. A statement of the form</p>\n<pre><code>identifier;\n</code></pre>\n<p>is an expression statement. The spec (\u00a76.2.1) says that</p>\n<blockquote>\n<p id=\"so_21807288_21807328_0\">The expression is evaluated and its value is discarded.</p>\n</blockquote>\n<p>So what does the expression <code>identifier</code> evaluate to? Well, it's an identifier expression, which the spec (\u00a75.1.1/6) says that</p>\n<blockquote>\n<p id=\"so_21807288_21807328_1\">The result is the entity denoted by the identifier.</p>\n</blockquote>\n<p>So the effect of this expression is \"evaluate to the entity given by <code>identifier</code> and then discard the result.\" There's no choice involved here, so this expression should always have no effect.</p>\n<p>Hope this helps!</p>\n", "OwnerUserId": "501557", "PostTypeId": "2", "Id": "21807328", "Score": "5", "CreationDate": "2014-02-16T04:34:04.270", "LastActivityDate": "2014-02-16T04:34:04.270"}, "21807288": {"CommentCount": "11", "ViewCount": "78", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2014-02-16T04:28:19.910", "LastActivityDate": "2014-02-17T11:20:58.617", "Title": "Is there a way to make `something;` do anything?", "AcceptedAnswerId": "21807328", "LastEditDate": "2017-05-23T12:30:10.647", "Id": "21807288", "Score": "-1", "Body": "<p>From time to time when looking through code, I see people write lines such as:</p>\n<pre><code>something;\n</code></pre>\n<p>People always say that such a <em>statement</em> is stupid and does nothing. I started to wonder if there is a way in C++ to make it do anything. </p>\n<p>The word <em>statement</em> is pretty well defined in C++. So I actually have two questions:</p>\n<ol>\n<li>Is there a way to make such a line do anything, with out using a macro?</li>\n<li>Is there a way to make something an object, so <code>something;</code> is actually an identifier statement (I hope I understand and used the term correctly), and does anything. I guess that  a macro makes it not an identifier statement.</li>\n</ol>\n<p>So the code example with a macro:</p>\n<p>something.cpp:</p>\n<pre><code>#include &lt;iostream&gt;\nint main() {\n    #include \"something.hpp\"\n    something;\n    return 0;\n}\n</code></pre>\n<p>something.hpp:</p>\n<pre><code>#define something std::cout&lt;&lt;\"It's something!\\n\"\n</code></pre>\n<p>Of course then <code>something;</code> does something.</p>\n<p>Is there a way to implement <code>something.hpp</code> so that it does not use a macro, and preferably defines some class and makes <code>something</code> an instance of it and executes user written code.</p>\n<p>The placement of <code>include</code>. Is chosen on purpose so it is possible to inject any code. E.g:</p>\n<pre><code>class T{};\nT something;\n</code></pre>\n<p>Note that I believe that my second question is answered by <a href=\"https://stackoverflow.com/users/501557/templatetypedef\">templatetypedef</a> who addressed the previous version of question.</p>\n", "Tags": "<c++>", "OwnerUserId": "1133179", "AnswerCount": "2"}});