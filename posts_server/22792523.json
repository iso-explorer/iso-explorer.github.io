post_cb({"22792872": {"ParentId": "22792523", "CommentCount": "5", "Body": "<p>Why would you expect it to compile? <code>final</code> is final, so you can't inherit from it.</p>\n<p>In your other code:</p>\n<pre><code>struct override final\n{\n\n};\n</code></pre>\n<p>This is defining a final class with no base classes, so that's fine.</p>\n<pre><code>override : final\n{\n\n};\n</code></pre>\n<p>This is declaring a <em>label</em> <code>override</code>, and at that label creating a prvalue temporary of type <code>final</code> initialized with the brace-initializer <code>{}</code>, which is immediately destroyed:</p>\n<pre><code>override:\n    final{};\n</code></pre>\n", "OwnerUserId": "567292", "PostTypeId": "2", "Id": "22792872", "Score": "14", "CreationDate": "2014-04-01T17:33:24.543", "LastActivityDate": "2014-04-01T17:33:24.543"}, "22792523": {"CommentCount": "16", "AcceptedAnswerId": "22792872", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2014-04-01T17:14:30.363", "LastActivityDate": "2014-04-16T12:33:51.847", "LastEditDate": "2017-05-23T12:12:57.737", "ViewCount": "317", "FavoriteCount": "2", "Title": "C++11 code with inheritance doesn't compile with clang", "Id": "22792523", "Score": "8", "Body": "<p>I have a small program with such simple code:</p>\n<pre><code>namespace override\n{\n    using final = void();\n}\n\nnamespace final\n{\n    using override = void(int);\n\n    struct final\n    {\n        virtual override override;\n        virtual ::override::final override;\n    };\n}\n\nint main()\n{\n    struct final final : ::final::final\n    {\n        ::final::override override override final;\n        ::override::final override final override;\n    };\n\n    // doesn't compile\n    struct override : final\n    {\n\n    };        \n}\n</code></pre>\n<p>Unfortunately it doesn't compile. I tried to compile it with following pieces of code:</p>\n<pre><code>// 1\nstruct override final\n{\n\n};\n\n// 2    \noverride : final\n{\n\n};\n</code></pre>\n<p>And both of these variants compile fine. Is it an error in my compiler (clang 3.4)? I can't also understand why my original code doesn't compile.</p>\n<p>See <a href=\"http://rextester.com/RWW6858\" rel=\"nofollow noreferrer\">live example</a>.</p>\n<p><strong>Update:</strong> It was an April Fool's day joke, of course. Thanks to all who participated in the discussion. I also thank <a href=\"https://stackoverflow.com/users/567292/ecatmur\">@ecatmur</a> for his exact but too serious answer.</p>\n<p>I wanted to get the code that would have looked strange and at the same time would have compiled with one compiler at least (because it would have given respectability to my question). So my goal was not to create a standard-compliant code. But as <a href=\"https://stackoverflow.com/users/34509/johannes-schaub-litb\"><strong>@Johannes Schaub - litb</strong></a> noted in comments this code has at least one problem which make it ill-formed. The line <code>virtual override override;</code> is a violation the following rule (see paragraph [basic.scope.class] 3.3.7/1 of the standard):</p>\n<blockquote>\n<p id=\"so_22792523_22792523_0\">A name <code>N</code> used in a class <code>S</code> shall refer to the same declaration in its context and when re-evaluated in the completed scope of <code>S</code>. No diagnostic is required for a violation of this rule.</p>\n</blockquote>\n<p>As I can see it can be rewritten as <code>virtual ::final::override override;</code> to become a standard-compliant.</p>\n", "Tags": "<c++><inheritance><c++11><clang>", "OwnerUserId": "3043539", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_22792523_22792523_0": {"section_id": 7070, "quality": 1.0, "length": 15}}, "n3337": {"so_22792523_22792523_0": {"section_id": 6814, "quality": 1.0, "length": 15}}, "n4659": {"so_22792523_22792523_0": {"section_id": 8568, "quality": 1.0, "length": 15}}}});