post_cb({"43857299": {"ParentId": "43857221", "PostTypeId": "2", "CommentCount": "10", "Body": "<p>According to <a href=\"http://eel.is/c++draft/stmt.return\" rel=\"nofollow noreferrer\">[stmt.return]</a> (<strong>emphasis</strong> mine):</p>\n<blockquote>\n<p id=\"so_43857221_43857299_0\">Flowing off the end of a constructor, a destructor, or a function with a cv <code>void</code> return type is equivalent to a <code>return</code> with no operand.\n  Otherwise, flowing off the end of a function other than <code>main</code> results in <strong>undefined behavior</strong>.</p>\n</blockquote>\n<p>Usually you can catch these kinds of errors by turning on and reading warnings generated by the compiler (e.g. by using <code>-Wall -Wextra</code> with GCC or Clang).</p>\n", "OwnerUserId": "3919155", "LastEditorUserId": "3919155", "LastEditDate": "2017-05-08T21:12:36.677", "Id": "43857299", "Score": "3", "CreationDate": "2017-05-08T21:09:18.800", "LastActivityDate": "2017-05-08T21:12:36.677"}, "bq_ids": {"n4659": {"so_43857221_43857299_0": {"section_id": 4799, "quality": 0.9565217391304348, "length": 22}}}, "43857304": {"ParentId": "43857221", "CommentCount": "0", "Body": "<p>The calling convention of your platform specifies how the function returns the value it wants to be returned to the caller (e.g: saved in a register). Since the register exists, the caller code just takes the value it finds there, possibly garbage, or the actual good value by chance. Either way, your program invokes undefined behaviour, it cannot be trusted any more.</p>\n<p>The solution is to turn the compiler warnings on. E.g, on GCC or Clang:</p>\n<pre><code>g++ -Wall -Wextra -Werror\n</code></pre>\n", "OwnerUserId": "116273", "PostTypeId": "2", "Id": "43857304", "Score": "6", "CreationDate": "2017-05-08T21:09:47.197", "LastActivityDate": "2017-05-08T21:09:47.197"}, "43857221": {"CommentCount": "10", "AcceptedAnswerId": "43857304", "ClosedDate": "2017-05-08T21:12:10.540", "CreationDate": "2017-05-08T21:03:07.323", "LastActivityDate": "2017-05-08T21:12:36.677", "Title": "C++ Function \"Automatic\" Return Value?", "ViewCount": "85", "FavoriteCount": "0", "PostTypeId": "1", "Id": "43857221", "OwnerUserId": "7476128", "Body": "<p>How is this working? In writing this function, I forgot to include a <code>return</code> statement:</p>\n<pre><code>char *getV(const char *var) {\n    char *val = nullptr;\n    forward_list&lt;formField&gt;::iterator idx;\n\n    formField ffld;\n    idx = _fields.begin();\n    while (idx != _fields.end()) {\n        ffld = *idx;\n        if (strcmp(ffld.Name, var) == 0) {\n            val = ffld.Val;\n            break;\n        }\n        idx++;\n    }\n}\n</code></pre>\n<p>Here is <code>formField</code>:</p>\n<pre><code>struct formField {\n    char    *Name   = nullptr;\n    char    *Val    = nullptr;\n};\n</code></pre>\n<p>Here's how I'm calling the function:</p>\n<pre><code>int main () {\n    form fdata;\n\n    fdata.add(\"FirstName\", \"Alan\");\n\n    char *fval = fdata.getV(\"FirstName\");\n    if (fval != nullptr) cout &lt;&lt; fval;\n    else cout &lt;&lt; \"not found\";\n    cout &lt;&lt; \"\\n\";\n}\n</code></pre>\n<p>I didn't notice the missing <code>return</code> until later, after testing the function and writing other code which uses it. The function is supposed to return <code>*val</code>...and it does! How?</p>\n", "Tags": "<c++>", "Score": "1", "AnswerCount": "2"}});