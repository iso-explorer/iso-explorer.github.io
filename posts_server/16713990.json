post_cb({"16714367": {"ParentId": "16713990", "CommentCount": "0", "Body": "<p>Your programme already crashes on the</p>\n<pre><code>cout &lt;&lt; \"op = \" &lt;&lt; op &lt;&lt; endl;\n</code></pre>\n<p>line because there is an overload of the <code>&lt;&lt;</code> operator for <code>char*</code> that interprets them as a pointer to the initial element of a 0-terminated character array and prints the characters before the next 0-byte out, thus needing to dereference the pointer. But you initialised <code>op</code> to be a null pointer, hence dereferencing it invokes undefined behaviour, often resulting in a crash (segmentation fault).</p>\n<p>Casting <code>op</code> to a different pointer type, e.g. a <code>void*</code></p>\n<pre><code>cout &lt;&lt; \"op = \" &lt;&lt; static_cast&lt;void*&gt;(op) &lt;&lt; endl;\n</code></pre>\n<p>would make that line work and print an implementation-defined representation of a null pointer.</p>\n<p>You would then still have undefined behaviour (and most likely a crash) on the next line, where you explicitly dereference <code>op</code>.</p>\n", "OwnerUserId": "1011995", "PostTypeId": "2", "Id": "16714367", "Score": "1", "CreationDate": "2013-05-23T12:47:51.743", "LastActivityDate": "2013-05-23T12:47:51.743"}, "16713990": {"CommentCount": "7", "ViewCount": "136", "LastActivityDate": "2013-05-23T15:03:35.000", "Body": "<p>I'm testing this piece of code, and the result is that the program crashes when reaches the <code>&lt;&lt; op</code> in the first <code>cout</code> (because it prints out <code>op =</code> and then stops).</p>\n<pre><code>char *lo = 0, *op = 0, *ro = 0;\ncout &lt;&lt; \"op = \" &lt;&lt; op &lt;&lt; endl;\ncout &lt;&lt; \"*op = \" &lt;&lt; *op &lt;&lt; endl;\n</code></pre>\n<p>Now my question is: why this happens?<br/>\n<br/>\nI know, pointer causes me a lot of problems..</p>\n", "PostTypeId": "1", "AcceptedAnswerId": "16714015", "FavoriteCount": "1", "Title": "Pointer generate a crash also if it is initialized", "Id": "16713990", "Score": "0", "CreationDate": "2013-05-23T12:30:20.410", "Tags": "<c++><pointers>", "OwnerUserId": "740700", "AnswerCount": "5"}, "16714015": {"ParentId": "16713990", "LastEditDate": "2013-05-23T12:40:16.210", "CommentCount": "3", "CreationDate": "2013-05-23T12:31:30.307", "OwnerUserId": "1932150", "LastEditorUserId": "1932150", "PostTypeId": "2", "Id": "16714015", "Score": "6", "Body": "<p>Because here:</p>\n<pre><code>cout &lt;&lt; \"*op = \" &lt;&lt; *op &lt;&lt; endl;\n//                  ^^^\n//                  op is a NULL pointer!\n</code></pre>\n<p>you are dereferencing a pointer that does not point to any object, and that is undefined behavior.</p>\n<p>So although the pointer is initialized, it is not initialized with the address of an existing object, and therefore you cannot dereference it meaningfully. Paragraph 5.3.1/1 of the C++11 Standard specifies:</p>\n<blockquote>\n<p id=\"so_16713990_16714015_0\">The unary <code>*</code> operator performs indirection: the expression to which it is applied shall be a pointer to an\n  object type, or a pointer to a function type <strong>and the result is an lvalue referring to the object or function\n  to which the expression points</strong>.</p>\n</blockquote>\n<p>The Standard does not specify what the result should be when the expression is not pointing to any object: hence, it is undefined behavior.</p>\n", "LastActivityDate": "2013-05-23T12:40:16.210"}, "16714254": {"ParentId": "16713990", "LastEditDate": "2017-05-23T11:57:23.577", "CommentCount": "6", "CreationDate": "2013-05-23T12:42:20.677", "OwnerUserId": "2087705", "LastEditorUserId": "-1", "PostTypeId": "2", "Id": "16714254", "Score": "1", "Body": "<p>Going by your title \"<em>Pointer generate a crash also if it is initialized</em>\".</p>\n<p>The pointer you created is not initialised to any memory location. When you initialise a pointer to <code>0</code> it means you are <a href=\"https://stackoverflow.com/questions/176989/do-you-use-null-or-0-zero-for-pointers-in-c\">initialising it to NULL</a>. </p>\n<p>A <a href=\"http://boredzo.org/pointers/\" rel=\"nofollow noreferrer\">pointer</a> is supposed to hold a memory address (before you plan to use <code>*</code> on it) or NULL(to keep it from causing problems by modifying random memory location until you assign some memory location to it, before dereferencing. It also indicates that the pointer is currently inactive). </p>\n<pre><code>char *lo = 0, *op = 0, *ro = 0;\n</code></pre>\n<p>your pointers are currently NULL, not pointing to any <a href=\"https://stackoverflow.com/questions/7240365/pointer-default-value\">memory location</a>. </p>\n<pre><code>char a = 'A';\nchar * lo = &amp;a; / char* lo = new char[10]; etc\n</code></pre>\n<p>Dereferencing a uninitialised or NULL pointer is <a href=\"https://stackoverflow.com/questions/4285895/where-exactly-does-c-standard-say-dereferencing-an-uninitialized-pointer-is-un\">undefined behaviour</a>. </p>\n", "LastActivityDate": "2013-05-23T15:03:35.000"}, "16714095": {"ParentId": "16713990", "CommentCount": "7", "Body": "<h3>Short answer</h3>\n<p>Your question may be summarised thus:</p>\n<blockquote>\n<p id=\"so_16713990_16714095_0\">I was taught that dereferencing uninitialized pointers is bad, and have come to the conclusion that this means <em>all</em> initialized pointers must be good. Am I right?</p>\n</blockquote>\n<p>The answer is a resounding <em>no</em>.</p>\n<hr>\n<h3>Long answer</h3>\n<p><em>Uninitialized</em> pointers aren't the problem.</p>\n<p>The problem is with pointers that don't point to some decent storage in memory. This is usually the case for uninitialized pointers, but it's <strong>also</strong> the case when you <em>deliberately</em> assigned the pointer some useless value, like here.</p>\n<p>For the purpose of pointing to a string, <code>0</code> is a useless value, because it indicates \"this pointer does not point anywhere\". Then attempting to dereference it is not okay.</p>\n<p>It's not entirely clear what different behaviour you expected from this code.</p>\n</hr>", "OwnerUserId": "560648", "PostTypeId": "2", "Id": "16714095", "Score": "4", "CreationDate": "2013-05-23T12:34:16.063", "LastActivityDate": "2013-05-23T12:34:16.063"}, "16714022": {"ParentId": "16713990", "CommentCount": "0", "Body": "<p>It's because you initialize the pointers to point to address zero, which is the same a <code>NULL</code>.</p>\n", "OwnerUserId": "440558", "PostTypeId": "2", "Id": "16714022", "Score": "0", "CreationDate": "2013-05-23T12:31:51.980", "LastActivityDate": "2013-05-23T12:31:51.980"}, "bq_ids": {"n4140": {"so_16713990_16714015_0": {"section_id": 6064, "quality": 0.9, "length": 18}}, "n3337": {"so_16713990_16714015_0": {"section_id": 5832, "quality": 0.9, "length": 18}}, "n4659": {"so_16713990_16714015_0": {"section_id": 7560, "quality": 0.9, "length": 18}}}});