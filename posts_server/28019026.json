post_cb({"28063016": {"ParentId": "28019026", "CommentCount": "0", "Body": "<p>The standard means precisely what it says. A program which redeclares the name used in the <em>exception-declaration</em> (<code>e</code> in your case) in the outermost block of the <em>compound-statement</em> of the <em>handler</em> is ill-formed, since it violates a \"shall\" rule (the very one you quote). If your compiler accepts it silently, it's a bug in the compiler. If it accepts it with a warning, it could be a bug or an extension.</p>\n", "OwnerUserId": "1782465", "PostTypeId": "2", "Id": "28063016", "Score": "0", "CreationDate": "2015-01-21T08:53:51.243", "LastActivityDate": "2015-01-21T08:53:51.243"}, "28019026": {"CommentCount": "7", "AcceptedAnswerId": "28063016", "PostTypeId": "1", "LastEditorUserId": "1392132", "CreationDate": "2015-01-19T06:27:53.430", "LastActivityDate": "2015-01-21T08:53:51.243", "AnswerCount": "1", "LastEditDate": "2015-01-19T06:41:56.147", "ViewCount": "60", "FavoriteCount": "1", "Title": "Redeclaration of the exception parameter", "Id": "28019026", "Score": "1", "Body": "<p>In the program we can redeclare an exception parameter as well as a function parameter like this:</p>\n<pre><code>#include &lt;exception&gt;\n\nvoid foo()\ntry\n{ \n    throw *new std::exception(); \n}\ncatch (std::exception e) \n{\n    extern int e;\n}\nint main(){ foo(); }\n</code></pre>\n<p>But the standard forbids to do that <code>N4296:3.3.3/3 [basic.scope.block]</code>:</p>\n<blockquote>\n<p id=\"so_28019026_28019026_0\">The name declared in an exception-declaration is local to the handler\n  and <em>shall not be redeclared</em> in the outermost block of the handler.</p>\n</blockquote>\n<p>We can't redefine the entity denoted by the exception parameter, but can redeclare one. Is it exactly what the Standard means in that rule?</p>\n", "Tags": "<c++><declaration><language-lawyer>", "OwnerDisplayName": "user2953119"}, "bq_ids": {"n4140": {"so_28019026_28019026_0": {"section_id": 7063, "quality": 0.9, "length": 9}}, "n3337": {"so_28019026_28019026_0": {"section_id": 6807, "quality": 0.9, "length": 9}}, "n4659": {"so_28019026_28019026_0": {"section_id": 8560, "quality": 0.9, "length": 9}}}});