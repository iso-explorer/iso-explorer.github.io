post_cb({"32159000": {"CommentCount": "0", "ViewCount": "104", "CreationDate": "2015-08-22T17:41:51.187", "LastActivityDate": "2015-08-22T18:46:43.353", "Title": "Inconsistent specialization of tuple_size", "AcceptedAnswerId": "32159584", "PostTypeId": "1", "Id": "32159000", "Score": "4", "Body": "<p>When explicitly specializing both <code>tuple_size</code> and <code>tuple_element</code> for some template, I realized that \u00a714.5.1/4, which reads</p>\n<blockquote>\n<p id=\"so_32159000_32159000_0\">In a redeclaration, partial specialization, explicit specialization or\n  explicit instantiation of a class template, <strong>the <em>class-key</em> shall agree\n  in kind with the original class template declaration</strong> (7.1.6.3).</p>\n</blockquote>\n<p>is seemingly violated by the standard itself:</p>\n<p><a href=\"https://i.stack.imgur.com/noJDK.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/noJDK.png\"/></a></p>\n<p>Am I missing something here (e.g. the standard specifies that <em>class-key</em>s are \"exposition only\" and shall agree within the actual implementation)?</p>\n", "Tags": "<c++><language-lawyer><c++14>", "OwnerUserId": "3647361", "AnswerCount": "2"}, "32159584": {"ParentId": "32159000", "CommentCount": "4", "Body": "<p>Bo Persson's now-deleted answer got it right. The paragraph ([temp.class]/p4) you cite refers to \u00a77.1.6.3 [dcl.type.elab] for the definition of \"agree in kind\", which in turn says (p3, emphasis mine)</p>\n<blockquote>\n<p id=\"so_32159000_32159584_0\">The <em>class-key</em> or <code>enum</code> keyword present in the\n  <em>elaborated-type-specifier</em> shall agree in kind with the declaration to which the name in the <em>elaborated-type-specifier</em> refers. This rule\n  also applies to the form of\n  <em>elaborated-type-specifier</em> that declares a <em>class-name</em> or friend class since it can be construed as referring to the definition of the\n  class. Thus, in any <em>elaborated-type-specifier</em>, the <code>enum</code> keyword\n  shall be used to refer to an enumeration (7.2), the <code>union</code>\n<em>class-key</em> shall be used to refer to a union (Clause 9), and <strong>either the <code>class</code> or <code>struct</code> <em>class-key</em> shall be used to refer to a class\n  (Clause 9) declared using the <code>class</code> or <code>struct</code> <em>class-key</em></strong>.</p>\n</blockquote>\n<p>The code is valid, if inconsistent.</p>\n", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "32159584", "Score": "4", "CreationDate": "2015-08-22T18:46:43.353", "LastActivityDate": "2015-08-22T18:46:43.353"}, "bq_ids": {"n4140": {"so_32159000_32159000_0": {"section_id": 103, "quality": 0.9411764705882353, "length": 16}, "so_32159000_32159584_0": {"section_id": 5444, "quality": 0.9607843137254902, "length": 49}}, "n3337": {"so_32159000_32159000_0": {"section_id": 98, "quality": 0.9411764705882353, "length": 16}, "so_32159000_32159584_0": {"section_id": 5239, "quality": 0.9607843137254902, "length": 49}}, "n4659": {"so_32159000_32159000_0": {"section_id": 107, "quality": 0.9411764705882353, "length": 16}, "so_32159000_32159584_0": {"section_id": 6871, "quality": 0.9607843137254902, "length": 49}}}, "32159457": {"ParentId": "32159000", "CommentCount": "3", "Body": "<p>This looks like an editorial defect to me.  Try opening an issue here:</p>\n<p><a href=\"https://github.com/cplusplus/draft/issues\" rel=\"nofollow\">https://github.com/cplusplus/draft/issues</a></p>\n<p>If you're adventurous, try resolving it with a pull request. :-)</p>\n", "OwnerUserId": "576911", "PostTypeId": "2", "Id": "32159457", "Score": "1", "CreationDate": "2015-08-22T18:31:23.550", "LastActivityDate": "2015-08-22T18:31:23.550"}});