post_cb({"bq_ids": {"n4140": {"so_12232650_12232669_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 6137}}, "n3337": {"so_12232650_12232669_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 5901}}, "n4659": {"so_12232650_12232669_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 7634}}}, "12232650": {"ViewCount": "231", "Body": "<p>For <code>int a, b</code>, I know that when there is exactly one of <code>a</code> and <code>b</code> is negative, the result of <code>a / b</code> and <code>a % b</code> is machine dependent. But do I always have <code>(a / b * b) + a % b == a</code> when <code>b</code> is not zero?</p>\n", "AcceptedAnswerId": "12232669", "Title": "Do I always have `(a / b * b) + a % b == a` when b is not zero?", "CreationDate": "2012-09-02T01:04:59.687", "Id": "12232650", "CommentCount": "2", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2012-09-02T01:07:57.713", "Score": "11", "OwnerUserId": "851835", "Tags": "<c++><c>", "AnswerCount": "1"}, "12232669": {"Id": "12232669", "PostTypeId": "2", "Body": "<p>C++11 \u00a75.6[expr.mul]/4 specifies:</p>\n<blockquote>\n<p id=\"so_12232650_12232669_0\">If the quotient <code>a/b</code> is representable in the type of the result, <code>(a/b)*b + a%b</code> is equal to <code>a</code>.</p>\n</blockquote>\n<p>C11 \u00a76.5.5/6 specifies the same with slightly different phrasing:</p>\n<blockquote>\n<p id=\"so_12232650_12232669_1\">If the quotient <code>a/b</code> is representable, the expression <code>(a/b)*b + a%b</code> shall equal <code>a</code>; otherwise, the behavior of both <code>a/b</code> and <code>a%b</code> is undefined.</p>\n</blockquote>\n", "LastActivityDate": "2012-09-02T01:07:57.713", "CommentCount": "3", "CreationDate": "2012-09-02T01:07:57.713", "ParentId": "12232650", "Score": "18", "OwnerUserId": "151292"}});