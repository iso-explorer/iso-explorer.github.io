post_cb({"12019315": {"ParentId": "12019269", "Score": "4", "CreationDate": "2012-08-18T14:20:27.047", "LastActivityDate": "2012-08-18T14:32:02.300", "LastEditDate": "2012-08-18T14:32:02.300", "OwnerUserId": "452307", "LastEditorUserId": "452307", "Body": "<p>What you have is an <strong><a href=\"http://en.wikipedia.org/wiki/Variable-length_array\" rel=\"nofollow\">Variable length array(VLA)</a></strong>, which is allowed in C standard but not in C++.<br>\nMost C++ compilers provide support for it through compiler extensions though. C++ Standard provides an <code>std::vector</code> which is usually used in C++ over VLA, since using VLA renders your code non-portable.     </br></p>\n<p>For an user program the elements of the VLA are located in contiguous memory locations just as in case of an normal array.Just the only difference is that the length of the array can be specified at run-time.</p>\n<p>When you provide a negative size to the VLA, What you invoke is <strong>Undefined Behavior</strong>.</p>\n<p><strong>Reference:</strong><br>\n<strong>C99 standard \u00a76.7.5.2:</strong></br></p>\n<blockquote>\n<p id=\"so_12019269_12019315_0\">If the size is an expression that is not an integer constant expression... ...each time it is evaluated it shall have a value greater than zero.</p>\n</blockquote>\n", "Id": "12019315", "PostTypeId": "2", "CommentCount": "0"}, "12019269": {"Tags": "<c++><c><memory><operating-system>", "ViewCount": "418", "LastEditDate": "2012-08-18T14:25:13.277", "CreationDate": "2012-08-18T14:14:36.597", "LastEditorUserId": "1205088", "Title": "Array declaration and memory layout", "CommentCount": "0", "AnswerCount": "1", "Score": "1", "OwnerUserId": "1205088", "Id": "12019269", "LastActivityDate": "2012-08-18T14:32:02.300", "Body": "<p>I know array is allocated size in stack if it is local . How is memory allocated to following array in code . Also when I give negative input like -20 then answer is -80. It is used to give error in earlier compiler but not now. So how it is dealed now ?</p>\n<pre><code>int main()\n{\n  int i;\n  scanf(\"%d\",&amp;i);\nint a[i];\nprintf(\"%d\",sizeof(a));\n}\n</code></pre>\n", "PostTypeId": "1"}, "bq_ids": {"n4659": {"so_12019269_12019315_0": {"length": 7, "section_id": 7584, "quality": 0.5384615384615384}}}});