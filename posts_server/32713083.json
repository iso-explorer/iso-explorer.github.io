post_cb({"32713083": {"CreationDate": "2015-09-22T09:18:31.837", "ViewCount": "389", "FavoriteCount": "1", "Id": "32713083", "AcceptedAnswerId": "32713134", "Score": "4", "Title": "Explicit constructor and static_cast", "CommentCount": "1", "Body": "<pre><code>struct Foo\n{\n    explicit Foo(int a):m(a){}\n    int padd1, m, padd2;\n};\n\nvoid Bar(Foo){}\n\nint main()\n{\n    Bar(11); // OK, gives error\n    auto x = static_cast&lt;Foo&gt;(37);\n    x.m;\n}\n</code></pre>\n<p>Is it ok, that <code>static_cast</code> construct <code>Foo</code> object even though its constructor is marked <code>explicit</code>?</p>\n<p>It works in MSVC2013 and GCC <a href=\"http://ideone.com/dMS5kB\" rel=\"nofollow\">http://ideone.com/dMS5kB</a></p>\n", "Tags": "<c++><explicit><static-cast>", "LastActivityDate": "2015-09-22T09:28:54.883", "PostTypeId": "1", "AnswerCount": "2", "OwnerUserId": "680031"}, "bq_ids": {"n4140": {"so_32713083_32713134_1": {"length": 34, "quality": 0.9444444444444444, "section_id": 6030}}, "n3337": {"so_32713083_32713134_1": {"length": 34, "quality": 0.9444444444444444, "section_id": 5798}}}, "32713134": {"CommentCount": "0", "Body": "<p>Yes, <code>static_cast</code> will use the <code>explicit</code> constructor.</p>\n<blockquote>\n<p id=\"so_32713083_32713134_0\"><strong>5.2.9 Static cast [expr.static.cast]</strong></p>\n<p id=\"so_32713083_32713134_1\">4 An expression e can be explicitly converted to a type T using a\n  static_cast of the form <strong><code>static_cast&lt;T&gt;(e)</code> if the declaration <code>T t(e);</code>\n  is well-formed</strong>, for some invented temporary variable t (8.5). The\n  effect of such an <strong>explicit conversion</strong> is the same as performing the\n  declaration and initialization and then using the temporary variable\n  as the result of the conversion. The expression e is used as a glvalue\n  if and only if the initialization uses it as a glvalue.</p>\n</blockquote>\n", "CreationDate": "2015-09-22T09:20:40.830", "ParentId": "32713083", "Id": "32713134", "LastActivityDate": "2015-09-22T09:20:40.830", "PostTypeId": "2", "Score": "6", "OwnerUserId": "819272"}, "32713159": {"CreationDate": "2015-09-22T09:21:47.940", "CommentCount": "0", "Body": "<p><code>explicit</code> combined with constructor means that compiler won't perform any implicit conversion from <code>int</code> to <code>Foo</code> , asking one to <code>deliberately</code> cast it.</p>\n<p>If your ctor wasn't explicit , even this expression <code>Bar('a');</code> would compile.</p>\n", "Id": "32713159", "OwnerUserId": "4882052", "LastEditDate": "2015-09-22T09:28:54.883", "ParentId": "32713083", "LastActivityDate": "2015-09-22T09:28:54.883", "PostTypeId": "2", "Score": "1", "LastEditorUserId": "4882052"}});