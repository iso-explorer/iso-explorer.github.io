post_cb({"14963372": {"ParentId": "14963327", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2013-02-19T17:10:32.453", "Score": "10", "LastEditorUserId": "150634", "LastEditDate": "2013-02-19T17:32:54.923", "Id": "14963372", "OwnerUserId": "150634", "Body": "<p>The implicitly declared default constructor, copy constructor, and copy assignment operator for that struct are non-trivial because it has a <code>virtual</code> function, so you've broken those requirements.</p>\n<blockquote>\n<p id=\"so_14963327_14963372_0\">A constructor is <em>trivial</em> if it is an implicitly-declared default constructor and if:</p>\n<ul>\n<li>its class has no virtual functions (10.3) and no virtual base classes (10.1), and</li>\n<li>[...]</li>\n</ul>\n<p id=\"so_14963327_14963372_1\">A copy constructor for class <code>X</code> is <em>trivial</em> if it is implicitly declared and if</p>\n<ul>\n<li>class <code>X</code> has no virtual functions (10.3) and no virtual base classes (10.1), and</li>\n<li>[...]</li>\n</ul>\n<p id=\"so_14963327_14963372_2\">A copy assignment operator for class <code>X</code> is <em>trivial</em> if it is implicitly declared and if</p>\n<ul>\n<li>class <code>X</code> has no virtual functions (10.3) and no virtual base classes (10.1), and</li>\n<li>[...]</li>\n</ul>\n</blockquote>\n<p>The C++11 quote is similar (it just includes move constructors and assignment operators) but C++11 does not have the same requirement on members of unions.</p>\n", "LastActivityDate": "2013-02-19T17:32:54.923"}, "14963327": {"CommentCount": "3", "ViewCount": "742", "PostTypeId": "1", "LastEditorUserId": "718379", "CreationDate": "2013-02-19T17:08:28.733", "LastActivityDate": "2014-05-07T15:08:27.493", "Title": "union can't contain an object that has a virtual function", "AcceptedAnswerId": "14963372", "LastEditDate": "2014-05-07T15:08:27.493", "Id": "14963327", "Score": "5", "Body": "<p><b>Code:</b></p>\n<pre><code>struct A{\n    int a;\n    virtual void f(){}\n};\nunion B{\n    A ob;\n};\n</code></pre>\n<p><b>Compile-time Error:</b></p>\n<pre><code>C:\\to\\main.cpp|9|error: member 'A B::ob' with constructor not allowed in union|\nC:\\to\\main.cpp|9|error: member 'A B::ob' with copy assignment operator not allowed in union|\n||=== Build finished: 2 errors, 0 warnings ===|\n</code></pre>\n<p><b>c++03 Standard:</b></p>\n<blockquote>\n<p id=\"so_14963327_14963327_0\">An object of a class with a non-trivial constructor (12.1), a\n  non-trivial copy constructor (12.8), a non-trivial destructor (12.4),\n  or a non-trivial copy assignment operator (13.5.3, 12.8) cannot be a\n  member of a union, nor can an array of such  objects. If a union\n  contains a static data member, or a member of reference type, the\n  program is ill-formed.</p>\n</blockquote>\n<p>The standard doesn't say anything about an object of a class with a virtual function, and from the error, the compiler complain about constructor and copy-assignment operator which I didn't use. so is this a compiler bug ? Im using gcc .</p>\n", "Tags": "<c++><unions>", "OwnerUserId": "869277", "AnswerCount": "2"}, "14963488": {"ParentId": "14963327", "CommentCount": "1", "CreationDate": "2013-02-19T17:16:28.017", "OwnerUserId": "643393", "PostTypeId": "2", "Id": "14963488", "Score": "0", "Body": "<p>Use C++11 if you can, it doesn't contain such constraint</p>\n", "LastActivityDate": "2013-02-19T17:16:28.017"}, "bq_ids": {"n4140": {"so_14963327_14963372_1": {"section_id": 484, "quality": 0.8333333333333334, "length": 5}, "so_14963327_14963372_2": {"section_id": 361, "quality": 0.7142857142857143, "length": 5}}, "n3337": {"so_14963327_14963372_0": {"section_id": 3157, "quality": 0.8, "length": 4}, "so_14963327_14963372_1": {"section_id": 351, "quality": 0.6666666666666666, "length": 4}, "so_14963327_14963372_2": {"section_id": 351, "quality": 0.7142857142857143, "length": 5}}, "n4659": {"so_14963327_14963372_0": {"section_id": 381, "quality": 0.8, "length": 4}, "so_14963327_14963372_1": {"section_id": 373, "quality": 0.6666666666666666, "length": 4}, "so_14963327_14963372_2": {"section_id": 373, "quality": 0.7142857142857143, "length": 5}}}});