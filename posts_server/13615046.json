post_cb({"bq_ids": {"n4140": {"so_13615046_13615131_0": {"length": 7, "quality": 0.875, "section_id": 7136}}, "n3337": {"so_13615046_13615131_0": {"length": 7, "quality": 0.875, "section_id": 6880}}, "n4659": {"so_13615046_13615131_0": {"length": 7, "quality": 0.875, "section_id": 8637}}}, "13615046": {"ViewCount": "1801", "Body": "<p>What is the linkage of a static function declared in a non-global namespace? </p>\n<p>Example:</p>\n<pre><code>namespace foo {\n  ...\n  static void bar(int a) { }\n}\n</code></pre>\n<p>Is this any different than a static method declared at the global namespace scope? Can someone point me to the place in the standard where this is laid out?</p>\n<p>Thanks!</p>\n", "AcceptedAnswerId": "13615131", "Title": "Linkage of a Static Function in a Namespace in C++", "CreationDate": "2012-11-28T21:51:43.967", "Id": "13615046", "CommentCount": "0", "PostTypeId": "1", "OwnerDisplayName": "user220878", "LastActivityDate": "2012-11-28T21:57:43.957", "Score": "4", "Tags": "<c++><static><namespaces><linkage>", "AnswerCount": "1"}, "13615131": {"Id": "13615131", "PostTypeId": "2", "Body": "<p><code>static</code> when used in a function at namespace level means <em>internal linkage</em>.</p>\n<p>The specific quote would be from 3.5 Program Linkage, paragraph 3:</p>\n<blockquote>\n<p id=\"so_13615046_13615131_0\">A name having namespace scope (3.3.6) has internal linkage if it is the name of</p>\n<ul>\n<li>a variable, function or function template that is explicitly declared static; or, [...]</li>\n</ul>\n</blockquote>\n", "LastActivityDate": "2012-11-28T21:57:43.957", "CommentCount": "2", "CreationDate": "2012-11-28T21:57:43.957", "ParentId": "13615046", "Score": "6", "OwnerUserId": "36565"}});