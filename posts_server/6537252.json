post_cb({"6537252": {"CommentCount": "0", "ViewCount": "913", "PostTypeId": "1", "LastEditorUserId": "816972", "CreationDate": "2011-06-30T15:29:22.860", "LastActivityDate": "2011-06-30T15:58:41.310", "Title": "Boost binary serialization problem with abstract class", "LastEditDate": "2011-06-30T15:58:41.310", "Id": "6537252", "Score": "0", "Body": "<p>Ciao folks,</p>\n<p>I'm quiet desperate not to find the source of the problem. I'm using Boost:serialization (version 1.46.1) and everything was working fine with <code>binary_oarchive</code>. I have a hierarchy of classes and, thus, I use the <code>register_type()</code>. </p>\n<p>However, where I came to use <code>binary_iarchive</code> to unserialize my objects, I got </p>\n<blockquote>\n<p id=\"so_6537252_6537252_0\">error: cannot allocate an object of abstract type </p>\n</blockquote>\n<p>which comes from the call of <code>register_type()</code> on the input archive.</p>\n<p>After googling I found out that the macro <code>BOOST_SERIALIZATION_ASSUME_ABSTRACT(T)</code> must be used for the abstract classes. The problem is that it simply doesn't work :). \nCan anyone help me out ?</p>\n<p>More about my code :</p>\n<pre><code>virtual void AbstractClass::initBinarySerialization(binary_iarchive&amp; ia)\n        {\n            ia.register_type&lt;AbstractClass&gt;();\n        }\n\nvirtual void SubClass::initBinarySerialization(binary_iarchive&amp; ia)\n        {\n            AbstractClass::initBinarySerialization(ia);\n            ia.register_type&lt;SubClass&gt;();\n        }\n</code></pre>\n<p>I call <code>initBinarySerialization</code> before reading in the archive. </p>\n", "Tags": "<c++><serialization><boost><input><abstract>", "OwnerUserId": "816972", "AnswerCount": "1"}, "6537291": {"ParentId": "6537252", "PostTypeId": "2", "CommentCount": "3", "Body": "<blockquote>\n<p id=\"so_6537252_6537291_0\">error: cannot allocate an object of abstract type</p>\n</blockquote>\n<p>It <em>seems</em> somewhere in your code, you're creating instance(s) of an <em>abstract</em> class. That is why you're getting this error, because creating instance of <em>abstract</em> class is forbidden. You can create instance(s) of only <em>concrete</em> classes.</p>\n<p>You need to tell boost that X is an abstract class, by writing:</p>\n<pre><code>BOOST_SERIALIZATION_ASSUME_ABSTRACT(X);\n</code></pre>\n<p>Now follow this topic which explains it further:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/1332602/how-to-serialize-derived-template-classes-with-boost-serialize\">How to serialize derived template classes with Boost.serialize?</a></li>\n</ul>\n", "OwnerUserId": "415784", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:48:05.830", "Id": "6537291", "Score": "0", "CreationDate": "2011-06-30T15:32:39.597", "LastActivityDate": "2011-06-30T15:38:27.330"}, "bq_ids": {"n4140": {"so_6537252_6537291_0": {"section_id": 3382, "quality": 0.6666666666666666, "length": 4}, "so_6537252_6537252_0": {"section_id": 3382, "quality": 0.6666666666666666, "length": 4}}, "n3337": {"so_6537252_6537291_0": {"section_id": 3251, "quality": 0.6666666666666666, "length": 4}, "so_6537252_6537252_0": {"section_id": 3251, "quality": 0.6666666666666666, "length": 4}}, "n4659": {"so_6537252_6537291_0": {"section_id": 4142, "quality": 0.6666666666666666, "length": 4}, "so_6537252_6537252_0": {"section_id": 4142, "quality": 0.6666666666666666, "length": 4}}}});