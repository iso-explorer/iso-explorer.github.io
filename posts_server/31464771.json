post_cb({"bq_ids": {"n4140": {"so_31464771_31464848_0": {"length": 26, "quality": 1.0, "section_id": 7107}}, "n3337": {"so_31464771_31464848_0": {"length": 26, "quality": 1.0, "section_id": 6851}}, "n4659": {"so_31464771_31464848_0": {"length": 26, "quality": 1.0, "section_id": 8608}}}, "31464848": {"Id": "31464848", "PostTypeId": "2", "Body": "<p>Clang is correct on this one. Quoting C++11, 3.4.3/1 [basic.lookup.qual]:</p>\n<blockquote>\n<p id=\"so_31464771_31464848_0\">... If a <code>::</code>\n  scope resolution operator in a <em>nested-name-specifier</em> is not preceded by a <em>decltype-specifier,</em> lookup of the\n  name preceding that <code>::</code> considers only namespaces, types, and templates whose specializations are types.\n  If the name found does not designate a namespace or a class, enumeration, or dependent type, the program\n  is ill-formed.</p>\n</blockquote>\n<p>Per this clause, types are supposed to be considered during the lookup, so the typedef <code>N</code> should be found. And since it does not designate a namespace, class, enumeration, or dependent type, the program is ill-formed.</p>\n", "LastActivityDate": "2015-07-16T21:28:53.997", "CommentCount": "4", "CreationDate": "2015-07-16T21:28:53.997", "ParentId": "31464771", "Score": "11", "OwnerUserId": "1782465"}, "31464771": {"ViewCount": "366", "Body": "<p>Consider the following program:</p>\n<pre><code>#include &lt;iostream&gt;\n\nnamespace N {\n    int j = 1;\n}\n\nnamespace M {\n    typedef int N;\n    void f() {\n        std::cout &lt;&lt; N::j &lt;&lt; std::endl;\n    }\n}\n\nint main() { M::f(); }\n</code></pre>\n<p>Compiling it with clang gives the following compiler error:</p>\n<pre><code>prog.cc:10:22: error: 'N' (aka 'int') is not a class, namespace, or\nenumeration\n    std::cout &lt;&lt; N::j &lt;&lt; std::endl;\n                 ^ 1 error generated.\n</code></pre>\n<p>GCC does not give any compiler error. I'm trying to figure out for what compiler I should file the bug report for. Which compiler has the correct behaviour and why (references to the c++ standard)?</p>\n<p>Wandbox - Clang: <a href=\"http://melpon.org/wandbox/permlink/s0hKOxCFPgq5aSmJ\">http://melpon.org/wandbox/permlink/s0hKOxCFPgq5aSmJ</a></p>\n<p>Wandbox - GCC: <a href=\"http://melpon.org/wandbox/permlink/i2kOl3qTBVUcJVbZ\">http://melpon.org/wandbox/permlink/i2kOl3qTBVUcJVbZ</a></p>\n", "AcceptedAnswerId": "31464848", "Title": "Different behaviour between Clang and GCC when performing qualified name lookup", "CreationDate": "2015-07-16T21:21:52.127", "Id": "31464771", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2015-07-16T21:28:53.997", "Score": "9", "OwnerUserId": "1272610", "Tags": "<c++><namespaces><typedef><language-lawyer><name-lookup>", "AnswerCount": "1"}});