post_cb({"13517470": {"ViewCount": "351", "Body": "<p>The <code>&lt;chrono&gt;</code> header defines class <code>steady_clock</code> that represents a monotonic clock - that is, the value of <code>now()</code> never decreases as physical time increases. This class isn't marked as optional though, so what happens if the implementation can't implement it because it is running on a system with no monotonic time source?</p>\n<p>Taking a look at the libstdc++ source, in the case of <code>_GLIBCXX_USE_CLOCK_MONOTONIC</code> not being defined, <code>steady_clock</code> is simply defined by:</p>\n<pre><code>typedef system_clock steady_clock;\n</code></pre>\n<p><code>system_clock</code> isn't necessarily steady though, so this may (and probably will) break the requirements of <code>steady_clock</code>.</p>\n<p>Is a conforming implementation of C++11 impossible on a system with no monotonic time source? Why not just make <code>steady_clock</code> optional like the <code>intX_t</code> types?</p>\n", "AcceptedAnswerId": "13517627", "Title": "Is a conforming implementation impossible on a system with no monotonic clock?", "CreationDate": "2012-11-22T17:20:11.057", "Id": "13517470", "CommentCount": "12", "LastEditDate": "2012-11-22T17:50:23.087", "PostTypeId": "1", "LastEditorUserId": "150634", "LastActivityDate": "2012-11-22T17:50:23.087", "Score": "4", "OwnerUserId": "150634", "Tags": "<c++><time><c++11><implementation><chrono>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_13517470_13517627_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 6264}, "so_13517470_13517627_1": {"length": 9, "quality": 0.75, "section_id": 6265}}, "n3337": {"so_13517470_13517627_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 6024}, "so_13517470_13517627_1": {"length": 9, "quality": 0.75, "section_id": 6025}}, "n4659": {"so_13517470_13517627_0": {"length": 13, "quality": 0.8666666666666667, "section_id": 7770}, "so_13517470_13517627_1": {"length": 9, "quality": 0.75, "section_id": 7771}}}, "13517627": {"Id": "13517627", "PostTypeId": "2", "Body": "<p>I suppose that such a system would be some kind of embedded system.</p>\n<p>Well, such <strike>systems</strike> tomatoes can have freestanding implementations, which only require a minimal subset of the standard library. <code>&lt;chrono&gt;</code> is not a part of that minimal subset.</p>\n<p>This is defined in \u00a717.6.1.3 Freestanding implementations [compliance]:</p>\n<blockquote>\n<p id=\"so_13517470_13517627_0\"><em>1</em> Two kinds of implementations are defined: <em>hosted</em> and <em>freestanding</em> (1.4). For a hosted implementation, this\n  International Standard describes the set of available headers.</p>\n<p id=\"so_13517470_13517627_1\"><em>2</em> A freestanding implementation has an implementation-defined set of headers. This set shall include at least\n  the headers shown in Table 16.</p>\n</blockquote>\n<p>Table 16 contains the following headers: <code>&lt;ciso646&gt;</code>, <code>&lt;cstddef&gt;</code>, <code>&lt;cfloat&gt;</code>, <code>&lt;limits&gt;</code>, <code>&lt;climits&gt;</code>, <code>&lt;cstdint&gt;</code>, <code>&lt;cstdlib&gt;</code>, <code>&lt;new&gt;</code>, <code>&lt;typeinfo&gt;</code>, <code>&lt;exception&gt;</code>, <code>&lt;initializer_list&gt;</code>, <code>&lt;cstdalign&gt;</code>, <code>&lt;cstdarg&gt;</code>, <code>&lt;cstdbool&gt;</code>, <code>&lt;type_traits&gt;</code>, and <code>&lt;atomic&gt;</code>.</p>\n<p>Note that this does not mean that such an implementation cannot provide a <code>&lt;chrono&gt;</code> header with everything that can be implemented in it, but not the rest.</p>\n", "LastEditorUserId": "46642", "LastActivityDate": "2012-11-22T17:39:50.503", "Score": "9", "CreationDate": "2012-11-22T17:32:56.403", "ParentId": "13517470", "CommentCount": "0", "LastEditDate": "2012-11-22T17:39:50.503", "OwnerUserId": "46642"}});