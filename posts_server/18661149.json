post_cb({"bq_ids": {"n4140": {"so_18661149_18661198_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 5962}}, "n3337": {"so_18661149_18661198_0": {"length": 10, "quality": 0.9090909090909091, "section_id": 5731}}, "n4659": {"so_18661149_18661198_0": {"length": 9, "quality": 0.8181818181818182, "section_id": 7451}}}, "18661149": {"ViewCount": "73", "Body": "<p>I used clang3.3 with netbeans on linux. All in C++11. And I have a question about initialization</p>\n<pre><code>int main() \n{\n   int i(); \n}\n</code></pre>\n<p>The following code is compiled but not work properly. This value will not defined by debugger and cannot be printable. I wanted describe int with default value. Instead I can write \"int{}\" and it will be a perfect default initialization. But I want understand what I wrote here, just want.</p>\n<p>Second question. Its about lambda. I want to know how lamda can be described without auto keyword.</p>\n<pre><code>auto lambda = [&amp;]()mutable-&gt;int{}; \n</code></pre>\n<p>Simple, what I can write here instead auto and compiler will not give me an error ? I just want understand. </p>\n", "AcceptedAnswerId": "18661198", "Title": "Few questions about initialization and lambda in c++", "CreationDate": "2013-09-06T15:19:39.337", "Id": "18661149", "CommentCount": "2", "PostTypeId": "1", "ClosedDate": "2013-09-06T18:00:19.337", "LastActivityDate": "2013-09-06T15:27:12.103", "Score": "-6", "OwnerUserId": "1433592", "Tags": "<c++>", "AnswerCount": "2"}, "18661198": {"Id": "18661198", "PostTypeId": "2", "Body": "<h3>Ad 1.</h3>\n<p>You've been bitten by the <a href=\"http://en.wikipedia.org/wiki/Most_vexing_parse\" rel=\"nofollow\">most vexing parse</a>. Basically, C++ grammar causes ambiguities between statements and declarations in certain cases. In such cases, the input is interpreted as a declaration. Since <code>int i()</code> can be interpreted as an integer variable definition, or a function declaration, it is interpreted as a declaration of parameterless function <code>i</code>, returning <code>int</code>.</p>\n<h3>Ad 2.</h3>\n<p>As for the second question, C++11 Standard <code>\u00a75.1.2/3</code> says it all:</p>\n<blockquote>\n<p id=\"so_18661149_18661198_0\">The type of the <em>lambda-expression</em> (...) is a unique, unnamed non-union class type \u2014 called the <em>closure type</em> (...)</p>\n</blockquote>\n<p>So, there is no way to refer to it other than using <code>auto</code>.</p>\n", "LastEditorUserId": "2725031", "LastActivityDate": "2013-09-06T15:26:45.860", "Score": "5", "CreationDate": "2013-09-06T15:21:43.807", "ParentId": "18661149", "CommentCount": "2", "OwnerUserId": "2725031", "LastEditDate": "2013-09-06T15:26:45.860"}, "18661195": {"Id": "18661195", "PostTypeId": "2", "Body": "<p>Thats not a variable default initialization, its a function declaration, thanks to <a href=\"http://en.wikipedia.org/wiki/Most_vexing_parse\" rel=\"nofollow\">most-vexing-parse</a>.  </p>\n<p>In a few words, the standard says if an expression can be evaluated as a function declaration, or as something else, it will be evaluated as a function declaration.<br>\nIn your case, a function <code>a</code> without parameters and <code>int</code> as return value.</br></p>\n", "LastEditorUserId": "1609356", "LastActivityDate": "2013-09-06T15:27:12.103", "Score": "2", "CreationDate": "2013-09-06T15:21:36.563", "ParentId": "18661149", "CommentCount": "2", "OwnerUserId": "1609356", "LastEditDate": "2013-09-06T15:27:12.103"}});