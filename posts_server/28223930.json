post_cb({"bq_ids": {"n4140": {"so_28223930_28224007_0": {"length": 24, "quality": 0.9230769230769231, "section_id": 5506}}, "n3337": {"so_28223930_28224007_0": {"length": 24, "quality": 0.9230769230769231, "section_id": 5292}}}, "28224007": {"PostTypeId": "2", "Body": "<p>GCC is correct. [namespace.udecl]/17:</p>\n<blockquote>\n<p id=\"so_28223930_28224007_0\">The access rules for inheriting constructors are specified in 12.9;\n  otherwise all instances of the name mentioned  in a <em>using-declaration</em>\n  shall be accessible. <strong>In particular, if a derived class uses a\n  <em>using-declaration</em> to access a member of a base class, the member name\n  shall be accessible.</strong></p>\n</blockquote>\n", "LastActivityDate": "2015-01-29T20:30:13.913", "Id": "28224007", "CommentCount": "0", "CreationDate": "2015-01-29T20:30:13.913", "ParentId": "28223930", "Score": "3", "OwnerUserId": "3647361"}, "28223930": {"ViewCount": "136", "Body": "<p>Consider following code:</p>\n<pre><code>#include &lt;iostream&gt;\n\nstruct Params { };\n\ntemplate &lt;class T&gt;\nstruct Base\n{\n    int data() const { return 42; }\n};\n\ntemplate &lt;template &lt;class&gt; class D, class P&gt;\nstruct Middle : private D&lt;P&gt; // must be 'public' for g++\n{\n};\n\nstruct Final : public Middle&lt;Base,Params&gt;\n{\n    using Base&lt;Params&gt;::data;\n};\n\n\nint main() {\n\n    Final f;\n\n    std::cout &lt;&lt; f.data() &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre>\n<p>This code compiled successfully and prints <code>42</code> with <a href=\"http://coliru.stacked-crooked.com/a/ca52b1d443c2dce7\" rel=\"nofollow\">clang</a> and gives me compile time error on <a href=\"http://coliru.stacked-crooked.com/a/43f91d740574931d\" rel=\"nofollow\">gcc</a> </p>\n<blockquote>\n<p id=\"so_28223930_28223930_0\">'int Base::data() const [with T = Params]' is inaccessible</p>\n</blockquote>\n<p>Which implementation is more complies to C++ Standard in this case?</p>\n", "AcceptedAnswerId": "28224007", "Title": "clang/g++ difference with private inheritance and using declaration", "CreationDate": "2015-01-29T20:25:16.317", "Id": "28223930", "CommentCount": "7", "LastEditDate": "2015-01-29T20:46:46.347", "PostTypeId": "1", "LastEditorUserId": "3647361", "LastActivityDate": "2015-01-29T20:46:46.347", "Score": "4", "OwnerUserId": "3240681", "Tags": "<c++><inheritance><g++><language-lawyer><clang++>", "AnswerCount": "1"}});