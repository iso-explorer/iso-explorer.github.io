post_cb({"34912588": {"CommentCount": "5", "ViewCount": "282", "CreationDate": "2016-01-20T23:23:40.707", "LastActivityDate": "2016-01-21T22:26:59.873", "Title": "Why do return codes over 255 return a differnt number in C++?", "AcceptedAnswerId": "34913061", "PostTypeId": "1", "Id": "34912588", "Score": "5", "Body": "<p>For example...</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main(){return 300;}\n</code></pre>\n<p>Returns:</p>\n<pre><code>Process finished with exit code 44\n</code></pre>\n<p>??</p>\n", "Tags": "<c++><return><exit-code>", "OwnerUserId": "5818546", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_34912588_34913061_1": {"section_id": 6805, "quality": 0.7142857142857143, "length": 20}, "so_34912588_34913061_0": {"section_id": 7149, "quality": 0.9444444444444444, "length": 17}}, "n3337": {"so_34912588_34913061_1": {"section_id": 6560, "quality": 0.7142857142857143, "length": 20}, "so_34912588_34913061_0": {"section_id": 6893, "quality": 0.9444444444444444, "length": 17}}, "n4659": {"so_34912588_34913061_1": {"section_id": 8296, "quality": 0.7142857142857143, "length": 20}, "so_34912588_34913061_0": {"section_id": 8650, "quality": 0.9444444444444444, "length": 17}}}, "34913061": {"ParentId": "34912588", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>The standard knows only two standaradized return values: <code>EXIT_SUCCESS</code> (or zero)  and <code>EXIT_- FAILURE</code>:</p>\n<blockquote>\n<p id=\"so_34912588_34913061_0\"><strong>3.6.1/5</strong> A return statement in main has the effect of leaving the main function (destroying any objects with automatic storage duration) and\n  calling <strong><code>std::exit</code></strong> with the return value as the argument.</p>\n<p id=\"so_34912588_34913061_1\"><strong>18.5/8</strong> (...) Finally, control is returned to the host environment. If status is zero or <code>EXIT_SUCCESS</code>, an implementation-defined form of the status\n  successful termination is returned. If status is <code>EXIT_- FAILURE</code>, an\n  implementation-defined form of the status unsuccessful termination is\n  returned. <strong>Otherwise the status returned is implementation-defined</strong>.</p>\n</blockquote>\n<p>It is hence not guaranteed that any other integer is returned as is.  </p>\n<p>On <a href=\"https://msdn.microsoft.com/en-us/library/6wdz5232.aspx\" rel=\"nofollow\">MS Windows</a> for example, the <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/ms683189%28v=vs.85%29.aspx\" rel=\"nofollow\"><code>GetExitCodeProcess()</code></a> function returns the integer value so you'll get 300.  </p>\n<p>On <a href=\"http://pubs.opengroup.org/onlinepubs/009695399/functions/exit.html\" rel=\"nofollow\">POSIX</a> compliant systems, like <a href=\"http://man7.org/linux/man-pages/man3/exit.3.html\" rel=\"nofollow\">Linux</a>, the rule is that (<em>\"only the 8 least significant bits (i.e. status &amp; 0377) shall be available to the awaiting parent process\"</em>).  So for 300, it will be 44.  </p>\n", "OwnerUserId": "3723423", "LastEditorUserId": "3723423", "LastEditDate": "2016-01-21T22:26:59.873", "Id": "34913061", "Score": "8", "CreationDate": "2016-01-21T00:05:53.610", "LastActivityDate": "2016-01-21T22:26:59.873"}});