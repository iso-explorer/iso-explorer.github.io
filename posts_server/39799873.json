post_cb({"39799873": {"CommentCount": "0", "ViewCount": "38", "PostTypeId": "1", "LastEditorUserId": "-1", "CreationDate": "2016-09-30T20:49:38.017", "LastActivityDate": "2016-10-03T14:22:16.993", "Title": "Example of error caused by using directive in namespaces", "AcceptedAnswerId": "39833904", "LastEditDate": "2017-05-23T12:06:52.470", "Id": "39799873", "Score": "1", "Body": "<p>I'm trying to understand what kind of errors could arise from including <code>using</code> declarations in namespaces. I'm taking into account <a href=\"https://stackoverflow.com/questions/6175705/scope-of-using-declaration-within-a-namespace\">these</a> <a href=\"http://www.gotw.ca/gotw/053.htm\" rel=\"nofollow noreferrer\">links</a>.</p>\n<p>I'm trying to create an example where an error is being caused by a name being silently replaced by an header file being loaded before another one, due to usage of the <code>using</code> declaration.</p>\n<p>Here I'm defining <code>MyProject::vector</code>:</p>\n<pre><code>// base.h\n#ifndef BASE_H\n#define BASE_H\n\nnamespace MyProject\n{\n    class vector {};\n}\n\n#endif\n</code></pre>\n<p>This is the \"bad\" header: here I'm trying to trick <code>using</code> into shadowing other possible definitions of <code>vector</code> inside <code>MyNamespace</code>:</p>\n<pre><code>// x.h\n#ifndef X_H\n#define X_H\n\n#include &lt;vector&gt;\n\nnamespace MyProject\n{\n    // With this everything compiles with no error!\n    //using namespace std;\n\n    // With this compilation breaks!\n    using std::vector;\n}\n\n#endif\n</code></pre>\n<p>This is the unsuspecting header trying to use <code>MyProject::vector</code> as defined in <code>base.h</code>:</p>\n<pre><code>// z.h\n#ifndef Z_H\n#define Z_H\n\n#include \"base.h\"\n\nnamespace MyProject\n{\n    void useVector()\n    {\n        const vector v;\n    }\n}\n\n#endif\n</code></pre>\n<p>And finally here's the implementation file, including both <code>x.h</code> and <code>z.h</code>:</p>\n<pre><code>// main.cpp\n// If I swap these two, program compiles!\n#include \"x.h\"\n#include \"z.h\"\n\nint main()\n{\n    MyProject::useVector();\n}\n</code></pre>\n<p>If I include <code>using std::vector</code> in <code>x.h</code>, an actual compilation error happens, telling me that I must specify a template argument when using <code>vector</code> in <code>z.h</code>, because <code>x.h</code> successfully managed to shadow the definition of <code>vector</code> inside <code>MyProject</code>. Is this a good example of why <code>using</code> declarations shouldn't be used in header files, or things go deeper that this, and I'm missing much more?</p>\n<p>If I include <code>using namespace std</code> in <code>x.h</code>, however, the shadowing doesn't occur, and the program compiles just fine. Why is that? Shouldn't <code>using namespace std</code> load all names visible under <code>std</code>, including <code>vector</code>, thus shadowing the other one?</p>\n", "Tags": "<c++><compiler-errors><namespaces><using-directives><using-declaration>", "OwnerUserId": "2633272", "AnswerCount": "1"}, "39833904": {"ParentId": "39799873", "CommentCount": "1", "Body": "<blockquote>\n<p id=\"so_39799873_39833904_0\">If I include using namespace std in x.h, however, the shadowing\n  doesn't occur, and the program compiles just fine. Why is that?</p>\n</blockquote>\n<p>This much I can answer from 7.3.4/2-3:</p>\n<p>First</p>\n<blockquote>\n<p id=\"so_39799873_39833904_1\">A using-directive specifies that the names in the nominated namespace\n  can be used in the scope in which the using-directive appears after\n  the using-directive.</p>\n</blockquote>\n<p>Then followed up:</p>\n<blockquote>\n<p id=\"so_39799873_39833904_2\">A using-directive does not add any members to the declarative region\n  in which it appears.</p>\n</blockquote>\n<p>So a using-directive (<code>using namespace</code>) only makes the names usable from the target namespace, it does not make them members of it. So any existing member will be preferred over the used namespace member.</p>\n", "OwnerUserId": "251738", "PostTypeId": "2", "Id": "39833904", "Score": "1", "CreationDate": "2016-10-03T14:22:16.993", "LastActivityDate": "2016-10-03T14:22:16.993"}, "bq_ids": {"n4140": {"so_39799873_39833904_1": {"section_id": 5510, "quality": 1.0, "length": 11}, "so_39799873_39833904_2": {"section_id": 5511, "quality": 1.0, "length": 7}}, "n3337": {"so_39799873_39833904_1": {"section_id": 5296, "quality": 1.0, "length": 11}, "so_39799873_39833904_2": {"section_id": 5297, "quality": 1.0, "length": 7}}, "n4659": {"so_39799873_39833904_1": {"section_id": 6945, "quality": 1.0, "length": 11}, "so_39799873_39833904_2": {"section_id": 6946, "quality": 1.0, "length": 7}}}});