post_cb({"9913974": {"ParentId": "9913834", "PostTypeId": "2", "CommentCount": "6", "Body": "<p>As the error message says, the conversion operator must be a <em>non-static</em> member of a class. That is true.</p>\n<blockquote>\n<p id=\"so_9913834_9913974_0\">I can not call b.any() in my if-statements, because the same code must run when std::bitset is replaced with unsigned or something.</p>\n</blockquote>\n<p>If that is your problem, then you can use function overload, and call it passing the argument which will return a boolean value:</p>\n<pre><code>template&lt;typename T&gt;\nbool to_bool(T const &amp; b)\n{\n    return b; //implicit conversion (if allowed) for all other types\n}\n\ntemplate&lt;size_t N&gt;\nbool to_bool(std::bitset&lt;N&gt; const &amp; b)\n{\n    return b.any();\n}\n</code></pre>\n<p>then use it as:</p>\n<pre><code>if (to_bool(whatever)) \n{\n}\n</code></pre>\n<p>It will call the correct overload. If the type of <code>whatever</code> is <code>std::bitset&lt;N&gt;</code> then the second overloaded function will be called, or else the first one will be called.</p>\n", "OwnerUserId": "415784", "LastEditorUserId": "415784", "LastEditDate": "2012-03-28T19:04:07.487", "Id": "9913974", "Score": "5", "CreationDate": "2012-03-28T18:59:00.813", "LastActivityDate": "2012-03-28T19:04:07.487"}, "9913834": {"CommentCount": "1", "ViewCount": "1598", "CreationDate": "2012-03-28T18:49:32.547", "LastActivityDate": "2012-03-28T19:06:55.820", "Title": "overloading non-member conversion to bool operator", "AcceptedAnswerId": "9913974", "PostTypeId": "1", "Id": "9913834", "Score": "4", "Body": "<p>I am trying to write bool-conversion operator for std::bitset</p>\n<p>I tried:</p>\n<pre><code>template&lt;size_t size&gt;\noperator bool(std::bitset&lt;size&gt; &amp; b)\n{\n    return b.any();\n}\n</code></pre>\n<p>but I got  </p>\n<pre><code>error C2801: 'mynamespace::operator bool' must be a non-static member\n</code></pre>\n<p>from my visual-studio.</p>\n<p>But when I look up <a href=\"http://msdn.microsoft.com/en-us/library/k4fyzf6a.aspx\" rel=\"nofollow\">C2801 explanation</a> it says nothing about conversion operators (only about =, -&gt;, [],())</p>\n<p>So, is it possible to somehow write \"Conversion std::bitset to bool operator?\"</p>\n<p>(I can not call <code>b.any()</code> in my if-statements, because the same code must run when std::bitset is replaced with unsigned or something</p>\n<pre><code>typedef std::bitset&lt;x&gt; Bitset;\n//typedef unsigned Bitset;\n</code></pre>\n<p>so the ideal syntax will be like:</p>\n<pre><code>Bitset b = whatewer;\nif(b)\n    doStuff();\n</code></pre>\n<p>)</p>\n<p>If this overloading is not possible, what is the recommended workaround?</p>\n<p>so far I use it like:</p>\n<pre><code>if(b == Bitset(0))\n    doStuff(); \n</code></pre>\n<p>but I dont like it.</p>\n<p>Thank you</p>\n", "Tags": "<c++><operator-overloading>", "OwnerUserId": "680031", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_9913834_9913985_0": {"section_id": 391, "quality": 0.9705882352941176, "length": 33}}, "n3337": {"so_9913834_9913985_0": {"section_id": 382, "quality": 0.9705882352941176, "length": 33}}, "n4659": {"so_9913834_9913985_0": {"section_id": 408, "quality": 0.7352941176470589, "length": 25}}}, "9913982": {"ParentId": "9913834", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>\u00a712.3.2/1: \"A <strong>member</strong> function of a class X with a name of the form [...] specifies a conversion from X to the type specified...\" (C++11 uses the same section number and nearly the same wording, adding only that the function takes no parameters).</p>\n<p>The other possible way to define a conversion is a constructor (\u00a712.3.1), which is obviously a class member as well.</p>\n<p>In short, yes, conversions must always be defined as member functions.</p>\n<p>One way to do what you want would be to write a wrapper around <code>std::bitset</code> that provides the conversion you care about:</p>\n<pre><code>template &lt;int size&gt;\nclass mybitest {\n    std::bitset&lt;size&gt; bits;\npublic:\n    operator bool() { return bits.any(); }\n}\n</code></pre>\n<p>But if you decide to do that, you'll need to write forwarding functions for essentially all the pieces of <code>bitset</code> you're using (ctors, assignment, etc.)</p>\n", "OwnerUserId": "179910", "LastEditorUserId": "179910", "LastEditDate": "2012-03-28T19:06:55.820", "Id": "9913982", "Score": "5", "CreationDate": "2012-03-28T18:59:15.813", "LastActivityDate": "2012-03-28T19:06:55.820"}, "9913985": {"ParentId": "9913834", "CommentCount": "0", "Body": "<p>The standard is a bit unclear on this (12.3.2):</p>\n<blockquote>\n<p id=\"so_9913834_9913985_0\">A <strong>member function of a class X</strong> having no parameters with a name of the form [...] specifies a conversion from X to the type specified by the conversion-type-id. Such functions are called conversion functions. No return type can be specified. <strong>If a conversion function is a member function</strong>, the type of the conversion function (8.3.5) is \u201cfunction taking no parameter returning conversion-type-id\u201d.</p>\n</blockquote>\n<p>The first sentence seems to imply that <em>only</em> member functions can be conversion functions, but I'm not sure what the purpose of the conditional \"if a conversion function is a member function\" is.</p>\n<p>I'd take the first sentence as binding and conclude that a conversion function must be a member function.</p>\n", "OwnerUserId": "596781", "PostTypeId": "2", "Id": "9913985", "Score": "2", "CreationDate": "2012-03-28T18:59:24.487", "LastActivityDate": "2012-03-28T18:59:24.487"}});