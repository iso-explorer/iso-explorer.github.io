post_cb({"17241943": {"ParentId": "17241750", "CommentCount": "3", "Body": "<p>C++11 23.2.5/8 \"Unordered associative containers\":</p>\n<blockquote>\n<p id=\"so_17241750_17241943_0\">Rehashing invalidates iterators, changes ordering between elements, and changes which buckets elements appear in, but does not invalidate pointers or references to elements.</p>\n</blockquote>\n<p>So the iterators would be invalidated on a rehash, but you could take references to the elements instead.</p>\n", "OwnerUserId": "12711", "PostTypeId": "2", "Id": "17241943", "Score": "1", "CreationDate": "2013-06-21T18:24:39.180", "LastActivityDate": "2013-06-21T18:24:39.180"}, "bq_ids": {"n4140": {"so_17241750_17241943_0": {"section_id": 761, "quality": 1.0, "length": 17}}, "n3337": {"so_17241750_17241943_0": {"section_id": 748, "quality": 1.0, "length": 17}}, "n4659": {"so_17241750_17241943_0": {"section_id": 821, "quality": 1.0, "length": 17}}}, "17241750": {"CommentCount": "2", "ViewCount": "634", "CreationDate": "2013-06-21T18:12:21.627", "LastActivityDate": "2013-06-21T18:24:39.180", "Title": "will unordered_map iterator change?", "AcceptedAnswerId": "17241943", "PostTypeId": "1", "Id": "17241750", "Score": "0", "Body": "<p>Hi I wonder if the iterator will change if the size of the unordered_map changes and then rehashed? I'm trying to create a struct of iterator pointers to bring several elements in the unordered_map together.</p>\n<pre><code>#include&lt;string&gt;\n#include&lt;tr1/unordered_map&gt;\n\nstruct linker\n{\n    unordered_map&lt;Key,T&gt;::iterator it;\n    unordered_map&lt;Key,T&gt;::iterator it1;\n    unordered_map&lt;Key,T&gt;::iterator it2;\n\n};\n\nunordered_map&lt;string,int&gt; map({{\"aaa\",1},{\"bbb\",2},{\"ccc\",3},{\"ddd\",4}});\n\nlinker node1 = new linker;\nnode1.it = map.find(\"aaa\");\nnode1.it1 = &amp;map.find(\"ccc\");\nnode1.it2 = &amp;map.find(\"ddd\");\n\nmap.insert(make_pair({\"sss\",23}));\n.....\n</code></pre>\n<p>after insert too many elements, will the iterator pointer still available and point to the same element/key before the map size changes?</p>\n", "Tags": "<c++><iterator><unordered-map>", "OwnerUserId": "1032149", "AnswerCount": "1"}});