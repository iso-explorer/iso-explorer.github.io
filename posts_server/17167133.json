post_cb({"bq_ids": {"n4140": {"so_17167133_17167167_0": {"length": 28, "quality": 0.9032258064516129, "section_id": 3222}}, "n3337": {"so_17167133_17167167_0": {"length": 26, "quality": 0.8387096774193549, "section_id": 3096}}, "n4659": {"so_17167133_17167167_0": {"length": 28, "quality": 0.9032258064516129, "section_id": 3979}}}, "17167133": {"ViewCount": "332", "Body": "<p>How does below program prints \"Show Called\" ? I guess it should have been run-time error since value of obj ptr is NULL.</p>\n<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\n   class ex\n    {\n        int i;\n\n    public:\n        ex(int ii=0):i(ii) {}\n\n        ~ex(){cout&lt;&lt;\"dest\"&lt;&lt;endl;}\n\n        void show()\n        {\n            cout&lt;&lt;\"Show called\";\n        }\n\n    };\n\n    int main()\n    {\n        ex *obj = NULL;\n        obj-&gt;show();\n\n        return 0;\n    }\n</code></pre>\n", "AcceptedAnswerId": "17167167", "Title": "Pointer to a class access public member function", "CreationDate": "2013-06-18T10:56:53.887", "Id": "17167133", "CommentCount": "1", "PostTypeId": "1", "ClosedDate": "2013-06-18T11:15:10.483", "LastActivityDate": "2013-06-18T11:11:08.403", "Score": "0", "OwnerUserId": "649994", "Tags": "<c++><class><function><pointers><public>", "AnswerCount": "3"}, "17167261": {"Id": "17167261", "PostTypeId": "2", "Body": "<p>In your example the method is non virtual. So it is implemented as a normal function. As you don't dereferernce <code>this</code> there is no problem. Would your method be virtual you would call something like <code>this-&gt;__vtable[0](this)</code> which would not work because you would dereference <code>0</code>. </p>\n", "LastActivityDate": "2013-06-18T11:03:37.133", "Score": "0", "CreationDate": "2013-06-18T11:03:37.133", "ParentId": "17167133", "CommentCount": "0", "OwnerUserId": "1918154"}, "17167409": {"Id": "17167409", "PostTypeId": "2", "Body": "<p>As you are not accessing any public data member, it will not throw any exception.</p>\n<p>But it will throw an exception if you try to acces any public data member through that object as there is no memory allocated to that object.</p>\n", "LastActivityDate": "2013-06-18T11:11:08.403", "Score": "0", "CreationDate": "2013-06-18T11:11:08.403", "ParentId": "17167133", "CommentCount": "1", "OwnerUserId": "2078685"}, "17167167": {"Id": "17167167", "PostTypeId": "2", "Body": "<p>You have to know, how the methods are called.</p>\n<pre><code>ex::show();\n(...)\n\nobj-&gt;show();\n</code></pre>\n<p>Is (mostly probably) translated by <strong>your specific compiler</strong> to:</p>\n<pre><code>show(ex * this);\n(...)\n\nshow(obj);\n</code></pre>\n<p>And since you do not use <code>this</code> inside, there is no reason for the exception to be thrown...</p>\n<p>I stressed out <strong>your specific compiler</strong>, because:</p>\n<blockquote>\n<h3>C++ standard, chapter 8.3.2, References</h3>\n<p id=\"so_17167133_17167167_0\">[ Note: in particular, a null reference cannot exist in a well-defined program, because the only way\n  to create such a reference would be to bind it to the \u201cobject\u201d obtained by indirection through a null pointer,\n  which causes <strong>undefined behavior</strong>. As described in 9.6, a reference cannot be bound directly to a bit-field.\n  \u2014end note ]</p>\n</blockquote>\n", "LastEditorUserId": "453803", "LastActivityDate": "2013-06-18T11:10:31.657", "Score": "0", "CreationDate": "2013-06-18T10:59:04.617", "ParentId": "17167133", "CommentCount": "4", "LastEditDate": "2013-06-18T11:10:31.657", "OwnerUserId": "453803"}});