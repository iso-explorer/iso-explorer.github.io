post_cb({"32919319": {"Id": "32919319", "PostTypeId": "2", "Body": "<p>[temp.res]/8:</p>\n<blockquote>\n<p id=\"so_32918009_32919319_0\">If every valid specialization of a variadic template requires an empty\n  template parameter pack, the template is ill-formed, no diagnostic\n  required.</p>\n</blockquote>\n<p>Every valid specialization of <code>f</code> would require <code>Ts</code> to be an empty pack. Therefore the program is ill-formed NDR. Both compilers are correct.</p>\n<p>As to GCC's diagnostic, that seems to be due to its habit of using <code>int</code> as a placeholder for \"something that looks like a type but doesn't make sense\" for error recovery purposes.</p>\n", "LastActivityDate": "2015-10-03T05:40:47.590", "CommentCount": "0", "CreationDate": "2015-10-03T05:40:47.590", "ParentId": "32918009", "Score": "4", "OwnerUserId": "2756719"}, "32918009": {"ViewCount": "118", "Body": "<p>Is this code well-formed? The declaration of the function template itself gives an error in both clang and gcc even though <code>Ts</code> could well be empty.</p>\n<pre class=\"lang-c++ prettyprint-override\"><code>// error: too many template arguments for class template 'pair'\ntemplate&lt;class I, class U, class... Ts&gt;\nvoid f(std::pair&lt;I,U,Ts...&gt;);\n\nint main()\n{\n    f(std::pair&lt;int,int&gt;());\n}\n</code></pre>\n<p>The function call gives this error in gcc which doesn't make sense. There is no conversion to <code>int</code>:</p>\n<pre class=\"lang-c++ prettyprint-override\"><code>note: cannot convert 'std::pair&lt;int, int&gt;()' (type 'std::pair&lt;int, int&gt;') to type 'int'\n</code></pre>\n", "AcceptedAnswerId": "32919319", "Title": "Multiple pack expansions inside class with fixed number of template arguments", "CreationDate": "2015-10-03T01:25:58.317", "Id": "32918009", "CommentCount": "1", "LastEditDate": "2015-10-03T01:45:07.250", "PostTypeId": "1", "LastEditorUserId": "2069064", "LastActivityDate": "2015-10-03T13:03:34.470", "Score": "5", "OwnerUserId": "1594090", "Tags": "<c++><templates><c++11>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_32918009_32919319_0": {"length": 14, "quality": 1.0, "section_id": 175}}, "n3337": {"so_32918009_32919319_0": {"length": 14, "quality": 1.0, "section_id": 169}}, "n4659": {"so_32918009_32919319_0": {"length": 12, "quality": 0.8571428571428571, "section_id": 180}}}});