post_cb({"bq_ids": {"n4140": {"so_17458698_17460139_0": {"length": 5, "quality": 0.625, "section_id": 3321}, "so_17458698_17460139_1": {"length": 11, "quality": 0.7857142857142857, "section_id": 3321}}, "n3337": {"so_17458698_17460139_0": {"length": 5, "quality": 0.625, "section_id": 3191}, "so_17458698_17460139_1": {"length": 11, "quality": 0.7857142857142857, "section_id": 3191}}, "n4659": {"so_17458698_17460139_0": {"length": 5, "quality": 0.625, "section_id": 4087}, "so_17458698_17460139_1": {"length": 12, "quality": 0.8571428571428571, "section_id": 4087}}}, "17458698": {"ViewCount": "118", "Body": "<p>Using paragraphs 8.5.3p4 and p5 in the C++11 Standard, how do I prove that the snippet below doesn't compile?</p>\n<pre><code>char a = 'a';\nchar* p = &amp;a;\nconst char* &amp; r = p;\n</code></pre>\n", "AcceptedAnswerId": "17460139", "Title": "Using paragraphs 8.5.3p4 and p5 in the C++11 Standard, how do I prove that the snippet below doesn't compile?", "CreationDate": "2013-07-03T21:49:58.287", "Id": "17458698", "CommentCount": "12", "LastEditDate": "2013-07-03T23:36:18.417", "PostTypeId": "1", "LastEditorUserId": "2337207", "LastActivityDate": "2013-07-04T00:32:41.050", "Score": "-6", "OwnerUserId": "2337207", "Tags": "<c++><c++11><standards>", "AnswerCount": "1"}, "17460139": {"Id": "17460139", "PostTypeId": "2", "Body": "<p>Firstly, a common mistake in reading 8.5.3p5 is to miss that it has <strong>two</strong> top level bullet points.  You may have accidentally misread the final occurence of \"Otherwise\" as a third bullet point - but it is in fact a subpart of the second bullet point (also starting Otherwise).</p>\n<pre><code>char a = 'a';\nchar* p = &amp;a;\n</code></pre>\n<p>OK</p>\n<pre><code>const char* &amp; r = p;\n</code></pre>\n<p>So we have a lvalue-reference to <code>cv1 T1 = pointer to const char</code> being bound to an lvalue of type <code>cv2 T2 = pointer to char</code></p>\n<p>The two types are not reference-related or reference-compatible.</p>\n<p><code>cv1</code> and <code>cv2</code> are both empty.</p>\n<p>The initializer expression does not have a class type</p>\n<p><code>cv1</code> is not const.</p>\n<p>Therefore, neither of the two bullet points in 8.5.3p5 apply, and the code is ill-formed.</p>\n<p>The two bullet points are:</p>\n<blockquote>\n<ol>\n<li><p id=\"so_17458698_17460139_0\">If the reference is an lvalue reference and the initializer expression... [CONDITIONS FAIL TO APPLY]</p></li>\n<li><p id=\"so_17458698_17460139_1\">Otherwise, the reference shall be an lvalue reference to a non-volatile const type (i.e., cv1 shall be const [IT ISNT]), or the reference shall be an rvalue reference [IT ISNT].</p></li>\n</ol>\n</blockquote>\n", "LastEditorUserId": "1131467", "LastActivityDate": "2013-07-04T00:32:41.050", "Score": "4", "CreationDate": "2013-07-04T00:22:55.993", "ParentId": "17458698", "CommentCount": "0", "LastEditDate": "2013-07-04T00:32:41.050", "OwnerUserId": "1131467"}});