post_cb({"bq_ids": {"n4140": {"so_1516696_1516829_0": {"length": 9, "quality": 1.0, "section_id": 660}}, "n3337": {"so_1516696_1516829_0": {"length": 9, "quality": 1.0, "section_id": 650}}, "n4659": {"so_1516696_1516829_0": {"length": 9, "quality": 1.0, "section_id": 688}}}, "1516829": {"Id": "1516829", "PostTypeId": "2", "Body": "<p>The assignment operator (=) is special in that it <em>always</em> needs to be a non-static member function as per \"\u00a713.5.3 Assignment\" of the C++ standard.</p>\n<blockquote>\n<p id=\"so_1516696_1516829_0\">An assignment operator shall be implemented by a non-static member function with exactly one parameter</p>\n</blockquote>\n<p>The same is true for the function call operator and the subscript operator. Other \"assignment\" operators (+=, -=, *=, etc) can be free binary functions.</p>\n", "LastEditorUserId": "2971", "LastActivityDate": "2009-10-05T10:03:07.020", "Score": "2", "CreationDate": "2009-10-04T16:38:24.783", "ParentId": "1516696", "CommentCount": "1", "OwnerUserId": "172531", "LastEditDate": "2009-10-05T10:03:07.020"}, "1516696": {"ViewCount": "1729", "Body": "<p>Just curious about how to overload them.</p>\n<p>The opAssign operators are like addAssign(+=) and subAssign(-=).</p>\n<p>\"globally\" means they are not overloaded as member functions, but just a operator act on operands</p>\n<p>For these opAssign operators, they are binary operators.(they receive two operands) \nTherefore two parameters are needed.</p>\n<p>I found no examples on the web.....</p>\n", "AcceptedAnswerId": "1516716", "Title": "How to overload opAssign operator \"globally\" in C++", "CreationDate": "2009-10-04T15:43:51.827", "LastActivityDate": "2009-10-05T10:03:07.020", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2009-10-04T16:12:06.420", "OwnerDisplayName": "Bossliaw", "LastEditorUserId": "11995", "Id": "1516696", "Score": "1", "Tags": "<c++><operator-overloading>", "AnswerCount": "2"}, "1516716": {"Id": "1516716", "PostTypeId": "2", "Body": "<p>Here's a trivial example of defining <code>operator+=</code>:</p>\n<pre><code>struct Foo{\n    int x;\n};\n\nFoo&amp; operator+=(Foo&amp; lhs, const Foo&amp; rhs) {\n    lhs.x += rhs.x;\n    return lhs;\n}\n</code></pre>\n", "LastEditorUserId": "2971", "LastActivityDate": "2009-10-04T16:24:50.380", "Score": "9", "CreationDate": "2009-10-04T15:49:57.937", "ParentId": "1516696", "CommentCount": "1", "OwnerUserId": "149392", "LastEditDate": "2009-10-04T16:24:50.380"}});