post_cb({"7519040": {"ParentId": "7518744", "CommentCount": "0", "Body": "<p>You get the same result with this simplified version:</p>\n<pre><code>int foo() ;\nint foo() ; // OK -- extern functions may be declared more than once\nclass C {\n  int foo() ;\n  int foo() ; // Error -- member function may not be declared more than once\n} ;\n</code></pre>\n<p>Perhaps the reason is historical -- lots of <code>C</code> code used redeclaration of <code>extern</code> functions,  so they had to be allowed.</p>\n", "OwnerUserId": "428857", "PostTypeId": "2", "Id": "7519040", "Score": "1", "CreationDate": "2011-09-22T17:36:49.017", "LastActivityDate": "2011-09-22T17:36:49.017"}, "7518830": {"ParentId": "7518744", "CommentCount": "0", "Body": "<p>It certainity works - but I think it is bad practice.</p>\n", "OwnerUserId": "892256", "PostTypeId": "2", "Id": "7518830", "Score": "0", "CreationDate": "2011-09-22T17:17:55.973", "LastActivityDate": "2011-09-22T17:17:55.973"}, "7518785": {"ParentId": "7518744", "PostTypeId": "2", "CommentCount": "11", "Body": "<p>From the Standard (2003), \u00a78.3.6/4 says,</p>\n<blockquote>\n<p id=\"so_7518744_7518785_0\">For non-template functions, <strong>default\n  arguments can be added in later\n  declarations of a function</strong> in the same\n  scope.</p>\n</blockquote>\n<p>Example from the Standard itself:</p>\n<pre><code>void f(int, int);\nvoid f(int, int = 7);\n</code></pre>\n<p>The second declaration adds default value!</p>\n<p>Also see \u00a78.3.6/6. </p>\n<p>And an interesting (and somewhat related) topic:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/5637679/default-argument-in-the-middle-of-parameter-list\">Default argument in the middle of parameter list?</a></li>\n</ul>\n<p>And \u00a79.3/2,</p>\n<blockquote>\n<p id=\"so_7518744_7518785_1\">Except for member function definitions that appear outside of a class definition, and except for explicit specializations of member functions of class templates and member function templates (14.7) appearing outside of the class definition, <strong>a member function\n  shall not be redeclared.</strong></p>\n</blockquote>\n<p>Hope that helps.</p>\n", "OwnerUserId": "415784", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:19:55.817", "Id": "7518785", "Score": "6", "CreationDate": "2011-09-22T17:14:02.940", "LastActivityDate": "2011-09-22T18:27:25.557"}, "7518744": {"CommentCount": "3", "AcceptedAnswerId": "7518785", "PostTypeId": "1", "LastEditorUserId": "168225", "CreationDate": "2011-09-22T17:11:06.140", "LastActivityDate": "2011-09-22T18:27:25.557", "LastEditDate": "2011-09-22T17:19:03.150", "ViewCount": "794", "FavoriteCount": "1", "Title": "Non member function can be declared multiple times while member function can only be declared once?", "Id": "7518744", "Score": "2", "Body": "<p>Non mumber function can be delcared multiple times while member function can only be declared once? Is this right ? My example seems saying yes.</p>\n<p>But Why ?</p>\n<pre><code>class Base{\npublic:\n    int foo(int i);\n    //int foo(int i=10); //error C2535: 'void Base::foo(int)' : member function already defined or declared\n};\n\n//but it seems ok to declare it multiple times\nint foo(int i);\nint foo(int i=10);\n\nint foo(int i)\n{\n    return i;\n}\n\nint main (void)\n{\n    int i = foo();//i is 10 \n}\n</code></pre>\n", "Tags": "<c++><member-functions><declare><non-member-functions>", "OwnerUserId": "833538", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_7518744_7518785_1": {"section_id": 5881, "quality": 0.9615384615384616, "length": 25}, "so_7518744_7518785_0": {"section_id": 3255, "quality": 0.9166666666666666, "length": 11}}, "n3337": {"so_7518744_7518785_1": {"section_id": 5652, "quality": 0.9615384615384616, "length": 25}, "so_7518744_7518785_0": {"section_id": 3127, "quality": 0.9166666666666666, "length": 11}}, "n4659": {"so_7518744_7518785_1": {"section_id": 7364, "quality": 0.9615384615384616, "length": 25}, "so_7518744_7518785_0": {"section_id": 4013, "quality": 0.9166666666666666, "length": 11}}}});