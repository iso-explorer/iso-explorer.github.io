post_cb({"30521417": {"ParentId": "30521292", "CommentCount": "1", "Body": "<p>Emphasis mine, [expr.ass]/1:</p>\n<blockquote>\n<p id=\"so_30521292_30521417_0\">The assignment operator (<code>=</code>) and the compound assignment operators all group right-to-left. All require a\n  <strong>modifiable</strong> lvalue as their left operand and return an lvalue referring to the left operand...</p>\n</blockquote>\n<p>[basic.lval]/6:</p>\n<blockquote>\n<p id=\"so_30521292_30521417_1\">Functions cannot be modified, but pointers to functions can be modifiable.</p>\n</blockquote>\n<p>So you may have an lvalue referring to a function but it is not a <strong>modifiable</strong> lvalue, and cannot be used to modify the function.</p>\n<p>The diagnostic message... leaves something to be desired. Clang 3.6 says,</p>\n<blockquote>\n<p id=\"so_30521292_30521417_2\">error: non-object type 'int ()' is not assignable</p>\n</blockquote>\n<p>which is clearer.</p>\n", "OwnerUserId": "481267", "PostTypeId": "2", "Id": "30521417", "Score": "6", "CreationDate": "2015-05-29T04:56:41.877", "LastActivityDate": "2015-05-29T04:56:41.877"}, "30521292": {"CommentCount": "0", "ViewCount": "74", "CreationDate": "2015-05-29T04:44:44.480", "LastActivityDate": "2015-05-29T04:56:41.877", "Title": "rvalue reference to a function type", "AcceptedAnswerId": "30521417", "PostTypeId": "1", "Id": "30521292", "Score": "0", "Body": "<p>As known, the function call which return type is an rvlaue to a function is an lvalue.</p>\n<blockquote>\n<p id=\"so_30521292_30521292_0\">A function call is an lvalue if the result type is an lvalue reference\n  type or an rvalue reference to function type, an xvalue if the result\n  type is an rvalue reference to object type, and a prvalue otherwise.</p>\n</blockquote>\n<pre><code>#include &lt;iostream&gt;\n\nint a(){ return 1; }\n\nint foo(){ return 1; }\n\nint (&amp;&amp;bar())(){ return a; }\n\nint main()\n{\n    bar() = foo; //error: cannot convert 'int()' to 'int()' in assignment\n}\n</code></pre>\n<p>What's wrong with that diagnostic message?</p>\n", "Tags": "<c++><rvalue>", "OwnerUserId": "2786156", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_30521292_30521417_0": {"section_id": 6173, "quality": 0.9523809523809523, "length": 20}, "so_30521292_30521417_1": {"section_id": 7235, "quality": 1.0, "length": 8}, "so_30521292_30521292_0": {"section_id": 5997, "quality": 1.0, "length": 21}}, "n3337": {"so_30521292_30521417_0": {"section_id": 5934, "quality": 0.9523809523809523, "length": 20}, "so_30521292_30521417_1": {"section_id": 6979, "quality": 1.0, "length": 8}, "so_30521292_30521292_0": {"section_id": 5765, "quality": 1.0, "length": 21}}, "n4659": {"so_30521292_30521417_0": {"section_id": 7675, "quality": 0.9523809523809523, "length": 20}, "so_30521292_30521292_0": {"section_id": 7498, "quality": 1.0, "length": 21}}}});