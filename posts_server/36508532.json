post_cb({"36508684": {"ParentId": "36508532", "CommentCount": "0", "Body": "<p>While I still do not think that you've choosen the right course to study templates, I am going to answer direct question.</p>\n<p>The wording of Standard (and cppreference) mean that template variables should be defined as <code>static</code> when they are class members. It is a requirement for the developer.</p>\n", "OwnerUserId": "5245033", "PostTypeId": "2", "Id": "36508684", "Score": "1", "CreationDate": "2016-04-08T20:23:29.787", "LastActivityDate": "2016-04-08T20:23:29.787"}, "36508532": {"CommentCount": "4", "AcceptedAnswerId": "36508684", "ClosedDate": "2016-04-08T20:30:23.717", "CreationDate": "2016-04-08T20:12:25.933", "LastActivityDate": "2016-04-08T20:23:29.787", "PostTypeId": "1", "ViewCount": "63", "Title": "The declarations in the link below don't need the storage-class-specifier `static`. Am I correct?", "Id": "36508532", "Score": "3", "Body": "<p>The following is an excerpt of <a href=\"http://en.cppreference.com/w/cpp/language/variable_template\" rel=\"nofollow\">this</a> cppreference page about variable template</p>\n<blockquote>\n<p id=\"so_36508532_36508532_0\">When used at class scope, variable template declares a static data\n  member template.</p>\n<pre><code>using namespace std::literals;\nstruct matrix_constants\n{\n    template&lt;class T&gt;\n    using pauli = hermitian_matrix&lt;T, 2&gt;; // alias template\n\n    template&lt;class T&gt; // static data member template\n    static constexpr pauli&lt;T&gt; sigma1 = { { 0, 1 }, { 1, 0 } }; \n\n    template&lt;class T&gt;\n    static constexpr pauli&lt;T&gt; sigma2 = { { 0, -1i }, { 1i, 0 } };\n\n   template&lt;class T&gt;\n   static constexpr pauli&lt;T&gt; sigma3 = { { 1, 0 }, { 0, -1 } };\n};\n</code></pre>\n</blockquote>\n<p>The C++ Standard (N4140) says the following in paragraph \u00a714.1 (1.4):</p>\n<blockquote>\n<p id=\"so_36508532_36508532_1\">A variable template at class scope is a static data member template.</p>\n</blockquote>\n<p>Thus, it seems to me the declarations in the link above don't need the storage-class-specifier <code>static</code>. Am I correct?</p>\n<p>P.S.: I've just started my investigation on templates. </p>\n", "Tags": "<c++><templates><static><c++14>", "OwnerUserId": "1577873", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_36508532_36508532_1": {"section_id": 48, "quality": 0.875, "length": 7}, "so_36508532_36508532_0": {"section_id": 48, "quality": 0.7, "length": 7}}, "n3337": {"so_36508532_36508532_1": {"section_id": 221, "quality": 0.75, "length": 6}, "so_36508532_36508532_0": {"section_id": 97, "quality": 0.6, "length": 6}}, "n4659": {"so_36508532_36508532_1": {"section_id": 49, "quality": 0.875, "length": 7}, "so_36508532_36508532_0": {"section_id": 49, "quality": 0.7, "length": 7}}}});