post_cb({"bq_ids": {"n4140": {"so_12793412_12793431_2": {"length": 30, "quality": 1.0, "section_id": 3270}}, "n3337": {"so_12793412_12793431_2": {"length": 30, "quality": 1.0, "section_id": 3142}}, "n4659": {"so_12793412_12793431_2": {"length": 30, "quality": 1.0, "section_id": 4028}}}, "12793412": {"ViewCount": "348", "Body": "<p>I have defaulted my copy constructor and copy assignment operator as follows:</p>\n<pre><code>  Config(const Config&amp; config) = default;\n  Config&amp; operator=(const Config&amp; rhs) = default;\n</code></pre>\n<p>and then have given access to these via friendship to a free standing function.\nUpon creating a copy of a config object, I'm getting the following warning and note(?):</p>\n<blockquote>\n<p id=\"so_12793412_12793412_0\">./cfg/config.hpp:129:3: warning: unused parameter 'config'\n  [-Wunused-parameter] cfg/get.cpp: In function 'const cfg::Config&amp;\n  cfg::Get(bool)': cfg/get.cpp:34:30: note: synthesized method\n  'cfg::Config::Config(const cfg::Config&amp;)' first required here</p>\n</blockquote>\n<p>It would appear the copy constructor isn't even being instantiated.\nDespite this, the code seems to run. </p>\n<p>gcc version 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) </p>\n", "AcceptedAnswerId": "12793431", "Title": "Defaulted copy constructor and copy assignment assignment operator giving strange error", "CreationDate": "2012-10-09T05:35:31.037", "Id": "12793412", "CommentCount": "3", "LastEditDate": "2013-12-01T01:49:52.027", "PostTypeId": "1", "LastEditorUserId": "759866", "LastActivityDate": "2013-12-01T01:49:52.027", "Score": "3", "OwnerUserId": "269469", "Tags": "<c++><constructor><c++11><compiler-errors>", "AnswerCount": "2"}, "16557879": {"Id": "16557879", "PostTypeId": "2", "Body": "<p>I just ran into this today; while I'm just using the \"omit the names\" workaround, there are two relevant bugs open against GCC:</p>\n<p><a href=\"http://gcc.gnu.org/bugzilla/show_bug.cgi?id=50895\" rel=\"nofollow\">http://gcc.gnu.org/bugzilla/show_bug.cgi?id=50895</a> -- a suggestion to omit the \"unused parameter\" warning on virtual methods (or maybe just empty virtual methods).</p>\n<p><a href=\"http://gcc.gnu.org/bugzilla/show_bug.cgi?id=57211\" rel=\"nofollow\">http://gcc.gnu.org/bugzilla/show_bug.cgi?id=57211</a> -- this problem (unused param names on defaulted methods), complicated by the fact that the line/column error indicator points at the top of the class defn, instead of at the defaulted method defn.</p>\n<p>As can be seen in my comments to the bugs, my interest is in making my documentation more consistent.  Ideally I could have my code and my docs both build without warnings.</p>\n<p>If nothing else, the warning here is IMHO incorrect: the parameter is certainly used, it's just used by a different name or through some other mechanism.</p>\n", "LastActivityDate": "2013-05-15T05:58:59.370", "CommentCount": "0", "CreationDate": "2013-05-15T05:58:59.370", "ParentId": "12793412", "Score": "0", "OwnerUserId": "784478"}, "12793431": {"Id": "12793431", "PostTypeId": "2", "Body": "<p>Just omit the parameters:</p>\n<pre><code>Config(const Config&amp;) = default;\nConfig&amp; operator=(const Config&amp;) = default;\n</code></pre>\n<p>The statements above instruct the compiler to generate default special member functions of the type stated, but the details of these implementations are not specified. The parameter names are redundant and have no effect. The compiler is free to issue warnings for legal code.</p>\n<p>From \u00a78.4.2:</p>\n<blockquote>\n<p id=\"so_12793412_12793431_0\">... A function that is explicitly defaulted shall</p>\n<p id=\"so_12793412_12793431_1\">\u2014 be a special member function,</p>\n<p id=\"so_12793412_12793431_2\">\u2014 have the same declared function type (except for possibly differing ref-qualifiers and except that in the case of a copy constructor or copy assignment operator, the parameter type may be \u201creference to non-const T\u201d, where T is the name of the member function\u2019s class) as if it had been implicitly declared ...</p>\n</blockquote>\n", "LastEditorUserId": "661519", "LastActivityDate": "2012-10-09T06:03:54.200", "Score": "7", "CreationDate": "2012-10-09T05:36:51.427", "ParentId": "12793412", "CommentCount": "5", "OwnerUserId": "661519", "LastEditDate": "2012-10-09T06:03:54.200"}});