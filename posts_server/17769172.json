post_cb({"bq_ids": {"n4140": {"so_17769172_17774047_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 6137}}, "n3337": {"so_17769172_17774047_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 5901}}, "n4659": {"so_17769172_17774047_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 7634}}}, "17774047": {"Id": "17774047", "PostTypeId": "2", "Body": "<p><strong>Yes, <a href=\"https://connect.microsoft.com/VisualStudio/feedback/details/794649/non-conforming-return-value-for-std-chrono-duration-operator\" rel=\"nofollow\">this is a bug and the fix is available in Visual Studio 2015</a>.</strong></p>\n<p>The reason it's an implementation bug comes from dimensional analysis.</p>\n<p>Clearly if we subtract <code>seconds</code> from <code>seconds</code> the result is <code>seconds</code>.</p>\n<pre><code>seconds = seconds - seconds\n</code></pre>\n<p>And if we divide <code>seconds</code> by <code>seconds</code>, the result is a scalar (a scalar has no units).</p>\n<pre><code>scalar = seconds / seconds\n</code></pre>\n<p>And finally one can multiply <code>seconds</code> by a scalar and get <code>seconds</code>.</p>\n<pre><code>seconds = seconds * scalar\nseconds = scalar * seconds\n</code></pre>\n<p>In [expr.mul]/p4 the standard defines the modulus operator:</p>\n<blockquote>\n<p id=\"so_17769172_17774047_0\">... if the quotient <code>a/b</code> is representable in the type of the result,\n  <code>(a/b)*b + a%b</code> is equal to <code>a</code> ...</p>\n</blockquote>\n<p>Said slightly differently:</p>\n<pre><code>a % b = a - (a/b)*b\n</code></pre>\n<p>So a <code>duration % duration</code> has the same units as:</p>\n<pre><code>seconds - (seconds/seconds)*seconds\n</code></pre>\n<p>which simplifies down to just <code>seconds</code>, and not a scalar.</p>\n<p>The same analysis explains why:</p>\n<pre><code>seconds % scalar = seconds\n</code></pre>\n", "LastEditorUserId": "560648", "LastActivityDate": "2015-04-16T15:07:29.923", "Score": "8", "CreationDate": "2013-07-21T15:44:35.320", "ParentId": "17769172", "CommentCount": "1", "OwnerUserId": "576911", "LastEditDate": "2015-04-16T15:07:29.923"}, "17769172": {"ViewCount": "412", "Body": "<p>I'm in the process of porting some C++ code to Windows (from Linux/g++4.8.1) and I noticed that Microsoft's implementation of the duration's modulus operator is incorrect.  </p>\n<p>The simple program </p>\n<pre><code>#include &lt;chrono&gt;\n#include &lt;iostream&gt;\n\nusing namespace std::chrono;\n\nint main(void)\n{\n    std::cout &lt;&lt; (milliseconds(1050)%seconds(1)).count() &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>\n<p>when compiled with Microsoft Visual Studio 2012 gives the compilation error:</p>\n<pre><code>error C2228: left of '.count' must have class/struct/union\n</code></pre>\n<p>The standard (<a href=\"http://en.cppreference.com/w/cpp/chrono/duration/operator_arith4\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/chrono/duration/operator_arith4</a>) \nhas the definition as </p>\n<pre><code>template&lt; class Rep1, class Period1, class Rep2, class Period2 &gt;\ntypename common_type&lt;duration&lt;Rep1,Period1&gt;, duration&lt;Rep2,Period2&gt;&gt;::type\nconstexpr operator%( const duration&lt;Rep1,Period1&gt;&amp; lhs,\n    const duration&lt;Rep2,Period2&gt;&amp; rhs );\n</code></pre>\n<p>I.e. the modulus operator returns a duration of the common type.  Microsoft's implementation (<a href=\"http://msdn.microsoft.com/en-us/library/hh874810.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/hh874810.aspx</a>) has the definition as</p>\n<pre><code>template&lt;class Rep1, class Period1, class Rep2, class Period2&gt;\nconstexpr typename common_type&lt;Rep1, Rep2&gt;::type\noperator%(\n  const duration&lt;Rep1, Period1&gt;&amp; Left,\n  const duration&lt;Rep2, Period2&gt;&amp; Right);\n</code></pre>\n<p>This incorrectly returns the underlying duration storage type.  Is this a bug, or am I missing something?</p>\n", "AcceptedAnswerId": "17774047", "Title": "non conforming return value for std::chrono::duration::operator%() in Microsoft C++ 2012", "CreationDate": "2013-07-21T04:50:18.703", "Id": "17769172", "CommentCount": "2", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2015-04-16T15:07:29.923", "Score": "2", "OwnerUserId": "2066786", "Tags": "<visual-studio-2012><c++11><chrono>", "AnswerCount": "1"}});