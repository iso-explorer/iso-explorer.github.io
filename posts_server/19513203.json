post_cb({"19513203": {"CommentCount": "12", "ViewCount": "369", "PostTypeId": "1", "LastEditorUserId": "164171", "CreationDate": "2013-10-22T08:49:47.053", "LastActivityDate": "2013-10-22T10:33:05.913", "Title": "Does closing an fstream guarantee a filesystem sync?", "AcceptedAnswerId": "19514276", "LastEditDate": "2013-10-22T10:33:05.913", "Id": "19513203", "Score": "1", "Body": "<p>Does closing an fstream guarantee a sync to the filesystem? I'm debating this with a co-worker and would need a definite reference. I'm intersted in what the standard says and also in what happens on windows with the Visual Studio implementation.</p>\n<p>Also, if close doesn't imply a sync, is there a standard C++ way to ensure the sync is done?</p>\n", "Tags": "<c++><windows><visual-c++><file-io><language-lawyer>", "OwnerUserId": "164171", "AnswerCount": "1"}, "19514276": {"ParentId": "19513203", "CommentCount": "1", "Body": "<p>I'm quite sure it's already sorted out how closing the filestream closes the buffers. So, now, the buffers:</p>\n<p><a href=\"http://www.cs.technion.ac.il/users/yechiel/CS/C++draft/ISO-CPP-body.pdf\" rel=\"nofollow\">draft of Std'1998</a>: 27.8.1.3.6: basic_filebuf* close();</p>\n<blockquote>\n<p id=\"so_19513203_19514276_0\">6 Effects: If is_open() == false, returns a null pointer. If a put area exists, calls <strong>overflow(EOF)</strong> to flush characters. (...) Finally it closes the file <strong>(\u2018\u2018as if\u2019\u2019 by calling std::fclose(file)).308)</strong> If any of the calls to overflow or std::fclose fails then close fails.</p>\n</blockquote>\n<p>Now, see the <code>overflow()</code>: 27.8.1.4.8 (...)</p>\n<p>I've then tried to trace it further, somewhere down there were some references to <code>sync</code> and <code>sputc</code>, but I was unable to trace the exact wording for how <code>overflow</code> guarantees flushing. It surely does, but sorry, my time's up today :/</p>\n", "OwnerUserId": "717732", "PostTypeId": "2", "Id": "19514276", "Score": "1", "CreationDate": "2013-10-22T09:41:36.307", "LastActivityDate": "2013-10-22T09:41:36.307"}, "bq_ids": {"n4140": {"so_19513203_19514276_0": {"section_id": 2430, "quality": 0.8, "length": 20}}, "n3337": {"so_19513203_19514276_0": {"section_id": 2415, "quality": 0.8, "length": 20}}, "n4659": {"so_19513203_19514276_0": {"section_id": 2706, "quality": 0.76, "length": 19}}}});