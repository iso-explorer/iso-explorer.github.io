post_cb({"8782718": {"ParentId": "8782343", "CommentCount": "0", "Body": "<p>Note that footnote 143 in section \u00a76.10.2 \"Source file inclusion\" of the C99 standard says:</p>\n<blockquote>\n<p id=\"so_8782343_8782718_0\"><sup>143)</sup> Note that adjacent string literals are not concatenated into a single string literal (see the translation\n  phases in 5.1.1.2); thus, an expansion that results in two string literals is an invalid directive.</p>\n</blockquote>\n<p>Thus, any string concatenation must be done outside the source code.  Token concatenation with <code>##</code> is not an option; that is used to build identifiers, and the bits of the header name you are joining are not identifiers.</p>\n<p>I think you should simply use something like:</p>\n<pre><code>#ifndef STATE_HEADER\n#define STATE_HEADER \"states/StateName.h\"\n#endif\n#include STATE_HEADER\n</code></pre>\n<p>and leave it to the build system, not the source code, to determine that <code>-I../../../..</code> is required as an option to the compiler.</p>\n", "OwnerUserId": "15168", "PostTypeId": "2", "Id": "8782718", "Score": "1", "CreationDate": "2012-01-09T00:25:31.120", "LastActivityDate": "2012-01-09T00:25:31.120"}, "8782394": {"ParentId": "8782343", "CommentCount": "0", "Body": "<p>You'd better pass the include directory to gcc with <code>-I</code> option</p>\n<pre><code>-I../../../..\n</code></pre>\n<p>From gcc man page:</p>\n<pre><code>-I dir\nAdd the directory dir to the list of directories to be searched for header files.\n</code></pre>\n", "OwnerUserId": "1119701", "PostTypeId": "2", "Id": "8782394", "Score": "1", "CreationDate": "2012-01-08T23:34:43.420", "LastActivityDate": "2012-01-08T23:34:43.420"}, "8782343": {"CommentCount": "1", "ViewCount": "1791", "PostTypeId": "1", "LastEditorUserId": "1056289", "CreationDate": "2012-01-08T23:28:01.643", "LastActivityDate": "2012-01-09T07:43:34.820", "Title": "Concatenate and stringize macro values for #include", "AcceptedAnswerId": "8782718", "LastEditDate": "2012-01-09T07:43:34.820", "Id": "8782343", "Score": "0", "Body": "<p>I'm trying to create a string from multiple macros/values for use in a <code>#include</code>. I'm doing this to clean up some code for an initial state in a simple state system.</p>\n<p>I have 2 default, redefinable macros (if not defined there's a default value)</p>\n<pre><code>   #define DEFAULT_STATE          StateName    // name of class\n   #define DEFAULT_STATE_LOCATION states/      // location of header file from root\n</code></pre>\n<p>The include directive is being used from a file 4 folders in from the <code>root</code>, so the include should look like this</p>\n<pre><code>#include \"../../../../states/StateName.h\"\n</code></pre>\n<p>based on the example above.</p>\n<p>So I want to define a macro from the 4 values.</p>\n<pre><code>../../../../\nDEFAULT_STATE_LOCATION\nDEFAULT_STATE\n.h\n</code></pre>\n<p>into some macro, say <code>DEFAULT_STATE_INCLUDE</code></p>\n<p>so I can say</p>\n<pre><code>#include #DEFAULT_STATE_INCLUDE\n(to stringize the value for quotes)\n</code></pre>\n<p>That way I can change the default state and the path from the root of the header file for the default state in a prefix header, and the source using the <code>#include</code> will not have to be updated, and I can omit the constants from redefinition every time.</p>\n<p>I'm not including the <code>.h</code> in the <code>DEFAULT_STATE</code> macro because I use the same macro to create and instance of the default state.</p>\n<p>I've tried using the concatenation <code>##</code>, and the stringize operator, and some tricks I've found online, but nothing worked.</p>\n<p>I can define <code>../../../../</code> and <code>.h</code> in their own macros if needed.</p>\n<p>But simply</p>\n<pre><code>    #define DEFAULT_STATE_INCLUDE ../../../../ ## DEFAULT_STATE_LOCATION ## DEFAULT_STATE ## .h\n    #include #DEFAULT_STATE_INCLUDE\n</code></pre>\n<p>gives tons of errors.</p>\n<p>Any help is appreciated. \nThanks</p>\n", "Tags": "<c++><objective-c><c><xcode><gcc>", "OwnerUserId": "1137704", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_8782343_8782718_0": {"section_id": 506, "quality": 0.8636363636363636, "length": 19}}, "n3337": {"so_8782343_8782718_0": {"section_id": 497, "quality": 0.8636363636363636, "length": 19}}, "n4659": {"so_8782343_8782718_0": {"section_id": 527, "quality": 0.8636363636363636, "length": 19}}}, "8782407": {"ParentId": "8782343", "CommentCount": "3", "Body": "<p>This seems relevant: <a href=\"http://gcc.gnu.org/onlinedocs/cpp/Computed-Includes.html\" rel=\"nofollow\">Computed Includes</a> </p>\n<p>My reading of that is that the #define macro has to include the \" (quote) characters and that you can't rely on the stringize or concatenation operators to do it for you.</p>\n", "OwnerUserId": "438982", "PostTypeId": "2", "Id": "8782407", "Score": "1", "CreationDate": "2012-01-08T23:36:29.620", "LastActivityDate": "2012-01-08T23:36:29.620"}});