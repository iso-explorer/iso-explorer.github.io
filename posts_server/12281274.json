post_cb({"12281274": {"ViewCount": "1468", "Body": "<p>I'm getting an error with the following:</p>\n<pre><code>class Test\n{\n    std::map&lt;std::string,Test&gt; test;\n};\n</code></pre>\n<p>The error is \"Field has incomplete type 'Test'\". I read a few threads with suggested this might be a bug in the version of libcxx which ships with xcode, but it wouldn't surprise me at all if I just have to change it to:</p>\n<pre><code>class Test\n{\n    std::map&lt;std::string,std::shared_ptr&lt;Test&gt;&gt; test;\n};\n</code></pre>\n<p>I just wanted to double check that this is definitely a correct error and not a bug.</p>\n<p>Cheers!</p>\n", "AcceptedAnswerId": "12295799", "Title": "map with incomplete value type", "CreationDate": "2012-09-05T12:19:15.780", "Id": "12281274", "CommentCount": "12", "PostTypeId": "1", "LastActivityDate": "2012-09-06T08:17:52.420", "Score": "5", "OwnerUserId": "928838", "Tags": "<c++><map><c++11><std><libc++>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_12281274_12295799_0": {"length": 5, "quality": 1.0, "section_id": 6324}, "so_12281274_12295799_2": {"length": 11, "quality": 1.0, "section_id": 6324}}, "n3337": {"so_12281274_12295799_0": {"length": 5, "quality": 1.0, "section_id": 6081}, "so_12281274_12295799_2": {"length": 11, "quality": 1.0, "section_id": 6081}}, "n4659": {"so_12281274_12295799_0": {"length": 5, "quality": 1.0, "section_id": 7834}, "so_12281274_12295799_2": {"length": 11, "quality": 1.0, "section_id": 7834}}}, "12295799": {"Id": "12295799", "PostTypeId": "2", "Body": "<p>The standard requires that, all types used in template components of the standard library must be complete, unless otherwise stated. Thus libc++'s error is correct. Using an incomplete type is undefined behavior (\u00a717.6.4.8[res.on.functions]/2), so libstdc++ accepting it isn't wrong either. </p>\n<p>You could use a pointer object to construct the complete type as you did. But you could also use some third-party collections library which allows incomplete types, e.g. <a href=\"http://www.boost.org/doc/libs/1_51_0/doc/html/boost/container/map.html\" rel=\"noreferrer\"><code>boost::container::map</code></a> is <a href=\"http://www.boost.org/doc/libs/1_51_0/doc/html/container/containers_of_incomplete_types.html\" rel=\"noreferrer\">designed to allow incomplete types</a>.</p>\n<hr>\n<p>\u00a717.6.4.8 Other functions / 2:</p>\n<blockquote>\n<p id=\"so_12281274_12295799_0\">In particular, the effects are undefined in the following cases:</p>\n<ul>\n<li><p id=\"so_12281274_12295799_1\">...</p></li>\n<li><p id=\"so_12281274_12295799_2\">if an incomplete type (3.9) is used as a template argument when instantiating a template component, unless specifically allowed for that component.</p></li>\n</ul>\n</blockquote>\n<p>(The only components that explicitly allow incomplete types are <code>declval</code>, <code>unique_ptr</code>, <code>default_delete</code>, <code>shared_ptr</code>, <code>weak_ptr</code> and <code>enable_shared_from_this</code>.)</p>\n</hr>", "LastActivityDate": "2012-09-06T08:17:52.420", "CommentCount": "1", "CreationDate": "2012-09-06T08:17:52.420", "ParentId": "12281274", "Score": "6", "OwnerUserId": "224671"}});