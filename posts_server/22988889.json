post_cb({"22988889": {"CommentCount": "3", "AcceptedAnswerId": "22989006", "CreationDate": "2014-04-10T13:02:44.050", "LastActivityDate": "2014-04-10T13:09:15.313", "PostTypeId": "1", "ViewCount": "2039", "FavoriteCount": "3", "Title": "std::vector emplace_back() for non copy constructible objects", "Id": "22988889", "Score": "9", "Body": "<p>Considering this quote from <a href=\"http://en.cppreference.com/w/cpp/container/vector/emplace_back\">en.cppreference.com</a> regarding <code>std::vector::emplace_back</code></p>\n<blockquote>\n<p id=\"so_22988889_22988889_0\">\"Appends a new element to the end of the container. The element is\n  constructed in-place, i.e. no copy or move operations are performed.\n  The constructor of the element is called with exactly the same\n  arguments that are supplied to the function.\"</p>\n</blockquote>\n<p>and following sample:</p>\n<pre><code>#include &lt;vector&gt;\nstruct A\n{\n    A(int){}\n    A(A const&amp;) = delete;\n};\n\nint main()\n{\n    std::vector&lt;A&gt; vec;\n    vec.emplace_back(1);\n\n    return 0;\n}\n</code></pre>\n<p>On line <code>vec.emplace_back(1);</code> Visual Studio 2013/GCC report:</p>\n<blockquote>\n<p id=\"so_22988889_22988889_1\">error C2280: 'A::A(const A &amp;)' : attempting to reference a deleted function</p>\n<p id=\"so_22988889_22988889_2\">error: use of deleted function \u2018A::A(const A&amp;)\u2019</p>\n</blockquote>\n<p>Is the error correct? Can you please explain me why?</p>\n", "Tags": "<c++><c++11><vector>", "OwnerUserId": "336578", "AnswerCount": "2"}, "22989035": {"ParentId": "22988889", "CommentCount": "0", "Body": "<p>Like other functions that increase the size of the vector, <code>emplace_back</code> conditionally reallocates the vector (if the current capacity is not large enough). If it does this then it needs to get the existing elements from the old array to the new.</p>\n<p>Your class has no move constructor (some classes have a compiler-generated move, but not this one because you deleted the copy constructor). So the reallocation code needs to be able to copy the type, and it can't.</p>\n<p>Of course for this call there are no old elements to copy, but nevertheless the <code>emplace_back</code> function can't be instantiated.</p>\n", "OwnerUserId": "13005", "PostTypeId": "2", "Id": "22989035", "Score": "6", "CreationDate": "2014-04-10T13:09:15.313", "LastActivityDate": "2014-04-10T13:09:15.313"}, "22989006": {"ParentId": "22988889", "CommentCount": "0", "Body": "<p>C++11 23.2.1 Table 101 states:</p>\n<blockquote>\n<p id=\"so_22988889_22989006_0\">Expression: <code>a.emplace_back(args)</code></p>\n<p id=\"so_22988889_22989006_1\">Return type: <code>void</code></p>\n<p id=\"so_22988889_22989006_2\">Operation semantics: Appends an object of type <code>T</code> constructed with <code>std::forward&lt;Args&gt;(args)...</code>. <em>Requires:</em> <code>T</code> shall be <code>EmplaceConstructible</code> into <code>X</code> from <code>args</code>. For <code>vector</code>, <code>T</code> shall also be <code>MoveInsertable</code> into <code>X</code>.</p>\n</blockquote>\n<p>Your <code>A</code> does not fulfill the <code>MoveInsertable</code> requirement, since you do not have a move constructor, and only have a deleted copy constructor. With a container other than <code>std::vector</code>, <a href=\"http://ideone.com/dGxGDi\">it works</a>.</p>\n", "OwnerUserId": "1782465", "PostTypeId": "2", "Id": "22989006", "Score": "10", "CreationDate": "2014-04-10T13:08:02.930", "LastActivityDate": "2014-04-10T13:08:02.930"}, "bq_ids": {"n4140": {"so_22988889_22989006_2": {"section_id": 735, "quality": 0.8125, "length": 13}}, "n3337": {"so_22988889_22989006_2": {"section_id": 724, "quality": 0.8125, "length": 13}}, "n4659": {"so_22988889_22989006_2": {"section_id": 764, "quality": 0.75, "length": 12}}}});