post_cb({"18741004": {"Id": "18741004", "PostTypeId": "2", "Body": "<p>A value of <strong>5</strong> has been already assigned to the variable <code>b</code> in your <strong><code>mathscalc</code></strong> function.</p>\n<p>So if you pass value <strong>2</strong> to <code>a</code> , say the  <strong><code>mathscalc</code></strong> has a multiplication operation of <code>c = a*b;</code> the result of <code>c</code> will be <strong>10</strong>.</p>\n<p>If you explicitly pass <code>a=2</code> and <code>b=3</code> to your <strong><code>mathscalc</code></strong> function, the existing value assigned to <code>b=5</code> will be overwritten to <code>b=3</code>, so the result of <code>c</code> will be <strong>6</strong>.</p>\n", "LastActivityDate": "2013-09-11T12:18:09.723", "CommentCount": "0", "CreationDate": "2013-09-11T12:18:09.723", "ParentId": "18740917", "Score": "0", "OwnerUserId": "1003917"}, "18740917": {"ViewCount": "113", "Body": "<p>If I have a function such as </p>\n<pre><code>int mathscalc (int a, int b = 5)\n{\n\n}\n</code></pre>\n<p>And I call the function mathscalc(a), how can I only do 1 argument when it requires 2? if that's possible.</p>\n", "Title": "Functions and arguments", "CreationDate": "2013-09-11T12:14:20.293", "LastActivityDate": "2015-12-21T08:25:38.047", "CommentCount": "1", "LastEditDate": "2013-09-11T12:18:52.773", "PostTypeId": "1", "LastEditorUserId": "712294", "Id": "18740917", "Score": "0", "OwnerUserId": "2756669", "Tags": "<c++>", "AnswerCount": "6"}, "18741001": {"Id": "18741001", "PostTypeId": "2", "Body": "<p>If you call <code>mathscalc</code> with only one argument then <code>b</code> will be set to it's default <code>5</code>.</p>\n", "LastActivityDate": "2013-09-11T12:18:01.280", "CommentCount": "0", "CreationDate": "2013-09-11T12:18:01.280", "ParentId": "18740917", "Score": "0", "OwnerUserId": "1312406"}, "bq_ids": {"n4140": {"so_18740917_18741089_0": {"length": 14, "quality": 1.0, "section_id": 3252}}, "n3337": {"so_18740917_18741089_0": {"length": 14, "quality": 1.0, "section_id": 3124}}, "n4659": {"so_18740917_18741089_0": {"length": 14, "quality": 1.0, "section_id": 4010}}}, "18740945": {"Id": "18740945", "PostTypeId": "2", "Body": "<p><code>b</code> has a default value. If it is not specified, it is 5, if it is specified, it is the value, that is given.</p>\n<p>For example:</p>\n<pre><code>mathscalc(3, 10) // b is 10 inside the function call\n\nmathscalc(3) // b is 5 inside the function call\n</code></pre>\n", "LastEditorUserId": "2739235", "LastActivityDate": "2013-09-11T12:22:37.577", "Score": "5", "CreationDate": "2013-09-11T12:15:22.773", "ParentId": "18740917", "CommentCount": "1", "OwnerUserId": "2739235", "LastEditDate": "2013-09-11T12:22:37.577"}, "18741150": {"Id": "18741150", "PostTypeId": "2", "Body": "<p>If you make call to mathscalc function with one say,</p>\n<pre><code>   mathscalc(4);\n</code></pre>\n<p>Compiler intern changes this function with </p>\n<pre><code>   mathscalc(4, 5);\n</code></pre>\n<p>But, if you make a call with two args say,</p>\n<pre><code>   mathscalc(4, 10);\n</code></pre>\n<p>Compiler will not replace that b with 5 instead it uses 10 in the place of b.</p>\n", "LastActivityDate": "2013-09-11T12:24:07.947", "CommentCount": "0", "CreationDate": "2013-09-11T12:24:07.947", "ParentId": "18740917", "Score": "0", "OwnerUserId": "987251"}, "18741089": {"Id": "18741089", "PostTypeId": "2", "Body": "<p>This is well explained in C++11 Standard.</p>\n<p>\u00a78.3.6 Default arguments [dcl.fct.default]</p>\n<blockquote>\n<p id=\"so_18740917_18741089_0\">1 If an initializer-clause is specified in a parameter-declaration this initializer-clause is used as a default argument. Default arguments will be used in calls where trailing arguments are missing.</p>\n</blockquote>\n<p>2 [ Example: the declaration</p>\n<pre><code>void point(int = 3, int = 4);\n</code></pre>\n<p>declares a function that can be called with zero, one, or two arguments of type int. It can be called in any of these ways:</p>\n<pre><code>point(1,2); point(1); point();\n</code></pre>\n<p>The last two calls are equivalent to <code>point(1,4) and point(3,4)</code>, respectively. \u2014end example ]</p>\n<p>3 A default argument shall be specified only in the <strong>parameter-declaration-clause</strong> of a function declaration or in a template-parameter (14.1); in the latter case, the <strong>initializer-clause</strong> shall be an assignment-expression. A default argument shall not be specified for a parameter pack. If it is specified in a <strong>parameter-declarationclause</strong>, it shall not occur within a <strong>declarator</strong> or <strong>abstract-declarator</strong> of a p*<em>arameter-declaration</em>*.</p>\n", "LastActivityDate": "2013-09-11T12:21:50.043", "CommentCount": "0", "CreationDate": "2013-09-11T12:21:50.043", "ParentId": "18740917", "Score": "1", "OwnerUserId": "951757"}, "18741255": {"Id": "18741255", "PostTypeId": "2", "Body": "<p>Yes, those function calls are possible and are known as default arguments. The default arguments should be used in the last, the inverse of that ie., </p>\n<p>int mathscalc (int a = 5, int b) </p>\n<p>is not possible.</p>\n<p>If the corresponding function call is made as, </p>\n<p>mathscalc (5,6); 'b' will take value 6, </p>\n<p>else if it is made as  mathscalc (5); 'b' will take the default value 5.</p>\n", "LastEditorUserId": "2356990", "LastActivityDate": "2015-12-21T08:25:38.047", "Score": "0", "CreationDate": "2013-09-11T12:28:05.010", "ParentId": "18740917", "CommentCount": "0", "OwnerUserId": "2356990", "LastEditDate": "2015-12-21T08:25:38.047"}});