post_cb({"bq_ids": {"n4140": {"so_46046924_46046975_1": {"length": 7, "quality": 0.6363636363636364, "section_id": 763}}, "n3337": {"so_46046924_46046975_1": {"length": 7, "quality": 0.6363636363636364, "section_id": 750}}, "n4659": {"so_46046924_46046975_1": {"length": 8, "quality": 0.7272727272727273, "section_id": 823}}}, "46046975": {"Id": "46046975", "PostTypeId": "2", "Body": "<p>The <code>m_equities[symbol]</code> creates an elment using the default constructor, if there is no elment in the map for that key. So using <code>operator[]</code> requires the default constructor to exists.</p>\n<p>You should use <code>insert</code> and <code>std::make_pair</code> instead.</p>\n<p><a href=\"http://en.cppreference.com/w/cpp/container/map/operator_at\" rel=\"nofollow noreferrer\">std::map operator_at</a>: </p>\n<blockquote>\n<p id=\"so_46046924_46046975_0\">1: Inserts <code>value_type(key, T())</code> if the key does not exist. [...] <code>mapped_type</code> must meet the requirements of <code>CopyConstructible</code> and <code>DefaultConstructible</code>. If an insertion is performed, the mapped value is value-initialized (default-constructed for class types, zero-initialized otherwise) and a reference to it is returned.</p>\n</blockquote>\n<p>and </p>\n<blockquote>\n<p id=\"so_46046924_46046975_1\">[...]<strong>Return value:</strong> Reference to the mapped value of the new element if no element with key key existed.` </p>\n</blockquote>\n", "LastEditorUserId": "1960455", "LastActivityDate": "2017-09-05T04:38:19.730", "Score": "4", "CreationDate": "2017-09-05T04:21:06.683", "ParentId": "46046924", "CommentCount": "2", "LastEditDate": "2017-09-05T04:38:19.730", "OwnerUserId": "1960455"}, "46046924": {"ViewCount": "126", "Body": "<p>I am creating a C++ 11 program which compiles but fails to link.  I have traced the error (shown at the bottom of this post) to a single line of code:</p>\n<pre><code>            m_equities[symbol] = temp;\n</code></pre>\n<p>where m_equities is defined as:</p>\n<pre><code>    map&lt;string, EquityInDB&gt; m_equities;\n</code></pre>\n<p>and temp is an instance of EquityInDB.</p>\n<p>Can someone explain why this one line of code is causing the linker error below?   It looks like that one line is trying to create an instance of my EquityInDB class using the default constructor (there is none).  My EquityInDB class requires parameters in the constructor.</p>\n<p>(Note: Commenting out the one assignment line above lets everything compile)</p>\n<blockquote>\n<p id=\"so_46046924_46046924_0\">g++  -o MetaStockDB main.o date.o tradingday.o equity.o metastockdb.o\n  msfileio.o equityindb.o bytearray.o     metastockdb.o: In function\n  <code>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;,\n  std::allocator&lt;char&gt; &gt; const,\n  EquityInDB&gt;::pair&lt;std::__cxx11::basic_string&lt;char,\n  std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;,\n  0ul&gt;(std::tuple&lt;std::__cxx11::basic_string&lt;char,\n  std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;&amp;,\n  std::tuple&lt;&gt;&amp;, std::_Index_tuple&lt;0ul&gt;, std::_Index_tuple&lt;&gt;)':\n  Makefile:254: recipe for target 'MetaStockDB' failed\n  /usr/include/c++/6.3.1/tuple:1586: undefined reference to\n  </code>EquityInDB::EquityInDB()'</p>\n</blockquote>\n", "AcceptedAnswerId": "46046975", "Title": "c++ undefined reference to default constructor", "CreationDate": "2017-09-05T04:13:56.247", "Id": "46046924", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2017-09-05T04:38:19.730", "Score": "0", "OwnerUserId": "659503", "Tags": "<c++><linker-errors><default-constructor>", "AnswerCount": "1"}});