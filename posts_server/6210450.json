post_cb({"bq_ids": {"n4140": {"so_6210450_6210467_0": {"length": 38, "quality": 0.9743589743589743, "section_id": 3257}}, "n3337": {"so_6210450_6210467_0": {"length": 38, "quality": 0.9743589743589743, "section_id": 3129}}, "n4659": {"so_6210450_6210467_0": {"length": 38, "quality": 0.9743589743589743, "section_id": 4015}}}, "6210467": {"Id": "6210467", "PostTypeId": "2", "Body": "<p>You have to specify the default values for the arguments only in the declaration but not in the definition.</p>\n<pre><code> class pBase : public sf::Thread {\n     // ....\n     void setColor( int _color = -1 );\n     // ....\n } ;\n\n void pBase:: setColor( int _color )\n {\n     // ....\n }\n</code></pre>\n<hr>\n<p>The default value for an member function's argument can either go in declaration or definition but not both. Quote from ISO/IEC 14882:2003(E) 8.3.6</p>\n<blockquote>\n<p id=\"so_6210450_6210467_0\">6)       Except for member functions of class templates, the default arguments in a member function definition that appears outside of the class definition are added to the set of default arguments provided by the member function declaration in the class definition. Default arguments for a member function of a class template shall be specified on the initial declaration of the member function within the class template. [Example:</p>\n</blockquote>\n<pre><code>class C { \n    void f(int i = 3);\n    void g(int i, int j = 99);\n};\n\nvoid C::f(int i = 3)   // error: default argument already\n{ }                    // specified in class scope\n\nvoid C::g(int i = 88, int j)    // in this translation unit,\n{ }                             // C::g can be called with no argument\n</code></pre>\n<blockquote>\n<p id=\"so_6210450_6210467_1\">\u2014end example]</p>\n</blockquote>\n<p>According to the standard provided example, it should actually work the way you did. Unless you have done <a href=\"http://ideone.com/fDERk\">like this</a>, you shouldn't actually get the error. I amn't sure why it actually worked in your case with my solution. Probably something visual studio related, I guess.</p>\n</hr>", "LastEditorUserId": "528724", "LastActivityDate": "2011-06-02T05:39:53.853", "Score": "87", "CreationDate": "2011-06-02T04:41:44.800", "ParentId": "6210450", "CommentCount": "1", "OwnerUserId": "528724", "LastEditDate": "2011-06-02T05:39:53.853"}, "17126061": {"Id": "17126061", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_6210450_17126061_0\">Alright! It worked (a bit weird though because it was working fine when i had the whole code in one file).</p>\n</blockquote>\n<p>I also had this problem when I started moving code around into multiple files. The real problem was that I forgot to write</p>\n<pre><code>#pragma once\n</code></pre>\n<p>at the top of the header file, and so it was redefining the functions multiple times (each time the header file was being invoked from a parent file), this caused the <strong>redefinition of default parameter</strong> error.</p>\n", "LastActivityDate": "2013-06-15T17:17:39.017", "CommentCount": "2", "CreationDate": "2013-06-15T17:17:39.017", "ParentId": "6210450", "Score": "6", "OwnerUserId": "2163727"}, "6210450": {"ViewCount": "32238", "Body": "<p>I'm having trouble with this piece of code , after i took this class from the main.cpp file and splitted it in to .h and .cpp the compiler started complaining about the default parameters i was using in a void.</p>\n<pre class=\"lang-c prettyprint-override\"><code>/* PBASE.H */\n    class pBase : public sf::Thread {\nprivate:\n    bool Running;\n\npublic:\n    sf::Mutex Mutex;\n    WORD OriginalColor;\n    pBase(){\n        Launch();\n        Running = true;\n        OriginalColor = 0x7;\n    }\n    void progressBar(int , int);\n    bool key_pressed();\n    void setColor( int );\n    void setTitle( LPCWSTR );\n    bool test_connection(){\n        if(Running == false){\n            return 0;\n        }\n        else{\n            return 1;\n        }\n    return 0;\n    }\n    void Stop(){\n        Running = false;\n        if(Running == false) Wait();\n    }\n};\n</code></pre>\n<hr>\n<pre class=\"lang-c prettyprint-override\"><code>    /* PBASE.CPP */\n\n    // ... other stuff above\n\n    void pBase::setColor( int _color = -1){\n        if(_color == -1){\n             SetConsoleTextAttribute( GetStdHandle( STD_OUTPUT_HANDLE ),FOREGROUND_INTENSITY | OriginalColor);\n             return;\n        }\n        SetConsoleTextAttribute( GetStdHandle( STD_OUTPUT_HANDLE ),FOREGROUND_INTENSITY | _color);\n\n}\n</code></pre>\n<p>And the error , taken from VC2010</p>\n<blockquote>\n<p id=\"so_6210450_6210450_0\">Error 4   error C2572: 'pBase::setColor' : redefinition of default parameter : parameter 1</p>\n</blockquote>\n</hr>", "Title": "The compiler is complaining about my default parameters?", "CreationDate": "2011-06-02T04:39:44.567", "LastActivityDate": "2013-06-15T17:17:39.017", "CommentCount": "0", "FavoriteCount": "5", "PostTypeId": "1", "LastEditDate": "2011-11-09T18:09:01.100", "LastEditorUserId": "560648", "Id": "6210450", "Score": "27", "OwnerUserId": "744120", "Tags": "<c++><class><optional-parameters>", "AnswerCount": "2"}});