post_cb({"31523242": {"Id": "31523242", "PostTypeId": "2", "Body": "<p>From the perspective of C++ languange, it is not defined.</p>\n<p>In practice, compilers usually treat references in absolutely the same way as pointers, even though they have many different properties in C++. It means that the address of the referenced variable is physically stored. Perhaps the only assumption that the compiler can make is that the reference is not null. Despite that, I think that you cannot access the address stored in the reference variable in C++ code without taking a pointer first.</p>\n<p>Note that the compiler can often optimize reference variable so that you cannot even say where it is in the assembly. And it can do the same to pointer variables.</p>\n", "LastActivityDate": "2015-07-20T17:58:48.057", "Score": "4", "CreationDate": "2015-07-20T17:58:48.057", "ParentId": "31521116", "CommentCount": "6", "OwnerUserId": "556899"}, "bq_ids": {"n4140": {"so_31521116_31521236_0": {"length": 5, "quality": 1.0, "section_id": 3221}}, "n3337": {"so_31521116_31521236_0": {"length": 5, "quality": 1.0, "section_id": 3095}}, "n4659": {"so_31521116_31521236_0": {"length": 5, "quality": 1.0, "section_id": 3978}}}, "31521236": {"Id": "31521236", "PostTypeId": "2", "Body": "<p>From the C++11 standard 8.3.2.4 [dcl.ref]</p>\n<blockquote>\n<p id=\"so_31521116_31521236_0\">It is unspecified whether or not a reference requires storage</p>\n</blockquote>\n<p>So it may or may not need any storage.</p>\n", "LastActivityDate": "2015-07-20T16:06:58.693", "Score": "27", "CreationDate": "2015-07-20T16:06:58.693", "ParentId": "31521116", "CommentCount": "0", "OwnerUserId": "4342498"}, "31521209": {"Id": "31521209", "PostTypeId": "2", "Body": "<p>Let me quote <a href=\"http://en.cppreference.com/w/cpp/language/reference\" rel=\"noreferrer\">http://en.cppreference.com/w/cpp/language/reference</a>:</p>\n<blockquote>\n<p id=\"so_31521116_31521209_0\">References are not objects; they do not necessarily occupy storage,\n  although the compiler may allocate storage if it is necessary to\n  implement the desired semantics (e.g. a non-static data member of\n  reference type usually increases the size of the class by the amount\n  necessary to store a memory address)</p>\n</blockquote>\n", "LastActivityDate": "2015-07-20T16:05:46.173", "Score": "13", "CreationDate": "2015-07-20T16:05:46.173", "ParentId": "31521116", "CommentCount": "1", "OwnerUserId": "184968"}, "31521116": {"ViewCount": "711", "Body": "<pre><code>int x = 10;\nint&amp; y = x;\n</code></pre>\n<p>For this, <code>x</code> is allocated as 2/4/8 bytes on the stack and <em>00...1010</em> is written to those bytes. What would the memory layout and its contents look like for <code>y</code>?   </p>\n", "AcceptedAnswerId": "31521236", "Title": "How are references encoded in C++?", "CreationDate": "2015-07-20T15:59:54.837", "LastActivityDate": "2015-07-20T17:58:48.057", "CommentCount": "8", "LastEditDate": "2015-07-20T16:04:04.183", "PostTypeId": "1", "Tags": "<c++><types><reference>", "Id": "31521116", "AnswerCount": "3", "Score": "13", "OwnerUserId": "3670482", "ClosedDate": "2015-07-20T21:18:48.093", "LastEditorUserId": "3670482"}});