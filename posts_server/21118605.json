post_cb({"21118605": {"CommentCount": "8", "AcceptedAnswerId": "21118927", "CreationDate": "2014-01-14T16:27:09.103", "LastActivityDate": "2014-01-14T16:51:18.057", "PostTypeId": "1", "ViewCount": "238", "FavoriteCount": "1", "Title": "Is GCC 4.4.1 buggy by not accepting an injected-class-name in a ctor-initializer?", "Id": "21118605", "Score": "7", "Body": "<p>GCC 4.4.1 is refusing to find my <em>injected-class-name</em> within a <em>ctor-initializer</em>:</p>\n<pre><code>template &lt;typename T&gt;\nstruct Base\n{\n    Base(int x) {}\n};\n\nstruct Derived : Base&lt;int&gt;\n{\n    Derived() : Base(2) {}\n};\n\nint main()\n{\n    Derived d;\n}\n</code></pre>\n<blockquote id=\"so_21118605_21118605_0\">\n<pre><code>test2.cpp: In constructor \"Derived::Derived()\":\ntest2.cpp:9: error: class \"Derived\" does not have any field named \"Base\"\ntest2.cpp:9: error: no matching function for call to \"Base&lt;int&gt;::Base()\"\ntest2.cpp:4: note: candidates are: Base&lt;T&gt;::Base(int) [with T = int]\ntest2.cpp:3: note:                 Base&lt;int&gt;::Base(const Base&lt;int&gt;&amp;)\n</code></pre>\n</blockquote>\n<p>GCC 4.8 <a href=\"http://coliru.stacked-crooked.com/a/dc45ff4f1629604f\" rel=\"noreferrer\">compiles it just fine</a>, though.</p>\n<p>I'm sure this is supposed to work, and I can't find any standard wording that disagrees with me.</p>\n<p><strong>This a GCC 4.4.1 bug, right?</strong></p>\n<p><sup>(I did scour GCC Bugzilla but nothing relevant popped out at me.)</sup></p>\n", "Tags": "<c++><gcc>", "OwnerUserId": "560648", "AnswerCount": "2"}, "21118927": {"ParentId": "21118605", "PostTypeId": "2", "CommentCount": "0", "Body": "<p><strong>Yeah, it <em>is</em> a bug.</strong></p>\n<p>I can reproduce it even more simply without the <em>ctor-initialiser</em>:</p>\n<pre><code>template &lt;typename T&gt;\nstruct Base\n{\n};\n\nstruct Derived : Base&lt;int&gt;\n{\n    Base* ptr;\n};\n\nint main()\n{\n    Derived d;\n}\n\n/**\n * in GCC 4.4.1:\n * \n * error: ISO C++ forbids declaration of \"Base\" with no type\n */\n</code></pre>\n<p>And:</p>\n<blockquote>\n<p id=\"so_21118605_21118927_0\"><code>[C++11: 14.6.1/4]:</code> A lookup that finds an <em>injected-class-name</em> (10.2) can result in an ambiguity in certain cases (for example, if it is found in more than one base class). If all of the injected-class-names that are found refer to specializations of the same class template, and if the name is used as a <em>template-name</em>, the reference refers to the class template itself and not a specialization thereof, and is not ambiguous. <em>[ Example:</em></p>\n<pre><code>template &lt;class T&gt; struct Base { };\ntemplate &lt;class T&gt; struct Derived: Base&lt;int&gt;, Base&lt;char&gt; {\n   typename Derived::Base b;            // error: ambiguous\n   typename Derived::Base&lt;double&gt; d;    // OK\n};\n</code></pre>\n<p id=\"so_21118605_21118927_1\"><em>\u2014end example ]</em></p>\n</blockquote>\n<p>Notice that the near-equivalent of my unambiguous usage is \"OK\". Alright, so <code>Derived</code> is a class template here and not in my example, so it's not <em>quite</em> the same example. But I'm satisfied now that the entirety of 14.6.1 makes my code legal.</p>\n<p>Turns out it had been raised as <a href=\"http://gcc.gnu.org/bugzilla/show_bug.cgi?id=45515\" rel=\"nofollow noreferrer\">GCC bug 45515</a><sup>\u2020</sup>, but since it had been fixed on <em>head</em> at the time there are very few details on it.</p>\n<p><sup><sup>\u2020</sup> Thanks <a href=\"https://stackoverflow.com/users/1171191/bobtfish\">BoBTFish</a>!</sup></p>\n", "OwnerUserId": "560648", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T12:09:14.080", "Id": "21118927", "Score": "4", "CreationDate": "2014-01-14T16:42:04.770", "LastActivityDate": "2014-01-14T16:51:18.057"}, "21118645": {"ParentId": "21118605", "PostTypeId": "2", "CommentCount": "15", "Body": "<p>Use <code>: Base&lt;int&gt;(2) {}</code></p>\n<p><em>(edit: sorry, I just took away the CRTP element as it's not needed to reproduce)</em></p>\n", "OwnerUserId": "2382136", "LastEditorUserId": "560648", "LastEditDate": "2014-01-14T16:30:48.720", "Id": "21118645", "Score": "0", "CreationDate": "2014-01-14T16:29:00.600", "LastActivityDate": "2014-01-14T16:30:48.720"}, "bq_ids": {"n4140": {"so_21118605_21118927_0": {"section_id": 182, "quality": 0.8918918918918919, "length": 33}}, "n3337": {"so_21118605_21118927_0": {"section_id": 176, "quality": 0.8918918918918919, "length": 33}}, "n4659": {"so_21118605_21118927_0": {"section_id": 187, "quality": 0.8918918918918919, "length": 33}}}});