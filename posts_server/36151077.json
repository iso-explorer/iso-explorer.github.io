post_cb({"bq_ids": {"n4140": {"so_36151077_36151147_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 2314}}, "n3337": {"so_36151077_36151147_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 2302}}, "n4659": {"so_36151077_36151147_0": {"length": 5, "quality": 0.8333333333333334, "section_id": 2588}}}, "36151077": {"ViewCount": "314", "Body": "<p>My below code is working properly but still \"cppcheck\" is giving warning,</p>\n<pre><code>Either the condition 'mem_limit_str!=0' is redundant or there is possible null pointer dereference: mem_limit_str.\n</code></pre>\n<p>Below is the code,</p>\n<pre><code> if (mem_limit_str!= NULL) //CPPCHECK error\n                free(mem_limit_str);\n</code></pre>\n<p>Can anyone help me to resolve this?</p>\n", "AcceptedAnswerId": "36151118", "Title": "cppcheck : possible null point dereference", "CreationDate": "2016-03-22T09:51:41.230", "Id": "36151077", "CommentCount": "2", "LastEditDate": "2016-03-22T10:06:54.203", "PostTypeId": "1", "LastEditorUserId": "5399734", "LastActivityDate": "2016-03-22T10:09:32.420", "Score": "2", "OwnerUserId": "4336150", "Tags": "<c++><cppcheck>", "AnswerCount": "2"}, "36151118": {"Id": "36151118", "PostTypeId": "2", "Body": "<p>You don't need to check for a null pointer before <code>free</code>ing. You can simply say:</p>\n<pre><code>free(mem_limit_str);  // no if condition\n</code></pre>\n<p>This warning just tells that the <code>if</code> condition is redundant.</p>\n<p>From <a href=\"http://www.open-std.org/JTC1/SC22/wg14/www/docs/n1124.pdf\" rel=\"nofollow\">n1124</a> draft</p>\n<blockquote>\n<p id=\"so_36151077_36151118_0\"><strong>7.20.3.2 The free function</strong></p>\n<p id=\"so_36151077_36151118_1\"><strong>Synopsis</strong></p>\n<pre><code>#include &lt;stdlib.h&gt; \nvoid free(void *ptr); \n</code></pre>\n<p id=\"so_36151077_36151118_2\"><strong>Description</strong></p>\n<p id=\"so_36151077_36151118_3\">The free function causes the space pointed to by ptr to be\n  deallocated, that is, made available for further allocation. If ptr is\n  a null pointer, no action occurs. [...]</p>\n</blockquote>\n", "LastEditorUserId": "2659313", "LastActivityDate": "2016-03-22T09:59:08.973", "Score": "5", "CreationDate": "2016-03-22T09:53:36.157", "ParentId": "36151077", "CommentCount": "4", "OwnerUserId": "2659313", "LastEditDate": "2016-03-22T09:59:08.973"}, "36151147": {"Id": "36151147", "PostTypeId": "2", "Body": "<p><a href=\"http://en.cppreference.com/w/cpp/memory/c/free\" rel=\"nofollow\"><code>std::free</code></a> could be used with null pointer well. The check is redundant.</p>\n<blockquote>\n<p id=\"so_36151077_36151147_0\">If ptr is a null pointer, the function does nothing. </p>\n</blockquote>\n<p>BTW: It's true for <code>delete</code> and <code>delete[]</code> too.</p>\n", "LastEditorUserId": "3309790", "LastActivityDate": "2016-03-22T10:09:32.420", "Score": "3", "CreationDate": "2016-03-22T09:54:39.870", "ParentId": "36151077", "CommentCount": "2", "OwnerUserId": "3309790", "LastEditDate": "2016-03-22T10:09:32.420"}});