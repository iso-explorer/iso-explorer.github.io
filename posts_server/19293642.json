post_cb({"bq_ids": {"n4140": {"so_19293642_19293663_0": {"length": 9, "quality": 0.9, "section_id": 7149}}, "n3337": {"so_19293642_19293663_0": {"length": 9, "quality": 0.9, "section_id": 6893}}}, "19293642": {"ViewCount": "887", "Body": "<p>This question is out of curiosity; while writing a main for a test program, I returned nothing from <code>main</code>(no <code>return</code> statement in <code>main</code>). But I declared main as <code>int main()</code>. And it compiled successfully.</p>\n<p>Where as if there is any other function written with a <code>int</code> return type and actually not returning an <code>int</code>,I would get an error </p>\n<blockquote>\n<p id=\"so_19293642_19293642_0\">'Function name' must return value</p>\n</blockquote>\n<p>So why compiler doesn't complain the same for <code>main</code> function?</p>\n", "AcceptedAnswerId": "19293663", "Title": "C++ why main works with no return value", "CreationDate": "2013-10-10T10:45:50.187", "Id": "19293642", "CommentCount": "2", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2013-10-10T11:34:05.953", "LastEditorUserId": "1155650", "LastActivityDate": "2013-10-10T11:34:05.953", "Score": "4", "OwnerUserId": "1063194", "Tags": "<c++>", "AnswerCount": "2"}, "19293855": {"PostTypeId": "2", "Body": "<p>In C++, <code>int main()</code> can be left without a return value at which point it defaults to returning 0. </p>\n<blockquote>\n<p id=\"so_19293642_19293855_0\">5.1.2.2.3 Program termination</p>\n<p id=\"so_19293642_19293855_1\">1 If the return type of the main function is a type compatible with\n  int, a return from the initial call to the main function is equivalent\n  to calling the exit function with the value returned by the main\n  function as its argument;11) reaching the } that terminates the main\n  function returns a value of 0. If the return type is not compatible\n  with int, the termination status returned to the host environment is\n  unspecified.</p>\n</blockquote>\n<p>But you should be better of using  <code>EXIT_SUCCESS</code> or <code>EXIT_FAILURE</code> for return from <code>main()</code>.</p>\n<blockquote>\n<p id=\"so_19293642_19293855_2\">Even though you're returning an int, some OSes (Windows) truncate the\n  returned value to a single byte (0-255).       Unix does the same, as do\n  most other operating systems probably.Returning anything other than\n  EXIT_SUCCESS or EXIT_FAILURE is asking for trouble</p>\n</blockquote>\n<p>A Quote from <a href=\"http://www.gnu.org/software/libc/manual/html_mono/libc.html#Exit-Status\" rel=\"nofollow\">GNU Library</a></p>\n<blockquote>\n<p id=\"so_19293642_19293855_3\">Some non-POSIX systems use different conventions for exit status\n  values. For greater portability, you can use the macros EXIT_SUCCESS\n  and EXIT_FAILURE for the conventional status value for success and\n  failure, respectively. They are declared in the file stdlib.h.</p>\n<p id=\"so_19293642_19293855_4\">\u2014 Macro: int EXIT_SUCCESS This macro can be used with the exit\n  function to indicate successful program completion.</p>\n<p id=\"so_19293642_19293855_5\">On POSIX systems, the value of this macro is 0. On other systems, the\n  value might be some other (possibly non-constant) integer expression.</p>\n<p id=\"so_19293642_19293855_6\">\u2014 Macro: int EXIT_FAILURE This macro can be used with the exit\n  function to indicate unsuccessful program completion in a general\n  sense.</p>\n<p id=\"so_19293642_19293855_7\">On POSIX systems, the value of this macro is 1. On other systems, the\n  value might be some other (possibly non-constant) integer expression.\n  Other nonzero status values also indicate failures. Certain programs\n  use different nonzero status values to indicate particular kinds of\n  \"non-success\". For example, diff uses status value 1 to mean that the\n  files are different, and 2 or more to mean that there was difficulty\n  in opening the files.</p>\n</blockquote>\n", "LastActivityDate": "2013-10-10T11:30:20.547", "LastEditorUserId": "1155650", "Id": "19293855", "CommentCount": "7", "CreationDate": "2013-10-10T10:55:14.593", "ParentId": "19293642", "Score": "1", "OwnerUserId": "1155650", "LastEditDate": "2013-10-10T11:30:20.547"}, "19293663": {"PostTypeId": "2", "Body": "<p>Normally it is not allowed for the control flow to reach the end of a non-void function without returning something. The <code>main</code> function is handled differently, as specified in the standard.</p>\n<p>From <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2960.pdf\" rel=\"noreferrer\">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2960.pdf</a>:</p>\n<p><strong>\u00a7 3.6.1/5</strong></p>\n<blockquote>\n<p id=\"so_19293642_19293663_0\">If control reaches the end of main without encountering a return\n  statement, the effect is that of executing return 0;</p>\n</blockquote>\n<p>As for the rationale, I'm not sure, honestly. If someone knows, please add it to my answer or as a comment.</p>\n", "LastActivityDate": "2013-10-10T10:46:38.750", "Id": "19293663", "CommentCount": "6", "CreationDate": "2013-10-10T10:46:38.750", "ParentId": "19293642", "Score": "7", "OwnerUserId": "140367"}});