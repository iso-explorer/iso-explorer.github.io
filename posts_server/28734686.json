post_cb({"28734686": {"CommentCount": "0", "ViewCount": "351", "OwnerDisplayName": "user2953119", "CreationDate": "2015-02-26T04:51:03.343", "LastActivityDate": "2015-02-26T08:31:41.497", "PostTypeId": "1", "AcceptedAnswerId": "28736924", "Title": "Implicit instantiation of specialization", "Id": "28734686", "Score": "1", "Body": "<p>I can't understand why the standard first defines template instantiation <strong><em>for templates</em></strong> as follows <code>N3797::14.7/4 [temp.spec]</code>:</p>\n<blockquote>\n<p id=\"so_28734686_28734686_0\">The act of instantiating a function, a class, a member of a class\n  template or a member template is referred to as <em>template</em>\n<em>instantiation</em>.</p>\n</blockquote>\n<p>But further everywhere it uses the <strong><em>instatiation of the specialization</em></strong>, like the following <code>N3797::14.7/4 [temp.spec]</code>:</p>\n<blockquote>\n<p id=\"so_28734686_28734686_1\">An instantiated <em>template specialization</em> can be either implicitly\n  instantiated (14.7.1) for a given argument list or be explicitly\n  instantiated (14.7.2).</p>\n</blockquote>\n<p>I don't understand that. A template itself is a different concept than the template specilization, which could be an <code>explicit specialization</code> or a <code>partial specialization</code>. For instance <code>N3797::14.5.5/1 [temp.class.spec]</code>:</p>\n<blockquote>\n<p id=\"so_28734686_28734686_2\">The primary template shall be declared before any specializations of\n  that template.</p>\n</blockquote>\n<p>My question is about why the Standard first declare the <code>instatiation</code> concept for templates, but further it applies that concept for template specializations?</p>\n<p>Moreover <code>N3797::14.7/4 [temp.spec]</code> defines the specialization concept as follows:</p>\n<blockquote>\n<p id=\"so_28734686_28734686_3\">A specialization is a class, function, or class member that is either\n  instantiated or explicitly specialized (14.7.3).</p>\n</blockquote>\n<p>So, the partial specialization is not a specialization, is it? I'm totally confused by those concepts. Couldn't you clarify it a bit?</p>\n", "Tags": "<c++><templates><specialization>", "AnswerCount": "1"}, "28736924": {"ParentId": "28734686", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>This is a similar question <a href=\"https://stackoverflow.com/questions/28469604/template-specialization-and-instantiation/28470316#28470316\">here</a>. \nAnd now,I try to answer this question again.</p>\n<p><strong>A template is a type of infinite, so we can not instantiate a template, we can only be instantiated template specialization.</strong></p>\n<ul>\n<li><p><strong>Implicitly instantiated</strong>, the current compilation unit requires the use of the template code, the compiler automatically instantiated template specialization.</p></li>\n<li><p><strong>Explicitly instantiated</strong>, we manually enter the code causes the compiler to instantiate a template specialization.</p></li>\n<li><strong>explicit specialization</strong>, given all the template parameters, and gives a non-generic code. Once the template type match, then instantiate this specialization.</li>\n<li><strong>Partial specialization</strong>, some parameters are given template and gives a non-generic code. Once the template type match, then instantiate this specialization.</li>\n</ul>\n", "OwnerUserId": "2593814", "LastEditorUserId": "-1", "LastEditDate": "2017-05-23T11:50:59.487", "Id": "28736924", "Score": "0", "CreationDate": "2015-02-26T07:43:08.297", "LastActivityDate": "2015-02-26T08:31:41.497"}, "bq_ids": {"n4140": {"so_28734686_28734686_1": {"section_id": 230, "quality": 0.8571428571428571, "length": 12}, "so_28734686_28734686_2": {"section_id": 135, "quality": 0.8571428571428571, "length": 6}, "so_28734686_28734686_0": {"section_id": 227, "quality": 0.8461538461538461, "length": 11}, "so_28734686_28734686_3": {"section_id": 230, "quality": 0.9, "length": 9}}, "n3337": {"so_28734686_28734686_1": {"section_id": 223, "quality": 0.8571428571428571, "length": 12}, "so_28734686_28734686_2": {"section_id": 129, "quality": 0.8571428571428571, "length": 6}, "so_28734686_28734686_0": {"section_id": 220, "quality": 0.8461538461538461, "length": 11}, "so_28734686_28734686_3": {"section_id": 223, "quality": 0.9, "length": 9}}, "n4659": {"so_28734686_28734686_1": {"section_id": 238, "quality": 0.8571428571428571, "length": 12}, "so_28734686_28734686_2": {"section_id": 139, "quality": 0.8571428571428571, "length": 6}, "so_28734686_28734686_0": {"section_id": 235, "quality": 0.8461538461538461, "length": 11}, "so_28734686_28734686_3": {"section_id": 238, "quality": 0.9, "length": 9}}}});