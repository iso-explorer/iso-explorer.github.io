post_cb({"24459211": {"ParentId": "24459043", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Looks like Visual Studio is wrong.</p>\n<p>This is what I found in the draft standard:</p>\n<blockquote>\n<p id=\"so_24459043_24459211_0\">3.3.2/10 </p>\n<p id=\"so_24459043_24459211_1\">Function declarations at block scope and variable declarations with the <code>extern</code> specifier at block scope refer to declarations that are members of an enclosing namespace, but they do not introduce new names into that scope.</p>\n</blockquote>\n<p>Having said that, I would move the <code>extern</code> declaration out of the function and into the namespace to see if that makes any difference.</p>\n<pre><code>namespace asd\n{\n    extern int i;\n    class B\n    {\n    public:\n        void ss()\n        {\n            std::cout &lt;&lt; i;\n        }\n    };\n}\n</code></pre>\n", "OwnerUserId": "434551", "LastEditorUserId": "434551", "LastEditDate": "2014-06-27T19:14:36.413", "Id": "24459211", "Score": "2", "CreationDate": "2014-06-27T19:09:06.497", "LastActivityDate": "2014-06-27T19:14:36.413"}, "24459259": {"ParentId": "24459043", "CommentCount": "0", "Body": "<p>It is legal to declare an <code>extern</code> or a <code>static</code> variable inside any function. Your fix of the <code>b.cpp</code> where you put namespace around the definition of that <code>extern</code> is the right fix, too.</p>\n<p>Visual Studio C++ 2013 complains about a name outside the <code>asd</code> namespace (check the <a href=\"http://demangler.com/\" rel=\"nofollow\">demangler</a> to see what these extra characters around the name <code>i</code> represent). This is incorrect, because the declaration places <code>i</code> into the namespace <code>asd</code>.</p>\n<p>C++ standard illustrates this in section 3.5.7. It is using an <code>extern</code> function as an example, but it illustrates the rule of placement of the name in the enclosing namespace.</p>\n<pre><code>namespace X {\n    void p() {\n        q(); // error: q not yet declared\n        extern void q(); // q is a member of namespace X\n    }\n    void middle() {\n        q(); // error: q not yet declared\n    }\n    void q() { /* ... */ } // definition of X::q\n}\nvoid q() { /* ... */ } // some other, unrelated q\n</code></pre>\n<p>The comments on lines 4, 9, and 11 show that the name declared with <code>extern</code> inside the member function needs to be placed in the enclosing namespace. It is a good, self-contained test case illustrating a bug in Microsoft's compiler.</p>\n", "OwnerUserId": "335858", "PostTypeId": "2", "Id": "24459259", "Score": "3", "CreationDate": "2014-06-27T19:13:48.750", "LastActivityDate": "2014-06-27T19:13:48.750"}, "bq_ids": {"n4140": {"so_24459043_24459211_1": {"section_id": 7059, "quality": 1.0, "length": 22}}, "n3337": {"so_24459043_24459211_1": {"section_id": 6803, "quality": 1.0, "length": 22}}, "n4659": {"so_24459043_24459211_1": {"section_id": 8556, "quality": 1.0, "length": 22}}}, "24459043": {"CommentCount": "5", "ViewCount": "1685", "PostTypeId": "1", "LastEditorUserId": "2815738", "CreationDate": "2014-06-27T18:55:38.807", "LastActivityDate": "2014-06-30T08:04:04.340", "Title": "Extern in class function", "AcceptedAnswerId": "24459259", "LastEditDate": "2014-06-30T08:04:04.340", "Id": "24459043", "Score": "5", "Body": "<p>My simple code looks like:</p>\n<p>a.cpp:</p>\n<pre><code>#include &lt;iostream&gt;\n\nnamespace asd\n{\n    class B\n    {\n    public:\n        void ss()\n        {\n            extern int i;\n            std::cout &lt;&lt; i;\n        }\n    };\n}\n\nint main()\n{\n    asd::B e;\n    e.ss();\n}\n</code></pre>\n<p>b.cpp:</p>\n<pre><code>int i = 4;\n</code></pre>\n<p>Is this code good with standard or no ?\nVisual Studio compiles it without errors but the Intel C++ compiler says:\nunresolved external symbol \"int asd::i\" (?i@asd@@3HA)</p>\n<p>For more fun if i change b.cpp to:</p>\n<pre><code>namespace asd\n{\n    int i = 4;\n}\n</code></pre>\n<p>Then Visual Studio C++ 2013 says:\nunresolved external symbol \"int i\" (?i@@3HA)</p>\n<p>But the Intel C++ compiler says ok :) \nWhat is the proper version of this code If I want to have this extern in class member function (is it legal ?) ?</p>\n<p>Edit:\nThe best results are, when we change b.cpp to:</p>\n<pre><code>namespace asd\n{\n    int i = 4;\n}\nint i = 5;\n</code></pre>\n<p>Visual c++ prints 5, intel compiler 4 :)</p>\n", "Tags": "<c++><visual-studio-2013><icc>", "OwnerUserId": "2815738", "AnswerCount": "2"}});