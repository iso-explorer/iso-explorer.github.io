post_cb({"bq_ids": {"n4140": {"so_17376399_17376421_1": {"length": 28, "quality": 0.9655172413793104, "section_id": 7044}, "so_17376399_17376399_0": {"length": 16, "quality": 1.0, "section_id": 7047}, "so_17376399_17376421_0": {"length": 32, "quality": 0.9411764705882353, "section_id": 7044}}, "n3337": {"so_17376399_17376421_1": {"length": 28, "quality": 0.9655172413793104, "section_id": 6789}, "so_17376399_17376399_0": {"length": 16, "quality": 1.0, "section_id": 6792}, "so_17376399_17376421_0": {"length": 32, "quality": 0.9411764705882353, "section_id": 6789}}, "n4659": {"so_17376399_17376421_1": {"length": 28, "quality": 0.9655172413793104, "section_id": 8541}, "so_17376399_17376399_0": {"length": 16, "quality": 1.0, "section_id": 8544}, "so_17376399_17376421_0": {"length": 32, "quality": 0.9411764705882353, "section_id": 8541}}}, "17376421": {"Id": "17376421", "PostTypeId": "2", "Body": "<p>They are not in the same <em>single</em> declarative region. The declarative region of the inner <code>i</code> is limited to within the innermost braces.</p>\n<p>In fact <code>3.3.1/2</code> has code remarkably similar to your own:</p>\n<pre><code>int j = 24;\nint main() {\n    int i = j, j;\n    j = 42;\n}\n</code></pre>\n<p>In that, the <code>j</code> used to set <code>i</code> is the <code>24</code> one but the scope of that outer <code>j</code> stops after the <code>,</code> and restarts at the <code>}</code>. Those two <code>j</code> variables are distinct despite the fact they're in the file declarative region for the same reasons as your example: the re are <em>two</em> declarative regions.</p>\n<p>Since there is not a single declarative region, scope takes control. <code>C++11 3.3.1/1</code> states (my bold):</p>\n<blockquote>\n<p id=\"so_17376399_17376421_0\">Every name is introduced in some portion of program text called a declarative region, which is the largest part of the program in which that name is valid, that is, in which that name may be used as an unqualified name to refer to the same entity. In general, each particular name is valid only within some <strong>possibly discontiguous</strong> portion of program text called its scope.</p>\n<p id=\"so_17376399_17376421_1\">The scope of a declaration is the same as its potential scope unless the potential scope contains another declaration of the same name. In that case, the potential scope of the declaration in the inner (contained) declarative region is excluded from the scope of the declaration in the outer (containing) declarative region.</p>\n</blockquote>\n<p>It's the <code>possibly discontiguous</code> that's important here, the inner <code>i</code> (in your example) \"descopes\", or hides, the outer <code>i</code> even though the outer declarative region may enclose the inner one.</p>\n", "LastEditorUserId": "14860", "LastActivityDate": "2013-06-29T03:53:36.443", "Score": "3", "CreationDate": "2013-06-29T03:34:54.037", "ParentId": "17376399", "CommentCount": "8", "OwnerUserId": "14860", "LastEditDate": "2013-06-29T03:53:36.443"}, "17376399": {"ViewCount": "209", "Body": "<p>In C++ std 3.3.1p4:</p>\n<blockquote>\n<p id=\"so_17376399_17376399_0\">Given a set of declarations in a single declarative region, each of which specifies the same unqualified name, they shall all refer to the same entity.</p>\n</blockquote>\n<p>In the following, aren't the two <code>int</code> declarations in the same declarative region, specify the same unqualified name, and refer to two different entities?</p>\n<pre><code>int main()\n{\n    int i;\n    {\n        int i;\n    }\n}\n</code></pre>\n<p>How does the quote not apply and render this ill-formed?</p>\n<p>If the quote doesn't apply to this, what does it apply to?</p>\n<p>(Note that the declarative region of the first <code>i</code> does include the second <code>i</code> as demonstrated in the example in 3.3.1p2.)</p>\n", "Title": "C++11 3.3.1p4 - Declarations in same declarative region?", "CreationDate": "2013-06-29T03:30:53.903", "LastActivityDate": "2013-06-29T03:53:36.443", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2013-06-29T03:34:58.810", "LastEditorUserId": "485561", "Id": "17376399", "Score": "1", "OwnerUserId": "1131467", "Tags": "<c++><c++11><language-lawyer>", "AnswerCount": "1"}});