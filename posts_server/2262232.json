post_cb({"2262332": {"ParentId": "2262232", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>Edit: FredOverflow has found the right answer with a link toward Stroustrup web site.</p>\n<p>A c++ standard draft (n1905.pdf on www.open-std.org, I don't have the exact link) seems to indicate that it comes from \"C\" : \"C standard output\" =&gt; cout</p>\n<blockquote>\n<p id=\"so_2262232_2262332_0\"><em>27.3 Standard iostream objects [lib.iostream.objects]</em></p>\n<p id=\"so_2262232_2262332_1\"><strong>1-  The header &lt;iostream&gt; declares objects that associate\n  objects with the standard C streams\n  provided for by the functions declared\n  in &lt;cstdio&gt; (27.8.2).</strong></p>\n<p id=\"so_2262232_2262332_2\">[...]</p>\n<p id=\"so_2262232_2262332_3\"><em>27.3.1 Narrow stream objects [lib.narrow.stream.objects]</em></p>\n<p id=\"so_2262232_2262332_4\"><em>istream cin</em></p>\n<p id=\"so_2262232_2262332_5\"><strong>1-</strong> The object cin controls input from a stream buffer associated with\n  the object stdin, declared in\n  &lt;cstdio&gt;.</p>\n<p id=\"so_2262232_2262332_6\">[...]</p>\n</blockquote>\n", "OwnerUserId": "10016", "LastEditorUserId": "10016", "LastEditDate": "2010-02-14T19:07:05.463", "Id": "2262332", "Score": "1", "CreationDate": "2010-02-14T19:01:16.147", "LastActivityDate": "2010-02-14T19:07:05.463"}, "2262238": {"ParentId": "2262232", "PostTypeId": "2", "CommentCount": "5", "Body": "<p>I originally guessed <strong><em>console</em></strong>, and <a href=\"http://en.wikiversity.org/wiki/Introduction_to_C++#Console_in.2C_Console_out\" rel=\"noreferrer\">this link</a> confirmed it. But after seeing the <a href=\"http://www.stroustrup.com/bs_faq2.html#cout\" rel=\"noreferrer\">quote from Stroustrup</a>, it seems that's a misconception, and that the c stands for <strong>character</strong>.</p>\n<p>One thing in favor of that theory that can serve as an indicator is the fact that for each stream object (cin, cout, cerr, etc.) there is an equivalent, <strong>wide-stream</strong> one (wcin, wcout, wcerr, etc.).</p>\n", "OwnerUserId": "35501", "LastEditorUserId": "-1", "LastEditDate": "2014-01-28T10:25:08.123", "Id": "2262238", "Score": "24", "CreationDate": "2010-02-14T18:30:20.187", "LastActivityDate": "2014-01-28T10:25:08.123"}, "2262232": {"CommentCount": "3", "AcceptedAnswerId": "2262268", "PostTypeId": "1", "LastEditorUserId": "3848", "CreationDate": "2010-02-14T18:29:13.773", "LastActivityDate": "2014-01-28T10:26:26.037", "LastEditDate": "2010-02-14T18:46:14.807", "ViewCount": "9159", "FavoriteCount": "6", "Title": "What does the \"c\" mean in cout, cin, cerr and clog?", "Id": "2262232", "Score": "43", "Body": "<p>What does the \"c\" mean in the cout, cin, cerr and clog names?</p>\n<p>I would say <code>char</code> but I haven't found anything to confirm it.</p>\n", "Tags": "<c++><iostream><standard-library>", "OwnerUserId": "10016", "AnswerCount": "4"}, "2262287": {"ParentId": "2262232", "CommentCount": "2", "Body": "<p>'C' means console</p>\n", "OwnerUserId": "273006", "PostTypeId": "2", "Id": "2262287", "Score": "1", "CreationDate": "2010-02-14T18:46:59.240", "LastActivityDate": "2010-02-14T18:46:59.240"}, "2262268": {"CommentCount": "6", "CreationDate": "2010-02-14T18:42:50.060", "LastEditorUserId": "-1", "LastActivityDate": "2014-01-28T10:26:26.037", "ParentId": "2262232", "LastEditDate": "2014-01-28T10:26:26.037", "LastEditorDisplayName": "Roger Pate", "PostTypeId": "2", "Id": "2262268", "Score": "62", "Body": "<blockquote>\n<p id=\"so_2262232_2262268_0\">The \"c\" stands for \"character\" because iostreams map values to and from byte (char) representations. [<a href=\"http://www.stroustrup.com/bs_faq2.html#cout\" rel=\"noreferrer\">Bjarne Stroustrup's C++ Style and Technique FAQ</a>]</p>\n</blockquote>\n", "OwnerUserId": "252000"}, "bq_ids": {"n4140": {"so_2262232_2262332_1": {"section_id": 1919, "quality": 0.8461538461538461, "length": 11}, "so_2262232_2262332_5": {"section_id": 1923, "quality": 0.9166666666666666, "length": 11}}, "n3337": {"so_2262232_2262332_1": {"section_id": 1908, "quality": 0.8461538461538461, "length": 11}, "so_2262232_2262332_5": {"section_id": 1912, "quality": 0.9166666666666666, "length": 11}}, "n4659": {"so_2262232_2262332_1": {"section_id": 2190, "quality": 0.8461538461538461, "length": 11}, "so_2262232_2262332_5": {"section_id": 2194, "quality": 0.9166666666666666, "length": 11}}}});