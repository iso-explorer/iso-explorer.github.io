post_cb({"9069333": {"Id": "9069333", "PostTypeId": "2", "LastEditDate": "2012-01-30T19:16:51.427", "CommentCount": "1", "LastEditorUserId": "116908", "LastActivityDate": "2012-01-30T19:16:51.427", "CreationDate": "2012-01-30T19:09:13.207", "ParentId": "9069275", "Score": "9", "Body": "<p>Arrays aren't pointers.  Initializing a character array with a string literal is a special case (6.7.8#14):</p>\n<blockquote>\n<p id=\"so_9069275_9069333_0\">An array of character type may be initialized by a character string literal, optionally enclosed in braces. Successive characters of the character string literal (including the terminating null character if there is room or if the array is of unknown size) initialize the elements of the array.</p>\n</blockquote>\n<p>and also (6.7.8#16):</p>\n<blockquote>\n<p id=\"so_9069275_9069333_1\">Otherwise, the initializer for an object that has aggregate or union type shall be a brace-enclosed list of initializers for the elements or named members.</p>\n</blockquote>\n<p>As to the pointer initialization (6.7.8#11):</p>\n<blockquote>\n<p id=\"so_9069275_9069333_2\">The initializer for a scalar shall be a single expression, optionally enclosed in braces. The initial value of the object is that of the expression (after conversion); the same type constraints and conversions as for simple assignment apply, taking the type of the scalar to be the unqualified version of its declared type.</p>\n</blockquote>\n", "OwnerUserId": "116908"}, "9070991": {"Id": "9070991", "PostTypeId": "2", "Body": "<p>Arrays are not pointer. Just name of an array is a pointer to the 1st array item. </p>\n<p>What you are asking here is the different method of initializing array in C/C++.\nPlease note:</p>\n<ol>\n<li>Arrays can be initialized only on declaration line</li>\n<li>There is no String type in C/C++</li>\n<li>Array of chars are used as string in C/C++.</li>\n<li>Initialization of array of chars have the same rule of other arrays.</li>\n<li>If we define an array without explicit length, it will be defined with the length of number of initial values.</li>\n<li>If you don't define initial value, the items would be undefined. It means the array item's value are not clear initially.</li>\n<li>if you have an array and assign initial value to the 1st of afew items, remaining items will be 0.</li>\n<li>I will complete this list later ;-)</li>\n</ol>\n", "Score": "0", "LastActivityDate": "2012-01-30T21:26:09.270", "CreationDate": "2012-01-30T21:26:09.270", "ParentId": "9069275", "CommentCount": "0", "OwnerUserId": "1178996"}, "9069275": {"ViewCount": "1050", "Body": "<p>Given that these are allowed:</p>\n<pre><code>char c[] = \"abc\";\nchar c[] = {'a','b','c','\\0'}\nchar *c = \"abc\";\n</code></pre>\n<p>Why then is this not allowed?</p>\n<pre><code>char *c = {'a','b','c','\\0'};  // error: a char cannot initialize a char*\n</code></pre>\n<p>If a string literal is interpreted by the compiler as a null-terminated array of chars then I would have thought it equivalent to statement 3 above, no?</p>\n<p>Similarly, why is this not allowed :</p>\n<pre><code>int arr[3];\nint *i = arr; // OK\nint *i = {1,2,3} // error: an int cannot initialize an int*\n</code></pre>\n<p>It's not a huge problem, I'm just curious.. I guess the question boils down to what's the difference between a string literal (or declared integer array) and an array of character elements when assigning to a pointer?</p>\n", "AcceptedAnswerId": "9069333", "Title": "C string and char array declarations", "CreationDate": "2012-01-30T19:04:48.803", "Id": "9069275", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2012-01-30T21:26:09.270", "Score": "1", "OwnerUserId": "340101", "Tags": "<c++><c><arrays><string><pointers>", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_9069275_9069333_0": {"length": 15, "quality": 0.5357142857142857, "section_id": 3314}}, "n4659": {"so_9069275_9069333_0": {"length": 15, "quality": 0.5357142857142857, "section_id": 4080}}}, "9069334": {"Id": "9069334", "PostTypeId": "2", "Body": "<p>String literal is a special case of unnamed data in <code>section DATA</code>. With arrays, you should handly allocate space on the heap, and move the data to there. (One-by-one, since you cannot assign arrays.)</p>\n", "Score": "-2", "LastActivityDate": "2012-01-30T19:09:18.757", "CreationDate": "2012-01-30T19:09:18.757", "ParentId": "9069275", "CommentCount": "3", "OwnerUserId": "1055952"}});