post_cb({"bq_ids": {"n4140": {"so_39538625_39538687_1": {"section_id": 6011, "quality": 0.9333333333333333, "length": 14}}, "n3337": {"so_39538625_39538687_1": {"section_id": 5779, "quality": 0.9333333333333333, "length": 14}}, "n4659": {"so_39538625_39538687_1": {"section_id": 7510, "quality": 0.9333333333333333, "length": 14}}}, "39538687": {"ParentId": "39538625", "CommentCount": "0", "Body": "<p>As the compiler error points out, you cannot use <code>dynamic_cast</code> to cast to <code>int*</code>.</p>\n<p>Use <code>reinterpret_cast</code> for that.</p>\n<p>From the C++11 Standard:</p>\n<blockquote>\n<p id=\"so_39538625_39538687_0\"><strong>5.2.7 Dynamic cast</strong> [expr.dynamic.cast]</p>\n<p id=\"so_39538625_39538687_1\">1 The result of the expression <code>dynamic_cast&lt;T&gt;(v)</code> is the result of converting the expression <code>v</code> to type <code>T</code>. <code>T</code> shall be a pointer or reference to a complete class type, or \u201cpointer to <em>cv</em> void.\u201d</p>\n</blockquote>\n", "OwnerUserId": "434551", "PostTypeId": "2", "Id": "39538687", "Score": "2", "CreationDate": "2016-09-16T19:15:20.997", "LastActivityDate": "2016-09-16T19:15:20.997"}, "39538625": {"CommentCount": "6", "ViewCount": "93", "PostTypeId": "1", "LastEditorUserId": "65863", "CreationDate": "2016-09-16T19:11:02.843", "LastActivityDate": "2016-09-16T22:08:34.663", "Title": "dynamic_cast (int* to int *) - compilation error", "AcceptedAnswerId": "39538687", "LastEditDate": "2016-09-16T22:08:34.663", "Id": "39538625", "Score": "0", "Body": "<p>For the following code:</p>\n<pre><code>int i = 8;\n\nint * p_i = &amp;i;\nint * p_j;\n\nif (typeid(p_i) != typeid(p_j))\n{\n     p_j= dynamic_cast&lt;int *&gt;(p_i);\n}\n</code></pre>\n<p>I get the following compilation error:</p>\n<blockquote>\n<p id=\"so_39538625_39538625_0\">error: cannot dynamic_cast \u2018p_i\u2019 (of type \u2018int*\u2019) to type \u2018int*\u2019 (target is not pointer or reference to class)</p>\n</blockquote>\n<p>What am I missing?</p>\n<p>P.S. It is a simplified example of a behaviour that I get (with template functions etc.), so don't try to find any purpose in this code segment.</p>\n<p>UPD:\nAs this code is a part of a template function, I can't know if I get a complete class or a primitive - this is the reason.</p>\n", "Tags": "<c++><dynamic-cast>", "OwnerUserId": "2366989", "AnswerCount": "1"}});