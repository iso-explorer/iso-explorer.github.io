post_cb({"bq_ids": {"n4140": {"so_28382587_28382673_0": {"length": 15, "quality": 0.7894736842105263, "section_id": 4636}}, "n3337": {"so_28382587_28382673_0": {"length": 15, "quality": 0.7894736842105263, "section_id": 4447}}, "n4659": {"so_28382587_28382673_0": {"length": 14, "quality": 0.7368421052631579, "section_id": 6006}}}, "28382673": {"Id": "28382673", "PostTypeId": "2", "Body": "<p><code>std::bind</code> does not return a <code>std::function</code> object but one of an implementation-defined binder type. Here, then:</p>\n<pre><code>auto f = std::bind(function, object);\n</code></pre>\n<p><code>f</code> is deduced to be this binder type, and this binder type doesn't have to be assignable, only CopyConstructible and MoveConstructible. Quoth the standard, [func.bind.bind]/5:</p>\n<blockquote>\n<p id=\"so_28382587_28382673_0\"><em>Remarks:</em> The return type [of std::bind] shall satifsy the requirements of <code>MoveConstructible</code>. If all of <code>FD</code> and <code>TiD</code> satisfy the requirements of <code>CopyConstructible</code>, then the return type shall satisfy the requirements of <code>CopyConstructible</code>.</p>\n</blockquote>\n<p><code>FD</code> and <code>TiD</code> are the bound function type and the argument types, respectively. Note that it says nothing about <code>MoveAssignable</code> and <code>CopyAssignable</code>, which means<sup>1</sup> that the binder isn't required to satisfy them. And that means that the assignment</p>\n<pre><code>f = std::bind(function, object); // Error occurs here\n</code></pre>\n<p>is not required by the standard to work.</p>\n<p>It appears that MSVC's implementation of <code>std::bind</code> sticks to this, while libc++ (which I believe comes with Xcode, but I don't develop for Mac OS X) is more lenient.</p>\n<p>If you want <code>f</code> to be a <code>std::function</code>, you have to declare it as one explicitly:</p>\n<pre><code>std::function&lt;bool()&gt; f = std::bind(function, object);\n</code></pre>\n<p>And then the reassignment will work as well because <code>std::function</code> is assignable.</p>\n<p><sup>1</sup> along with the fact that such a requirement is not mentioned anywhere else</p>\n", "LastEditorUserId": "4301306", "LastActivityDate": "2015-02-07T13:46:18.250", "Score": "1", "CreationDate": "2015-02-07T13:27:38.353", "ParentId": "28382587", "CommentCount": "1", "OwnerUserId": "4301306", "LastEditDate": "2015-02-07T13:46:18.250"}, "28382587": {"ViewCount": "468", "Body": "<p>I'm trying to use function pointers to a class member function and then use std::bind to call that function on an object of that class in a separate function. Within this separate function, I can bind the object and function pointer once, and then a second time in Xcode, but not with MSVS2015...</p>\n<p>Here is some basic code that reproduces the issue I'm having. Everything compiles and runs fine on Xcode:</p>\n<pre><code>class AClass\n{\npublic:\n    bool isNumber1()\n    {\n        return num == 1 ? true : false;\n    }\n\nprivate:\n    int num;\n};\n\ntypedef bool (AClass::*isFunction)();\n\nbool checkIsFunc (AClass&amp; object, isFunction function)\n{\n    auto f = std::bind(function, object);\n\n    f = std::bind(function, object); // Error occurs here\n\n    return f();\n}\n\nint main (int argc, char* argv[])\n{\n\n    AClass obj;\n\n    bool outcome = checkIsFunc(obj, &amp;AClass::isNumber1);\n\n    return 0;\n}\n</code></pre>\n<p>However, with MSVS2015, I get the following error:</p>\n<pre><code>error C2280: 'std::_Bind&lt;true,bool,std::_Pmf_wrap&lt;bool (__thiscall AClass::* )(void),bool,AClass,&gt;,AClass &amp;&gt; &amp;std::_Bind&lt;true,bool,std::_Pmf_wrap&lt;bool (__thiscall AClass::* )(void),bool,AClass,&gt;,AClass &amp;&gt;::operator =(const std::_Bind&lt;true,bool,std::_Pmf_wrap&lt;bool (__thiscall AClass::* )(void),bool,AClass,&gt;,AClass &amp;&gt; &amp;)': attempting to reference a deleted function\n</code></pre>\n<p>Any ideas what I am doing wrong here or why this works in Xcode but not VS?</p>\n<p>Thanks!</p>\n<p>Jim</p>\n", "AcceptedAnswerId": "28382673", "Title": "attempting to reassign std::function with std::bind and getting error \"attempting to reference a deleted function\"", "CreationDate": "2015-02-07T13:20:19.107", "Id": "28382587", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2015-02-07T13:46:18.250", "Score": "0", "OwnerUserId": "1322679", "Tags": "<c++><xcode><visual-studio><std-function><stdbind>", "AnswerCount": "1"}});