post_cb({"bq_ids": {"n4140": {"so_22723822_22723901_1": {"length": 14, "quality": 0.9333333333333333, "section_id": 5349}}, "n3337": {"so_22723822_22723901_1": {"length": 14, "quality": 0.9333333333333333, "section_id": 5146}}, "n4659": {"so_22723822_22723901_1": {"length": 13, "quality": 0.8666666666666667, "section_id": 6774}}}, "22723901": {"Id": "22723901", "PostTypeId": "2", "Body": "<p>The problem is that you are trying to convert a <a href=\"https://stackoverflow.com/a/22199042/1141471\"><em>string literal</em></a> (with type <code>const char[]</code>) to <code>char*</code>.</p>\n<blockquote>\n<p id=\"so_22723822_22723901_0\">The place where the compiler tell me to look doesn't even have a\n  string or char associated with it??</p>\n</blockquote>\n<p>Yes, it is on the top of the file:</p>\n<pre><code>#define FNAME \"database.dat\"\n</code></pre>\n<p><strong>C++ Standard n3337  \u00a7 2.14.5/1</strong></p>\n<p>String literals</p>\n<blockquote>\n<p id=\"so_22723822_22723901_1\">A string literal is a sequence of characters (as defined in 2.14.3)\n  surrounded by double quotes, optionally prefixed by R, u8, u8R, u, uR,\n  U, UR, L, or LR, as in \"...\", R\"(...)\", u8\"...\", u8R\"(...)\", u\"...\",\n  uR\"* \u0303(...)* \u0303\", U\"...\", UR\"zzz(...)zzz\", L\"...\", or LR\"(...)\",\n  respectively.</p>\n</blockquote>\n<p>You can avoid the warning by casting to <code>char*</code>:</p>\n<pre><code>File = FileOpen( (char*)FNAME);\n</code></pre>\n<p>Even better modify <code>FileOpen</code> to accept a <code>const char*</code>. This will be more safe and just right as you don't intend to modify the string.</p>\n", "LastEditorUserId": "-1", "LastActivityDate": "2014-03-28T22:10:50.663", "Score": "3", "CreationDate": "2014-03-28T21:58:16.820", "ParentId": "22723822", "CommentCount": "6", "OwnerUserId": "1141471", "LastEditDate": "2017-05-23T12:28:49.040"}, "22769841": {"Id": "22769841", "PostTypeId": "2", "Body": "<p>As @lizusek said, you can avoid the warning by type casting to <code>char*</code>, but even better would be to rewrite your code to avoid type casting. While it can work and solve a lot of headaches, it can be very dangerous if you type cast the wrong things.</p>\n", "LastActivityDate": "2014-03-31T18:53:41.947", "CommentCount": "0", "CreationDate": "2014-03-31T18:53:41.947", "ParentId": "22723822", "Score": "0", "OwnerUserId": "2096928"}, "22723822": {"ViewCount": "264", "Body": "<p>I hope someone can help me. I'm converting a C language program to C++ in order to easily use strings but when I go to compile, I get this error: </p>\n<pre><code>inventory.cpp:225: warning: depreciated conversion from string constant to 'char*'\n</code></pre>\n<p><strong>This is where the code in question:</strong></p>\n<pre><code>#define FNAME \"database.dat\"\n\n\n// test data struct\nstruct t_Record\n{\n    int number;\n    char word[100];\n    //String word[];\n} Record;\n\nint main (void)\n{\n    int Rec = 0; // record number\n    FILE *File;\n\n    srand(time(NULL));\n\n    File = FileOpen(FNAME); \n    if (!File)\n    {\n          printf(\"Error hommie!\\n\\n\");\n          exit(-1);\n    }\n\n    ...etc.\n</code></pre>\n<p><strong>This is where the compiler tells me the error occurred:</strong> </p>\n<pre><code>File = FileOpen(FNAME); \n</code></pre>\n<p>I just don't see what is wrong...</p>\n<p>The place where the compiler tell me to look doesn't even have a string or char associated with it??</p>\n<p>Now I understand this error has been seen before, but my question is specific to my code.</p>\n", "AcceptedAnswerId": "22723901", "Title": "Depreciated conversion from string constant to 'char*'", "CreationDate": "2014-03-28T21:53:16.850", "Id": "22723822", "CommentCount": "7", "LastEditDate": "2014-03-31T17:39:13.270", "PostTypeId": "1", "LastEditorUserId": "827263", "LastActivityDate": "2014-03-31T18:53:41.947", "Score": "0", "OwnerUserId": "2770822", "Tags": "<c++><c><string><compiler-construction><char>", "AnswerCount": "2"}});