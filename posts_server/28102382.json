post_cb({"bq_ids": {"n4140": {"so_28102382_28102838_0": {"length": 15, "quality": 0.9375, "section_id": 79}}, "n3337": {"so_28102382_28102838_0": {"length": 15, "quality": 0.9375, "section_id": 74}}, "n4659": {"so_28102382_28102838_0": {"length": 15, "quality": 0.9375, "section_id": 81}}}, "28102382": {"ViewCount": "214", "Body": "<p>Is it possible to define <code>FloatType</code> in such a way that I can declare a <code>f1</code> as</p>\n<pre><code>FloatType f1;\n</code></pre>\n<p>instead of </p>\n<pre><code>FloatType&lt;&gt; f1;\n</code></pre>\n<p>If i try to use the former i get a </p>\n<p><code>error: use of class template 'FloatType' requires template arguments</code></p>\n<pre><code>template &lt;typename T, typename... Args&gt;\nclass Type\n{\n};\n\ntemplate &lt;typename... Args&gt;\nclass Type&lt;float, Args...&gt;\n{\n};\n\ntemplate &lt;typename... Args&gt;\nusing FloatType = Type&lt;float, Args...&gt;;\n\nint\nmain(int, char **)\n{\n    FloatType&lt;&gt; f1;\n    FloatType&lt;float&gt; f2;\n\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "28102838", "Title": "using declaration of a specialized variadic template class", "CreationDate": "2015-01-23T03:05:44.033", "Id": "28102382", "CommentCount": "2", "PostTypeId": "1", "LastActivityDate": "2015-01-23T12:12:50.030", "Score": "2", "OwnerUserId": "1360310", "Tags": "<c++><c++11><variadic-templates><using-statement>", "AnswerCount": "1"}, "28102838": {"Id": "28102838", "PostTypeId": "2", "Body": "<p>No, that is impossible. From the standard \u00a714.3/4, emphasis mine:</p>\n<blockquote>\n<p id=\"so_28102382_28102838_0\">When template argument packs or default <em>template-arguments</em> are used, a <em>template-argument</em> list can be\n  empty. In that case the empty <code>&lt;&gt;</code> brackets <strong>shall still be used</strong> as the <em>template-argument-list</em>. <em>[ Example:</em> </p>\n<pre><code>  template &lt;class T = char&gt; class String;\n  String&lt;&gt;* p; // OK: String&lt;char&gt;\n  String* q;   // syntax error\n\n  template &lt;class ... Elements&gt; class Tuple;\n  Tuple&lt;&gt;* t; // OK: Elements is empty\n  Tuple* u;   // syntax error\n</code></pre>\n<p id=\"so_28102382_28102838_1\"><em>\u2014end example ]</em></p>\n</blockquote>\n<p>But then, what's wrong with writing <code>FloatType&lt;&gt;</code>? If seeing the empty brackes really irks you, you can introduce another alias for them, but that kind of obfuscates things:</p>\n<pre><code>using DefFloatType = FloatType&lt;&gt;;\n</code></pre>\n<p>Plus, it's more typing! </p>\n", "LastEditorUserId": "2069064", "LastActivityDate": "2015-01-23T12:12:50.030", "Score": "4", "CreationDate": "2015-01-23T04:03:41.193", "ParentId": "28102382", "CommentCount": "1", "OwnerUserId": "2069064", "LastEditDate": "2015-01-23T12:12:50.030"}});