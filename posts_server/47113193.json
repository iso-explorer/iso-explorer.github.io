post_cb({"47113193": {"CommentCount": "5", "ViewCount": "45", "LastEditDate": "2017-11-04T17:29:44.037", "LastEditorUserId": "187690", "CreationDate": "2017-11-04T16:57:18.900", "LastActivityDate": "2017-11-04T17:31:14.150", "PostTypeId": "1", "Title": "In c typedef shouldn't the variable name be after the parentheses?", "Id": "47113193", "OwnerUserId": "6598393", "Body": "<p>in the following code I don't understand why BMP2() is inside the parentheses and why the fields inside it are written this way :</p>\n<pre><code>typedef struct BMP2\n{\n  unsigned long biSize;\n  unsigned long biWidth;\n  unsigned long biHeight;\n  unsigned short biPlanes;\n  unsigned short biBitCount;\n  unsigned long biCompression;\n  unsigned long biSizeImage;\n  unsigned long biXPelsPerMeter;\n  unsigned long biYPelsPerMeter;\n  unsigned long biClrUsed;\n  unsigned long biClrImportant;\n  BMP2()\n  {\n    biWidth\n    = biHeight\n    = biCompression\n    = biSizeImage\n    = biXPelsPerMeter\n    = biYPelsPerMeter\n    = biClrUsed\n    = biClrImportant = 0;\n    biSize = sizeof(BMP2);\n    biPlanes = biBitCount\n    = 0;\n  }\n};\n</code></pre>\n", "Tags": "<c++><typedef>", "Score": "-3", "AnswerCount": "4"}, "47113219": {"ParentId": "47113193", "PostTypeId": "2", "CommentCount": "0", "Body": "<p><code>BMP2()</code> is the constructor of the structure.</p>\n<p>This </p>\n<pre><code>biWidth\n= biHeight\n= biCompression\n= biSizeImage\n= biXPelsPerMeter\n= biYPelsPerMeter\n= biClrUsed\n= biClrImportant = 0;\n</code></pre>\n<p>is an alternative way to do this:</p>\n<pre><code>biWidth = 0;\nbiHeight = 0;\nbiCompression = 0;\nbiSizeImage = 0;\nbiXPelsPerMeter = 0;\nbiYPelsPerMeter = 0;\nbiClrUsed = 0;\nbiClrImportant = 0;\n</code></pre>\n", "OwnerUserId": "3370341", "LastEditorUserId": "3370341", "LastEditDate": "2017-11-04T17:10:21.853", "Id": "47113219", "Score": "0", "CreationDate": "2017-11-04T16:59:49.887", "LastActivityDate": "2017-11-04T17:10:21.853"}, "47113428": {"ParentId": "47113193", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>Your declaration looks like a <code>typedef</code> declaration without a declarator. (And it is not clear what \"variable names after the parentheses\" you are talking about.)</p>\n<p>C++17 explicitly prohibits <code>typedef</code> declarations without a declarator, meaning that your code is ill-formed</p>\n<blockquote>\n<p id=\"so_47113193_47113428_0\"><strong>7.1.3 The typedef specifier</strong><br>\n<strong>1</strong> [...] If a <code>typedef</code> specifier appears in a declaration without a declarator, the program is ill-formed.</br></p>\n</blockquote>\n<p>Previous versions of C++ standard did not include that wording (at least in such straightforward form). </p>\n<p>Since class (and enum) declarations in C++ can omit declarators (and, possibly, since in C <code>typedef</code> was simply a storage-class specifier) it is not clear to me whether it was supposed to be formally legal in pre-C++17 language. Many C++ compilers allow it, ignoring the redundant <code>typedef</code>. In that case what you have is a plain class declaration for class <code>BMP2</code>. </p>\n", "OwnerUserId": "187690", "LastEditorUserId": "187690", "LastEditDate": "2017-11-04T17:31:14.150", "Id": "47113428", "Score": "0", "CreationDate": "2017-11-04T17:22:16.143", "LastActivityDate": "2017-11-04T17:31:14.150"}, "47113256": {"ParentId": "47113193", "CommentCount": "0", "Body": "<p><code>BMP()</code> - constructor for struct <code>BMP</code>. In c++ allowed initialized variables as in your code. Example:</p>\n<pre><code>int var1, var2, var3;\nvar1 = var2 = var3 = 4;\nstd::cout &lt;&lt; \"var1: \" &lt;&lt; var1 &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"var2: \" &lt;&lt; var2 &lt;&lt; std::endl;\nstd::cout &lt;&lt; \"var3: \" &lt;&lt; var3 &lt;&lt; std::endl;\n</code></pre>\n<p>Output:</p>\n<pre><code>var1: 4\nvar2: 4\nvar3: 4\n</code></pre>\n", "OwnerUserId": "8873191", "PostTypeId": "2", "Id": "47113256", "Score": "0", "CreationDate": "2017-11-04T17:03:50.997", "LastActivityDate": "2017-11-04T17:03:50.997"}, "47113300": {"ParentId": "47113193", "CommentCount": "0", "Body": "<p>C++ Initialisations can be chained till the semicolon for example</p>\n<pre><code>a = b = c = d = e = f = 0;\n</code></pre>\n<p>Here everything will be initialised to <code>0</code></p>\n<p>This can also be written in multiline</p>\n<pre><code>a \n= b\n= c\n= d\n= f\n= 0;\n</code></pre>\n<p>This is what being done in your case</p>\n<p>As far as <code>BMP2()</code> is concerned, its a special function of C++ called \"CONSTRUCTOR\" which will be called automatically every time the class is instantiated.</p>\n", "OwnerUserId": "3559113", "PostTypeId": "2", "Id": "47113300", "Score": "0", "CreationDate": "2017-11-04T17:08:18.083", "LastActivityDate": "2017-11-04T17:08:18.083"}, "bq_ids": {"n4659": {"so_47113193_47113428_0": {"section_id": 6829, "quality": 0.8, "length": 8}}}});