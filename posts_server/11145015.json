post_cb({"11145015": {"ViewCount": "1343", "Body": "<p>I have these files :- </p>\n<p>1.h :- </p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntemplate &lt;typename A&gt;\nvoid f() {\n  cout&lt;&lt;\"generic\\n\";\n}\n</code></pre>\n<p>1.cpp :- </p>\n<pre><code>#include \"1.h\"\n\ntemplate &lt;&gt;\nvoid f&lt;int&gt; () {\n  cout&lt;&lt;\"for ints only\\n\";\n}\n</code></pre>\n<p>main.cpp :- </p>\n<pre><code>#include \"1.h\"\n\nint main() {\n  f&lt;int&gt;();\n  return 0;\n}\n</code></pre>\n<p>Now, I compile and run these with g++ like this :- </p>\n<pre><code>g++ -c 1.cpp -o 1.o \ng++ main.cpp 1.o\n./a.out\n</code></pre>\n<p>And I get :- </p>\n<pre><code>for ints only\n</code></pre>\n<p>On the other hand, I compile it with icpc like this :- </p>\n<pre><code>icpc -c 1.cpp -o 1.o\nicpc main.cpp 1.o\n./a.out\n</code></pre>\n<p>And I get :- </p>\n<pre><code>generic\n</code></pre>\n<p>What does the C++ standard say about this? Is any one compiler \"right\" and the other \"wrong\" or is the standard ambiguous on this issue and both are \"right\" ?</p>\n", "AcceptedAnswerId": "11145181", "Title": "template specialization in another file c++. Which version gets", "CreationDate": "2012-06-21T19:04:17.173", "Id": "11145015", "CommentCount": "3", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2012-06-21T21:55:01.953", "LastEditorUserId": "151292", "LastActivityDate": "2012-06-21T21:55:01.953", "Score": "6", "OwnerUserId": "1098524", "Tags": "<c++><templates><g++><template-specialization><icc>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_11145015_11145181_0": {"length": 29, "quality": 1.0, "section_id": 268}}, "n3337": {"so_11145015_11145181_0": {"length": 29, "quality": 1.0, "section_id": 259}}, "n4659": {"so_11145015_11145181_0": {"length": 29, "quality": 1.0, "section_id": 275}}}, "11145181": {"Id": "11145181", "PostTypeId": "2", "Body": "<p>Your program exhibits undefined behavior.  The specialization must be declared in every translation unit in which it is used, per C++11 \u00a714.7.3/6:</p>\n<blockquote>\n<p id=\"so_11145015_11145181_0\">If a template, a member template or a member of a class template is explicitly specialized then that specialization shall be declared before the first use of that specialization that would cause an implicit instantiation to take place, in every translation unit in which such a use occurs; no diagnostic is required.</p>\n</blockquote>\n", "LastActivityDate": "2012-06-21T19:14:53.893", "CommentCount": "0", "CreationDate": "2012-06-21T19:14:53.893", "ParentId": "11145015", "Score": "9", "OwnerUserId": "151292"}});