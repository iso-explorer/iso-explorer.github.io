post_cb({"bq_ids": {"n4140": {"so_14185847_14185855_0": {"length": 32, "quality": 0.8888888888888888, "section_id": 7041}}, "n3337": {"so_14185847_14185855_0": {"length": 32, "quality": 0.8888888888888888, "section_id": 6786}}, "n4659": {"so_14185847_14185855_0": {"length": 32, "quality": 0.8888888888888888, "section_id": 8538}}}, "14185855": {"Id": "14185855", "PostTypeId": "2", "Body": "<p><code>inline</code> tells the compiler not to export the symbol. If you don't use it, the symbol will be exported by all compilation units that include that file, thus resulting in a <strong>multiple definition</strong>.</p>\n<h3>3.2 One definition rule [basic.def.odr]</h3>\n<blockquote>\n<p id=\"so_14185847_14185855_0\">4) <strong>Every program shall contain exactly one definition of every non-inline function</strong>  or variable that is odr-used\n  in that program; no diagnostic required. The definition can appear explicitly in the program, it can be found\n  in the standard or a user-defined library, or (when appropriate) it is implicitly defined (see 12.1, 12.4 and\n  12.8). An inline function shall be defined in every translation unit in which it is odr-used.</p>\n</blockquote>\n<p>This is the only pertinent use of the keyword <code>inline</code> in fact - actually inlining functions is up to the compiler.IMO, the keyword is even less than a hint in that sense.</p>\n", "LastActivityDate": "2013-01-06T19:27:11.343", "CommentCount": "0", "CreationDate": "2013-01-06T19:27:11.343", "ParentId": "14185847", "Score": "5", "OwnerUserId": "673730"}, "14185847": {"ViewCount": "63", "Body": "<p>I have a declaration of an inline function that happens to be recursive. Since it's recursive there is no point in declaring it inline so why does my linkage fail when i remove it?</p>\n<p>3 files:</p>\n<pre><code>\\\\File1.h\n\n#ifndef FILE1_H\n#define FILE1_H\n\ninline int Factorial(int a)\n{\n    if (a &lt; 2)\n        return 1;\n    return a*Factorial(a-1);\n}\n\nint PermutationsNum(int b);\n\n\n#endif\n\n\n\\\\File1.cpp\n#include \"File1.h\"\n\nint PermutationsNum(int b)\n{\n    return Factorial(b);\n}\n\n\n\\\\File2.cpp\n\n#include &lt;iostream&gt;\n#include \"File1.h\"\n\nint main()\n{\n    std::cout &lt;&lt; \"permutations of 7 elements: \" &lt;&lt; PermutationsNum(7) &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "14185855", "Title": "c++ Why does the linkage fail when i don't use inline?", "CreationDate": "2013-01-06T19:26:13.103", "Id": "14185847", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-01-06T19:27:11.343", "Score": "1", "OwnerUserId": "537943", "Tags": "<c++><inline>", "AnswerCount": "1"}});