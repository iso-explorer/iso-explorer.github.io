post_cb({"7701891": {"CommentCount": "0", "AcceptedAnswerId": "7701927", "PostTypeId": "1", "LastEditorUserId": "160206", "CreationDate": "2011-10-09T06:50:31.200", "LastActivityDate": "2011-10-09T07:03:52.900", "LastEditDate": "2011-10-09T07:03:52.900", "ViewCount": "1585", "FavoriteCount": "1", "Title": "C++ using namespace statement", "Id": "7701891", "Score": "6", "Body": "<pre><code>namespace MyNamespace\n{\n    static void foo1()\n    {\n\n    }\n}\n\nusing namespace MyNamespace;\n\nclass MyClass\n{\n    void foo2()\n    {\n        ::foo1();\n    }    \n};\n</code></pre>\n<p>The scope resolution operation <code>::</code> means using method in the global namespace. Here we can use <code>::foo1()</code>. This means method <code>foo1()</code> is in the global namespace, am I right?</p>\n<p>My question is, does <code>using namespace ANAMESPACE_NAME</code> mean we import all elements form the namespace <code>ANAMESPACE_NAME</code> into the global namespace?</p>\n", "Tags": "<c++><namespaces>", "OwnerUserId": "930129", "AnswerCount": "4"}, "7701926": {"ParentId": "7701891", "CommentCount": "0", "Body": "<p>YEs - </p>\n<p><a href=\"http://www.cplusplus.com/doc/tutorial/namespaces/\" rel=\"nofollow\">http://www.cplusplus.com/doc/tutorial/namespaces/</a></p>\n", "OwnerUserId": "892256", "PostTypeId": "2", "Id": "7701926", "Score": "0", "CreationDate": "2011-10-09T06:58:30.003", "LastActivityDate": "2011-10-09T06:58:30.003"}, "7701911": {"ParentId": "7701891", "CommentCount": "0", "Body": "<blockquote>\n<p id=\"so_7701891_7701911_0\">Here we can use ::foo1(). This means method foo1() is in the global namespace, am I right?</p>\n</blockquote>\n<p>Yes thats correct. It means call the method named <code>foo1()</code> defined in global namespace.\nThis is called as <strong>Qualified Namespace Lookup</strong>.</p>\n<blockquote>\n<p id=\"so_7701891_7701911_1\">do \"using namespace ANAMESPACE_NAME\" mean we import all elements in the ANAMESPACE_NAME namespace into global namespace?</p>\n</blockquote>\n<p>Yes, it imports all elements from the <code>ANAMESPACE_NAME</code> namespace in to current namespace.<br>\nIt is called as an <strong>using directive</strong>.<br>\nIf you want to import just specific element in current type use, <strong>using declaration</strong>.  </br></br></p>\n<p>format is:  </p>\n<blockquote>\n<p id=\"so_7701891_7701911_2\">using ANAMESPACE_NAME::element_name;</p>\n</blockquote>\n", "OwnerUserId": "452307", "PostTypeId": "2", "Id": "7701911", "Score": "3", "CreationDate": "2011-10-09T06:55:06.793", "LastActivityDate": "2011-10-09T06:55:06.793"}, "7701927": {"ParentId": "7701891", "CommentCount": "0", "Body": "<p>Section 3.4.3.4 of the C++2003 standard has an answer:</p>\n<blockquote>\n<p id=\"so_7701891_7701927_0\">A name prefixed by the unary scope operator :: (5.1) is looked up in\n  global scope, in the translation unit where it is used. The name shall\n  be declared in global namespace scope <strong>or shall be a name whose\n  declaration is visible in global scope because of a using-directive</strong>\n  (3.4.3.2).</p>\n</blockquote>\n<p>This paragraph is almost identical in the C++11 FDIS, so this probably also holds in C++11.</p>\n", "OwnerUserId": "160206", "PostTypeId": "2", "Id": "7701927", "Score": "3", "CreationDate": "2011-10-09T06:58:48.453", "LastActivityDate": "2011-10-09T06:58:48.453"}, "bq_ids": {"n4140": {"so_7701891_7701927_0": {"section_id": 7110, "quality": 0.9230769230769231, "length": 24}}, "n3337": {"so_7701891_7701927_0": {"section_id": 6854, "quality": 0.9230769230769231, "length": 24}}, "n4659": {"so_7701891_7701927_0": {"section_id": 8611, "quality": 0.9230769230769231, "length": 24}}}, "7701933": {"ParentId": "7701891", "CommentCount": "2", "Body": "<p>No. \"using namespace ANAMESPACE_NAME\" mean we import all elements into current scope.</p>\n<p>You can write something like this:</p>\n<pre><code>namespace A {\n    int i = 10, j = 20;\n}\n\nint f()\n{\n    using namespace A;  // injects names from A into the global scope.\n    return i * j;       // uses i and j from namespace A.\n}\n\nint k = i * j; // Error: undefined variant i and j.\n</code></pre>\n", "OwnerUserId": "646552", "PostTypeId": "2", "Id": "7701933", "Score": "5", "CreationDate": "2011-10-09T07:00:13.443", "LastActivityDate": "2011-10-09T07:00:13.443"}});