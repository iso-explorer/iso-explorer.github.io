post_cb({"bq_ids": {"n4140": {"so_48749545_48749716_0": {"length": 39, "quality": 0.8666666666666667, "section_id": 709}}, "n3337": {"so_48749545_48749716_0": {"length": 37, "quality": 0.8222222222222222, "section_id": 698}}, "n4659": {"so_48749545_48749716_0": {"length": 42, "quality": 0.9333333333333333, "section_id": 738}}}, "48749716": {"Id": "48749716", "PostTypeId": "2", "Body": "<p>The allocator is copied into the map.  <code>std::map</code> doesn't specify what it does so we fall back to [container.requirements.general]/8 which states:</p>\n<blockquote>\n<p id=\"so_48749545_48749716_0\">[...]All other constructors for these container types take a const allocator_type&amp; argument. [ Note: If an invocation of a constructor uses the default value of an optional allocator argument, then the Allocator type must support value-initialization. \u2014 end note ] <strong>A copy of this allocator is used</strong> for any memory allocation and element construction performed, by these constructors and by all member functions, during the lifetime of each container object or until the allocator is replaced.[...]</p>\n</blockquote>\n<p><sup>Emphasis mine</sup></p>\n", "LastActivityDate": "2018-02-12T15:21:17.433", "CommentCount": "0", "CreationDate": "2018-02-12T15:21:17.433", "ParentId": "48749545", "Score": "5", "OwnerUserId": "4342498"}, "48749545": {"ViewCount": "55", "Body": "<p>When a <code>std::map</code> takes an Allocator as a parameter in a constructor, it takes it by reference with the type taken from its class template parameter:</p>\n<pre><code>explicit map(const Allocator&amp; alloc);\n</code></pre>\n<p>Does it store this reference in the object, or does it take a copy (store it by value), or does it do neither and only use it through the template parameter as a type?  How did you determine this?</p>\n", "AcceptedAnswerId": "48749716", "Title": "Does a std::map take an allocator by reference, by value or use it purely as a type?", "CreationDate": "2018-02-12T15:12:24.253", "LastActivityDate": "2018-02-12T15:26:56.917", "CommentCount": "0", "LastEditDate": "2018-02-12T15:26:56.917", "PostTypeId": "1", "LastEditorUserId": "4342498", "Id": "48749545", "Score": "2", "OwnerUserId": "1131467", "Tags": "<c++><dictionary><allocator><c++17>", "AnswerCount": "1"}});