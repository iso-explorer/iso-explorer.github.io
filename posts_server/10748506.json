post_cb({"10748558": {"Id": "10748558", "PostTypeId": "2", "Body": "<p>When you shift a value,</p>\n<pre><code>unsigned char x = ...;\nint y = x &lt;&lt; 16;\n</code></pre>\n<p>The type of <code>x</code> is promoted to <code>int</code> if <code>unsigned char</code> fits in an <code>int</code> (most systems), or to <code>unsigned</code> if <code>unsigned char</code> does not fit in an <code>int</code> (rare<sup>1</sup>).  As long as your <code>int</code> is 25 bits wide or wider, then no data will be discarded<sup>2</sup>.</p>\n<p>Note that this is completely unrelated to the fact that <code>16</code> has type <code>int</code>.</p>\n<pre><code>/* All three are exactly equivalent */\nx &lt;&lt; 16;\nx &lt;&lt; 16u;\nx &lt;&lt; (unsigned char) 16;\n</code></pre>\n<p><strong>Source:</strong> from n1516 (C99 draft):</p>\n<p>\u00a76.5.7 paragraph 3: Bitwise Shift Operators</p>\n<blockquote>\n<p id=\"so_10748506_10748558_0\">The integer promotions are performed on each of the operands. The type of the result is\n  that of the promoted left operand.</p>\n</blockquote>\n<p>\u00a76.3.1.1 paragraph 2: Boolean, characters, and integers</p>\n<blockquote>\n<p id=\"so_10748506_10748558_1\">If an int can represent all values of the original type (as restricted by the width, for a\n  bit-field), the value is converted to an int; otherwise, it is converted to an unsigned\n  int. These are called the integer promotions.</p>\n</blockquote>\n<p><strong>Footnotes:</strong></p>\n<p><sup>1</sup>: Some DSP chips as well as certain Cray supercomputers are known to have <code>sizeof(char) == sizeof(int)</code>.  This simplifies design of the processor's load-store unit at the cost of additional memory consumption.</p>\n<p><sup>2</sup>: If your left shift is promoted to <code>int</code> and then overflows the <code>int</code>, this is undefined behavior (demons may fly out your nose).  By comparison, overflowing an <code>unsigned</code> is always well-defined, so bit shifts <em>should</em> usually be done on <code>unsigned</code> types.</p>\n", "LastEditorUserId": "82294", "LastActivityDate": "2012-05-25T04:54:40.877", "Score": "16", "CreationDate": "2012-05-25T04:43:06.373", "ParentId": "10748506", "CommentCount": "5", "OwnerUserId": "82294", "LastEditDate": "2012-05-25T04:54:40.877"}, "bq_ids": {"n4140": {"so_10748506_10748558_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 6146}}, "n3337": {"so_10748506_10748558_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 5909}}, "n4659": {"so_10748506_10748558_0": {"length": 7, "quality": 0.5833333333333334, "section_id": 7569}}}, "10748512": {"Id": "10748512", "PostTypeId": "2", "Body": "<p>If <code>char</code> fits inside <code>int</code>, it will be promoted to an <code>int</code> and the result will be as you expect. If that is not the case it is undefined behavior according to the standard, and will probably emit a compile warning. From the standard:</p>\n<p><code>The integer promotions are performed on each of the operands. The type of the result is that of the promoted left operand. If the value of the right operand is negative or is greater than or equal to the width of the promoted left operand, the behavior is undefined.</code></p>\n", "LastEditorUserId": "1301852", "LastActivityDate": "2012-05-25T04:43:45.997", "Score": "1", "CreationDate": "2012-05-25T04:36:09.587", "ParentId": "10748506", "CommentCount": "3", "OwnerUserId": "1301852", "LastEditDate": "2012-05-25T04:43:45.997"}, "10748506": {"ViewCount": "9566", "Body": "<p>i am reading a .cpp file containing a <code>unsigned char</code> variable, it's trying the bitwise left shift 16 bits, since an <code>unsigned char</code> is composed of 8 bits, left shift 16 bits will erase all the bits and fill it with eight 0s.</p>\n<p><code>unsigned char byte=0xff; byte &lt;&lt; 16;</code></p>\n", "AcceptedAnswerId": "10748558", "Title": "what does it mean to bitwise left shift an unsigned char with 16", "CreationDate": "2012-05-25T04:34:37.577", "Id": "10748506", "CommentCount": "4", "FavoriteCount": "2", "PostTypeId": "1", "LastActivityDate": "2012-05-25T04:54:40.877", "Score": "13", "OwnerUserId": "192261", "Tags": "<c++><c><bit-manipulation>", "AnswerCount": "2"}});