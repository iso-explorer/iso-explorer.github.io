post_cb({"bq_ids": {"n4140": {"so_10396278_10396955_5": {"length": 22, "quality": 0.88, "section_id": 6276}, "so_10396278_10396955_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 5573}}, "n3337": {"so_10396278_10396955_5": {"length": 22, "quality": 0.88, "section_id": 6036}, "so_10396278_10396955_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 5355}}, "n4659": {"so_10396278_10396955_5": {"length": 22, "quality": 0.88, "section_id": 7783}, "so_10396278_10396955_1": {"length": 6, "quality": 0.8571428571428571, "section_id": 7020}}}, "10396955": {"Id": "10396955", "PostTypeId": "2", "Body": "<p>From my copy of the draft:</p>\n<blockquote>\n<p id=\"so_10396278_10396955_0\"><strong>24.2.5 Forward iterators [forward.iterators]</strong></p>\n<p id=\"so_10396278_10396955_1\"><strong>1</strong> A class or a built-in type X satisfies the requirements of a forward iterator if</p>\n<p id=\"so_10396278_10396955_2\">[...]</p>\n<p id=\"so_10396278_10396955_3\">\u2014 X satisfies the DefaultConstructible requirements (20.2.1),</p>\n</blockquote>\n<p>and then:</p>\n<blockquote>\n<p id=\"so_10396278_10396955_4\"><strong>20.2.1 Template argument requirements</strong></p>\n<p id=\"so_10396278_10396955_5\"><strong>2</strong> In general, a default constructor is not required. Certain container\n  class member function signatures specify the default constructor as a\n  default argument. T() shall be a well-defined expression (8.5) if one\n  of those signatures is called using the default argument (8.3.6).</p>\n</blockquote>\n<p>There are two things to note here: </p>\n<ul>\n<li>The first line tells us that a default ctor is rarely required (which almost answers your question)</li>\n<li>The requirement is probably a hint that iterator semantics should be compatible with pointers, the latter being default constructible (read not to break existing code).</li>\n</ul>\n", "LastActivityDate": "2012-05-01T11:21:13.557", "CommentCount": "2", "CreationDate": "2012-05-01T11:21:13.557", "ParentId": "10396278", "Score": "3", "OwnerUserId": "66692"}, "10396735": {"Id": "10396735", "PostTypeId": "2", "Body": "<p>It is there to ease the use of these kind of iterators, for both the standard algorithms and client users.</p>\n<p>For example (remember that <code>RandomAccessIterator</code> is a subtype of <code>ForwardIterator</code>):</p>\n<pre><code>template &lt;class RandomAccessIterator&gt;\n  void sort ( RandomAccessIterator first, RandomAccessIterator last )\n{\n    RandomAccessIterator pivot, i, j;\n    //do your sorting algorithm        \n}\n</code></pre>\n<p>If they were not default constructible you would need to assign them to <code>first</code> or <code>last</code> just for it to compile.</p>\n<p>You do not need it to be set to a default value. Any use of such uninitialized iterator is undefined. Not that is would not be wise to add some check, particularly in debug builds.</p>\n<p>And no, you should not throw in the default constructor. It would be technically conformant, but many algorithms will fail unexpectedly.</p>\n", "LastActivityDate": "2012-05-01T10:56:00.337", "CommentCount": "5", "CreationDate": "2012-05-01T10:56:00.337", "ParentId": "10396278", "Score": "4", "OwnerUserId": "865874"}, "10396278": {"ViewCount": "327", "Body": "<p>I cannot seem to find any standard algorithms that would demonstrate the requirement for default-constructing a <code>ForwardIterator</code>.</p>\n<p>Is there any actual reason for it, or am I safe to ignore it?</p>\n", "AcceptedAnswerId": "10396735", "Title": "Why are ForwardIterators required to model DefaultConstructible?", "CreationDate": "2012-05-01T10:12:27.510", "Id": "10396278", "CommentCount": "5", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2012-05-01T11:21:13.557", "Score": "10", "OwnerUserId": "481760", "Tags": "<c++><iterator>", "AnswerCount": "2"}});