post_cb({"bq_ids": {"n4140": {"so_12859831_12860580_0": {"length": 26, "quality": 0.9629629629629629, "section_id": 5908}}, "n3337": {"so_12859831_12860580_0": {"length": 26, "quality": 0.9629629629629629, "section_id": 5680}}, "n4659": {"so_12859831_12860580_0": {"length": 26, "quality": 0.9629629629629629, "section_id": 7390}}}, "12859831": {"ViewCount": "486", "Body": "<p>I had to switch from g++-4.6 to 4.7 (so I can use some C++11 features). Now, the compiler complains:</p>\n<p><code>In function WordJIT&lt;float&gt;::WordJIT(): undefined reference to JitRegType&lt;float&gt;::Val_t</code></p>\n<p>I am wondering if something has changed between these compiler version that can affect symbol resolving. Or is the language better implemented in the new version (4.7) and what I am doing is wrong: (same code compiles with 4.6)</p>\n<h2>jit.h</h2>\n<pre><code>class Jit {\n  public:\n    enum RegType { f32=0,f64=1,u16=2,u32=3,u64=4,s16=5,s32=6,s64=7 };\n  // ...\n};\n\ntemplate &lt;class T&gt; struct JitRegType {};\ntemplate &lt;&gt; struct JitRegType&lt;float&gt;  { static const Jit::RegType Val_t = Jit::f32; };\n</code></pre>\n<h2>wordjit.h</h2>\n<pre><code>  #include \"jit.h\"\n\n  template&lt;class T&gt;\n  class WordJIT \n  {\n    WordJIT() {\n      mapReg.insert( std::make_pair( JitRegType&lt;T&gt;::Val_t , jit.getRegs( JitRegType&lt;T&gt;::Val_t , 1 ) ) );\n    }\n    private:\n      typedef std::map&lt; Jit::RegType , int &gt; MapRegType;\n      mutable MapRegType mapReg;\n  };\n</code></pre>\n<h2>Edit:</h2>\n<p>Is <code>static const</code> okay in a header file or should one use <code>constexpr</code> ?</p>\n<p>Is there a way to declare also <code>Val_t</code> in the class declaration of <code>JitRegType</code> but not actually define it ?</p>\n", "AcceptedAnswerId": "12860580", "Title": "Undefined reference when changing from GCC 4.6 to 4.7", "CreationDate": "2012-10-12T13:10:53.533", "Id": "12859831", "CommentCount": "15", "LastEditDate": "2012-10-12T13:22:12.770", "PostTypeId": "1", "LastEditorUserId": "712302", "LastActivityDate": "2012-10-12T14:13:42.673", "Score": "2", "OwnerUserId": "712302", "Tags": "<c++><static><c++11><constants>", "AnswerCount": "1"}, "12860580": {"Id": "12860580", "PostTypeId": "2", "Body": "<p>Per 9.4.2p3:</p>\n<blockquote>\n<p id=\"so_12859831_12860580_0\">If a non-volatile <em>const static</em> data member is of integral or enumeration type, its declaration in the class definition can specify a <em>brace-or-equal-initializer</em> [...] The member shall still be defined in a namespace scope if it is odr-used in the program and the namespace scope definition shall not contain an <em>initializer</em>.</p>\n</blockquote>\n<p>So you need to add to your program (probably in <code>jit.cpp</code>):</p>\n<pre><code>const Jit::RegType JitRegType&lt;float&gt;::Val_t;\n</code></pre>\n<p>This is so that if the <code>static const</code> member is used in a context where a reference to it is required, there exists a unique definition for the linker to refer to (the same as any <code>static</code> member that is not a member of a class template or class template partial specialization).</p>\n<p>The issue is discussed in depth <a href=\"http://gcc.gnu.org/wiki/VerboseDiagnostics#missing_static_const_definition\" rel=\"nofollow\">on the gcc wiki</a>.</p>\n<p>Note that both gcc 4.6 and 4.7 are behaving sensibly; it is just that gcc 4.6 chooses to inline the value of <code>JitRegType&lt;float&gt;::Val_t</code> where gcc 4.7 chooses not to (or possibly is inlining it but emitting a linker reference to the definition as well).  It's a little difficult to tell whether the implementation is required to issue a diagnostic; 9.4.2p3 describes a diagnosable rule but then 9.4.2p4 (implicitly referring to non-<code>const</code> <code>static</code> data members) says that a diagnostic is not required.  Either way, as a quality of implementation issue it's better that a compiler issue a diagnostic than not.</p>\n", "LastEditorUserId": "567292", "LastActivityDate": "2012-10-12T14:13:42.673", "Score": "5", "CreationDate": "2012-10-12T13:52:18.883", "ParentId": "12859831", "CommentCount": "3", "OwnerUserId": "567292", "LastEditDate": "2012-10-12T14:13:42.673"}});