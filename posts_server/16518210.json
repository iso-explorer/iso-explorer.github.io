post_cb({"16518210": {"CommentCount": "2", "AcceptedAnswerId": "16518250", "PostTypeId": "1", "LastEditorUserId": "661519", "CreationDate": "2013-05-13T08:58:39.530", "LastActivityDate": "2013-05-13T09:24:38.083", "LastEditDate": "2013-05-13T09:00:07.877", "ViewCount": "14523", "FavoriteCount": "1", "Title": "'sqrt' is not a member of 'std'", "Id": "16518210", "Score": "6", "Body": "<p>I compile my program in linux - it has the following line :</p>\n<pre><code>std::sqrt((double)num);\n</code></pre>\n<p>On windows it is ok,but on linux I get 'sqrt' is not a member of 'std'\nI have an include for math.h </p>\n<p>what is a problem with it?</p>\n", "Tags": "<c++><math><std><sqrt>", "OwnerUserId": "466056", "AnswerCount": "2"}, "16518250": {"ParentId": "16518210", "CommentCount": "4", "Body": "<p>Change the directive to <code>#include &lt;cmath&gt;</code>. C++ headers of the form <code>&lt;cxxxxxxx&gt;</code> are guaranteed to have the standard names in <code>std</code> namespace (and may optionaly provide them in global namespace). <code>&lt;xxxxxx.h&gt;</code> are not.</p>\n", "OwnerUserId": "947836", "PostTypeId": "2", "Id": "16518250", "Score": "12", "CreationDate": "2013-05-13T09:01:04.580", "LastActivityDate": "2013-05-13T09:01:04.580"}, "16518251": {"ParentId": "16518210", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>it is simply because <code>&lt;math.h&gt;</code> does not declare the functions in <code>namespace std</code>. It has been included into the C++ standard only for compatibility reasons. The correct C++ include would be <code>&lt;cmath&gt;</code>. </p>\n<p><strong>\u00a7D.5,2</strong></p>\n<blockquote>\n<p id=\"so_16518210_16518251_0\">Every C header, each of which has a name of the form <code>name.h</code>, behaves as if each name placed in the standard library namespace by the corresponding <code>cname</code> header is placed within the global namespace scope. It is unspecified whether these names are first declared or defined within namespace scope of the namespace <code>std</code> and are then injected into the global namespace scope by explicit <em>using-declarations</em>.</p>\n</blockquote>\n<p>That your code worked under windows was pure luck - if you want to call it so. The last sentence gives a hint what might happen under windows, but not under linux: under windows, obviously the names are valid in both the global namespace and namespace <code>std</code>.</p>\n", "OwnerUserId": "1838266", "LastEditorUserId": "1838266", "LastEditDate": "2013-05-13T09:24:38.083", "Id": "16518251", "Score": "2", "CreationDate": "2013-05-13T09:01:04.893", "LastActivityDate": "2013-05-13T09:24:38.083"}, "bq_ids": {"n4140": {"so_16518210_16518251_0": {"section_id": 4907, "quality": 0.9743589743589743, "length": 38}}, "n3337": {"so_16518210_16518251_0": {"section_id": 4702, "quality": 0.9743589743589743, "length": 38}}, "n4659": {"so_16518210_16518251_0": {"section_id": 6316, "quality": 0.9743589743589743, "length": 38}}}});