post_cb({"25693182": {"CommentCount": "0", "ViewCount": "145", "PostTypeId": "1", "LastEditorUserId": "483486", "CreationDate": "2014-09-05T20:01:53.873", "LastActivityDate": "2014-09-05T22:20:27.943", "Title": "Assign char16_t with character literal codepoints outside of basic multilingual plane", "AcceptedAnswerId": "25694756", "LastEditDate": "2014-09-05T20:59:59.220", "Id": "25693182", "Score": "2", "Body": "<p>In a talk I watched on Unicode earlier today, there was some confusion about what should happen when you attempt to assign a character literal that's too long to be represented by the <code>char16_t</code> type.  The presenter says that based on a reading of the standard, the program ought to be ill-formed, but that gcc accepts it anyway.  He didn't clarify, and Youtube doesn't allow me to ask questions.</p>\n<p>My own testing confirms that the following code is accepted by g++-4.8 and g++-4.9. (with warnings.)</p>\n<pre><code>int main() {\n  char16_t a = u'\\U0001F378';\n}\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/6cb2206660407a8d\" rel=\"nofollow\">http://coliru.stacked-crooked.com/a/6cb2206660407a8d</a><br>\n<a href=\"https://eval.in/188979\" rel=\"nofollow\">https://eval.in/188979</a></br></p>\n<p>On the other hand clang 3.4 generates an error.</p>\n<p>Which compiler is correct?  I can't find the chapter and verse for this.</p>\n<p>Additional small question, the character literal section \u00a72.14.3 does not mention the <code>\\u</code> and <code>\\U</code> escape sequences in the W-grammar or in the section body.  Is this an oversight?</p>\n", "Tags": "<c++><unicode><language-lawyer><utf-16><string-literals>", "OwnerUserId": "483486", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_25693182_25694756_0": {"section_id": 5344, "quality": 0.9318181818181818, "length": 41}}, "n3337": {"so_25693182_25694756_0": {"section_id": 5141, "quality": 0.9318181818181818, "length": 41}}, "n4659": {"so_25693182_25694756_0": {"section_id": 6767, "quality": 0.9318181818181818, "length": 41}}}, "25694756": {"ParentId": "25693182", "CommentCount": "2", "Body": "<p>The program is ill-formed and should fail to compile.</p>\n<blockquote>\n<p id=\"so_25693182_25694756_0\"><strong>2.14.3/2</strong> A character literal that begins with the letter u, such as u\u2019y\u2019, is a character literal of type char16_t. The\n  value of a char16_t literal containing a single c-char is equal to its ISO 10646 code point value, provided that\n  the code point is representable with a single 16-bit code unit. (That is, provided it is a basic multi-lingual\n  plane code point.) If the value is not representable within 16 bits, <strong>the program is ill-formed</strong>...</p>\n</blockquote>\n<p>Emphasis mine.</p>\n<p><code>\\u</code> and <code>\\U</code> are not escape sequences within the meaning of <strong>2.14.3</strong>. They are universal character names, described in <strong>2.3/2</strong>. They are not limited to character and string literals, but may appear <a href=\"http://coliru.stacked-crooked.com/a/86f0654b3668bbbc\" rel=\"nofollow\">anywhere in the program</a>:</p>\n<pre><code>int main() {\n    int \\u0410 = 42;\n    return \\u0410;\n}\n</code></pre>\n<p><code>\\u0410</code> is <code>A</code>, aka Cyrillic Capital Letter A.</p>\n", "OwnerUserId": "1670129", "PostTypeId": "2", "Id": "25694756", "Score": "3", "CreationDate": "2014-09-05T22:20:27.943", "LastActivityDate": "2014-09-05T22:20:27.943"}});