post_cb({"39069417": {"LastActivityDate": "2016-08-21T22:48:44.570", "CommentCount": "7", "Body": "<p>Because the memory used for a <code>std::string</code> has to be contiguous, there can't be a way to steal the memory of two independent strings.</p>\n<p>From C++14, section 21.4.1/4:</p>\n<blockquote>\n<p id=\"so_39069377_39069417_0\">The char-like objects in a basic_string object shall be stored contiguously. That is, for any <code>basic_string</code>\n  object s, the identity <code>&amp;*(s.begin() + n) == &amp;*s.begin() + n</code> shall hold for all values of n such that 0\n  &lt;= n &lt; s.size().</p>\n</blockquote>\n", "CreationDate": "2016-08-21T22:30:49.827", "LastEditDate": "2016-08-21T22:48:44.570", "ParentId": "39069377", "Id": "39069417", "LastEditorUserId": "951890", "PostTypeId": "2", "Score": "1", "OwnerUserId": "951890"}, "bq_ids": {"n4140": {"so_39069377_39069417_0": {"length": 14, "quality": 0.7777777777777778, "section_id": 1566}}, "n3337": {"so_39069377_39069417_0": {"length": 14, "quality": 0.7777777777777778, "section_id": 1561}}}, "39069377": {"CreationDate": "2016-08-21T22:24:47.030", "ViewCount": "31", "Id": "39069377", "AcceptedAnswerId": "39069417", "Score": "1", "Title": "Move strings into another string with enough capacity", "LastEditorUserId": "3563841", "CommentCount": "5", "Body": "<pre><code>int main() {\n   std::string str;\n   str.reserve(9999);\n\n   {\n      std::string s1(\"aaa\");\n      std::string s2(\"bbb\");\n      // can both strings s1, s2 be moved to str?\n      // for example str should be \"aaabbb\"\n    }\n\n}\n</code></pre>\n<p>My question: is it possible to steal the memory of <code>s1</code> and <code>s2</code> to form a concatenated string of <code>s1</code> and <code>s2</code> (since it already has enough space for both)?</p>\n", "Tags": "<c++11>", "LastEditDate": "2016-08-22T00:32:00.827", "LastActivityDate": "2016-08-22T00:32:00.827", "PostTypeId": "1", "AnswerCount": "1", "OwnerUserId": "4558644"}});