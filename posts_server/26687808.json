post_cb({"26687808": {"ViewCount": "114", "Body": "<p>While digging deep into MFC, I found this code:</p>\n<pre><code>_AFXWIN_INLINE HWND CWnd::GetSafeHwnd() const\n    { return this == NULL ? NULL : m_hWnd; }\n</code></pre>\n<p>It seems to be used in this way.</p>\n<pre><code>CWnd *pWnd = nullptr;\npWnd-&gt;GetSafeHwnd(); // NULL\npWnd = /* something */;\npWnd-&gt;GetSafeHwnd(); // window handle\n</code></pre>\n<p>At this point, I've got confused - we're now calling a member function with <strong>NULL</strong> object! How can it be legal C++?</p>\n", "AcceptedAnswerId": "26687847", "Title": "C++ : ((A*)nullptr)->foo(); is legal?", "CreationDate": "2014-11-01T09:21:33.763", "Id": "26687808", "CommentCount": "2", "PostTypeId": "1", "LastActivityDate": "2014-11-01T09:27:02.470", "Score": "2", "OwnerUserId": "2729109", "Tags": "<c++><language-lawyer>", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_26687808_26687847_0": {"length": 11, "quality": 1.0, "section_id": 5890}}, "n3337": {"so_26687808_26687847_0": {"length": 11, "quality": 1.0, "section_id": 5661}}, "n4659": {"so_26687808_26687847_0": {"length": 11, "quality": 1.0, "section_id": 7373}}}, "26687847": {"Id": "26687847", "PostTypeId": "2", "Body": "<p>This is the plainest of undefined behavior as far as the language is concerned. \u00a79.3.1 [class.mfct.non-static]/p2:</p>\n<blockquote>\n<p id=\"so_26687808_26687847_0\">If a non-static member function of a class <code>X</code> is called for an object\n  that is not of type <code>X</code>, or of a type derived from <code>X</code>, the behavior\n  is undefined.</p>\n</blockquote>\n<p>Presumably, whoever wrote this function knows that Microsoft's compiler won't do anything crazy in this particular case, as being \"safe\" to call on a null <code>CWnd *</code> appears to be the whole point for its existence(!).</p>\n", "LastActivityDate": "2014-11-01T09:27:02.470", "CommentCount": "5", "CreationDate": "2014-11-01T09:27:02.470", "ParentId": "26687808", "Score": "2", "OwnerUserId": "2756719"}});