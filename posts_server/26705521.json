post_cb({"bq_ids": {"n4140": {"so_26705521_26705571_0": {"length": 27, "quality": 1.0, "section_id": 6107}}, "n3337": {"so_26705521_26705571_0": {"length": 27, "quality": 1.0, "section_id": 5873}}, "n4659": {"so_26705521_26705571_0": {"length": 27, "quality": 1.0, "section_id": 7604}}}, "26705521": {"ViewCount": "207", "Body": "<p>Does the following code violate the C++11 standard in any way? I get a failed assertion in VC++ 2013.</p>\n<pre><code>class P {};\n\nclass C : public P\n{\npublic:\n    virtual void a() {}\n};\n\nint main()\n{\n    P* p = new C();\n    delete p;\n}\n</code></pre>\n<hr>\n<p>The failed assertion is:</p>\n<pre><code>File: f:\\dd\\vctools\\crt\\crtw32\\misc\\dbgdel.cpp\nLine: 52\n\nExpression: _BLOCK_TYPE_IS_VALID(pHead-&gt;nBlockUse)\n</code></pre>\n</hr>", "AcceptedAnswerId": "26705571", "Title": "Issue with Using Polymorphism While Only Child Class has a Virtual Method", "CreationDate": "2014-11-02T23:07:29.890", "Id": "26705521", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2014-11-02T23:13:11.937", "Score": "2", "OwnerUserId": "3546108", "Tags": "<c++><c++11>", "AnswerCount": "1"}, "26705571": {"Id": "26705571", "PostTypeId": "2", "Body": "<p>Yes,</p>\n<pre><code>delete p;\n</code></pre>\n<p>has Undefined Behavior since the dynamic type of the pointee is different from the statically known type, and the latter doesn't have a virtual destructor.</p>\n<p>C++11 \u00a75.3.5/3:</p>\n<blockquote>\n<p id=\"so_26705521_26705571_0\"><strong>\u201d</strong> In the first alternative (<em>delete object</em>), if the static type of the object to be deleted is different from its\n  dynamic type, the static type shall be a base class of the dynamic type of the object to be deleted and the\n  static type shall have a virtual destructor or the behavior is undefined</p>\n</blockquote>\n", "LastActivityDate": "2014-11-02T23:13:11.937", "CommentCount": "4", "CreationDate": "2014-11-02T23:13:11.937", "ParentId": "26705521", "Score": "8", "OwnerUserId": "464581"}});