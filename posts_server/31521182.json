post_cb({"bq_ids": {"n4140": {"so_31521182_31521467_0": {"length": 43, "quality": 0.9148936170212766, "section_id": 6973}}, "n3337": {"so_31521182_31521467_0": {"length": 36, "quality": 0.7659574468085106, "section_id": 6719}}}, "31521467": {"Id": "31521467", "PostTypeId": "2", "Body": "<p>A C++14 draft standard <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4296.pdf\" rel=\"nofollow\">N4296</a> says:</p>\n<blockquote>\n<p id=\"so_31521182_31521467_0\"><strong>[support.runtime]/10</strong> The common subset of the C and C++ languages consists of all declarations, definitions, and expressions\n  that may appear in a well formed C++ program and also in a conforming C program. A POF (\u201cplain old\n  function\u201d) is a function that uses only features from this common subset, and that does not directly or indirectly use any function that is not a POF, except that it may use plain lock-free atomic operations... <strong>The behavior of any\n  function other than a POF used as a signal handler in a C++ program is implementation-defined.</strong></p>\n</blockquote>\n<p>Emphasis mine.</p>\n", "LastEditorUserId": "1774667", "LastActivityDate": "2015-07-20T19:12:22.613", "CommentCount": "2", "CreationDate": "2015-07-20T16:18:14.897", "ParentId": "31521182", "Score": "6", "OwnerUserId": "1670129", "LastEditDate": "2015-07-20T19:12:22.613"}, "31521182": {"ViewCount": "508", "Body": "<p>Is it safe to use <a href=\"http://en.cppreference.com/w/cpp/thread/condition_variable/notify_one\" rel=\"noreferrer\"><code>std::condition_variable::notify_one</code></a> in signal handler? Example:</p>\n<pre><code>enum State {\n  DoNot,\n  Do,\n};\nState state;\nstd::mutex mutex;\n\n// worker thread\nstd::thread th = std::thread([]()\n{\n    std::unique_lock&lt;std::mutex&gt; lc(mutex);\n    cv.wait(lc, []() { return state; });\n});\n\n//signal handler\nvoid handler(int sig)\n{\n    if (sig == SOME_SIG)\n    {\n        std::unique_lock&lt;std::mutex&gt; lc(mutex);\n        state = Do;\n        cv.notify_one();\n    }\n}\n</code></pre>\n", "Title": "c++11 use condition variable in signal handler", "CreationDate": "2015-07-20T16:03:55.367", "LastActivityDate": "2015-07-20T19:12:22.613", "CommentCount": "0", "LastEditDate": "2015-07-20T17:49:18.397", "PostTypeId": "1", "LastEditorUserId": "104427", "Id": "31521182", "Score": "7", "OwnerUserId": "1278261", "Tags": "<c++><c++11><signals><posix>", "AnswerCount": "1"}});