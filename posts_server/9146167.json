post_cb({"bq_ids": {"n4140": {"so_9146167_9146523_0": {"length": 9, "quality": 0.9, "section_id": 5414}}, "n3337": {"so_9146167_9146523_0": {"length": 9, "quality": 0.9, "section_id": 5209}}, "n4659": {"so_9146167_9146523_0": {"length": 9, "quality": 0.9, "section_id": 6836}}}, "9146167": {"ViewCount": "520", "Body": "<p>Given the following code:</p>\n<pre><code>class Named {\n  class /*Unnamed*/ {\n    void Function();\n  } un;\n};\n\n// Implement Named::Unnamed::Function here\n\nint main() {\n  Named named;\n  named.un.Function();\n}\n</code></pre>\n<p>Is there any way to implement Named::Unnamed::Function without either naming Unnamed or embedding the function's definition within the definition of Named?</p>\n<p>I'm guessing the answer is \"no\", but GCC gives me the useful message \"undefined reference to `Named::{unnamed type#2}::Function()', and it occured to me there might be some crazy possible syntax.</p>\n", "AcceptedAnswerId": "9146523", "Title": "C++: Implementing a function defined inside an anonymous structure", "CreationDate": "2012-02-05T01:28:23.543", "Id": "9146167", "CommentCount": "3", "FavoriteCount": "1", "PostTypeId": "1", "LastActivityDate": "2012-02-05T03:11:42.030", "Score": "3", "OwnerUserId": "205322", "Tags": "<c++>", "AnswerCount": "1"}, "9146523": {"Id": "9146523", "PostTypeId": "2", "Body": "<p>This is actually possible (in C++11), and in two ways:</p>\n<pre><code>struct Named {\n  struct /*Unnamed*/ {\n    void Function();\n  } un;\n  typedef decltype(un) Unnamed;\n};\n\n// #1\nvoid Named::Unnamed::Function(){\n}\n\n//// #2\n//typedef decltype(Named::un) Unnamed;\n//void Unnamed::Function(){\n//}\n//// same way, using template alias\n//template&lt;class T&gt; using alias = T;\n//void alias&lt;decltype(Unnamed::un)&gt;::Function(){\n//}\n\nint main() {\n  Named named;\n  named.un.Function();\n}\n</code></pre>\n<p><a href=\"http://ideone.com/4LwlQ\">Live example on Ideone.</a></p>\n<p>This is possible thanks to <code>$9.1 [class.name] p5</code>:</p>\n<blockquote>\n<p id=\"so_9146167_9146523_0\">A <em>typedef-name</em> (7.1.3) that names a class type, or a cv-qualified version thereof, is also a <em>class-name</em>.</p>\n</blockquote>\n", "LastEditorUserId": "500104", "LastActivityDate": "2012-02-05T03:11:42.030", "Score": "11", "CreationDate": "2012-02-05T02:46:59.920", "ParentId": "9146167", "CommentCount": "1", "OwnerUserId": "500104", "LastEditDate": "2012-02-05T03:11:42.030"}});