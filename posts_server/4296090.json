post_cb({"4296090": {"ViewCount": "277", "Body": "<p>I am using g++ in CodeBlocks IDE in Ubuntu.\nI am new to STL and some part of C++.</p>\n<p>Q1: //answered</p>\n<pre><code>std::istream_iterator&lt; std::string &gt; begin ( dictionaryFile );\nstd::istream_iterator&lt; std::string &gt; end;\nstd::vector&lt; std::string&gt; dictionary;\nstd::copy ( begin, end, std::back_inserter ( dictionary ) );\n</code></pre>\n<p>is correct, but when I changed </p>\n<pre><code>std::istream_iterator&lt; std::string &gt; end;\n</code></pre>\n<p>into</p>\n<pre><code>std::istream_iterator&lt; std::string &gt; end();\n</code></pre>\n<p>the compiler says no matching function call at the fourth line.</p>\n<p>Q2: //sorry i did not make the problem clear the first time</p>\n<pre><code>struct PS : std::pair&lt; std::string, std::string &gt; {\nPS();\nstatic struct FirstLess: std::binary_function&lt; PS, PS, bool&gt; {\n    bool operator() ( const PS &amp; p, const PS &amp; q ) const {\n        return p.first &lt; q.first;\n    }\n} firstLess1; };\n\n\nstruct FirstLess: std::binary_function&lt; PS, PS, bool&gt; {\nbool operator() ( const PS &amp; p, const PS &amp; q ) const {\n    return p.first &lt; q.first;\n}} firstLess2;\n</code></pre>\n<p>Note that the only difference between firstLess1 and firstLess2 is that firstLess1 is declared in PS.</p>\n<p>when I call the function :</p>\n<pre><code>k = std::find_if ( j + 1, finis, std::not1 ( std::bind1st ( PS::firstLess1, *j ) ) );\n</code></pre>\n<p>the compiler gave me an error 'undefined reference to PS::firstLess1'.\nand then I changed to</p>\n<pre><code>k = std::find_if ( j + 1, finis, std::not1 ( std::bind1st ( firstLess2, *j ) ) );\n</code></pre>\n<p>then it passed the compile. </p>\n<p>More strange, in some other part of the program, i used both</p>\n<pre><code>j = std::adjacent_find ( j , finis, PS::firstLess1 );\nj = std::adjacent_find ( j , finis, firstLess2 );\n</code></pre>\n<p>and the compiler did not gave me an error.</p>\n", "AcceptedAnswerId": "4296118", "Title": "Some Problems while learning STL", "CreationDate": "2010-11-28T09:01:41.280", "Id": "4296090", "CommentCount": "1", "LastEditDate": "2010-11-28T10:09:38.677", "PostTypeId": "1", "LastEditorUserId": "522829", "LastActivityDate": "2010-11-28T11:12:34.663", "Score": "3", "OwnerUserId": "522829", "Tags": "<c++><stl>", "AnswerCount": "3"}, "bq_ids": {"n4140": {"so_4296090_4296195_3": {"length": 9, "quality": 1.0, "section_id": 3290}, "so_4296090_4296195_0": {"length": 7, "quality": 1.0, "section_id": 3290}}, "n3337": {"so_4296090_4296195_3": {"length": 9, "quality": 1.0, "section_id": 3160}, "so_4296090_4296195_0": {"length": 7, "quality": 1.0, "section_id": 3160}}, "n4659": {"so_4296090_4296195_3": {"length": 9, "quality": 1.0, "section_id": 4052}, "so_4296090_4296195_0": {"length": 7, "quality": 1.0, "section_id": 4052}}}, "4296195": {"Id": "4296195", "PostTypeId": "2", "Body": "<p>A1:</p>\n<blockquote>\n<p id=\"so_4296090_4296195_0\">An object whose initializer is an empty set of parentheses, i.e., (), shall be value-initialized.</p>\n<p id=\"so_4296090_4296195_1\">[ Note: since () is not permitted by the syntax for initializer,</p>\n<p id=\"so_4296090_4296195_2\">X a ();</p>\n<p id=\"so_4296090_4296195_3\">is not the declaration of an object of class X, but the declaration of a function taking no argument and returning an X.</p>\n<p id=\"so_4296090_4296195_4\">The form () is permitted in certain other initialization contexts (5.3.4, 5.2.3, 12.6.2). \u2014 end note ]</p>\n</blockquote>\n<p>A2:</p>\n<p>I'm not really sure what you want, std::find_if and std::adjacent_find do something comepletely different. But anyway, here is some working code inspired by yours.</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\n#include &lt;string&gt;\n#include &lt;vector&gt;\n\ntypedef std::pair&lt;std::string, std::string&gt; TwoStrings;\n\nstruct FirstLess : std::binary_function&lt;TwoStrings, TwoStrings, bool&gt;\n{\n    bool operator() (const TwoStrings&amp; p, const TwoStrings&amp; q) const {\n        return p.first &lt; q.first;\n    }\n};\n\nint main()\n{\n    std::vector&lt;TwoStrings&gt; v;\n    std::vector&lt;TwoStrings&gt;::iterator it;\n    v.push_back(TwoStrings(\"4. Here's \", \"Johnny\"));\n    v.push_back(TwoStrings(\"1. Here's \", \"Johnny\"));\n    v.push_back(TwoStrings(\"2. Here's \", \"Johnny\"));\n    v.push_back(TwoStrings(\"2. Here's \", \"Johnny\"));\n    v.push_back(TwoStrings(\"3. Here's \", \"Johnny\"));\n\n    it = std::adjacent_find(v.begin(), v.end(), FirstLess());\n    std::cout &lt;&lt; it-&gt;first &lt;&lt; it-&gt;second &lt;&lt; std::endl;\n\n    it = std::find_if(v.begin() , v.end(), std::not1(std::bind1st(FirstLess(), *(v.begin()))));\n    std::cout &lt;&lt; it-&gt;first &lt;&lt; it-&gt;second &lt;&lt; std::endl;\n}\n</code></pre>\n<p>A the output is:</p>\n<pre><code>1. Here's Johnny\n4. Here's Johnny\n</code></pre>\n", "LastActivityDate": "2010-11-28T09:38:38.633", "CommentCount": "0", "CreationDate": "2010-11-28T09:38:38.633", "ParentId": "4296090", "Score": "1", "OwnerUserId": "366672"}, "4296260": {"Id": "4296260", "PostTypeId": "2", "Body": "<p>A1: already answered sufficiently <br>\nA2: <s>add a const to the declaration of firstLess, OR</s> define the firstLess object in a cpp file (see <a href=\"http://publib.boulder.ibm.com/infocenter/comphelp/v8v101/topic/com.ibm.xlcpp8a.doc/language/ref/cplr038.htm\" rel=\"nofollow\">this</a>)</br></p>\n", "LastEditorUserId": "231717", "LastActivityDate": "2010-11-28T11:12:34.663", "Score": "2", "CreationDate": "2010-11-28T09:59:10.863", "ParentId": "4296090", "CommentCount": "3", "OwnerUserId": "231717", "LastEditDate": "2010-11-28T11:12:34.663"}, "4296118": {"Id": "4296118", "PostTypeId": "2", "Body": "<p><code>std::istream_iterator&lt; std::string &gt; end();</code> C++ interpretes this as declaration of function which name is <code>end</code> return value type is <code>std::istream_iterator&lt; std::string &gt;</code> and argument list is empty. Thats why you get such error. In C++ to make any object by calling default constructor of its class you just must do this <code>type_name variable_name;</code>. <code>type_name variable_name();</code> will be interpreted as function declaration.</p>\n", "LastActivityDate": "2010-11-28T09:10:11.983", "CommentCount": "1", "CreationDate": "2010-11-28T09:10:11.983", "ParentId": "4296090", "Score": "4", "OwnerUserId": "509233"}});