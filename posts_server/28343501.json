post_cb({"28343676": {"ParentId": "28343501", "CommentCount": "3", "Body": "<p>It's invalid. The behaviour is undefined, so no diagnostic is required, and implementations are allowed to accept the code.</p>\n<p>From the C standard, 6.10.3 Macro replacement:</p>\n<blockquote>\n<p id=\"so_28343501_28343676_0\">11 [...] If there are sequences of preprocessing tokens within the list of arguments that would otherwise act as preprocessing directives, the behavior is undefined.</p>\n</blockquote>\n<p>The C++ standard contains these exact same words in 16.3 Macro replacement.</p>\n", "OwnerUserId": "743382", "PostTypeId": "2", "Id": "28343676", "Score": "7", "CreationDate": "2015-02-05T12:12:52.803", "LastActivityDate": "2015-02-05T12:12:52.803"}, "28343501": {"CommentCount": "1", "ViewCount": "545", "CreationDate": "2015-02-05T12:04:10.423", "LastActivityDate": "2015-02-05T12:13:36.900", "Title": "Is it legal to use the #line directive in a macro argument?", "AcceptedAnswerId": "28343676", "PostTypeId": "1", "Id": "28343501", "Score": "2", "Body": "<p>I noticed that this program compiles with gcc:</p>\n<pre><code>#define X(A) A\n\nint x = X(\n#line 3 \"test1.c\"\n        0\n        );\n</code></pre>\n<p>However, Visual Studio fails to compile it:</p>\n<pre><code>main.cpp\nmain.cpp(6): error C2121: '#': invalid character: possibly the result of a macro expansion\nmain.cpp(6): error C2065: 'line': undeclared identifier\nmain.cpp(6): error C2143: syntax error: missing ';' before 'constant'\nmain.cpp(6): error C2059: syntax error: 'constant'\n</code></pre>\n<p>I wonder: is the program even legal, or is it silently relying on undefined (or implementation defined) behaviour which happens to make gcc accept the code?</p>\n", "Tags": "<c++><c><visual-studio><gcc>", "OwnerUserId": "91757", "AnswerCount": "2"}, "28343694": {"ParentId": "28343501", "CommentCount": "0", "Body": "<p>If you compile the example with all warnings, gcc gives you:</p>\n<blockquote>\n<p id=\"so_28343501_28343694_0\">warning: embedding a directive within macro arguments is not portable</p>\n</blockquote>\n<p>and clang gives you:</p>\n<blockquote>\n<p id=\"so_28343501_28343694_1\">warning: embedding a directive within macro arguments has undefined behavior</p>\n</blockquote>\n<p>which definitely strongly suggests to me that the behavior is, indeed, undefined. </p>\n", "OwnerUserId": "2069064", "PostTypeId": "2", "Id": "28343694", "Score": "3", "CreationDate": "2015-02-05T12:13:36.900", "LastActivityDate": "2015-02-05T12:13:36.900"}, "bq_ids": {"n4140": {"so_28343501_28343676_0": {"section_id": 521, "quality": 1.0, "length": 14}}, "n3337": {"so_28343501_28343676_0": {"section_id": 512, "quality": 1.0, "length": 14}}, "n4659": {"so_28343501_28343676_0": {"section_id": 542, "quality": 1.0, "length": 14}}}});