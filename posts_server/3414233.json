post_cb({"3414252": {"Id": "3414252", "PostTypeId": "2", "Body": "<p>Plain <code>int</code> is the same as <code>signed</code> is the same as <code>signed int</code></p>\n", "LastActivityDate": "2010-08-05T11:33:25.573", "CommentCount": "3", "CreationDate": "2010-08-05T11:33:25.573", "ParentId": "3414233", "Score": "15", "OwnerUserId": "5597"}, "3414268": {"Id": "3414268", "PostTypeId": "2", "Body": "<p>C++ Standard 3.9.1/2:</p>\n<blockquote>\n<p id=\"so_3414233_3414268_0\">There are four <strong><em>signed integer types</em></strong>: \u201csigned char\u201d, \u201cshort int\u201d, \u201cint\u201d, and \u201clong int.\u201d &lt;...&gt;</p>\n</blockquote>\n<p>C++ Standard 3.9.1/3:</p>\n<blockquote>\n<p id=\"so_3414233_3414268_1\">For each of the signed integer types, there exists a corresponding (<em>but different</em>) <strong><em>unsigned integer type</em></strong>:\n  \u201cunsigned char\u201d, \u201cunsigned short int\u201d, \u201cunsigned int\u201d, and \u201cunsigned long\n  int,\u201d &lt;...&gt;</p>\n</blockquote>\n<p>So, <code>sizeof(int)</code> is equal to <code>sizeof(unsigned)</code>. But <code>boost::is_same&lt; int, unsigned &gt;::value</code> is false.</p>\n", "LastActivityDate": "2010-08-05T11:37:45.610", "CommentCount": "1", "CreationDate": "2010-08-05T11:37:45.610", "ParentId": "3414233", "Score": "12", "OwnerUserId": "123111"}, "3414273": {"Id": "3414273", "PostTypeId": "2", "Body": "<p><code>signed int</code> is the same as <code>int</code> and specifies an integer value that can have both positive and negative values.</p>\n<p><code>unsigned int</code> on the other hand can only have positive values, so the greatest positive value is much larger than that of a <code>signed int</code>.</p>\n", "LastEditorUserId": "192308", "LastActivityDate": "2010-08-05T12:10:10.630", "Score": "1", "CreationDate": "2010-08-05T11:38:44.640", "ParentId": "3414233", "CommentCount": "2", "OwnerUserId": "192308", "LastEditDate": "2010-08-05T12:10:10.630"}, "3414254": {"Id": "3414254", "PostTypeId": "2", "Body": "<p><code>int</code>s are signed by default.</p>\n", "LastActivityDate": "2010-08-05T11:33:46.973", "CommentCount": "0", "CreationDate": "2010-08-05T11:33:46.973", "ParentId": "3414233", "Score": "2", "OwnerUserId": "319403"}, "bq_ids": {"n4140": {"so_3414233_3414268_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 7211}, "so_3414233_3414268_1": {"length": 22, "quality": 0.9565217391304348, "section_id": 7212}}, "n3337": {"so_3414233_3414268_0": {"length": 11, "quality": 0.9166666666666666, "section_id": 6955}, "so_3414233_3414268_1": {"length": 22, "quality": 0.9565217391304348, "section_id": 6956}}, "n4659": {"so_3414233_3414268_0": {"length": 10, "quality": 0.8333333333333334, "section_id": 8720}, "so_3414233_3414268_1": {"length": 22, "quality": 0.9565217391304348, "section_id": 8721}}}, "3414278": {"Id": "3414278", "PostTypeId": "2", "Body": "<p><code>ints</code> are signed by default, as are <code>longs</code>.  </p>\n<p>So, <code>int</code>, <code>signed</code> and <code>signed int</code> are the same thing.</p>\n<p>Similarly <code>long</code> and <code>signed long</code> are the same.</p>\n<p><code>chars</code> on the other hand, don't have a default.  Implementations can consider them signed or unsigned (many have a command line switch to choose).  <code>char</code>, <code>signed char</code> and <code>unsigned char</code> are considered three distinct types for overload resolution, template instaniation and other places.</p>\n", "LastEditorUserId": "12725", "LastActivityDate": "2010-08-05T13:49:19.640", "Score": "3", "CreationDate": "2010-08-05T11:39:09.740", "ParentId": "3414233", "CommentCount": "2", "OwnerUserId": "12725", "LastEditDate": "2010-08-05T13:49:19.640"}, "3414233": {"ViewCount": "1083", "Body": "<p>Is an int the same type as unsigned or signed?</p>\n", "AcceptedAnswerId": "3414252", "Title": "Is an int the same as unsigned or signed?", "CreationDate": "2010-08-05T11:30:42.300", "Id": "3414233", "CommentCount": "0", "PostTypeId": "1", "LastActivityDate": "2010-08-05T13:49:19.640", "Score": "10", "OwnerUserId": "336635", "Tags": "<c++>", "AnswerCount": "5"}});