post_cb({"bq_ids": {"n4140": {"so_38980284_38980347_0": {"length": 7, "quality": 0.7, "section_id": 1422}}, "n3337": {"so_38980284_38980347_0": {"length": 7, "quality": 0.7, "section_id": 1416}}, "n4659": {"so_38980284_38980347_0": {"length": 7, "quality": 0.7, "section_id": 1542}}}, "38980284": {"ViewCount": "101", "Body": "<p>Is there any equivalent std::algorithm similar to std::map::lower_bound for std::tr1::unordered_map ?</p>\n", "Title": "Is there any equivalent std::algorithm similar to std::map::lower_bound for std::tr1::unordered_map?", "CreationDate": "2016-08-16T16:43:10.353", "LastActivityDate": "2016-08-16T16:57:27.197", "CommentCount": "3", "LastEditDate": "2016-08-16T16:44:49.067", "PostTypeId": "1", "LastEditorUserId": "1382284", "Id": "38980284", "Score": "0", "OwnerUserId": "1382284", "Tags": "<c++><algorithm><unordered-map>", "AnswerCount": "1"}, "38980347": {"Id": "38980347", "PostTypeId": "2", "Body": "<p>No, there is none,  since <code>std::unordered_map</code> is not an ordered container.</p>\n<p><code>std::lower_bound</code> exists,  but it only works with ordered containers:</p>\n<blockquote>\n<p id=\"so_38980284_38980347_0\"><em>Requires:</em> The elements <code>e</code> of <code>[first,last)</code> shall be partitioned with respect to the expression <code>e &lt; value</code> or <code>comp(e, value)</code>.</p>\n</blockquote>\n<p><em>C++11, [lower.bound] (\u00a725.4.3.1)</em></p>\n", "LastEditorUserId": "214671", "LastActivityDate": "2016-08-16T16:57:27.197", "Score": "6", "CreationDate": "2016-08-16T16:45:53.357", "ParentId": "38980284", "CommentCount": "3", "OwnerUserId": "5245033", "LastEditDate": "2016-08-16T16:57:27.197"}});