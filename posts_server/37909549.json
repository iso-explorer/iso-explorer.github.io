post_cb({"37909549": {"CommentCount": "5", "CreationDate": "2016-06-19T16:45:04.933", "PostTypeId": "1", "AcceptedAnswerId": "37909950", "LastEditorUserId": "3647361", "LastActivityDate": "2016-06-19T19:12:22.750", "LastEditDate": "2016-06-19T19:12:22.750", "ViewCount": "1392", "FavoriteCount": "0", "Title": "GCC accepts `constexpr struct {} s;` but Clang rejects it. Who is correct?", "Id": "37909549", "Score": "36", "Body": "<p>The following code compiles fine with GCC:</p>\n<pre><code>constexpr struct {} s;\n</code></pre>\n<p>But Clang rejects it with the following error:</p>\n<blockquote>\n<p id=\"so_37909549_37909549_0\">error: default initialization of an object of const type 'const struct (anonymous struct at \u2026)' without a user-provided default constructor</p>\n</blockquote>\n<p>I've tested all versions of GCC and Clang that I was able to find at <a href=\"https://gcc.godbolt.org/\">https://gcc.godbolt.org/</a>. Each version of GCC accepts the code and each version of Clang rejects it.</p>\n<p><strong>I wonder which compiler is correct in this case?<br>\nWhat does the standard say about this?<br/></br></strong></p>\n", "Tags": "<c++><gcc><clang><language-lawyer><constexpr>", "OwnerUserId": "2752075", "AnswerCount": "1"}, "37909950": {"ParentId": "37909549", "PostTypeId": "2", "CommentCount": "1", "CreationDate": "2016-06-19T17:31:52.687", "Score": "35", "LastEditorUserId": "3647361", "LastEditDate": "2016-06-19T18:09:29.580", "Id": "37909950", "OwnerUserId": "3647361", "Body": "<p>Clang adheres to the following passage in <a href=\"http://eel.is/c++draft/dcl.init#7\" rel=\"noreferrer\">[dcl.init]/7</a>:</p>\n<blockquote>\n<p id=\"so_37909549_37909950_0\">If a program calls for the default initialization of an object of a const-qualified type <code>T</code>, <code>T</code> shall be a class type with a user-provided default constructor.</p>\n</blockquote>\n<p>This wording is <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_active.html#253\" rel=\"noreferrer\">defective</a> and <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=57820#c5\" rel=\"noreferrer\">hence ignored by GCC</a> (and, as of v3.9, also by <a href=\"http://melpon.org/wandbox/permlink/Ed7vbGe0UTO1c9sz\" rel=\"noreferrer\">Clang</a>). <br>\n<sub>The above quote differs from core issue 253's due to <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2762.htm\" rel=\"noreferrer\">N2762</a> moving/adjusting paragraph 9 as cited.</sub></br></p>\n", "LastActivityDate": "2016-06-19T18:09:29.580"}, "bq_ids": {"n4140": {"so_37909549_37909549_0": {"section_id": 3286, "quality": 0.5384615384615384, "length": 7}, "so_37909549_37909950_0": {"section_id": 3286, "quality": 1.0, "length": 11}}, "n3337": {"so_37909549_37909549_0": {"section_id": 3156, "quality": 0.5384615384615384, "length": 7}, "so_37909549_37909950_0": {"section_id": 3156, "quality": 1.0, "length": 11}}, "n4659": {"so_37909549_37909950_0": {"section_id": 382, "quality": 0.6363636363636364, "length": 7}}}});