post_cb({"18870431": {"ParentId": "18867500", "CommentCount": "1", "CreationDate": "2013-09-18T10:59:20.840", "OwnerUserId": "493122", "PostTypeId": "2", "Id": "18870431", "Score": "28", "Body": "<p><a href=\"http://en.cppreference.com/w/cpp/language/reinterpret_cast\" rel=\"noreferrer\">According</a> to cppreference.com the following conversion is available only since C++11:</p>\n<blockquote>\n<p id=\"so_18867500_18870431_0\">An expression of integral, enumeration, pointer, or pointer-to-member\n  type can be converted to its own type. The resulting value is the same\n  as the value of expression.</p>\n</blockquote>\n<p>which <a href=\"http://blogs.msdn.com/b/vcblog/archive/2013/09/09/visual-studio-2013-rc-now-available.aspx\" rel=\"noreferrer\">may not be implemented</a> in Visual Studio 2013 RC yet.</p>\n", "LastActivityDate": "2013-09-18T10:59:20.840"}, "18867500": {"CommentCount": "4", "AcceptedAnswerId": "18870431", "CreationDate": "2013-09-18T08:38:59.480", "LastActivityDate": "2013-09-18T11:06:29.747", "PostTypeId": "1", "ViewCount": "974", "FavoriteCount": "3", "Title": "Why can reinterpret_cast not convert an int to int?", "Id": "18867500", "Score": "33", "Body": "<p>My compiler is the latest VC++ 2013 RC.</p>\n<pre><code>void f()\n{\n    int n1 = 0;\n    int n2 = reinterpret_cast&lt;int&gt;(n1); // error C2440\n}\n</code></pre>\n<blockquote>\n<p id=\"so_18867500_18867500_0\">error C2440: 'reinterpret_cast' : cannot convert from 'int' to 'int'</p>\n</blockquote>\n<p>Why can reinterpret_cast not be used in such an obvious case?</p>\n", "Tags": "<c++><pointers><integer><type-conversion><reinterpret-cast>", "OwnerUserId": "508343", "AnswerCount": "2"}, "18867601": {"ParentId": "18867500", "CommentCount": "0", "CreationDate": "2013-09-18T08:44:33.140", "OwnerUserId": "1490355", "PostTypeId": "2", "Id": "18867601", "Score": "24", "Body": "<p>The C++ standard says (5.2.10.2) (emphasis mine):</p>\n<blockquote>\n<p id=\"so_18867500_18867601_0\">The reinterpret_cast operator shall not cast away constness (5.2.11). <strong>An expression of integral, enumeration, pointer, or pointer-to-member type can be explicitly converted to its own type</strong>; such a cast yields the\n  value of its operand.</p>\n</blockquote>\n<p>So I'd say it's a bug.</p>\n", "LastActivityDate": "2013-09-18T08:44:33.140"}, "bq_ids": {"n4140": {"so_18867500_18867601_0": {"section_id": 6041, "quality": 0.92, "length": 23}, "so_18867500_18870431_0": {"section_id": 6041, "quality": 0.7058823529411765, "length": 12}}, "n3337": {"so_18867500_18867601_0": {"section_id": 5809, "quality": 0.92, "length": 23}, "so_18867500_18870431_0": {"section_id": 5809, "quality": 0.7058823529411765, "length": 12}}, "n4659": {"so_18867500_18867601_0": {"section_id": 7540, "quality": 0.92, "length": 23}, "so_18867500_18870431_0": {"section_id": 7540, "quality": 0.7058823529411765, "length": 12}}}});