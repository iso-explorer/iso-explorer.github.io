post_cb({"27770450": {"ParentId": "27770228", "CommentCount": "0", "Body": "<p>N4140 \u00a73.9.3 [basic.type.qualifier]/p5, emphasis mine:</p>\n<blockquote>\n<p id=\"so_27770228_27770450_0\">Cv-qualifiers applied to an array type attach to the underlying\n  element type, so the notation \u201c<code>cv T</code>,\u201d where <code>T</code> is an array type,\n  refers to an array whose elements are so-qualified. <strong>An array type\n  whose elements are cv-qualified is also considered to have the same\n  cv-qualifications as its elements.</strong> [ <em>Example</em>:</p>\n<pre><code>typedef char CA[5];\ntypedef const char CC;\nCC arr1[5] = { 0 };\nconst CA arr2 = { 0 };\n</code></pre>\n<p id=\"so_27770228_27770450_1\">The type of both <code>arr1</code> and <code>arr2</code> is \u201carray of 5 <code>const char</code>,\u201d and\n  the array type is considered to be <code>const</code>-qualified. \u2014<em>end example</em> ]</p>\n</blockquote>\n<p>See also <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#1059\">CWG issue 1059</a>.</p>\n", "OwnerUserId": "2756719", "PostTypeId": "2", "Id": "27770450", "Score": "8", "CreationDate": "2015-01-04T21:16:27.330", "LastActivityDate": "2015-01-04T21:16:27.330"}, "bq_ids": {"n4140": {"so_27770228_27770450_0": {"section_id": 7229, "quality": 0.9655172413793104, "length": 28}, "so_27770228_27770450_1": {"section_id": 7229, "quality": 0.7692307692307693, "length": 10}}, "n3337": {"so_27770228_27770450_0": {"section_id": 6973, "quality": 0.6206896551724138, "length": 18}}, "n4659": {"so_27770228_27770450_0": {"section_id": 8740, "quality": 0.9655172413793104, "length": 28}, "so_27770228_27770450_1": {"section_id": 8740, "quality": 0.7692307692307693, "length": 10}}}, "27770228": {"CommentCount": "4", "ViewCount": "118", "PostTypeId": "1", "LastEditorUserId": "3953764", "CreationDate": "2015-01-04T20:51:54.323", "LastActivityDate": "2015-01-04T21:16:27.330", "Title": "What type should std::remove_cv produce on an array of const T?", "AcceptedAnswerId": "27770450", "LastEditDate": "2015-01-04T20:53:34.977", "Id": "27770228", "Score": "5", "Body": "<p>What type should <code>std::remove_cv&lt;const int[3]&gt;</code> produce? <code>int[3]</code> or <code>const int[3]</code>?</p>\n<p><code>const int[3]</code> is an <code>array of 3 const int</code> right?, and has no top-level cv-qualifier.  So shouldn't it produce <code>const int[3]</code>?  Latest version of gcc/libstdc++ is producing <code>int[3]</code> I think.  Is this a bug?  Why / why not?</p>\n", "Tags": "<c++><c++14><typetraits><libstdc++>", "OwnerUserId": "1131467", "AnswerCount": "1"}});