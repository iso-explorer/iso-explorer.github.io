post_cb({"bq_ids": {"n4140": {"so_26901376_26913217_1": {"length": 9, "quality": 1.0, "section_id": 3321}, "so_26901376_26901376_3": {"length": 15, "quality": 1.0, "section_id": 3321}, "so_26901376_26901376_2": {"length": 6, "quality": 1.0, "section_id": 3321}, "so_26901376_26901376_0": {"length": 8, "quality": 1.0, "section_id": 3321}, "so_26901376_26901376_1": {"length": 5, "quality": 1.0, "section_id": 3321}}, "n3337": {"so_26901376_26913217_1": {"length": 9, "quality": 1.0, "section_id": 3191}, "so_26901376_26901376_3": {"length": 15, "quality": 1.0, "section_id": 3191}, "so_26901376_26901376_2": {"length": 6, "quality": 1.0, "section_id": 3191}, "so_26901376_26901376_0": {"length": 8, "quality": 1.0, "section_id": 3191}, "so_26901376_26901376_1": {"length": 5, "quality": 1.0, "section_id": 3191}}, "n4659": {"so_26901376_26913217_1": {"length": 9, "quality": 1.0, "section_id": 4087}, "so_26901376_26901376_3": {"length": 15, "quality": 1.0, "section_id": 4087}, "so_26901376_26901376_2": {"length": 6, "quality": 1.0, "section_id": 4087}, "so_26901376_26901376_0": {"length": 8, "quality": 1.0, "section_id": 4087}, "so_26901376_26901376_1": {"length": 5, "quality": 1.0, "section_id": 4087}}}, "26901376": {"ViewCount": "82", "Body": "<p>I have a question about wording in <code>N3797::8.5.3/5 [dcl.init.ref]</code>:</p>\n<blockquote>\n<p id=\"so_26901376_26901376_0\">A reference to type \u201ccv1 T1\u201d is initialized by an expression of type\n  \u201ccv2 T2\u201d as follows: </p>\n<p id=\"so_26901376_26901376_1\">\u2014 If the reference is an lvalue reference and the\n  initializer expression </p>\n<ul>\n<li><p id=\"so_26901376_26901376_2\">is an lvalue (but is not a bit-field), and\n  \u201ccv1 T1\u201d is reference-compatible with \u201ccv2 T2,\u201d or </p></li>\n<li><p id=\"so_26901376_26901376_3\">has a class type (i.e., T2 is a class type), where T1 is not reference-related to T2,\n  and can be converted to an lvalue of type \u201ccv3 T3,\u201d where \u201ccv1 T1\u201d is\n  reference-compatible with \u201ccv3 T3\u201d</p></li>\n</ul>\n</blockquote>\n<p>Does the second case mean the initializer expression is a <code>class</code>-type as well as an <code>lvalue</code>?</p>\n", "AcceptedAnswerId": "26913217", "Title": "Lvalue reference binding", "CreationDate": "2014-11-13T04:32:53.250", "Id": "26901376", "CommentCount": "1", "LastEditDate": "2014-11-14T04:03:13.317", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "LastEditorUserId": "1708801", "LastActivityDate": "2014-11-18T03:28:34.850", "Score": "1", "Tags": "<c++><reference><language-lawyer>", "AnswerCount": "1"}, "26913217": {"Id": "26913217", "PostTypeId": "2", "Body": "<p>The clause says:</p>\n<blockquote>\n<p id=\"so_26901376_26913217_0\">has a class type </p>\n</blockquote>\n<p>so it must be a <em>class type</em>. The examples further down in the document show it does not have to be an <em>lvalue</em> though, taking selected parts of the code example we have:</p>\n<pre><code>struct A { };\nstruct B : A { operator int&amp;(); } b;\n\nint&amp; ir = B(); // ir refers to the result of B::operator int&amp;\n</code></pre>\n<p><code>B()</code> is not a <em>lvalue</em> but as <code>8.5.3/5</code> says:</p>\n<blockquote>\n<p id=\"so_26901376_26913217_1\">can be converted to an lvalue of type \u201ccv3 T3,\u201d where \u201ccv1 T1\u201d is reference-compatible with \u201ccv3 T3\u201d</p>\n</blockquote>\n<p>which in this case applies.</p>\n", "LastEditorUserId": "1708801", "LastActivityDate": "2014-11-18T03:28:34.850", "Score": "0", "CreationDate": "2014-11-13T16:06:40.317", "ParentId": "26901376", "CommentCount": "0", "OwnerUserId": "1708801", "LastEditDate": "2014-11-18T03:28:34.850"}});