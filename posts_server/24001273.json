post_cb({"24001273": {"CommentCount": "5", "ViewCount": "101", "OwnerDisplayName": "user2953119", "CreationDate": "2014-06-02T18:50:29.673", "LastActivityDate": "2014-06-02T20:01:04.617", "PostTypeId": "1", "FavoriteCount": "1", "Title": "Directly destructor call of class type", "Id": "24001273", "Score": "1", "Body": "<p>The code:</p>\n<pre><code>#include &lt;iostream&gt;\n\nnamespace A\n{\n    class D{ };\n    class C\n    {\n    public:\n        static const int a=7;\n        ~C(){ std::cout &lt;&lt; \"Destroyed\"; }\n        C() { std::cout &lt;&lt; \"Created\"; }\n    };\n}\n\nint main()\n{\n    typedef A::C zlp;\n    zlp *z= new zlp();\n    z-&gt;A::D::~zlp();//error: \u2018A::D\u2019 is not a base of \u2018zlp {aka A::C}\u2019\n}\n</code></pre>\n<p>I read the 3.4.3/1 N3797. There is written the</p>\n<blockquote>\n<p id=\"so_24001273_24001273_0\">If a pseudo-destructor-name (5.2.4) contains a nested-name-specifier,\n  the type-names are looked up as types in the scope designated by the\n  nested-name-specifier. Similarly, in a qualified-id of the form:</p>\n<pre><code>nested-name-specifier_opt class-name :: ~ class-name\n</code></pre>\n<p id=\"so_24001273_24001273_1\">the second class-name is looked up in the same scope as the first.</p>\n</blockquote>\n<p>This quote does not say that <code>nested-name-specifier_opt class-name</code> must be a base type of <code>zlp</code>. Can you explain that behavior? I would like to find a corresponding reference to the standard.</p>\n", "Tags": "<c++><class><destructor><language-lawyer>", "AnswerCount": "0"}, "bq_ids": {"n4140": {"so_24001273_24001273_0": {"section_id": 7112, "quality": 0.9230769230769231, "length": 12}, "so_24001273_24001273_1": {"section_id": 7112, "quality": 1.0, "length": 6}}, "n3337": {"so_24001273_24001273_0": {"section_id": 6856, "quality": 0.9230769230769231, "length": 12}, "so_24001273_24001273_1": {"section_id": 6856, "quality": 1.0, "length": 6}}, "n4659": {"so_24001273_24001273_0": {"section_id": 8613, "quality": 0.9230769230769231, "length": 12}, "so_24001273_24001273_1": {"section_id": 8613, "quality": 1.0, "length": 6}}}});