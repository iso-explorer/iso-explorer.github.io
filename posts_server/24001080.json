post_cb({"24001080": {"CommentCount": "4", "ViewCount": "554", "PostTypeId": "1", "LastEditorUserId": "2684539", "CreationDate": "2014-06-02T18:35:04.743", "LastActivityDate": "2014-06-02T18:44:41.607", "Title": "Correct format for separating declaration and definition of C++ template functions", "AcceptedAnswerId": "24001172", "LastEditDate": "2014-06-02T18:44:41.607", "Id": "24001080", "Score": "9", "Body": "<p>I'm using this method <a href=\"http://www.parashift.com/c++-faq-lite/separate-template-fn-defn-from-decl.html\">http://www.parashift.com/c++-faq-lite/separate-template-fn-defn-from-decl.html</a> to separate the definition of a C++ template function from its declaration, to avoid cluttering up my header files with code.</p>\n<p>The link uses as an example a function with no arguments or return, but suppose I have a function with an argument. The link would suggest the following arrangement:</p>\n<pre><code>// File \"f.h\" \ntemplate &lt;typename T&gt; void f(T t);\n</code></pre>\n<hr>\n<pre><code>// File \"f.cpp\"\n#include \"f.h\"\n\ntemplate &lt;typename T&gt; void f(T t) {\n  // do something\n}\n\ntemplate void f&lt;int&gt;(int t);\n// other specializations as needed\n</code></pre>\n<p>However it seems the specialization also works if you omit the type in angle brackets, as I suppose the compiler deduces it from the argument type:</p>\n<pre><code>template void f(int t);\n</code></pre>\n<p>But I'm wondering, is it valid to do that?</p>\n<p>Visual C++ 12 (2013)</p>\n</hr>", "Tags": "<c++><templates><language-lawyer>", "OwnerUserId": "3143679", "AnswerCount": "1"}, "24001172": {"ParentId": "24001080", "CommentCount": "0", "Body": "<p>Yes, it's valid. [temp.explicit] p3 says:</p>\n<blockquote>\n<p id=\"so_24001080_24001172_0\">If the explicit instantiation is for a function or member function, the <em>unqualified-\n  id</em> in the <em>declaration</em> shall be either a <em>template-id</em> or, where all template arguments can be deduced, a <em>template-name</em> or <em>operator-function-id</em>.</p>\n</blockquote>\n<p>Your function has one template parameter and it can be deduced from the function argument, when the function parameter is <code>int</code> the template argument can be deduced as <code>int</code>, so you can (optionally) use the <em>template-name</em>, <code>f</code>, instead of the <em>template-id</em> <code>f&lt;int&gt;</code>.</p>\n", "OwnerUserId": "981959", "PostTypeId": "2", "Id": "24001172", "Score": "10", "CreationDate": "2014-06-02T18:42:12.247", "LastActivityDate": "2014-06-02T18:42:12.247"}, "bq_ids": {"n4140": {"so_24001080_24001172_0": {"section_id": 252, "quality": 0.9411764705882353, "length": 16}}, "n3337": {"so_24001080_24001172_0": {"section_id": 243, "quality": 0.9411764705882353, "length": 16}}, "n4659": {"so_24001080_24001172_0": {"section_id": 259, "quality": 0.9411764705882353, "length": 16}}}});