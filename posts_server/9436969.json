post_cb({"9437119": {"Id": "9437119", "PostTypeId": "2", "Body": "<p>From the <a href=\"http://www.research.att.com/~bs/C++0xFAQ.html\" rel=\"nofollow\">C++11 draft</a></p>\n<p>\u00a7 7.1.2\\2 </p>\n<blockquote>\n<p id=\"so_9436969_9437119_0\">A function declaration (8.3.5, 9.3, 11.3) with an inline specifier\n  declares an inline function. The inline specifier indicates to the\n  implementation that inline substitution of the function body at the\n  point of call <strong>is to be preferred to the usual function call mechanism</strong>.\n  An implementation is not required to perform this inline substitution\n  at the point of call; however, even if this inline substitution is\n  omitted, the other rules for inline functions defined by 7.1.2 shall\n  still be respected.</p>\n</blockquote>\n<p>So, as for <em>requirements</em>, it's basically just a normal function, so option B.  It might or might not have it's code inserted into the calling function, but that also applies to functions <em>not</em> marked inline, and thus isn't really anything to do with the <code>inline</code> keyword.</p>\n", "LastActivityDate": "2012-02-24T19:51:44.837", "Score": "1", "CreationDate": "2012-02-24T19:51:44.837", "ParentId": "9436969", "CommentCount": "0", "OwnerUserId": "845092"}, "bq_ids": {"n4140": {"so_9436969_9437119_0": {"length": 41, "quality": 0.9111111111111111, "section_id": 5402}}, "n3337": {"so_9436969_9437119_0": {"length": 41, "quality": 0.9111111111111111, "section_id": 5197}}, "n4659": {"so_9436969_9437119_0": {"length": 40, "quality": 0.8888888888888888, "section_id": 6849}}}, "9436969": {"ViewCount": "2241", "Body": "<p>This a C++ online test question. The test has been done. </p>\n<pre><code>class Person\n{\n    std::string name;\n    public:\n          std::string const &amp;getname(void) const ;      \n} ;\n\ninline std::string const &amp;Person::getname() const\n{\n        return name; \n}\n</code></pre>\n<p>A:   The computer inserts the code of the function getname()</p>\n<p>B:   The computer generates a call to the function getname()</p>\n<p>C:   The default parameter values of the calling function are returned</p>\n<p>D:   All arguments of the function are placed on the memory stack </p>\n<p>I choose A. Is it correct ?</p>\n<p>Thanks.</p>\n", "AcceptedAnswerId": "9437074", "Title": "inline function definition in C++?", "CreationDate": "2012-02-24T19:39:45.423", "Id": "9436969", "CommentCount": "6", "LastEditDate": "2012-02-24T19:58:47.870", "PostTypeId": "1", "LastEditorUserId": "1002288", "LastActivityDate": "2012-02-24T19:58:47.870", "Score": "-2", "OwnerUserId": "1002288", "Tags": "<c++><syntax><inline>", "AnswerCount": "2"}, "9437074": {"Id": "9437074", "PostTypeId": "2", "Body": "<p>The compiler <em>may</em> inline the function.</p>\n<p>The compiler/linker <em>will not</em> complain when the function body is found in multiple compilation units, as long as the body is the same.</p>\n", "LastActivityDate": "2012-02-24T19:48:23.603", "Score": "2", "CreationDate": "2012-02-24T19:48:23.603", "ParentId": "9436969", "CommentCount": "0", "OwnerUserId": "3458"}});