post_cb({"bq_ids": {"n4140": {"so_7312743_7312775_0": {"length": 15, "quality": 1.0, "section_id": 3373}}, "n3337": {"so_7312743_7312775_0": {"length": 15, "quality": 1.0, "section_id": 3243}}, "n4659": {"so_7312743_7312775_0": {"length": 12, "quality": 0.8, "section_id": 4133}}}, "7312743": {"ViewCount": "665", "Body": "<p>Is there any way in C++ to get a compile-time error or warning if an exception is unhandled? For example, consider this Java code snippet:</p>\n<pre><code>public void f()\n{\n    g();  // &lt;-- Java compiler reports \"Unhandled exception\" error here.\n}\n\npublic void g() throws Exception\n{\n}\n</code></pre>\n<p>Can g++ or MSVC do something similar? Or is there any external code parsing tool which can do this? I suppose one could programmatically extend the C++ parser of Eclipse CDT to achieve this, but... are there easier solutions?</p>\n", "AcceptedAnswerId": "7312775", "Title": "Unhandled exception check in C++", "CreationDate": "2011-09-05T21:06:32.190", "Id": "7312743", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2011-09-05T21:13:06.830", "Score": "1", "OwnerUserId": "1070129", "Tags": "<c++><exception><exception-handling>", "AnswerCount": "2"}, "7312790": {"Id": "7312790", "PostTypeId": "2", "Body": "<p>Short answer: no. There are no checked exceptions in C++. You can try to use an external tool, but TBH I've never seen anyone do that. Just document the interfaces properly.</p>\n", "LastActivityDate": "2011-09-05T21:13:06.830", "CommentCount": "0", "CreationDate": "2011-09-05T21:13:06.830", "ParentId": "7312743", "Score": "0", "OwnerUserId": "16102"}, "7312775": {"Id": "7312775", "PostTypeId": "2", "Body": "<p>Simply, no. C++ exception specifications have a different meaning to Java's exception specifications and they are now deprecated so you should consider avoiding them if possible.</p>\n<p>In C++, the checks requested by exception specification are enforced only at runtime. In C++, if a function violates its exception specification the the \"unexpected\" handler is called. It is not a compile time error to call a function that can potentially throw an arbitrary exception from a function with an exception specification.</p>\n<p>ISO/IEC 14882:2011 15.4 [except.spec] / 11:</p>\n<blockquote>\n<p id=\"so_7312743_7312775_0\">An implementation shall not reject an expression merely because when executed it throws or might throw an exception that the containing function does not allow.</p>\n</blockquote>\n", "LastActivityDate": "2011-09-05T21:11:47.577", "CommentCount": "3", "CreationDate": "2011-09-05T21:11:47.577", "ParentId": "7312743", "Score": "6", "OwnerUserId": "19563"}});