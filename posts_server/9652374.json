post_cb({"bq_ids": {"n4140": {"so_9652374_9652432_1": {"length": 17, "quality": 0.8947368421052632, "section_id": 1919}}, "n3337": {"so_9652374_9652432_1": {"length": 17, "quality": 0.8947368421052632, "section_id": 1908}}, "n4659": {"so_9652374_9652432_1": {"length": 17, "quality": 0.8947368421052632, "section_id": 2190}}}, "9652374": {"ViewCount": "13512", "Body": "<p>My computer science professor wants us to find the declaration of <code>cout</code>. I've compiled a simple Hello world program using g++ and the -E parameter. Here's what my hello.cpp looks like:</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint main(){\n\n  string name=\"\";\n\n  cout &lt;&lt; \"Good morning! What's your name?\";\n\n  cin &gt;&gt; name;\n\n  cout &lt;&lt; \"Hello \" &lt;&lt; name &lt;&lt; \".\\n\";\n\n  return 0; \n\n}\n</code></pre>\n<p>My compile command:</p>\n<pre><code>g++ -E hello.cpp &gt; hello.p\n</code></pre>\n<p>In hello.p, I ran a search in VIM, like so:</p>\n<pre><code>:/cout\n</code></pre>\n<p>I see the following line:</p>\n<pre><code>extern ostream cout;\n</code></pre>\n<p>Is that the declaration of <code>cout</code>, and is <code>cout</code> an instance of the <code>ostream</code> class?</p>\n<p><strong>Edit:</strong></p>\n<p>What's the <code>wcout</code> declaration there for? If I recall correctly the letter \"w\" stands for \"wide\", but I don't know what implication that has. What is a <code>wcout</code> and a <code>wostream</code>?</p>\n", "AcceptedAnswerId": "9652432", "Title": "Where is cout declared?", "CreationDate": "2012-03-11T04:14:05.830", "Id": "9652374", "CommentCount": "4", "FavoriteCount": "2", "PostTypeId": "1", "LastEditDate": "2012-03-11T16:13:09.067", "LastEditorUserId": "500104", "LastActivityDate": "2015-10-10T10:11:26.657", "Score": "8", "OwnerUserId": "224988", "Tags": "<c++><terminology><cout><ostream>", "AnswerCount": "2"}, "9652432": {"Id": "9652432", "PostTypeId": "2", "Body": "<p>Yes, that is indeed the declaration of <code>std::cout</code>, found inside the <code>&lt;iostream&gt;</code> header.</p>\n<p>The relevant standard part can be found in <code>\u00a727.4.1 [iostream.objects.overview]</code>:</p>\n<blockquote>\n<p id=\"so_9652374_9652432_0\">Header <code>&lt;iostream&gt;</code> synopsis</p>\n</blockquote>\n<pre><code>#include &lt;ios&gt;\n#include &lt;streambuf&gt;\n#include &lt;istream&gt;\n#include &lt;ostream&gt;\n\nnamespace std {\n  extern istream cin;\n  extern ostream cout;\n  extern ostream cerr;\n  extern ostream clog;\n  extern wistream wcin;\n  extern wostream wcout;\n  extern wostream wcerr;\n  extern wostream wclog;\n}\n</code></pre>\n<blockquote>\n<p id=\"so_9652374_9652432_1\">p1 The header <code>&lt;iostream&gt;</code> declares objects that associate objects with the standard C streams provided for by the functions declared in <code>&lt;cstdio&gt;</code> (27.9.2), and includes all the headers necessary to use these objects.</p>\n</blockquote>\n", "LastActivityDate": "2012-03-11T04:24:00.840", "CommentCount": "2", "CreationDate": "2012-03-11T04:24:00.840", "ParentId": "9652374", "Score": "8", "OwnerUserId": "500104"}, "9652410": {"Id": "9652410", "PostTypeId": "2", "Body": "<blockquote>\n<p id=\"so_9652374_9652410_0\">Is that the declaration of cout, and is cout an instance of the ostream class?</p>\n</blockquote>\n<p>Yes, that is the declaration of <code>std::cout</code> and yes it's an instance of <code>std::ostream</code>. It is declared <code>extern</code> so that the object is only created once even if the header is included in multiple translation units.</p>\n", "LastEditorUserId": "560648", "LastActivityDate": "2015-10-10T10:11:26.657", "Score": "2", "CreationDate": "2012-03-11T04:19:59.993", "ParentId": "9652374", "CommentCount": "1", "OwnerUserId": "75889", "LastEditDate": "2015-10-10T10:11:26.657"}});