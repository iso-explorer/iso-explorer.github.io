post_cb({"bq_ids": {"n4140": {"so_5625677_5625677_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 3260}, "so_5625677_5625778_0": {"length": 27, "quality": 0.8709677419354839, "section_id": 3260}, "so_5625677_5625778_1": {"length": 10, "quality": 0.9090909090909091, "section_id": 3260}}, "n3337": {"so_5625677_5625677_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 3132}, "so_5625677_5625778_0": {"length": 27, "quality": 0.8709677419354839, "section_id": 3132}, "so_5625677_5625778_1": {"length": 10, "quality": 0.9090909090909091, "section_id": 3132}}, "n4659": {"so_5625677_5625677_0": {"length": 6, "quality": 0.6666666666666666, "section_id": 8595}, "so_5625677_5625778_0": {"length": 24, "quality": 0.7741935483870968, "section_id": 4018}, "so_5625677_5625778_1": {"length": 10, "quality": 0.9090909090909091, "section_id": 4018}}}, "5625877": {"Id": "5625877", "PostTypeId": "2", "Body": "<p>Does your function have a sentinel (-1)?</p>\n<pre><code>void test(int x=-1)\n{\n    if(x == -1)\n        x = _x;\n\n    //Rest of code\n}\n</code></pre>\n<p>You could also use:</p>\n<pre><code>void test(int x, bool bUseLocal=false)\n{\n    if(bUseLocal)\n        x = _x;\n\n    //Rest of code\n}\n</code></pre>\n", "LastEditorUserId": "194725", "LastActivityDate": "2011-04-11T18:46:08.543", "Score": "0", "CreationDate": "2011-04-11T18:40:08.137", "ParentId": "5625677", "CommentCount": "5", "OwnerUserId": "194725", "LastEditDate": "2011-04-11T18:46:08.543"}, "5625677": {"ViewCount": "1052", "Body": "<blockquote>\n<p id=\"so_5625677_5625677_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/4539406/nonstatic-member-as-a-default-argument-of-a-nonstatic-member-function\">Nonstatic member as a default argument of a nonstatic member function</a> </br></p>\n</blockquote>\n<p>Ok. So I'm having problems understanding how to accomplish a seemingly simple task... Here is what I want to accomplish:</p>\n<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nclass A{\nprivate:\n    int _x;\npublic:\n    A(int x){\n        _x = x;\n    }\n\n    void test(int x=_x){\n        cout &lt;&lt; x &lt;&lt; endl;\n    }\n};\n\nint main(){\n    A a(3);\n    a.test();\n}\n</code></pre>\n<p>The compiler complains about the <code>int x=_x</code> part saying <code>error: invalid use of non-static data member A::_x</code></p>\n<p>So how do I use a default parameter like this?</p>\n<p>Thanks.</p>\n", "AcceptedAnswerId": "5625703", "Title": "c++ default parameters", "CreationDate": "2011-04-11T18:23:05.550", "LastActivityDate": "2011-04-11T18:46:08.543", "CommentCount": "0", "LastEditDate": "2017-05-23T11:55:27.450", "PostTypeId": "1", "Tags": "<c++>", "Id": "5625677", "AnswerCount": "3", "Score": "0", "OwnerUserId": "675637", "ClosedDate": "2011-04-11T18:44:32.520", "LastEditorUserId": "-1"}, "5625703": {"Id": "5625703", "PostTypeId": "2", "Body": "<p>You can't do that.</p>\n<p>You can however have an overload for <code>test</code> that takes no parameters.</p>\n<pre><code>void test(){\n    test(_x);\n}\n</code></pre>\n", "LastActivityDate": "2011-04-11T18:25:13.153", "CommentCount": "1", "CreationDate": "2011-04-11T18:25:13.153", "ParentId": "5625677", "Score": "13", "OwnerUserId": "23528"}, "5625778": {"Id": "5625778", "PostTypeId": "2", "Body": "<p>You cannot do that. However if you declare <code>_x</code> as static data member as:</p>\n<pre><code>static int _x; //_x is static data member now!\n</code></pre>\n<p>Then you can do that, i.e you can use <code>_x</code> as default value for parameters in your member functions.</p>\n<p>A nice example from the  C++ Standard itself. Quoting from section \u00a78.3.6/9 :</p>\n<blockquote>\n<p id=\"so_5625677_5625778_0\">Similarly, a nonstatic member shall\n  not be used in a default argument\n  expression, even if it is not\n  evaluated, unless it appears as the\n  id-expression of a class member access\n  expression (5.2.5) or unless it is\n  used to form a pointer to member\n  (5.3.1). [Example: the declaration of\n  X::mem1() in the following example is\n  ill-formed because no object is\n  supplied for the nonstatic member X::a\n  used as an initializer.</p>\n</blockquote>\n<pre><code>int b;\nclass X {\n   int a;\n   int mem1(int i = a); // error: nonstatic member a used as default argument\n   int mem2(int i = b); // OK; use X::b\n   static int b;\n};\n</code></pre>\n<blockquote>\n<p id=\"so_5625677_5625778_1\">The declaration of X::mem2() is\n  meaningful, however, since no object\n  is needed to access the static member\n  X::b.</p>\n</blockquote>\n<p>Hope it helps.</p>\n", "LastEditorUserId": "415784", "LastActivityDate": "2011-04-11T18:45:32.333", "Score": "3", "CreationDate": "2011-04-11T18:32:04.967", "ParentId": "5625677", "CommentCount": "1", "OwnerUserId": "415784", "LastEditDate": "2011-04-11T18:45:32.333"}});