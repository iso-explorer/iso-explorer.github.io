post_cb({"bq_ids": {"n4140": {"so_29056636_29056709_1": {"length": 17, "quality": 0.8947368421052632, "section_id": 5581}, "so_29056636_29056709_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 1238}}, "n3337": {"so_29056636_29056709_1": {"length": 17, "quality": 0.8947368421052632, "section_id": 5363}, "so_29056636_29056709_0": {"length": 11, "quality": 0.8461538461538461, "section_id": 1236}}, "n4659": {"so_29056636_29056709_1": {"length": 17, "quality": 0.8947368421052632, "section_id": 7028}, "so_29056636_29056709_0": {"length": 12, "quality": 0.9230769230769231, "section_id": 1326}}}, "29056709": {"Id": "29056709", "PostTypeId": "2", "Body": "<p>The two iterators passed as first and second arguments to the function\u00a0<code>std::make_heap</code> has to be <code>RandomAccessIterator</code>s. List iterators are not <code>RandomAccessIterator</code>s while <code>std::vector</code> and <code>std::array</code>'s are.</p>\n<p>In the standard this is specified in the interface for <code>make_heap</code> at \u00a725.1:</p>\n<pre><code>template&lt;class RandomAccessIterator&gt;\n  void make_heap(RandomAccessIterator first, RandomAccessIterator last);\ntemplate&lt;class RandomAccessIterator, class Compare&gt;\n  void make_heap(RandomAccessIterator first, RandomAccessIterator last,\n                 Compare comp);\n</code></pre>\n<p>and in \u00a725.1.5.5 we have that:</p>\n<blockquote>\n<p id=\"so_29056636_29056709_0\">If an algorithm\u2019s template parameter is named RandomAccessIterator, RandomAccessIterator1, or RandomAccessIterator2, the template argument shall satisfy the requirements of a random-access iterator</p>\n</blockquote>\n<p>And finally, random access iterators are described in \u00a724.2.7:</p>\n<blockquote>\n<p id=\"so_29056636_29056709_1\">A class or pointer type X satisfies the requirements of a random access iterator if, in addition to satisfying the requirements for bidirectional iterators, the following expressions are valid as shown in Table 111.</p>\n</blockquote>\n<p><img alt=\"table for the requirements of random access iterators\" src=\"https://i.stack.imgur.com/y74Ql.png\"/></p>\n", "LastEditorUserId": "493122", "LastActivityDate": "2015-03-15T02:56:53.790", "Score": "2", "CreationDate": "2015-03-15T02:50:36.460", "ParentId": "29056636", "CommentCount": "1", "OwnerUserId": "493122", "LastEditDate": "2015-03-15T02:56:53.790"}, "29056636": {"ViewCount": "68", "Body": "<p>The following code:</p>\n<pre><code>std::list&lt;int&gt; list;\nstd::make_heap(list.begin(), list.end());\n</code></pre>\n<p><a href=\"http://coliru.stacked-crooked.com/a/3f847aaadaef13fd\" rel=\"nofollow\">Live demo</a></p>\n<p>causes a whole bunch of errors, including:</p>\n<blockquote>\n<p id=\"so_29056636_29056636_0\">error: no match for 'operator-'</p>\n</blockquote>\n<p>When I declare <code>list</code> as <code>std::vector</code>, I do not get these errors, why?</p>\n", "AcceptedAnswerId": "29056709", "Title": "Making a heap with list causes errors", "CreationDate": "2015-03-15T02:37:11.450", "Id": "29056636", "CommentCount": "2", "LastEditDate": "2015-03-15T03:01:50.330", "PostTypeId": "1", "LastEditorUserId": "493122", "LastActivityDate": "2015-03-15T03:01:50.330", "Score": "1", "OwnerUserId": "4672156", "Tags": "<c++><heap><containers>", "AnswerCount": "1"}});