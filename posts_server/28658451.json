post_cb({"28659194": {"Id": "28659194", "PostTypeId": "2", "Body": "<p>N4140 calls <code>bool(int)</code> a <em>function type</em> in [dcl.fct]. As stated in the other answer, this is a <em>type-id</em>:</p>\n<blockquote>\n<p id=\"so_28658451_28659194_0\">[dcl.name]/1 To specify type conversions explicitly, and as an\n  argument of <code>sizeof</code>, <code>alignof</code>, <code>new</code>, or <code>typeid</code>, the name of a\n  type shall be specified. This can be done with a <em>type-id</em>, which is\n  syntactically a declaration for a variable or function of that type\n  that omits the name of the entity.</p>\n</blockquote>\n", "OwnerDisplayName": "user3920237", "LastActivityDate": "2015-02-22T14:51:40.270", "Score": "2", "CreationDate": "2015-02-22T14:51:40.270", "ParentId": "28658451", "CommentCount": "0"}, "28658537": {"Id": "28658537", "PostTypeId": "2", "Body": "<p>I don't know of a common name for this. In the standard, it's called a <em>type-id</em>, after its grammar production.</p>\n<p>The <em>type-id</em> <code>bool(int)</code> names the type \"function of <code>(int)</code> returning <code>bool</code>\".</p>\n<p>It doesn't work with <code>typedef</code> (which uses the normal declaration syntax instead), but alias declared with <code>using</code> does use a <em>type-id</em>:</p>\n<pre><code>using MyFunctionType = bool(int);\n</code></pre>\n", "LastEditorUserId": "2756719", "LastActivityDate": "2015-02-22T14:35:39.107", "Score": "9", "CreationDate": "2015-02-22T13:48:48.553", "ParentId": "28658451", "CommentCount": "9", "OwnerUserId": "2756719", "LastEditDate": "2015-02-22T14:35:39.107"}, "28658451": {"ViewCount": "201", "Body": "<pre><code>typedef std::function&lt;bool(int)&gt; MyFunction;\n</code></pre>\n<p>That <code>bool(int)</code> template argument notation syntax - does it have a name? I tried to read C++ standard about this syntax and did not know what to search for.</p>\n<p>Obviously, using it in other contexts seems to fail.</p>\n<pre><code>typedef bool(int) MyFunctionType; // does not work.\n</code></pre>\n<p>So I assume there is a special chapter about this syntax somewhere...</p>\n<p>Thanks.</p>\n", "AcceptedAnswerId": "28658537", "Title": "What is the (searchable) name for this syntax...?", "CreationDate": "2015-02-22T13:39:42.010", "Id": "28658451", "CommentCount": "1", "LastEditDate": "2015-02-22T13:49:06.763", "PostTypeId": "1", "LastEditorUserId": "2756719", "LastActivityDate": "2015-02-22T14:51:40.270", "Score": "6", "OwnerUserId": "2225104", "Tags": "<c++><c++11>", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_28658451_28659194_0": {"length": 23, "quality": 0.92, "section_id": 3199}}, "n3337": {"so_28658451_28659194_0": {"length": 23, "quality": 0.92, "section_id": 3073}}, "n4659": {"so_28658451_28659194_0": {"length": 23, "quality": 0.92, "section_id": 3960}}}});