post_cb({"15342765": {"ParentId": "15342653", "CommentCount": "0", "Body": "<p>It tells the compiler not to instantiate that template in this TU.</p>\n<p>Note that it should be instantiated in one TU (without the <code>extern</code> bit), if you want your code to actually link.</p>\n", "OwnerUserId": "46642", "PostTypeId": "2", "Id": "15342765", "Score": "6", "CreationDate": "2013-03-11T15:44:26.683", "LastActivityDate": "2013-03-11T15:44:26.683"}, "15342653": {"CommentCount": "1", "ViewCount": "338", "PostTypeId": "1", "LastEditorUserId": "46642", "CreationDate": "2013-03-11T15:39:07.737", "LastActivityDate": "2013-03-11T15:44:26.683", "Title": "Explicit instantiation declaration with extern", "AcceptedAnswerId": "15342765", "LastEditDate": "2013-03-11T15:43:34.657", "Id": "15342653", "Score": "3", "Body": "<p>I am reading 14.7.2 in C++ Standard draft n3485 and it says:</p>\n<blockquote>\n<p id=\"so_15342653_15342653_0\">2 The syntax for explicit instantiation is:\n  explicit-instantiation:\n  <code>extern</code><em>opt</em> template declaration</p>\n<p id=\"so_15342653_15342653_1\">There are two forms of explicit instantiation: an explicit instantiation definition and an explicit instantiation declaration. <strong>An explicit instantiation declaration begins with the <code>extern</code> keyword.</strong></p>\n</blockquote>\n<p>Seeing that a template declaration and definition is always put in a header, I have never seen a declaration with <code>extern</code> on a template.  What exactly does that bolded sentence mean?</p>\n<p>Also why would an instantiation care about <code>extern</code>? </p>\n", "Tags": "<c++><templates><c++11>", "OwnerUserId": "174614", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_15342653_15342653_1": {"section_id": 251, "quality": 1.0, "length": 17}}, "n3337": {"so_15342653_15342653_1": {"section_id": 242, "quality": 1.0, "length": 17}}, "n4659": {"so_15342653_15342653_1": {"section_id": 258, "quality": 1.0, "length": 17}}}});