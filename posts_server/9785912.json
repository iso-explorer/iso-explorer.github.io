post_cb({"9786892": {"ParentId": "9785912", "CommentCount": "1", "Body": "<p>In C++03 you are not allowed to declare friendship to an argument of the template. </p>\n<blockquote>\n<p id=\"so_9785912_9786892_0\">\u00a77.1.5.3/2</p>\n<p id=\"so_9785912_9786892_1\">[...] If the identifier resolves to a typedef- name or a template type-parameter, the elaborated-type-specifier is ill-formed. [Note: this implies that, within a class template with a template type-parameter T, the declaration</p>\n</blockquote>\n<pre><code>       friend class T;\n</code></pre>\n<p>is ill-formed. ]</p>\n<p>In C++11 there has been some changes to this respect, but it is a bit weird. <code>friend class T;</code> is still illformed, but <code>friend T</code> is allowed. A quote can be found in the same paragraph:</p>\n<blockquote>\n<p id=\"so_9785912_9786892_2\">\u00a77.1.5.3/2</p>\n<p id=\"so_9785912_9786892_3\">[...] [ Note: This implies that, within a class template with a template type-parameter T, the declaration</p>\n</blockquote>\n<pre><code> friend class T;\n</code></pre>\n<blockquote>\n<p id=\"so_9785912_9786892_4\">is ill-formed. However, the similar declaration friend T; is allowed (11.3). \u2014 end note ]</p>\n</blockquote>\n<p>Notes are not normative, but they indicate the intent of the norms around it. I have not been able to find the specific sentence that makes the note correct, but I assume that <em>at least the intention</em> is that this should be allowed.</p>\n", "OwnerUserId": "36565", "PostTypeId": "2", "Id": "9786892", "Score": "4", "CreationDate": "2012-03-20T12:36:55.543", "LastActivityDate": "2012-03-20T12:36:55.543"}, "9785912": {"CommentCount": "4", "ViewCount": "132", "CreationDate": "2012-03-20T11:29:33.623", "LastActivityDate": "2012-03-20T12:36:55.543", "Title": "Templatize the friendship in C++", "AcceptedAnswerId": "9786892", "PostTypeId": "1", "Id": "9785912", "Score": "0", "Body": "<p>Is it possible to make the friend class a template, such as :</p>\n<pre><code>template &lt;class T&gt;\nclass MyClass {\npublic:\n    friend class T;\n};\n</code></pre>\n<p>The reason why I'm striving to get this is that I'm using <a href=\"http://en.wikipedia.org/wiki/Policy_based_design\" rel=\"nofollow\">policy-based design</a> and I want my policy classes to access the host members. \n(...now I begin to think that this might mean my design is simply bad... )</p>\n<p>Thanks in advance guys!</p>\n", "Tags": "<c++><templates><friend>", "OwnerUserId": "816972", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_9785912_9786892_3": {"section_id": 5443, "quality": 0.7777777777777778, "length": 7}, "so_9785912_9786892_4": {"section_id": 5443, "quality": 0.6666666666666666, "length": 6}, "so_9785912_9786892_1": {"section_id": 5443, "quality": 0.75, "length": 12}}, "n3337": {"so_9785912_9786892_3": {"section_id": 5238, "quality": 0.7777777777777778, "length": 7}, "so_9785912_9786892_4": {"section_id": 5238, "quality": 0.6666666666666666, "length": 6}, "so_9785912_9786892_1": {"section_id": 5238, "quality": 0.75, "length": 12}}, "n4659": {"so_9785912_9786892_3": {"section_id": 6870, "quality": 0.7777777777777778, "length": 7}, "so_9785912_9786892_4": {"section_id": 6870, "quality": 0.6666666666666666, "length": 6}, "so_9785912_9786892_1": {"section_id": 6870, "quality": 0.75, "length": 12}}}});