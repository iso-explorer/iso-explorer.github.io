post_cb({"29109711": {"ParentId": "29109500", "CommentCount": "1", "Body": "<p>It looks like this was fixed in <code>gcc 5.0</code> which we can test online using <a href=\"http://melpon.org/wandbox\" rel=\"nofollow\">wandbox</a> but as T.C. notes const is ignored when applied to the reference, from the draft C++11 standard <code>8.3.2</code>:</p>\n<blockquote>\n<p id=\"so_29109500_29109711_0\">Cv-qualified references are ill-formed except when the cv-qualifiers are introduced\n  through the use of a typedef-name (7.1.3, 14.1) or decltype-specifier (7.1.6.2), in which case the cv-qualifiers\n  are ignored.</p>\n</blockquote>\n", "OwnerUserId": "1708801", "PostTypeId": "2", "Id": "29109711", "Score": "2", "CreationDate": "2015-03-17T21:07:59.637", "LastActivityDate": "2015-03-17T21:07:59.637"}, "29109500": {"CommentCount": "1", "ViewCount": "165", "PostTypeId": "1", "LastEditorUserId": "2756719", "CreationDate": "2015-03-17T20:56:00.147", "LastActivityDate": "2015-03-17T21:07:59.637", "Title": "decltype and const reference return types for strings", "LastEditDate": "2015-03-17T21:06:26.010", "Id": "29109500", "Score": "1", "Body": "<p>Given a data member, _value, in a class, defined thus:  </p>\n<pre><code>unique_ptr&lt;std::string&gt; _value = nullptr;\n</code></pre>\n<p>The following does not compile.</p>\n<pre><code>auto getValue() const -&gt; const decltype(*_value) &amp;\n</code></pre>\n<p>Compiler returns this error:</p>\n<p><strong>\u2018const\u2019 qualifiers cannot be applied to \u2018std::basic_string&amp;'</strong></p>\n<p>However if I declare the function like this:</p>\n<pre><code>auto getValue() const -&gt; const remove_reference&lt;decltype(*_value)&gt;::type &amp;;\n</code></pre>\n<p>It compiles and behaves as I want (i.e., essentially returns a const string&amp;)</p>\n<p>I find this strange.  Could it be a bug in the gcc compiler or is there some fundamental difference between the two declarations?</p>\n<p>decltype(*_value) correctly evaluates to basic_string&amp; which is find so I thought I could just stick a const in front of it and it should be find but seems to confuse the compiler...</p>\n<p>Note that my intention is basically for the function to return a const reference to the type being pointed to by the unique_ptr.</p>\n", "Tags": "<c++><c++11><auto><decltype>", "OwnerUserId": "3537851", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_29109500_29109711_0": {"section_id": 3218, "quality": 0.8235294117647058, "length": 14}}, "n3337": {"so_29109500_29109711_0": {"section_id": 3092, "quality": 0.7058823529411765, "length": 12}}, "n4659": {"so_29109500_29109711_0": {"section_id": 3975, "quality": 0.8235294117647058, "length": 14}}}});