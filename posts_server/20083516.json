post_cb({"20083551": {"ParentId": "20083516", "PostTypeId": "2", "CommentCount": "0", "Body": "<p><code>this</code> is a <em>prvalue</em> or pure rvalue and can not be modified, the <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3485.pdf\" rel=\"nofollow\">draft C++ standard</a> section <code>9.3.2</code> <em>The this pointer</em> says:</p>\n<blockquote>\n<p id=\"so_20083516_20083551_0\">In the body of a non-static (9.3) member function, the keyword this is a prvalue expression whose value is the address of the object for which the function is called. [...]</p>\n</blockquote>\n<p>It is not clear why you would want to modify <em>this</em> at all.</p>\n", "OwnerUserId": "1708801", "LastEditorUserId": "1708801", "LastEditDate": "2013-11-19T22:45:35.750", "Id": "20083551", "Score": "4", "CreationDate": "2013-11-19T22:34:58.563", "LastActivityDate": "2013-11-19T22:45:35.750"}, "20083516": {"CommentCount": "1", "ViewCount": "213", "PostTypeId": "1", "LastEditorUserId": "1708801", "CreationDate": "2013-11-19T22:32:18.147", "LastActivityDate": "2013-11-19T23:52:25.460", "Title": "Can not assign to this: lvalue required as left operand of assignment", "LastEditDate": "2013-11-19T23:52:25.460", "Id": "20083516", "Score": "1", "Body": "<pre><code>class scope{  \n    //...\n    scope* parent;  \n    //...\npublic:  \n    //...\n    void leavescope();  \n    //...\n};  \nvoid scope::leavescope(){  \n    this = this-&gt;parent; // complains about this line  \n}\n</code></pre>\n<p>I'm trying to implement scope, and am having trouble leaving a scope and getting back to the outer level scope.</p>\n", "Tags": "<c++><class><scope><variable-assignment><lvalue>", "OwnerUserId": "2052614", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_20083516_20083551_0": {"section_id": 5895, "quality": 1.0, "length": 13}}, "n3337": {"so_20083516_20083551_0": {"section_id": 5666, "quality": 1.0, "length": 13}}, "n4659": {"so_20083516_20083551_0": {"section_id": 7378, "quality": 1.0, "length": 13}}}});