post_cb({"bq_ids": {"n4140": {"so_30264577_30264691_0": {"length": 37, "quality": 0.925, "section_id": 7043}}, "n3337": {"so_30264577_30264691_0": {"length": 36, "quality": 0.9, "section_id": 6788}}, "n4659": {"so_30264577_30264691_0": {"length": 37, "quality": 0.925, "section_id": 8540}}}, "30264577": {"ViewCount": "83", "Body": "<p>Suppose I have template code in <code>MyHeader.h</code>, which is then included in 2 compilation units, <code>A.cpp</code> and <code>B.cpp</code>. Both of these files then instantiate the same template function, say <code>f&lt;int&gt;();</code> (the latter defined non-inline in <code>MyHeader.h</code>).</p>\n<p>As far as I know, what's happening is the following. The compiler generates the code for <code>f&lt;int&gt;();</code> in both <code>A.obj</code> and <code>B.obj</code>, then the liker discards one of the symbols at the linking stage. </p>\n<p><strong>My question:</strong> is this approach always \"safe\"? I.e., can there be linkers that will complain about duplicate symbols? <strong>Does the standard say anything about this?</strong> If yes, I cannot see any solution then to make all my template functions <code>inline</code>.</p>\n", "AcceptedAnswerId": "30264691", "Title": "Including template code in multiple compilation units, will it always link without inline?", "CreationDate": "2015-05-15T16:36:35.513", "Id": "30264577", "CommentCount": "8", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2015-05-15T16:43:08.810", "LastEditorUserId": "3093378", "LastActivityDate": "2015-05-15T16:49:19.957", "Score": "4", "OwnerUserId": "3093378", "Tags": "<c++><templates><linker>", "AnswerCount": "1"}, "30264691": {"Id": "30264691", "PostTypeId": "2", "Body": "<p>This is always safe and covered by the ODR. \u00a73.2/6:</p>\n<blockquote>\n<p id=\"so_30264577_30264691_0\"><strong>There can be more than one definition of a [\u2026] non-static function template (14.5.6) [\u2026] in a program</strong> provided that each definition appears in a different translation unit,\n  and provided the definitions satisfy the following requirements. [\u2026long list\u2026] <strong>If the definitions of <code>D</code> satisfy all these requirements,\n  then the behavior is as if there were a single definition of <code>D</code>.</strong> If the definitions of <code>D</code> do not satisfy these requirements, then the behavior is undefined. </p>\n</blockquote>\n<p>The requirement list that I skipped should be satisfied if you write sane code. </p>\n", "LastEditorUserId": "3647361", "LastActivityDate": "2015-05-15T16:49:19.957", "Score": "7", "CreationDate": "2015-05-15T16:44:16.983", "ParentId": "30264577", "CommentCount": "6", "OwnerUserId": "3647361", "LastEditDate": "2015-05-15T16:49:19.957"}});