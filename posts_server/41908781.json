post_cb({"41909021": {"ParentId": "41908781", "CommentCount": "2", "CreationDate": "2017-01-28T11:05:12.483", "OwnerUserId": "2079303", "PostTypeId": "2", "Id": "41909021", "Score": "2", "Body": "<p>A quote from the standard (draft):</p>\n<blockquote>\n<p id=\"so_41908781_41909021_0\">A non-static member shall not appear in a default argument unless it appears as the id-expression of a class member access expression ([expr.ref]) or unless it is used to form a pointer to member ([expr.unary.op])</p>\n</blockquote>\n<hr>\n<blockquote>\n<p id=\"so_41908781_41909021_1\">Note: I've not provided the default value while defining the method. I guess that isn't necessary.</p>\n</blockquote>\n<p>It isn't even allowed to redefine a default argument in a redeclaration (which a definition of a previously declared function is).</p>\n<blockquote>\n<p id=\"so_41908781_41909021_2\">Only static or constant values are allowed for default values ?</p>\n</blockquote>\n<p>No. Non-constant values are allowed as well. But there are many exceptions, and members are included in the exceptions.</p>\n<hr>\n<p>You can work around the limitation by using an overload.</p>\n</hr></hr>", "LastActivityDate": "2017-01-28T11:05:12.483"}, "41908982": {"ParentId": "41908781", "CommentCount": "0", "CreationDate": "2017-01-28T11:01:23.347", "OwnerUserId": "5910563", "PostTypeId": "2", "Id": "41908982", "Score": "2", "Body": "<p>The behaviour you're looking for can't be done in C++. The default value has to be \"somewhat constant\". That means an actual constant, or a static field etc. There's more info <a href=\"http://en.cppreference.com/w/cpp/language/default_arguments\" rel=\"nofollow noreferrer\">here</a> about what is allowed and not for default arguments.</p>\n<hr>\n<p>One way to solve this issue is to have an overload without any arguments which just calls the one-argument function starting at <code>head</code>.\nAnother is to use null as the default argument and replace it with head when provided. This might break if you reach null leaf nodes, though.</p>\n</hr>", "LastActivityDate": "2017-01-28T11:01:23.347"}, "bq_ids": {"n4140": {"so_41908781_41909021_0": {"section_id": 3260, "quality": 0.8125, "length": 13}}, "n3337": {"so_41908781_41909021_0": {"section_id": 3132, "quality": 0.8125, "length": 13}}, "n4659": {"so_41908781_41909021_0": {"section_id": 4018, "quality": 0.875, "length": 14}}}, "41908781": {"CommentCount": "2", "ViewCount": "44", "PostTypeId": "1", "LastEditorUserId": "5910563", "CreationDate": "2017-01-28T10:37:07.520", "LastActivityDate": "2017-01-28T11:05:12.483", "Title": "Member property as default value for method", "AcceptedAnswerId": "41908982", "LastEditDate": "2017-01-28T11:02:09.873", "Id": "41908781", "Score": "2", "Body": "<p>I've a header file which looks like the following</p>\n<pre><code>#ifndef BINARY_SEARCH_TREE_H\n#define BINARY_SEARCH_TREE_H\n\nstruct Node\n{\n  int data;\n  Node *left, *right;\n  Node(int data);\n};\n\nclass BinarySearchTree\n{\n  Node *head;\n public:\n  BinarySearchTree();\n  void insert(int data);\n  void inorder(Node *cur = head);\n};\n\n#endif\n</code></pre>\n<p>and It says</p>\n<pre><code>In file included from Binary_Search_Tree.cpp:2:0:\nBinary_Search_Tree.h:17:28: error: invalid use of non-static data member \u2018BinarySearchTree::head\u2019\n   void inorder(Node *cur = head);\n                            ^\nBinary_Search_Tree.h:13:9: note: declared here\n   Node *head;\n</code></pre>\n<p>Note: I've not provided the default value while defining the method. I guess that isn't necessary.</p>\n<p>Only static or constant values are allowed for default values ? if yes then why ?\nOr something else is wrong ?</p>\n", "Tags": "<c++><c++11><default-value>", "OwnerUserId": "3142049", "AnswerCount": "2"}});