post_cb({"35611635": {"ParentId": "35611069", "CommentCount": "0", "Body": "<p>The lifetime of <code>std::clog</code> and friends are managed by a static object of type <code>std::ios_base::Init</code> (C++11 27.5.3.1.6 Class ios_base::Init).  When that object is destroyed (after <code>main()</code> returns), it performs the following actions being destroying <code>std::clog</code> and related <code>iostream</code> objects (C++11 27.5.3.1.6/4 Class ios_base::Init):</p>\n<blockquote>\n<p id=\"so_35611069_35611635_0\">calls cout.flush(), cerr.flush(), clog.flush(), wcout.flush(), wcerr.flush(), wclog.flush()</p>\n</blockquote>\n<p>The call to <code>flush()</code> will use the <code>rdbuf()</code> object in <code>clog</code>, and since the <code>logfile.rdbuf()</code> passed earlier to <code>clog</code> has been destroyed you get undefined behavior.</p>\n", "OwnerUserId": "12711", "PostTypeId": "2", "Id": "35611635", "Score": "3", "CreationDate": "2016-02-24T19:48:03.023", "LastActivityDate": "2016-02-24T19:48:03.023"}, "bq_ids": {"n4140": {"so_35611069_35611635_0": {"section_id": 1953, "quality": 1.0, "length": 7}}, "n3337": {"so_35611069_35611635_0": {"section_id": 1942, "quality": 1.0, "length": 7}}, "n4659": {"so_35611069_35611635_0": {"section_id": 2224, "quality": 1.0, "length": 7}}}, "35611069": {"CommentCount": "8", "ViewCount": "41", "CreationDate": "2016-02-24T19:17:37.180", "LastActivityDate": "2016-02-24T19:48:03.023", "Title": "segv on exit when reassigning std::clog", "AcceptedAnswerId": "35611635", "PostTypeId": "1", "Id": "35611069", "Score": "1", "Body": "<p>I get a segmentation fault after exit with g++ for the following program:</p>\n<pre><code>#include &lt;iostream&gt;                                                         \n#include &lt;fstream&gt;                                                          \n\nint                                                                         \nmain()                                                                      \n    {                                                                       \n    std::ofstream logfile( \"logfile\" ) ;                                    \n    if( !logfile.is_open() )                                                \n        {                                                                   \n        std::cerr &lt;&lt; \"oops ofstream\\n\" ;                                    \n        return -1 ;                                                         \n        }                                                                   \n    std::clog.flush() ;                                                     \n    std::clog.rdbuf( logfile.rdbuf() ) ;                                    \n\n    std::clog &lt;&lt; \"test output\\n\" ;                                          \n    std::clog.flush() ;                                                     \n    std::cerr &lt;&lt; \"all done\\n\" ;                                             \n\n    return 0 ;                                                              \n    }                                                                       \n</code></pre>\n<p>Any clue why?</p>\n", "Tags": "<c++><std>", "OwnerUserId": "5976463", "AnswerCount": "1"}});