post_cb({"15175203": {"ViewCount": "55", "Body": "<p>How come that the following code is wrong? Which type of parameters does a template accept?</p>\n<pre><code>class MyClass\n{\n    int var;\n};\n\ntemplate &lt;MyClass a&gt; struct s\n{\n\n};\n\nint main()\n{\n    MyClass var;\n    struct s&lt;var&gt;;\n\n\n    return 0;\n}\n</code></pre>\n", "AcceptedAnswerId": "15175222", "Title": "Template can't accept an object as parameter", "CreationDate": "2013-03-02T13:50:52.120", "Id": "15175203", "CommentCount": "1", "PostTypeId": "1", "LastActivityDate": "2013-03-02T13:58:01.973", "Score": "0", "OwnerUserId": "1494037", "Tags": "<c++><templates>", "AnswerCount": "1"}, "15175222": {"Id": "15175222", "PostTypeId": "2", "Body": "<p>Non-type template parameters are constrained, not everything can be used. In particular, they must be compile-time constants, which is not your case. Concerning your template <em>definition</em>:</p>\n<pre><code>template &lt;MyClass a&gt; struct s\n//        ^^^^^^^\n{\n};\n</code></pre>\n<p>See Paragraph 14.1/4 of the C++11 Standard:</p>\n<blockquote>\n<p id=\"so_15175203_15175222_0\">A non-type template-parameter <strong>shall have one of the following (optionally cv-qualified) types</strong>:</p>\n<p id=\"so_15175203_15175222_1\">\u2014 integral or enumeration type,</p>\n<p id=\"so_15175203_15175222_2\">\u2014 pointer to object or pointer to function,</p>\n<p id=\"so_15175203_15175222_3\">\u2014 lvalue reference to object or lvalue reference to function,</p>\n<p id=\"so_15175203_15175222_4\">\u2014 pointer to member,</p>\n<p id=\"so_15175203_15175222_5\">\u2014 std::nullptr_t.</p>\n</blockquote>\n<p>As you can see, user-defined types are not allowed. Concerning your template's <em>instantiation</em>, then:</p>\n<pre><code>struct s&lt;var&gt;;\n//       ^^^ You most likely meant something like s&lt;var&gt; obj, but nevermind\n</code></pre>\n<p>See Paragraph 14.3.2/1 of the C++11 Standard:</p>\n<blockquote>\n<p id=\"so_15175203_15175222_6\">A template-argument for a non-type, non-template template-parameter <strong>shall be one of</strong>:</p>\n<p id=\"so_15175203_15175222_7\">\u2014 for a non-type template-parameter of integral or enumeration type, a converted constant expression\n  (5.19) of the type of the template-parameter; or</p>\n<p id=\"so_15175203_15175222_8\">\u2014 the name of a non-type template-parameter; or</p>\n<p id=\"so_15175203_15175222_9\">\u2014 a constant expression (5.19) that designates the address of an object with static storage duration and\n  external or internal linkage or a function with external or internal linkage, including function templates\n  and function template-ids but excluding non-static class members, expressed (ignoring parentheses) as\n  &amp; id-expression, except that the &amp; may be omitted if the name refers to a function or array and shall\n  be omitted if the corresponding template-parameter is a reference; or</p>\n<p id=\"so_15175203_15175222_10\">\u2014 a constant expression that evaluates to a null pointer value (4.10); or</p>\n<p id=\"so_15175203_15175222_11\">\u2014 a constant expression that evaluates to a null member pointer value (4.11); or</p>\n<p id=\"so_15175203_15175222_12\">\u2014 a pointer to member expressed as described in 5.3.1.</p>\n</blockquote>\n", "LastEditorUserId": "1932150", "LastActivityDate": "2013-03-02T13:58:01.973", "Score": "4", "CreationDate": "2013-03-02T13:51:49.107", "ParentId": "15175203", "CommentCount": "0", "LastEditDate": "2013-03-02T13:58:01.973", "OwnerUserId": "1932150"}, "bq_ids": {"n4140": {"so_15175203_15175222_9": {"length": 40, "quality": 0.975609756097561, "section_id": 87}, "so_15175203_15175222_11": {"length": 7, "quality": 0.875, "section_id": 87}, "so_15175203_15175222_0": {"length": 8, "quality": 1.0, "section_id": 57}, "so_15175203_15175222_2": {"length": 4, "quality": 1.0, "section_id": 57}, "so_15175203_15175222_10": {"length": 6, "quality": 0.8571428571428571, "section_id": 87}, "so_15175203_15175222_6": {"length": 5, "quality": 1.0, "section_id": 87}, "so_15175203_15175222_7": {"length": 10, "quality": 0.9090909090909091, "section_id": 87}, "so_15175203_15175222_3": {"length": 6, "quality": 1.0, "section_id": 57}, "so_15175203_15175222_12": {"length": 4, "quality": 0.8, "section_id": 87}}, "n3337": {"so_15175203_15175222_11": {"length": 7, "quality": 0.875, "section_id": 82}, "so_15175203_15175222_0": {"length": 8, "quality": 1.0, "section_id": 52}, "so_15175203_15175222_9": {"length": 40, "quality": 0.975609756097561, "section_id": 82}, "so_15175203_15175222_7": {"length": 10, "quality": 0.9090909090909091, "section_id": 82}, "so_15175203_15175222_10": {"length": 6, "quality": 0.8571428571428571, "section_id": 36}, "so_15175203_15175222_6": {"length": 5, "quality": 1.0, "section_id": 82}, "so_15175203_15175222_2": {"length": 4, "quality": 1.0, "section_id": 52}, "so_15175203_15175222_3": {"length": 6, "quality": 1.0, "section_id": 52}, "so_15175203_15175222_12": {"length": 4, "quality": 0.8, "section_id": 82}}, "n4659": {"so_15175203_15175222_11": {"length": 5, "quality": 0.625, "section_id": 42}, "so_15175203_15175222_0": {"length": 8, "quality": 1.0, "section_id": 59}, "so_15175203_15175222_2": {"length": 4, "quality": 1.0, "section_id": 59}, "so_15175203_15175222_10": {"length": 5, "quality": 0.7142857142857143, "section_id": 7690}, "so_15175203_15175222_7": {"length": 7, "quality": 0.6363636363636364, "section_id": 90}, "so_15175203_15175222_3": {"length": 6, "quality": 1.0, "section_id": 59}}}});