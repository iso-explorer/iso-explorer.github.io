post_cb({"40200807": {"CommentCount": "13", "AcceptedAnswerId": "40201001", "PostTypeId": "1", "LastEditorUserId": "5645940", "CreationDate": "2016-10-23T07:59:25.567", "LastActivityDate": "2016-10-23T11:18:55.847", "LastEditDate": "2016-10-23T11:18:55.847", "ViewCount": "766", "FavoriteCount": "2", "Title": "Why is the conversion from char*** to char*const** invalid?", "Id": "40200807", "Score": "16", "Body": "<p>According to <a href=\"http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/n4606.pdf\"><em>N4606</em></a>, 4.5 [conv.qual] paragraph 3 reads</p>\n<blockquote>\n<p id=\"so_40200807_40200807_0\">A prvalue expression of type <code>T1</code> can be converted to type <code>T2</code> if the following conditions are satisfied, where cv<sub>i</sub><sup>j</sup> denotes the cv-qualifiers in the cv-qualification signature of T<sub>j</sub>:</p>\n<ul>\n<li>...</li>\n<li><strong>If the cv<sup>1</sup><sub>i</sub> and cv<sup>2</sup><sub>i</sub> are different, then const is in every cv<sup>2</sup><sub>k</sub> for 0 &lt; k &lt; i.</strong></li>\n</ul>\n</blockquote>\n<p>The final bullet above suggests that the following conversion fails.</p>\n<pre><code>T1 : pointer to / pointer to /       pointer to / T\nT2 : pointer to / pointer to / const pointer to / T\n</code></pre>\n<p>In order to succeed, <code>T2</code> must be <code>pointer to / const pointer to / const pointer to / T</code>. <strong>Isn't <code>T2</code> sufficient just for being more cv-qualified than <code>T1</code>?</strong> Why are more cv-qualifiers in lower dimensions necessary for the conversion to succeed?</p>\n", "Tags": "<c++>", "OwnerUserId": "5645940", "AnswerCount": "1"}, "40201001": {"ParentId": "40200807", "CommentCount": "5", "Body": "<p>Consider the following code:</p>\n<pre><code>char str[] = \"p1 should always point here.\";\nchar* const p1 = str;\nchar** p2 = nullptr;\nchar*** p3 = &amp;p2;\n\nchar str2[] = \"Can we make p1 point to here?\"\n// p1 = str2; // does not work: const violation\n\n// But:\nchar*const** p4=p3; // if it were allowed\n*p4 = &amp;p1; // no const violation, as *p4 is of type char*const*\n**p3 = str2; // oops, changed p1!\n</code></pre>\n<p>So if the conversion in question were allowed,  you'd get to change a constant variable (p1) without any formal const violation.</p>\n", "OwnerUserId": "1032073", "PostTypeId": "2", "Id": "40201001", "Score": "23", "CreationDate": "2016-10-23T08:28:13.200", "LastActivityDate": "2016-10-23T08:28:13.200"}, "bq_ids": {"n4140": {"so_40200807_40200807_0": {"section_id": 17, "quality": 0.5333333333333333, "length": 8}}, "n3337": {"so_40200807_40200807_0": {"section_id": 14, "quality": 0.5333333333333333, "length": 8}}, "n4659": {"so_40200807_40200807_0": {"section_id": 18, "quality": 0.8666666666666667, "length": 13}}}});