post_cb({"33993032": {"CommentCount": "10", "ViewCount": "173", "CreationDate": "2015-11-30T06:59:45.590", "LastActivityDate": "2015-11-30T21:26:34.957", "Title": "VS 2015 breaks code using CLOCKS_PER_SEC in preprocessos", "AcceptedAnswerId": "33993212", "PostTypeId": "1", "Id": "33993032", "Score": "2", "Body": "<p>I am porting my old codebase to VS 2015.\nThe code is :</p>\n<pre><code>#if XYZ \n  ....\n#elif CLOCKS_PER_SEC &gt; 999 //&lt;&lt; Getting error here.\n  ...\n#endif\n</code></pre>\n<p>I am getting error in line <code>CLOCKS_PER_SEC</code> :</p>\n<pre><code>Severity    Code    Description \nError       C1012   unmatched parenthesis: missing ')'\n</code></pre>\n<p>Looking at definition of <code>CLOCKS_PER_SEC</code> in <code>time.h</code></p>\n<pre><code>// The number of clock ticks per second\n#define CLOCKS_PER_SEC  ((clock_t)1000)\n</code></pre>\n<p>So, it looks like it is because of <code>clock_t</code> as pre-processor macros can not work with that.</p>\n<p>Please suggest how can i fix it ?</p>\n", "Tags": "<c++><compiler-errors><visual-studio-2015>", "OwnerUserId": "728407", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_33993032_33993212_0": {"section_id": 6335, "quality": 0.7692307692307693, "length": 10}}, "n3337": {"so_33993032_33993212_0": {"section_id": 6092, "quality": 0.7692307692307693, "length": 10}}, "n4659": {"so_33993032_33993212_0": {"section_id": 7845, "quality": 0.7692307692307693, "length": 10}}}, "33993212": {"ParentId": "33993032", "PostTypeId": "2", "CommentCount": "4", "CreationDate": "2015-11-30T07:12:19.560", "Score": "3", "LastEditorUserId": "187690", "LastEditDate": "2015-11-30T21:26:34.957", "Id": "33993212", "OwnerUserId": "187690", "Body": "<p>C language specification states in 7.1.4/1 that </p>\n<blockquote>\n<p id=\"so_33993032_33993212_0\">All object-like macros listed as expanding to integer constant\n  expressions shall additionally be suitable for use in #if\n  preprocessing directives.</p>\n</blockquote>\n<p>However, macro <code>CLOCKS_PER_SEC</code> is not listed as integer constant expression (7.27.1/2). This means that it cannot be portably used under <code>#if</code>.</p>\n<p>This is exactly what you just ran into. You should develop an alternative way to implement conditional compilation in your code. In general case <code>CLOCKS_PER_SEC</code> cannot be used with <code>#if</code>. The language standard requires <code>CLOCKS_PER_SEC</code> to have <code>clock_t</code> type, not <code>int</code> type, which means that the cast is perfectly justified there.</p>\n<p><strong>P.S.</strong> Note that your current definition of <code>CLOCKS_PER_SEC</code> <em>does</em> qualify as integral constant expression, but <code>#if</code> imposes some additional requirements on the conditional expression. Namely, casts are not allowed.</p>\n<p><strong>P.P.S.</strong> In the original version of C99, <code>CLOCKS_PER_SEC</code> was described as a <em>constant</em> expression. However, in C99+TC2 the word \"constant\" is no longer there. It was removed in order to eliminate the contradiction between the aforementioned requirements: 1) constant expression macros being usable under <code>#if</code>, which precludes casts, and 2) <code>CLOCKS_PER_SEC</code> having <code>clock_t</code> type, which is only achievable through a cast. The corresponding defect report can be found here: <a href=\"http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_281.htm\" rel=\"nofollow\">http://www.open-std.org/jtc1/sc22/wg14/www/docs/dr_281.htm</a></p>\n", "LastActivityDate": "2015-11-30T21:26:34.957"}});