post_cb({"16691215": {"CommentCount": "1", "Body": "<p>The relevant quote from the standard is 5.2.3 [expr.type.conv]/2</p>\n<blockquote>\n<p id=\"so_16690957_16691215_0\">The expression T(), where T is a simple-type-specifier or typename-specifier for a non-array complete ob- ject type or the (possibly cv-qualified) void type, creates a prvalue of the specified type,which is value- initialized (8.5; no initialization is done for the void() case). [Note: if T is a non-class type that is cv-qualified, the cv-qualifiers are ignored when determining the type of the resulting prvalue (3.10). \u2014end note ]</p>\n</blockquote>\n<p>The wording in the standard explicitly mentions (in non-normative form) that for <strong>non-class</strong> types the const-volatile qualification is dropped, but in your case the type is a <strong>class</strong>, and the note does not apply. It seems that VS is applying the same rule that is applied for non-class types.</p>\n", "CreationDate": "2013-05-22T12:01:29.720", "ParentId": "16690957", "Id": "16691215", "LastActivityDate": "2013-05-22T12:01:29.720", "PostTypeId": "2", "Score": "3", "OwnerUserId": "36565"}, "16690957": {"CreationDate": "2013-05-22T11:49:09.187", "ViewCount": "115", "FavoriteCount": "1", "Id": "16690957", "AcceptedAnswerId": "16691215", "Score": "8", "Title": "How come a const temporary chooses to call a non-const member function over a const one?", "LastEditorUserId": "150634", "CommentCount": "8", "Body": "<p>The example code is taken from: <a href=\"http://en.cppreference.com/w/cpp/types/add_cv\" rel=\"nofollow\">http://en.cppreference.com/w/cpp/types/add_cv</a>\n(I modified a little.)</p>\n<pre><code>struct foo\n{\n    void m() { std::cout &lt;&lt; \"Non-cv\\n\"; }\n    void m() const { std::cout &lt;&lt; \"Const\\n\"; }\n};\n\ntemplate&lt;class T&gt;\nvoid call_m()\n{\n  T().m();\n}\n\nint main()\n{\n    call_m&lt;foo&gt;();\n    call_m&lt;const foo&gt;(); //here\n}\n</code></pre>\n<p>And the output is:</p>\n<pre><code>Non-cv\nNon-cv\n</code></pre>\n<p>in the second call, <code>T</code> is const qualified, so <code>T()</code> should call the const version, right? or are there some special rules I missed?</p>\n", "ClosedDate": "2013-05-22T12:13:18.920", "LastEditDate": "2013-05-22T12:23:25.487", "Tags": "<c++><visual-c++><visual-studio-2012><const-method>", "LastActivityDate": "2013-05-22T12:23:25.487", "PostTypeId": "1", "AnswerCount": "1", "OwnerUserId": "1971684"}, "bq_ids": {"n4140": {"so_16690957_16691215_0": {"length": 28, "quality": 0.7567567567567568, "section_id": 6000}}, "n3337": {"so_16690957_16691215_0": {"length": 29, "quality": 0.7837837837837838, "section_id": 5768}}}});