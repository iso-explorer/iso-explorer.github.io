post_cb({"27227244": {"ParentId": "27227189", "CommentCount": "0", "CreationDate": "2014-12-01T11:18:53.683", "OwnerUserId": "2382136", "PostTypeId": "2", "Id": "27227244", "Score": "5", "Body": "<p>The answer is - because that's the way C++ works. The parameters must be the same. C++11 standard says in 10.3.2:</p>\n<blockquote>\n<p id=\"so_27227189_27227244_0\">If a virtual member function vf is declared in a class Base and in a class Derived, derived directly or indirectly from Base, a member function vf with the same name, parameter-type-list (8.3.5), cv-qualification, and refqualifier (or absence of same) as Base::vf is declared, then Derived::vf is also virtual (whether or not it is so declared) and it overrides 11 1 Base::vf.</p>\n</blockquote>\n", "LastActivityDate": "2014-12-01T11:18:53.683"}, "27227189": {"CommentCount": "7", "ViewCount": "7010", "PostTypeId": "1", "LastEditorUserId": "2179395", "CreationDate": "2014-12-01T11:16:06.547", "LastActivityDate": "2016-11-11T13:20:46.843", "Title": "overload virtual function with different parameters in c++", "LastEditDate": "2016-11-11T13:20:46.843", "Id": "27227189", "Score": "2", "Body": "<p>I want to overload virtual function with different parameters in c++ but it doesn't work.</p>\n<pre><code>virtual void Draw( int nDeltaX, int nDeltaY);\nvirtual void Draw( int nDeltaX, int nDeltaY, bool m_bFlag);\n</code></pre>\n<p>Can you tell me the reason? </p>\n", "Tags": "<c++>", "OwnerUserId": "2179395", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_27227189_27227244_0": {"section_id": 7003, "quality": 0.9375, "length": 30}}, "n3337": {"so_27227189_27227244_0": {"section_id": 6749, "quality": 0.9375, "length": 30}}, "n4659": {"so_27227189_27227244_0": {"section_id": 8500, "quality": 0.9375, "length": 30}}}});