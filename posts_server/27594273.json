post_cb({"27594273": {"CommentCount": "2", "AcceptedAnswerId": "27594665", "CreationDate": "2014-12-21T22:04:26.593", "LastActivityDate": "2014-12-21T23:00:02.900", "PostTypeId": "1", "ViewCount": "233", "FavoriteCount": "1", "Title": "own std::is_function implementation", "Id": "27594273", "Score": "2", "Body": "<p>It's suggested <a href=\"http://en.cppreference.com/w/cpp/types/is_function\" rel=\"nofollow\">here</a> to be implemented in a following way:</p>\n<pre><code>template&lt;class Ret, class... Args&gt;\nstruct is_function&lt;Ret(Args...)const&gt; : std::true_type {};\ntemplate&lt;class Ret, class... Args&gt;\nstruct is_function&lt;Ret(Args...)volatile&gt; : std::true_type {};\n</code></pre>\n<p>But is it a valid function syntax? Visual Studio 2013 gives an error:</p>\n<pre><code>error C2270: 'abstract declarator' : modifiers not allowed on nonmember functions   \n</code></pre>\n", "Tags": "<c++><stl>", "OwnerUserId": "1882829", "AnswerCount": "1"}, "27594665": {"ParentId": "27594273", "CommentCount": "3", "Body": "<p>The <code>const</code> or <code>volatile</code> after the function parameters is called a cv-qualifier-seq.\nSection 8.3.5 paragraph 6 of the C++14 standard says:</p>\n<blockquote>\n<p id=\"so_27594273_27594665_0\">A function type with a cv-qualifier-seq or a ref-qualifier (including\n  a type named by typedef-name (7.1.3,14.1)) shall appear only as:</p>\n<p id=\"so_27594273_27594665_1\">\u2014 the function type for a non-static member function, </p>\n<p id=\"so_27594273_27594665_2\">\u2014 the function type to which a pointer to member refers,</p>\n<p id=\"so_27594273_27594665_3\">\u2014 the top-level function type of a function typedef declaration or alias-declaration,</p>\n<p id=\"so_27594273_27594665_4\">\u2014 the type-id in the default argument of a type-parameter (14.1), or </p>\n<p id=\"so_27594273_27594665_5\">\u2014 the type-id of a template-argument for a type-parameter (14.3.1).</p>\n</blockquote>\n<p>In your example, <code>Ret(Args...)const</code> and <code>Ret(Args...)volatile</code> satisfy the last case.</p>\n", "OwnerUserId": "951890", "PostTypeId": "2", "Id": "27594665", "Score": "3", "CreationDate": "2014-12-21T23:00:02.900", "LastActivityDate": "2014-12-21T23:00:02.900"}, "bq_ids": {"n4140": {"so_27594273_27594665_4": {"section_id": 3242, "quality": 0.8, "length": 4}, "so_27594273_27594665_1": {"section_id": 12, "quality": 1.0, "length": 5}, "so_27594273_27594665_2": {"section_id": 12, "quality": 1.0, "length": 5}, "so_27594273_27594665_0": {"section_id": 3242, "quality": 0.9, "length": 9}, "so_27594273_27594665_3": {"section_id": 3242, "quality": 1.0, "length": 7}}, "n3337": {"so_27594273_27594665_4": {"section_id": 3115, "quality": 0.8, "length": 4}, "so_27594273_27594665_1": {"section_id": 9, "quality": 1.0, "length": 5}, "so_27594273_27594665_2": {"section_id": 9, "quality": 1.0, "length": 5}, "so_27594273_27594665_3": {"section_id": 3115, "quality": 1.0, "length": 7}}, "n4659": {"so_27594273_27594665_4": {"section_id": 3998, "quality": 0.8, "length": 4}, "so_27594273_27594665_1": {"section_id": 13, "quality": 1.0, "length": 5}, "so_27594273_27594665_2": {"section_id": 13, "quality": 1.0, "length": 5}, "so_27594273_27594665_0": {"section_id": 3998, "quality": 0.9, "length": 9}, "so_27594273_27594665_3": {"section_id": 3998, "quality": 1.0, "length": 7}}}});