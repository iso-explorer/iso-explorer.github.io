post_cb({"37442606": {"CommentCount": "0", "ViewCount": "85", "CreationDate": "2016-05-25T16:13:13.813", "LastActivityDate": "2016-05-25T16:13:13.813", "Title": "Calling a function with internal linkage via pointer from another translation unit", "AcceptedAnswerId": "37442607", "PostTypeId": "1", "Id": "37442606", "Score": "3", "Body": "<p>Can we declare a callback function in an anonymous namespace (thus giving it internal linkage), knowing that it will be called from another translation unit (another library even)?</p>\n<p>Some lib:</p>\n<pre><code>void register_callback(void (*cb)())\n{\n  ..\n  cb();\n  ..\n}\n</code></pre>\n<p>Main program</p>\n<pre><code>namespace {\nint foo_cb() { ... } // internal linkage\n}\n\nint main()\n{\n   register_callback(foo_cb);\n}\n</code></pre>\n", "Tags": "<c++><callback><function-pointers><linkage>", "OwnerUserId": "2805305", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_37442606_37442607_0": {"section_id": 7135, "quality": 0.95, "length": 19}, "so_37442606_37442607_2": {"section_id": 7137, "quality": 1.0, "length": 18}}, "n3337": {"so_37442606_37442607_0": {"section_id": 6879, "quality": 0.95, "length": 19}, "so_37442606_37442607_2": {"section_id": 6881, "quality": 1.0, "length": 18}}, "n4659": {"so_37442606_37442607_0": {"section_id": 8636, "quality": 0.95, "length": 19}, "so_37442606_37442607_2": {"section_id": 8638, "quality": 1.0, "length": 18}}}, "37442607": {"ParentId": "37442606", "CommentCount": "1", "Body": "<p>TL;DR: yes, it is ok</p>\n<hr>\n<p>From [basic.link] (emphasis mine):</p>\n<blockquote>\n<ol start=\"2\">\n<li><p id=\"so_37442606_37442607_0\"><strong>A name</strong> is said to have <em>linkage</em> when it might denote the same object,\n  reference, function, type, template, namespace or value as a name\n  introduced by a declaration in another scope:</p>\n<ul>\n<li>When a name has <em>internal linkage</em> , the entity it denotes can be\n  referred to <strong>by names</strong> from other scopes in the same translation unit.</li>\n</ul></li>\n<li><p id=\"so_37442606_37442607_1\">[...]</p></li>\n<li><p id=\"so_37442606_37442607_2\">An unnamed namespace or [...] has internal linkage. [...]. A name having namespace scope that has not been\n  given internal linkage above has the same linkage as the enclosing\n  namespace if it is the name of</p>\n<ul>\n<li>a function; or</li>\n</ul></li>\n</ol>\n</blockquote>\n<p>So basically <em>linkage</em> is a property of <strong>names</strong> rather than of objects, functions etc. This means that a function declared inside an unnamed namespace cannot be called <strong>by name</strong> from another translation unit. There is no restriction to call it by it's pointer.</p>\n</hr>", "OwnerUserId": "2805305", "PostTypeId": "2", "Id": "37442607", "Score": "7", "CreationDate": "2016-05-25T16:13:13.813", "LastActivityDate": "2016-05-25T16:13:13.813"}});