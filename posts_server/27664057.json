post_cb({"27664057": {"CommentCount": "10", "ViewCount": "139", "PostTypeId": "1", "OwnerDisplayName": "user2953119", "FavoriteCount": "2", "CreationDate": "2014-12-27T03:17:33.203", "LastActivityDate": "2015-01-03T17:33:24.077", "LastEditDate": "2014-12-27T03:23:37.603", "LastEditorDisplayName": "user2953119", "Title": "Enum introduced by using declaration", "Id": "27664057", "Score": "5", "Body": "<p>I'm trying to understand enum which defined with nested-name-specifiers. What the standard says is <code>N4296:7.2/4 [dcl.enum]</code>:</p>\n<blockquote>\n<p id=\"so_27664057_27664057_0\">If the enum-key is followed by a nested-name-specifier, the\n  enum-specifier shall refer to an enumeration that was previously\n  declared directly in the class or namespace to which the\n  nested-name-specifier refers (<em>i.e., neither inherited nor introduced</em>\n<em>by a using-declaration</em>), and the enum-specifier shall appear in a\n  namespace enclosing the previous declaration.</p>\n</blockquote>\n<p>Well, why does the following example work, then?</p>\n<pre><code>#include &lt;iostream&gt;\n\nnamespace A \n{\n    namespace B\n    {\n        enum E : int;\n    }\n}\nnamespace C\n{\n    using A::B::E;\n}\n\nenum C::E : int { x = 2 };\n\nint main()\n{ \n}\n</code></pre>\n<p><strong><a href=\"http://coliru.stacked-crooked.com/a/017f7b1d72edcc37\" rel=\"nofollow\">DEMO</a></strong></p>\n<p>In the <code>namescape C</code>, we declared <code>enum E</code> by using declaration, and then referred to it with the enum definition. The compiler might have thrown an error, but it didn't. What was wrong, where was misunderstanding?</p>\n", "Tags": "<c++><enums>", "AnswerCount": "1"}, "27757597": {"ParentId": "27664057", "CommentCount": "0", "Body": "<p>Clearly, for the reasons you give, this is a compiler bug.<br>\nInterestingly, both Clang 3.5.0 and GCC 4.9 accept the program.</br></p>\n", "OwnerUserId": "560648", "PostTypeId": "2", "Id": "27757597", "Score": "2", "CreationDate": "2015-01-03T17:33:24.077", "LastActivityDate": "2015-01-03T17:33:24.077"}, "bq_ids": {"n4140": {"so_27664057_27664057_0": {"section_id": 5463, "quality": 1.0, "length": 25}}, "n3337": {"so_27664057_27664057_0": {"section_id": 5250, "quality": 1.0, "length": 25}}, "n4659": {"so_27664057_27664057_0": {"section_id": 6897, "quality": 1.0, "length": 25}}}});