post_cb({"27809534": {"ParentId": "27806775", "CommentCount": "0", "Body": "<p>It's consistent with the way definitions of member function normally work. You only can define functions you have declared first. For example this won't compile:</p>\n<pre><code>struct B {\n};\n\nB::B() {\n}\n</code></pre>\n<p>The constructor is implicitly declared, and so can't be explicitly defined.</p>\n<p>The paragraph you quoted says that this works the same for template specializations.</p>\n", "OwnerUserId": "56338", "PostTypeId": "2", "Id": "27809534", "Score": "3", "CreationDate": "2015-01-07T00:18:40.450", "LastActivityDate": "2015-01-07T00:18:40.450"}, "27806775": {"CommentCount": "1", "ViewCount": "217", "PostTypeId": "1", "LastEditorUserId": "1392132", "CreationDate": "2015-01-06T20:37:11.953", "LastActivityDate": "2015-01-07T00:18:40.450", "Title": "class template special member function explicit specialization", "AcceptedAnswerId": "27809534", "LastEditDate": "2015-01-07T00:16:04.443", "Id": "27806775", "Score": "1", "Body": "<p>In c++ iso 2003/2011 [temp.expl.spec]/4 written that</p>\n<blockquote>\n<p id=\"so_27806775_27806775_0\">A member function, a member class or a static data member of a class template may be explicitly specialized for a class specialization that is implicitly instantiated; in this case, the definition of the class template shall be in scope at the point of declaration of the explicit specialization for the member of the class template. If such an explicit specialization for the member of a class template names an implicitly-declared special member function (clause 12), the program is ill-formed.</p>\n</blockquote>\n<p>So as I understand special functions to be allowed to be specialized should be defined before explicit specialization.</p>\n<pre><code>template &lt;typename T&gt;\nclass A\n{\npublic:\n    A()\n    { /* some definition */}\n};\n\ntemplate &lt;&gt;\nA&lt;int&gt;::A()\n{ /*explicit specialization def body*/} // this is OK\n</code></pre>\n<p>but</p>\n<pre><code>template &lt;typename T&gt;\nclass B\n{};\n\ntemplate &lt;&gt;\nB&lt;int&gt;::B()\n{ /*explicit specializationdef body */} // this is forbidden by ISO c++\n                                        // and when compiling with VS2013 gives compile error\n                                        // cannot define a compiler-generated special member\n                                        // function (must be declared in the class first)\n</code></pre>\n<p>What is the reason to have such restrictions?</p>\n", "Tags": "<c++><templates><member-functions><explicit-specialization>", "OwnerUserId": "1758528", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_27806775_27806775_0": {"section_id": 266, "quality": 0.9024390243902439, "length": 37}}, "n3337": {"so_27806775_27806775_0": {"section_id": 257, "quality": 0.9024390243902439, "length": 37}}, "n4659": {"so_27806775_27806775_0": {"section_id": 273, "quality": 0.9024390243902439, "length": 37}}}});