post_cb({"9146789": {"ParentId": "9146732", "CommentCount": "1", "Body": "<p>The standard not only explicitly disallows the use of other parameters in a default argument expression, but also explains why and gives an example:</p>\n<blockquote>\n<h3>ISO/IEC 14882:2003(E) - 8.3.6 Default arguments [dcl.fct.default]</h3>\n<p id=\"so_9146732_9146789_0\"><em>9.</em> Default arguments are evaluated each time the function is called.\n  <strong>The order of evaluation of function arguments is unspecified.\n  Consequently, parameters of a function shall not be used in default\n  argument expressions, even if they are not evaluated.</strong> Parameters of a\n  function declared before a default argument expression are in scope\n  and can hide namespace and class member names. <em>[Example:</em></p>\n<pre><code>    int a;\n    int f(int a, int b = a);         // error: parameter a\n                                     // used as default argument\n    typedef int I;\n    int g(float I, int b = I(2));    // error: parameter I found\n    int h(int a, int b = sizeof(a)); // error, parameter a used\n                                     // in default argument\n</code></pre>\n<p id=\"so_9146732_9146789_1\"><em>\u2014end example]</em> ...</p>\n</blockquote>\n", "OwnerUserId": "308661", "PostTypeId": "2", "Id": "9146789", "Score": "9", "CreationDate": "2012-02-05T03:57:12.597", "LastActivityDate": "2012-02-05T03:57:12.597"}, "9148083": {"ParentId": "9146732", "CommentCount": "1", "Body": "<p>The language still offers a way to do what you want - use overloaded functions:</p>\n<pre><code>void foo (const char *pBegin, const char *pEnd)\n{\n   //...\n}\n\nvoid foo (const char *pBegin)\n{ foo(pBegin, strchr(pBegin, 0)); }\n</code></pre>\n", "OwnerUserId": "597607", "PostTypeId": "2", "Id": "9148083", "Score": "6", "CreationDate": "2012-02-05T08:58:50.553", "LastActivityDate": "2012-02-05T08:58:50.553"}, "9146732": {"CommentCount": "1", "ViewCount": "756", "CreationDate": "2012-02-05T03:44:30.383", "LastActivityDate": "2012-02-05T08:58:50.553", "Title": "Why existing function arguments cannot be used to evaluate other default arguments?", "AcceptedAnswerId": "9146789", "PostTypeId": "1", "Id": "9146732", "Score": "6", "Body": "<p>I was writing a function <code>foo()</code> which takes 2 <code>const char*</code>s as arguments, <code>pBegin</code> and <code>pEnd</code>. <code>foo()</code> is passed a null terminated string. By default <code>pEnd</code> points to <code>\\0</code> (last character) of the string.</p>\n<pre><code>void foo (const char *pBegin,\n          const char *pEnd = strchr(pBegin, 0))  // &lt;--- Error\n{\n  ...\n}\n</code></pre>\n<p>However, I get an error at above line as:</p>\n<pre><code>error: local variable \u2018pBegin\u2019 may not appear in this context\n</code></pre>\n<p>Why compiler doesn't allow such operation ? What's the potential problem ?</p>\n", "Tags": "<c++><function><compiler-errors><language-lawyer><default-arguments>", "OwnerUserId": "514235", "AnswerCount": "4"}, "9146767": {"ParentId": "9146732", "CommentCount": "0", "Body": "<p>When the function is called the default arguments are evaluated, but the order they are evaluated is not defined by the C++ standard. That means that you can't reference other parameters in a default argument because they may not have a known value yet.</p>\n", "OwnerUserId": "723", "PostTypeId": "2", "Id": "9146767", "Score": "3", "CreationDate": "2012-02-05T03:52:46.577", "LastActivityDate": "2012-02-05T03:52:46.577"}, "9146768": {"ParentId": "9146732", "CommentCount": "0", "Body": "<p>You can't use a local variable in a default argument value.</p>\n<p><a href=\"http://bytes.com/topic/c/answers/167487-whats-rule-default-argument-function-c\" rel=\"nofollow\">Quote from here:</a></p>\n<blockquote>\n<p id=\"so_9146732_9146768_0\">The standard tells us that the default argument is simply an expression.\n  There are some things that are no allowed (using local variables, using\n  the keyword 'this') but pretty much anything else can serve as a default\n  argument.</p>\n</blockquote>\n", "OwnerUserId": "6294", "PostTypeId": "2", "Id": "9146768", "Score": "1", "CreationDate": "2012-02-05T03:53:03.973", "LastActivityDate": "2012-02-05T03:53:03.973"}, "bq_ids": {"n4140": {"so_9146732_9146789_0": {"section_id": 3260, "quality": 0.8378378378378378, "length": 31}}, "n3337": {"so_9146732_9146789_0": {"section_id": 3132, "quality": 0.8918918918918919, "length": 33}}, "n4659": {"so_9146732_9146789_0": {"section_id": 4018, "quality": 0.5405405405405406, "length": 20}}}});