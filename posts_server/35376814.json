post_cb({"35377004": {"ParentId": "35376814", "PostTypeId": "2", "CommentCount": "1", "Body": "<p>See the second bullet.</p>\n<blockquote>\n<p id=\"so_35376814_35377004_0\">Two names that are the same (Clause 3) and that are declared in different scopes shall denote the same variable, function, type, enumerator, template or namespace if</p>\n<ul>\n<li><p id=\"so_35376814_35377004_1\">both names have external linkage or else both names have internal linkage and are declared in the same translation unit; <strong>and</strong></p></li>\n<li><p id=\"so_35376814_35377004_2\"><strong>both names refer to members of the same namespace</strong> or to members, not by inheritance, of the same class; and</p></li>\n<li><p id=\"so_35376814_35377004_3\">when both names denote functions, the parameter-type-lists of the functions (8.3.5) are identical; and</p></li>\n<li><p id=\"so_35376814_35377004_4\">when both names denote function templates, the signatures (14.5.6.1) are the same. </p></li>\n</ul>\n</blockquote>\n<p><code>::a</code> and <code>N::a</code> do not refer to members of the same namespace, so they do not denote the same variable.</p>\n", "OwnerUserId": "4672588", "LastEditorUserId": "4672588", "LastEditDate": "2016-02-13T06:57:54.717", "Id": "35377004", "Score": "3", "CreationDate": "2016-02-13T06:52:30.760", "LastActivityDate": "2016-02-13T06:57:54.717"}, "bq_ids": {"n4140": {"so_35376814_35377004_4": {"section_id": 7142, "quality": 0.8888888888888888, "length": 8}, "so_35376814_35376814_2": {"section_id": 7137, "quality": 1.0, "length": 14}, "so_35376814_35377004_1": {"section_id": 7142, "quality": 1.0, "length": 15}, "so_35376814_35377004_0": {"section_id": 7142, "quality": 1.0, "length": 15}, "so_35376814_35376814_0": {"section_id": 7137, "quality": 1.0, "length": 17}, "so_35376814_35377004_3": {"section_id": 7142, "quality": 0.8888888888888888, "length": 8}, "so_35376814_35376814_3": {"section_id": 7142, "quality": 1.0, "length": 15}, "so_35376814_35376814_1": {"section_id": 7136, "quality": 0.875, "length": 7}, "so_35376814_35377004_2": {"section_id": 7142, "quality": 1.0, "length": 10}}, "n3337": {"so_35376814_35377004_4": {"section_id": 6886, "quality": 0.8888888888888888, "length": 8}, "so_35376814_35376814_2": {"section_id": 6881, "quality": 1.0, "length": 14}, "so_35376814_35377004_1": {"section_id": 6886, "quality": 1.0, "length": 15}, "so_35376814_35377004_0": {"section_id": 6886, "quality": 1.0, "length": 15}, "so_35376814_35376814_0": {"section_id": 6881, "quality": 1.0, "length": 17}, "so_35376814_35377004_3": {"section_id": 6886, "quality": 0.8888888888888888, "length": 8}, "so_35376814_35377004_2": {"section_id": 6886, "quality": 1.0, "length": 10}, "so_35376814_35376814_1": {"section_id": 6880, "quality": 0.875, "length": 7}, "so_35376814_35376814_3": {"section_id": 6886, "quality": 1.0, "length": 15}}, "n4659": {"so_35376814_35376814_0": {"section_id": 8638, "quality": 1.0, "length": 17}, "so_35376814_35376814_2": {"section_id": 8638, "quality": 1.0, "length": 14}, "so_35376814_35377004_1": {"section_id": 8643, "quality": 1.0, "length": 15}, "so_35376814_35377004_0": {"section_id": 8643, "quality": 0.9333333333333333, "length": 14}, "so_35376814_35376814_3": {"section_id": 8643, "quality": 0.9333333333333333, "length": 14}, "so_35376814_35377004_4": {"section_id": 8643, "quality": 0.8888888888888888, "length": 8}, "so_35376814_35377004_2": {"section_id": 8643, "quality": 1.0, "length": 10}, "so_35376814_35376814_1": {"section_id": 8637, "quality": 0.875, "length": 7}, "so_35376814_35377004_3": {"section_id": 8643, "quality": 0.8888888888888888, "length": 8}}}, "35376814": {"CommentCount": "6", "ViewCount": "77", "CreationDate": "2016-02-13T06:22:24.190", "LastActivityDate": "2016-02-13T06:57:54.717", "Title": "Why don't these names with external linkage denote the same entity?", "AcceptedAnswerId": "35377004", "PostTypeId": "1", "Id": "35376814", "Score": "0", "Body": "<p>Consider the following code snippet:</p>\n<pre><code>#include &lt;iostream&gt;\n\nint a;\nvoid address_of_a(void) {\n    std::cout &lt;&lt; &amp;a &lt;&lt; std::endl;\n}\n\nnamespace N {\n    int a;\n    void address_of_a(void) {\n        std::cout &lt;&lt; &amp;a &lt;&lt; std::endl;\n    }   \n};\n\nint main(void) {\n    address_of_a();\n    N::address_of_a();\n    return 0;\n}\n</code></pre>\n<p><strong>The global namespace and named namespace <code>N</code> are given external linkage</strong> because 3.5 [basic.link] paragraph 4 from <em>N4567</em> says that</p>\n<blockquote>\n<p id=\"so_35376814_35376814_0\">An unnamed namespace or a namespace declared directly or indirectly within an unnamed namespace has internal linkage. <strong>All other namespaces have external linkage</strong>...</p>\n</blockquote>\n<p>Furthermore, <strong><code>::a</code> and <code>N::a</code> are also given external linkage</strong> because they are not applicable to 3.5 [basic.link] paragraph 3,</p>\n<blockquote>\n<p id=\"so_35376814_35376814_1\">A name having namespace scope (3.3.6) has internal linkage if it is the name of</p>\n<ul>\n<li>a variable, function or function template that is explicitly declared static; or,</li>\n<li>a variable of non-volatile const-qualified type that is neither explicitly declared extern nor previously declared to have external linkage; or</li>\n<li>a data member of an anonymous union.</li>\n</ul>\n</blockquote>\n<p>but to 3.5 [basic.link] paragraph 4,</p>\n<blockquote>\n<p id=\"so_35376814_35376814_2\">... A name having namespace scope <strong>that has not been given internal linkage above</strong> has the same linkage as the enclosing namespace if it is the name of </p>\n<ul>\n<li>a variable; or</li>\n<li>...</li>\n</ul>\n</blockquote>\n<p>which means to say that <strong>they inherit the same linkage(=external linkage) as the global namespace and <code>N</code></strong>. In conclusion, <strong>they shall denote the same entity</strong> because 3.5 [basic.link] paragraph 9 says that</p>\n<blockquote>\n<p id=\"so_35376814_35376814_3\">Two names that are the same (Clause 3) and that are declared in different scopes shall denote the same variable, function, type, enumerator, template or namespace if</p>\n<ul>\n<li><strong>both names have external linkage</strong> or both names have internal linkage and are declared in the same translation unit; and</li>\n<li>...</li>\n</ul>\n</blockquote>\n<p>However, they seem to denote different entities because their addresses didn't coincide. Why is that?</p>\n", "Tags": "<c++><language-lawyer><linkage>", "OwnerUserId": "5645940", "AnswerCount": "1"}});