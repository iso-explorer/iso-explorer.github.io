post_cb({"27777418": {"ParentId": "27777283", "CommentCount": "0", "Body": "<p>A template is not instantiated unless it is used.</p>\n<p>From Standards :</p>\n<p><strong>\u00a7 14.7.1/10</strong></p>\n<blockquote>\n<p id=\"so_27777283_27777418_0\">An implementation shall not implicitly instantiate a function\n  template, a member template, a non-virtual member function, a member\n  class, or a static data member of a class template that does not\n  require instantiation. It is unspecified whether or not an\n  implementation implicitly instantiates a virtual member function of a\n  class template if the virtual member function would not otherwise be\n  instantiated. The use of a template specialization in a default\n  argument shall not cause the template to be implicitly instantiated\n  except that a class template may be instantiated where its complete\n  type is needed to determine the correctness of the default argument.\n  The use of a default argument in a function call causes\n  specializations in the default argument to be implicitly instantiated.</p>\n</blockquote>\n", "OwnerUserId": "1870232", "PostTypeId": "2", "Id": "27777418", "Score": "1", "CreationDate": "2015-01-05T10:17:29.673", "LastActivityDate": "2015-01-05T10:17:29.673"}, "bq_ids": {"n4140": {"so_27777283_27777418_0": {"section_id": 243, "quality": 0.9722222222222222, "length": 70}}, "n3337": {"so_27777283_27777418_0": {"section_id": 235, "quality": 0.9722222222222222, "length": 70}}, "n4659": {"so_27777283_27777418_0": {"section_id": 250, "quality": 0.9444444444444444, "length": 68}}}, "27777283": {"CommentCount": "1", "ViewCount": "101", "CreationDate": "2015-01-05T10:10:07.160", "LastActivityDate": "2015-01-05T10:17:29.673", "Title": "Are unnecessary/unused templates instantiated?", "AcceptedAnswerId": "27777418", "PostTypeId": "1", "Id": "27777283", "Score": "1", "Body": "<p>I have a function <code>void f&lt;int N&gt;()</code>.  <code>f</code> is only called with template parameters 1 and 2, e.g. <code>f&lt;1&gt;()</code> and <code>f&lt;2&gt;()</code> and I have efficiently specialized <code>f</code> for those two parameters.  <code>f</code> will never be called with any other parameter, but I have defined <code>f</code> with general <code>N</code> anyway, just for \"clarity\".  Question: <strong>Will the compiler still instantiate this unused definition of <code>f&lt;N&gt;()</code>?</strong>  If so, I feel like this will create code bloat, as I have dozens of functions of this sort located in very performance-critical areas of the program.</p>\n<p>(Instead, I'm considering commenting the <code>f&lt;N&gt;()</code> definition and replacing it with an empty definition, i.e. <code>void f&lt;N&gt;(){}</code>.)</p>\n", "Tags": "<c++><performance><templates><template-specialization>", "OwnerUserId": "3206624", "AnswerCount": "1"}});