post_cb({"24082294": {"CommentCount": "1", "AcceptedAnswerId": "24082414", "PostTypeId": "1", "LastEditorUserId": "163454", "CreationDate": "2014-06-06T12:51:41.450", "LastActivityDate": "2015-10-14T21:21:22.503", "LastEditDate": "2015-10-14T21:21:22.503", "ViewCount": "72", "FavoriteCount": "0", "Title": "C++: Are map elements stationary in memory?", "Id": "24082294", "Score": "2", "Body": "<p>Can we say that the elements (pairs) of an <code>std::map</code> are stationary? A quick test with g++ shows that after an element is inserted it stays at the same place in memory.</p>\n<p>Definitions:</p>\n<pre><code>struct K { ... }; // Holds an int, prints when constructed, destructed etc..\nstruct V { ... }; // Holds an int, prints when constructed, destructed etc..\ntypedef std::map&lt;K,V&gt; M;\nM m;\n</code></pre>\n<p>Debug printings after first insert:</p>\n<pre><code>======= ADDRESS #1\nDEBUG: M::const_iterator i = m.find(10)\nK(10)\nK.~K; value == 10\nDEBUG: &amp;*i == 0x1e6b030\nDEBUG: &amp;i-&gt;first == 0x1e6b030\nDEBUG: &amp;i-&gt;second == 0x1e6b034\n</code></pre>\n<p>Debug printings many inserts later:</p>\n<pre><code>======= ADDRESS #2\nDEBUG: M::const_iterator i = m.find(10)\nK(10)\nK.~K; value == 10\nDEBUG: &amp;*i == 0x1e6b030\nDEBUG: &amp;i-&gt;first == 0x1e6b030\nDEBUG: &amp;i-&gt;second == 0x1e6b034\n</code></pre>\n<p>Do we have any explicit or implicit guarantee in the standard that elements remain in their places in memory after they are inserted? Do we have something for the key or the value individually?</p>\n", "Tags": "<c++><dictionary>", "OwnerUserId": "163454", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_24082294_24082414_0": {"section_id": 745, "quality": 0.9333333333333333, "length": 14}}, "n3337": {"so_24082294_24082414_0": {"section_id": 734, "quality": 0.9333333333333333, "length": 14}}, "n4659": {"so_24082294_24082414_0": {"section_id": 803, "quality": 0.9333333333333333, "length": 14}}}, "24082414": {"ParentId": "24082294", "CommentCount": "5", "CreationDate": "2014-06-06T12:57:48.750", "OwnerUserId": "1312406", "PostTypeId": "2", "Id": "24082414", "Score": "4", "Body": "<p>From section 23.1.2/8(Associative containers):</p>\n<blockquote>\n<p id=\"so_24082294_24082414_0\">The insert members shall not affect the validity of iterators and references to the container, and the erase\n  members shall invalidate only iterators and references to the erased elements.</p>\n</blockquote>\n<p>so so map elements <em>are</em> guaranteed to remain stationary in memory</p>\n", "LastActivityDate": "2014-06-06T12:57:48.750"}});