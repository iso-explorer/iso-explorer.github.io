post_cb({"23966921": {"CommentCount": "8", "CreationDate": "2014-05-31T05:57:01.690", "PostTypeId": "1", "AcceptedAnswerId": "23967971", "LastEditorUserId": "1609356", "LastActivityDate": "2014-05-31T08:29:44.693", "LastEditDate": "2014-05-31T06:55:07.843", "ViewCount": "117", "FavoriteCount": "1", "Title": "How is the following passage from the standard to be interpreted?", "Id": "23966921", "Score": "3", "Body": "<p>\u00a73.3.6/1 (C++11)</p>\n<blockquote>\n<p id=\"so_23966921_23966921_0\">The declarative region of a <em>namespace-definition</em> is its <em>namespace-body</em>. The potential scope denoted by\n  an <em>original-namespace-name</em> is the concatenation of the declarative regions established by each of the\n  <em>namespace-definitions</em> in the same declarative region with that <em>original-namespace-name.</em>...</p>\n</blockquote>\n<p>The definition of a declarative region is as follows (\u00a73.3.1/1):</p>\n<blockquote>\n<p id=\"so_23966921_23966921_1\">Every name is introduced in some portion of program text called a declarative region, which is the largest part\n  of the program in which that name is valid, that is, in which that name may be used as an unqualified name\n  to refer to the same entity. ...</p>\n</blockquote>\n<p>The two taken together would seem to imply that the name of a namespace can only be used (unqualified) inside the namespace body itself. But, clearly, this is false. So what does it mean for the declarative region of a namespace definition to be the body, when the name of the namespace can in fact be used (unqualified) outside the namespace body?</p>\n<p>Also, I just don't understand this at all (re-quoted from above):</p>\n<blockquote>\n<p id=\"so_23966921_23966921_2\">The potential scope denoted by\n  an <em>original-namespace-name</em> is the concatenation of the declarative regions established by each of the\n  <em>namespace-definitions</em> in the same declarative region with that <em>original-namespace-name.</em></p>\n</blockquote>\n", "Tags": "<c++><c++11><namespaces><scope><language-lawyer>", "OwnerUserId": "481267", "AnswerCount": "1"}, "23967971": {"ParentId": "23966921", "LastEditDate": "2014-05-31T08:29:44.693", "CommentCount": "1", "CreationDate": "2014-05-31T08:23:34.933", "OwnerUserId": "1090079", "LastEditorUserId": "1090079", "PostTypeId": "2", "Id": "23967971", "Score": "5", "Body": "<h2>The standard is not talking about what you think...</h2>\n<p>I think your confusion lies with the fact that you are mistakingly assuming that the text is about the namespace name itself, when the standard is really talking about names introduced <em>inside</em> the namespace in question.</p>\n<hr>\n<h2>What about the quoted thing that \"<em>just doesn't make sense</em>\"?</h2>\n<blockquote>\n<p id=\"so_23966921_23967971_0\">The potential scope denoted by an original-namespace-name is the concatenation of the declarative regions established by each of the namespace-definitions in the same declarative region with that original-namespace-name.</p>\n</blockquote>\n<p><br/></p>\n<p>The above might be easiest to describe with an example:</p>\n<pre class=\"lang-none prettyprint-override\"><code>.--- namespace definition\n|        .--- original-namespace-name\nv        v\nnamespace N { &lt;-------------------------------.\n  int x = 0;                              &lt;---+--- declarative region (1)\n} &lt;-------------------------------------------'\n</code></pre>\n<p><sup></sup> </p>\n<pre><code>.--- another namespace definition of `N`\n|         .--- original-namespace-name\nv         v\nnamespace N { &lt;-------------------------------.\n  int y = x;                              &lt;---+--- declarative region (2)\n} &lt;-------------------------------------------'\n</code></pre>\n<p><sup><strong>Note</strong>: The potential scope of <code>int x</code> is both <em>(1)</em> and <em>(2)</em>, ie. <em>\"concatenation of the declarative regions\"</em> introduced. </sup></p>\n<ul>\n<li><p>In the example we have two <em>namespace-definitions</em> for the <em>original-namespace-name</em> <code>N</code>, we also have two <em>declarative regions</em>, but the <em>\"potential scope\"</em> inside the namespace named <code>N</code> is both <em>(1)</em>, and <em>(2)</em>.</p></li>\n<li><p>As long as the <em>namespace definitions</em> themselves are in the same <em>declarative region</em>, and share the same <em>original-namespace-name</em>, they refer to the same namespace.</p></li>\n<li><p>Introducing another such <em>namespace definition</em> will just add more room to the <em>potential scope</em> (by appending another <em>declarative region</em>) of the variables previously declared inside it.</p></li>\n</ul>\n<hr>\n<p><strong><em>potential scope</em>, and <em>declarative region</em>; what are they?</strong></p>\n<ul>\n<li><p>a <em><code>declarative region</code></em> is the part of a program where a name can be referred to without being qualified.</p></li>\n<li><p>The <em><code>potential scope</code></em> is the scope in which a name is <em>potentially</em> valid, it's the entire scope in which the name <strong>could</strong> refer to the same entity.</p></li>\n</ul>\n<p><br/></p>\n<blockquote>\n<p id=\"so_23966921_23967971_1\"><code>3.3.1p1</code> <strong>Declarative regions and scope</strong> <code>[basic.scope.declarative]</code></p>\n<blockquote>\n<p id=\"so_23966921_23967971_5\">Every name is introduced in some portion of program text called a <em>declarative region</em>, which is the largest part of the program in which that name is <em>valid</em>, that is, in which the name may be used as an unqualified name to refer to the same entity.</p>\n<p id=\"so_23966921_23967971_6\">In general, each particular name is valid only within some possible discontiguous portion of program text called its <em>scope</em>. To determine the scope of a declaration, it is sometimes conventient to refer to the <em>potential scope</em> of a declaration.</p>\n<p id=\"so_23966921_23967971_7\">The scope of a declaration is the same as its <em>potential scope</em> unless the potential scope contains another declaration of the same name. In that case the potential scope of the declaration in the inner (contained) declarative region is excluded from the scope of the declaration in the outer (containing) declarative region.</p>\n</blockquote>\n</blockquote>\n</hr></hr>", "LastActivityDate": "2014-05-31T08:29:44.693"}, "bq_ids": {"n4140": {"so_23966921_23966921_0": {"section_id": 7067, "quality": 0.9047619047619048, "length": 19}, "so_23966921_23967971_3": {"section_id": 7044, "quality": 0.8260869565217391, "length": 19}, "so_23966921_23967971_4": {"section_id": 7044, "quality": 0.9655172413793104, "length": 28}, "so_23966921_23967971_0": {"section_id": 7067, "quality": 0.9333333333333333, "length": 14}, "so_23966921_23966921_1": {"section_id": 7044, "quality": 0.9, "length": 18}, "so_23966921_23967971_5": {"section_id": 7044, "quality": 0.9, "length": 18}, "so_23966921_23967971_6": {"section_id": 7044, "quality": 0.8260869565217391, "length": 19}, "so_23966921_23967971_2": {"section_id": 7044, "quality": 0.9, "length": 18}, "so_23966921_23967971_7": {"section_id": 7044, "quality": 0.9655172413793104, "length": 28}, "so_23966921_23966921_2": {"section_id": 7067, "quality": 0.9333333333333333, "length": 14}}, "n3337": {"so_23966921_23966921_0": {"section_id": 6811, "quality": 0.9047619047619048, "length": 19}, "so_23966921_23967971_3": {"section_id": 6789, "quality": 0.8260869565217391, "length": 19}, "so_23966921_23967971_4": {"section_id": 6789, "quality": 0.9655172413793104, "length": 28}, "so_23966921_23967971_0": {"section_id": 6811, "quality": 0.9333333333333333, "length": 14}, "so_23966921_23966921_1": {"section_id": 6789, "quality": 0.9, "length": 18}, "so_23966921_23966921_2": {"section_id": 6811, "quality": 0.9333333333333333, "length": 14}, "so_23966921_23967971_6": {"section_id": 6789, "quality": 0.8260869565217391, "length": 19}, "so_23966921_23967971_2": {"section_id": 6789, "quality": 0.9, "length": 18}, "so_23966921_23967971_5": {"section_id": 6789, "quality": 0.9, "length": 18}, "so_23966921_23967971_7": {"section_id": 6789, "quality": 0.9655172413793104, "length": 28}}, "n4659": {"so_23966921_23967971_3": {"section_id": 8541, "quality": 0.8260869565217391, "length": 19}, "so_23966921_23967971_4": {"section_id": 8541, "quality": 0.9655172413793104, "length": 28}, "so_23966921_23966921_1": {"section_id": 8541, "quality": 0.9, "length": 18}, "so_23966921_23967971_5": {"section_id": 8541, "quality": 0.9, "length": 18}, "so_23966921_23967971_6": {"section_id": 8541, "quality": 0.8260869565217391, "length": 19}, "so_23966921_23967971_2": {"section_id": 8541, "quality": 0.9, "length": 18}, "so_23966921_23967971_7": {"section_id": 8541, "quality": 0.9655172413793104, "length": 28}}}});