post_cb({"bq_ids": {"n4140": {"so_46399544_46400243_1": {"length": 11, "quality": 0.9166666666666666, "section_id": 4239}, "so_46399544_46400243_2": {"length": 4, "quality": 0.8, "section_id": 4239}}, "n3337": {"so_46399544_46400243_1": {"length": 11, "quality": 0.9166666666666666, "section_id": 4080}, "so_46399544_46400243_2": {"length": 4, "quality": 0.8, "section_id": 4080}}, "n4659": {"so_46399544_46400243_1": {"length": 11, "quality": 0.9166666666666666, "section_id": 5498}, "so_46399544_46400243_2": {"length": 4, "quality": 0.8, "section_id": 5177}}}, "46399544": {"ViewCount": "113", "Body": "<p>C++17 introduces <code>std::aligned_alloc</code> and alignment-aware <code>new</code> that can do over-aligned allocations, but what about <code>std::allocator</code>? Does it handle over-aligned types?</p>\n", "Title": "Does std::allocator handle over-aligned types in C++17?", "CreationDate": "2017-09-25T07:16:59.967", "LastActivityDate": "2017-09-25T08:12:25.437", "CommentCount": "3", "PostTypeId": "1", "Id": "46399544", "Score": "2", "OwnerUserId": "2969631", "Tags": "<c++><c++1z><memory-alignment><allocator>", "AnswerCount": "1"}, "46400243": {"Id": "46400243", "PostTypeId": "2", "Body": "<p>In N4659(C++17 DIS), <a href=\"https://timsong-cpp.github.io/cppwp/n4659/default.allocator\" rel=\"nofollow noreferrer\">23.10.9.1 [allocator.members], bullet 2</a></p>\n<blockquote>\n<p id=\"so_46399544_46400243_0\">T* allocate(size_t n);</p>\n<p id=\"so_46399544_46400243_1\">Returns: A pointer to the initial element of an array of storage of size n * sizeof(T), <strong>aligned appropriately for objects of type T</strong>.</p>\n</blockquote>\n<p>Compared to C++14, the sentence</p>\n<blockquote>\n<p id=\"so_46399544_46400243_2\">It is implementation-defined whether over-aligned types are supported</p>\n</blockquote>\n<p>has been removed. So <code>std::allocator</code> should support over-aligned types in C++17.</p>\n", "LastEditorUserId": "2969631", "LastActivityDate": "2017-09-25T08:12:25.437", "Score": "3", "CreationDate": "2017-09-25T08:01:28.387", "ParentId": "46399544", "CommentCount": "3", "OwnerUserId": "2969631", "LastEditDate": "2017-09-25T08:12:25.437"}});