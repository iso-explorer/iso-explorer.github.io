post_cb({"24233658": {"ParentId": "24233566", "CommentCount": "0", "Body": "<p>Some compilers have <code>#pragma message</code>, which prints a user-defined message in the compiler's diagnostics output.</p>\n", "OwnerUserId": "65863", "PostTypeId": "2", "Id": "24233658", "Score": "0", "CreationDate": "2014-06-15T20:07:44.670", "LastActivityDate": "2014-06-15T20:07:44.670"}, "24233609": {"ParentId": "24233566", "CommentCount": "0", "Body": "<p>The C99 standard defines an <code>#error</code> preprocessor directive which can be used for this task:</p>\n<p>\u00a76.10.5:</p>\n<blockquote>\n<p id=\"so_24233566_24233609_0\">A preprocessing directive of the form </p>\n<blockquote>\n<p id=\"so_24233566_24233609_3\"><code>#error</code> pp-tokens<sub>opt</sub> new-line </p>\n</blockquote>\n<p id=\"so_24233566_24233609_2\">causes the implementation to produce a diagnostic message that includes the speci\ufb01ed \n  sequence of preprocessing tokens. </p>\n</blockquote>\n", "OwnerUserId": "744178", "PostTypeId": "2", "Id": "24233609", "Score": "0", "CreationDate": "2014-06-15T20:01:59.420", "LastActivityDate": "2014-06-15T20:01:59.420"}, "24233566": {"CommentCount": "4", "ViewCount": "134", "ClosedDate": "2014-06-15T22:41:41.130", "CreationDate": "2014-06-15T19:57:29.613", "LastActivityDate": "2014-06-15T20:07:44.670", "Title": "Adding compile time message from source file", "PostTypeId": "1", "Id": "24233566", "Score": "0", "Body": "<p>Is it possible in any available C/C++ compiler to print messages from source file when I compile the source file (its okay if it doesn't print it while linking) . I will have to embed the message into the source file. </p>\n<p>(To make it clearer, using a printf would print the message in run time. I do not want to print the message in run time.)</p>\n<p>I am aware that the message can be put in a Makefile ( which is what I have been doing so far). However, I would really like if the message can be put in source file itself.</p>\n", "Tags": "<c++><c><compilation>", "OwnerUserId": "1248558", "AnswerCount": "2"}, "bq_ids": {"n4140": {"so_24233566_24233609_2": {"section_id": 547, "quality": 0.9, "length": 9}}, "n3337": {"so_24233566_24233609_2": {"section_id": 538, "quality": 0.9, "length": 9}}, "n4659": {"so_24233566_24233609_2": {"section_id": 568, "quality": 0.9, "length": 9}}}});