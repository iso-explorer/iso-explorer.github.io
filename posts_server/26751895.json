post_cb({"26752006": {"ParentId": "26751895", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>This is somewhat covered by the <a href=\"http://www.parashift.com/c++-faq/kbhit.html\" rel=\"nofollow\">C++ FAQ</a> by Marshall Cline:</p>\n<blockquote>\n<p id=\"so_26751895_26752006_0\">[15.17] How can I tell {if a key, which key} was pressed before the\n  user presses the ENTER key? </p>\n<p id=\"so_26751895_26752006_1\">This is not a standard C++ feature \u2014 C++ doesn't even require your system\n  to have a keyboard!. That means every operating system and vendor does\n  it somewhat differently.</p>\n<p id=\"so_26751895_26752006_2\">Please read the documentation that came with your compiler for details\n  on your particular installation.</p>\n<p id=\"so_26751895_26752006_3\">(By the way, the process on UNIX typically has two steps: first set\n  the terminal to single-character mode, then use either select() or\n  poll() to test if a key was pressed. You might be able to adapt this\n  code.)</p>\n</blockquote>\n<p>The C++ standard also says \u00a7 1.9 [intro.execution]:</p>\n<blockquote>\n<p id=\"so_26751895_26752006_4\">1 The semantic descriptions in this International Standard define a\n  parameterized nondeterministic abstract machine. This International\n  Standard places no requirement on the structure of conforming\n  implementations. In particular, they need not copy or emulate the\n  structure of the abstract machine. Rather, conforming implementations\n  are required to emulate (only) the observable behavior of the abstract\n  machine as explained below.<sup>5</sup></p>\n<p id=\"so_26751895_26752006_5\">8 The least requirements on a conforming implementation are:</p>\n<p id=\"so_26751895_26752006_6\">\u00a0 \u00a0 \u00a0 \u2014 <em>[..]</em> </p>\n<p id=\"so_26751895_26752006_7\">\u00a0 \u00a0 \u00a0 \u2014 The input and output dynamics of interactive devices shall take place in such a fashion that prompting output is actually delivered before a program waits for input. <strong>What constitutes an interactive device is implementation-defined.</strong></p>\n</blockquote>\n", "Id": "26752006", "LastEditDate": "2014-11-05T07:54:07.610", "OwnerDisplayName": "user3920237", "Score": "1", "CreationDate": "2014-11-05T07:46:40.533", "LastActivityDate": "2014-11-05T07:54:07.610", "LastEditorDisplayName": "user3920237"}, "26751919": {"ParentId": "26751895", "CommentCount": "2", "Body": "<p>No. The standard C++ library doesn't include any kind of terminal management. It doesn't even assume your terminal has any input capability other than lines. You need a library or code that understands how your particular terminal works.</p>\n", "OwnerUserId": "721269", "PostTypeId": "2", "Id": "26751919", "Score": "2", "CreationDate": "2014-11-05T07:39:11.770", "LastActivityDate": "2014-11-05T07:39:11.770"}, "bq_ids": {"n4140": {"so_26751895_26752006_5": {"section_id": 5804, "quality": 0.8, "length": 4}, "so_26751895_26752006_4": {"section_id": 5797, "quality": 0.8648648648648649, "length": 32}, "so_26751895_26752006_7": {"section_id": 5804, "quality": 0.9090909090909091, "length": 20}}, "n3337": {"so_26751895_26752006_5": {"section_id": 5577, "quality": 0.8, "length": 4}, "so_26751895_26752006_4": {"section_id": 5570, "quality": 0.8648648648648649, "length": 32}, "so_26751895_26752006_7": {"section_id": 5577, "quality": 0.9090909090909091, "length": 20}}, "n4659": {"so_26751895_26752006_5": {"section_id": 7262, "quality": 0.8, "length": 4}, "so_26751895_26752006_4": {"section_id": 7256, "quality": 0.8648648648648649, "length": 32}, "so_26751895_26752006_7": {"section_id": 7262, "quality": 0.9090909090909091, "length": 20}}}, "26751895": {"CommentCount": "4", "ViewCount": "1994", "PostTypeId": "1", "LastEditorUserId": "1402846", "CreationDate": "2014-11-05T07:37:11.790", "LastActivityDate": "2017-08-06T10:44:48.873", "Title": "How do I read character in C++ without pressing ENTER and without getch() or getche()?", "AcceptedAnswerId": "26752006", "LastEditDate": "2017-08-06T10:44:48.873", "Id": "26751895", "Score": "0", "Body": "<p>In C, I could use getch() for getting an input without having the user to press enter. <strong>Is there a standard function in C++ that performs the functions of getch().</strong> I don't want to use conio.h or other platform specific libraries.</p>\n<pre><code>while (choice!='q')\n{\n    cout &lt;&lt; \"Enter a six digit number(0 to 999999)\";\n    cin &gt;&gt; input;\n    start.controller(input);\n    cout &lt;&lt; \"Press r to repeat\\nPress q to quit\";\n    cin &gt;&gt; choice;\n}\n</code></pre>\n<p>I just want to repeat the process until user press q. Now user has to press ENTER key.</p>\n", "Tags": "<c++><console-application><cin><c++-standard-library><getch>", "OwnerUserId": "3359432", "AnswerCount": "2"}});