post_cb({"32354036": {"ParentId": "32353894", "CommentCount": "0", "Body": "<p>Because it's a template. When you instantiate the static member it will be defined, but implicit instantiations are allowed to be defined in multiple translation units.</p>\n<p>[basic.def.odr]/6</p>\n<blockquote>\n<p id=\"so_32353894_32354036_0\">There can be more than one definition of a class type (Clause 9), enumeration type (7.2), inline function with external linkage (7.1.2), class template (Clause 14), non-static function template (14.5.6), <strong>static data member\n  of a class template</strong> (14.5.1.3), member function of a class template (14.5.1.1), or template specialization for\n  which some template parameters are not specified (14.7, 14.5.5) in a program provided that each definition\n  appears in a different translation unit, and provided the definitions satisfy the following requirements.</p>\n</blockquote>\n", "OwnerUserId": "981959", "PostTypeId": "2", "Id": "32354036", "Score": "2", "CreationDate": "2015-09-02T13:06:51.253", "LastActivityDate": "2015-09-02T13:06:51.253"}, "32353894": {"CommentCount": "0", "ViewCount": "71", "PostTypeId": "1", "LastEditorUserId": "981959", "CreationDate": "2015-09-02T12:59:30.913", "LastActivityDate": "2015-09-02T13:06:51.253", "Title": "Why it is not duplicate definition of member variable?", "AcceptedAnswerId": "32354036", "LastEditDate": "2015-09-02T13:04:52.587", "Id": "32353894", "Score": "-1", "Body": "<p>I implement an template which have static member variable, after read the standard, seams it is correct to define the variable in the .h file, but the .h file is included in multiple .cpp, so why the static variable is not multiple definition?</p>\n<p>Any reference in standard for that?</p>\n<p>14.5.1.3 in N3376</p>\n<blockquote>\n<p id=\"so_32353894_32353894_0\">A definition for a static data member may be provided in a namespace\n  scope enclosing the definition of the static member\u2019s class template.\n  [Example: </p>\n<p id=\"so_32353894_32353894_1\"><code>template&lt;class T&gt; class X { static T s; };</code></p>\n<p id=\"so_32353894_32353894_2\"><code>template&lt;class T&gt; T X&lt;T&gt;::s = 0;</code> &lt;-------------Question here.</p>\n<p id=\"so_32353894_32353894_3\">\u2014end example ]</p>\n</blockquote>\n", "Tags": "<c++><standards>", "OwnerUserId": "2428052", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_32353894_32354036_0": {"section_id": 7043, "quality": 0.8888888888888888, "length": 48}, "so_32353894_32353894_0": {"section_id": 107, "quality": 0.9333333333333333, "length": 14}}, "n3337": {"so_32353894_32354036_0": {"section_id": 6788, "quality": 0.8888888888888888, "length": 48}, "so_32353894_32353894_0": {"section_id": 102, "quality": 0.9333333333333333, "length": 14}}, "n4659": {"so_32353894_32354036_0": {"section_id": 8540, "quality": 0.8888888888888888, "length": 48}, "so_32353894_32353894_0": {"section_id": 111, "quality": 0.9333333333333333, "length": 14}}}});