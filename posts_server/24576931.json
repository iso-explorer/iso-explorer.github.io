post_cb({"24576931": {"CommentCount": "6", "AcceptedAnswerId": "24577107", "ClosedDate": "2014-07-05T02:52:31.897", "CreationDate": "2014-07-04T14:57:00.627", "LastActivityDate": "2014-07-04T15:07:46.690", "PostTypeId": "1", "ViewCount": "206", "FavoriteCount": "1", "Title": "Is it C++ standard-compliant to define a variable using `A<int>::template B<int> x;`?", "Id": "24576931", "Score": "6", "Body": "<p>The following code is accepted by gcc, vc++, and clang.</p>\n<pre><code>template&lt;class T&gt;\nstruct A\n{\n    template&lt;class U&gt;\n    struct B\n    {};\n};\n\nint main()\n{\n    A&lt;int&gt;::B&lt;int&gt; y; // OK as expected\n    A&lt;int&gt;::template B&lt;int&gt; x; // Also OK! Is this standard-compliant?\n};\n</code></pre>\n<p>Is it C++ standard-compliant to define a variable using <code>A&lt;int&gt;::template B&lt;int&gt; x;</code>?</p>\n", "Tags": "<c++><templates><c++11><compiler-construction><portability>", "OwnerUserId": "508343", "AnswerCount": "1"}, "24577107": {"ParentId": "24576931", "CommentCount": "3", "Body": "<p>Even though it is a non-normative note, I think an answer can be given by n3797[temp.names]/6</p>\n<blockquote>\n<p id=\"so_24576931_24577107_0\">As is the case with the <code>typename</code> prefix, the <code>template</code> prefix is allowed in cases where it is not strictly necessary; i.e., when the <em>nested-name-specifier</em> or the expression on the left of the <code>-&gt;</code> or <code>.</code> is not dependent on a template-parameter, or the use does not appear in the scope of a template.</p>\n</blockquote>\n<p>In the OP's example, the prefix <code>template</code> is used outside the scope of a template, and the preceding <em>nested-name-specifier</em> is not dependent. Therefore, the prefix <code>template</code> is not required, but allowed here.</p>\n<hr>\n<p>[expr.prim.general]/8</p>\n<blockquote>\n<p id=\"so_24576931_24577107_1\"><em>qualified-id</em>:<br/>\n  \u00a0\u00a0\u00a0\u00a0 <em>nested-name-specifier</em> <code>template</code><sub><em>opt</em></sub> \u00a0 <em>unqualified-id</em></p>\n</blockquote>\n<p>Plus [temp.names]/5</p>\n<blockquote>\n<p id=\"so_24576931_24577107_2\">A name prefixed by the keyword <code>template</code> shall be a <em>template-id</em> or the name shall refer to a class template.</p>\n</blockquote>\n<p>[temp.names]/1 says that <code>B&lt;int&gt;</code> is indeed a (<em>simple-</em>)<em>template-id</em>.</p>\n</hr>", "OwnerUserId": "420683", "PostTypeId": "2", "Id": "24577107", "Score": "12", "CreationDate": "2014-07-04T15:07:46.690", "LastActivityDate": "2014-07-04T15:07:46.690"}, "bq_ids": {"n4140": {"so_24576931_24577107_0": {"section_id": 73, "quality": 1.0, "length": 21}, "so_24576931_24577107_2": {"section_id": 73, "quality": 1.0, "length": 9}}, "n3337": {"so_24576931_24577107_0": {"section_id": 68, "quality": 1.0, "length": 21}, "so_24576931_24577107_2": {"section_id": 68, "quality": 1.0, "length": 9}}, "n4659": {"so_24576931_24577107_0": {"section_id": 75, "quality": 1.0, "length": 21}, "so_24576931_24577107_2": {"section_id": 75, "quality": 1.0, "length": 9}}}});