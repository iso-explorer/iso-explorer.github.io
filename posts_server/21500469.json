post_cb({"bq_ids": {"n4140": {"so_21500469_21500476_0": {"length": 42, "quality": 0.8936170212765957, "section_id": 6106}}, "n3337": {"so_21500469_21500476_0": {"length": 42, "quality": 0.8936170212765957, "section_id": 5872}}, "n4659": {"so_21500469_21500476_0": {"length": 42, "quality": 0.8936170212765957, "section_id": 7603}}}, "21500476": {"Id": "21500476", "PostTypeId": "2", "Body": "<p>Yes, when you allocate an array using the <code>new \u2026[\u2026]</code> syntax, you should deallocate it using <code>delete[]</code>. In your case, you need <code>delete[] cname;</code>.</p>\n<p>If you use the wrong form of <code>delete</code> to match your allocation with <code>new</code>, you have undefined behaviour:</p>\n<blockquote>\n<p id=\"so_21500469_21500476_0\"><em>\u00a75.3.5/2 [expr.delete]</em> In the \ufb01rst alternative (<em>delete object</em>), the value of the operand of <code>delete</code> may be a null pointer value, a pointer to a non-array object created by a previous <em>new-expression</em>, or a pointer to a subobject representing a base class of such an object. If not, the behavior is unde\ufb01ned. In the second alternative (<em>delete array</em>), the value of the operand of <code>delete</code> may be a null pointer value or a pointer value that resulted from a previous array <em>new-expression</em>. If not, the behavior is unde\ufb01ned.</p>\n</blockquote>\n", "LastEditorUserId": "150634", "LastActivityDate": "2014-02-01T16:27:07.147", "Score": "7", "CreationDate": "2014-02-01T16:21:50.383", "ParentId": "21500469", "CommentCount": "4", "OwnerUserId": "150634", "LastEditDate": "2014-02-01T16:27:07.147"}, "21500505": {"Id": "21500505", "PostTypeId": "2", "Body": "<pre><code>if ( lenght != 0 )\n    {\n        char *cname = new char[lenght+1];   \n        inbin.read(reinterpret_cast&lt;char *&gt;( cname ), lenght );\n        cname[lenght] = '\\0';\n        *ptr_string = cname;                \n        delete[] cname;\n    }    \n</code></pre>\n", "LastActivityDate": "2014-02-01T16:24:49.463", "CommentCount": "0", "CreationDate": "2014-02-01T16:24:49.463", "ParentId": "21500469", "Score": "1", "OwnerUserId": "1832135"}, "21500469": {"ViewCount": "3253", "Body": "<p>Cppcheck report as an error \"Mismatching allocation and deallocation: cname\" for the line with <code>delete cname;</code>. I don't see what the problem with using my version of code is - it looks working.</p>\n<p>Is my code wrong? How do I fix it? And what are the consequences of using my code?</p>\n<pre><code>if ( lenght != 0 )\n{\n   char *cname = new char[lenght+1];    \n   inbin.read(reinterpret_cast&lt;char *&gt;( cname ), lenght );\n   cname[lenght] = '\\0';\n   *ptr_string = cname;             \n   delete cname;\n }      \n</code></pre>\n", "AcceptedAnswerId": "21500476", "Title": "How do I fix this error with allocation and deallocation mismatch?", "CreationDate": "2014-02-01T16:21:12.723", "Id": "21500469", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2014-03-14T09:31:52.950", "LastEditorUserId": "57428", "LastActivityDate": "2014-03-14T09:31:52.950", "Score": "3", "OwnerUserId": "1179191", "Tags": "<c++><cppcheck>", "AnswerCount": "2"}});