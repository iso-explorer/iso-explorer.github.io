post_cb({"26530842": {"Id": "26530842", "PostTypeId": "2", "Body": "<p>A <code>static</code> function cannot be <code>const</code> (cv-qualified) and vice-versa. It is the <em>combination</em> of the two that is the problem.</p>\n<p>From the C++ specification \u00a7 9.4.1/2 (emphasis mine)</p>\n<blockquote>\n<p id=\"so_26530782_26530842_0\">[ Note: A <code>static</code> member function does not have a <code>this</code> pointer (9.3.2). \u2014end note ] A <code>static</code> member function shall not be <code>virtual</code>. There shall not be a <code>static</code> and a non-static member function with the same name and the same parameter types (13.1). <strong>A <code>static</code> member function shall not be declared <code>const</code>, <code>volatile</code>, or <code>const volatile</code>.</strong></p>\n</blockquote>\n<p>A <code>static</code> function has no <code>this</code> access since it is not associated with a specific instance of an object. There is no need for a <code>const</code> to be applied, it wouldn't make sense - there is no instance of an object to apply the <code>const</code> to. In a similar way, a free function cannot be <code>const</code> (or <em>cv-qualified</em>).</p>\n<p>If you wish the function to be associated with an object, remove the <code>static</code>, if you want it to be <code>static</code> remove the <code>const</code> - <strong>from your sample, remove the <code>const</code></strong>.</p>\n<p>One more note; your <code>counter</code> is declared but not defined (outside the class). It requires something like <code>int SampleClass::counter = 0;</code> in one of the translation units (cpp file).</p>\n", "LastEditorUserId": "3747990", "LastActivityDate": "2014-11-18T06:31:25.367", "Score": "12", "CreationDate": "2014-10-23T14:48:45.127", "ParentId": "26530782", "CommentCount": "0", "OwnerUserId": "3747990", "LastEditDate": "2014-11-18T06:31:25.367"}, "bq_ids": {"n4140": {"so_26530782_26530842_0": {"length": 28, "quality": 0.8484848484848485, "section_id": 5905}}, "n3337": {"so_26530782_26530842_0": {"length": 28, "quality": 0.8484848484848485, "section_id": 5677}}, "n4659": {"so_26530782_26530842_0": {"length": 28, "quality": 0.8484848484848485, "section_id": 7387}}}, "26530782": {"ViewCount": "1023", "Body": "<p>The following code is throwing an error message and I can't figure out what the issue is - is it the word <code>static</code>, or <code>const</code>? What am I doing wrong? </p>\n<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass SampleClass\n{\nprivate:\n\n    int value;\n    static int counter;\n\npublic:\n\n    SampleClass(int i)\n    {\n        value = i; \n        counter++;\n    }\n\n    static int countSomeClass() const\n    {\n        return counter;\n    }\n\n    void showValue()\n    {\n        cout &lt;&lt; value &lt;&lt; endl;\n    }\n\n};\n\nint main()\n{\n    SampleClass test(50);\n    test.showValue();\n    test.countSomeClass();\n    return 0;\n}\n</code></pre>\n<p>Error message: </p>\n<blockquote>\n<p id=\"so_26530782_26530782_0\">main.cpp:16:35: error: static member function static int SampleClass::countSomeClass() cannot have cv-qualifier<br>\n     static int countSomeClass() const</br></p>\n</blockquote>\n", "AcceptedAnswerId": "26530825", "Title": "What is throwing the error the static or the const?", "CreationDate": "2014-10-23T14:45:49.970", "Id": "26530782", "CommentCount": "3", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2014-10-23T19:12:42.827", "LastEditorUserId": "3043539", "LastActivityDate": "2014-11-18T06:31:25.367", "Score": "14", "OwnerUserId": "3532205", "Tags": "<c++><class><object><static><const>", "AnswerCount": "4"}, "26530825": {"Id": "26530825", "PostTypeId": "2", "Body": "<p>A <code>static</code> method cannot be marked as <code>const</code>: since it doesn't work on an instance, it makes no sense to specify that it cannot modify it.</p>\n<p>(you could argue that for <code>static</code> methods it could have referred to <code>static</code> methods that cannot modify the <code>static</code> data associated with the class; however, this would have no use anyway, since you cannot have a <code>const</code> class or form a <code>const</code> pointer or reference to a class, as in C++ classes aren't objects)</p>\n", "LastEditorUserId": "214671", "LastActivityDate": "2014-10-23T22:09:51.893", "Score": "23", "CreationDate": "2014-10-23T14:48:09.527", "ParentId": "26530782", "CommentCount": "3", "OwnerUserId": "214671", "LastEditDate": "2014-10-23T22:09:51.893"}, "26530832": {"Id": "26530832", "PostTypeId": "2", "Body": "<p>As the error message says, a static member function can't have a <em>cv-qualifier</em> - that is, a <code>const</code> or <code>volatile</code> qualifier. Such qualifiers are applied to <code>this</code> within a non-static member; they make no sense on a static member which has no <code>this</code>.</p>\n<p>You want the function to be static, since it doesn't depend on any instance; so remove the <code>const</code>.</p>\n", "LastActivityDate": "2014-10-23T14:48:24.150", "CommentCount": "0", "CreationDate": "2014-10-23T14:48:24.150", "ParentId": "26530782", "Score": "13", "OwnerUserId": "204847"}, "26530952": {"Id": "26530952", "PostTypeId": "2", "Body": "<p>It's related to both. </p>\n<ul>\n<li>A <code>static</code> member function <strong>does not work on an instance</strong> of the class it's a member of.</li>\n<li>The <code>const</code> keyword at the end of a member function signature indicates that this member function does not modify <strong>the instance it's called on</strong>.</li>\n</ul>\n<p>So it makes no sense (and is thus invalid) to have both in the same member function declaration.</p>\n", "LastEditorUserId": "1594913", "LastActivityDate": "2014-11-13T08:47:35.580", "Score": "5", "CreationDate": "2014-10-23T14:54:50.580", "ParentId": "26530782", "CommentCount": "0", "OwnerUserId": "1594913", "LastEditDate": "2014-11-13T08:47:35.580"}});