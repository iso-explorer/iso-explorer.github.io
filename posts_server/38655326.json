post_cb({"bq_ids": {"n4140": {"so_38655326_38656351_4": {"length": 9, "quality": 0.9, "section_id": 3903}}, "n3337": {"so_38655326_38656351_4": {"length": 7, "quality": 0.7, "section_id": 3763}}, "n4659": {"so_38655326_38656351_4": {"length": 10, "quality": 1.0, "section_id": 4774}}}, "38655326": {"ViewCount": "148", "Body": "<p>I can't find any information about new C++17 if initializer syntax \nand 'constexpr if' in: </p>\n<p><a href=\"http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/p0128r1.html\">http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/p0128r1.html</a></p>\n<p>Nevertheless, the syntax is supported by <strong>Clang-HEAD</strong>...</p>\n<pre><code>constexpr auto f() { return true; }\nint main() {\n    if constexpr(constexpr auto x = f(); x) { }\n}\n</code></pre>\n<p>online code here -&gt; <a href=\"http://melpon.org/wandbox/permlink/dj3a9ChvjhlNc8nr\">http://melpon.org/wandbox/permlink/dj3a9ChvjhlNc8nr</a></p>\n<p>Is the <code>constexpr if</code> with initializer guaranteed by the standard, as <code>constexpr if</code> is just an \"<code>if</code> with <code>constexpr</code>\" or it's not guaranteed and has to be explicitly added to the standard?</p>\n", "AcceptedAnswerId": "38656351", "Title": "Is constexpr if with initializer guaranteed by the standard? 'constexpr(constexpr auto x = f(); x) { }'", "CreationDate": "2016-07-29T09:32:07.670", "Id": "38655326", "CommentCount": "1", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2016-07-29T09:45:17.457", "LastEditorUserId": "140367", "LastActivityDate": "2016-07-29T14:21:28.027", "Score": "6", "OwnerUserId": "1293787", "Tags": "<c++><clang><constexpr><c++1z>", "AnswerCount": "1"}, "38656351": {"Id": "38656351", "PostTypeId": "2", "Body": "<p>The <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0305r1.html#constexpr\">Selection statements with initializer</a> proposal mentions <code>if constexpr</code>, and states \"the facilities of <code>if constexpr</code> work just as well with the extended <code>if</code> statement from this proposal\".</p>\n<p>The specification about <code>if</code> statement with initializer in <a href=\"http://wg21.link/N4606\">N4606</a> [stmt.if]p3 explicitly allows use of <code>if constexpr</code>.</p>\n<p>Here is what N4606 [stmt.if]p3 says:</p>\n<blockquote>\n<p id=\"so_38655326_38656351_0\">An if statement of the form</p>\n<pre><code>if constexpr[opt] ( init-statement condition ) statement\n</code></pre>\n<p id=\"so_38655326_38656351_1\">is equivalent to</p>\n<pre><code>{\n  init-statement\n  if constexpr[opt] ( condition ) statement\n}\n</code></pre>\n<p id=\"so_38655326_38656351_2\">and an if statement of the form</p>\n<pre><code>if constexpr[opt] ( init-statement condition ) statement else statement\n</code></pre>\n<p id=\"so_38655326_38656351_3\">is equivalent to</p>\n<pre><code>{\n  init-statement\n  if constexpr[opt] ( condition ) statement else statement\n}\n</code></pre>\n<p id=\"so_38655326_38656351_4\">except that names declared in the init-statement are in the same declarative region as those declared in the condition.</p>\n</blockquote>\n", "LastEditorUserId": "734069", "LastActivityDate": "2016-07-29T14:21:28.027", "Score": "7", "CreationDate": "2016-07-29T10:18:32.610", "ParentId": "38655326", "CommentCount": "1", "LastEditDate": "2016-07-29T14:21:28.027", "OwnerUserId": "4672588"}});