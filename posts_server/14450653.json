post_cb({"14450951": {"ParentId": "14450653", "CommentCount": "0", "Body": "<p>Seems like the first answer nailed it. Long story short, it wasn't the removal of the \"yes\" function (and subsequent merge of its code into main) OR the removal of one of the asterisks (i.e. \"char* argv\" instead of \"char** argv\"), but a combination of both that removed the warning (simply removing one of the asterisks with the function still in place caused a conversion error).</p>\n<p>Thanks again!</p>\n", "OwnerUserId": "1118706", "PostTypeId": "2", "Id": "14450951", "Score": "0", "CreationDate": "2013-01-22T03:09:49.700", "LastActivityDate": "2013-01-22T03:09:49.700"}, "14450653": {"CommentCount": "2", "ViewCount": "7089", "CreationDate": "2013-01-22T02:34:04.337", "LastActivityDate": "2013-01-22T03:09:49.700", "Title": "warning: second argument of \u2018int main(int, char***)\u2019 should be \u2018char **\u2019 [-Wmain] (GNU C++ compiler; Ubuntu 12.10)", "FavoriteCount": "1", "PostTypeId": "1", "Id": "14450653", "Score": "0", "Body": "<p>Trying to clone the \"yes\" command using C++ as a little experiment (this is on Ubuntu 12.10), and there's a little problem here:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;cstdio&gt;\n#include &lt;cmath&gt;\n#include &lt;cstdlib&gt;\n\nusing namespace std;\n\nvoid yes (char* cmd[]) {\n  if ( cmd != NULL ) {\n    while (true) {\n      cout &lt;&lt; cmd[1] &lt;&lt; endl;\n    }\n  } else {\n    while (true) {\n      cout &lt;&lt; \"y\" &lt;&lt; endl;\n    }\n  }\n}\n\nint main(int argc, char** argv[]) {\n  yes(argv[1]);\n  return 0;\n}\n</code></pre>\n<p>If I leave it as is, I get the warning as described in the title. If I remove one of the asterisks on argv, I get an error about converting \"char*\" to \"char**\". And removing the extra function (i.e. putting it all in main, like so):</p>\n<pre><code>int main(int argc, char** argv) {\n  if ( argv != NULL ) {\n    while (true) {\n      cout &lt;&lt; argv[1] &lt;&lt; endl;\n    }\n  } else {\n    while (true) {\n      cout &lt;&lt; \"y\" &lt;&lt; endl;\n    }\n  }\n  return 0;\n}\n</code></pre>\n<p>makes no difference about the warning.</p>\n<p>Thanks in advanced...</p>\n", "Tags": "<c++><gcc><ubuntu-12.10>", "OwnerUserId": "1118706", "AnswerCount": "4"}, "14450683": {"ParentId": "14450653", "CommentCount": "0", "Body": "<p>The 2nd parameter to main is an array of C- Strings, containing the options you pass in, so it should be <code>char*argv[]</code> or <code>char **</code>.</p>\n<p>Take a look at the <a href=\"http://liveworkspace.org/\" rel=\"nofollow\">liveworkspace snippet</a></p>\n", "OwnerUserId": "1520364", "PostTypeId": "2", "Id": "14450683", "Score": "1", "CreationDate": "2013-01-22T02:37:54.097", "LastActivityDate": "2013-01-22T02:37:54.097"}, "14450695": {"ParentId": "14450653", "CommentCount": "0", "Body": "<p>Remove the brackets from <code>argv</code> on <code>main</code>:</p>\n<pre><code>int main(int argc, char** argv) {\n</code></pre>\n<p><strong>AND</strong> from <code>cmd</code> on <code>yes</code></p>\n<pre><code>void yes (char* cmd) {\n</code></pre>\n", "OwnerUserId": "1707560", "PostTypeId": "2", "Id": "14450695", "Score": "1", "CreationDate": "2013-01-22T02:38:57.487", "LastActivityDate": "2013-01-22T02:38:57.487"}, "14450687": {"ParentId": "14450653", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>You can write <code>char **argv</code> or <code>char *argv[]</code> but not both double-star and double-brackets.</p>\n<blockquote>\n<h3>ISO/IEC 14882:2011 \u00a73.6.1 Main function</h3>\n<p id=\"so_14450653_14450687_0\">An implementation shall not predefine the <code>main</code> function. This function shall not be overloaded. It shall\n  have a return type of type <code>int</code>, but otherwise its type is implementation-defined. All implementations shall\n  allow both of the following definitions of main:</p>\n<pre><code>int main() { /* ... */ }\n</code></pre>\n<p id=\"so_14450653_14450687_1\">and</p>\n<pre><code>int main(int argc, char* argv[]) { /* ... */ }\n</code></pre>\n<p id=\"so_14450653_14450687_2\">In the latter form <code>argc</code> shall be the number of arguments passed to the program from the environment\n  in which the program is run. If <code>argc</code> is nonzero these arguments shall be supplied in <code>argv[0]</code>\n  through <code>argv[argc-1]</code> as pointers to the initial characters of null-terminated multibyte strings (NTMBSs) (17.5.2.1.4.2) and argv[0] shall be the pointer to the initial character of a ntmbs that represents the\n  name used to invoke the program or <code>\"\"</code>. The value of argc shall be non-negative. The value of <code>argv[argc]</code>\n  shall be 0. </p>\n</blockquote>\n", "OwnerUserId": "15168", "LastEditorUserId": "15168", "LastEditDate": "2013-01-22T02:44:28.417", "Id": "14450687", "Score": "4", "CreationDate": "2013-01-22T02:38:06.807", "LastActivityDate": "2013-01-22T02:44:28.417"}, "bq_ids": {"n4140": {"so_14450653_14450687_0": {"section_id": 7146, "quality": 0.75, "length": 18}, "so_14450653_14450687_2": {"section_id": 7146, "quality": 0.868421052631579, "length": 33}}, "n3337": {"so_14450653_14450687_0": {"section_id": 6890, "quality": 0.9166666666666666, "length": 22}, "so_14450653_14450687_2": {"section_id": 6890, "quality": 0.868421052631579, "length": 33}}, "n4659": {"so_14450653_14450687_0": {"section_id": 8647, "quality": 0.75, "length": 18}, "so_14450653_14450687_2": {"section_id": 8647, "quality": 0.868421052631579, "length": 33}}}});