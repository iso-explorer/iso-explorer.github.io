post_cb({"bq_ids": {"n4140": {"so_13172888_13172888_0": {"length": 17, "quality": 1.0, "section_id": 986}}, "n3337": {"so_13172888_13172888_0": {"length": 17, "quality": 1.0, "section_id": 971}}, "n4659": {"so_13172888_13172888_0": {"length": 17, "quality": 1.0, "section_id": 1049}}}, "13172888": {"ViewCount": "4412", "Body": "<p>Consider the following:</p>\n<pre><code>std::vector&lt;std::unique_ptr&lt;int&gt;&gt; ptrsToInts;\nptrsToInts.emplace_back(new int);\n</code></pre>\n<p>If reallocation occurs in the vector, and that fails (throwing <code>std::bad_alloc</code>), am I \"safe\" or will I leak an <code>int</code>?</p>\n<p>C++11 23.3.6.5 [vector.modifiers]/1 says:</p>\n<blockquote>\n<p id=\"so_13172888_13172888_0\">If an exception is thrown other than by the copy constructor, move constructor, assignment operator, or move assignment operator of <code>T</code> or by any <code>InputIterator</code> operation there are no effects.</p>\n</blockquote>\n<p>which seems to indicate that this is a potential problem. That is, if there are \"no effects\", then no <code>unique_ptr</code> ever was constructed, and therefore the destructor behavior one would rely on to <code>delete</code> that pointer would not occur. (Which might indicate that <code>emplace_back</code> should be banned for containers of <code>unique_ptr</code>s)</p>\n", "AcceptedAnswerId": "13172922", "Title": "Is it safe to use emplace_back with a container of unique_ptrs?", "CreationDate": "2012-11-01T07:40:04.987", "Id": "13172888", "CommentCount": "2", "FavoriteCount": "3", "PostTypeId": "1", "LastEditDate": "2017-10-31T15:23:46.077", "LastEditorUserId": "734069", "LastActivityDate": "2017-10-31T15:23:46.077", "Score": "20", "OwnerUserId": "82320", "Tags": "<c++><emplace><exception-safety>", "AnswerCount": "1"}, "13172922": {"Id": "13172922", "PostTypeId": "2", "Body": "<p>If reallocation is required and it fails, then yes, your object never went into the container and will thus be lost.</p>\n<p>However, it should be noted that this is pure user error. <code>emplace_back</code> should not be \"banned\" for containers of <code>unique_ptr</code>, because there are perfectly safe ways of doing this (such as <code>reserve</code>ing the space beforehand, so you know it will always be there). Also, you can pass in whole <code>unique_ptr</code>s, since it's perfectly capable of using a move constructor.</p>\n<p>So really, it's your fault for not properly wrapping your non-RAII object (the <code>int*</code>) in a RAII object before the point where you could throw exceptions.</p>\n", "LastEditorUserId": "734069", "LastActivityDate": "2012-11-01T07:48:05.873", "Score": "18", "CreationDate": "2012-11-01T07:42:27.310", "ParentId": "13172888", "CommentCount": "6", "LastEditDate": "2012-11-01T07:48:05.873", "OwnerUserId": "734069"}});