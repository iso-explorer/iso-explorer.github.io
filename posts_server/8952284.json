post_cb({"bq_ids": {"n4140": {"so_8952284_8952318_0": {"length": 11, "quality": 1.0, "section_id": 3286}}, "n3337": {"so_8952284_8952318_0": {"length": 11, "quality": 1.0, "section_id": 3156}}, "n4659": {"so_8952284_8952318_0": {"length": 7, "quality": 0.6363636363636364, "section_id": 382}}}, "8952322": {"Id": "8952322", "PostTypeId": "2", "Body": "<p><strong>What is the thing that the newly added default ctor does which satisfies the compiler?</strong> </p>\n<p>Because that is the requirement imposed by the C++ standard when declaring objects witht he <code>const</code> qualifer.</p>\n<p><strong>Reference:</strong></p>\n<p><strong>C++03 8.5 Initializers    8 Declarators</strong><br>\n\u00a79:</br></p>\n<blockquote>\n<p id=\"so_8952284_8952322_0\">If no initializer is specified for an object, and the object is of (possibly cv-qualified) non-POD class type (or array thereof), the object shall be default-initialized; <strong>if the object is of const-qualified type, the underlying class type shall have a user-declared default constructor.</strong> Otherwise, if no initializer is specified for a nonstatic object, the object and its subobjects, if any, have an indeterminate initial value90); if the object or any of its subobjects are of const-qualified type, the program is ill-formed.</p>\n</blockquote>\n", "LastActivityDate": "2012-01-21T10:37:24.930", "CommentCount": "5", "CreationDate": "2012-01-21T10:37:24.930", "ParentId": "8952284", "Score": "4", "OwnerUserId": "452307"}, "8952284": {"ViewCount": "355", "Body": "<blockquote>\n<p id=\"so_8952284_8952284_0\"><strong>Possible Duplicate:</strong><br>\n<a href=\"https://stackoverflow.com/questions/8092670/uninitialized-const\">uninitialized const</a> </br></p>\n</blockquote>\n<p>I understand that a const object needs to initialized. </p>\n<p>So for the following code,</p>\n<pre><code>class sample\n{};\n\nint main()\n{\n   const sample obj;\n   return 0;\n}\n</code></pre>\n<p>the compiler will complain because the const object <code>obj</code> is not initialized.</p>\n<p>But when i modify the code(show below) with a default constructor, the compiler will not throw any error.</p>\n<pre><code>class sample\n{\n    public:\n       sample() { }\n};\n\nint main()\n{\n    const sample obj;\n    return 0;\n}\n</code></pre>\n<p>What is the thing that the newly added default ctor does which satisfies the compiler?</p>\n", "AcceptedAnswerId": "8952322", "Title": "Compiler complaints for const object not initialized", "CreationDate": "2012-01-21T10:29:14.617", "Id": "8952284", "CommentCount": "0", "FavoriteCount": "1", "PostTypeId": "1", "LastEditDate": "2017-05-23T11:56:38.783", "LastEditorUserId": "-1", "LastActivityDate": "2012-01-21T10:39:31.857", "ClosedDate": "2012-12-10T15:35:40.873", "Score": "3", "OwnerUserId": "1220250", "Tags": "<c++><constructor><const><default-constructor>", "AnswerCount": "2"}, "8952318": {"Id": "8952318", "PostTypeId": "2", "Body": "<p>You're doing a default initialization of a const-qualified type. The C++ (C++11 draft n3290) standard has this to say about that (\u00a78.5/6 Initializers):</p>\n<blockquote>\n<p id=\"so_8952284_8952318_0\">If a program calls for the default initialization of an object of a const-qualified type T, T shall be a class type with a user-provided default constructor.</p>\n</blockquote>\n<p>Your first sample doesn't conform to this (no user-provided constructor). The second does.</p>\n", "LastActivityDate": "2012-01-21T10:36:36.320", "CommentCount": "1", "CreationDate": "2012-01-21T10:36:36.320", "ParentId": "8952284", "Score": "1", "OwnerUserId": "635608"}});