post_cb({"bq_ids": {"n4140": {"so_30448380_35169219_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 295}}, "n3337": {"so_30448380_35169219_0": {"length": 4, "quality": 0.5714285714285714, "section_id": 286}}, "n4659": {"so_30448380_35169219_0": {"length": 5, "quality": 0.7142857142857143, "section_id": 4858}}}, "35169219": {"Id": "35169219", "PostTypeId": "2", "Body": "<p>This is clearly a bug in Atomineer and still reproducable in the latest version (9.21.3.1510). As in their rules and templates documentation written the <code>%type%</code> variable inside of <code>MethodReturns.xml</code> should always resolve to the complete type (including const-modifier as well). The example there</p>\n<blockquote>\n<p id=\"so_30448380_35169219_0\">%type% The return type for the method <code>(const int*)</code></p>\n</blockquote>\n<p>is even using a const modifier and should resolve to <code>(const int*)</code> - but isn't. The problem persists already with the default <code>MethodReturns.xml</code> without any modifications (even that there is <code>%retType%</code> used, which is not contained in the <a href=\"http://www.atomineerutils.com/rulesguide.php\" rel=\"nofollow\"></a> documentation at all - but it behaves same anyway: no const modifier shown in documentation).</p>\n<p>I would suggest to contact the support of Atomineer Pro Documentation via the e-Mail on their website (support@atomineerutils.com) and report this issue to them.</p>\n", "LastActivityDate": "2016-02-03T05:33:42.547", "CommentCount": "2", "CreationDate": "2016-02-03T05:33:42.547", "ParentId": "30448380", "Score": "2", "OwnerUserId": "531840"}, "30448380": {"ViewCount": "208", "Body": "<p>I'm using <a href=\"http://www.atomineerutils.com/\" rel=\"nofollow\">Atomineer</a> 9.00 to format my code comments, but I'm having difficulty trying to determine if a return type is <code>const</code> or not. The <a href=\"http://www.atomineerutils.com/rulesguide.php\" rel=\"nofollow\">documentation</a> states that for <em>MethodReturns</em>, using <code>%type%</code> will provide the full return type (the example given is: <code>const int*</code>):</p>\n<blockquote>\n<h3>MethodReturns</h3>\n<p id=\"so_30448380_30448380_0\">Rules used to generate the description for the return values for methods (VB functions). The following special variables can be used in this section:  </p>\n<p id=\"so_30448380_30448380_1\">%type%    The return type for the method (const int*)<br>\n  %typeBase%  The return type for the method, not including any modifiers (int)</br></p>\n</blockquote>\n<p>however, when I use <code>%type%</code> it omits the <code>const</code>. An example from MethodReturns.xml:</p>\n<pre><code>&lt;Set desc=\"zzz A %type%\" /&gt;\n</code></pre>\n<p>Which will produce the following for the method:</p>\n<pre><code>//! \\brief  Performs the action.\n//! \\return zzz an int.\nint PerformAction();\n\n//! \\brief  Performs the different action.\n//! \\return zzz an int.\nconst int PerformDifferentAction();\n\n//! \\brief  Practise action.\n//! \\return zzz A std::string&amp;amp;\nstd::string&amp; PractiseAction();\n\n//! \\brief  Attempt action.\n//! \\return zzz A std::string&amp;amp;\nconst std::string&amp; AttemptAction();\n\nstruct Success;\n\n//! \\brief  Performs the action with tips action.\n//! \\return zzz A success*.\nSuccess* PerformActionWithTips();\n\n//! \\brief  Succeed at action.\n//! \\return zzz An int*.\nconst int* SucceedAtAction();\n</code></pre>\n<p>I've tried all other variations: <code>%typeBase</code> (from MethodReturns.xml) and even <code>%retTypeBase%</code>, <code>%retType%</code>, <code>%typeBase%</code> and <code>%specialType%</code> (these are mentioned in determining the return type when documenting a method in Methods.xml) but none of these include <code>const</code>.</p>\n<p>I've also tried several other types (<code>double</code>, <code>std::string</code> and custom <code>struct</code>s) so it isn't just <code>int</code>.</p>\n<p>As you can see from the example above, I've verified that the description I'm setting is definitely the one being called.</p>\n<p>Also, this seems to work completely fine with Parameters.xml (determine if a parameter type is <code>const</code> or not); however, it doesn't appear to work in Methods.xml (where <code>%retType%</code> can be used to determine the return type with modifiers)</p>\n<p><strong>How can I determine if a method is returning a <code>const</code></strong>?</p>\n", "AcceptedAnswerId": "35169219", "Title": "Atomineer: Determine if return type is const", "CreationDate": "2015-05-26T02:14:30.497", "Id": "30448380", "CommentCount": "3", "FavoriteCount": "0", "PostTypeId": "1", "LastEditDate": "2016-05-12T21:40:14.607", "LastEditorUserId": "97385", "LastActivityDate": "2016-05-12T21:40:14.607", "Score": "4", "OwnerUserId": "4143855", "Tags": "<c++><atomineer>", "AnswerCount": "2"}, "35280945": {"Id": "35280945", "PostTypeId": "2", "Body": "<p>Apologies @Tas - this was indeed a regression in Atomineer, which we fixed on the day we heard of it. I had not noticed your post here or we would have resolved the problem sooner. If you have any problems in future, please contact us directly (our email address is on the <a href=\"http://www.atomineerutils.com/\" rel=\"nofollow\">Atomineer website</a>) so we can help you quickly.</p>\n<p>(The fix will be in v9.22 which should be released soon)</p>\n", "LastActivityDate": "2016-02-08T22:56:25.740", "CommentCount": "0", "CreationDate": "2016-02-08T22:56:25.740", "ParentId": "30448380", "Score": "2", "OwnerUserId": "97385"}});