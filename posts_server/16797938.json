post_cb({"16797938": {"CommentCount": "0", "ViewCount": "857", "PostTypeId": "1", "LastEditorUserId": "1932150", "CreationDate": "2013-05-28T17:22:08.847", "LastActivityDate": "2013-09-24T19:50:29.307", "Title": "Explicit template declaration/definition in VS 2012", "AcceptedAnswerId": "16798012", "LastEditDate": "2013-05-28T17:26:45.330", "Id": "16797938", "Score": "8", "Body": "<p>The following code declares a template, declares an explicit instantiation definition, then declares an explicit instantiation declaration:</p>\n<pre><code>template &lt;typename T&gt;\nT Double(T number)\n{\n    return number * 2;\n}\n\nextern template int Double&lt;int&gt;(int);  // declaration\ntemplate int Double&lt;int&gt;(int t);       // definition\n\nint main(int argc, char* argv[])\n{\n    int n = Double(10);\n\n    return 0;\n}\n</code></pre>\n<p>gives an error:</p>\n<pre><code>error C2929: 'int Double&lt;int&gt;(int)' : explicit instantiation; cannot explicitly force and suppress instantiation of template-class member\n</code></pre>\n<p>in Visual Studio 2012.</p>\n<p>I'm under the impression from <a href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1987.htm\">http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n1987.htm</a> that this should be valid, since the definition follows the declaration.</p>\n<p>Am I missing something?</p>\n", "Tags": "<c++><templates><visual-studio-2012><c++11>", "OwnerUserId": "455613", "AnswerCount": "3"}, "18990758": {"ParentId": "16797938", "CommentCount": "1", "Body": "<p>This Visual C++ conformance bug is addressed in Visual Studio 2013, which is available <a href=\"http://www.microsoft.com/visualstudio/eng/2013-downloads\" rel=\"nofollow\">here</a>. This fix makes it possible to place <code>extern template</code> declarations in header files to suppress template instantiation and still declare an explicit instantiation in one module, which can cut down on compilation time and code bloat. Reversing the statements (that is, an explicit instantiation request, followed by an <code>extern template</code> declaration with the same template arguments) still causes error C2929, since it looks like you are now trying to suppress something you've already explicitly instantiated.</p>\n", "OwnerUserId": "2002113", "PostTypeId": "2", "Id": "18990758", "Score": "2", "CreationDate": "2013-09-24T19:50:29.307", "LastActivityDate": "2013-09-24T19:50:29.307"}, "16798012": {"ParentId": "16797938", "CommentCount": "0", "Body": "<p>Your program is well-formed. Paragraph 14.7.2/11 of the C++11 Standard specifies:</p>\n<blockquote>\n<p id=\"so_16797938_16798012_0\">If an entity is the subject of both an explicit instantiation declaration and an explicit instantiation definition\n  in the same translation unit, the definition shall follow the declaration. [...]</p>\n</blockquote>\n<p>Your program respects this constraint and does not break any other rule. Therefore, this qualifies as a bug in VC11.</p>\n", "OwnerUserId": "1932150", "PostTypeId": "2", "Id": "16798012", "Score": "7", "CreationDate": "2013-05-28T17:26:38.237", "LastActivityDate": "2013-05-28T17:26:38.237"}, "bq_ids": {"n4140": {"so_16797938_16798012_0": {"section_id": 260, "quality": 1.0, "length": 15}}, "n3337": {"so_16797938_16798012_0": {"section_id": 251, "quality": 1.0, "length": 15}}, "n4659": {"so_16797938_16798012_0": {"section_id": 267, "quality": 1.0, "length": 15}}}, "17168370": {"ParentId": "16797938", "CommentCount": "0", "Body": "<p>It seems this issue was reported to <a href=\"http://connect.microsoft.com/VisualStudio/feedback/details/620017/error-c2929-should-be-obsolete\" rel=\"nofollow\">Microsoft Connect 620017</a>:</p>\n<blockquote>\n<p id=\"so_16797938_17168370_0\">Posted by Microsoft on 12/3/2010 at 1:52 PM </p>\n<blockquote>\n<p id=\"so_16797938_17168370_5\">Hello,</p>\n<p id=\"so_16797938_17168370_6\">As you've noted, our implementation of extern templates does not\n    conform to the C++-0x standard. We still have our old extension\n    implementation. Although we don't have the resources to implement the\n    C++-0x version of this feature for the next release of Visual Studio,\n    conformance issues are a priority for us; we do currently intend to\n    implement this feature in a future version of Visual Studio.</p>\n<p id=\"so_16797938_17168370_7\">Thanks for taking the time to report this issue. We do appreciate it.</p>\n<p id=\"so_16797938_17168370_8\">Jamie Eckman Visual C++ Team</p>\n</blockquote>\n</blockquote>\n<p>That was from 2010, so by \"next release\" he meant VS2012.</p>\n", "OwnerUserId": "2497061", "PostTypeId": "2", "Id": "17168370", "Score": "2", "CreationDate": "2013-06-18T12:02:36.487", "LastActivityDate": "2013-06-18T12:02:36.487"}});