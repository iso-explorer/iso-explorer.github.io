post_cb({"bq_ids": {"n4140": {"so_13932525_13932580_0": {"length": 29, "quality": 0.8787878787878788, "section_id": 5814}}, "n3337": {"so_13932525_13932580_0": {"length": 29, "quality": 0.8787878787878788, "section_id": 5586}}}, "13932580": {"LastActivityDate": "2012-12-18T12:09:54.113", "CommentCount": "0", "Body": "<p>There is no guarantee about scheduling, other than the rather fuzzy one given at \u00a71.10 paragraph 2:</p>\n<blockquote>\n<p id=\"so_13932525_13932580_0\">Implementations should ensure that all unblocked threads eventually\n  make progress. [ <em>Note:</em> Standard library functions may silently block\n  on I/O or locks. Factors in the execution environment, including\n  externally-imposed thread priorities, may prevent an implementation\n  from making certain guarantees of forward progress. \u2014<em>end note</em> ]</p>\n</blockquote>\n<p>If you want to make sure no reader acquires the lock before the producer, you can simply acquire the lock before notifying.</p>\n<p>If you want to make sure the producer can only acquire the lock after all the readers are done with it you need some more complex synchronization, possibly involving some kind of counter.</p>\n", "CreationDate": "2012-12-18T12:03:14.633", "LastEditDate": "2012-12-18T12:09:54.113", "ParentId": "13932525", "Id": "13932580", "LastEditorUserId": "46642", "PostTypeId": "2", "Score": "5", "OwnerUserId": "46642"}, "13932525": {"CreationDate": "2012-12-18T12:00:46.350", "ViewCount": "492", "Id": "13932525", "AcceptedAnswerId": "13932580", "Score": "4", "Title": "std::condition_variable::notify_all() guarantees", "LastEditorUserId": "989331", "CommentCount": "1", "Body": "<p>Suppose there are N waiting threads (readers) on a condition variable which are notified by another  thread (producer). Now all the N readers will proceed by trying to own the unique_lock they refers to, one at a time. Now suppose the producer wants to lock the same unique_lock again, for some reasons, before any of those woken readers even started own the lock. By the standard, is there any guarantee that the producer will successfully (try to) enter its critical section only after all the notified readers have started their locking step?</p>\n", "Tags": "<c++><c++11>", "LastEditDate": "2012-12-18T12:51:37.933", "LastActivityDate": "2012-12-18T12:51:37.933", "PostTypeId": "1", "AnswerCount": "1", "OwnerUserId": "989331"}});