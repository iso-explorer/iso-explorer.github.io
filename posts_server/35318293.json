post_cb({"35318293": {"CommentCount": "4", "ViewCount": "52", "CreationDate": "2016-02-10T14:46:16.600", "LastActivityDate": "2016-02-10T17:53:41.377", "Title": "Specializing Templatized Struct Inside Templatized Class", "AcceptedAnswerId": "35318713", "PostTypeId": "1", "Id": "35318293", "Score": "1", "Body": "<pre><code>template &lt;class T1, class T2&gt;\nclass A {\n\ntemplate &lt;typename T&gt;\nstruct BarSelector {\n    void bar(T*) {\n        std::cout &lt;&lt; __PRETTY_FUNCTION__ &lt;&lt; std::endl;\n    }\n};\n\ntemplate &lt;&gt; struct BarSelector&lt;D&gt; {\n    void bar(D*) {\n        std::cout &lt;&lt; __PRETTY_FUNCTION__ &lt;&lt; std::endl;\n    }\n};\n\npublic:\n    void foo(T2* pT2) {\n        // do something\n        BarSelector&lt;T2&gt; selector;\n        selector.bar(pT2);\n    }\n};\n\nint main() {\n    C c;\n    A&lt;B, C&gt; a1;\n    a1.foo(&amp;c);\n\n    D* pD;\n    A&lt;B, D&gt; a2;\n    a2.foo(pD);\n}\n</code></pre>\n<p>Compiler gave:</p>\n<pre><code>toverloading.cpp:20:11: error: explicit specialization in non-namespace scope \u2018class A&lt;T1, T2&gt;\u2019\n template &lt;&gt; struct BarSelector&lt;D&gt; {\n           ^\ntoverloading.cpp:20:20: error: template parameters not used in partial specialization:\n template &lt;&gt; struct BarSelector&lt;D&gt; {\n                    ^\ntoverloading.cpp:20:20: error:         \u2018T1\u2019\ntoverloading.cpp:20:20: error:         \u2018T2\u2019\n</code></pre>\n<p>If I move the BarSelector outside class A, it works.</p>\n<p>What's the correct syntax to keep them inside class A?</p>\n<p>Thanks!</p>\n", "Tags": "<c++><c++11>", "OwnerUserId": "2206057", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_35318293_35318713_1": {"section_id": 264, "quality": 1.0, "length": 7}}, "n3337": {"so_35318293_35318713_1": {"section_id": 255, "quality": 1.0, "length": 7}}, "n4659": {"so_35318293_35318713_1": {"section_id": 285, "quality": 0.8571428571428571, "length": 6}}}, "35318713": {"ParentId": "35318293", "PostTypeId": "2", "CommentCount": "2", "Body": "<blockquote>\n<p id=\"so_35318293_35318713_0\">What's the correct syntax to keep them inside class A?</p>\n</blockquote>\n<p>No, explicit specialization can't be put in a class scope, it must be put in namespace scope.</p>\n<p>From the standard, $14.7.3/2 Explicit specialization [temp.expl.spec]</p>\n<blockquote>\n<p id=\"so_35318293_35318713_1\">An explicit specialization shall be declared in a namespace enclosing the specialized template.</p>\n</blockquote>\n<p>So you have to move it outside the class, such as:</p>\n<pre><code>template&lt;&gt; \ntemplate&lt;&gt; \nclass A&lt;B, D&gt;::BarSelector&lt;D&gt; {\n    void bar(double*) {\n        std::cout &lt;&lt; __PRETTY_FUNCTION__ &lt;&lt; std::endl;\n    }\n};\n</code></pre>\n<p>Note that it's impossible to specialize a member without explicitly specializing the containing class. That might be a side note about why can't explicit specialize a member template in class scope (which let you specialize a member template without explicitly specializing the outside class template).</p>\n", "OwnerUserId": "3309790", "LastEditorUserId": "3309790", "LastEditDate": "2016-02-10T17:53:41.377", "Id": "35318713", "Score": "2", "CreationDate": "2016-02-10T15:06:07.660", "LastActivityDate": "2016-02-10T17:53:41.377"}});