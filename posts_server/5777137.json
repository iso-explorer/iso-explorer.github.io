post_cb({"bq_ids": {"n4140": {"so_5777137_5777165_0": {"length": 7, "quality": 1.0, "section_id": 55}}, "n3337": {"so_5777137_5777165_0": {"length": 7, "quality": 1.0, "section_id": 50}}, "n4659": {"so_5777137_5777165_0": {"length": 7, "quality": 1.0, "section_id": 57}}}, "5777218": {"Id": "5777218", "PostTypeId": "2", "Body": "<p>These keywords are there because of historical reason. There's no difference between them. Read this:\n<a href=\"http://blogs.msdn.com/b/slippman/archive/2004/08/11/212768.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/slippman/archive/2004/08/11/212768.aspx</a></p>\n", "LastActivityDate": "2011-04-25T09:55:16.163", "CommentCount": "0", "CreationDate": "2011-04-25T09:55:16.163", "ParentId": "5777137", "Score": "3", "OwnerUserId": "205528"}, "5777165": {"Id": "5777165", "PostTypeId": "2", "Body": "<p>No difference at all. I prefer first one (mostly), but that is my personal taste. The language doesn't make any difference between them.</p>\n<p>For template parameters, the keywords <code>typename</code> and <code>class</code> are equivalent. \u00a714.1.2 says:</p>\n<blockquote>\n<p id=\"so_5777137_5777165_0\">There is no semantic difference\n  between class and typename in a\n  template-parameter.</p>\n</blockquote>\n<hr>\n<blockquote>\n<p id=\"so_5777137_5777165_1\">If both are same,then why do we have them both if one is enough?</p>\n</blockquote>\n<p>Stan Lippman explains this in his article:</p>\n<p><a href=\"http://blogs.msdn.com/b/slippman/archive/2004/08/11/212768.aspx\" rel=\"nofollow\">Why C++ Supports both Class and Typename for Type Parameters?</a></p>\n</hr>", "LastEditorUserId": "415784", "LastActivityDate": "2011-04-25T09:55:24.213", "Score": "9", "CreationDate": "2011-04-25T09:49:04.770", "ParentId": "5777137", "CommentCount": "2", "OwnerUserId": "415784", "LastEditDate": "2011-04-25T09:55:24.213"}, "5777137": {"ViewCount": "412", "Body": "<p>What is the difference between writing a template in c++ in the below both ways</p>\n<p><code>template&lt;typename T&gt;</code>  &amp;  <code>template&lt;class T&gt;</code></p>\n<p>and when do we prefer them above each other?\nIf both are same,then why do we have them both if one is enough?</p>\n", "AcceptedAnswerId": "5777165", "Title": "Templates in c++,typename and class", "CreationDate": "2011-04-25T09:46:05.407", "Id": "5777137", "CommentCount": "2", "LastEditDate": "2011-04-25T09:51:14.480", "PostTypeId": "1", "LastEditorUserId": "134713", "LastActivityDate": "2011-04-25T09:55:24.213", "Score": "6", "OwnerUserId": "134713", "Tags": "<c++><templates>", "AnswerCount": "2"}});