post_cb({"24941098": {"ParentId": "24940631", "PostTypeId": "2", "CommentCount": "0", "CreationDate": "2014-07-24T18:14:23.343", "Score": "1", "LastEditorUserId": "3549027", "LastEditDate": "2014-07-30T13:08:08.587", "Id": "24941098", "OwnerUserId": "3549027", "Body": "<p>The code you've provided violates the spec and technically shouldn't compile:</p>\n<blockquote>\n<p id=\"so_24940631_24941098_0\">12.1 Constructors</p>\n<p id=\"so_24940631_24941098_1\"><sup>1</sup> Constructors do not have names. A special declarator syntax is used to declare or define the constructor. The syntax uses:</p>\n<p id=\"so_24940631_24941098_2\">\u2014 an optional decl-specifier-seq in which each decl-specifier is either a function-specifier or constexpr,</p>\n<p id=\"so_24940631_24941098_3\">\u2014 the constructor\u2019s class name, and</p>\n<p id=\"so_24940631_24941098_4\">\u2014 a parameter list</p>\n<p id=\"so_24940631_24941098_5\">in that order. In such a declaration, optional parentheses around the constructor class name are ignored.</p>\n</blockquote>\n<p>(<em>function-specifier</em> means one of <code>inline</code>, <code>virtual</code>, or <code>explicit</code>--see 7.1.2/1--but virtual constructors are disallowed by 12.1/4)</p>\n<p>That said, Microsoft Visual C++ 2012 and 2013 (at a minimum) accept it. This appears to be a bug in those compilers.</p>\n<p>Update: Microsoft is aware of this issue, but has (understandably) decided not to bother fixing it.</p>\n<p><a href=\"https://connect.microsoft.com/VisualStudio/feedback/details/794504/keyword-struct-before-constructor-name\" rel=\"nofollow\">Bug report</a></p>\n", "LastActivityDate": "2014-07-30T13:08:08.587"}, "24940780": {"ParentId": "24940631", "PostTypeId": "2", "CommentCount": "3", "CreationDate": "2014-07-24T17:57:19.877", "Score": "5", "LastEditorUserId": "204847", "LastEditDate": "2014-07-25T10:05:29.757", "Id": "24940780", "OwnerUserId": "204847", "Body": "<p>That isn't valid, and my compiler rejects it. Constructors must be declared using the class name, with no class key (i.e. no <code>class</code>, <code>struct</code> or <code>union</code> keyword).</p>\n<p>Perhaps your compiler accepts elaborated type specifiers as constructor names; but if so, that's a non-standard extension, and you shouldn't rely on it. If you're lucky, the compiler might provide an option to disable extensions, which you should use if you don't want to be tied to that compiler for ever.</p>\n", "LastActivityDate": "2014-07-25T10:05:29.757"}, "bq_ids": {"n4140": {"so_24940631_24941098_2": {"section_id": 3887, "quality": 0.7142857142857143, "length": 5}}, "n3337": {"so_24940631_24941098_1": {"section_id": 355, "quality": 0.9166666666666666, "length": 11}, "so_24940631_24941098_5": {"section_id": 355, "quality": 1.0, "length": 10}, "so_24940631_24941098_2": {"section_id": 355, "quality": 1.0, "length": 7}}, "n4659": {"so_24940631_24941098_2": {"section_id": 4766, "quality": 0.7142857142857143, "length": 5}}}, "24940631": {"CommentCount": "13", "ViewCount": "97", "PostTypeId": "1", "LastEditorUserId": "3549027", "CreationDate": "2014-07-24T17:49:39.243", "LastActivityDate": "2014-07-30T13:08:08.587", "Title": "Can a constructor definition be prefixed with the \"class\" keyword?", "LastEditDate": "2014-07-30T13:06:30.050", "Id": "24940631", "Score": "2", "Body": "<p>Please tell me why my program gets compiled and executed when I treat the constructor as a class without private and public sections by just writing the word <code>class</code> before it as follows:</p>\n<pre><code>class sample\n{\nprivate:\n    int a,b;\n\npublic:\n    class sample(int a1){a = a1;}\n};\n</code></pre>\n", "Tags": "<c++><visual-studio-2012><visual-studio-2013><compiler-bug>", "OwnerUserId": "3874009", "AnswerCount": "2"}});