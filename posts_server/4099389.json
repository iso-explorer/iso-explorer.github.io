post_cb({"4099576": {"ParentId": "4099389", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>According to \u00a727.6.1.2.3/10:</p>\n<blockquote>\n<p id=\"so_4099389_4099576_0\">After a sentry object is constructed a character is extracted from <em>in</em>, if one is available, and stored in <em>c</em>. Otherwise, the function calls <em>in.setstate(failbit)</em>.</p>\n</blockquote>\n<p>So, when it reaches the end of the file and can no longer extract a character, it will set the fail bit, which you've set to produce an exception. Using <code>std::copy</code> doesn't change the behavior -- an <code>istream_iterator</code> reads via <code>operator&gt;&gt;</code>.</p>\n<p>You can copy the file a bit more easily:</p>\n<pre><code>std::wifstream is(\"test.ts\", std::ios::binary);\nstd::wcout &lt;&lt; is.rdbuf();\n</code></pre>\n", "OwnerUserId": "179910", "LastEditorUserId": "179910", "LastEditDate": "2010-11-04T18:00:21.420", "Id": "4099576", "Score": "0", "CreationDate": "2010-11-04T17:46:28.883", "LastActivityDate": "2010-11-04T18:00:21.420"}, "4099571": {"ParentId": "4099389", "PostTypeId": "2", "CommentCount": "4", "Body": "<p>Because you're using <code>std::istream_iterator</code>, the attempt to read a character past the end of the stream sets both <code>eofbit</code> and <code>failbit</code> (and only after some error bits are set, does the iterator become equal to the end iterator)</p>\n<p>Stripping to bare essentials and reverting to char to make it even simpler, program is equivalent to:</p>\n<pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\nint main()\n{\n    std::ifstream is(\"test.txt\", std::ios::binary);\n    is.exceptions(std::ios::failbit); // failbit only because that's what you get\n    is &gt;&gt; std::noskipws;\n    if(is)\n        for(char c; is &gt;&gt; c;) // will throw!\n            std::cout &lt;&lt; c;\n}\n</code></pre>\n", "OwnerUserId": "273767", "LastEditorUserId": "273767", "LastEditDate": "2010-11-04T18:12:30.087", "Id": "4099571", "Score": "1", "CreationDate": "2010-11-04T17:45:42.673", "LastActivityDate": "2010-11-04T18:12:30.087"}, "4099389": {"CommentCount": "1", "AcceptedAnswerId": "4099436", "PostTypeId": "1", "LastEditorUserId": "14065", "CreationDate": "2010-11-04T17:25:45.523", "LastActivityDate": "2010-11-04T18:12:30.087", "LastEditDate": "2010-11-04T17:29:20.140", "ViewCount": "2436", "FavoriteCount": "1", "Title": "Why does std::copy (from istream to ostream) raises an ios::failure exception?", "Id": "4099389", "Score": "8", "Body": "<p>The following code should copy data from an wifstream to wcout.\nAfter the content is copied, the program throws a ios::failure exception.</p>\n<pre><code>#include &lt;string&gt;\n#include &lt;iostream&gt;\n#include &lt;sstream&gt;\n#include &lt;fstream&gt;\n#include &lt;locale&gt;\n#include &lt;iterator&gt;\n#include &lt;algorithm&gt;\n\n\nint main(void)\n{\n    std::locale::global(std::locale(\"\"));\n\n    std::wifstream is;\n    is.exceptions( std::ios::failbit | std::ios::badbit );\n    is.open(\"test.ts\", std::ios::binary);\n\n    is &gt;&gt; std::noskipws;\n\n    std::istream_iterator&lt;wchar_t, wchar_t&gt; in(is);\n    std::istream_iterator&lt;wchar_t, wchar_t&gt; end;\n\n    std::copy(in, end,\n              std::ostream_iterator&lt;wchar_t, wchar_t&gt;(std::wcout));\n\n    return 0;\n} \n</code></pre>\n<p>The stream should only throw an exception (see exception mask) if anything goes bad, but not on EOF.</p>\n", "Tags": "<c++><stl><stream>", "OwnerUserId": "478141", "AnswerCount": "3"}, "4099436": {"ParentId": "4099389", "PostTypeId": "2", "CommentCount": "3", "Body": "<p>To avoid skipping white space use the std::istreambuf_iterator</p>\n<pre><code>std::copy(std::istreambuf_iterator&lt;wchar_t, wchar_t&gt;(is),\n          std::istreambuf_iterator&lt;wchar_t, wchar_t&gt;(),\n          std::ostream_iterator&lt;wchar_t, wchar_t&gt;(std::wcout));\n</code></pre>\n<p>The exception:</p>\n<p>The local may be using codecvt facet that is failing.<br>\nTry commenting out the locale line see what happens.</br></p>\n<p>Have you tried to print what the exceptions is?</p>\n<pre><code>try\n{\n    // do work\n}\ncatch(std::exception const&amp; e)\n{\n    std::cout &lt;&lt; e.what() &lt;&lt; \"\\n\";\n}\n</code></pre>\n", "OwnerUserId": "14065", "LastEditorUserId": "14065", "LastEditDate": "2010-11-04T17:38:28.620", "Id": "4099436", "Score": "1", "CreationDate": "2010-11-04T17:31:35.410", "LastActivityDate": "2010-11-04T17:38:28.620"}, "bq_ids": {"n4140": {"so_4099389_4099576_0": {"section_id": 2203, "quality": 0.9230769230769231, "length": 12}}, "n3337": {"so_4099389_4099576_0": {"section_id": 2191, "quality": 0.9230769230769231, "length": 12}}, "n4659": {"so_4099389_4099576_0": {"section_id": 2476, "quality": 0.9230769230769231, "length": 12}}}});