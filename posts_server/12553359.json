post_cb({"12553405": {"ParentId": "12553359", "CommentCount": "4", "Body": "<p>It will be evaluated as a <code>double</code> and yes, you can control it.</p>\n<p>In the standard <strong>ISO-14882:2011</strong>, <em>2.14.4 Floating literals</em>, point 1:</p>\n<blockquote>\n<p id=\"so_12553359_12553405_0\">The type of a floating literal is double unless explicitly specified by a suffix. The suffixes f and F specify float, the suffixes l and L specify long double. If the scaled value is not in the range of representable values for its type, the program is ill-formed.</p>\n</blockquote>\n", "OwnerUserId": "435800", "PostTypeId": "2", "Id": "12553405", "Score": "13", "CreationDate": "2012-09-23T15:00:30.383", "LastActivityDate": "2012-09-23T15:00:30.383"}, "12553359": {"CommentCount": "4", "AcceptedAnswerId": "12553405", "PostTypeId": "1", "LastEditorUserId": "300745", "CreationDate": "2012-09-23T14:54:56.883", "LastActivityDate": "2012-09-23T15:33:20.597", "LastEditDate": "2012-09-23T15:33:20.597", "ViewCount": "570", "FavoriteCount": "1", "Title": "How does C++11 type inference decide between floats or doubles?", "Id": "12553359", "Score": "7", "Body": "<p>Consider this example of type inference:</p>\n<pre><code>auto var = 1.0 ;\n</code></pre>\n<p>Does this evaluate to a float or double under C++11 type inference?, can this behaviour be controlled?</p>\n", "Tags": "<c++><c++11><type-inference>", "OwnerUserId": "300745", "AnswerCount": "1"}, "bq_ids": {"n4140": {"so_12553359_12553405_0": {"section_id": 5348, "quality": 0.9166666666666666, "length": 22}}, "n3337": {"so_12553359_12553405_0": {"section_id": 5145, "quality": 0.9166666666666666, "length": 22}}, "n4659": {"so_12553359_12553405_0": {"section_id": 6773, "quality": 0.9166666666666666, "length": 22}}}});