post_cb({"15761239": {"CommentCount": "3", "ViewCount": "295", "PostTypeId": "1", "LastEditorUserId": "1033896", "CreationDate": "2013-04-02T10:00:43.227", "LastActivityDate": "2013-04-02T10:09:05.443", "Title": "C++ std::set why is it associative?", "AcceptedAnswerId": "15761416", "LastEditDate": "2013-04-02T10:02:01.793", "Id": "15761239", "Score": "10", "Body": "<p>Why is <code>std::set</code> defined as an associative container?</p>\n<p>I mean <code>std::map</code> is an associative container because it maps a value to a key, but why is it a set?</p>\n", "Tags": "<c++><stl><set>", "OwnerUserId": "1494037", "AnswerCount": "2"}, "15761319": {"ParentId": "15761239", "CommentCount": "0", "Body": "<p><a href=\"http://www.cplusplus.com/reference/set/set/\" rel=\"nofollow\">reference at cplusplus.com</a></p>\n<p>In a set, the key is the value, which must be unique.</p>\n<p>Edit:</p>\n<p>\"Elements in associative containers are referenced by their key and not by their absolute position in the container.\"</p>\n", "OwnerUserId": "1734111", "PostTypeId": "2", "Id": "15761319", "Score": "2", "CreationDate": "2013-04-02T10:04:21.680", "LastActivityDate": "2013-04-02T10:04:21.680"}, "bq_ids": {"n4140": {"so_15761239_15761416_0": {"section_id": 1032, "quality": 0.8571428571428571, "length": 6}, "so_15761239_15761416_1": {"section_id": 738, "quality": 0.9, "length": 27}}, "n3337": {"so_15761239_15761416_0": {"section_id": 1017, "quality": 0.8571428571428571, "length": 6}, "so_15761239_15761416_1": {"section_id": 727, "quality": 0.9, "length": 27}}, "n4659": {"so_15761239_15761416_0": {"section_id": 1104, "quality": 0.8571428571428571, "length": 6}, "so_15761239_15761416_1": {"section_id": 796, "quality": 0.9, "length": 27}}}, "15761416": {"ParentId": "15761239", "CommentCount": "5", "Body": "<h3>23.4.6.1 Class template set overview [set.overview]</h3>\n<blockquote>\n<p id=\"so_15761239_15761416_0\">A <code>set</code> satisfies all of the requirements of [..] an associative\n  container (23.2.4) [...]</p>\n</blockquote>\n<p>Because it satisfies all pre-conditions of being an associative container, which are described in <code>23.2.4.</code> and aren't as simple as \"maps a key to a value\".</p>\n<p>The second paragraph even highlights this (or rather, highlights that it is in fact <code>map</code> and <code>multimap</code> have additional functionality over associative containers):</p>\n<h3>23.2.4 Associative containers [associative.reqmts]</h3>\n<blockquote>\n<p id=\"so_15761239_15761416_1\">2) Each associative container is parameterized on Key and an ordering relation Compare that induces a strict\n  weak ordering (25.4) on elements of Key. In addition, map and multimap associate an arbitrary type T with\n  the Key. The object of type Compare is called the comparison object of a container.</p>\n</blockquote>\n<p>The full paragraph is too large to reproduce here.</p>\n", "OwnerUserId": "673730", "PostTypeId": "2", "Id": "15761416", "Score": "4", "CreationDate": "2013-04-02T10:09:05.443", "LastActivityDate": "2013-04-02T10:09:05.443"}});