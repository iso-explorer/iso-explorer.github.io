post_cb({"19904794": {"CommentCount": "0", "ViewCount": "408", "CreationDate": "2013-11-11T11:06:51.843", "LastActivityDate": "2013-11-11T12:51:04.077", "Title": "How to initialize array of a complex object?", "AcceptedAnswerId": "19904827", "PostTypeId": "1", "Id": "19904794", "Score": "6", "Body": "<p>I have:</p>\n<pre><code>class SomeObject {\npublic:\n    SomeObject() { ... }\n    // Other fields and methods\n};\n\nclass anOtherObject {\nprivate:\n    SomeObject array[SOME_FIXED_SIZE];\npublic:\n    anOtherObject() : ... { ... }\n\n};\n</code></pre>\n<p>My question is - what does array contain when and after the constructor is called? should I initialize it by myself with a for loop or does the compiler call the default constructor for each array[i] , <code>0&lt;=i&lt;SOME_FIXED_SIZE</code> ?</p>\n", "Tags": "<c++>", "OwnerUserId": "787366", "AnswerCount": "3"}, "19905083": {"ParentId": "19904794", "PostTypeId": "2", "CommentCount": "0", "Body": "<p>You don't need initialize them. Creating an array the sub-objects will be default constructed. Unless you explicitly omit the default constructor.</p>\n<blockquote>\n<p id=\"so_19904794_19905083_0\">When an array of class objects is initialized (either explicitly or implicitly) and the elements are initialized by constructor, the constructor shall be called for each element of the array, following the subscript order; [\u00a712.6/3]</p>\n</blockquote>\n", "OwnerUserId": "952747", "LastEditorUserId": "952747", "LastEditDate": "2013-11-11T11:26:11.090", "Id": "19905083", "Score": "0", "CreationDate": "2013-11-11T11:21:03.043", "LastActivityDate": "2013-11-11T11:26:11.090"}, "19904827": {"ParentId": "19904794", "PostTypeId": "2", "CommentCount": "2", "Body": "<p>The array is <em>default-initialized</em>, which means its elements are <em>default initialized</em> one by one. Since your array holds user defined types, this means their default constructor will be called. If your array held built-in types or PODs, you would have to be explicit and <em>value-initialize</em> it, since default initialization would mean no initialization is performed on the elements:</p>\n<pre><code>anOtherObject() : array() {}\n//                ^^^^^^^ value-initialize array\n</code></pre>\n", "OwnerUserId": "661519", "LastEditorUserId": "661519", "LastEditDate": "2013-11-11T11:23:51.910", "Id": "19904827", "Score": "6", "CreationDate": "2013-11-11T11:08:44.477", "LastActivityDate": "2013-11-11T11:23:51.910"}, "bq_ids": {"n4140": {"so_19904794_19905083_0": {"section_id": 423, "quality": 0.95, "length": 19}}, "n3337": {"so_19904794_19905083_0": {"section_id": 415, "quality": 0.95, "length": 19}}, "n4659": {"so_19904794_19905083_0": {"section_id": 441, "quality": 0.95, "length": 19}}}, "19906830": {"ParentId": "19904794", "CommentCount": "0", "Body": "<p>when you create an object of type anOtherObject:\n anOtherObject  a;\nsince object a has a private array of type SomeObject, the default constructor of the SomeObject class shall be called for each element of the array. \nBefore  the constructor is called the array should contain \"garbage\" since it's statically allocated on the stack. \nAfter the constructor is called the memory should contain whatever you set in the default constructor; e.g initializing everything to 0</p>\n", "OwnerUserId": "2978901", "PostTypeId": "2", "Id": "19906830", "Score": "0", "CreationDate": "2013-11-11T12:51:04.077", "LastActivityDate": "2013-11-11T12:51:04.077"}});